; ModuleID = '../../third_party/skia/src/sksl/dsl/DSLCore.cpp'
source_filename = "../../third_party/skia/src/sksl/dsl/DSLCore.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkSL::Compiler" = type { %"class.SkSL::ErrorReporter", %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr.37", %"class.std::__1::shared_ptr.37", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule", %"class.SkSL::ModifiersPool", %"class.SkSL::Inliner", %"class.std::__1::unique_ptr.63", %"class.SkSL::String"*, i32, %"class.SkSL::String", %"class.std::__1::vector.159" }
%"class.SkSL::ErrorReporter" = type { i32 (...)** }
%"class.std::__1::shared_ptr" = type { %"class.SkSL::Context"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::Context" = type { %"class.SkSL::BuiltinTypes", %"class.SkSL::ErrorReporter"*, %class.GrShaderCaps*, %"class.SkSL::ModifiersPool"*, %"struct.SkSL::ProgramConfig"* }
%"class.SkSL::BuiltinTypes" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.SkSL::Type"* }
%"class.SkSL::Type" = type { %"class.SkSL::Symbol", i8*, %"class.SkSL::String", i32, i32, i32, %"class.SkSL::Type"*, %"class.std::__1::vector", i32, i32, %"class.std::__1::vector.8", i32, i8, i8, i8, i8, i8, %"class.SkSL::Type"*, %"class.SkSL::Type"* }
%"class.SkSL::Symbol" = type { %"class.SkSL::IRNode", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%"struct.SkSL::StringFragment" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.SkSL::Type"**, %"class.SkSL::Type"**, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.SkSL::Type"** }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"struct.SkSL::Type::Field"*, %"struct.SkSL::Type::Field"*, %"class.std::__1::__compressed_pair.10" }
%"struct.SkSL::Type::Field" = type { %"struct.SkSL::Modifiers", %"struct.SkSL::StringFragment", %"class.SkSL::Type"* }
%"struct.SkSL::Modifiers" = type { %"struct.SkSL::Layout", i32, [4 x i8] }
%"struct.SkSL::Layout" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.SkSL::Type::Field"* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.SkSL::ProgramConfig" = type { i8, %"struct.SkSL::ProgramSettings" }
%"struct.SkSL::ProgramSettings" = type { i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.36"* }
%"class.std::__1::vector.36" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::shared_ptr.37" = type { %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::SymbolTable" = type { %"class.std::__1::shared_ptr.37", %"class.std::__1::vector.166", i8, %"class.std::__1::vector.174", %"class.std::__1::forward_list", %class.SkTHashMap, %"class.SkSL::ErrorReporter"* }
%"class.std::__1::vector.166" = type { %"class.std::__1::__vector_base.167" }
%"class.std::__1::__vector_base.167" = type { %"class.std::__1::unique_ptr.168"*, %"class.std::__1::unique_ptr.168"*, %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.SkSL::Symbol"* }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.std::__1::unique_ptr.168"* }
%"class.std::__1::vector.174" = type { %"class.std::__1::__vector_base.175" }
%"class.std::__1::__vector_base.175" = type { %"class.std::__1::unique_ptr.176"*, %"class.std::__1::unique_ptr.176"*, %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.SkSL::IRNode"* }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.std::__1::unique_ptr.176"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type { %"struct.std::__1::__forward_begin_node", %"class.SkSL::String" }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.187" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair, SkSL::SymbolTable::SymbolKey, SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<SkSL::SymbolTable::SymbolKey, const SkSL::Symbol *, SkSL::SymbolTable::SymbolKey::Hash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.SkSL::SymbolTable::SymbolKey", %"class.SkSL::Symbol"* }
%"struct.SkSL::SymbolTable::SymbolKey" = type <{ %"struct.SkSL::StringFragment", i32, [4 x i8] }>
%"struct.SkSL::ParsedModule" = type { %"class.std::__1::shared_ptr.37", %"class.std::__1::shared_ptr.38" }
%"class.std::__1::shared_ptr.38" = type { %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::__shared_weak_count"* }
%"class.SkSL::IRIntrinsicMap" = type { %"class.std::__1::unordered_map", %"class.SkSL::IRIntrinsicMap"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.39" }
%"class.std::__1::__hash_table.39" = type <{ %"class.std::__1::unique_ptr.40", %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.58", [4 x i8] }>
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42", %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::__hash_node_base.43"** }
%"struct.std::__1::__hash_node_base.43" = type { %"struct.std::__1::__hash_node_base.43"* }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.std::__1::__bucket_list_deallocator.45" }
%"class.std::__1::__bucket_list_deallocator.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i64 }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.std::__1::__hash_node_base.43" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { float }
%"class.SkSL::ModifiersPool" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.17", %"class.std::__1::__compressed_pair.26", %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.33", [4 x i8] }>
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.SkSL::Inliner" = type { %"class.SkSL::Context"*, %"class.SkSL::Mangler", i32 }
%"class.SkSL::Mangler" = type { i32 }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.SkSL::IRGenerator"* }
%"class.SkSL::IRGenerator" = type <{ %"class.SkSL::Context"*, %"struct.SkSL::Program::Inputs", [6 x i8], %"class.std::__1::unique_ptr.66", %"class.std::__1::shared_ptr.37", %"class.SkSL::IRIntrinsicMap"*, %"class.std::__1::unordered_set.79", i32, [4 x i8], %"class.std::__1::unordered_set.104", %"class.std::__1::vector.130"*, %"class.std::__1::vector.143"*, %"class.SkSL::Variable"*, %"class.SkSL::Variable"*, i32, i8, [3 x i8] }>
%"struct.SkSL::Program::Inputs" = type { i8, i8 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.SkSL::ASTFile"* }
%"struct.SkSL::ASTFile" = type <{ %"class.std::__1::vector.69", %"class.SkSL::ASTNode::ID", [4 x i8] }>
%"class.std::__1::vector.69" = type { %"class.std::__1::__vector_base.70" }
%"class.std::__1::__vector_base.70" = type { %"struct.SkSL::ASTNode"*, %"struct.SkSL::ASTNode"*, %"class.std::__1::__compressed_pair.71" }
%"struct.SkSL::ASTNode" = type { %"class.std::__1::vector.69"*, %"struct.SkSL::ASTNode::NodeData", i32, i32, %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID", %"class.SkSL::ASTNode::ID" }
%"struct.SkSL::ASTNode::NodeData" = type { [128 x i8], i32 }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.SkSL::ASTNode"* }
%"class.SkSL::ASTNode::ID" = type { i32 }
%"class.std::__1::unordered_set.79" = type { %"class.std::__1::__hash_table.80" }
%"class.std::__1::__hash_table.80" = type <{ %"class.std::__1::unique_ptr.81", %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.99", [4 x i8] }>
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83", %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.std::__1::__hash_node_base.84"** }
%"struct.std::__1::__hash_node_base.84" = type { %"struct.std::__1::__hash_node_base.84"* }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__bucket_list_deallocator.86" }
%"class.std::__1::__bucket_list_deallocator.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.std::__1::__hash_node_base.84" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::unordered_set.104" = type { %"class.std::__1::__hash_table.105" }
%"class.std::__1::__hash_table.105" = type <{ %"class.std::__1::unique_ptr.106", %"class.std::__1::__compressed_pair.116", %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.125", [4 x i8] }>
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108", %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::__hash_node_base.109"** }
%"struct.std::__1::__hash_node_base.109" = type { %"struct.std::__1::__hash_node_base.109"* }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.std::__1::__bucket_list_deallocator.111" }
%"class.std::__1::__bucket_list_deallocator.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.std::__1::__hash_node_base.109" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"*, %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.SkSL::ProgramElement"* }
%"class.SkSL::ProgramElement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.std::__1::unique_ptr.132"* }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"class.SkSL::ProgramElement"**, %"class.SkSL::ProgramElement"**, %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.SkSL::ProgramElement"** }
%"class.SkSL::Variable" = type <{ %"class.SkSL::Symbol", %"class.SkSL::VarDeclaration"*, %"struct.SkSL::Modifiers"*, i8, i8, [6 x i8] }>
%"class.SkSL::VarDeclaration" = type { %"class.SkSL::Statement", %"class.SkSL::Variable"*, %"class.SkSL::Type"*, i32, %"class.std::__1::unique_ptr.150" }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.SkSL::Expression"* }
%"class.SkSL::Expression" = type { %"class.SkSL::IRNode", %"class.SkSL::Type"* }
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.159" = type { %"class.std::__1::__vector_base.160" }
%"class.std::__1::__vector_base.160" = type { i64*, i64*, %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { i64* }
%"class.SkSL::dsl::DSLWriter" = type { %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.202", %"class.SkSL::Compiler"*, %"class.std::__1::unique_ptr.208", %"struct.SkSL::ProgramConfig"*, %"class.SkSL::ModifiersPool"*, %"class.std::__1::vector.130", %"class.std::__1::vector.143", %"class.SkSL::dsl::ErrorHandler"*, %"struct.SkSL::ProgramSettings", %"class.SkSL::Mangler", %"class.std::__1::stack" }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"struct.SkSL::ProgramConfig"* }
%"class.std::__1::unique_ptr.202" = type { %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.SkSL::ModifiersPool"* }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.SkSL::Pool"* }
%"class.SkSL::Pool" = type { %"class.std::__1::unique_ptr.211" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %class.GrMemoryPool* }
%class.GrMemoryPool = type { %class.GrBlockAllocator }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%"class.SkSL::dsl::ErrorHandler" = type { i32 (...)** }
%"class.std::__1::stack" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.220" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.SkSL::dsl::DSLVar" = type <{ %"class.SkSL::dsl::DSLModifiers", %"class.SkSL::dsl::DSLType", i32, [4 x i8], %"class.std::__1::unique_ptr.227", %"class.SkSL::Variable"*, i8*, i8*, %"class.SkSL::dsl::DSLExpression", i8, i8, [6 x i8] }>
%"class.SkSL::dsl::DSLModifiers" = type { %"struct.SkSL::Modifiers" }
%"class.SkSL::dsl::DSLType" = type <{ %"class.SkSL::Type"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.SkSL::Statement"* }
%"class.SkSL::dsl::DSLExpression" = type { %"class.std::__1::unique_ptr.150" }
%"class.SkSL::dsl::DSLStatement" = type { %"class.std::__1::unique_ptr.227" }
%"class.SkSL::dsl::PositionInfo" = type <{ i8*, i32, [4 x i8] }>
%"class.SkSL::dsl::DSLPossibleStatement" = type { %"class.std::__1::unique_ptr.227" }
%"class.SkSL::dsl::DSLPossibleExpression" = type { %"class.std::__1::unique_ptr.150" }
%class.SkTArray = type { %"class.SkSL::dsl::DSLCase"*, i64 }
%"class.SkSL::dsl::DSLCase" = type { %"class.SkSL::dsl::DSLExpression", %class.SkSTArray }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.233 }
%class.SkAlignedSTStorage = type { [16 x i8] }
%class.SkTArray.233 = type { %"class.std::__1::unique_ptr.227"*, i64 }
%class.SkSTArray.276 = type { %class.SkAlignedSTStorage.277, %class.SkTArray.278 }
%class.SkAlignedSTStorage.277 = type { [16 x i8] }
%class.SkTArray.278 = type { %"class.std::__1::unique_ptr.150"*, i64 }
%class.SkTArray.279 = type { %class.SkSTArray*, i64 }
%class.SkSTArray.281 = type { %class.SkAlignedSTStorage.282, %class.SkTArray.283 }
%class.SkAlignedSTStorage.282 = type { [4 x i8] }
%class.SkTArray.283 = type { i8*, i64 }
%"class.SkSL::BreakStatement" = type { %"class.SkSL::Statement" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.SkSL::ContinueStatement" = type { %"class.SkSL::Statement" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.SkSL::GlobalVarDeclaration" = type { %"class.SkSL::ProgramElement", %"class.std::__1::unique_ptr.227" }
%"class.SkSL::DiscardStatement" = type { %"class.SkSL::Statement" }
%"class.SkSL::ReturnStatement" = type { %"class.SkSL::Statement", %"class.std::__1::unique_ptr.150" }

$_ZN4SkSL3dsl7DSLCore13DeclareGlobalERNS0_6DSLVarENS0_12PositionInfoE = comdat any

$_ZN4SkSL3dsl7DSLCore6SwitchENS0_13DSLExpressionE8SkTArrayINS0_7DSLCaseELb0EEb = comdat any

$_ZN8SkTArrayIN4SkSL3dsl7DSLCaseELb0EEC2EOS3_ = comdat any

$_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_ = comdat any

$_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_EEENS0_21DSLPossibleExpressionEPKcDpT_ = comdat any

$_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_S3_EEENS0_21DSLPossibleExpressionEPKcDpT_ = comdat any

$_ZN4SkSL3dsl7DSLCore7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE = comdat any

$_ZN4SkSL3dsl7DSLCore7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeES4_NS0_12PositionInfoE = comdat any

$_ZN4SkSL3dsl7DSLCore7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeES4_S4_NS0_12PositionInfoE = comdat any

$_ZN4SkSL3dsl7DSLCore7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeES4_S4_S4_NS0_12PositionInfoE = comdat any

$_ZN4SkSL14BreakStatementD0Ev = comdat any

$_ZNK4SkSL14BreakStatement11descriptionEv = comdat any

$_ZNK4SkSL9Statement7isEmptyEv = comdat any

$_ZNK4SkSL14BreakStatement5cloneEv = comdat any

$_ZN4SkSL6IRNodeD2Ev = comdat any

$_ZN4SkSL17ContinueStatementD0Ev = comdat any

$_ZNK4SkSL17ContinueStatement11descriptionEv = comdat any

$_ZNK4SkSL17ContinueStatement5cloneEv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZN4SkSL20GlobalVarDeclarationD2Ev = comdat any

$_ZN4SkSL20GlobalVarDeclarationD0Ev = comdat any

$_ZNK4SkSL20GlobalVarDeclaration11descriptionEv = comdat any

$_ZNK4SkSL20GlobalVarDeclaration5cloneEv = comdat any

$_ZN4SkSL16DiscardStatementD0Ev = comdat any

$_ZNK4SkSL16DiscardStatement11descriptionEv = comdat any

$_ZNK4SkSL16DiscardStatement5cloneEv = comdat any

$_ZN4SkSL15ReturnStatementD2Ev = comdat any

$_ZN4SkSL15ReturnStatementD0Ev = comdat any

$_ZNK4SkSL15ReturnStatement11descriptionEv = comdat any

$_ZNK4SkSL15ReturnStatement5cloneEv = comdat any

$_ZN8SkTArrayI9SkSTArrayILi2ENSt3__110unique_ptrIN4SkSL9StatementENS1_14default_deleteIS4_EEEELb0EELb0EEC2EOS9_ = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZN8SkTArrayI9SkSTArrayILi2ENSt3__110unique_ptrIN4SkSL9StatementENS1_14default_deleteIS4_EEEELb0EELb0EE12checkReallocEiNS9_11ReallocTypeE = comdat any

$_ZN8SkTArrayI9SkSTArrayILi2ENSt3__110unique_ptrIN4SkSL9StatementENS1_14default_deleteIS4_EEEELb0EELb0EE4moveILb0EEENS1_9enable_ifIXntT_EvE4typeEPv = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_ = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE = comdat any

$_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_ = comdat any

$_ZTVN4SkSL14BreakStatementE = comdat any

$_ZTVN4SkSL17ContinueStatementE = comdat any

$_ZTVN4SkSL20GlobalVarDeclarationE = comdat any

$_ZTVN4SkSL16DiscardStatementE = comdat any

$_ZTVN4SkSL15ReturnStatementE = comdat any

@.str = private unnamed_addr constant [48 x i8] c"../../third_party/skia/src/sksl/dsl/DSLCore.cpp\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"abs\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"any\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"atan\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"ceil\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"clamp\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"cos\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"cross\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"degrees\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"distance\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"dot\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"equal\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"exp\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"exp2\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"faceforward\00", align 1
@.str.16 = private unnamed_addr constant [6 x i8] c"fract\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"floor\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"greaterThan\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"greaterThanEqual\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"inverse\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"inversesqrt\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.23 = private unnamed_addr constant [9 x i8] c"lessThan\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"lessThanEqual\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"log\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"log2\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"max\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"min\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"mix\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"mod\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"normalize\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"notEqual\00", align 1
@.str.33 = private unnamed_addr constant [4 x i8] c"pow\00", align 1
@.str.34 = private unnamed_addr constant [8 x i8] c"radians\00", align 1
@.str.35 = private unnamed_addr constant [8 x i8] c"reflect\00", align 1
@.str.36 = private unnamed_addr constant [8 x i8] c"refract\00", align 1
@.str.37 = private unnamed_addr constant [7 x i8] c"sample\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"saturate\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"sign\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"sin\00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c"smoothstep\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"sqrt\00", align 1
@.str.43 = private unnamed_addr constant [5 x i8] c"step\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"tan\00", align 1
@.str.45 = private unnamed_addr constant [9 x i8] c"unpremul\00", align 1
@.str.46 = private unnamed_addr constant [13 x i8] c"sk_FragColor\00", align 1
@.str.47 = private unnamed_addr constant [13 x i8] c"sk_FragCoord\00", align 1
@_ZTVN4SkSL14BreakStatementE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::BreakStatement"*)* @_ZN4SkSL14BreakStatementD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::BreakStatement"*)* @_ZNK4SkSL14BreakStatement11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::Statement"*)* @_ZNK4SkSL9Statement7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::BreakStatement"*)* @_ZNK4SkSL14BreakStatement5cloneEv to i8*)] }, comdat, align 8
@.str.48 = private unnamed_addr constant [7 x i8] c"break;\00", align 1
@_ZTVN4SkSL17ContinueStatementE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::ContinueStatement"*)* @_ZN4SkSL17ContinueStatementD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::ContinueStatement"*)* @_ZNK4SkSL17ContinueStatement11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::Statement"*)* @_ZNK4SkSL9Statement7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::ContinueStatement"*)* @_ZNK4SkSL17ContinueStatement5cloneEv to i8*)] }, comdat, align 8
@.str.50 = private unnamed_addr constant [10 x i8] c"continue;\00", align 1
@.str.51 = private unnamed_addr constant [43 x i8] c"error: variable has already been declared\0A\00", align 1
@.str.52 = private unnamed_addr constant [58 x i8] c"error: this variable must be declared with DeclareGlobal\0A\00", align 1
@_ZTVN4SkSL20GlobalVarDeclarationE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::GlobalVarDeclaration"*)* @_ZN4SkSL20GlobalVarDeclarationD2Ev to i8*), i8* bitcast (void (%"class.SkSL::GlobalVarDeclaration"*)* @_ZN4SkSL20GlobalVarDeclarationD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::GlobalVarDeclaration"*)* @_ZNK4SkSL20GlobalVarDeclaration11descriptionEv to i8*), i8* bitcast (%"class.SkSL::ProgramElement"* (%"class.SkSL::GlobalVarDeclaration"*)* @_ZNK4SkSL20GlobalVarDeclaration5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL16DiscardStatementE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::IRNode"*)* @_ZN4SkSL6IRNodeD2Ev to i8*), i8* bitcast (void (%"class.SkSL::DiscardStatement"*)* @_ZN4SkSL16DiscardStatementD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::DiscardStatement"*)* @_ZNK4SkSL16DiscardStatement11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::Statement"*)* @_ZNK4SkSL9Statement7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::DiscardStatement"*)* @_ZNK4SkSL16DiscardStatement5cloneEv to i8*)] }, comdat, align 8
@_ZTVN4SkSL15ReturnStatementE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkSL::ReturnStatement"*)* @_ZN4SkSL15ReturnStatementD2Ev to i8*), i8* bitcast (void (%"class.SkSL::ReturnStatement"*)* @_ZN4SkSL15ReturnStatementD0Ev to i8*), i8* bitcast (void (%"class.SkSL::String"*, %"class.SkSL::ReturnStatement"*)* @_ZNK4SkSL15ReturnStatement11descriptionEv to i8*), i8* bitcast (i1 (%"class.SkSL::Statement"*)* @_ZNK4SkSL9Statement7isEmptyEv to i8*), i8* bitcast (%"class.SkSL::Statement"* (%"class.SkSL::ReturnStatement"*)* @_ZNK4SkSL15ReturnStatement5cloneEv to i8*)] }, comdat, align 8
@.str.54 = private unnamed_addr constant [8 x i8] c"return \00", align 1
@.str.55 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.56 = private unnamed_addr constant [8 x i8] c"return;\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl5StartEPNS_8CompilerENS_11ProgramKindE(%"class.SkSL::Compiler"*, i8 signext) local_unnamed_addr #0 {
  %3 = alloca %"struct.SkSL::ParsedModule", align 8
  %4 = alloca %"struct.SkSL::ProgramSettings", align 8
  %5 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %4, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 48, i1 false)
  store i8 1, i8* %6, align 2
  %7 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %4, i64 0, i32 3
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %4, i64 0, i32 4
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %4, i64 0, i32 5
  %10 = bitcast i32* %9 to <4 x i32>*
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 0>, <4 x i32>* %10, align 8
  %11 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %4, i64 0, i32 9
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %4, i64 0, i32 10
  store i8 1, i8* %12, align 4
  %13 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %4, i64 0, i32 11
  store i8 1, i8* %13, align 1
  %14 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %4, i64 0, i32 12
  store i8 1, i8* %14, align 2
  %15 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %4, i64 0, i32 13
  store i32 50, i32* %15, align 8
  %16 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %4, i64 0, i32 14
  store i8 0, i8* %16, align 4
  %17 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %4, i64 0, i32 15
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %4, i64 0, i32 16
  store i8 1, i8* %18, align 2
  %19 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %4, i64 0, i32 17
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %4, i64 0, i32 18
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %4, i64 0, i32 19
  store i8 1, i8* %21, align 1
  %22 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %4, i64 0, i32 20
  store i8 1, i8* %22, align 2
  %23 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %4, i64 0, i32 21
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %"struct.SkSL::ProgramSettings", %"struct.SkSL::ProgramSettings"* %4, i64 0, i32 22
  store %"class.std::__1::vector.36"* null, %"class.std::__1::vector.36"** %24, align 8
  %25 = tail call dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler20moduleForProgramKindENS_11ProgramKindE(%"class.SkSL::Compiler"* %0, i8 signext %1) #10
  %26 = bitcast %"struct.SkSL::ParsedModule"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #10
  %27 = tail call i8* @_Znwm(i64 192) #11
  %28 = bitcast i8* %27 to %"class.SkSL::dsl::DSLWriter"*
  %29 = bitcast %"struct.SkSL::ParsedModule"* %25 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"struct.SkSL::ParsedModule"* %3 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %3, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %25, i64 0, i32 0, i32 1
  %34 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %33, align 8
  store %"class.std::__1::__shared_weak_count"* %34, %"class.std::__1::__shared_weak_count"** %32, align 8
  %35 = icmp eq %"class.std::__1::__shared_weak_count"* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %2
  %37 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %34, i64 0, i32 0, i32 1
  %38 = atomicrmw add i64* %37, i64 1 monotonic
  br label %39

39:                                               ; preds = %36, %2
  %40 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %3, i64 0, i32 1
  %41 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %25, i64 0, i32 1
  %42 = bitcast %"class.std::__1::shared_ptr.38"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::shared_ptr.38"* %40 to i64*
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %3, i64 0, i32 1, i32 1
  %46 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %25, i64 0, i32 1, i32 1
  %47 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %46, align 8
  store %"class.std::__1::__shared_weak_count"* %47, %"class.std::__1::__shared_weak_count"** %45, align 8
  %48 = icmp eq %"class.std::__1::__shared_weak_count"* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %39
  %50 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %47, i64 0, i32 0, i32 1
  %51 = atomicrmw add i64* %50, i64 1 monotonic
  br label %52

52:                                               ; preds = %39, %49
  call void @_ZN4SkSL3dsl9DSLWriterC1EPNS_8CompilerENS_11ProgramKindERKNS_15ProgramSettingsENS_12ParsedModuleEb(%"class.SkSL::dsl::DSLWriter"* nonnull %28, %"class.SkSL::Compiler"* %0, i8 signext %1, %"struct.SkSL::ProgramSettings"* nonnull dereferenceable(56) %4, %"struct.SkSL::ParsedModule"* nonnull byval(%"struct.SkSL::ParsedModule") align 8 %3, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #10
  call void @_ZN4SkSL3dsl9DSLWriter11SetInstanceENSt3__110unique_ptrIS1_NS2_14default_deleteIS1_EEEE(%"class.SkSL::dsl::DSLWriter"* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl5StartEPNS_8CompilerENS_11ProgramKindERKNS_15ProgramSettingsE(%"class.SkSL::Compiler"*, i8 signext, %"struct.SkSL::ProgramSettings"* dereferenceable(56)) local_unnamed_addr #0 {
  %4 = alloca %"struct.SkSL::ParsedModule", align 8
  %5 = tail call dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler20moduleForProgramKindENS_11ProgramKindE(%"class.SkSL::Compiler"* %0, i8 signext %1) #10
  %6 = bitcast %"struct.SkSL::ParsedModule"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6)
  %7 = tail call i8* @_Znwm(i64 192) #11
  %8 = bitcast i8* %7 to %"class.SkSL::dsl::DSLWriter"*
  %9 = bitcast %"struct.SkSL::ParsedModule"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"struct.SkSL::ParsedModule"* %4 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %4, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %5, i64 0, i32 0, i32 1
  %14 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %13, align 8
  store %"class.std::__1::__shared_weak_count"* %14, %"class.std::__1::__shared_weak_count"** %12, align 8
  %15 = icmp eq %"class.std::__1::__shared_weak_count"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %14, i64 0, i32 0, i32 1
  %18 = atomicrmw add i64* %17, i64 1 monotonic
  br label %19

19:                                               ; preds = %16, %3
  %20 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %4, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %5, i64 0, i32 1
  %22 = bitcast %"class.std::__1::shared_ptr.38"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::shared_ptr.38"* %20 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %4, i64 0, i32 1, i32 1
  %26 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %5, i64 0, i32 1, i32 1
  %27 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %26, align 8
  store %"class.std::__1::__shared_weak_count"* %27, %"class.std::__1::__shared_weak_count"** %25, align 8
  %28 = icmp eq %"class.std::__1::__shared_weak_count"* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %27, i64 0, i32 0, i32 1
  %31 = atomicrmw add i64* %30, i64 1 monotonic
  br label %32

32:                                               ; preds = %19, %29
  tail call void @_ZN4SkSL3dsl9DSLWriterC1EPNS_8CompilerENS_11ProgramKindERKNS_15ProgramSettingsENS_12ParsedModuleEb(%"class.SkSL::dsl::DSLWriter"* nonnull %8, %"class.SkSL::Compiler"* %0, i8 signext %1, %"struct.SkSL::ProgramSettings"* dereferenceable(56) %2, %"struct.SkSL::ParsedModule"* nonnull byval(%"struct.SkSL::ParsedModule") align 8 %4, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6)
  tail call void @_ZN4SkSL3dsl9DSLWriter11SetInstanceENSt3__110unique_ptrIS1_NS2_14default_deleteIS1_EEEE(%"class.SkSL::dsl::DSLWriter"* nonnull %8) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4SkSL3dsl9DSLWriter11SetInstanceENSt3__110unique_ptrIS1_NS2_14default_deleteIS1_EEEE(%"class.SkSL::dsl::DSLWriter"*) local_unnamed_addr #2

declare dereferenceable(32) %"struct.SkSL::ParsedModule"* @_ZN4SkSL8Compiler20moduleForProgramKindENS_11ProgramKindE(%"class.SkSL::Compiler"*, i8 signext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl11StartModuleEPNS_8CompilerENS_11ProgramKindERKNS_15ProgramSettingsENS_12ParsedModuleE(%"class.SkSL::Compiler"*, i8 signext, %"struct.SkSL::ProgramSettings"* dereferenceable(56), %"struct.SkSL::ParsedModule"* nocapture readonly byval(%"struct.SkSL::ParsedModule") align 8) local_unnamed_addr #0 {
  %5 = alloca %"struct.SkSL::ParsedModule", align 8
  %6 = bitcast %"struct.SkSL::ParsedModule"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6)
  %7 = tail call i8* @_Znwm(i64 192) #11
  %8 = bitcast i8* %7 to %"class.SkSL::dsl::DSLWriter"*
  %9 = bitcast %"struct.SkSL::ParsedModule"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"struct.SkSL::ParsedModule"* %5 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %5, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %3, i64 0, i32 0, i32 1
  %14 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %13, align 8
  store %"class.std::__1::__shared_weak_count"* %14, %"class.std::__1::__shared_weak_count"** %12, align 8
  %15 = icmp eq %"class.std::__1::__shared_weak_count"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %14, i64 0, i32 0, i32 1
  %18 = atomicrmw add i64* %17, i64 1 monotonic
  br label %19

19:                                               ; preds = %16, %4
  %20 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %5, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %3, i64 0, i32 1
  %22 = bitcast %"class.std::__1::shared_ptr.38"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::shared_ptr.38"* %20 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %5, i64 0, i32 1, i32 1
  %26 = getelementptr inbounds %"struct.SkSL::ParsedModule", %"struct.SkSL::ParsedModule"* %3, i64 0, i32 1, i32 1
  %27 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %26, align 8
  store %"class.std::__1::__shared_weak_count"* %27, %"class.std::__1::__shared_weak_count"** %25, align 8
  %28 = icmp eq %"class.std::__1::__shared_weak_count"* %27, null
  br i1 %28, label %40, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %27, i64 0, i32 0, i32 1
  %31 = atomicrmw add i64* %30, i64 1 monotonic
  tail call void @_ZN4SkSL3dsl9DSLWriterC1EPNS_8CompilerENS_11ProgramKindERKNS_15ProgramSettingsENS_12ParsedModuleEb(%"class.SkSL::dsl::DSLWriter"* nonnull %8, %"class.SkSL::Compiler"* %0, i8 signext %1, %"struct.SkSL::ProgramSettings"* dereferenceable(56) %2, %"struct.SkSL::ParsedModule"* nonnull byval(%"struct.SkSL::ParsedModule") align 8 %5, i1 zeroext true) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6)
  tail call void @_ZN4SkSL3dsl9DSLWriter11SetInstanceENSt3__110unique_ptrIS1_NS2_14default_deleteIS1_EEEE(%"class.SkSL::dsl::DSLWriter"* nonnull %8) #10
  %32 = atomicrmw add i64* %30, i64 -1 acq_rel
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %41

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %27, i64 0, i32 0
  %36 = bitcast %"class.std::__1::__shared_weak_count"* %27 to void (%"class.std::__1::__shared_count"*)***
  %37 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %37, i64 2
  %39 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %38, align 8
  tail call void %39(%"class.std::__1::__shared_count"* %35) #10
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %27) #10
  br label %41

40:                                               ; preds = %19
  tail call void @_ZN4SkSL3dsl9DSLWriterC1EPNS_8CompilerENS_11ProgramKindERKNS_15ProgramSettingsENS_12ParsedModuleEb(%"class.SkSL::dsl::DSLWriter"* nonnull %8, %"class.SkSL::Compiler"* %0, i8 signext %1, %"struct.SkSL::ProgramSettings"* dereferenceable(56) %2, %"struct.SkSL::ParsedModule"* nonnull byval(%"struct.SkSL::ParsedModule") align 8 %5, i1 zeroext true) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6)
  tail call void @_ZN4SkSL3dsl9DSLWriter11SetInstanceENSt3__110unique_ptrIS1_NS2_14default_deleteIS1_EEEE(%"class.SkSL::dsl::DSLWriter"* nonnull %8) #10
  br label %41

41:                                               ; preds = %40, %34, %29
  %42 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %13, align 8
  %43 = icmp eq %"class.std::__1::__shared_weak_count"* %42, null
  br i1 %43, label %54, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %42, i64 0, i32 0, i32 1
  %46 = atomicrmw add i64* %45, i64 -1 acq_rel
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %54

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %42, i64 0, i32 0
  %50 = bitcast %"class.std::__1::__shared_weak_count"* %42 to void (%"class.std::__1::__shared_count"*)***
  %51 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %51, i64 2
  %53 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %52, align 8
  tail call void %53(%"class.std::__1::__shared_count"* %49) #10
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %42) #10
  br label %54

54:                                               ; preds = %41, %44, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl3EndEv() local_unnamed_addr #0 {
  tail call void @_ZN4SkSL3dsl9DSLWriter11SetInstanceENSt3__110unique_ptrIS1_NS2_14default_deleteIS1_EEEE(%"class.SkSL::dsl::DSLWriter"* null) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl15SetErrorHandlerEPNS0_12ErrorHandlerE(%"class.SkSL::dsl::ErrorHandler"*) local_unnamed_addr #0 {
  %2 = tail call dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() #10
  %3 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %2, i64 0, i32 8
  store %"class.SkSL::dsl::ErrorHandler"* %0, %"class.SkSL::dsl::ErrorHandler"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl12sk_FragColorEv(%"class.SkSL::dsl::DSLVar"* noalias sret) local_unnamed_addr #0 {
  tail call void @_ZN4SkSL3dsl6DSLVarC1EPKc(%"class.SkSL::dsl::DSLVar"* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i64 0, i64 0)) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl12sk_FragCoordEv(%"class.SkSL::dsl::DSLVar"* noalias sret) local_unnamed_addr #0 {
  tail call void @_ZN4SkSL3dsl6DSLVarC1EPKc(%"class.SkSL::dsl::DSLVar"* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0)) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl5BreakEv(%"class.SkSL::dsl::DSLStatement"* noalias sret) local_unnamed_addr #0 {
  %2 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #10, !noalias !2
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  store i32 -1, i32* %4, align 8, !noalias !2
  %5 = getelementptr inbounds i8, i8* %2, i64 12
  %6 = bitcast i8* %5 to i32*
  store i32 17, i32* %6, align 4, !noalias !2
  %7 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL14BreakStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !noalias !2
  %8 = bitcast i8* %2 to %"class.SkSL::Statement"*
  tail call void @_ZN4SkSL3dsl12DSLStatementC1ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLStatement"* %0, %"class.SkSL::Statement"* %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl8ContinueEv(%"class.SkSL::dsl::DSLStatement"* noalias sret) local_unnamed_addr #0 {
  %2 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #10, !noalias !5
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  store i32 -1, i32* %4, align 8, !noalias !5
  %5 = getelementptr inbounds i8, i8* %2, i64 12
  %6 = bitcast i8* %5 to i32*
  store i32 18, i32* %6, align 4, !noalias !5
  %7 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL17ContinueStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !noalias !5
  %8 = bitcast i8* %2 to %"class.SkSL::Statement"*
  tail call void @_ZN4SkSL3dsl12DSLStatementC1ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLStatement"* %0, %"class.SkSL::Statement"* %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl7DeclareERNS0_6DSLVarENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* noalias sret, %"class.SkSL::dsl::DSLVar"* dereferenceable(152), i8*, i32) local_unnamed_addr #0 {
  %5 = alloca { i8*, i32 }, align 8
  %6 = bitcast { i8*, i32 }* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6)
  %7 = bitcast { i8*, i32 }* %5 to %"class.SkSL::dsl::PositionInfo"*
  %8 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i64 0, i32 0
  store i8* %2, i8** %8, align 8, !noalias !8
  %9 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %5, i64 0, i32 1
  store i32 %3, i32* %9, align 8, !noalias !8
  %10 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %1, i64 0, i32 10
  %11 = load i8, i8* %10, align 1, !range !11, !noalias !8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %4
  call void @_ZN4SkSL3dsl9DSLWriter11ReportErrorEPKcPNS0_12PositionInfoE(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.51, i64 0, i64 0), %"class.SkSL::dsl::PositionInfo"* nonnull %7) #10
  br label %14

14:                                               ; preds = %13, %4
  %15 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %1, i64 0, i32 9
  %16 = load i8, i8* %15, align 8, !noalias !8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  call void @_ZN4SkSL3dsl9DSLWriter11ReportErrorEPKcPNS0_12PositionInfoE(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.52, i64 0, i64 0), %"class.SkSL::dsl::PositionInfo"* nonnull %7) #10
  br label %19

19:                                               ; preds = %14, %18
  store i8 1, i8* %10, align 1, !noalias !8
  %20 = call %"class.SkSL::Statement"* @_ZN4SkSL3dsl9DSLWriter11DeclarationERNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* dereferenceable(152) %1) #10, !noalias !8
  call void @_ZN4SkSL3dsl12DSLStatementC1ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLStatement"* %0, %"class.SkSL::Statement"* %20) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13DeclareGlobalERNS0_6DSLVarENS0_12PositionInfoE(%"class.SkSL::dsl::DSLVar"* dereferenceable(152), i8*, i32) local_unnamed_addr #0 {
  tail call void @_ZN4SkSL3dsl7DSLCore13DeclareGlobalERNS0_6DSLVarENS0_12PositionInfoE(%"class.SkSL::dsl::DSLVar"* dereferenceable(152) %0, i8* %1, i32 %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL3dsl7DSLCore13DeclareGlobalERNS0_6DSLVarENS0_12PositionInfoE(%"class.SkSL::dsl::DSLVar"* dereferenceable(152), i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca { i8*, i32 }, align 8
  %5 = alloca %"class.std::__1::unique_ptr.132", align 8
  %6 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i64 0, i32 0
  store i8* %1, i8** %6, align 8
  %7 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %4, i64 0, i32 1
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %0, i64 0, i32 10
  %9 = load i8, i8* %8, align 1, !range !11
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %3
  %12 = bitcast { i8*, i32 }* %4 to %"class.SkSL::dsl::PositionInfo"*
  call void @_ZN4SkSL3dsl9DSLWriter11ReportErrorEPKcPNS0_12PositionInfoE(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.51, i64 0, i64 0), %"class.SkSL::dsl::PositionInfo"* nonnull %12) #10
  br label %13

13:                                               ; preds = %3, %11
  store i8 1, i8* %8, align 1
  %14 = getelementptr inbounds %"class.SkSL::dsl::DSLVar", %"class.SkSL::dsl::DSLVar"* %0, i64 0, i32 9
  store i8 0, i8* %14, align 8
  %15 = call %"class.SkSL::Statement"* @_ZN4SkSL3dsl9DSLWriter11DeclarationERNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* dereferenceable(152) %0) #10
  %16 = icmp eq %"class.SkSL::Statement"* %15, null
  br i1 %16, label %56, label %17

17:                                               ; preds = %13
  %18 = ptrtoint %"class.SkSL::Statement"* %15 to i64
  %19 = call dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() #10
  %20 = bitcast %"class.std::__1::unique_ptr.132"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #10
  %22 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %15, i64 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds i8, i8* %21, i64 8
  %25 = bitcast i8* %24 to i32*
  store i32 %23, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %21, i64 12
  %27 = bitcast i8* %26 to i32*
  store i32 4, i32* %27, align 4
  %28 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL20GlobalVarDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %29 = getelementptr inbounds i8, i8* %21, i64 16
  %30 = bitcast i8* %29 to i64*
  store i64 %18, i64* %30, align 8
  %31 = ptrtoint i8* %21 to i64
  %32 = bitcast %"class.std::__1::unique_ptr.132"* %5 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %19, i64 0, i32 6, i32 0, i32 1
  %34 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %33, align 8
  %35 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %19, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %36 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %35, align 8
  %37 = icmp ult %"class.std::__1::unique_ptr.132"* %34, %36
  br i1 %37, label %38, label %44

38:                                               ; preds = %17
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %39, align 8
  %40 = bitcast %"class.std::__1::unique_ptr.132"* %34 to i64*
  store i64 %31, i64* %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %34, i64 1
  %42 = ptrtoint %"class.std::__1::unique_ptr.132"* %41 to i64
  %43 = bitcast %"class.std::__1::unique_ptr.132"** %33 to i64*
  store i64 %42, i64* %43, align 8
  br label %46

44:                                               ; preds = %17
  %45 = getelementptr inbounds %"class.SkSL::dsl::DSLWriter", %"class.SkSL::dsl::DSLWriter"* %19, i64 0, i32 6
  call void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.130"* %45, %"class.std::__1::unique_ptr.132"* nonnull dereferenceable(8) %5) #10
  br label %46

46:                                               ; preds = %38, %44
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %5, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %47, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %47, align 8
  %49 = icmp eq %"class.SkSL::ProgramElement"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.SkSL::ProgramElement"* %48 to void (%"class.SkSL::ProgramElement"*)***
  %52 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %52, i64 1
  %54 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %53, align 8
  call void %54(%"class.SkSL::ProgramElement"* nonnull %48) #10
  br label %55

55:                                               ; preds = %46, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %56

56:                                               ; preds = %13, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl7DiscardEv(%"class.SkSL::dsl::DSLStatement"* noalias sret) local_unnamed_addr #0 {
  %2 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #10, !noalias !12
  %3 = getelementptr inbounds i8, i8* %2, i64 8
  %4 = bitcast i8* %3 to i32*
  store i32 -1, i32* %4, align 8, !noalias !12
  %5 = getelementptr inbounds i8, i8* %2, i64 12
  %6 = bitcast i8* %5 to i32*
  store i32 19, i32* %6, align 4, !noalias !12
  %7 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL16DiscardStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8, !noalias !12
  %8 = bitcast i8* %2 to %"class.SkSL::Statement"*
  tail call void @_ZN4SkSL3dsl12DSLStatementC1ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLStatement"* %0, %"class.SkSL::Statement"* %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl2DoENS0_12DSLStatementENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* noalias sret, %"class.SkSL::dsl::DSLStatement"* nocapture, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.SkSL::dsl::DSLPossibleStatement", align 8
  %7 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %9 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %10, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %9, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  %12 = call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #10, !noalias !15
  %13 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %13, align 8, !noalias !15
  %14 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10, !noalias !15
  %15 = call %"class.SkSL::Statement"* @_ZN4SkSL11DoStatement7ConvertERKNS_7ContextENSt3__110unique_ptrINS_9StatementENS4_14default_deleteIS6_EEEENS5_INS_10ExpressionENS7_ISA_EEEE(%"class.SkSL::Context"* dereferenceable(744) %12, %"class.SkSL::Statement"* %11, %"class.SkSL::Expression"* %14) #10, !noalias !15
  call void @_ZN4SkSL3dsl20DSLPossibleStatementC1ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleStatement"* nonnull %6, %"class.SkSL::Statement"* %15) #10
  call void @_ZN4SkSL3dsl12DSLStatementC1ENS0_20DSLPossibleStatementENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* %0, %"class.SkSL::dsl::DSLPossibleStatement"* nonnull %6, i8* %3, i32 %4) #10
  call void @_ZN4SkSL3dsl20DSLPossibleStatementD1Ev(%"class.SkSL::dsl::DSLPossibleStatement"* nonnull %6) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %7) #10
  ret void
}

declare void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN4SkSL3dsl12DSLStatementC1ENS0_20DSLPossibleStatementENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"*, %"class.SkSL::dsl::DSLPossibleStatement"*, i8*, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl20DSLPossibleStatementD1Ev(%"class.SkSL::dsl::DSLPossibleStatement"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl3ForENS0_12DSLStatementENS0_13DSLExpressionES2_S1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* noalias sret, %"class.SkSL::dsl::DSLStatement"* nocapture, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLStatement"* nocapture, %"class.SkSL::dsl::PositionInfo"* nocapture readonly byval(%"class.SkSL::dsl::PositionInfo") align 8) local_unnamed_addr #0 {
  %7 = alloca %"class.std::__1::shared_ptr.37", align 8
  %8 = alloca %"class.SkSL::dsl::DSLPossibleStatement", align 8
  %9 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %10 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %11 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %12 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %13 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %14, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %13, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %10, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %11, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %3) #10
  %16 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %17, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %16, align 8
  %19 = bitcast %"class.std::__1::shared_ptr.37"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19)
  %20 = call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #10, !noalias !18
  %21 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %21, align 8, !noalias !18
  %22 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* nonnull %10) #10, !noalias !18
  %23 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* nonnull %11) #10, !noalias !18
  %24 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %24, align 8, !noalias !18
  %25 = call dereferenceable(16) %"class.std::__1::shared_ptr.37"* @_ZN4SkSL3dsl9DSLWriter11SymbolTableEv() #10, !noalias !18
  %26 = bitcast %"class.std::__1::shared_ptr.37"* %25 to i64*
  %27 = load i64, i64* %26, align 8, !noalias !18
  %28 = bitcast %"class.std::__1::shared_ptr.37"* %7 to i64*
  store i64 %27, i64* %28, align 8, !noalias !18
  %29 = getelementptr inbounds %"class.std::__1::shared_ptr.37", %"class.std::__1::shared_ptr.37"* %7, i64 0, i32 1
  %30 = getelementptr inbounds %"class.std::__1::shared_ptr.37", %"class.std::__1::shared_ptr.37"* %25, i64 0, i32 1
  %31 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %30, align 8, !noalias !18
  store %"class.std::__1::__shared_weak_count"* %31, %"class.std::__1::__shared_weak_count"** %29, align 8, !noalias !18
  %32 = icmp eq %"class.std::__1::__shared_weak_count"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %6
  %34 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %31, i64 0, i32 0, i32 1
  %35 = atomicrmw add i64* %34, i64 1 monotonic
  br label %36

36:                                               ; preds = %6, %33
  %37 = call %"class.SkSL::Statement"* @_ZN4SkSL12ForStatement7ConvertERKNS_7ContextEiNSt3__110unique_ptrINS_9StatementENS4_14default_deleteIS6_EEEENS5_INS_10ExpressionENS7_ISA_EEEESC_S9_NS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744) %20, i32 -1, %"class.SkSL::Statement"* %15, %"class.SkSL::Expression"* %22, %"class.SkSL::Expression"* %23, %"class.SkSL::Statement"* %18, %"class.std::__1::shared_ptr.37"* nonnull byval(%"class.std::__1::shared_ptr.37") align 8 %7) #10, !noalias !18
  call void @_ZN4SkSL3dsl20DSLPossibleStatementC1ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleStatement"* nonnull %8, %"class.SkSL::Statement"* %37) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19)
  %38 = getelementptr inbounds %"class.SkSL::dsl::PositionInfo", %"class.SkSL::dsl::PositionInfo"* %5, i64 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %"class.SkSL::dsl::PositionInfo", %"class.SkSL::dsl::PositionInfo"* %5, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  call void @_ZN4SkSL3dsl12DSLStatementC1ENS0_20DSLPossibleStatementENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* %0, %"class.SkSL::dsl::DSLPossibleStatement"* nonnull %8, i8* %39, i32 %41) #10
  call void @_ZN4SkSL3dsl20DSLPossibleStatementD1Ev(%"class.SkSL::dsl::DSLPossibleStatement"* nonnull %8) #10
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %12) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %11) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %10) #10
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl2IfENS0_13DSLExpressionENS0_12DSLStatementES2_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLStatement"* nocapture, %"class.SkSL::dsl::DSLStatement"* nocapture, i8*, i32) local_unnamed_addr #0 {
  %7 = alloca %"class.SkSL::dsl::DSLPossibleStatement", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %9 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %10 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  %11 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %12, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %11, align 8
  %14 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %15, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %14, align 8
  %17 = call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #10, !noalias !21
  %18 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10, !noalias !21
  %19 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %19, align 8, !noalias !21
  %20 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %20, align 8, !noalias !21
  %21 = call %"class.SkSL::Statement"* @_ZN4SkSL11IfStatement7ConvertERKNS_7ContextEibNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS5_INS_9StatementENS7_ISA_EEEESC_(%"class.SkSL::Context"* dereferenceable(744) %17, i32 -1, i1 zeroext false, %"class.SkSL::Expression"* %18, %"class.SkSL::Statement"* %13, %"class.SkSL::Statement"* %16) #10, !noalias !21
  call void @_ZN4SkSL3dsl20DSLPossibleStatementC1ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleStatement"* nonnull %7, %"class.SkSL::Statement"* %21) #10
  call void @_ZN4SkSL3dsl12DSLStatementC1ENS0_20DSLPossibleStatementENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* %0, %"class.SkSL::dsl::DSLPossibleStatement"* nonnull %7, i8* %4, i32 %5) #10
  call void @_ZN4SkSL3dsl20DSLPossibleStatementD1Ev(%"class.SkSL::dsl::DSLPossibleStatement"* nonnull %7) #10
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %10) #10
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %9) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl6ReturnENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8* nocapture readnone, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleStatement", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  %7 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10, !noalias !24
  %8 = ptrtoint %"class.SkSL::Expression"* %7 to i64
  %9 = call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #10, !noalias !24
  %10 = getelementptr inbounds i8, i8* %9, i64 8
  %11 = bitcast i8* %10 to i32*
  store i32 -1, i32* %11, align 8, !noalias !24
  %12 = getelementptr inbounds i8, i8* %9, i64 12
  %13 = bitcast i8* %12 to i32*
  store i32 26, i32* %13, align 4, !noalias !24
  %14 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL15ReturnStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8, !noalias !24
  %15 = getelementptr inbounds i8, i8* %9, i64 16
  %16 = bitcast i8* %15 to i64*
  store i64 %8, i64* %16, align 8, !noalias !24
  %17 = bitcast i8* %9 to %"class.SkSL::Statement"*
  call void @_ZN4SkSL3dsl20DSLPossibleStatementC1ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleStatement"* nonnull %5, %"class.SkSL::Statement"* %17) #10
  call void @_ZN4SkSL3dsl12DSLStatementC1ENS0_20DSLPossibleStatementENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* %0, %"class.SkSL::dsl::DSLPossibleStatement"* nonnull %5, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 260) #10
  call void @_ZN4SkSL3dsl20DSLPossibleStatementD1Ev(%"class.SkSL::dsl::DSLPossibleStatement"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl6SelectENS0_13DSLExpressionES1_S1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %7 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %9 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %10 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %9, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %10, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %3) #10
  %11 = call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #10, !noalias !27
  %12 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10, !noalias !27
  %13 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* nonnull %9) #10, !noalias !27
  %14 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* nonnull %10) #10, !noalias !27
  %15 = call %"class.SkSL::Expression"* @_ZN4SkSL17TernaryExpression7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEES9_S9_(%"class.SkSL::Context"* dereferenceable(744) %11, %"class.SkSL::Expression"* %12, %"class.SkSL::Expression"* %13, %"class.SkSL::Expression"* %14) #10, !noalias !27
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7, %"class.SkSL::Expression"* %15) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7, i8* %4, i32 %5) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %10) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %9) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  ret void
}

declare void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLPossibleExpression"*, i8*, i32) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl8StaticIfENS0_13DSLExpressionENS0_12DSLStatementES2_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLStatement"* nocapture, %"class.SkSL::dsl::DSLStatement"* nocapture, i8*, i32) local_unnamed_addr #0 {
  %7 = alloca %"class.SkSL::dsl::DSLPossibleStatement", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %9 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  %10 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  %11 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %12, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %11, align 8
  %14 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %15, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %14, align 8
  %17 = call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #10, !noalias !30
  %18 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10, !noalias !30
  %19 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %19, align 8, !noalias !30
  %20 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %20, align 8, !noalias !30
  %21 = call %"class.SkSL::Statement"* @_ZN4SkSL11IfStatement7ConvertERKNS_7ContextEibNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS5_INS_9StatementENS7_ISA_EEEESC_(%"class.SkSL::Context"* dereferenceable(744) %17, i32 -1, i1 zeroext true, %"class.SkSL::Expression"* %18, %"class.SkSL::Statement"* %13, %"class.SkSL::Statement"* %16) #10, !noalias !30
  call void @_ZN4SkSL3dsl20DSLPossibleStatementC1ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleStatement"* nonnull %7, %"class.SkSL::Statement"* %21) #10
  call void @_ZN4SkSL3dsl12DSLStatementC1ENS0_20DSLPossibleStatementENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* %0, %"class.SkSL::dsl::DSLPossibleStatement"* nonnull %7, i8* %4, i32 %5) #10
  call void @_ZN4SkSL3dsl20DSLPossibleStatementD1Ev(%"class.SkSL::dsl::DSLPossibleStatement"* nonnull %7) #10
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %10) #10
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %9) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl12StaticSwitchENS0_13DSLExpressionE8SkTArrayINS0_7DSLCaseELb0EE(%"class.SkSL::dsl::DSLPossibleStatement"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %class.SkTArray*) local_unnamed_addr #0 {
  %4 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %5 = alloca %class.SkTArray, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %4, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN8SkTArrayIN4SkSL3dsl7DSLCaseELb0EEC2EOS3_(%class.SkTArray* nonnull %5, %class.SkTArray* dereferenceable(16) %2)
  call void @_ZN4SkSL3dsl7DSLCore6SwitchENS0_13DSLExpressionE8SkTArrayINS0_7DSLCaseELb0EEb(%"class.SkSL::dsl::DSLPossibleStatement"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %4, %class.SkTArray* nonnull %5, i1 zeroext true)
  %6 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 4294967294
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %5, i64 0, i32 0
  br label %16

12:                                               ; preds = %16, %3
  %13 = phi i64 [ %7, %3 ], [ %21, %16 ]
  %14 = and i64 %13, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %28, label %25

16:                                               ; preds = %16, %10
  %17 = phi i64 [ 0, %10 ], [ %20, %16 ]
  %18 = load %"class.SkSL::dsl::DSLCase"*, %"class.SkSL::dsl::DSLCase"** %11, align 8
  %19 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %18, i64 %17
  call void @_ZN4SkSL3dsl7DSLCaseD1Ev(%"class.SkSL::dsl::DSLCase"* %19) #10
  %20 = add nuw nsw i64 %17, 1
  %21 = load i64, i64* %6, align 8
  %22 = lshr i64 %21, 1
  %23 = and i64 %22, 2147483647
  %24 = icmp ult i64 %20, %23
  br i1 %24, label %16, label %12

25:                                               ; preds = %12
  %26 = bitcast %class.SkTArray* %5 to i8**
  %27 = load i8*, i8** %26, align 8
  call void @_Z7sk_freePv(i8* %27) #10
  br label %28

28:                                               ; preds = %12, %25
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL3dsl7DSLCore6SwitchENS0_13DSLExpressionE8SkTArrayINS0_7DSLCaseELb0EEb(%"class.SkSL::dsl::DSLPossibleStatement"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %class.SkTArray*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.SkSTArray.276, align 8
  %6 = alloca %class.SkTArray.279, align 8
  %7 = alloca %class.SkSTArray.276, align 8
  %8 = alloca %class.SkTArray.279, align 8
  %9 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %5, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  %10 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %5, i64 0, i32 0, i32 0, i64 16
  %11 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %5, i64 0, i32 0, i32 0, i64 24
  %12 = bitcast i8* %11 to i64*
  %13 = bitcast i8* %10 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  store i8* %9, i8** %13, align 8
  store i64 17179869184, i64* %12, align 8
  %14 = bitcast i8* %10 to %class.SkTArray.278*
  %15 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %2, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = lshr i64 %16, 1
  %18 = trunc i64 %17 to i32
  %19 = and i32 %18, 2147483647
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %4
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.278* %14, i32 %19, i32 0) #10
  %22 = load i64, i64* %12, align 8
  %23 = shl i64 %22, 32
  %24 = and i64 %23, 4294967296
  %25 = and i64 %22, -4294967297
  %26 = or i64 %24, %25
  store i64 %26, i64* %12, align 8
  %27 = load i64, i64* %15, align 8
  %28 = lshr i64 %27, 1
  %29 = trunc i64 %28 to i32
  %30 = and i32 %29, 2147483647
  br label %32

31:                                               ; preds = %4
  store i64 17179869184, i64* %12, align 8
  br label %32

32:                                               ; preds = %21, %31
  %33 = phi i32 [ %30, %21 ], [ 0, %31 ]
  %34 = bitcast %class.SkTArray.279* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #10
  %35 = getelementptr inbounds %class.SkTArray.279, %class.SkTArray.279* %6, i64 0, i32 0
  %36 = getelementptr inbounds %class.SkTArray.279, %class.SkTArray.279* %6, i64 0, i32 1
  store %class.SkSTArray* null, %class.SkSTArray** %35, align 8
  store i64 1, i64* %36, align 8
  %37 = icmp eq i32 %33, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %32
  call void @_ZN8SkTArrayI9SkSTArrayILi2ENSt3__110unique_ptrIN4SkSL9StatementENS1_14default_deleteIS4_EEEELb0EELb0EE12checkReallocEiNS9_11ReallocTypeE(%class.SkTArray.279* nonnull %6, i32 %33, i32 0) #10
  %39 = load i64, i64* %36, align 8
  %40 = shl i64 %39, 32
  %41 = and i64 %40, 4294967296
  %42 = and i64 %39, -4294967297
  %43 = or i64 %41, %42
  br label %44

44:                                               ; preds = %32, %38
  %45 = phi i64 [ %43, %38 ], [ 1, %32 ]
  store i64 %45, i64* %36, align 8
  %46 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %2, i64 0, i32 0
  %47 = load %"class.SkSL::dsl::DSLCase"*, %"class.SkSL::dsl::DSLCase"** %46, align 8
  %48 = icmp eq %"class.SkSL::dsl::DSLCase"* %47, null
  br i1 %48, label %57, label %49

49:                                               ; preds = %44
  %50 = load i64, i64* %15, align 8
  %51 = lshr i64 %50, 1
  %52 = and i64 %51, 2147483647
  %53 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %47, i64 %52
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %49
  %56 = bitcast i8* %10 to %"class.std::__1::unique_ptr.150"**
  br label %231

57:                                               ; preds = %231, %44, %49
  %58 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* %1) #10
  %59 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %7, i64 0, i32 0, i32 0, i64 16
  %60 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %7, i64 0, i32 0, i32 0, i64 0
  %61 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %7, i64 0, i32 0, i32 0, i64 24
  %62 = bitcast i8* %61 to i64*
  %63 = bitcast i8* %59 to i8**
  store i8* %60, i8** %63, align 8
  store i64 17179869184, i64* %62, align 8
  %64 = bitcast i8* %59 to %class.SkTArray.278*
  %65 = call dereferenceable(16) %class.SkTArray.278* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.278* %64, %class.SkTArray.278* dereferenceable(16) %14) #10
  call void @_ZN8SkTArrayI9SkSTArrayILi2ENSt3__110unique_ptrIN4SkSL9StatementENS1_14default_deleteIS4_EEEELb0EELb0EEC2EOS9_(%class.SkTArray.279* nonnull %8, %class.SkTArray.279* nonnull dereferenceable(16) %6)
  call void @_ZN4SkSL3dsl9DSLWriter13ConvertSwitchENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE9SkSTArrayILi2ES7_Lb0EE8SkTArrayIS8_ILi2ENS3_INS_9StatementENS5_ISB_EEEELb0EELb0EEb(%"class.SkSL::dsl::DSLPossibleStatement"* sret %0, %"class.SkSL::Expression"* %58, %class.SkSTArray.276* nonnull %7, %class.SkTArray.279* nonnull %8, i1 zeroext %3) #10
  %66 = getelementptr inbounds %class.SkTArray.279, %class.SkTArray.279* %8, i64 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 4294967294
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %57
  %71 = getelementptr inbounds %class.SkTArray.279, %class.SkTArray.279* %8, i64 0, i32 0
  br label %76

72:                                               ; preds = %111, %57
  %73 = phi i64 [ %67, %57 ], [ %113, %111 ]
  %74 = and i64 %73, 1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %120, label %117

76:                                               ; preds = %111, %70
  %77 = phi i64 [ 0, %70 ], [ %112, %111 ]
  %78 = load %class.SkSTArray*, %class.SkSTArray** %71, align 8
  %79 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %78, i64 %77, i32 0, i32 0, i64 16
  %80 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %78, i64 %77, i32 0, i32 0, i64 24
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, 4294967294
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %76
  %86 = bitcast i8* %79 to %"class.std::__1::unique_ptr.227"**
  br label %91

87:                                               ; preds = %102, %76
  %88 = phi i64 [ %82, %76 ], [ %104, %102 ]
  %89 = and i64 %88, 1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %111, label %108

91:                                               ; preds = %102, %85
  %92 = phi i64 [ 0, %85 ], [ %103, %102 ]
  %93 = load %"class.std::__1::unique_ptr.227"*, %"class.std::__1::unique_ptr.227"** %86, align 8
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %93, i64 %92, i32 0, i32 0, i32 0
  %95 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %94, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %94, align 8
  %96 = icmp eq %"class.SkSL::Statement"* %95, null
  br i1 %96, label %102, label %97

97:                                               ; preds = %91
  %98 = bitcast %"class.SkSL::Statement"* %95 to void (%"class.SkSL::Statement"*)***
  %99 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %99, i64 1
  %101 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %100, align 8
  call void %101(%"class.SkSL::Statement"* nonnull %95) #10
  br label %102

102:                                              ; preds = %97, %91
  %103 = add nuw nsw i64 %92, 1
  %104 = load i64, i64* %81, align 8
  %105 = lshr i64 %104, 1
  %106 = and i64 %105, 2147483647
  %107 = icmp ult i64 %103, %106
  br i1 %107, label %91, label %87

108:                                              ; preds = %87
  %109 = bitcast i8* %79 to i8**
  %110 = load i8*, i8** %109, align 8
  call void @_Z7sk_freePv(i8* %110) #10
  br label %111

111:                                              ; preds = %108, %87
  %112 = add nuw nsw i64 %77, 1
  %113 = load i64, i64* %66, align 8
  %114 = lshr i64 %113, 1
  %115 = and i64 %114, 2147483647
  %116 = icmp ult i64 %112, %115
  br i1 %116, label %76, label %72

117:                                              ; preds = %72
  %118 = bitcast %class.SkTArray.279* %8 to i8**
  %119 = load i8*, i8** %118, align 8
  call void @_Z7sk_freePv(i8* %119) #10
  br label %120

120:                                              ; preds = %72, %117
  %121 = load i64, i64* %62, align 8
  %122 = and i64 %121, 4294967294
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %120
  %125 = bitcast i8* %59 to %"class.std::__1::unique_ptr.150"**
  br label %130

126:                                              ; preds = %141, %120
  %127 = phi i64 [ %121, %120 ], [ %143, %141 ]
  %128 = and i64 %127, 1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %149, label %147

130:                                              ; preds = %141, %124
  %131 = phi i64 [ 0, %124 ], [ %142, %141 ]
  %132 = load %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"** %125, align 8
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %132, i64 %131, i32 0, i32 0, i32 0
  %134 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %133, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %133, align 8
  %135 = icmp eq %"class.SkSL::Expression"* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %130
  %137 = bitcast %"class.SkSL::Expression"* %134 to void (%"class.SkSL::Expression"*)***
  %138 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %138, i64 1
  %140 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %139, align 8
  call void %140(%"class.SkSL::Expression"* nonnull %134) #10
  br label %141

141:                                              ; preds = %136, %130
  %142 = add nuw nsw i64 %131, 1
  %143 = load i64, i64* %62, align 8
  %144 = lshr i64 %143, 1
  %145 = and i64 %144, 2147483647
  %146 = icmp ult i64 %142, %145
  br i1 %146, label %130, label %126

147:                                              ; preds = %126
  %148 = load i8*, i8** %63, align 8
  call void @_Z7sk_freePv(i8* %148) #10
  br label %149

149:                                              ; preds = %126, %147
  %150 = load i64, i64* %36, align 8
  %151 = and i64 %150, 4294967294
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %157

153:                                              ; preds = %192, %149
  %154 = phi i64 [ %150, %149 ], [ %194, %192 ]
  %155 = and i64 %154, 1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %201, label %198

157:                                              ; preds = %149, %192
  %158 = phi i64 [ %193, %192 ], [ 0, %149 ]
  %159 = load %class.SkSTArray*, %class.SkSTArray** %35, align 8
  %160 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %159, i64 %158, i32 0, i32 0, i64 16
  %161 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %159, i64 %158, i32 0, i32 0, i64 24
  %162 = bitcast i8* %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = and i64 %163, 4294967294
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %168, label %166

166:                                              ; preds = %157
  %167 = bitcast i8* %160 to %"class.std::__1::unique_ptr.227"**
  br label %172

168:                                              ; preds = %183, %157
  %169 = phi i64 [ %163, %157 ], [ %185, %183 ]
  %170 = and i64 %169, 1
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %192, label %189

172:                                              ; preds = %183, %166
  %173 = phi i64 [ 0, %166 ], [ %184, %183 ]
  %174 = load %"class.std::__1::unique_ptr.227"*, %"class.std::__1::unique_ptr.227"** %167, align 8
  %175 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %174, i64 %173, i32 0, i32 0, i32 0
  %176 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %175, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %175, align 8
  %177 = icmp eq %"class.SkSL::Statement"* %176, null
  br i1 %177, label %183, label %178

178:                                              ; preds = %172
  %179 = bitcast %"class.SkSL::Statement"* %176 to void (%"class.SkSL::Statement"*)***
  %180 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %179, align 8
  %181 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %180, i64 1
  %182 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %181, align 8
  call void %182(%"class.SkSL::Statement"* nonnull %176) #10
  br label %183

183:                                              ; preds = %178, %172
  %184 = add nuw nsw i64 %173, 1
  %185 = load i64, i64* %162, align 8
  %186 = lshr i64 %185, 1
  %187 = and i64 %186, 2147483647
  %188 = icmp ult i64 %184, %187
  br i1 %188, label %172, label %168

189:                                              ; preds = %168
  %190 = bitcast i8* %160 to i8**
  %191 = load i8*, i8** %190, align 8
  call void @_Z7sk_freePv(i8* %191) #10
  br label %192

192:                                              ; preds = %189, %168
  %193 = add nuw nsw i64 %158, 1
  %194 = load i64, i64* %36, align 8
  %195 = lshr i64 %194, 1
  %196 = and i64 %195, 2147483647
  %197 = icmp ult i64 %193, %196
  br i1 %197, label %157, label %153

198:                                              ; preds = %153
  %199 = bitcast %class.SkTArray.279* %6 to i8**
  %200 = load i8*, i8** %199, align 8
  call void @_Z7sk_freePv(i8* %200) #10
  br label %201

201:                                              ; preds = %153, %198
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #10
  %202 = load i64, i64* %12, align 8
  %203 = and i64 %202, 4294967294
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %207, label %205

205:                                              ; preds = %201
  %206 = bitcast i8* %10 to %"class.std::__1::unique_ptr.150"**
  br label %211

207:                                              ; preds = %222, %201
  %208 = phi i64 [ %202, %201 ], [ %224, %222 ]
  %209 = and i64 %208, 1
  %210 = icmp eq i64 %209, 0
  br i1 %210, label %230, label %228

211:                                              ; preds = %222, %205
  %212 = phi i64 [ 0, %205 ], [ %223, %222 ]
  %213 = load %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"** %206, align 8
  %214 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %213, i64 %212, i32 0, i32 0, i32 0
  %215 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %214, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %214, align 8
  %216 = icmp eq %"class.SkSL::Expression"* %215, null
  br i1 %216, label %222, label %217

217:                                              ; preds = %211
  %218 = bitcast %"class.SkSL::Expression"* %215 to void (%"class.SkSL::Expression"*)***
  %219 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %218, align 8
  %220 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %219, i64 1
  %221 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %220, align 8
  call void %221(%"class.SkSL::Expression"* nonnull %215) #10
  br label %222

222:                                              ; preds = %217, %211
  %223 = add nuw nsw i64 %212, 1
  %224 = load i64, i64* %12, align 8
  %225 = lshr i64 %224, 1
  %226 = and i64 %225, 2147483647
  %227 = icmp ult i64 %223, %226
  br i1 %227, label %211, label %207

228:                                              ; preds = %207
  %229 = load i8*, i8** %13, align 8
  call void @_Z7sk_freePv(i8* %229) #10
  br label %230

230:                                              ; preds = %207, %228
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  ret void

231:                                              ; preds = %55, %231
  %232 = phi %"class.SkSL::dsl::DSLCase"* [ %47, %55 ], [ %263, %231 ]
  %233 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %232, i64 0, i32 0
  %234 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* %233) #10
  %235 = ptrtoint %"class.SkSL::Expression"* %234 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.278* %14, i32 1, i32 1) #10
  %236 = load %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"** %56, align 8
  %237 = load i64, i64* %12, align 8
  %238 = lshr i64 %237, 1
  %239 = and i64 %238, 2147483647
  %240 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %236, i64 %239
  %241 = add i64 %237, 2
  %242 = and i64 %241, 4294967294
  %243 = and i64 %237, -4294967295
  %244 = or i64 %242, %243
  store i64 %244, i64* %12, align 8
  %245 = bitcast %"class.std::__1::unique_ptr.150"* %240 to i64*
  store i64 %235, i64* %245, align 8
  call void @_ZN8SkTArrayI9SkSTArrayILi2ENSt3__110unique_ptrIN4SkSL9StatementENS1_14default_deleteIS4_EEEELb0EELb0EE12checkReallocEiNS9_11ReallocTypeE(%class.SkTArray.279* nonnull %6, i32 1, i32 1) #10
  %246 = load %class.SkSTArray*, %class.SkSTArray** %35, align 8
  %247 = load i64, i64* %36, align 8
  %248 = lshr i64 %247, 1
  %249 = and i64 %248, 2147483647
  %250 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %246, i64 %249, i32 0, i32 0, i64 0
  %251 = add i64 %247, 2
  %252 = and i64 %251, 4294967294
  %253 = and i64 %247, -4294967295
  %254 = or i64 %252, %253
  store i64 %254, i64* %36, align 8
  %255 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %246, i64 %249, i32 0, i32 0, i64 16
  %256 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %246, i64 %249, i32 0, i32 0, i64 24
  %257 = bitcast i8* %256 to i64*
  %258 = bitcast i8* %255 to i8**
  store i8* %250, i8** %258, align 8
  store i64 17179869184, i64* %257, align 8
  %259 = bitcast i8* %255 to %class.SkTArray.233*
  %260 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %232, i64 0, i32 1, i32 0, i32 0, i64 16
  %261 = bitcast i8* %260 to %class.SkTArray.233*
  %262 = call dereferenceable(16) %class.SkTArray.233* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.233* %259, %class.SkTArray.233* dereferenceable(16) %261) #10
  %263 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %232, i64 1
  %264 = icmp eq %"class.SkSL::dsl::DSLCase"* %263, %53
  br i1 %264, label %57, label %231
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN4SkSL3dsl7DSLCaseELb0EEC2EOS3_(%class.SkTArray*, %class.SkTArray* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 0
  %9 = bitcast %class.SkTArray* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.SkTArray* %0 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load i64, i64* %3, align 8
  %13 = and i64 %12, 4294967294
  %14 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, -4294967295
  %17 = or i64 %16, %13
  store i64 %17, i64* %14, align 8
  %18 = load i64, i64* %3, align 8
  %19 = and i64 %18, -8589934592
  %20 = and i64 %17, 8589934590
  %21 = or i64 %19, %20
  %22 = or i64 %21, 1
  store i64 %22, i64* %14, align 8
  %23 = load i64, i64* %3, align 8
  %24 = and i64 %23, 4294967296
  %25 = and i64 %22, -4294967297
  %26 = or i64 %25, %24
  store i64 %26, i64* %14, align 8
  store %"class.SkSL::dsl::DSLCase"* null, %"class.SkSL::dsl::DSLCase"** %8, align 8
  br label %77

27:                                               ; preds = %2
  %28 = lshr i64 %4, 1
  %29 = trunc i64 %28 to i32
  %30 = and i32 %29, 2147483647
  %31 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %4, 4294967294
  %34 = and i64 %32, -4294967295
  %35 = or i64 %34, %33
  store i64 %35, i64* %31, align 8
  %36 = icmp eq i32 %30, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %27
  %38 = and i64 %35, 8589934591
  store i64 %38, i64* %31, align 8
  %39 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  store %"class.SkSL::dsl::DSLCase"* null, %"class.SkSL::dsl::DSLCase"** %39, align 8
  br label %50

40:                                               ; preds = %27
  %41 = icmp ugt i32 %30, 8
  %42 = select i1 %41, i32 %30, i32 8
  %43 = zext i32 %42 to i64
  %44 = shl nuw i64 %43, 33
  %45 = and i64 %35, 8589934591
  %46 = or i64 %45, %44
  store i64 %46, i64* %31, align 8
  %47 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 40) #10
  %48 = bitcast %class.SkTArray* %0 to i8**
  store i8* %47, i8** %48, align 8
  %49 = load i64, i64* %31, align 8
  br label %50

50:                                               ; preds = %37, %40
  %51 = phi i8* [ %47, %40 ], [ null, %37 ]
  %52 = phi i64 [ %49, %40 ], [ %38, %37 ]
  %53 = and i64 %52, -4294967298
  %54 = or i64 %53, 1
  store i64 %54, i64* %31, align 8
  %55 = load i64, i64* %3, align 8
  %56 = and i64 %55, 4294967294
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %74, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %1, i64 0, i32 0
  br label %60

60:                                               ; preds = %60, %58
  %61 = phi i64 [ 0, %58 ], [ %69, %60 ]
  %62 = mul nuw nsw i64 %61, 40
  %63 = getelementptr inbounds i8, i8* %51, i64 %62
  %64 = bitcast i8* %63 to %"class.SkSL::dsl::DSLCase"*
  %65 = load %"class.SkSL::dsl::DSLCase"*, %"class.SkSL::dsl::DSLCase"** %59, align 8
  %66 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %65, i64 %61
  tail call void @_ZN4SkSL3dsl7DSLCaseC1EOS1_(%"class.SkSL::dsl::DSLCase"* %64, %"class.SkSL::dsl::DSLCase"* dereferenceable(40) %66) #10
  %67 = load %"class.SkSL::dsl::DSLCase"*, %"class.SkSL::dsl::DSLCase"** %59, align 8
  %68 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %67, i64 %61
  tail call void @_ZN4SkSL3dsl7DSLCaseD1Ev(%"class.SkSL::dsl::DSLCase"* %68) #10
  %69 = add nuw nsw i64 %61, 1
  %70 = load i64, i64* %3, align 8
  %71 = lshr i64 %70, 1
  %72 = and i64 %71, 2147483647
  %73 = icmp ult i64 %69, %72
  br i1 %73, label %60, label %74

74:                                               ; preds = %60, %50
  %75 = phi i64 [ %55, %50 ], [ %70, %60 ]
  %76 = and i64 %75, -4294967295
  br label %77

77:                                               ; preds = %74, %7
  %78 = phi i64 [ %76, %74 ], [ 1, %7 ]
  store i64 %78, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl6SwitchENS0_13DSLExpressionE8SkTArrayINS0_7DSLCaseELb0EE(%"class.SkSL::dsl::DSLPossibleStatement"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %class.SkTArray*) local_unnamed_addr #0 {
  %4 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %5 = alloca %class.SkTArray, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %4, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN8SkTArrayIN4SkSL3dsl7DSLCaseELb0EEC2EOS3_(%class.SkTArray* nonnull %5, %class.SkTArray* dereferenceable(16) %2)
  call void @_ZN4SkSL3dsl7DSLCore6SwitchENS0_13DSLExpressionE8SkTArrayINS0_7DSLCaseELb0EEb(%"class.SkSL::dsl::DSLPossibleStatement"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %4, %class.SkTArray* nonnull %5, i1 zeroext false)
  %6 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 4294967294
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %5, i64 0, i32 0
  br label %16

12:                                               ; preds = %16, %3
  %13 = phi i64 [ %7, %3 ], [ %21, %16 ]
  %14 = and i64 %13, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %28, label %25

16:                                               ; preds = %16, %10
  %17 = phi i64 [ 0, %10 ], [ %20, %16 ]
  %18 = load %"class.SkSL::dsl::DSLCase"*, %"class.SkSL::dsl::DSLCase"** %11, align 8
  %19 = getelementptr inbounds %"class.SkSL::dsl::DSLCase", %"class.SkSL::dsl::DSLCase"* %18, i64 %17
  call void @_ZN4SkSL3dsl7DSLCaseD1Ev(%"class.SkSL::dsl::DSLCase"* %19) #10
  %20 = add nuw nsw i64 %17, 1
  %21 = load i64, i64* %6, align 8
  %22 = lshr i64 %21, 1
  %23 = and i64 %22, 2147483647
  %24 = icmp ult i64 %20, %23
  br i1 %24, label %16, label %12

25:                                               ; preds = %12
  %26 = bitcast %class.SkTArray* %5 to i8**
  %27 = load i8*, i8** %26, align 8
  call void @_Z7sk_freePv(i8* %27) #10
  br label %28

28:                                               ; preds = %12, %25
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl5WhileENS0_13DSLExpressionENS0_12DSLStatementENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLStatement"* nocapture, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.SkSL::dsl::DSLPossibleStatement", align 8
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLStatement", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  %9 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %10, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %9, align 8
  %12 = call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #10, !noalias !33
  %13 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10, !noalias !33
  %14 = getelementptr inbounds %"class.SkSL::dsl::DSLStatement", %"class.SkSL::dsl::DSLStatement"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %14, align 8, !noalias !33
  %15 = call dereferenceable(16) %"class.std::__1::shared_ptr.37"* @_ZN4SkSL3dsl9DSLWriter11SymbolTableEv() #10, !noalias !33
  %16 = getelementptr inbounds %"class.std::__1::shared_ptr.37", %"class.std::__1::shared_ptr.37"* %15, i64 0, i32 0
  %17 = load %"class.SkSL::SymbolTable"*, %"class.SkSL::SymbolTable"** %16, align 8, !noalias !33
  %18 = getelementptr inbounds %"class.std::__1::shared_ptr.37", %"class.std::__1::shared_ptr.37"* %15, i64 0, i32 1
  %19 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %18, align 8, !noalias !33
  %20 = icmp eq %"class.std::__1::__shared_weak_count"* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %5
  %22 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %19, i64 0, i32 0, i32 1
  %23 = atomicrmw add i64* %22, i64 1 monotonic
  br label %24

24:                                               ; preds = %5, %21
  %25 = call %"class.SkSL::Statement"* @_ZN4SkSL12ForStatement12ConvertWhileERKNS_7ContextEiNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS5_INS_9StatementENS7_ISA_EEEENS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744) %12, i32 -1, %"class.SkSL::Expression"* %13, %"class.SkSL::Statement"* %11, %"class.SkSL::SymbolTable"* %17, %"class.std::__1::__shared_weak_count"* %19) #10, !noalias !33
  call void @_ZN4SkSL3dsl20DSLPossibleStatementC1ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleStatement"* nonnull %6, %"class.SkSL::Statement"* %25) #10
  call void @_ZN4SkSL3dsl12DSLStatementC1ENS0_20DSLPossibleStatementENS0_12PositionInfoE(%"class.SkSL::dsl::DSLStatement"* %0, %"class.SkSL::dsl::DSLPossibleStatement"* nonnull %6, i8* %3, i32 %4) #10
  call void @_ZN4SkSL3dsl20DSLPossibleStatementD1Ev(%"class.SkSL::dsl::DSLPossibleStatement"* nonnull %6) #10
  call void @_ZN4SkSL3dsl12DSLStatementD1Ev(%"class.SkSL::dsl::DSLStatement"* nonnull %8) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl3AbsENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias sret, i8*, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.SkSTArray.276, align 8
  %5 = alloca %class.SkSTArray.276, align 8
  %6 = tail call dereferenceable(176) %"class.SkSL::IRGenerator"* @_ZN4SkSL3dsl9DSLWriter11IRGeneratorEv() #10
  %7 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #10
  %8 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %4, i64 0, i32 0, i32 0, i64 16
  %9 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %4, i64 0, i32 0, i32 0, i64 24
  %10 = bitcast i8* %9 to i64*
  %11 = bitcast i8* %8 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  store i8* %7, i8** %11, align 8
  store i64 17179869184, i64* %10, align 8
  %12 = bitcast i8* %8 to %class.SkTArray.278*
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.278* %12, i32 1, i32 0) #10
  %13 = load i64, i64* %10, align 8
  %14 = shl i64 %13, 32
  %15 = and i64 %14, 4294967296
  %16 = and i64 %13, -4294967297
  %17 = or i64 %15, %16
  store i64 %17, i64* %10, align 8
  %18 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* %2) #10
  %19 = ptrtoint %"class.SkSL::Expression"* %18 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.278* %12, i32 1, i32 1) #10
  %20 = bitcast i8* %8 to %"class.std::__1::unique_ptr.150"**
  %21 = load %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"** %20, align 8
  %22 = load i64, i64* %10, align 8
  %23 = lshr i64 %22, 1
  %24 = and i64 %23, 2147483647
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %21, i64 %24
  %26 = add i64 %22, 2
  %27 = and i64 %26, 4294967294
  %28 = and i64 %22, -4294967295
  %29 = or i64 %27, %28
  store i64 %29, i64* %10, align 8
  %30 = bitcast %"class.std::__1::unique_ptr.150"* %25 to i64*
  store i64 %19, i64* %30, align 8
  %31 = call i64 @strlen(i8* %1) #12
  %32 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertIdentifierEiNS_14StringFragmentE(%"class.SkSL::IRGenerator"* %6, i32 -1, i8* %1, i64 %31) #10
  %33 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %5, i64 0, i32 0, i32 0, i64 16
  %34 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %5, i64 0, i32 0, i32 0, i64 0
  %35 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %5, i64 0, i32 0, i32 0, i64 24
  %36 = bitcast i8* %35 to i64*
  %37 = bitcast i8* %33 to i8**
  store i8* %34, i8** %37, align 8
  store i64 17179869184, i64* %36, align 8
  %38 = bitcast i8* %33 to %class.SkTArray.278*
  %39 = call dereferenceable(16) %class.SkTArray.278* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.278* %38, %class.SkTArray.278* dereferenceable(16) %12) #10
  %40 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator4callEiNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE9SkSTArrayILi2ES6_Lb0EE(%"class.SkSL::IRGenerator"* %6, i32 -1, %"class.SkSL::Expression"* %32, %class.SkSTArray.276* nonnull %5) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleExpression"* %0, %"class.SkSL::Expression"* %40) #10
  %41 = load i64, i64* %36, align 8
  %42 = and i64 %41, 4294967294
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %3
  %45 = bitcast i8* %33 to %"class.std::__1::unique_ptr.150"**
  br label %50

46:                                               ; preds = %61, %3
  %47 = phi i64 [ %41, %3 ], [ %63, %61 ]
  %48 = and i64 %47, 1
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %69, label %67

50:                                               ; preds = %61, %44
  %51 = phi i64 [ 0, %44 ], [ %62, %61 ]
  %52 = load %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"** %45, align 8
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %52, i64 %51, i32 0, i32 0, i32 0
  %54 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %53, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %53, align 8
  %55 = icmp eq %"class.SkSL::Expression"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %50
  %57 = bitcast %"class.SkSL::Expression"* %54 to void (%"class.SkSL::Expression"*)***
  %58 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %58, i64 1
  %60 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %59, align 8
  call void %60(%"class.SkSL::Expression"* nonnull %54) #10
  br label %61

61:                                               ; preds = %56, %50
  %62 = add nuw nsw i64 %51, 1
  %63 = load i64, i64* %36, align 8
  %64 = lshr i64 %63, 1
  %65 = and i64 %64, 2147483647
  %66 = icmp ult i64 %62, %65
  br i1 %66, label %50, label %46

67:                                               ; preds = %46
  %68 = load i8*, i8** %37, align 8
  call void @_Z7sk_freePv(i8* %68) #10
  br label %69

69:                                               ; preds = %46, %67
  %70 = load i64, i64* %10, align 8
  %71 = and i64 %70, 4294967294
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %77

73:                                               ; preds = %88, %69
  %74 = phi i64 [ %70, %69 ], [ %90, %88 ]
  %75 = and i64 %74, 1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %96, label %94

77:                                               ; preds = %69, %88
  %78 = phi i64 [ %89, %88 ], [ 0, %69 ]
  %79 = load %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"** %20, align 8
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %79, i64 %78, i32 0, i32 0, i32 0
  %81 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %80, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %80, align 8
  %82 = icmp eq %"class.SkSL::Expression"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %77
  %84 = bitcast %"class.SkSL::Expression"* %81 to void (%"class.SkSL::Expression"*)***
  %85 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %85, i64 1
  %87 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %86, align 8
  call void %87(%"class.SkSL::Expression"* nonnull %81) #10
  br label %88

88:                                               ; preds = %83, %77
  %89 = add nuw nsw i64 %78, 1
  %90 = load i64, i64* %10, align 8
  %91 = lshr i64 %90, 1
  %92 = and i64 %91, 2147483647
  %93 = icmp ult i64 %89, %92
  br i1 %93, label %77, label %73

94:                                               ; preds = %73
  %95 = load i8*, i8** %11, align 8
  call void @_Z7sk_freePv(i8* %95) #10
  br label %96

96:                                               ; preds = %73, %94
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl3AllENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl3AnyENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl4AtanENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl4AtanENS0_13DSLExpressionES1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* nonnull %8)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, i8* %3, i32 %4) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias sret, i8*, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %class.SkSTArray.276, align 8
  %6 = alloca %class.SkSTArray.276, align 8
  %7 = tail call dereferenceable(176) %"class.SkSL::IRGenerator"* @_ZN4SkSL3dsl9DSLWriter11IRGeneratorEv() #10
  %8 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %5, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #10
  %9 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %5, i64 0, i32 0, i32 0, i64 16
  %10 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %5, i64 0, i32 0, i32 0, i64 24
  %11 = bitcast i8* %10 to i64*
  %12 = bitcast i8* %9 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  store i8* %8, i8** %12, align 8
  store i64 17179869184, i64* %11, align 8
  %13 = bitcast i8* %9 to %class.SkTArray.278*
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.278* %13, i32 2, i32 0) #10
  %14 = load i64, i64* %11, align 8
  %15 = shl i64 %14, 32
  %16 = and i64 %15, 4294967296
  %17 = and i64 %14, -4294967297
  %18 = or i64 %16, %17
  store i64 %18, i64* %11, align 8
  %19 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* %2) #10
  %20 = ptrtoint %"class.SkSL::Expression"* %19 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.278* %13, i32 1, i32 1) #10
  %21 = bitcast i8* %9 to %"class.std::__1::unique_ptr.150"**
  %22 = load %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"** %21, align 8
  %23 = load i64, i64* %11, align 8
  %24 = lshr i64 %23, 1
  %25 = and i64 %24, 2147483647
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %22, i64 %25
  %27 = add i64 %23, 2
  %28 = and i64 %27, 4294967294
  %29 = and i64 %23, -4294967295
  %30 = or i64 %28, %29
  store i64 %30, i64* %11, align 8
  %31 = bitcast %"class.std::__1::unique_ptr.150"* %26 to i64*
  store i64 %20, i64* %31, align 8
  %32 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* %3) #10
  %33 = ptrtoint %"class.SkSL::Expression"* %32 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.278* %13, i32 1, i32 1) #10
  %34 = load %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"** %21, align 8
  %35 = load i64, i64* %11, align 8
  %36 = lshr i64 %35, 1
  %37 = and i64 %36, 2147483647
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %34, i64 %37
  %39 = add i64 %35, 2
  %40 = and i64 %39, 4294967294
  %41 = and i64 %35, -4294967295
  %42 = or i64 %40, %41
  store i64 %42, i64* %11, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.150"* %38 to i64*
  store i64 %33, i64* %43, align 8
  %44 = call i64 @strlen(i8* %1) #12
  %45 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertIdentifierEiNS_14StringFragmentE(%"class.SkSL::IRGenerator"* %7, i32 -1, i8* %1, i64 %44) #10
  %46 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %6, i64 0, i32 0, i32 0, i64 16
  %47 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %6, i64 0, i32 0, i32 0, i64 0
  %48 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %6, i64 0, i32 0, i32 0, i64 24
  %49 = bitcast i8* %48 to i64*
  %50 = bitcast i8* %46 to i8**
  store i8* %47, i8** %50, align 8
  store i64 17179869184, i64* %49, align 8
  %51 = bitcast i8* %46 to %class.SkTArray.278*
  %52 = call dereferenceable(16) %class.SkTArray.278* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.278* %51, %class.SkTArray.278* dereferenceable(16) %13) #10
  %53 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator4callEiNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE9SkSTArrayILi2ES6_Lb0EE(%"class.SkSL::IRGenerator"* %7, i32 -1, %"class.SkSL::Expression"* %45, %class.SkSTArray.276* nonnull %6) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleExpression"* %0, %"class.SkSL::Expression"* %53) #10
  %54 = load i64, i64* %49, align 8
  %55 = and i64 %54, 4294967294
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %4
  %58 = bitcast i8* %46 to %"class.std::__1::unique_ptr.150"**
  br label %63

59:                                               ; preds = %74, %4
  %60 = phi i64 [ %54, %4 ], [ %76, %74 ]
  %61 = and i64 %60, 1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %82, label %80

63:                                               ; preds = %74, %57
  %64 = phi i64 [ 0, %57 ], [ %75, %74 ]
  %65 = load %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"** %58, align 8
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %65, i64 %64, i32 0, i32 0, i32 0
  %67 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %66, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %66, align 8
  %68 = icmp eq %"class.SkSL::Expression"* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %63
  %70 = bitcast %"class.SkSL::Expression"* %67 to void (%"class.SkSL::Expression"*)***
  %71 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %71, i64 1
  %73 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %72, align 8
  call void %73(%"class.SkSL::Expression"* nonnull %67) #10
  br label %74

74:                                               ; preds = %69, %63
  %75 = add nuw nsw i64 %64, 1
  %76 = load i64, i64* %49, align 8
  %77 = lshr i64 %76, 1
  %78 = and i64 %77, 2147483647
  %79 = icmp ult i64 %75, %78
  br i1 %79, label %63, label %59

80:                                               ; preds = %59
  %81 = load i8*, i8** %50, align 8
  call void @_Z7sk_freePv(i8* %81) #10
  br label %82

82:                                               ; preds = %59, %80
  %83 = load i64, i64* %11, align 8
  %84 = and i64 %83, 4294967294
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %101, %82
  %87 = phi i64 [ %83, %82 ], [ %103, %101 ]
  %88 = and i64 %87, 1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %109, label %107

90:                                               ; preds = %82, %101
  %91 = phi i64 [ %102, %101 ], [ 0, %82 ]
  %92 = load %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"** %21, align 8
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %92, i64 %91, i32 0, i32 0, i32 0
  %94 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %93, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %93, align 8
  %95 = icmp eq %"class.SkSL::Expression"* %94, null
  br i1 %95, label %101, label %96

96:                                               ; preds = %90
  %97 = bitcast %"class.SkSL::Expression"* %94 to void (%"class.SkSL::Expression"*)***
  %98 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %97, align 8
  %99 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %98, i64 1
  %100 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %99, align 8
  call void %100(%"class.SkSL::Expression"* nonnull %94) #10
  br label %101

101:                                              ; preds = %96, %90
  %102 = add nuw nsw i64 %91, 1
  %103 = load i64, i64* %11, align 8
  %104 = lshr i64 %103, 1
  %105 = and i64 %104, 2147483647
  %106 = icmp ult i64 %102, %105
  br i1 %106, label %90, label %86

107:                                              ; preds = %86
  %108 = load i8*, i8** %12, align 8
  call void @_Z7sk_freePv(i8* %108) #10
  br label %109

109:                                              ; preds = %86, %107
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl4CeilENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl5ClampENS0_13DSLExpressionES1_S1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %7 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %9 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %10 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %9, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %10, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %3) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_S3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* nonnull %9, %"class.SkSL::dsl::DSLExpression"* nonnull %10)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7, i8* %4, i32 %5) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %10) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %9) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_S3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* noalias sret, i8*, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %class.SkSTArray.276, align 8
  %7 = alloca %class.SkSTArray.276, align 8
  %8 = tail call dereferenceable(176) %"class.SkSL::IRGenerator"* @_ZN4SkSL3dsl9DSLWriter11IRGeneratorEv() #10
  %9 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %6, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #10
  %10 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %6, i64 0, i32 0, i32 0, i64 16
  %11 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %6, i64 0, i32 0, i32 0, i64 24
  %12 = bitcast i8* %11 to i64*
  %13 = bitcast i8* %10 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  store i8* %9, i8** %13, align 8
  store i64 17179869184, i64* %12, align 8
  %14 = bitcast i8* %10 to %class.SkTArray.278*
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.278* %14, i32 3, i32 0) #10
  %15 = load i64, i64* %12, align 8
  %16 = shl i64 %15, 32
  %17 = and i64 %16, 4294967296
  %18 = and i64 %15, -4294967297
  %19 = or i64 %17, %18
  store i64 %19, i64* %12, align 8
  %20 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* %2) #10
  %21 = ptrtoint %"class.SkSL::Expression"* %20 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.278* %14, i32 1, i32 1) #10
  %22 = bitcast i8* %10 to %"class.std::__1::unique_ptr.150"**
  %23 = load %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"** %22, align 8
  %24 = load i64, i64* %12, align 8
  %25 = lshr i64 %24, 1
  %26 = and i64 %25, 2147483647
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %23, i64 %26
  %28 = add i64 %24, 2
  %29 = and i64 %28, 4294967294
  %30 = and i64 %24, -4294967295
  %31 = or i64 %29, %30
  store i64 %31, i64* %12, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.150"* %27 to i64*
  store i64 %21, i64* %32, align 8
  %33 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* %3) #10
  %34 = ptrtoint %"class.SkSL::Expression"* %33 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.278* %14, i32 1, i32 1) #10
  %35 = load %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"** %22, align 8
  %36 = load i64, i64* %12, align 8
  %37 = lshr i64 %36, 1
  %38 = and i64 %37, 2147483647
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %35, i64 %38
  %40 = add i64 %36, 2
  %41 = and i64 %40, 4294967294
  %42 = and i64 %36, -4294967295
  %43 = or i64 %41, %42
  store i64 %43, i64* %12, align 8
  %44 = bitcast %"class.std::__1::unique_ptr.150"* %39 to i64*
  store i64 %34, i64* %44, align 8
  %45 = call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* %4) #10
  %46 = ptrtoint %"class.SkSL::Expression"* %45 to i64
  call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.278* %14, i32 1, i32 1) #10
  %47 = load %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"** %22, align 8
  %48 = load i64, i64* %12, align 8
  %49 = lshr i64 %48, 1
  %50 = and i64 %49, 2147483647
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %47, i64 %50
  %52 = add i64 %48, 2
  %53 = and i64 %52, 4294967294
  %54 = and i64 %48, -4294967295
  %55 = or i64 %53, %54
  store i64 %55, i64* %12, align 8
  %56 = bitcast %"class.std::__1::unique_ptr.150"* %51 to i64*
  store i64 %46, i64* %56, align 8
  %57 = call i64 @strlen(i8* %1) #12
  %58 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertIdentifierEiNS_14StringFragmentE(%"class.SkSL::IRGenerator"* %8, i32 -1, i8* %1, i64 %57) #10
  %59 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %7, i64 0, i32 0, i32 0, i64 16
  %60 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %7, i64 0, i32 0, i32 0, i64 0
  %61 = getelementptr inbounds %class.SkSTArray.276, %class.SkSTArray.276* %7, i64 0, i32 0, i32 0, i64 24
  %62 = bitcast i8* %61 to i64*
  %63 = bitcast i8* %59 to i8**
  store i8* %60, i8** %63, align 8
  store i64 17179869184, i64* %62, align 8
  %64 = bitcast i8* %59 to %class.SkTArray.278*
  %65 = call dereferenceable(16) %class.SkTArray.278* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.278* %64, %class.SkTArray.278* dereferenceable(16) %14) #10
  %66 = call %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator4callEiNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE9SkSTArrayILi2ES6_Lb0EE(%"class.SkSL::IRGenerator"* %8, i32 -1, %"class.SkSL::Expression"* %58, %class.SkSTArray.276* nonnull %7) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleExpression"* %0, %"class.SkSL::Expression"* %66) #10
  %67 = load i64, i64* %62, align 8
  %68 = and i64 %67, 4294967294
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %5
  %71 = bitcast i8* %59 to %"class.std::__1::unique_ptr.150"**
  br label %76

72:                                               ; preds = %87, %5
  %73 = phi i64 [ %67, %5 ], [ %89, %87 ]
  %74 = and i64 %73, 1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %95, label %93

76:                                               ; preds = %87, %70
  %77 = phi i64 [ 0, %70 ], [ %88, %87 ]
  %78 = load %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"** %71, align 8
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %78, i64 %77, i32 0, i32 0, i32 0
  %80 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %79, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %79, align 8
  %81 = icmp eq %"class.SkSL::Expression"* %80, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %76
  %83 = bitcast %"class.SkSL::Expression"* %80 to void (%"class.SkSL::Expression"*)***
  %84 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %84, i64 1
  %86 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %85, align 8
  call void %86(%"class.SkSL::Expression"* nonnull %80) #10
  br label %87

87:                                               ; preds = %82, %76
  %88 = add nuw nsw i64 %77, 1
  %89 = load i64, i64* %62, align 8
  %90 = lshr i64 %89, 1
  %91 = and i64 %90, 2147483647
  %92 = icmp ult i64 %88, %91
  br i1 %92, label %76, label %72

93:                                               ; preds = %72
  %94 = load i8*, i8** %63, align 8
  call void @_Z7sk_freePv(i8* %94) #10
  br label %95

95:                                               ; preds = %72, %93
  %96 = load i64, i64* %12, align 8
  %97 = and i64 %96, 4294967294
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %114, %95
  %100 = phi i64 [ %96, %95 ], [ %116, %114 ]
  %101 = and i64 %100, 1
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %122, label %120

103:                                              ; preds = %95, %114
  %104 = phi i64 [ %115, %114 ], [ 0, %95 ]
  %105 = load %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"** %22, align 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %105, i64 %104, i32 0, i32 0, i32 0
  %107 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %106, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %106, align 8
  %108 = icmp eq %"class.SkSL::Expression"* %107, null
  br i1 %108, label %114, label %109

109:                                              ; preds = %103
  %110 = bitcast %"class.SkSL::Expression"* %107 to void (%"class.SkSL::Expression"*)***
  %111 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %111, i64 1
  %113 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %112, align 8
  call void %113(%"class.SkSL::Expression"* nonnull %107) #10
  br label %114

114:                                              ; preds = %109, %103
  %115 = add nuw nsw i64 %104, 1
  %116 = load i64, i64* %12, align 8
  %117 = lshr i64 %116, 1
  %118 = and i64 %117, 2147483647
  %119 = icmp ult i64 %115, %118
  br i1 %119, label %103, label %99

120:                                              ; preds = %99
  %121 = load i8*, i8** %13, align 8
  call void @_Z7sk_freePv(i8* %121) #10
  br label %122

122:                                              ; preds = %99, %120
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl3CosENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl5CrossENS0_13DSLExpressionES1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* nonnull %8)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, i8* %3, i32 %4) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl7DegreesENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl8DistanceENS0_13DSLExpressionES1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* nonnull %8)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, i8* %3, i32 %4) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl3DotENS0_13DSLExpressionES1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* nonnull %8)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, i8* %3, i32 %4) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl5EqualENS0_13DSLExpressionES1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* nonnull %8)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, i8* %3, i32 %4) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl3ExpENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl4Exp2ENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl11FaceforwardENS0_13DSLExpressionES1_S1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %7 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %9 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %10 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %9, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %10, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %3) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_S3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* nonnull %9, %"class.SkSL::dsl::DSLExpression"* nonnull %10)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7, i8* %4, i32 %5) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %10) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %9) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl5FractENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl5FloorENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl11GreaterThanENS0_13DSLExpressionES1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* nonnull %8)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, i8* %3, i32 %4) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl16GreaterThanEqualENS0_13DSLExpressionES1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* nonnull %8)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, i8* %3, i32 %4) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl7InverseENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl11InversesqrtENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl6LengthENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl8LessThanENS0_13DSLExpressionES1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* nonnull %8)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, i8* %3, i32 %4) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl13LessThanEqualENS0_13DSLExpressionES1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* nonnull %8)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, i8* %3, i32 %4) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl3LogENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl4Log2ENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl3MaxENS0_13DSLExpressionES1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* nonnull %8)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, i8* %3, i32 %4) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl3MinENS0_13DSLExpressionES1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* nonnull %8)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, i8* %3, i32 %4) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl3MixENS0_13DSLExpressionES1_S1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %7 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %9 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %10 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %9, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %10, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %3) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_S3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* nonnull %9, %"class.SkSL::dsl::DSLExpression"* nonnull %10)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7, i8* %4, i32 %5) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %10) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %9) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl3ModENS0_13DSLExpressionES1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* nonnull %8)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, i8* %3, i32 %4) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl9NormalizeENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl8NotEqualENS0_13DSLExpressionES1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* nonnull %8)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, i8* %3, i32 %4) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl3PowENS0_13DSLExpressionES1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* nonnull %8)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, i8* %3, i32 %4) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl7RadiansENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl7ReflectENS0_13DSLExpressionES1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* nonnull %8)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, i8* %3, i32 %4) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl7RefractENS0_13DSLExpressionES1_S1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %7 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %9 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %10 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %9, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %10, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %3) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_S3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* nonnull %9, %"class.SkSL::dsl::DSLExpression"* nonnull %10)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7, i8* %4, i32 %5) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %10) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %9) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl6SampleENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl6SampleENS0_13DSLExpressionES1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* nonnull %8)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, i8* %3, i32 %4) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl6SampleENS0_13DSLExpressionES1_S1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %7 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %9 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %10 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %9, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %10, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %3) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_S3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.37, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* nonnull %9, %"class.SkSL::dsl::DSLExpression"* nonnull %10)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7, i8* %4, i32 %5) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %10) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %9) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl8SaturateENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl4SignENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl3SinENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl10SmoothstepENS0_13DSLExpressionES1_S1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %7 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %9 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %10 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %9, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %10, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %3) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_S3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* nonnull %9, %"class.SkSL::dsl::DSLExpression"* nonnull %10)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7, i8* %4, i32 %5) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %10) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %9) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl4SqrtENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl4StepENS0_13DSLExpressionES1_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %2) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionES3_EEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.43, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* nonnull %8)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, i8* %3, i32 %4) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8 signext, i8*, i32) local_unnamed_addr #0 {
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %6, i8 signext %2, i8* %3, i32 %4)
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL3dsl7DSLCore7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8 signext, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %7 = alloca %class.SkSTArray.281, align 8
  %8 = tail call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #10
  %9 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* %1) #10
  %10 = getelementptr inbounds %class.SkSTArray.281, %class.SkSTArray.281* %7, i64 0, i32 0, i32 0, i64 8
  %11 = getelementptr inbounds %class.SkSTArray.281, %class.SkSTArray.281* %7, i64 0, i32 0, i32 0, i64 16
  %12 = bitcast i8* %11 to i64*
  %13 = bitcast i8* %10 to i8**
  %14 = getelementptr inbounds %class.SkSTArray.281, %class.SkSTArray.281* %7, i64 0, i32 0, i32 0, i64 0
  store i8* %14, i8** %13, align 8
  store i64 34359738370, i64* %12, align 8
  store i8 %2, i8* %14, align 8
  %15 = call %"class.SkSL::Expression"* @_ZN4SkSL7Swizzle7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi4EaLb0EE(%"class.SkSL::Context"* dereferenceable(744) %8, %"class.SkSL::Expression"* %9, %class.SkSTArray.281* nonnull %7) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, %"class.SkSL::Expression"* %15) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6, i8* %3, i32 %4) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %6) #10
  %16 = load i64, i64* %12, align 8
  %17 = and i64 %16, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %5
  %20 = load i8*, i8** %13, align 8
  call void @_Z7sk_freePv(i8* %20) #10
  br label %21

21:                                               ; preds = %5, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeES3_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8 signext, i8 signext, i8*, i32) local_unnamed_addr #0 {
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeES4_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %7, i8 signext %2, i8 signext %3, i8* %4, i32 %5)
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL3dsl7DSLCore7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeES4_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8 signext, i8 signext, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %8 = alloca %class.SkSTArray.281, align 8
  %9 = tail call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #10
  %10 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* %1) #10
  %11 = getelementptr inbounds %class.SkSTArray.281, %class.SkSTArray.281* %8, i64 0, i32 0, i32 0, i64 8
  %12 = getelementptr inbounds %class.SkSTArray.281, %class.SkSTArray.281* %8, i64 0, i32 0, i32 0, i64 16
  %13 = bitcast i8* %12 to i64*
  %14 = bitcast i8* %11 to i8**
  %15 = getelementptr inbounds %class.SkSTArray.281, %class.SkSTArray.281* %8, i64 0, i32 0, i32 0, i64 0
  store i8* %15, i8** %14, align 8
  store i64 34359738372, i64* %13, align 8
  store i8 %2, i8* %15, align 8
  %16 = getelementptr inbounds %class.SkSTArray.281, %class.SkSTArray.281* %8, i64 0, i32 0, i32 0, i64 1
  store i8 %3, i8* %16, align 1
  %17 = call %"class.SkSL::Expression"* @_ZN4SkSL7Swizzle7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi4EaLb0EE(%"class.SkSL::Context"* dereferenceable(744) %9, %"class.SkSL::Expression"* %10, %class.SkSTArray.281* nonnull %8) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7, %"class.SkSL::Expression"* %17) #10
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7, i8* %4, i32 %5) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7) #10
  %18 = load i64, i64* %13, align 8
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %6
  %22 = load i8*, i8** %14, align 8
  call void @_Z7sk_freePv(i8* %22) #10
  br label %23

23:                                               ; preds = %6, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeES3_S3_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8 signext, i8 signext, i8 signext, %"class.SkSL::dsl::PositionInfo"* nocapture readonly byval(%"class.SkSL::dsl::PositionInfo") align 8) local_unnamed_addr #0 {
  %7 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %7, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeES4_S4_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %7, i8 signext %2, i8 signext %3, i8 signext %4, %"class.SkSL::dsl::PositionInfo"* nonnull byval(%"class.SkSL::dsl::PositionInfo") align 8 %5)
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL3dsl7DSLCore7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeES4_S4_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8 signext, i8 signext, i8 signext, %"class.SkSL::dsl::PositionInfo"* byval(%"class.SkSL::dsl::PositionInfo") align 8) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %8 = alloca %class.SkSTArray.281, align 8
  %9 = alloca [3 x i8], align 1
  %10 = tail call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #10
  %11 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* %1) #10
  %12 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %12) #10
  store i8 %2, i8* %12, align 1
  %13 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i64 0, i64 1
  store i8 %3, i8* %13, align 1
  %14 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i64 0, i64 2
  store i8 %4, i8* %14, align 1
  %15 = getelementptr inbounds %class.SkSTArray.281, %class.SkSTArray.281* %8, i64 0, i32 0, i32 0, i64 8
  %16 = getelementptr inbounds %class.SkSTArray.281, %class.SkSTArray.281* %8, i64 0, i32 0, i32 0, i64 16
  %17 = bitcast i8* %16 to i64*
  %18 = bitcast i8* %15 to i8**
  %19 = getelementptr inbounds %class.SkSTArray.281, %class.SkSTArray.281* %8, i64 0, i32 0, i32 0, i64 0
  store i8* %19, i8** %18, align 8
  store i64 34359738374, i64* %17, align 8
  store i8 %2, i8* %19, align 8
  %20 = getelementptr inbounds %class.SkSTArray.281, %class.SkSTArray.281* %8, i64 0, i32 0, i32 0, i64 1
  store i8 %3, i8* %20, align 1
  br label %21

21:                                               ; preds = %6, %21
  %22 = phi i64 [ 2, %6 ], [ %27, %21 ]
  %23 = load i8*, i8** %18, align 8
  %24 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i64 0, i64 %22
  %25 = load i8, i8* %24, align 1
  %26 = getelementptr inbounds i8, i8* %23, i64 %22
  store i8 %25, i8* %26, align 1
  %27 = add nuw nsw i64 %22, 1
  %28 = load i64, i64* %17, align 8
  %29 = lshr i64 %28, 1
  %30 = and i64 %29, 2147483647
  %31 = icmp ult i64 %27, %30
  br i1 %31, label %21, label %32

32:                                               ; preds = %21
  %33 = call %"class.SkSL::Expression"* @_ZN4SkSL7Swizzle7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi4EaLb0EE(%"class.SkSL::Context"* dereferenceable(744) %10, %"class.SkSL::Expression"* %11, %class.SkSTArray.281* nonnull %8) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7, %"class.SkSL::Expression"* %33) #10
  %34 = getelementptr inbounds %"class.SkSL::dsl::PositionInfo", %"class.SkSL::dsl::PositionInfo"* %5, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.SkSL::dsl::PositionInfo", %"class.SkSL::dsl::PositionInfo"* %5, i64 0, i32 1
  %37 = load i32, i32* %36, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7, i8* %35, i32 %37) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %7) #10
  %38 = load i64, i64* %17, align 8
  %39 = and i64 %38, 1
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %32
  %42 = load i8*, i8** %18, align 8
  call void @_Z7sk_freePv(i8* %42) #10
  br label %43

43:                                               ; preds = %32, %41
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeES3_S3_S3_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8 signext, i8 signext, i8 signext, i8 signext, %"class.SkSL::dsl::PositionInfo"* nocapture readonly byval(%"class.SkSL::dsl::PositionInfo") align 8) local_unnamed_addr #0 {
  %8 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %8, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeES4_S4_S4_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* sret %0, %"class.SkSL::dsl::DSLExpression"* nonnull %8, i8 signext %2, i8 signext %3, i8 signext %4, i8 signext %5, %"class.SkSL::dsl::PositionInfo"* nonnull byval(%"class.SkSL::dsl::PositionInfo") align 8 %6)
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL3dsl7DSLCore7SwizzleENS0_13DSLExpressionENS_16SwizzleComponent4TypeES4_S4_S4_NS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8 signext, i8 signext, i8 signext, i8 signext, %"class.SkSL::dsl::PositionInfo"* byval(%"class.SkSL::dsl::PositionInfo") align 8) local_unnamed_addr #0 comdat align 2 {
  %8 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %9 = alloca %class.SkSTArray.281, align 8
  %10 = alloca [4 x i8], align 1
  %11 = tail call dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() #10
  %12 = tail call %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"* %1) #10
  %13 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #10
  store i8 %2, i8* %13, align 1
  %14 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 1
  store i8 %3, i8* %14, align 1
  %15 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 2
  store i8 %4, i8* %15, align 1
  %16 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 3
  store i8 %5, i8* %16, align 1
  %17 = getelementptr inbounds %class.SkSTArray.281, %class.SkSTArray.281* %9, i64 0, i32 0, i32 0, i64 8
  %18 = getelementptr inbounds %class.SkSTArray.281, %class.SkSTArray.281* %9, i64 0, i32 0, i32 0, i64 16
  %19 = bitcast i8* %18 to i64*
  %20 = bitcast i8* %17 to i8**
  %21 = getelementptr inbounds %class.SkSTArray.281, %class.SkSTArray.281* %9, i64 0, i32 0, i32 0, i64 0
  store i8* %21, i8** %20, align 8
  store i64 34359738376, i64* %19, align 8
  store i8 %2, i8* %21, align 8
  %22 = getelementptr inbounds %class.SkSTArray.281, %class.SkSTArray.281* %9, i64 0, i32 0, i32 0, i64 1
  store i8 %3, i8* %22, align 1
  br label %23

23:                                               ; preds = %7, %23
  %24 = phi i64 [ 2, %7 ], [ %29, %23 ]
  %25 = load i8*, i8** %20, align 8
  %26 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 %24
  %27 = load i8, i8* %26, align 1
  %28 = getelementptr inbounds i8, i8* %25, i64 %24
  store i8 %27, i8* %28, align 1
  %29 = add nuw nsw i64 %24, 1
  %30 = load i64, i64* %19, align 8
  %31 = lshr i64 %30, 1
  %32 = and i64 %31, 2147483647
  %33 = icmp ult i64 %29, %32
  br i1 %33, label %23, label %34

34:                                               ; preds = %23
  %35 = call %"class.SkSL::Expression"* @_ZN4SkSL7Swizzle7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi4EaLb0EE(%"class.SkSL::Context"* dereferenceable(744) %11, %"class.SkSL::Expression"* %12, %class.SkSTArray.281* nonnull %9) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %8, %"class.SkSL::Expression"* %35) #10
  %36 = getelementptr inbounds %"class.SkSL::dsl::PositionInfo", %"class.SkSL::dsl::PositionInfo"* %6, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.SkSL::dsl::PositionInfo", %"class.SkSL::dsl::PositionInfo"* %6, i64 0, i32 1
  %39 = load i32, i32* %38, align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %8, i8* %37, i32 %39) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %8) #10
  %40 = load i64, i64* %19, align 8
  %41 = and i64 %40, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %45, label %43

43:                                               ; preds = %34
  %44 = load i8*, i8** %20, align 8
  call void @_Z7sk_freePv(i8* %44) #10
  br label %45

45:                                               ; preds = %34, %43
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl3TanENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4SkSL3dsl8UnpremulENS0_13DSLExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* noalias sret, %"class.SkSL::dsl::DSLExpression"*, i8*, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.SkSL::dsl::DSLPossibleExpression", align 8
  %6 = alloca %"class.SkSL::dsl::DSLExpression", align 8
  call void @_ZN4SkSL3dsl13DSLExpressionC1EOS1_(%"class.SkSL::dsl::DSLExpression"* nonnull %6, %"class.SkSL::dsl::DSLExpression"* dereferenceable(8) %1) #10
  call void @_ZN4SkSL3dsl7DSLCore4CallIJNS0_13DSLExpressionEEEENS0_21DSLPossibleExpressionEPKcDpT_(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull sret %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i64 0, i64 0), %"class.SkSL::dsl::DSLExpression"* nonnull %6)
  call void @_ZN4SkSL3dsl13DSLExpressionC1ENS0_21DSLPossibleExpressionENS0_12PositionInfoE(%"class.SkSL::dsl::DSLExpression"* %0, %"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5, i8* %2, i32 %3) #10
  call void @_ZN4SkSL3dsl21DSLPossibleExpressionD1Ev(%"class.SkSL::dsl::DSLPossibleExpression"* nonnull %5) #10
  call void @_ZN4SkSL3dsl13DSLExpressionD1Ev(%"class.SkSL::dsl::DSLExpression"* nonnull %6) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #3

declare dereferenceable(192) %"class.SkSL::dsl::DSLWriter"* @_ZN4SkSL3dsl9DSLWriter8InstanceEv() local_unnamed_addr #2

declare void @_ZN4SkSL3dsl6DSLVarC1EPKc(%"class.SkSL::dsl::DSLVar"*, i8*) unnamed_addr #2

declare void @_ZN4SkSL3dsl12DSLStatementC1ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLStatement"*, %"class.SkSL::Statement"*) unnamed_addr #2

declare i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL14BreakStatementD0Ev(%"class.SkSL::BreakStatement"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::BreakStatement"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL14BreakStatement11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::BreakStatement"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 6, i8* %4, align 1
  %5 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @.str.48, i64 0, i64 0), i64 6, i1 false) #10
  %6 = getelementptr inbounds i8, i8* %5, i64 6
  store i8 0, i8* %6, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK4SkSL9Statement7isEmptyEv(%"class.SkSL::Statement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL14BreakStatement5cloneEv(%"class.SkSL::BreakStatement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::BreakStatement", %"class.SkSL::BreakStatement"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #10
  %4 = load i32, i32* %2, align 4
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 %4, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 12
  %8 = bitcast i8* %7 to i32*
  store i32 17, i32* %8, align 4
  %9 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL14BreakStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = bitcast i8* %3 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL6IRNodeD2Ev(%"class.SkSL::IRNode"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN4SkSL4Pool10FreeMemoryEPv(i8*) local_unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL17ContinueStatementD0Ev(%"class.SkSL::ContinueStatement"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::ContinueStatement"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL17ContinueStatement11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::ContinueStatement"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 9, i8* %4, align 1
  %5 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i64 0, i64 0), i64 9, i1 false) #10
  %6 = getelementptr inbounds i8, i8* %5, i64 9
  store i8 0, i8* %6, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL17ContinueStatement5cloneEv(%"class.SkSL::ContinueStatement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ContinueStatement", %"class.SkSL::ContinueStatement"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #10
  %4 = load i32, i32* %2, align 4
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 %4, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 12
  %8 = bitcast i8* %7 to i32*
  store i32 18, i32* %8, align 4
  %9 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL17ContinueStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = bitcast i8* %3 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %10
}

declare void @_ZN4SkSL3dsl9DSLWriter11ReportErrorEPKcPNS0_12PositionInfoE(i8*, %"class.SkSL::dsl::PositionInfo"*) local_unnamed_addr #2

declare %"class.SkSL::Statement"* @_ZN4SkSL3dsl9DSLWriter11DeclarationERNS0_6DSLVarE(%"class.SkSL::dsl::DSLVar"* dereferenceable(152)) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN4SkSL14ProgramElementENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.130"*, %"class.std::__1::unique_ptr.132"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.132"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.130"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.130"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.132"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.132"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.132"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.132"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.132"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.132"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.132"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.130", %"class.std::__1::vector.130"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.132"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.132"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.SkSL::ProgramElement"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.132"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.132"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.132"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.132"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !36

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.132"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.132"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.132"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.132"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.132"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.132"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.132"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.132"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.132"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.132"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.132"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.132"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.132"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.132"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.132"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.132"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.132"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.132"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.132"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.132"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.132"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.132"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.132"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.132"*, %"class.std::__1::unique_ptr.132"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.132"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.132"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.132"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.132"*
  %138 = icmp eq %"class.std::__1::unique_ptr.132"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.132"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.132"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.SkSL::ProgramElement"*, %"class.SkSL::ProgramElement"** %142, align 8
  store %"class.SkSL::ProgramElement"* null, %"class.SkSL::ProgramElement"** %142, align 8
  %144 = icmp eq %"class.SkSL::ProgramElement"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.SkSL::ProgramElement"* %143 to void (%"class.SkSL::ProgramElement"*)***
  %147 = load void (%"class.SkSL::ProgramElement"*)**, void (%"class.SkSL::ProgramElement"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %147, i64 1
  %149 = load void (%"class.SkSL::ProgramElement"*)*, void (%"class.SkSL::ProgramElement"*)** %148, align 8
  tail call void %149(%"class.SkSL::ProgramElement"* nonnull %143) #10
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.132"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #11
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL20GlobalVarDeclarationD2Ev(%"class.SkSL::GlobalVarDeclaration"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::GlobalVarDeclaration", %"class.SkSL::GlobalVarDeclaration"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL20GlobalVarDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::GlobalVarDeclaration", %"class.SkSL::GlobalVarDeclaration"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %3, align 8
  %5 = icmp eq %"class.SkSL::Statement"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Statement"* %4 to void (%"class.SkSL::Statement"*)***
  %8 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %9, align 8
  tail call void %10(%"class.SkSL::Statement"* nonnull %4) #10
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL20GlobalVarDeclarationD0Ev(%"class.SkSL::GlobalVarDeclaration"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::GlobalVarDeclaration", %"class.SkSL::GlobalVarDeclaration"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL20GlobalVarDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::GlobalVarDeclaration", %"class.SkSL::GlobalVarDeclaration"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %3, align 8
  %5 = icmp eq %"class.SkSL::Statement"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Statement"* %4 to void (%"class.SkSL::Statement"*)***
  %8 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %9, align 8
  tail call void %10(%"class.SkSL::Statement"* nonnull %4) #10
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.SkSL::GlobalVarDeclaration"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL20GlobalVarDeclaration11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::GlobalVarDeclaration"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkSL::GlobalVarDeclaration", %"class.SkSL::GlobalVarDeclaration"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %3, align 8
  %5 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %4, i64 0, i32 0
  %6 = bitcast %"class.SkSL::Statement"* %4 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %7 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %7, i64 2
  %9 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %8, align 8
  tail call void %9(%"class.SkSL::String"* sret %0, %"class.SkSL::IRNode"* %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::ProgramElement"* @_ZNK4SkSL20GlobalVarDeclaration5cloneEv(%"class.SkSL::GlobalVarDeclaration"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::GlobalVarDeclaration", %"class.SkSL::GlobalVarDeclaration"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %2, align 8
  %4 = bitcast %"class.SkSL::Statement"* %3 to %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)***
  %5 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)**, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %5, i64 4
  %7 = load %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)*, %"class.SkSL::Statement"* (%"class.SkSL::Statement"*)** %6, align 8
  %8 = tail call %"class.SkSL::Statement"* %7(%"class.SkSL::Statement"* %3) #10
  %9 = ptrtoint %"class.SkSL::Statement"* %8 to i64
  %10 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #10
  %11 = getelementptr inbounds %"class.SkSL::Statement", %"class.SkSL::Statement"* %8, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 %12, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %10, i64 12
  %16 = bitcast i8* %15 to i32*
  store i32 4, i32* %16, align 4
  %17 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN4SkSL20GlobalVarDeclarationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %10, i64 16
  %19 = bitcast i8* %18 to i64*
  store i64 %9, i64* %19, align 8
  %20 = bitcast i8* %10 to %"class.SkSL::ProgramElement"*
  ret %"class.SkSL::ProgramElement"* %20
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL16DiscardStatementD0Ev(%"class.SkSL::DiscardStatement"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.SkSL::DiscardStatement"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL16DiscardStatement11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::DiscardStatement"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 8, i8* %4, align 1
  %5 = bitcast %"class.SkSL::String"* %0 to i64*
  store i64 4279671308514716004, i64* %5, align 8
  %6 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast i64* %6 to i8*
  store i8 0, i8* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL16DiscardStatement5cloneEv(%"class.SkSL::DiscardStatement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::DiscardStatement", %"class.SkSL::DiscardStatement"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 16) #10
  %4 = load i32, i32* %2, align 4
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %5 to i32*
  store i32 %4, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 12
  %8 = bitcast i8* %7 to i32*
  store i32 19, i32* %8, align 4
  %9 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL16DiscardStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = bitcast i8* %3 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %10
}

declare %"class.SkSL::Statement"* @_ZN4SkSL11DoStatement7ConvertERKNS_7ContextENSt3__110unique_ptrINS_9StatementENS4_14default_deleteIS6_EEEENS5_INS_10ExpressionENS7_ISA_EEEE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Statement"*, %"class.SkSL::Expression"*) local_unnamed_addr #2

declare dereferenceable(744) %"class.SkSL::Context"* @_ZN4SkSL3dsl9DSLWriter7ContextEv() local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL3dsl13DSLExpression7releaseEv(%"class.SkSL::dsl::DSLExpression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl20DSLPossibleStatementC1ENSt3__110unique_ptrINS_9StatementENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleStatement"*, %"class.SkSL::Statement"*) unnamed_addr #2

declare %"class.SkSL::Statement"* @_ZN4SkSL12ForStatement7ConvertERKNS_7ContextEiNSt3__110unique_ptrINS_9StatementENS4_14default_deleteIS6_EEEENS5_INS_10ExpressionENS7_ISA_EEEESC_S9_NS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Statement"*, %"class.SkSL::Expression"*, %"class.SkSL::Expression"*, %"class.SkSL::Statement"*, %"class.std::__1::shared_ptr.37"* byval(%"class.std::__1::shared_ptr.37") align 8) local_unnamed_addr #2

declare dereferenceable(16) %"class.std::__1::shared_ptr.37"* @_ZN4SkSL3dsl9DSLWriter11SymbolTableEv() local_unnamed_addr #2

declare %"class.SkSL::Statement"* @_ZN4SkSL11IfStatement7ConvertERKNS_7ContextEibNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS5_INS_9StatementENS7_ISA_EEEESC_(%"class.SkSL::Context"* dereferenceable(744), i32, i1 zeroext, %"class.SkSL::Expression"*, %"class.SkSL::Statement"*, %"class.SkSL::Statement"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL15ReturnStatementD2Ev(%"class.SkSL::ReturnStatement"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL15ReturnStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %5 = icmp eq %"class.SkSL::Expression"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Expression"* %4 to void (%"class.SkSL::Expression"*)***
  %8 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %9, align 8
  tail call void %10(%"class.SkSL::Expression"* nonnull %4) #10
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4SkSL15ReturnStatementD0Ev(%"class.SkSL::ReturnStatement"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL15ReturnStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %3, align 8
  %5 = icmp eq %"class.SkSL::Expression"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.SkSL::Expression"* %4 to void (%"class.SkSL::Expression"*)***
  %8 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %8, i64 1
  %10 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %9, align 8
  tail call void %10(%"class.SkSL::Expression"* nonnull %4) #10
  br label %11

11:                                               ; preds = %1, %6
  %12 = bitcast %"class.SkSL::ReturnStatement"* %0 to i8*
  tail call void @_ZN4SkSL4Pool10FreeMemoryEPv(i8* %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4SkSL15ReturnStatement11descriptionEv(%"class.SkSL::String"* noalias sret, %"class.SkSL::ReturnStatement"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.SkSL::String", align 8
  %4 = alloca %"class.SkSL::String", align 8
  %5 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %5, align 8
  %7 = icmp eq %"class.SkSL::Expression"* %6, null
  br i1 %7, label %32, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.SkSL::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  %10 = bitcast %"class.SkSL::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #10
  %11 = getelementptr inbounds %"class.SkSL::Expression", %"class.SkSL::Expression"* %6, i64 0, i32 0
  %12 = bitcast %"class.SkSL::Expression"* %6 to void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)***
  %13 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)**, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %13, i64 2
  %15 = load void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)*, void (%"class.SkSL::String"*, %"class.SkSL::IRNode"*)** %14, align 8
  call void %15(%"class.SkSL::String"* nonnull sret %4, %"class.SkSL::IRNode"* %11) #10
  call void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* nonnull sret %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.54, i64 0, i64 0), %"class.SkSL::String"* nonnull dereferenceable(24) %4) #10
  call void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret %0, %"class.SkSL::String"* nonnull %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i64 0, i64 0)) #10
  %16 = bitcast %"class.SkSL::String"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %8
  %21 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %8, %20
  %24 = bitcast %"class.SkSL::String"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.SkSL::String", %"class.SkSL::String"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #11
  br label %31

31:                                               ; preds = %23, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  br label %37

32:                                               ; preds = %2
  %33 = bitcast %"class.SkSL::String"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  store i8 7, i8* %34, align 1
  %35 = bitcast %"class.SkSL::String"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i64 0, i64 0), i64 7, i1 false) #10
  %36 = getelementptr inbounds i8, i8* %35, i64 7
  store i8 0, i8* %36, align 1
  br label %37

37:                                               ; preds = %32, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkSL::Statement"* @_ZNK4SkSL15ReturnStatement5cloneEv(%"class.SkSL::ReturnStatement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = getelementptr inbounds %"class.SkSL::ReturnStatement", %"class.SkSL::ReturnStatement"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %3, align 8
  %5 = bitcast %"class.SkSL::Expression"* %4 to %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)***
  %6 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)**, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %6, i64 10
  %8 = load %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)*, %"class.SkSL::Expression"* (%"class.SkSL::Expression"*)** %7, align 8
  %9 = tail call %"class.SkSL::Expression"* %8(%"class.SkSL::Expression"* %4) #10
  %10 = ptrtoint %"class.SkSL::Expression"* %9 to i64
  %11 = tail call i8* @_ZN4SkSL4Pool11AllocMemoryEm(i64 24) #10
  %12 = load i32, i32* %2, align 4
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 %12, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 12
  %16 = bitcast i8* %15 to i32*
  store i32 26, i32* %16, align 4
  %17 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4SkSL15ReturnStatementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %11, i64 16
  %19 = bitcast i8* %18 to i64*
  store i64 %10, i64* %19, align 8
  %20 = bitcast i8* %11 to %"class.SkSL::Statement"*
  ret %"class.SkSL::Statement"* %20
}

declare void @_ZN4SkSLplEPKcRKNS_6StringE(%"class.SkSL::String"* sret, i8*, %"class.SkSL::String"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK4SkSL6StringplEPKc(%"class.SkSL::String"* sret, %"class.SkSL::String"*, i8*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL17TernaryExpression7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEES9_S9_(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, %"class.SkSL::Expression"*, %"class.SkSL::Expression"*) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl21DSLPossibleExpressionC1ENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE(%"class.SkSL::dsl::DSLPossibleExpression"*, %"class.SkSL::Expression"*) unnamed_addr #2

declare void @_ZN4SkSL3dsl9DSLWriter13ConvertSwitchENSt3__110unique_ptrINS_10ExpressionENS2_14default_deleteIS4_EEEE9SkSTArrayILi2ES7_Lb0EE8SkTArrayIS8_ILi2ENS3_INS_9StatementENS5_ISB_EEEELb0EELb0EEb(%"class.SkSL::dsl::DSLPossibleStatement"* sret, %"class.SkSL::Expression"*, %class.SkSTArray.276*, %class.SkTArray.279*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI9SkSTArrayILi2ENSt3__110unique_ptrIN4SkSL9StatementENS1_14default_deleteIS4_EEEELb0EELb0EEC2EOS9_(%class.SkTArray.279*, %class.SkTArray.279* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTArray.279, %class.SkTArray.279* %1, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkTArray.279, %class.SkTArray.279* %1, i64 0, i32 0
  %9 = bitcast %class.SkTArray.279* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %class.SkTArray.279* %0 to i64*
  store i64 %10, i64* %11, align 8
  %12 = load i64, i64* %3, align 8
  %13 = and i64 %12, 4294967294
  %14 = getelementptr inbounds %class.SkTArray.279, %class.SkTArray.279* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, -4294967295
  %17 = or i64 %16, %13
  store i64 %17, i64* %14, align 8
  %18 = load i64, i64* %3, align 8
  %19 = and i64 %18, -8589934592
  %20 = and i64 %17, 8589934590
  %21 = or i64 %19, %20
  %22 = or i64 %21, 1
  store i64 %22, i64* %14, align 8
  %23 = load i64, i64* %3, align 8
  %24 = and i64 %23, 4294967296
  %25 = and i64 %22, -4294967297
  %26 = or i64 %25, %24
  store i64 %26, i64* %14, align 8
  store %class.SkSTArray* null, %class.SkSTArray** %8, align 8
  br label %57

27:                                               ; preds = %2
  %28 = lshr i64 %4, 1
  %29 = trunc i64 %28 to i32
  %30 = and i32 %29, 2147483647
  %31 = getelementptr inbounds %class.SkTArray.279, %class.SkTArray.279* %0, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %4, 4294967294
  %34 = and i64 %32, -4294967295
  %35 = or i64 %34, %33
  store i64 %35, i64* %31, align 8
  %36 = icmp eq i32 %30, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %27
  %38 = and i64 %35, 8589934591
  store i64 %38, i64* %31, align 8
  %39 = getelementptr inbounds %class.SkTArray.279, %class.SkTArray.279* %0, i64 0, i32 0
  store %class.SkSTArray* null, %class.SkSTArray** %39, align 8
  br label %50

40:                                               ; preds = %27
  %41 = icmp ugt i32 %30, 8
  %42 = select i1 %41, i32 %30, i32 8
  %43 = zext i32 %42 to i64
  %44 = shl nuw i64 %43, 33
  %45 = and i64 %35, 8589934591
  %46 = or i64 %45, %44
  store i64 %46, i64* %31, align 8
  %47 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 32) #10
  %48 = bitcast %class.SkTArray.279* %0 to i8**
  store i8* %47, i8** %48, align 8
  %49 = load i64, i64* %31, align 8
  br label %50

50:                                               ; preds = %37, %40
  %51 = phi i8* [ %47, %40 ], [ null, %37 ]
  %52 = phi i64 [ %49, %40 ], [ %38, %37 ]
  %53 = and i64 %52, -4294967298
  %54 = or i64 %53, 1
  store i64 %54, i64* %31, align 8
  tail call void @_ZN8SkTArrayI9SkSTArrayILi2ENSt3__110unique_ptrIN4SkSL9StatementENS1_14default_deleteIS4_EEEELb0EELb0EE4moveILb0EEENS1_9enable_ifIXntT_EvE4typeEPv(%class.SkTArray.279* %1, i8* %51)
  %55 = load i64, i64* %3, align 8
  %56 = and i64 %55, -4294967295
  br label %57

57:                                               ; preds = %50, %7
  %58 = phi i64 [ %56, %50 ], [ 1, %7 ]
  store i64 %58, i64* %3, align 8
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.278*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.278, %class.SkTArray.278* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #10
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.278, %class.SkTArray.278* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.150"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %61, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %61, align 8
  %63 = icmp eq %"class.SkSL::Expression"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Expression"* %62 to void (%"class.SkSL::Expression"*)***
  %66 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, align 8
  tail call void %68(%"class.SkSL::Expression"* nonnull %62) #10
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray.278* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #10
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI9SkSTArrayILi2ENSt3__110unique_ptrIN4SkSL9StatementENS1_14default_deleteIS4_EEEELb0EELb0EE12checkReallocEiNS9_11ReallocTypeE(%class.SkTArray.279*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.279, %class.SkTArray.279* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %56

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %56, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 32) #10
  tail call void @_ZN8SkTArrayI9SkSTArrayILi2ENSt3__110unique_ptrIN4SkSL9StatementENS1_14default_deleteIS4_EEEELb0EELb0EE4moveILb0EEENS1_9enable_ifIXntT_EvE4typeEPv(%class.SkTArray.279* %0, i8* %44)
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 1
  %47 = icmp eq i64 %46, 0
  %48 = bitcast %class.SkTArray.279* %0 to i8**
  br i1 %47, label %52, label %49

49:                                               ; preds = %35
  %50 = load i8*, i8** %48, align 8
  tail call void @_Z7sk_freePv(i8* %50) #10
  %51 = load i64, i64* %4, align 8
  br label %52

52:                                               ; preds = %35, %49
  %53 = phi i64 [ %51, %49 ], [ %45, %35 ]
  store i8* %44, i8** %48, align 8
  %54 = and i64 %53, -4294967298
  %55 = or i64 %54, 1
  store i64 %55, i64* %4, align 8
  br label %56

56:                                               ; preds = %52, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI9SkSTArrayILi2ENSt3__110unique_ptrIN4SkSL9StatementENS1_14default_deleteIS4_EEEELb0EELb0EE4moveILb0EEENS1_9enable_ifIXntT_EvE4typeEPv(%class.SkTArray.279*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTArray.279, %class.SkTArray.279* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 4294967294
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkTArray.279, %class.SkTArray.279* %0, i64 0, i32 0
  br label %10

9:                                                ; preds = %56, %2
  ret void

10:                                               ; preds = %7, %56
  %11 = phi i64 [ 0, %7 ], [ %57, %56 ]
  %12 = shl nuw nsw i64 %11, 5
  %13 = getelementptr inbounds i8, i8* %1, i64 %12
  %14 = load %class.SkSTArray*, %class.SkSTArray** %8, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 16
  %16 = getelementptr inbounds i8, i8* %13, i64 24
  %17 = bitcast i8* %16 to i64*
  %18 = bitcast i8* %15 to i8**
  store i8* %13, i8** %18, align 8
  store i64 17179869184, i64* %17, align 8
  %19 = bitcast i8* %15 to %class.SkTArray.233*
  %20 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %14, i64 %11, i32 0, i32 0, i64 16
  %21 = bitcast i8* %20 to %class.SkTArray.233*
  %22 = tail call dereferenceable(16) %class.SkTArray.233* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.233* %19, %class.SkTArray.233* dereferenceable(16) %21) #10
  %23 = load %class.SkSTArray*, %class.SkSTArray** %8, align 8
  %24 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %23, i64 %11, i32 0, i32 0, i64 16
  %25 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %23, i64 %11, i32 0, i32 0, i64 24
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, 4294967294
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %10
  %31 = bitcast i8* %24 to %"class.std::__1::unique_ptr.227"**
  br label %36

32:                                               ; preds = %47, %10
  %33 = phi i64 [ %27, %10 ], [ %49, %47 ]
  %34 = and i64 %33, 1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %56, label %53

36:                                               ; preds = %47, %30
  %37 = phi i64 [ 0, %30 ], [ %48, %47 ]
  %38 = load %"class.std::__1::unique_ptr.227"*, %"class.std::__1::unique_ptr.227"** %31, align 8
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %38, i64 %37, i32 0, i32 0, i32 0
  %40 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %39, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %39, align 8
  %41 = icmp eq %"class.SkSL::Statement"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %36
  %43 = bitcast %"class.SkSL::Statement"* %40 to void (%"class.SkSL::Statement"*)***
  %44 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %44, i64 1
  %46 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %45, align 8
  tail call void %46(%"class.SkSL::Statement"* nonnull %40) #10
  br label %47

47:                                               ; preds = %42, %36
  %48 = add nuw nsw i64 %37, 1
  %49 = load i64, i64* %26, align 8
  %50 = lshr i64 %49, 1
  %51 = and i64 %50, 2147483647
  %52 = icmp ult i64 %48, %51
  br i1 %52, label %36, label %32

53:                                               ; preds = %32
  %54 = bitcast i8* %24 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_Z7sk_freePv(i8* %55) #10
  br label %56

56:                                               ; preds = %32, %53
  %57 = add nuw nsw i64 %11, 1
  %58 = load i64, i64* %3, align 8
  %59 = lshr i64 %58, 1
  %60 = and i64 %59, 2147483647
  %61 = icmp ult i64 %57, %60
  br i1 %61, label %10, label %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray.233* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.233*, %class.SkTArray.233* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray.233* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray.233, %class.SkTArray.233* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray.233, %class.SkTArray.233* %0, i64 0, i32 0
  br label %59

11:                                               ; preds = %70, %4
  %12 = phi i64 [ %6, %4 ], [ %72, %70 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray.233, %class.SkTArray.233* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.233* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = bitcast %class.SkTArray.233* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %14, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkTArray.233, %class.SkTArray.233* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = load %"class.std::__1::unique_ptr.227"*, %"class.std::__1::unique_ptr.227"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %35, i64 %32
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr.227"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %37, align 8
  %40 = bitcast i8* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::unique_ptr.227"*, %"class.std::__1::unique_ptr.227"** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %41, i64 %32, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %42, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %42, align 8
  %44 = icmp eq %"class.SkSL::Statement"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.SkSL::Statement"* %43 to void (%"class.SkSL::Statement"*)***
  %47 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %48, align 8
  tail call void %49(%"class.SkSL::Statement"* nonnull %43) #10
  br label %50

50:                                               ; preds = %45, %31
  %51 = add nuw nsw i64 %32, 1
  %52 = load i64, i64* %14, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %31, label %56

56:                                               ; preds = %50, %11
  %57 = phi i64 [ %26, %11 ], [ %52, %50 ]
  %58 = and i64 %57, -4294967295
  store i64 %58, i64* %14, align 8
  br label %76

59:                                               ; preds = %9, %70
  %60 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr.227"*, %"class.std::__1::unique_ptr.227"** %10, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %62, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %62, align 8
  %64 = icmp eq %"class.SkSL::Statement"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Statement"* %63 to void (%"class.SkSL::Statement"*)***
  %67 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %68, align 8
  tail call void %69(%"class.SkSL::Statement"* nonnull %63) #10
  br label %70

70:                                               ; preds = %59, %65
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %5, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %11

76:                                               ; preds = %2, %56
  ret %class.SkTArray.233* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL9StatementENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.233*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.233, %class.SkTArray.233* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %87

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %87, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #10
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %75, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.233, %class.SkTArray.233* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %69, %48
  %51 = phi i64 [ 0, %48 ], [ %70, %69 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"class.std::__1::unique_ptr.227"*, %"class.std::__1::unique_ptr.227"** %49, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %54, i64 %51
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.227"* %55 to i64*
  %58 = load i64, i64* %57, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %56, align 8
  %59 = bitcast i8* %53 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::unique_ptr.227"*, %"class.std::__1::unique_ptr.227"** %49, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.227"* %60, i64 %51, i32 0, i32 0, i32 0
  %62 = load %"class.SkSL::Statement"*, %"class.SkSL::Statement"** %61, align 8
  store %"class.SkSL::Statement"* null, %"class.SkSL::Statement"** %61, align 8
  %63 = icmp eq %"class.SkSL::Statement"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %50
  %65 = bitcast %"class.SkSL::Statement"* %62 to void (%"class.SkSL::Statement"*)***
  %66 = load void (%"class.SkSL::Statement"*)**, void (%"class.SkSL::Statement"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %66, i64 1
  %68 = load void (%"class.SkSL::Statement"*)*, void (%"class.SkSL::Statement"*)** %67, align 8
  tail call void %68(%"class.SkSL::Statement"* nonnull %62) #10
  br label %69

69:                                               ; preds = %64, %50
  %70 = add nuw nsw i64 %51, 1
  %71 = load i64, i64* %4, align 8
  %72 = lshr i64 %71, 1
  %73 = and i64 %72, 2147483647
  %74 = icmp ult i64 %70, %73
  br i1 %74, label %50, label %75

75:                                               ; preds = %69, %35
  %76 = phi i64 [ %45, %35 ], [ %71, %69 ]
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  %79 = bitcast %class.SkTArray.233* %0 to i8**
  br i1 %78, label %83, label %80

80:                                               ; preds = %75
  %81 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %81) #10
  %82 = load i64, i64* %4, align 8
  br label %83

83:                                               ; preds = %75, %80
  %84 = phi i64 [ %82, %80 ], [ %76, %75 ]
  store i8* %44, i8** %79, align 8
  %85 = and i64 %84, -4294967298
  %86 = or i64 %85, 1
  store i64 %86, i64* %4, align 8
  br label %87

87:                                               ; preds = %83, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %class.SkTArray.278* @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EEaSEOS7_(%class.SkTArray.278*, %class.SkTArray.278* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %class.SkTArray.278* %0, %1
  br i1 %3, label %76, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkTArray.278, %class.SkTArray.278* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967294
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkTArray.278, %class.SkTArray.278* %0, i64 0, i32 0
  br label %59

11:                                               ; preds = %70, %4
  %12 = phi i64 [ %6, %4 ], [ %72, %70 ]
  %13 = and i64 %12, -4294967295
  store i64 %13, i64* %5, align 8
  %14 = getelementptr inbounds %class.SkTArray.278, %class.SkTArray.278* %1, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = lshr i64 %15, 1
  %17 = trunc i64 %16 to i32
  %18 = and i32 %17, 2147483647
  tail call void @_ZN8SkTArrayINSt3__110unique_ptrIN4SkSL10ExpressionENS0_14default_deleteIS3_EEEELb0EE12checkReallocEiNS7_11ReallocTypeE(%class.SkTArray.278* %0, i32 %18, i32 0)
  %19 = load i64, i64* %14, align 8
  %20 = and i64 %19, 4294967294
  %21 = load i64, i64* %5, align 8
  %22 = and i64 %21, -4294967295
  %23 = or i64 %22, %20
  store i64 %23, i64* %5, align 8
  %24 = bitcast %class.SkTArray.278* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = load i64, i64* %14, align 8
  %27 = and i64 %26, 4294967294
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %11
  %30 = getelementptr inbounds %class.SkTArray.278, %class.SkTArray.278* %1, i64 0, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi i64 [ 0, %29 ], [ %51, %50 ]
  %33 = shl nuw nsw i64 %32, 3
  %34 = getelementptr inbounds i8, i8* %25, i64 %33
  %35 = load %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"** %30, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %35, i64 %32
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::unique_ptr.150"* %36 to i64*
  %39 = load i64, i64* %38, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %37, align 8
  %40 = bitcast i8* %34 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"** %30, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %41, i64 %32, i32 0, i32 0, i32 0
  %43 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %42, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %42, align 8
  %44 = icmp eq %"class.SkSL::Expression"* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %31
  %46 = bitcast %"class.SkSL::Expression"* %43 to void (%"class.SkSL::Expression"*)***
  %47 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %47, i64 1
  %49 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %48, align 8
  tail call void %49(%"class.SkSL::Expression"* nonnull %43) #10
  br label %50

50:                                               ; preds = %45, %31
  %51 = add nuw nsw i64 %32, 1
  %52 = load i64, i64* %14, align 8
  %53 = lshr i64 %52, 1
  %54 = and i64 %53, 2147483647
  %55 = icmp ult i64 %51, %54
  br i1 %55, label %31, label %56

56:                                               ; preds = %50, %11
  %57 = phi i64 [ %26, %11 ], [ %52, %50 ]
  %58 = and i64 %57, -4294967295
  store i64 %58, i64* %14, align 8
  br label %76

59:                                               ; preds = %9, %70
  %60 = phi i64 [ 0, %9 ], [ %71, %70 ]
  %61 = load %"class.std::__1::unique_ptr.150"*, %"class.std::__1::unique_ptr.150"** %10, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.150"* %61, i64 %60, i32 0, i32 0, i32 0
  %63 = load %"class.SkSL::Expression"*, %"class.SkSL::Expression"** %62, align 8
  store %"class.SkSL::Expression"* null, %"class.SkSL::Expression"** %62, align 8
  %64 = icmp eq %"class.SkSL::Expression"* %63, null
  br i1 %64, label %70, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.SkSL::Expression"* %63 to void (%"class.SkSL::Expression"*)***
  %67 = load void (%"class.SkSL::Expression"*)**, void (%"class.SkSL::Expression"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %67, i64 1
  %69 = load void (%"class.SkSL::Expression"*)*, void (%"class.SkSL::Expression"*)** %68, align 8
  tail call void %69(%"class.SkSL::Expression"* nonnull %63) #10
  br label %70

70:                                               ; preds = %59, %65
  %71 = add nuw nsw i64 %60, 1
  %72 = load i64, i64* %5, align 8
  %73 = lshr i64 %72, 1
  %74 = and i64 %73, 2147483647
  %75 = icmp ult i64 %71, %74
  br i1 %75, label %59, label %11

76:                                               ; preds = %2, %56
  ret %class.SkTArray.278* %0
}

declare %"class.SkSL::Statement"* @_ZN4SkSL12ForStatement12ConvertWhileERKNS_7ContextEiNSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEENS5_INS_9StatementENS7_ISA_EEEENS4_10shared_ptrINS_11SymbolTableEEE(%"class.SkSL::Context"* dereferenceable(744), i32, %"class.SkSL::Expression"*, %"class.SkSL::Statement"*, %"class.SkSL::SymbolTable"*, %"class.std::__1::__shared_weak_count"*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL7Swizzle7ConvertERKNS_7ContextENSt3__110unique_ptrINS_10ExpressionENS4_14default_deleteIS6_EEEE9SkSTArrayILi4EaLb0EE(%"class.SkSL::Context"* dereferenceable(744), %"class.SkSL::Expression"*, %class.SkSTArray.281*) local_unnamed_addr #2

declare void @_ZN4SkSL3dsl9DSLWriterC1EPNS_8CompilerENS_11ProgramKindERKNS_15ProgramSettingsENS_12ParsedModuleEb(%"class.SkSL::dsl::DSLWriter"*, %"class.SkSL::Compiler"*, i8 signext, %"struct.SkSL::ProgramSettings"* dereferenceable(56), %"struct.SkSL::ParsedModule"* byval(%"struct.SkSL::ParsedModule") align 8, i1 zeroext) unnamed_addr #2

declare void @_ZN4SkSL3dsl7DSLCaseC1EOS1_(%"class.SkSL::dsl::DSLCase"*, %"class.SkSL::dsl::DSLCase"* dereferenceable(40)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4SkSL3dsl7DSLCaseD1Ev(%"class.SkSL::dsl::DSLCase"*) unnamed_addr #3

declare dereferenceable(176) %"class.SkSL::IRGenerator"* @_ZN4SkSL3dsl9DSLWriter11IRGeneratorEv() local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator4callEiNSt3__110unique_ptrINS_10ExpressionENS1_14default_deleteIS3_EEEE9SkSTArrayILi2ES6_Lb0EE(%"class.SkSL::IRGenerator"*, i32, %"class.SkSL::Expression"*, %class.SkSTArray.276*) local_unnamed_addr #2

declare %"class.SkSL::Expression"* @_ZN4SkSL11IRGenerator17convertIdentifierEiNS_14StringFragmentE(%"class.SkSL::IRGenerator"*, i32, i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4SkSL3dsl7DSLCore5BreakEv: argument 0"}
!4 = distinct !{!4, !"_ZN4SkSL3dsl7DSLCore5BreakEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN4SkSL3dsl7DSLCore8ContinueEv: argument 0"}
!7 = distinct !{!7, !"_ZN4SkSL3dsl7DSLCore8ContinueEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN4SkSL3dsl7DSLCore7DeclareERNS0_6DSLVarENS0_12PositionInfoE: argument 0"}
!10 = distinct !{!10, !"_ZN4SkSL3dsl7DSLCore7DeclareERNS0_6DSLVarENS0_12PositionInfoE"}
!11 = !{i8 0, i8 2}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN4SkSL3dsl7DSLCore7DiscardEv: argument 0"}
!14 = distinct !{!14, !"_ZN4SkSL3dsl7DSLCore7DiscardEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN4SkSL3dsl7DSLCore2DoENS0_12DSLStatementENS0_13DSLExpressionE: argument 0"}
!17 = distinct !{!17, !"_ZN4SkSL3dsl7DSLCore2DoENS0_12DSLStatementENS0_13DSLExpressionE"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN4SkSL3dsl7DSLCore3ForENS0_12DSLStatementENS0_13DSLExpressionES3_S2_NS0_12PositionInfoE: argument 0"}
!20 = distinct !{!20, !"_ZN4SkSL3dsl7DSLCore3ForENS0_12DSLStatementENS0_13DSLExpressionES3_S2_NS0_12PositionInfoE"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN4SkSL3dsl7DSLCore2IfENS0_13DSLExpressionENS0_12DSLStatementES3_b: argument 0"}
!23 = distinct !{!23, !"_ZN4SkSL3dsl7DSLCore2IfENS0_13DSLExpressionENS0_12DSLStatementES3_b"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN4SkSL3dsl7DSLCore6ReturnENS0_13DSLExpressionENS0_12PositionInfoE: argument 0"}
!26 = distinct !{!26, !"_ZN4SkSL3dsl7DSLCore6ReturnENS0_13DSLExpressionENS0_12PositionInfoE"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN4SkSL3dsl7DSLCore6SelectENS0_13DSLExpressionES2_S2_: argument 0"}
!29 = distinct !{!29, !"_ZN4SkSL3dsl7DSLCore6SelectENS0_13DSLExpressionES2_S2_"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN4SkSL3dsl7DSLCore2IfENS0_13DSLExpressionENS0_12DSLStatementES3_b: argument 0"}
!32 = distinct !{!32, !"_ZN4SkSL3dsl7DSLCore2IfENS0_13DSLExpressionENS0_12DSLStatementES3_b"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN4SkSL3dsl7DSLCore5WhileENS0_13DSLExpressionENS0_12DSLStatementE: argument 0"}
!35 = distinct !{!35, !"_ZN4SkSL3dsl7DSLCore5WhileENS0_13DSLExpressionENS0_12DSLStatementE"}
!36 = distinct !{!36, !37}
!37 = !{!"llvm.loop.unroll.disable"}
