; ModuleID = '../../headless/lib/browser/headless_devtools.cc'
source_filename = "../../headless/lib/browser/headless_devtools.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::TaskTraitsExtensionStorage" = type { i8, %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [8 x i8] }
%"class.headless::HeadlessBrowserImpl" = type { %"class.headless::HeadlessBrowser", %"class.headless::HeadlessDevToolsTarget", %"class.base::OnceCallback", %"struct.headless::HeadlessBrowser::Options", %"class.headless::HeadlessBrowserMainParts"*, %"class.base::flat_map", %"class.headless::HeadlessBrowserContext"*, %class.scoped_refptr.32, %"class.std::__1::unique_ptr.33", %"class.base::WeakPtrFactory" }
%"class.headless::HeadlessBrowser" = type { i32 (...)** }
%"class.headless::HeadlessDevToolsTarget" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.headless::HeadlessBrowser::Options" = type <{ i32, [4 x i8], i8**, %"class.net::HostPortPair", i8, [7 x i8], %"class.base::MessagePump"*, i8, i8, i8, [5 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr", %"class.gfx::Size", %"class.base::FilePath", i8, i8, i8, i8, [4 x i8], %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.24", i8, [7 x i8], %"class.base::FilePath", i32, [4 x i8] }>
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.base::MessagePump" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.net::ProxyConfig"* }
%"class.net::ProxyConfig" = type { i8, %class.GURL, i8, %"struct.net::ProxyConfig::ProxyRules" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.4" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.GURL* }
%"struct.net::ProxyConfig::ProxyRules" = type { %"class.net::ProxyBypassRules", i8, i32, %"class.net::ProxyList", %"class.net::ProxyList", %"class.net::ProxyList", %"class.net::ProxyList", %"class.net::ProxyList" }
%"class.net::ProxyBypassRules" = type { %"class.net::SchemeHostPortMatcher" }
%"class.net::SchemeHostPortMatcher" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.8"*, %"class.std::__1::unique_ptr.8"*, %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::unique_ptr.8" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::unique_ptr.8"* }
%"class.net::ProxyList" = type { %"class.std::__1::vector.14" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.net::ProxyServer"*, %"class.net::ProxyServer"*, %"class.std::__1::__compressed_pair.16" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.net::ProxyServer"* }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.24" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.headless::HeadlessBrowserMainParts" = type opaque
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.25" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.27" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::pair"* }
%"class.headless::HeadlessBrowserContext" = type { i32 (...)** }
%class.scoped_refptr.32 = type { %"class.content::DevToolsAgentHost"* }
%"class.content::DevToolsAgentHost" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.headless::HeadlessRequestContextManager"* }
%"class.headless::HeadlessRequestContextManager" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.39 }
%class.scoped_refptr.39 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.40", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.40" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i8 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.66", i8 }
%"struct.std::__1::array.66" = type { [16 x i8] }
%"class.base::OnceCallback.46" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.47 }
%class.scoped_refptr.47 = type { %"class.base::internal::WeakReference::Flag"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.content::DevToolsSocketFactory" = type { i32 (...)** }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.61" }>
%"class.base::RefCountedThreadSafe.61" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.content::BrowserTaskTraits" = type { %"class.base::TaskTraits" }
%"class.base::TaskTraits" = type { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.61", [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory" = type { %"class.content::DevToolsSocketFactory", %"class.net::HostPortPair" }
%"class.net::ServerSocket" = type { i32 (...)** }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::TCPServerSocket" = type <{ %"class.net::ServerSocket", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73", %"class.net::IPEndPoint", i8, [3 x i8] }>
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.net::TCPSocketPosix"* }
%"class.net::TCPSocketPosix" = type <{ i32 (...)**, %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.76", %"class.std::__1::unique_ptr.82", i8, [7 x i8], %"class.net::NetLogWithSource", %"class.net::SocketTag", [7 x i8] }>
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.net::SocketPosix"* }
%"class.net::SocketPosix" = type opaque
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.net::SocketPerformanceWatcher"* }
%"class.net::SocketPerformanceWatcher" = type { i32 (...)** }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.88", %"class.std::__1::vector.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.88" = type { %"class.std::__1::__vector_base.89" }
%"class.std::__1::__vector_base.89" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.90" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.95" = type { %"class.std::__1::__vector_base.96" }
%"class.std::__1::__vector_base.96" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.97" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.net::SocketTag" = type { i8 }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }

$_ZN4base8internal7InvokerINS0_9BindStateIMN8headless19HeadlessBrowserImplEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN8headless19HeadlessBrowserImplEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN8headless19HeadlessBrowserImplEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN8headless19HeadlessBrowserImplEEEEJS6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN8headless19HeadlessBrowserImplEEEEJS5_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.ref.tmp = private constant { %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 } { %"struct.base::TaskTraitsExtensionStorage" zeroinitializer, i8 2, i8 1, i8 0, i8 0, i8 0, i8 0 }, align 1
@.str = private unnamed_addr constant [23 x i8] c"PostTaskToCloseBrowser\00", align 1
@.str.1 = private unnamed_addr constant [48 x i8] c"../../headless/lib/browser/headless_devtools.cc\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@_ZTVN8headless12_GLOBAL__N_130TCPEndpointServerSocketFactoryE = internal unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory"*)* @_ZN8headless12_GLOBAL__N_130TCPEndpointServerSocketFactoryD2Ev to i8*), i8* bitcast (void (%"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory"*)* @_ZN8headless12_GLOBAL__N_130TCPEndpointServerSocketFactoryD0Ev to i8*), i8* bitcast (%"class.net::ServerSocket"* (%"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory"*)* @_ZN8headless12_GLOBAL__N_130TCPEndpointServerSocketFactory19CreateForHttpServerEv to i8*), i8* bitcast (%"class.net::ServerSocket"* (%"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory"*, %"class.std::__1::basic_string"*)* @_ZN8headless12_GLOBAL__N_130TCPEndpointServerSocketFactory18CreateForTetheringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE to i8*)] }, align 8
@_ZN8headless12_GLOBAL__N_134kUseLocalHostForDevToolsHttpServerE = internal constant [10 x i8] c"localhost\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"127.0.0.1\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"::1\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless29StartLocalDevToolsHttpHandlerEPNS_19HeadlessBrowserImplE(%"class.headless::HeadlessBrowserImpl"*) local_unnamed_addr #0 {
  %2 = alloca %"class.net::IPAddress", align 1
  %3 = alloca %"class.base::OnceCallback.46", align 8
  %4 = alloca %"class.base::WeakPtr", align 8
  %5 = alloca %"class.base::FilePath", align 8
  %6 = getelementptr inbounds %"class.headless::HeadlessBrowserImpl", %"class.headless::HeadlessBrowserImpl"* %0, i64 0, i32 3, i32 4
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %25, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.base::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  call void @_ZN8headless19HeadlessBrowserImpl10GetWeakPtrEv(%"class.base::WeakPtr"* nonnull sret %4, %"class.headless::HeadlessBrowserImpl"* %0) #8
  %11 = call i8* @_Znwm(i64 56) #9, !noalias !3
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN8headless19HeadlessBrowserImplEEEEJS6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN8headless19HeadlessBrowserImplEEEEJS5_EE7DestroyEPKNS0_13BindStateBaseE) #8, !noalias !3
  %13 = getelementptr inbounds i8, i8* %11, i64 32
  %14 = bitcast i8* %13 to i64*
  store i64 ptrtoint (void (%"class.base::WeakPtr"*)* @_ZN8headless12_GLOBAL__N_122PostTaskToCloseBrowserEN4base7WeakPtrINS_19HeadlessBrowserImplEEE to i64), i64* %14, align 8, !noalias !3
  %15 = getelementptr inbounds i8, i8* %11, i64 40
  %16 = bitcast i8* %15 to %"class.base::internal::WeakReference"*
  %17 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %16, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %17) #8, !noalias !3
  %18 = getelementptr inbounds i8, i8* %11, i64 48
  %19 = bitcast i8* %18 to i64*
  %20 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8, !noalias !3
  store i64 %21, i64* %19, align 8, !noalias !3
  %22 = bitcast %"class.base::OnceCallback.46"* %3 to i8**
  store i8* %11, i8** %22, align 8, !alias.scope !3
  call void @_ZN7content17DevToolsAgentHost31StartRemoteDebuggingPipeHandlerEN4base12OnceCallbackIFvvEEE(%"class.base::OnceCallback.46"* nonnull %3) #8
  %23 = getelementptr inbounds %"class.base::OnceCallback.46", %"class.base::OnceCallback.46"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #8
  %24 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %24) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  br label %25

25:                                               ; preds = %1, %9
  %26 = getelementptr inbounds %"class.headless::HeadlessBrowserImpl", %"class.headless::HeadlessBrowserImpl"* %0, i64 0, i32 3, i32 3
  %27 = bitcast %"class.net::HostPortPair"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.headless::HeadlessBrowserImpl", %"class.headless::HeadlessBrowserImpl"* %0, i64 0, i32 3, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  br label %36

34:                                               ; preds = %25
  %35 = zext i8 %29 to i64
  br label %36

36:                                               ; preds = %34, %31
  %37 = phi i64 [ %33, %31 ], [ %35, %34 ]
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.headless::HeadlessBrowserImpl", %"class.headless::HeadlessBrowserImpl"* %0, i64 0, i32 3, i32 3, i32 1
  %41 = load i16, i16* %40, align 8
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %94, label %43

43:                                               ; preds = %36, %39
  %44 = call i8* @_Znwm(i64 40) #9
  %45 = bitcast i8* %44 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8headless12_GLOBAL__N_130TCPEndpointServerSocketFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds i8, i8* %44, i64 8
  br i1 %30, label %54, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.net::HostPortPair"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %48, i64 24, i1 false) #8
  %49 = getelementptr inbounds i8, i8* %44, i64 32
  %50 = bitcast i8* %49 to i16*
  %51 = getelementptr inbounds %"class.headless::HeadlessBrowserImpl", %"class.headless::HeadlessBrowserImpl"* %0, i64 0, i32 3, i32 3, i32 1
  %52 = load i16, i16* %51, align 8
  store i16 %52, i16* %50, align 8
  %53 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %26, i64 0, i32 0
  br label %69

54:                                               ; preds = %43
  %55 = bitcast i8* %46 to %"class.std::__1::basic_string"*
  %56 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"class.headless::HeadlessBrowserImpl", %"class.headless::HeadlessBrowserImpl"* %0, i64 0, i32 3, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %55, i8* %57, i64 %59) #8
  %60 = load i8, i8* %28, align 1
  %61 = getelementptr inbounds i8, i8* %44, i64 32
  %62 = bitcast i8* %61 to i16*
  %63 = getelementptr inbounds %"class.headless::HeadlessBrowserImpl", %"class.headless::HeadlessBrowserImpl"* %0, i64 0, i32 3, i32 3, i32 1
  %64 = load i16, i16* %63, align 8
  store i16 %64, i16* %62, align 8
  %65 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %26, i64 0, i32 0
  %66 = icmp slt i8 %60, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %54
  %68 = load i64, i64* %58, align 8
  br label %73

69:                                               ; preds = %54, %47
  %70 = phi %"class.std::__1::basic_string"* [ %53, %47 ], [ %65, %54 ]
  %71 = phi i8 [ %29, %47 ], [ %60, %54 ]
  %72 = zext i8 %71 to i64
  br label %73

73:                                               ; preds = %69, %67
  %74 = phi i1 [ true, %67 ], [ false, %69 ]
  %75 = phi %"class.std::__1::basic_string"* [ %65, %67 ], [ %70, %69 ]
  %76 = phi i8 [ %60, %67 ], [ %71, %69 ]
  %77 = phi i64 [ %68, %67 ], [ %72, %69 ]
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %90, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.headless::HeadlessBrowserImpl", %"class.headless::HeadlessBrowserImpl"* %0, i64 0, i32 3, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = zext i8 %76 to i64
  %83 = select i1 %74, i64 %81, i64 %82
  %84 = icmp eq i64 %83, 9
  br i1 %84, label %85, label %88

85:                                               ; preds = %79
  %86 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %75, i64 0, i64 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN8headless12_GLOBAL__N_134kUseLocalHostForDevToolsHttpServerE, i64 0, i64 0), i64 9) #8
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %85, %79
  %89 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %2, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %89) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %89, i8 -86, i64 17, i1 false) #8
  call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* nonnull %2) #8
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %89) #8
  br label %90

90:                                               ; preds = %88, %85, %73
  %91 = bitcast i8* %44 to %"class.content::DevToolsSocketFactory"*
  %92 = getelementptr inbounds %"class.headless::HeadlessBrowserImpl", %"class.headless::HeadlessBrowserImpl"* %0, i64 0, i32 3, i32 18
  %93 = bitcast %"class.base::FilePath"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #8
  call void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"* nonnull %5) #8
  call void @_ZN7content17DevToolsAgentHost26StartRemoteDebuggingServerENSt3__110unique_ptrINS_21DevToolsSocketFactoryENS1_14default_deleteIS3_EEEERKN4base8FilePathESA_(%"class.content::DevToolsSocketFactory"* nonnull %91, %"class.base::FilePath"* dereferenceable(24) %92, %"class.base::FilePath"* nonnull dereferenceable(24) %5) #8
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #8
  br label %94

94:                                               ; preds = %39, %90
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7content17DevToolsAgentHost31StartRemoteDebuggingPipeHandlerEN4base12OnceCallbackIFvvEEE(%"class.base::OnceCallback.46"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN8headless12_GLOBAL__N_122PostTaskToCloseBrowserEN4base7WeakPtrINS_19HeadlessBrowserImplEEE(%"class.base::WeakPtr"*) #0 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback.46", align 8
  %4 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN7content21GetUIThreadTaskRunnerERKNS_17BrowserTaskTraitsE(%"class.content::BrowserTaskTraits"* dereferenceable(15) bitcast ({ %"struct.base::TaskTraitsExtensionStorage", i8, i8, i8, i8, i8, i8 }* @.ref.tmp to %"class.content::BrowserTaskTraits"*)) #8
  %5 = bitcast %"class.base::SingleThreadTaskRunner"* %4 to %"class.base::TaskRunner"*
  %6 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0), i32 133) #8
  %7 = call i8* @_Znwm(i64 64) #9, !noalias !8
  %8 = bitcast i8* %7 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %8, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN8headless19HeadlessBrowserImplEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN8headless19HeadlessBrowserImplEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN8headless19HeadlessBrowserImplEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #8, !noalias !8
  %9 = getelementptr inbounds i8, i8* %7, i64 32
  %10 = bitcast i8* %9 to <2 x i64>*
  store <2 x i64> <i64 73, i64 0>, <2 x i64>* %10, align 8, !noalias !8
  %11 = getelementptr inbounds i8, i8* %7, i64 48
  %12 = bitcast i8* %11 to %"class.base::internal::WeakReference"*
  %13 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %12, %"class.base::internal::WeakReference"* dereferenceable(8) %13) #8, !noalias !8
  %14 = getelementptr inbounds i8, i8* %7, i64 56
  %15 = bitcast i8* %14 to i64*
  %16 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8, !noalias !8
  store i64 %17, i64* %15, align 8, !noalias !8
  %18 = bitcast %"class.base::OnceCallback.46"* %3 to i8**
  store i8* %7, i8** %18, align 8, !alias.scope !8
  %19 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %5, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback.46"* nonnull %3) #8
  %20 = getelementptr inbounds %"class.base::OnceCallback.46", %"class.base::OnceCallback.46"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #8
  %21 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %21, label %30, label %22

22:                                               ; preds = %1
  %23 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe.61", %"class.base::RefCountedThreadSafe.61"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw sub i32* %24, i32 1 acq_rel
  %26 = icmp eq i32 %25, 1
  br i1 %26, label %27, label %30

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe.61", %"class.base::RefCountedThreadSafe.61"* %23, i64 -2
  %29 = bitcast %"class.base::RefCountedThreadSafe.61"* %28 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %29) #8
  br label %30

30:                                               ; preds = %1, %22, %27
  ret void
}

declare void @_ZN8headless19HeadlessBrowserImpl10GetWeakPtrEv(%"class.base::WeakPtr"* sret, %"class.headless::HeadlessBrowserImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN7content17DevToolsAgentHost26StartRemoteDebuggingServerENSt3__110unique_ptrINS_21DevToolsSocketFactoryENS1_14default_deleteIS3_EEEERKN4base8FilePathESA_(%"class.content::DevToolsSocketFactory"*, %"class.base::FilePath"* dereferenceable(24), %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN4base8FilePathC1Ev(%"class.base::FilePath"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless28StopLocalDevToolsHttpHandlerEv() local_unnamed_addr #0 {
  tail call void @_ZN7content17DevToolsAgentHost25StopRemoteDebuggingServerEv() #8
  tail call void @_ZN7content17DevToolsAgentHost30StopRemoteDebuggingPipeHandlerEv() #8
  ret void
}

declare void @_ZN7content17DevToolsAgentHost25StopRemoteDebuggingServerEv() local_unnamed_addr #2

declare void @_ZN7content17DevToolsAgentHost30StopRemoteDebuggingPipeHandlerEv() local_unnamed_addr #2

declare %"class.base::SingleThreadTaskRunner"* @_ZN7content21GetUIThreadTaskRunnerERKNS_17BrowserTaskTraitsE(%"class.content::BrowserTaskTraits"* dereferenceable(15)) local_unnamed_addr #2

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback.46"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN8headless19HeadlessBrowserImplEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #8
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.headless::HeadlessBrowserImpl"**
  %10 = load %"class.headless::HeadlessBrowserImpl"*, %"class.headless::HeadlessBrowserImpl"** %9, align 8
  %11 = icmp eq %"class.headless::HeadlessBrowserImpl"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #8
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #8
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.headless::HeadlessBrowserImpl"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.headless::HeadlessBrowserImpl"*)**
  %37 = load void (%"class.headless::HeadlessBrowserImpl"*)*, void (%"class.headless::HeadlessBrowserImpl"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.headless::HeadlessBrowserImpl"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.headless::HeadlessBrowserImpl"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.headless::HeadlessBrowserImpl"* %28) #8
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN8headless19HeadlessBrowserImplEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN8headless19HeadlessBrowserImplEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.headless::HeadlessBrowserImpl"**
  %9 = load %"class.headless::HeadlessBrowserImpl"*, %"class.headless::HeadlessBrowserImpl"** %8, align 8
  %10 = icmp ne %"class.headless::HeadlessBrowserImpl"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #8
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_7WeakPtrIN8headless19HeadlessBrowserImplEEEEJS6_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.base::WeakPtr", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = bitcast %"class.base::internal::BindStateBase"* %3 to void (%"class.base::WeakPtr"*)**
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast %"class.base::WeakPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = load void (%"class.base::WeakPtr"*)*, void (%"class.base::WeakPtr"*)** %4, align 8
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  %9 = bitcast void ()** %5 to %"class.base::internal::WeakReference"*
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* nonnull %8, %"class.base::internal::WeakReference"* dereferenceable(8) %9) #8
  %10 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  call void %7(%"class.base::WeakPtr"* nonnull %2) #8
  %14 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_7WeakPtrIN8headless19HeadlessBrowserImplEEEEJS5_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

declare void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN8headless12_GLOBAL__N_130TCPEndpointServerSocketFactoryD2Ev(%"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory"* nocapture) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory", %"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8headless12_GLOBAL__N_130TCPEndpointServerSocketFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory", %"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory"* %0, i64 0, i32 1
  %4 = bitcast %"class.net::HostPortPair"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN8headless12_GLOBAL__N_130TCPEndpointServerSocketFactoryD0Ev(%"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory"*) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory", %"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8headless12_GLOBAL__N_130TCPEndpointServerSocketFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory", %"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory"* %0, i64 0, i32 1
  %4 = bitcast %"class.net::HostPortPair"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.net::ServerSocket"* @_ZN8headless12_GLOBAL__N_130TCPEndpointServerSocketFactory19CreateForHttpServerEv(%"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory"*) unnamed_addr #0 align 2 {
  %2 = alloca %"struct.net::NetLogSource", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"struct.net::NetLogSource", align 8
  %6 = tail call i8* @_Znwm(i64 48) #9
  %7 = bitcast i8* %6 to %"class.net::TCPServerSocket"*
  %8 = bitcast %"struct.net::NetLogSource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  call void @_ZN3net12NetLogSourceC1Ev(%"struct.net::NetLogSource"* nonnull %5) #8
  call void @_ZN3net15TCPServerSocketC1EPNS_6NetLogERKNS_12NetLogSourceE(%"class.net::TCPServerSocket"* nonnull %7, %"class.net::NetLog"* null, %"struct.net::NetLogSource"* nonnull dereferenceable(16) %5) #8
  %9 = bitcast i8* %6 to %"class.net::ServerSocket"*
  %10 = ptrtoint i8* %6 to i64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  %11 = getelementptr inbounds %"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory", %"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %11, i64 0, i32 0
  %13 = bitcast %"class.net::HostPortPair"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory", %"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = icmp eq i64 %20, 9
  br i1 %21, label %22, label %70

22:                                               ; preds = %1
  %23 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %12, i64 0, i64 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN8headless12_GLOBAL__N_134kUseLocalHostForDevToolsHttpServerE, i64 0, i64 0), i64 9) #8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %70

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory", %"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory"* %0, i64 0, i32 1, i32 1
  %27 = load i16, i16* %26, align 8
  %28 = call i8* @_Znwm(i64 48) #9
  %29 = bitcast i8* %28 to %"class.net::TCPServerSocket"*
  %30 = bitcast %"struct.net::NetLogSource"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #8
  call void @_ZN3net12NetLogSourceC1Ev(%"struct.net::NetLogSource"* nonnull %2) #8
  call void @_ZN3net15TCPServerSocketC1EPNS_6NetLogERKNS_12NetLogSourceE(%"class.net::TCPServerSocket"* nonnull %29, %"class.net::NetLog"* null, %"struct.net::NetLogSource"* nonnull dereferenceable(16) %2) #8
  %31 = bitcast i8* %28 to %"class.net::ServerSocket"*
  %32 = ptrtoint i8* %28 to i64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #8
  %33 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #8
  %34 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  store i8 9, i8* %35, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i64 9, i1 false) #8
  %36 = getelementptr inbounds i8, i8* %33, i64 9
  store i8 0, i8* %36, align 1
  %37 = bitcast i8* %28 to i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)***
  %38 = load i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)**, i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)*** %37, align 8
  %39 = getelementptr inbounds i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)*, i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)** %38, i64 3
  %40 = load i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)*, i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)** %39, align 8
  %41 = call i32 %40(%"class.net::ServerSocket"* nonnull %31, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i16 zeroext %27, i32 10) #8
  %42 = icmp eq i32 %41, 0
  %43 = load i8, i8* %35, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %25
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %47) #9
  br label %48

48:                                               ; preds = %45, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #8
  br i1 %42, label %79, label %49

49:                                               ; preds = %48
  %50 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #8
  %51 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  store i8 3, i8* %52, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 3, i1 false) #8
  %53 = getelementptr inbounds i8, i8* %50, i64 3
  store i8 0, i8* %53, align 1
  %54 = load i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)**, i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)*** %37, align 8
  %55 = getelementptr inbounds i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)*, i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)** %54, i64 3
  %56 = load i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)*, i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)** %55, align 8
  %57 = call i32 %56(%"class.net::ServerSocket"* nonnull %31, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, i16 zeroext %27, i32 10) #8
  %58 = icmp eq i32 %57, 0
  %59 = load i8, i8* %52, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %49
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %63) #9
  br label %64

64:                                               ; preds = %61, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #8
  br i1 %58, label %79, label %65

65:                                               ; preds = %64
  %66 = bitcast i8* %28 to void (%"class.net::ServerSocket"*)***
  %67 = load void (%"class.net::ServerSocket"*)**, void (%"class.net::ServerSocket"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.net::ServerSocket"*)*, void (%"class.net::ServerSocket"*)** %67, i64 1
  %69 = load void (%"class.net::ServerSocket"*)*, void (%"class.net::ServerSocket"*)** %68, align 8
  call void %69(%"class.net::ServerSocket"* nonnull %31) #8
  br label %79

70:                                               ; preds = %1, %22
  %71 = getelementptr inbounds %"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory", %"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory"* %0, i64 0, i32 1, i32 1
  %72 = load i16, i16* %71, align 8
  %73 = bitcast i8* %6 to i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)***
  %74 = load i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)**, i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)*** %73, align 8
  %75 = getelementptr inbounds i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)*, i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)** %74, i64 3
  %76 = load i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)*, i32 (%"class.net::ServerSocket"*, %"class.std::__1::basic_string"*, i16, i32)** %75, align 8
  %77 = call i32 %76(%"class.net::ServerSocket"* nonnull %9, %"class.std::__1::basic_string"* dereferenceable(24) %12, i16 zeroext %72, i32 10) #8
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %70, %48, %64, %65
  %80 = phi i64 [ 0, %70 ], [ 0, %65 ], [ %32, %48 ], [ %32, %64 ]
  %81 = bitcast i8* %6 to void (%"class.net::ServerSocket"*)***
  %82 = load void (%"class.net::ServerSocket"*)**, void (%"class.net::ServerSocket"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.net::ServerSocket"*)*, void (%"class.net::ServerSocket"*)** %82, i64 1
  %84 = load void (%"class.net::ServerSocket"*)*, void (%"class.net::ServerSocket"*)** %83, align 8
  call void %84(%"class.net::ServerSocket"* nonnull %9) #8
  br label %85

85:                                               ; preds = %70, %79
  %86 = phi i64 [ %80, %79 ], [ %10, %70 ]
  %87 = inttoptr i64 %86 to %"class.net::ServerSocket"*
  ret %"class.net::ServerSocket"* %87
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %"class.net::ServerSocket"* @_ZN8headless12_GLOBAL__N_130TCPEndpointServerSocketFactory18CreateForTetheringEPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.headless::(anonymous namespace)::TCPEndpointServerSocketFactory"* nocapture readnone, %"class.std::__1::basic_string"* nocapture readnone) unnamed_addr #7 align 2 {
  ret %"class.net::ServerSocket"* null
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZN3net12NetLogSourceC1Ev(%"struct.net::NetLogSource"*) unnamed_addr #2

declare void @_ZN3net15TCPServerSocketC1EPNS_6NetLogERKNS_12NetLogSourceE(%"class.net::TCPServerSocket"*, %"class.net::NetLog"*, %"struct.net::NetLogSource"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_7WeakPtrIN8headless19HeadlessBrowserImplEEEEJS6_EEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS_7WeakPtrIN8headless19HeadlessBrowserImplEEEEJS6_EEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base8BindOnceIPFvNS_7WeakPtrIN8headless19HeadlessBrowserImplEEEEJS4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8BindOnceIPFvNS_7WeakPtrIN8headless19HeadlessBrowserImplEEEEJS4_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN8headless19HeadlessBrowserImplEFvvEJRNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN8headless19HeadlessBrowserImplEFvvEJRNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base8BindOnceIMN8headless19HeadlessBrowserImplEFvvEJRNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8BindOnceIMN8headless19HeadlessBrowserImplEFvvEJRNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
