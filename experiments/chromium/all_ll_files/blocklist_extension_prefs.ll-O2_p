; ModuleID = '../../chrome/browser/extensions/blocklist_extension_prefs.cc'
source_filename = "../../chrome/browser/extensions/blocklist_extension_prefs.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.extensions::ExtensionPrefs" = type { %class.KeyedService, %"class.content::BrowserContext"*, %class.PrefService*, %"class.base::FilePath", %class.ExtensionPrefValueMap*, %"class.base::Clock"*, i8, [7 x i8], %"class.base::ObserverList" }
%class.KeyedService = type { i32 (...)** }
%"class.content::BrowserContext" = type opaque
%class.PrefService = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.4", %class.scoped_refptr.26, %"class.base::RepeatingCallback.27", %class.scoped_refptr.28, %"class.std::__1::unordered_map" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.PrefNotifierImpl* }
%class.PrefNotifierImpl = type opaque
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.PrefValueStore* }
%class.PrefValueStore = type { i32 (...)**, [7 x %"class.PrefValueStore::PrefStoreKeeper"], %"class.base::RepeatingCallback", %class.PrefNotifier*, %"class.std::__1::map", i8, %"class.std::__1::unique_ptr.17" }
%"class.PrefValueStore::PrefStoreKeeper" = type <{ %"class.PrefStore::Observer", %class.PrefValueStore*, %class.scoped_refptr, i32, [4 x i8] }>
%"class.PrefStore::Observer" = type { i32 (...)** }
%class.scoped_refptr = type { %class.PrefStore* }
%class.PrefStore = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.PrefNotifier = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.PrefValueStore::Delegate"* }
%"class.PrefValueStore::Delegate" = type { i32 (...)** }
%class.scoped_refptr.26 = type { %class.PersistentPrefStore* }
%class.PersistentPrefStore = type { %class.WriteablePrefStore.base, [4 x i8] }
%class.WriteablePrefStore.base = type { %class.PrefStore.base }
%class.PrefStore.base = type <{ i32 (...)**, %"class.base::RefCounted" }>
%"class.base::RepeatingCallback.27" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.28 = type { %class.PrefRegistry* }
%class.PrefRegistry = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.29", %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.44", [4 x i8] }>
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31", %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { float }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%class.ExtensionPrefValueMap = type opaque
%"class.base::Clock" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.47" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }

@_ZN10extensions12_GLOBAL__N_124kPrefOmahaBlocklistStateE = internal constant [22 x i8] c"omaha_blocklist_state\00", align 16
@_ZN10extensions12_GLOBAL__N_131kPrefAcknowledgedBlocklistStateE = internal constant [29 x i8] c"acknowledged_blocklist_state\00", align 16
@switch.table._ZN10extensions15blocklist_prefs36BlocklistStateToBitMapBlocklistStateENS_14BlocklistStateE = private unnamed_addr constant [6 x i32] [i32 0, i32 1, i32 2, i32 4, i32 8, i32 0], align 4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN10extensions15blocklist_prefs36BlocklistStateToBitMapBlocklistStateENS_14BlocklistStateE(i32) local_unnamed_addr #0 {
  %2 = sext i32 %0 to i64
  %3 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN10extensions15blocklist_prefs36BlocklistStateToBitMapBlocklistStateENS_14BlocklistStateE, i64 0, i64 %2
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10extensions15blocklist_prefs26GetExtensionBlocklistStateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_14ExtensionPrefsE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.extensions::ExtensionPrefs"*) local_unnamed_addr #1 {
  %3 = tail call i32 @_ZNK10extensions14ExtensionPrefs26GetExtensionBlocklistStateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ExtensionPrefs"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %0) #3
  switch i32 %3, label %7 [
    i32 0, label %8
    i32 1, label %21
    i32 2, label %4
    i32 3, label %5
    i32 4, label %6
    i32 5, label %8
  ]

4:                                                ; preds = %2
  br label %8

5:                                                ; preds = %2
  br label %8

6:                                                ; preds = %2
  br label %8

7:                                                ; preds = %2
  unreachable

8:                                                ; preds = %6, %5, %4, %2, %2
  %9 = phi i32 [ 0, %2 ], [ 0, %2 ], [ 2, %4 ], [ 4, %5 ], [ 8, %6 ]
  %10 = tail call i32 @_ZNK10extensions14ExtensionPrefs17GetBitMapPrefBitsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base16BasicStringPieceIcS4_EEi(%"class.extensions::ExtensionPrefs"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN10extensions12_GLOBAL__N_124kPrefOmahaBlocklistStateE, i64 0, i64 0), i64 21, i32 0) #3
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %21

13:                                               ; preds = %8
  %14 = icmp eq i32 %9, 4
  br i1 %14, label %21, label %17

15:                                               ; preds = %17
  %16 = icmp eq i32 %9, 8
  br i1 %16, label %21, label %23

17:                                               ; preds = %13
  %18 = tail call i32 @_ZNK10extensions14ExtensionPrefs17GetBitMapPrefBitsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base16BasicStringPieceIcS4_EEi(%"class.extensions::ExtensionPrefs"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN10extensions12_GLOBAL__N_124kPrefOmahaBlocklistStateE, i64 0, i64 0), i64 21, i32 0) #3
  %19 = and i32 %18, 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %15, label %21

21:                                               ; preds = %17, %13, %15, %23, %27, %8, %2
  %22 = phi i32 [ %3, %2 ], [ 1, %8 ], [ 4, %13 ], [ 4, %17 ], [ 8, %15 ], [ 8, %23 ], [ 2, %27 ]
  ret i32 %22

23:                                               ; preds = %15
  %24 = tail call i32 @_ZNK10extensions14ExtensionPrefs17GetBitMapPrefBitsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base16BasicStringPieceIcS4_EEi(%"class.extensions::ExtensionPrefs"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN10extensions12_GLOBAL__N_124kPrefOmahaBlocklistStateE, i64 0, i64 0), i64 21, i32 0) #3
  %25 = and i32 %24, 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %21

27:                                               ; preds = %23
  %28 = icmp eq i32 %9, 2
  br i1 %28, label %21, label %29

29:                                               ; preds = %27
  %30 = tail call i32 @_ZNK10extensions14ExtensionPrefs17GetBitMapPrefBitsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base16BasicStringPieceIcS4_EEi(%"class.extensions::ExtensionPrefs"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN10extensions12_GLOBAL__N_124kPrefOmahaBlocklistStateE, i64 0, i64 0), i64 21, i32 0) #3
  %31 = and i32 %30, 2
  ret i32 %31
}

declare i32 @_ZNK10extensions14ExtensionPrefs26GetExtensionBlocklistStateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ExtensionPrefs"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions15blocklist_prefs22HasOmahaBlocklistStateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_20BitMapBlocklistStateEPNS_14ExtensionPrefsE(%"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.extensions::ExtensionPrefs"*) local_unnamed_addr #1 {
  %4 = tail call i32 @_ZNK10extensions14ExtensionPrefs17GetBitMapPrefBitsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base16BasicStringPieceIcS4_EEi(%"class.extensions::ExtensionPrefs"* %2, %"class.std::__1::basic_string"* dereferenceable(24) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN10extensions12_GLOBAL__N_124kPrefOmahaBlocklistStateE, i64 0, i64 0), i64 21, i32 0) #3
  %5 = and i32 %4, %1
  %6 = icmp ne i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions15blocklist_prefs22AddOmahaBlocklistStateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_20BitMapBlocklistStateEPNS_14ExtensionPrefsE(%"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.extensions::ExtensionPrefs"*) local_unnamed_addr #1 {
  tail call void @_ZN10extensions14ExtensionPrefs20ModifyBitMapPrefBitsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiNS0_19BitMapPrefOperationEN4base16BasicStringPieceIcS4_EEi(%"class.extensions::ExtensionPrefs"* %2, %"class.std::__1::basic_string"* dereferenceable(24) %0, i32 %1, i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN10extensions12_GLOBAL__N_124kPrefOmahaBlocklistStateE, i64 0, i64 0), i64 21, i32 0) #3
  ret void
}

declare void @_ZN10extensions14ExtensionPrefs20ModifyBitMapPrefBitsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiNS0_19BitMapPrefOperationEN4base16BasicStringPieceIcS4_EEi(%"class.extensions::ExtensionPrefs"*, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions15blocklist_prefs25RemoveOmahaBlocklistStateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_20BitMapBlocklistStateEPNS_14ExtensionPrefsE(%"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.extensions::ExtensionPrefs"*) local_unnamed_addr #1 {
  tail call void @_ZN10extensions14ExtensionPrefs20ModifyBitMapPrefBitsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiNS0_19BitMapPrefOperationEN4base16BasicStringPieceIcS4_EEi(%"class.extensions::ExtensionPrefs"* %2, %"class.std::__1::basic_string"* dereferenceable(24) %0, i32 %1, i32 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN10extensions12_GLOBAL__N_124kPrefOmahaBlocklistStateE, i64 0, i64 0), i64 21, i32 0) #3
  ret void
}

declare i32 @_ZNK10extensions14ExtensionPrefs17GetBitMapPrefBitsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base16BasicStringPieceIcS4_EEi(%"class.extensions::ExtensionPrefs"*, %"class.std::__1::basic_string"* dereferenceable(24), i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions15blocklist_prefs24HasAnyOmahaGreylistStateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_14ExtensionPrefsE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.extensions::ExtensionPrefs"*) local_unnamed_addr #1 {
  %3 = tail call i32 @_ZNK10extensions14ExtensionPrefs17GetBitMapPrefBitsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base16BasicStringPieceIcS4_EEi(%"class.extensions::ExtensionPrefs"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN10extensions12_GLOBAL__N_124kPrefOmahaBlocklistStateE, i64 0, i64 0), i64 21, i32 0) #3
  %4 = and i32 %3, 14
  %5 = icmp ne i32 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions15blocklist_prefs29AddAcknowledgedBlocklistStateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_20BitMapBlocklistStateEPNS_14ExtensionPrefsE(%"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.extensions::ExtensionPrefs"*) local_unnamed_addr #1 {
  tail call void @_ZN10extensions14ExtensionPrefs20ModifyBitMapPrefBitsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiNS0_19BitMapPrefOperationEN4base16BasicStringPieceIcS4_EEi(%"class.extensions::ExtensionPrefs"* %2, %"class.std::__1::basic_string"* dereferenceable(24) %0, i32 %1, i32 0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZN10extensions12_GLOBAL__N_131kPrefAcknowledgedBlocklistStateE, i64 0, i64 0), i64 28, i32 0) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions15blocklist_prefs32RemoveAcknowledgedBlocklistStateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_20BitMapBlocklistStateEPNS_14ExtensionPrefsE(%"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.extensions::ExtensionPrefs"*) local_unnamed_addr #1 {
  tail call void @_ZN10extensions14ExtensionPrefs20ModifyBitMapPrefBitsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiNS0_19BitMapPrefOperationEN4base16BasicStringPieceIcS4_EEi(%"class.extensions::ExtensionPrefs"* %2, %"class.std::__1::basic_string"* dereferenceable(24) %0, i32 %1, i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZN10extensions12_GLOBAL__N_131kPrefAcknowledgedBlocklistStateE, i64 0, i64 0), i64 28, i32 0) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions15blocklist_prefs32ClearAcknowledgedBlocklistStatesERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_14ExtensionPrefsE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.extensions::ExtensionPrefs"*) local_unnamed_addr #1 {
  tail call void @_ZN10extensions14ExtensionPrefs20ModifyBitMapPrefBitsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiNS0_19BitMapPrefOperationEN4base16BasicStringPieceIcS4_EEi(%"class.extensions::ExtensionPrefs"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %0, i32 0, i32 3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZN10extensions12_GLOBAL__N_131kPrefAcknowledgedBlocklistStateE, i64 0, i64 0), i64 28, i32 0) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10extensions15blocklist_prefs29HasAcknowledgedBlocklistStateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_20BitMapBlocklistStateEPNS_14ExtensionPrefsE(%"class.std::__1::basic_string"* dereferenceable(24), i32, %"class.extensions::ExtensionPrefs"*) local_unnamed_addr #1 {
  %4 = tail call i32 @_ZNK10extensions14ExtensionPrefs17GetBitMapPrefBitsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base16BasicStringPieceIcS4_EEi(%"class.extensions::ExtensionPrefs"* %2, %"class.std::__1::basic_string"* dereferenceable(24) %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZN10extensions12_GLOBAL__N_131kPrefAcknowledgedBlocklistStateE, i64 0, i64 0), i64 28, i32 0) #3
  %5 = and i32 %4, %1
  %6 = icmp ne i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10extensions15blocklist_prefs41UpdateCurrentGreylistStatesAsAcknowledgedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS_14ExtensionPrefsE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.extensions::ExtensionPrefs"*) local_unnamed_addr #1 {
  %3 = tail call i32 @_ZNK10extensions14ExtensionPrefs26GetExtensionBlocklistStateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ExtensionPrefs"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %0) #3
  %4 = icmp ne i32 %3, 3
  %5 = tail call i32 @_ZNK10extensions14ExtensionPrefs17GetBitMapPrefBitsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base16BasicStringPieceIcS4_EEi(%"class.extensions::ExtensionPrefs"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN10extensions12_GLOBAL__N_124kPrefOmahaBlocklistStateE, i64 0, i64 0), i64 21, i32 0) #3
  %6 = and i32 %5, 4
  %7 = icmp eq i32 %6, 0
  %8 = and i1 %7, %4
  %9 = zext i1 %8 to i32
  tail call void @_ZN10extensions14ExtensionPrefs20ModifyBitMapPrefBitsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiNS0_19BitMapPrefOperationEN4base16BasicStringPieceIcS4_EEi(%"class.extensions::ExtensionPrefs"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %0, i32 4, i32 %9, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZN10extensions12_GLOBAL__N_131kPrefAcknowledgedBlocklistStateE, i64 0, i64 0), i64 28, i32 0) #3
  %10 = tail call i32 @_ZNK10extensions14ExtensionPrefs26GetExtensionBlocklistStateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ExtensionPrefs"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %0) #3
  %11 = icmp ne i32 %10, 4
  %12 = tail call i32 @_ZNK10extensions14ExtensionPrefs17GetBitMapPrefBitsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base16BasicStringPieceIcS4_EEi(%"class.extensions::ExtensionPrefs"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN10extensions12_GLOBAL__N_124kPrefOmahaBlocklistStateE, i64 0, i64 0), i64 21, i32 0) #3
  %13 = and i32 %12, 8
  %14 = icmp eq i32 %13, 0
  %15 = and i1 %14, %11
  %16 = zext i1 %15 to i32
  tail call void @_ZN10extensions14ExtensionPrefs20ModifyBitMapPrefBitsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiNS0_19BitMapPrefOperationEN4base16BasicStringPieceIcS4_EEi(%"class.extensions::ExtensionPrefs"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %0, i32 8, i32 %16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZN10extensions12_GLOBAL__N_131kPrefAcknowledgedBlocklistStateE, i64 0, i64 0), i64 28, i32 0) #3
  %17 = tail call i32 @_ZNK10extensions14ExtensionPrefs26GetExtensionBlocklistStateERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.extensions::ExtensionPrefs"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %0) #3
  %18 = icmp ne i32 %17, 2
  %19 = tail call i32 @_ZNK10extensions14ExtensionPrefs17GetBitMapPrefBitsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEN4base16BasicStringPieceIcS4_EEi(%"class.extensions::ExtensionPrefs"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZN10extensions12_GLOBAL__N_124kPrefOmahaBlocklistStateE, i64 0, i64 0), i64 21, i32 0) #3
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = and i1 %21, %18
  %23 = zext i1 %22 to i32
  tail call void @_ZN10extensions14ExtensionPrefs20ModifyBitMapPrefBitsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiNS0_19BitMapPrefOperationEN4base16BasicStringPieceIcS4_EEi(%"class.extensions::ExtensionPrefs"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %0, i32 2, i32 %23, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZN10extensions12_GLOBAL__N_131kPrefAcknowledgedBlocklistStateE, i64 0, i64 0), i64 28, i32 0) #3
  ret void
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
