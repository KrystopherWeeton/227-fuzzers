; ModuleID = '../../chrome/browser/notifications/scheduler/public/impression_detail.cc'
source_filename = "../../chrome/browser/notifications/scheduler/public/impression_detail.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.notifications::ImpressionDetail" = type { i64, i64, i64, %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

@_ZN13notifications16ImpressionDetailC1Ev = hidden unnamed_addr alias void (%"struct.notifications::ImpressionDetail"*), void (%"struct.notifications::ImpressionDetail"*)* @_ZN13notifications16ImpressionDetailC2Ev
@_ZN13notifications16ImpressionDetailC1EmmmN4absl8optionalIN4base4TimeEEES5_ = hidden unnamed_addr alias void (%"struct.notifications::ImpressionDetail"*, i64, i64, i64, i8, i64, %"class.absl::optional"*), void (%"struct.notifications::ImpressionDetail"*, i64, i64, i64, i8, i64, %"class.absl::optional"*)* @_ZN13notifications16ImpressionDetailC2EmmmN4absl8optionalIN4base4TimeEEES5_
@_ZN13notifications16ImpressionDetailC1ERKS0_ = hidden unnamed_addr alias void (%"struct.notifications::ImpressionDetail"*, %"struct.notifications::ImpressionDetail"*), void (%"struct.notifications::ImpressionDetail"*, %"struct.notifications::ImpressionDetail"*)* @_ZN13notifications16ImpressionDetailC2ERKS0_
@_ZN13notifications16ImpressionDetailD1Ev = hidden unnamed_addr alias void (%"struct.notifications::ImpressionDetail"*), void (%"struct.notifications::ImpressionDetail"*)* @_ZN13notifications16ImpressionDetailD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN13notifications16ImpressionDetailC2Ev(%"struct.notifications::ImpressionDetail"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = bitcast %"struct.notifications::ImpressionDetail"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 25, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13notifications16ImpressionDetailC2EmmmN4absl8optionalIN4base4TimeEEES5_(%"struct.notifications::ImpressionDetail"* nocapture, i64, i64, i64, i8, i64, %"class.absl::optional"* nocapture readonly byval(%"class.absl::optional") align 8) unnamed_addr #1 align 2 {
  %8 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %0, i64 0, i32 0
  store i64 %1, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %0, i64 0, i32 1
  store i64 %2, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %0, i64 0, i32 2
  store i64 %3, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  store i8 %4, i8* %11, align 8
  %12 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i64 %5, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* nonnull align 8 %14, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13notifications16ImpressionDetailC2ERKS0_(%"struct.notifications::ImpressionDetail"* nocapture, %"struct.notifications::ImpressionDetail"* nocapture readonly dereferenceable(56)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.notifications::ImpressionDetail"* %0 to i8*
  %4 = bitcast %"struct.notifications::ImpressionDetail"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 56, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN13notifications16ImpressionDetailD2Ev(%"struct.notifications::ImpressionDetail"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13notifications16ImpressionDetaileqERKS0_(%"struct.notifications::ImpressionDetail"* nocapture readonly, %"struct.notifications::ImpressionDetail"* nocapture readonly dereferenceable(56)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %1, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %60

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %0, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %60

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %0, i64 0, i32 2
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %1, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %20, label %60

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp ne i8 %22, 0
  %24 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp ne i8 %25, 0
  %27 = xor i1 %23, %26
  %28 = xor i1 %23, true
  %29 = or i1 %27, %28
  br i1 %29, label %39, label %30

30:                                               ; preds = %20
  %31 = icmp eq i8 %25, 0
  br i1 %31, label %32, label %33, !prof !3

32:                                               ; preds = %30
  tail call void @llvm.trap() #5
  unreachable

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, %35
  br i1 %38, label %40, label %60

39:                                               ; preds = %20
  br i1 %27, label %60, label %40

40:                                               ; preds = %39, %33
  %41 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp ne i8 %42, 0
  %44 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp ne i8 %45, 0
  %47 = xor i1 %43, %46
  %48 = xor i1 %43, true
  %49 = or i1 %47, %48
  %50 = xor i1 %47, true
  br i1 %49, label %60, label %51

51:                                               ; preds = %40
  %52 = icmp eq i8 %45, 0
  br i1 %52, label %53, label %54, !prof !3

53:                                               ; preds = %51
  tail call void @llvm.trap() #5
  unreachable

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"struct.notifications::ImpressionDetail", %"struct.notifications::ImpressionDetail"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, %56
  br label %60

60:                                               ; preds = %39, %54, %40, %33, %14, %8, %2
  %61 = phi i1 [ false, %39 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ false, %33 ], [ %50, %40 ], [ %59, %54 ]
  ret i1 %61
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
