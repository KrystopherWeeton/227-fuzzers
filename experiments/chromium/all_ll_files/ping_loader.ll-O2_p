; ModuleID = '../../third_party/blink/renderer/core/loader/ping_loader.cc'
source_filename = "../../third_party/blink/renderer/core/loader/ping_loader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.url::Component" = type { i32, i32 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::KURL"* }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.268" }
%"class.base::TimeDelta" = type { i64 }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%union.anon.535 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.536 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.529", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.531", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.536 }
%"class.WTF::RefCounted.529" = type { %"class.base::RefCounted.530" }
%"class.base::RefCounted.530" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.531" = type { %"class.absl::optional_internal::optional_data.532" }
%"class.absl::optional_internal::optional_data.532" = type { %"class.absl::optional_internal::optional_data_base.533" }
%"class.absl::optional_internal::optional_data_base.533" = type { %"class.absl::optional_internal::optional_data_dtor_base.534" }
%"class.absl::optional_internal::optional_data_dtor_base.534" = type { i8, %union.anon.535 }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1401" }
%"class.WTF::HashMap.1401" = type { %"class.WTF::HashTable.1402" }
%"class.WTF::HashTable.1402" = type <{ %"struct.WTF::KeyValuePair.1405"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1405" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.1406 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.1407", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector.1408", %class.scoped_refptr.1417, i8, %"class.url::Origin" }
%"class.base::RefCounted.1407" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector.1408" = type { %"class.std::__1::vector.1409" }
%"class.std::__1::vector.1409" = type { %"class.std::__1::__vector_base.1410" }
%"class.std::__1::__vector_base.1410" = type { %"class.std::__1::unique_ptr.1411"*, %"class.std::__1::unique_ptr.1411"*, %"class.std::__1::__compressed_pair.1412" }
%"class.std::__1::unique_ptr.1411" = type { %"class.std::__1::__compressed_pair.2149" }
%"class.std::__1::__compressed_pair.2149" = type { %"struct.std::__1::__compressed_pair_elem.2150" }
%"struct.std::__1::__compressed_pair_elem.2150" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1412" = type { %"struct.std::__1::__compressed_pair_elem.1413" }
%"struct.std::__1::__compressed_pair_elem.1413" = type { %"class.std::__1::unique_ptr.1411"* }
%class.scoped_refptr.1417 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1418", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1418" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.28" }
%"struct.std::__1::atomic.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.531" }
%"class.WTF::Vector.1429" = type { %"class.WTF::VectorBuffer.1430" }
%"class.WTF::VectorBuffer.1430" = type { %"class.WTF::VectorBufferBase.1431" }
%"class.WTF::VectorBufferBase.1431" = type { %class.scoped_refptr.536*, i32, i32 }
%"class.WTF::Vector.639" = type { %"class.WTF::VectorBuffer.640" }
%"class.WTF::VectorBuffer.640" = type { %"class.WTF::VectorBufferBase.641" }
%"class.WTF::VectorBufferBase.641" = type { %"class.WTF::String"*, i32, i32 }
%union.anon.159 = type { %"class.base::TimeDelta" }
%union.anon.1438 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%union.anon.231 = type { %"class.base::UnguessableToken" }
%"class.mojo::PendingRemote.1444" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.1445 = type { %"class.base::RefCountedData.1446"* }
%"class.base::RefCountedData.1446" = type { %"class.base::RefCountedThreadSafe.2154", %"class.base::internal::flat_tree.2155" }
%"class.base::RefCountedThreadSafe.2154" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.2155" = type { %"class.std::__1::vector.2156" }
%"class.std::__1::vector.2156" = type { %"class.std::__1::__vector_base.2157" }
%"class.std::__1::__vector_base.2157" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2158" }
%"class.std::__1::__compressed_pair.2158" = type { %"struct.std::__1::__compressed_pair_elem.2159" }
%"struct.std::__1::__compressed_pair_elem.2159" = type { i32* }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.2028, %"class.mojo::PendingRemote.2116" }
%class.scoped_refptr.2028 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted.2029", [4 x i8], %"class.WTF::Vector.2031", i64, %"class.WTF::Vector.1510", i8, [7 x i8] }>
%"class.WTF::RefCounted.2029" = type { %"class.base::RefCounted.2030" }
%"class.base::RefCounted.2030" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2031" = type { %"class.WTF::VectorBuffer.2032" }
%"class.WTF::VectorBuffer.2032" = type { %"class.WTF::VectorBufferBase.2033" }
%"class.WTF::VectorBufferBase.2033" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.1510", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.2034, i64, i64, %"class.absl::optional.1465", %class.scoped_refptr.2038 }
%class.scoped_refptr.2034 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted.2035", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.2037", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted.2035" = type { %"class.base::RefCountedThreadSafe.2036" }
%"class.base::RefCountedThreadSafe.2036" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.2037" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.absl::optional.1465" = type { %"class.absl::optional_internal::optional_data.1466" }
%"class.absl::optional_internal::optional_data.1466" = type { %"class.absl::optional_internal::optional_data_base.1467" }
%"class.absl::optional_internal::optional_data_base.1467" = type { %"class.absl::optional_internal::optional_data_dtor_base.1468" }
%"class.absl::optional_internal::optional_data_dtor_base.1468" = type { i8, %union.anon.1469 }
%union.anon.1469 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1448" }
%"class.base::time_internal::TimeBase.1448" = type { i64 }
%class.scoped_refptr.2038 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"class.WTF::Vector.1510" = type { %"class.WTF::VectorBuffer.1511" }
%"class.WTF::VectorBuffer.1511" = type { %"class.WTF::VectorBufferBase.1512" }
%"class.WTF::VectorBufferBase.1512" = type { i8*, i32, i32 }
%"class.mojo::PendingRemote.2116" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::TextEncoding" = type { i8* }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias.1495" = type { i8 }
%"class.WTF::HashSet.1496" = type { %"class.WTF::HashTable.1497" }
%"class.WTF::HashTable.1497" = type <{ %"struct.std::__1::pair.1500"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.1500" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.867 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.868", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.868" = type { %"class.base::RefCounted.869" }
%"class.base::RefCounted.869" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.872" }
%"class.blink::HeapHashMap.872" = type { %"class.WTF::HashMap.875" }
%"class.WTF::HashMap.875" = type { %"class.WTF::HashTable.876" }
%"class.WTF::HashTable.876" = type <{ %"struct.WTF::KeyValuePair.878"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.878" = type { %"class.blink::WeakMember.879", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.879" = type { %"class.blink::MemberBase.880" }
%"class.blink::MemberBase.880" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.881", i32, [4 x i8], %"class.std::__1::unique_ptr.1019", %"class.std::__1::unique_ptr.1019", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.1025", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.1031", %"class.std::__1::unique_ptr.1037", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.1049", %"class.std::__1::unique_ptr.1055", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.70", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.881" = type { %"class.std::__1::__compressed_pair.882" }
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.883" }
%"struct.std::__1::__compressed_pair_elem.883" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.884", %"class.std::__1::unique_ptr.890", %"class.std::__1::unique_ptr.896", %"class.std::__1::unique_ptr.902", %"class.std::__1::unique_ptr.908", %"class.std::__1::unique_ptr.914", %"class.std::__1::unique_ptr.925", %"class.std::__1::unique_ptr.932", %"class.std::__1::unique_ptr.932", %"class.std::__1::unique_ptr.939", %"class.std::__1::unique_ptr.946", %"class.std::__1::unique_ptr.953", %"class.std::__1::unique_ptr.953", %"class.std::__1::unique_ptr.960", %"class.std::__1::unique_ptr.967", %"class.std::__1::unique_ptr.974", %"class.std::__1::unique_ptr.999", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.884" = type { %"class.std::__1::__compressed_pair.885" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.890" = type { %"class.std::__1::__compressed_pair.891" }
%"class.std::__1::__compressed_pair.891" = type { %"struct.std::__1::__compressed_pair_elem.892" }
%"struct.std::__1::__compressed_pair_elem.892" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.896" = type { %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.902" = type { %"class.std::__1::__compressed_pair.903" }
%"class.std::__1::__compressed_pair.903" = type { %"struct.std::__1::__compressed_pair_elem.904" }
%"struct.std::__1::__compressed_pair_elem.904" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.908" = type { %"class.std::__1::__compressed_pair.909" }
%"class.std::__1::__compressed_pair.909" = type { %"struct.std::__1::__compressed_pair_elem.910" }
%"struct.std::__1::__compressed_pair_elem.910" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.914" = type { %"class.std::__1::__compressed_pair.915" }
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.917" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.917" = type { %"struct.std::__1::__atomic_base.918" }
%"struct.std::__1::__atomic_base.918" = type { %"struct.std::__1::__atomic_base.919" }
%"struct.std::__1::__atomic_base.919" = type { %"struct.std::__1::__cxx_atomic_impl.920" }
%"struct.std::__1::__cxx_atomic_impl.920" = type { %"struct.std::__1::__cxx_atomic_base_impl.921" }
%"struct.std::__1::__cxx_atomic_base_impl.921" = type { i64 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::Worklist.928"* }
%"class.blink::Worklist.928" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.917" }
%"class.std::__1::unique_ptr.932" = type { %"class.std::__1::__compressed_pair.933" }
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.blink::Worklist.935"* }
%"class.blink::Worklist.935" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.917" }
%"class.std::__1::unique_ptr.939" = type { %"class.std::__1::__compressed_pair.940" }
%"class.std::__1::__compressed_pair.940" = type { %"struct.std::__1::__compressed_pair_elem.941" }
%"struct.std::__1::__compressed_pair_elem.941" = type { %"class.blink::Worklist.942"* }
%"class.blink::Worklist.942" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.917" }
%"class.std::__1::unique_ptr.946" = type { %"class.std::__1::__compressed_pair.947" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.948" }
%"struct.std::__1::__compressed_pair_elem.948" = type { %"class.blink::Worklist.949"* }
%"class.blink::Worklist.949" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.917" }
%"class.std::__1::unique_ptr.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.955" }
%"struct.std::__1::__compressed_pair_elem.955" = type { %"class.blink::Worklist.956"* }
%"class.blink::Worklist.956" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.917" }
%"class.std::__1::unique_ptr.960" = type { %"class.std::__1::__compressed_pair.961" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.962" }
%"struct.std::__1::__compressed_pair_elem.962" = type { %"class.blink::Worklist.963"* }
%"class.blink::Worklist.963" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.917" }
%"class.std::__1::unique_ptr.967" = type { %"class.std::__1::__compressed_pair.968" }
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.969" }
%"struct.std::__1::__compressed_pair_elem.969" = type { %"class.blink::Worklist.970"* }
%"class.blink::Worklist.970" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.917" }
%"class.std::__1::unique_ptr.974" = type { %"class.std::__1::__compressed_pair.975" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.976" }
%"struct.std::__1::__compressed_pair_elem.976" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.977", %"class.std::__1::__compressed_pair.985", %"class.std::__1::__compressed_pair.990", %"class.std::__1::__compressed_pair.992", [4 x i8] }>
%"class.std::__1::unique_ptr.977" = type { %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979", %"struct.std::__1::__compressed_pair_elem.980" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.980" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.981" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { i64 }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993" }
%"struct.std::__1::__compressed_pair_elem.993" = type { float }
%"class.std::__1::unique_ptr.999" = type { %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.1001" }
%"struct.std::__1::__compressed_pair_elem.1001" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.1002", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1002" = type { %"class.std::__1::__compressed_pair.1003" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.1004" }
%"struct.std::__1::__compressed_pair_elem.1004" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.1011" }
%"class.WTF::Vector.1011" = type { %"class.WTF::VectorBuffer.1012" }
%"class.WTF::VectorBuffer.1012" = type { %"class.WTF::VectorBufferBase.1013" }
%"class.WTF::VectorBufferBase.1013" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.1019" = type { %"class.std::__1::__compressed_pair.1020" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.1025" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1028" }
%"class.WTF::VectorBuffer.1028" = type { %"class.WTF::VectorBufferBase.1029" }
%"class.WTF::VectorBufferBase.1029" = type { %"struct.std::__1::pair.1030"*, i32, i32 }
%"struct.std::__1::pair.1030" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.1031" = type { %"class.std::__1::__compressed_pair.1032" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.1037" = type { %"class.std::__1::__compressed_pair.1038" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.1039" }
%"struct.std::__1::__compressed_pair_elem.1039" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.1043" }
%"class.std::__1::unique_ptr.1043" = type { %"class.std::__1::__compressed_pair.1044" }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.1045" }
%"struct.std::__1::__compressed_pair_elem.1045" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.928"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.935"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.942"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.949"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.956"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1278", i64 }
%"class.std::__1::vector.1278" = type { %"class.std::__1::__vector_base.1279" }
%"class.std::__1::__vector_base.1279" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1280" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1280" = type { %"struct.std::__1::__compressed_pair_elem.1281" }
%"struct.std::__1::__compressed_pair_elem.1281" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.1049" = type { %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.1055" = type { %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.1061 }
%class.scoped_refptr.1061 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl.72" }
%"struct.std::__1::__cxx_atomic_impl.72" = type { %"struct.std::__1::__cxx_atomic_base_impl.73" }
%"struct.std::__1::__cxx_atomic_base_impl.73" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.1501 = type { %"class.base::RefCountedData.1502"* }
%"class.base::RefCountedData.1502" = type opaque
%class.scoped_refptr.1503 = type { %"class.base::RefCountedData.1504"* }
%"class.base::RefCountedData.1504" = type opaque
%"struct.blink::FetchParameters::ResourceWidth" = type <{ float, i8, [3 x i8] }>
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.240", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.254", %"class.blink::FrameLoader", %"class.blink::Member.281", %"class.blink::Member.283", %"class.blink::Member.311", %"class.blink::Member.313", %"class.blink::Member.315", %"class.blink::Member.317", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.319", %class.scoped_refptr.321, %"class.blink::Member.322", %"class.blink::Member.324", %"class.blink::Member.326", %"class.blink::Member.328", %"class.blink::Member.330", %"class.blink::Member.332", %"class.blink::Member.334", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.338", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.359", %"class.std::__1::unique_ptr.360", %"class.absl::optional.227", i32, [4 x i8], %"class.std::__1::unique_ptr.366", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.374", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.379", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.384", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.387", %"class.blink::Member.389", %"class.blink::Member.391", %"class.blink::Member.393", %"class.mojo::StructPtr", %"class.blink::Member.403", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.405", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1", %"class.blink::Member.3", %"class.blink::Member.5", i8, i32, i8, i32, %"class.blink::Member.208", %"class.blink::Member.18", %"class.blink::FrameLifecycle", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.212", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.220", i8, %"class.base::UnguessableToken", %"class.absl::optional.222", %"class.absl::optional.227", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member", %"class.blink::Member.18", %"class.blink::Member.20", %"class.blink::Member.22", i8, %"class.WTF::Vector.24" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.13" }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::HeapVector.15"* }
%"class.blink::HeapVector.15" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.16"* }
%"class.WTF::Vector.16" = type opaque
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.24" = type { %"class.WTF::VectorBuffer.25" }
%"class.WTF::VectorBuffer.25" = type { %"class.WTF::VectorBufferBase.26" }
%"class.WTF::VectorBufferBase.26" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.200" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.27, %"class.std::__1::unique_ptr.150", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.33, i32 }>
%class.scoped_refptr.27 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.33, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.112", %"class.absl::optional.117", %"class.absl::optional.74", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.141", i8, [7 x i8], %class.scoped_refptr.33, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.50 }
%class.scoped_refptr.50 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.51", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.51" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.52" }
%"struct.std::__1::atomic.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl.55" }
%"struct.std::__1::__cxx_atomic_impl.55" = type { %"struct.std::__1::__cxx_atomic_base_impl.56" }
%"struct.std::__1::__cxx_atomic_base_impl.56" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.33, %"class.std::__1::unique_ptr.59", %"class.absl::optional", %"struct.std::__1::atomic.70", i8, i8, i8, i8, i32, i32, %"class.absl::optional.74", %"class.std::__1::unique_ptr.79", i8, i64, %class.scoped_refptr.108, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.111" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.57 }
%class.scoped_refptr.57 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.58", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.58" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.33, i8, %"class.mojo::ScopedHandleBase.62", %class.scoped_refptr.63, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.64" }
%"class.mojo::ScopedHandleBase.62" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.63 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.64" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.68 }
%union.anon.68 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.69", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.69" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.82", i8, i64, %class.scoped_refptr.83, %class.scoped_refptr.104 }
%"class.base::RepeatingCallback.82" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.83 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.93", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.84 }
%class.scoped_refptr.84 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.85", %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.93" = type { %"class.std::__1::__tree.94" }
%"class.std::__1::__tree.94" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%class.scoped_refptr.104 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.108 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.109 }
%class.scoped_refptr.109 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2115", [4 x i8], %"class.base::RepeatingCallback.153", %class.scoped_refptr.33, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2115" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.153" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.110 }
%class.scoped_refptr.110 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.111" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.112" = type { %"class.absl::optional_internal::optional_data.113" }
%"class.absl::optional_internal::optional_data.113" = type { %"class.absl::optional_internal::optional_data_base.114" }
%"class.absl::optional_internal::optional_data_base.114" = type { %"class.absl::optional_internal::optional_data_dtor_base.115" }
%"class.absl::optional_internal::optional_data_dtor_base.115" = type { i8, %union.anon.116 }
%union.anon.116 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.117" = type { %"class.absl::optional_internal::optional_data.118" }
%"class.absl::optional_internal::optional_data.118" = type { %"class.absl::optional_internal::optional_data_base.119" }
%"class.absl::optional_internal::optional_data_base.119" = type { %"class.absl::optional_internal::optional_data_dtor_base.120" }
%"class.absl::optional_internal::optional_data_dtor_base.120" = type { i8, [7 x i8], %union.anon.121 }
%union.anon.121 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.74" = type { %"class.absl::optional_internal::optional_data.75" }
%"class.absl::optional_internal::optional_data.75" = type { %"class.absl::optional_internal::optional_data_base.76" }
%"class.absl::optional_internal::optional_data_base.76" = type { %"class.absl::optional_internal::optional_data_dtor_base.77" }
%"class.absl::optional_internal::optional_data_dtor_base.77" = type { i8, %union.anon.78 }
%union.anon.78 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.126 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.126 = type { %"class.std::__1::map.129" }
%"class.std::__1::map.129" = type { %"class.std::__1::__tree.130" }
%"class.std::__1::__tree.130" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.140"*, i64 }
%"class.std::__1::unique_ptr.140" = type opaque
%"class.std::__1::map.141" = type { %"class.std::__1::__tree.142" }
%"class.std::__1::__tree.142" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.153", %"class.base::OnceCallback.154", %"class.absl::optional.155", %"class.absl::optional.160", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.167", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.175", %"class.std::__1::map.186", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.195", i8, %class.scoped_refptr.33, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.196" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.154" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.155" = type { %"class.absl::optional_internal::optional_data.156" }
%"class.absl::optional_internal::optional_data.156" = type { %"class.absl::optional_internal::optional_data_base.157" }
%"class.absl::optional_internal::optional_data_base.157" = type { %"class.absl::optional_internal::optional_data_dtor_base.158" }
%"class.absl::optional_internal::optional_data_dtor_base.158" = type { i8, %union.anon.159 }
%"class.absl::optional.160" = type { %"class.absl::optional_internal::optional_data.161" }
%"class.absl::optional_internal::optional_data.161" = type { %"class.absl::optional_internal::optional_data_base.162" }
%"class.absl::optional_internal::optional_data_base.162" = type { %"class.absl::optional_internal::optional_data_dtor_base.163" }
%"class.absl::optional_internal::optional_data_dtor_base.163" = type { i8, %union.anon.164 }
%union.anon.164 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.33, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.165" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.165" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.166 }
%class.scoped_refptr.166 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.170", %class.scoped_refptr.171 }
%"class.base::RepeatingCallback.170" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.171 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.175" = type { %"class.std::__1::__tree.176" }
%"class.std::__1::__tree.176" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.177", %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.186" = type { %"class.std::__1::__tree.187" }
%"class.std::__1::__tree.187" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.188", %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.base::OnceCallback.195" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.196" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.33 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.34" }>
%"class.base::RefCountedThreadSafe.34" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.208" = type { %"class.blink::MemberBase.209" }
%"class.blink::MemberBase.209" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type { i32 (...)** }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Frame"* }
%"class.blink::Member.212" = type { %"class.blink::MemberBase.213" }
%"class.blink::MemberBase.213" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.214"*, %"struct.std::__1::pair.214"*, %"class.std::__1::__compressed_pair.215" }
%"struct.std::__1::pair.214" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.std::__1::pair.214"* }
%"class.blink::Member.220" = type { %"class.blink::MemberBase.221" }
%"class.blink::MemberBase.221" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.222" = type { %"class.absl::optional_internal::optional_data.223" }
%"class.absl::optional_internal::optional_data.223" = type { %"class.absl::optional_internal::optional_data_base.224" }
%"class.absl::optional_internal::optional_data_base.224" = type { %"class.absl::optional_internal::optional_data_dtor_base.225" }
%"class.absl::optional_internal::optional_data_dtor_base.225" = type { i8, %union.anon.226 }
%union.anon.226 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.232 }
%class.scoped_refptr.232 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.238" }
%"class.WTF::HashTable.238" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.243", %"class.base::WeakPtrFactory.248" }
%"class.WTF::HashMap.243" = type { %"class.WTF::HashTable.244" }
%"class.WTF::HashTable.244" = type <{ %"struct.WTF::KeyValuePair.247"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.247" = type opaque
%"class.base::WeakPtrFactory.248" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.252" }
%"class.blink::Member.252" = type { %"class.blink::MemberBase.253" }
%"class.blink::MemberBase.253" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.811" }
%"class.blink::WeakMember.811" = type { %"class.blink::MemberBase.812" }
%"class.blink::MemberBase.812" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.513" }
%"class.blink::HeapHashSet.513" = type { %"class.WTF::HashSet.516" }
%"class.WTF::HashSet.516" = type { %"class.WTF::HashTable.517" }
%"class.WTF::HashTable.517" = type <{ %"class.blink::WeakMember.519"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.519" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.153", %"class.base::RepeatingCallback.2175", i64, %"class.std::__1::map.2176", i8*, i64, %"class.base::WeakPtrFactory.2185" }
%"class.base::RepeatingCallback.2175" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2176" = type { %"class.std::__1::__tree.2177" }
%"class.std::__1::__tree.2177" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2178", %"class.std::__1::__compressed_pair.2182" }
%"class.std::__1::__compressed_pair.2178" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.2182" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.base::WeakPtrFactory.2185" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.254" = type { %"class.WTF::HashSet.257" }
%"class.WTF::HashSet.257" = type { %"class.WTF::HashTable.258" }
%"class.WTF::HashTable.258" = type <{ %"class.blink::WeakMember.260"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.260" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.212", %"class.blink::Member.261", %"class.blink::Member.263", %"class.std::__1::unique_ptr.265", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.277" }
%"class.blink::Member.261" = type { %"class.blink::MemberBase.262" }
%"class.blink::MemberBase.262" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.263" = type { %"class.blink::MemberBase.264" }
%"class.blink::MemberBase.264" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.1470", %"class.blink::Member.1545", %"class.std::__1::unique_ptr.1874", %"class.std::__1::unique_ptr.607", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.2028, %"class.WTF::AtomicString", i32, %"class.absl::optional.1927", %class.scoped_refptr.536, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1892", i8, %"class.absl::optional.1899", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.212", %"class.blink::Member.2041", %"class.blink::Member.848", %"class.blink::Member.2052", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.2054", %class.scoped_refptr.528, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.2067", %"class.std::__1::unique_ptr.1904", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.2069", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.1507, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.1559, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.2074", %"class.blink::Member.2089", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.2102", %"class.WTF::Vector.639", i8, i8, i8, %"class.blink::WebVector.2017", %"class.blink::WebVector.2017", %"class.mojo::Remote.2107" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.1470" = type { %"class.WTF::VectorBuffer.1471" }
%"class.WTF::VectorBuffer.1471" = type { %"class.WTF::VectorBufferBase.1472" }
%"class.WTF::VectorBufferBase.1472" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.1545" = type { %"class.blink::MemberBase.1546" }
%"class.blink::MemberBase.1546" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.1874" = type { %"class.std::__1::__compressed_pair.1875" }
%"class.std::__1::__compressed_pair.1875" = type { %"struct.std::__1::__compressed_pair_elem.1876" }
%"struct.std::__1::__compressed_pair_elem.1876" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.1878", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.1892", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.1899", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.1904", %"class.base::UnguessableToken", %"class.blink::WebVector.1910", %"class.base::TickClock"*, %"class.blink::WebVector.1919", %"class.absl::optional.1927", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.1932", %"class.blink::WebVector", i8, %"class.blink::WebVector.1951", i8, %"class.std::__1::unique_ptr.1959", %"class.blink::WebVector.2017", %"class.blink::WebVector.2017" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebVector.1878" = type { %"class.std::__1::vector.1879" }
%"class.std::__1::vector.1879" = type { %"class.std::__1::__vector_base.1880" }
%"class.std::__1::__vector_base.1880" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.1887" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.1887" = type { %"struct.std::__1::__compressed_pair_elem.1888" }
%"struct.std::__1::__compressed_pair_elem.1888" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.1881", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.1881" = type { %"class.std::__1::__compressed_pair.1882" }
%"class.std::__1::__compressed_pair.1882" = type { %"struct.std::__1::__compressed_pair_elem.1883" }
%"struct.std::__1::__compressed_pair_elem.1883" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.1898", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.1898" = type { i8* }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.1877" }
%"class.blink::WebPrivatePtr.1877" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.1910" = type { %"class.std::__1::vector.1911" }
%"class.std::__1::vector.1911" = type { %"class.std::__1::__vector_base.1912" }
%"class.std::__1::__vector_base.1912" = type { %"class.std::__1::unique_ptr.1913"*, %"class.std::__1::unique_ptr.1913"*, %"class.std::__1::__compressed_pair.1914" }
%"class.std::__1::unique_ptr.1913" = type opaque
%"class.std::__1::__compressed_pair.1914" = type { %"struct.std::__1::__compressed_pair_elem.1915" }
%"struct.std::__1::__compressed_pair_elem.1915" = type { %"class.std::__1::unique_ptr.1913"* }
%"class.blink::WebVector.1919" = type { %"class.std::__1::vector.1920" }
%"class.std::__1::vector.1920" = type { %"class.std::__1::__vector_base.1921" }
%"class.std::__1::__vector_base.1921" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1922" }
%"class.std::__1::__compressed_pair.1922" = type { %"struct.std::__1::__compressed_pair_elem.1923" }
%"struct.std::__1::__compressed_pair_elem.1923" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.absl::optional.1932" = type { %"class.absl::optional_internal::optional_data.1933" }
%"class.absl::optional_internal::optional_data.1933" = type { %"class.absl::optional_internal::optional_data_base.1934" }
%"class.absl::optional_internal::optional_data_base.1934" = type { %"class.absl::optional_internal::optional_data_dtor_base.1935" }
%"class.absl::optional_internal::optional_data_dtor_base.1935" = type { i8, [7 x i8], %union.anon.1936 }
%union.anon.1936 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.343" }
%"class.std::__1::vector.343" = type { %"class.std::__1::__vector_base.344" }
%"class.std::__1::__vector_base.344" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.345" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.1951" = type { %"class.std::__1::vector.1952" }
%"class.std::__1::vector.1952" = type { %"class.std::__1::__vector_base.1953" }
%"class.std::__1::__vector_base.1953" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1954" }
%"class.std::__1::__compressed_pair.1954" = type { %"struct.std::__1::__compressed_pair_elem.1955" }
%"struct.std::__1::__compressed_pair_elem.1955" = type { i32* }
%"class.std::__1::unique_ptr.1959" = type { %"class.std::__1::__compressed_pair.1960" }
%"class.std::__1::__compressed_pair.1960" = type { %"struct.std::__1::__compressed_pair_elem.1961" }
%"struct.std::__1::__compressed_pair_elem.1961" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.1962" }
%"class.blink::WebVector.1962" = type { %"class.std::__1::vector.1963" }
%"class.std::__1::vector.1963" = type { %"class.std::__1::__vector_base.1964" }
%"class.std::__1::__vector_base.1964" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.2009" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.1965", %"class.blink::WebVector.1973", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector", i32, [4 x i8], %"class.absl::optional.2004", %"class.blink::WebVector" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.1965" = type { %"class.std::__1::vector.1966" }
%"class.std::__1::vector.1966" = type { %"class.std::__1::__vector_base.1967" }
%"class.std::__1::__vector_base.1967" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.1968" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.1968" = type { %"struct.std::__1::__compressed_pair_elem.1969" }
%"struct.std::__1::__compressed_pair_elem.1969" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.1973" = type { %"class.std::__1::vector.1974" }
%"class.std::__1::vector.1974" = type { %"class.std::__1::__vector_base.1975" }
%"class.std::__1::__vector_base.1975" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.1999" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.1976", %"class.blink::WebVector", %"class.blink::WebVector.1984", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.1976" = type { %"class.std::__1::vector.1977" }
%"class.std::__1::vector.1977" = type { %"class.std::__1::__vector_base.1978" }
%"class.std::__1::__vector_base.1978" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.1979" }
%"class.std::__1::__compressed_pair.1979" = type { %"struct.std::__1::__compressed_pair_elem.1980" }
%"struct.std::__1::__compressed_pair_elem.1980" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.1984" = type { %"class.std::__1::vector.1985" }
%"class.std::__1::vector.1985" = type { %"class.std::__1::__vector_base.1986" }
%"class.std::__1::__vector_base.1986" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.1994" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.1987" }
%"class.blink::WebVector.1987" = type { %"class.std::__1::vector.1988" }
%"class.std::__1::vector.1988" = type { %"class.std::__1::__vector_base.1989" }
%"class.std::__1::__vector_base.1989" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1990" }
%"class.std::__1::__compressed_pair.1990" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { i8* }
%"class.std::__1::__compressed_pair.1994" = type { %"struct.std::__1::__compressed_pair_elem.1995" }
%"struct.std::__1::__compressed_pair_elem.1995" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.1999" = type { %"struct.std::__1::__compressed_pair_elem.2000" }
%"struct.std::__1::__compressed_pair_elem.2000" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.2004" = type { %"class.absl::optional_internal::optional_data.2005" }
%"class.absl::optional_internal::optional_data.2005" = type { %"class.absl::optional_internal::optional_data_base.2006" }
%"class.absl::optional_internal::optional_data_base.2006" = type { %"class.absl::optional_internal::optional_data_dtor_base.2007" }
%"class.absl::optional_internal::optional_data_dtor_base.2007" = type { i8, [7 x i8], %union.anon.2008 }
%union.anon.2008 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.2009" = type { %"struct.std::__1::__compressed_pair_elem.2010" }
%"struct.std::__1::__compressed_pair_elem.2010" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr.610", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr.610" = type { %"class.std::__1::unique_ptr.611" }
%"class.std::__1::unique_ptr.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.614" }
%"class.WTF::Vector.614" = type { %"class.WTF::VectorBuffer.615" }
%"class.WTF::VectorBuffer.615" = type { %"class.WTF::VectorBufferBase.616" }
%"class.WTF::VectorBufferBase.616" = type { %"class.mojo::StructPtr.617"*, i32, i32 }
%"class.mojo::StructPtr.617" = type { %"class.std::__1::unique_ptr.618" }
%"class.std::__1::unique_ptr.618" = type { %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.621", %"class.WTF::HashMap.628", %"class.WTF::HashMap.633", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.638", i8, %"class.WTF::Vector.639", i32, %"class.mojo::StructPtr.644", %"class.WTF::Vector.639" }
%"class.mojo::StructPtr.621" = type { %"class.std::__1::unique_ptr.622" }
%"class.std::__1::unique_ptr.622" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.628" = type { %"class.WTF::HashTable.629" }
%"class.WTF::HashTable.629" = type <{ %"struct.WTF::KeyValuePair.632"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.632" = type opaque
%"class.WTF::HashMap.633" = type { %"class.WTF::HashTable.634" }
%"class.WTF::HashTable.634" = type <{ %"struct.WTF::KeyValuePair.637"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.637" = type opaque
%"class.mojo::InlinedStructPtr.638" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.644" = type { %"class.std::__1::unique_ptr.645" }
%"class.std::__1::unique_ptr.645" = type { %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.639", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.659" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.150", i32 }>
%"class.std::__1::unique_ptr.659" = type { %"class.std::__1::__compressed_pair.660" }
%"class.std::__1::__compressed_pair.660" = type { %"struct.std::__1::__compressed_pair_elem.661" }
%"struct.std::__1::__compressed_pair_elem.661" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.absl::optional.1927" = type { %"class.absl::optional_internal::optional_data.1928" }
%"class.absl::optional_internal::optional_data.1928" = type { %"class.absl::optional_internal::optional_data_base.1929" }
%"class.absl::optional_internal::optional_data_base.1929" = type { %"class.absl::optional_internal::optional_data_dtor_base.1930" }
%"class.absl::optional_internal::optional_data_dtor_base.1930" = type { i8, %union.anon.1931 }
%union.anon.1931 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector", %"class.blink::WebString", %"class.blink::WebVector", %"class.blink::WebVector" }
%"class.std::__1::unique_ptr.1892" = type { %"class.std::__1::__compressed_pair.1893" }
%"class.std::__1::__compressed_pair.1893" = type { %"struct.std::__1::__compressed_pair_elem.1894" }
%"struct.std::__1::__compressed_pair_elem.1894" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.1899" = type { %"class.absl::optional_internal::optional_data.1900" }
%"class.absl::optional_internal::optional_data.1900" = type { %"class.absl::optional_internal::optional_data_base.1901" }
%"class.absl::optional_internal::optional_data_base.1901" = type { %"class.absl::optional_internal::optional_data_dtor_base.1902" }
%"class.absl::optional_internal::optional_data_dtor_base.1902" = type { i8, %union.anon.1903 }
%union.anon.1903 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.1937", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.1937" = type { %"class.std::__1::__vector_base.1938" }
%"class.std::__1::__vector_base.1938" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.1946" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.1939", i8, i8, [6 x i8] }>
%"class.std::__1::vector.1939" = type { %"class.std::__1::__vector_base.1940" }
%"class.std::__1::__vector_base.1940" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.1941" }
%"class.std::__1::__compressed_pair.1941" = type { %"struct.std::__1::__compressed_pair_elem.1942" }
%"struct.std::__1::__compressed_pair_elem.1942" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.1946" = type { %"struct.std::__1::__compressed_pair_elem.1947" }
%"struct.std::__1::__compressed_pair_elem.1947" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.2041" = type { %"class.blink::MemberBase.2042" }
%"class.blink::MemberBase.2042" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.639", %"class.blink::Member.2045", %"class.absl::optional.2047", i64, i64, i32, %class.scoped_refptr.712, %class.scoped_refptr.2028, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.712 }
%"class.blink::Member.2045" = type { %"class.blink::MemberBase.2046" }
%"class.blink::MemberBase.2046" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.2047" = type { %"class.absl::optional_internal::optional_data.2048" }
%"class.absl::optional_internal::optional_data.2048" = type { %"class.absl::optional_internal::optional_data_base.2049" }
%"class.absl::optional_internal::optional_data_base.2049" = type { %"class.absl::optional_internal::optional_data_dtor_base.2050" }
%"class.absl::optional_internal::optional_data_dtor_base.2050" = type { i8, %union.anon.2051 }
%union.anon.2051 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%class.scoped_refptr.712 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.714", i64, %"class.WTF::Vector.718", %"class.WTF::Vector.723", %"class.WTF::Vector.729", %"class.WTF::Vector.747", %class.scoped_refptr.528, %"class.WTF::HashMap.753", %"class.WTF::Vector.758", %"class.WTF::Vector.718", %"class.WTF::Vector.764", %"class.WTF::HashMap.769", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.713" }
%"class.base::RefCountedThreadSafe.713" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.714" = type { %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"class.WTF::Vector.723" = type { %"class.WTF::VectorBuffer.724" }
%"class.WTF::VectorBuffer.724" = type { %"class.WTF::VectorBufferBase.725", [8 x i8] }
%"class.WTF::VectorBufferBase.725" = type { %class.scoped_refptr.726*, i32, i32 }
%class.scoped_refptr.726 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.729" = type { %"class.WTF::VectorBuffer.730" }
%"class.WTF::VectorBuffer.730" = type { %"class.WTF::VectorBufferBase.731" }
%"class.WTF::VectorBufferBase.731" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.733", %"class.std::__1::unique_ptr.739" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.732 }
%class.scoped_refptr.732 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.747" = type { %"class.WTF::VectorBuffer.748" }
%"class.WTF::VectorBuffer.748" = type { %"class.WTF::VectorBufferBase.749" }
%"class.WTF::VectorBufferBase.749" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.750", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.750" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.753" = type { %"class.WTF::HashTable.754" }
%"class.WTF::HashTable.754" = type <{ %"struct.WTF::KeyValuePair.757"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.757" = type opaque
%"class.WTF::Vector.758" = type { %"class.WTF::VectorBuffer.759" }
%"class.WTF::VectorBuffer.759" = type { %"class.WTF::VectorBufferBase.760" }
%"class.WTF::VectorBufferBase.760" = type { %"class.mojo::ScopedHandleBase.761"*, i32, i32 }
%"class.mojo::ScopedHandleBase.761" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.718" = type { %"class.WTF::VectorBuffer.719" }
%"class.WTF::VectorBuffer.719" = type { %"class.WTF::VectorBufferBase.720", [16 x i8] }
%"class.WTF::VectorBufferBase.720" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.764" = type { %"class.WTF::VectorBuffer.765" }
%"class.WTF::VectorBuffer.765" = type { %"class.WTF::VectorBufferBase.766" }
%"class.WTF::VectorBufferBase.766" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.769" = type { %"class.WTF::HashTable.770" }
%"class.WTF::HashTable.770" = type <{ %"struct.WTF::KeyValuePair.773"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.773" = type { i8**, %"class.std::__1::unique_ptr.2167" }
%"class.std::__1::unique_ptr.2167" = type { %"class.std::__1::__compressed_pair.2168" }
%"class.std::__1::__compressed_pair.2168" = type { %"struct.std::__1::__compressed_pair_elem.2169" }
%"struct.std::__1::__compressed_pair_elem.2169" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.848" = type { %"class.blink::MemberBase.849" }
%"class.blink::MemberBase.849" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.2052" = type { %"class.blink::MemberBase.2053" }
%"class.blink::MemberBase.2053" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1449", %class.scoped_refptr.1463, %class.scoped_refptr.1464, %"struct.blink::CacheControlHeader", %"class.absl::optional.155", %"class.absl::optional.1465", %"class.absl::optional.1465", %"class.absl::optional.1465", i64, %"class.blink::KURL", %"class.WTF::Vector.1470", %"class.WTF::String", %"class.WTF::Vector.639", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.227", %"class.WTF::Vector.639", %"class.blink::KURL", %"class.absl::optional.1475" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.1447", i8 }
%"struct.std::__1::array.1447" = type { [16 x i8] }
%"class.absl::optional.1449" = type { %"class.absl::optional_internal::optional_data.1450" }
%"class.absl::optional_internal::optional_data.1450" = type { %"class.absl::optional_internal::optional_data_base.1451" }
%"class.absl::optional_internal::optional_data_base.1451" = type { %"class.absl::optional_internal::optional_data_dtor_base.1452" }
%"class.absl::optional_internal::optional_data_dtor_base.1452" = type { i8, %union.anon.1453 }
%union.anon.1453 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.639", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1454", %"class.WTF::Vector.1458" }
%"class.WTF::Vector.1454" = type { %"class.WTF::VectorBuffer.1455" }
%"class.WTF::VectorBuffer.1455" = type { %"class.WTF::VectorBufferBase.308" }
%"class.WTF::VectorBufferBase.308" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.1458" = type { %"class.WTF::VectorBuffer.1459" }
%"class.WTF::VectorBuffer.1459" = type { %"class.WTF::VectorBufferBase.1460" }
%"class.WTF::VectorBufferBase.1460" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1463 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1464 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.155", %"class.absl::optional.155" }
%"class.absl::optional.1475" = type { %"class.absl::optional_internal::optional_data.1476" }
%"class.absl::optional_internal::optional_data.1476" = type { %"class.absl::optional_internal::optional_data_base.1477" }
%"class.absl::optional_internal::optional_data_base.1477" = type { %"class.absl::optional_internal::optional_data_dtor_base.1478" }
%"class.absl::optional_internal::optional_data_dtor_base.1478" = type { i8, %union.anon.1479 }
%union.anon.1479 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.mojo::Remote.2054" = type { %"class.mojo::internal::InterfacePtrState.2055" }
%"class.mojo::internal::InterfacePtrState.2055" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2056" }
%"class.std::__1::unique_ptr.2056" = type { %"class.std::__1::__compressed_pair.2057" }
%"class.std::__1::__compressed_pair.2057" = type { %"struct.std::__1::__compressed_pair_elem.2058" }
%"struct.std::__1::__compressed_pair_elem.2058" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%class.scoped_refptr.528 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.155", %"class.absl::optional.155", %"class.absl::optional.155", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.2062", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.263" }
%"class.WTF::Vector.2062" = type { %"class.WTF::VectorBuffer.2063" }
%"class.WTF::VectorBuffer.2063" = type { %"class.WTF::VectorBufferBase.2064" }
%"class.WTF::VectorBufferBase.2064" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.2067" = type { %"class.blink::MemberBase.2068" }
%"class.blink::MemberBase.2068" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.1904" = type { %"class.std::__1::__compressed_pair.1905" }
%"class.std::__1::__compressed_pair.1905" = type { %"struct.std::__1::__compressed_pair_elem.1906" }
%"struct.std::__1::__compressed_pair_elem.1906" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map", %"class.base::flat_map.567" }
%"class.base::flat_map.567" = type { %"class.base::internal::flat_tree.568" }
%"class.base::internal::flat_tree.568" = type { %"class.std::__1::vector.569" }
%"class.std::__1::vector.569" = type { %"class.std::__1::__vector_base.570" }
%"class.std::__1::__vector_base.570" = type { %"struct.std::__1::pair.571"*, %"struct.std::__1::pair.571"*, %"class.std::__1::__compressed_pair.572" }
%"struct.std::__1::pair.571" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.573" }
%"struct.std::__1::__compressed_pair_elem.573" = type { %"struct.std::__1::pair.571"* }
%"class.WTF::Vector.2069" = type { %"class.WTF::VectorBuffer.2070" }
%"class.WTF::VectorBuffer.2070" = type { %"class.WTF::VectorBufferBase.2071" }
%"class.WTF::VectorBufferBase.2071" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.1507 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1508", i64, %"class.WTF::Vector.1510", %"class.WTF::Vector.1515" }
%"class.WTF::RefCounted.1508" = type { %"class.base::RefCounted.1509" }
%"class.base::RefCounted.1509" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1515" = type { %"class.WTF::VectorBuffer.1516" }
%"class.WTF::VectorBuffer.1516" = type { %"class.WTF::VectorBufferBase.1517" }
%"class.WTF::VectorBufferBase.1517" = type { %"class.std::__1::unique_ptr.1518"*, i32, i32 }
%"class.std::__1::unique_ptr.1518" = type opaque
%class.scoped_refptr.1559 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::Member.2074" = type { %"class.blink::MemberBase.2075" }
%"class.blink::MemberBase.2075" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.2078", %"class.std::__1::unique_ptr.2083", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.2078" = type { %"class.WTF::HashTable.2079" }
%"class.WTF::HashTable.2079" = type <{ %"struct.WTF::KeyValuePair.2082"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2082" = type { %"class.WTF::Vector.2236", %class.scoped_refptr.2241 }
%"class.WTF::Vector.2236" = type { %"class.WTF::VectorBuffer.2237" }
%"class.WTF::VectorBuffer.2237" = type { %"class.WTF::VectorBufferBase.2238", [32 x i8] }
%"class.WTF::VectorBufferBase.2238" = type { i8*, i32, i32 }
%class.scoped_refptr.2241 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.2242", %"class.WTF::Vector.2244", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.2242" = type { %"class.base::RefCounted.2243" }
%"class.base::RefCounted.2243" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2244" = type { %"class.WTF::VectorBuffer.2245" }
%"class.WTF::VectorBuffer.2245" = type { %"class.WTF::VectorBufferBase.2238" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.2248", i64, %"class.absl::optional.2253" }
%"class.std::__1::unique_ptr.2248" = type { %"class.std::__1::__compressed_pair.2249" }
%"class.std::__1::__compressed_pair.2249" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"class.absl::optional.2253" = type { %"class.absl::optional_internal::optional_data.2254" }
%"class.absl::optional_internal::optional_data.2254" = type { %"class.absl::optional_internal::optional_data_base.2255" }
%"class.absl::optional_internal::optional_data_base.2255" = type { %"class.absl::optional_internal::optional_data_dtor_base.2256" }
%"class.absl::optional_internal::optional_data_dtor_base.2256" = type { i8, %union.anon.2257 }
%union.anon.2257 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.2258", %"class.std::__1::unique_ptr.2259" }
%"class.mojo::ScopedHandleBase.2258" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2259" = type { %"class.std::__1::__compressed_pair.2260" }
%"class.std::__1::__compressed_pair.2260" = type { %"struct.std::__1::__compressed_pair_elem.2261" }
%"struct.std::__1::__compressed_pair_elem.2261" = type { i8* }
%"class.std::__1::unique_ptr.2083" = type { %"class.std::__1::__compressed_pair.2084" }
%"class.std::__1::__compressed_pair.2084" = type { %"struct.std::__1::__compressed_pair_elem.2085" }
%"struct.std::__1::__compressed_pair_elem.2085" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.blink::Member.2089" = type { %"class.blink::MemberBase.2090" }
%"class.blink::MemberBase.2090" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.2095" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.2091", %"class.std::__1::bitset.2091", %"class.std::__1::bitset.2093" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2091" = type { %"class.std::__1::__bitset.2092" }
%"class.std::__1::__bitset.2092" = type { [11 x i64] }
%"class.std::__1::bitset.2093" = type { %"class.std::__1::__bitset.2094" }
%"class.std::__1::__bitset.2094" = type { [2 x i64] }
%"class.blink::HeapHashSet.2095" = type { %"class.WTF::HashSet.2098" }
%"class.WTF::HashSet.2098" = type { %"class.WTF::HashTable.2099" }
%"class.WTF::HashTable.2099" = type <{ %"class.blink::Member.2101"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2101" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.2102" = type { %"class.WTF::VectorBuffer.2103" }
%"class.WTF::VectorBuffer.2103" = type { %"class.WTF::VectorBufferBase.2104" }
%"class.WTF::VectorBufferBase.2104" = type { i32*, i32, i32 }
%"class.blink::WebVector.2017" = type { %"class.std::__1::vector.2018" }
%"class.std::__1::vector.2018" = type { %"class.std::__1::__vector_base.2019" }
%"class.std::__1::__vector_base.2019" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.2020" }
%"class.std::__1::__compressed_pair.2020" = type { %"struct.std::__1::__compressed_pair_elem.2021" }
%"struct.std::__1::__compressed_pair_elem.2021" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.2107" = type { %"class.mojo::internal::InterfacePtrState.2108" }
%"class.mojo::internal::InterfacePtrState.2108" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2109" }
%"class.std::__1::unique_ptr.2109" = type { %"class.std::__1::__compressed_pair.2110" }
%"class.std::__1::__compressed_pair.2110" = type { %"struct.std::__1::__compressed_pair_elem.2111" }
%"struct.std::__1::__compressed_pair_elem.2111" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.WTF::HashSet.277" = type { %"class.WTF::HashTable.278" }
%"class.WTF::HashTable.278" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.281" = type { %"class.blink::MemberBase.282" }
%"class.blink::MemberBase.282" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1593", %"class.blink::Member.212", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1598", i8, i32, %"class.blink::Color", %"class.absl::optional.1600", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1605", %"class.blink::Member.1607", %"class.blink::Member.1607", %"class.std::__1::unique_ptr.1610", i32, [4 x i8], %"class.WTF::HashSet.1613", %"class.blink::Member.1620", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1622", %"class.blink::HeapHashSet.1629", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1637", i8, %"class.blink::Member.1643", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1655", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1669", i8, %"class.std::__1::unique_ptr.1675", %"class.std::__1::unique_ptr.1792", %"class.WTF::Vector.1798", i32, %class.scoped_refptr.1803, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1804", %"class.blink::Member.1806", %"class.blink::Member.1808", %"class.blink::HeapHashSet.1810", %"class.blink::HeapHashSet.1817", %"class.std::__1::unique_ptr.1824", %"class.std::__1::unique_ptr.1830", %"class.WTF::Vector.498" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1593" = type { %"class.WTF::HashTable.1594" }
%"class.WTF::HashTable.1594" = type <{ %class.scoped_refptr.1597*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1597 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1598" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1599", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.1064, %"class.base::WeakPtrFactory.1065" }
%class.scoped_refptr.1064 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.1065" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1599" = type { %"class.blink::MemberBase.282" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1600" = type { %"class.absl::optional_internal::optional_data.1601" }
%"class.absl::optional_internal::optional_data.1601" = type { %"class.absl::optional_internal::optional_data_base.1602" }
%"class.absl::optional_internal::optional_data_base.1602" = type { %"class.absl::optional_internal::optional_data_dtor_base.1603" }
%"class.absl::optional_internal::optional_data_dtor_base.1603" = type { i8, %union.anon.1604 }
%union.anon.1604 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1605" = type { %"class.blink::MemberBase.1606" }
%"class.blink::MemberBase.1606" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1607" = type { %"class.blink::MemberBase.1608" }
%"class.blink::MemberBase.1608" = type { %"class.blink::HeapHashSet.1609"* }
%"class.blink::HeapHashSet.1609" = type opaque
%"class.std::__1::unique_ptr.1610" = type { %"class.std::__1::__compressed_pair.1611" }
%"class.std::__1::__compressed_pair.1611" = type { %"struct.std::__1::__compressed_pair_elem.1612" }
%"struct.std::__1::__compressed_pair_elem.1612" = type { %"class.WTF::HashSet.1613"* }
%"class.WTF::HashSet.1613" = type { %"class.WTF::HashTable.1614" }
%"class.WTF::HashTable.1614" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1620" = type { %"class.blink::MemberBase.1621" }
%"class.blink::MemberBase.1621" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1622" = type { %"class.WTF::HashSet.1625" }
%"class.WTF::HashSet.1625" = type { %"class.WTF::HashTable.1626" }
%"class.WTF::HashTable.1626" = type <{ %"class.blink::Member.1628"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1628" = type opaque
%"class.blink::HeapHashSet.1629" = type { %"class.WTF::HashSet.1632" }
%"class.WTF::HashSet.1632" = type { %"class.WTF::HashTable.1633" }
%"class.WTF::HashTable.1633" = type <{ %"class.blink::Member.1635"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1635" = type { %"class.blink::MemberBase.1636" }
%"class.blink::MemberBase.1636" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1859", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1870", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.283" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1859" = type { %"class.blink::MemberBase.1860" }
%"class.blink::MemberBase.1860" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1861", %"class.blink::Member.1862", %"class.blink::Member.1864", %"class.blink::Member.1866", %"class.blink::Member.1868", %"class.WTF::Vector.498", i16, %class.scoped_refptr.1064 }
%"class.blink::ThreadState::PrefinalizerRegistration.1861" = type { i8 }
%"class.blink::Member.1862" = type { %"class.blink::MemberBase.1863" }
%"class.blink::MemberBase.1863" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1864" = type { %"class.blink::MemberBase.1865" }
%"class.blink::MemberBase.1865" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1866" = type { %"class.blink::MemberBase.1867" }
%"class.blink::MemberBase.1867" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1868" = type { %"class.blink::MemberBase.1869" }
%"class.blink::MemberBase.1869" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1870" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1871", { i64, i64 } }
%"class.blink::WeakMember.1871" = type { %"class.blink::MemberBase.1636" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1637" = type { %"class.std::__1::__compressed_pair.1638" }
%"class.std::__1::__compressed_pair.1638" = type { %"struct.std::__1::__compressed_pair_elem.1639" }
%"struct.std::__1::__compressed_pair_elem.1639" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1643" = type { %"class.blink::MemberBase.1644" }
%"class.blink::MemberBase.1644" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1647", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1647" = type { %"class.WTF::HashTable.1648" }
%"class.WTF::HashTable.1648" = type <{ %"struct.WTF::KeyValuePair.1650"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1650" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1651", i32, i32 }
%"class.WTF::Vector.1651" = type { %"class.WTF::VectorBuffer.1652" }
%"class.WTF::VectorBuffer.1652" = type { %"class.WTF::VectorBufferBase.1653" }
%"class.WTF::VectorBufferBase.1653" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1655" = type { %"class.WTF::LinkedHashSet.1658" }
%"class.WTF::LinkedHashSet.1658" = type { %"class.WTF::HashMap.1659", %"class.WTF::VectorBackedLinkedList.1663" }
%"class.WTF::HashMap.1659" = type { %"class.WTF::HashTable.1660" }
%"class.WTF::HashTable.1660" = type <{ %"struct.WTF::KeyValuePair.1662"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1662" = type opaque
%"class.WTF::VectorBackedLinkedList.1663" = type { %"class.WTF::Vector.1664", i32, i32 }
%"class.WTF::Vector.1664" = type { %"class.WTF::VectorBuffer.1665" }
%"class.WTF::VectorBuffer.1665" = type { %"class.WTF::VectorBufferBase.1666" }
%"class.WTF::VectorBufferBase.1666" = type { %"class.WTF::VectorBackedLinkedListNode.1667"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1667" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1669" = type { %"class.std::__1::__compressed_pair.1670" }
%"class.std::__1::__compressed_pair.1670" = type { %"struct.std::__1::__compressed_pair_elem.1671" }
%"struct.std::__1::__compressed_pair_elem.1671" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1675" = type { %"class.std::__1::__compressed_pair.1676" }
%"class.std::__1::__compressed_pair.1676" = type { %"struct.std::__1::__compressed_pair_elem.1677" }
%"struct.std::__1::__compressed_pair_elem.1677" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1678, %class.scoped_refptr.1678, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1769", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1774", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1678 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1679", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1686" }
%"class.WTF::RefCounted.1679" = type { %"class.base::RefCounted.1680" }
%"class.base::RefCounted.1680" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1681", i32, [4 x i8] }>
%"class.WTF::Vector.1681" = type { %"class.WTF::VectorBuffer.1682" }
%"class.WTF::VectorBuffer.1682" = type { %"class.WTF::VectorBufferBase.1683" }
%"class.WTF::VectorBufferBase.1683" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1686" = type { %"class.WTF::VectorBuffer.1687" }
%"class.WTF::VectorBuffer.1687" = type { %"class.WTF::VectorBufferBase.1688" }
%"class.WTF::VectorBufferBase.1688" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1692", %"class.std::__1::unique_ptr.1741", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1689, %class.scoped_refptr.1690, %class.scoped_refptr.1691 }
%class.scoped_refptr.1689 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1705", i8, i8, %class.scoped_refptr.1689, i32, i32 }
%"class.WTF::RefCounted.1705" = type { %"class.base::RefCounted.1706" }
%"class.base::RefCounted.1706" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1690 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1854" }
%"class.blink::PaintPropertyNode.1854" = type { %"class.WTF::RefCounted.1855", i8, i8, %class.scoped_refptr.1690, i32, i32 }
%"class.WTF::RefCounted.1855" = type { %"class.base::RefCounted.1856" }
%"class.base::RefCounted.1856" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1691 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1851" }
%"class.blink::PaintPropertyNode.1851" = type { %"class.WTF::RefCounted.1852", i8, i8, %class.scoped_refptr.1691, i32, i32 }
%"class.WTF::RefCounted.1852" = type { %"class.base::RefCounted.1853" }
%"class.base::RefCounted.1853" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1692" = type { %"class.std::__1::__compressed_pair.1693" }
%"class.std::__1::__compressed_pair.1693" = type { %"struct.std::__1::__compressed_pair_elem.1694" }
%"struct.std::__1::__compressed_pair_elem.1694" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1695", %"class.WTF::Vector.1700", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1695" = type { %"class.WTF::VectorBuffer.1696" }
%"class.WTF::VectorBuffer.1696" = type { %"class.WTF::VectorBufferBase.1697" }
%"class.WTF::VectorBufferBase.1697" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1700" = type { %"class.WTF::VectorBuffer.1701" }
%"class.WTF::VectorBuffer.1701" = type { %"class.WTF::VectorBufferBase.1702" }
%"class.WTF::VectorBufferBase.1702" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1720" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1713, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1714", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1707" }
%"class.std::__1::unique_ptr.1707" = type { %"class.std::__1::__compressed_pair.1708" }
%"class.std::__1::__compressed_pair.1708" = type { %"struct.std::__1::__compressed_pair_elem.1709" }
%"struct.std::__1::__compressed_pair_elem.1709" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1713 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1836", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1836" = type { %"class.WTF::RefCounted.1837", i8, i8, %class.scoped_refptr.1713, i32, i32 }
%"class.WTF::RefCounted.1837" = type { %"class.base::RefCounted.1838" }
%"class.base::RefCounted.1838" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1839" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1839" = type { %"class.absl::optional_internal::optional_data.1840" }
%"class.absl::optional_internal::optional_data.1840" = type { %"class.absl::optional_internal::optional_data_base.1841" }
%"class.absl::optional_internal::optional_data_base.1841" = type { %"class.absl::optional_internal::optional_data_dtor_base.1842" }
%"class.absl::optional_internal::optional_data_dtor_base.1842" = type { i8, %union.anon.1843 }
%union.anon.1843 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1844", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1844" = type { %"class.std::__1::__vector_base.1845" }
%"class.std::__1::__vector_base.1845" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1846" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1846" = type { %"struct.std::__1::__compressed_pair_elem.1847" }
%"struct.std::__1::__compressed_pair_elem.1847" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1714" = type { %"class.std::__1::__compressed_pair.1715" }
%"class.std::__1::__compressed_pair.1715" = type { %"struct.std::__1::__compressed_pair_elem.1716" }
%"struct.std::__1::__compressed_pair_elem.1716" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1720" = type { %"class.std::__1::__compressed_pair.1721" }
%"class.std::__1::__compressed_pair.1721" = type { %"struct.std::__1::__compressed_pair_elem.1722" }
%"struct.std::__1::__compressed_pair_elem.1722" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1723", %"class.std::__1::unique_ptr.1729", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1723" = type { %"class.std::__1::__compressed_pair.1724" }
%"class.std::__1::__compressed_pair.1724" = type { %"struct.std::__1::__compressed_pair_elem.1725" }
%"struct.std::__1::__compressed_pair_elem.1725" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1729" = type { %"class.std::__1::__compressed_pair.1730" }
%"class.std::__1::__compressed_pair.1730" = type { %"struct.std::__1::__compressed_pair_elem.1731" }
%"struct.std::__1::__compressed_pair_elem.1731" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1741" = type { %"class.std::__1::__compressed_pair.1742" }
%"class.std::__1::__compressed_pair.1742" = type { %"struct.std::__1::__compressed_pair_elem.1743" }
%"struct.std::__1::__compressed_pair_elem.1743" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1744", %"class.absl::optional.1744" }
%"class.absl::optional.1744" = type { %"class.absl::optional_internal::optional_data.1745" }
%"class.absl::optional_internal::optional_data.1745" = type { %"class.absl::optional_internal::optional_data_base.1746" }
%"class.absl::optional_internal::optional_data_base.1746" = type { %"class.absl::optional_internal::optional_data_dtor_base.1747" }
%"class.absl::optional_internal::optional_data_dtor_base.1747" = type { i8, [3 x i8], %union.anon.1748 }
%union.anon.1748 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1686"*, %"class.absl::optional.1754", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1754" = type { %"class.absl::optional_internal::optional_data.1755" }
%"class.absl::optional_internal::optional_data.1755" = type { %"class.absl::optional_internal::optional_data_base.1756" }
%"class.absl::optional_internal::optional_data_base.1756" = type { %"class.absl::optional_internal::optional_data_dtor_base.1757" }
%"class.absl::optional_internal::optional_data_dtor_base.1757" = type { i8, %union.anon.1758 }
%union.anon.1758 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1759", %"class.WTF::Vector.1764" }
%"class.WTF::Vector.1759" = type { %"class.WTF::VectorBuffer.1760" }
%"class.WTF::VectorBuffer.1760" = type { %"class.WTF::VectorBufferBase.1761", [128 x i8] }
%"class.WTF::VectorBufferBase.1761" = type { i32*, i32, i32 }
%"class.WTF::Vector.1764" = type { %"class.WTF::VectorBuffer.1765" }
%"class.WTF::VectorBuffer.1765" = type { %"class.WTF::VectorBufferBase.1766", [128 x i8] }
%"class.WTF::VectorBufferBase.1766" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1769" = type { %"class.WTF::VectorBuffer.1770" }
%"class.WTF::VectorBuffer.1770" = type { %"class.WTF::VectorBufferBase.1771" }
%"class.WTF::VectorBufferBase.1771" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1774" = type { %"class.WTF::HashTable.1775" }
%"class.WTF::HashTable.1775" = type <{ %"struct.WTF::KeyValuePair.1778"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1778" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1779", %"class.WTF::Vector.1784" }
%"class.WTF::HashMap.1779" = type { %"class.WTF::HashTable.1780" }
%"class.WTF::HashTable.1780" = type <{ %"struct.WTF::KeyValuePair.1783"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1783" = type opaque
%"class.WTF::Vector.1784" = type { %"class.WTF::VectorBuffer.1785" }
%"class.WTF::VectorBuffer.1785" = type { %"class.WTF::VectorBufferBase.1786" }
%"class.WTF::VectorBufferBase.1786" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1792" = type { %"class.std::__1::__compressed_pair.1793" }
%"class.std::__1::__compressed_pair.1793" = type { %"struct.std::__1::__compressed_pair_elem.1794" }
%"struct.std::__1::__compressed_pair_elem.1794" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1798" = type { %"class.WTF::VectorBuffer.1799" }
%"class.WTF::VectorBuffer.1799" = type { %"class.WTF::VectorBufferBase.1800" }
%"class.WTF::VectorBufferBase.1800" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1803 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1804" = type { %"class.blink::MemberBase.1805" }
%"class.blink::MemberBase.1805" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1806" = type { %"class.blink::MemberBase.1807" }
%"class.blink::MemberBase.1807" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1808" = type { %"class.blink::MemberBase.1809" }
%"class.blink::MemberBase.1809" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1810" = type { %"class.WTF::HashSet.1813" }
%"class.WTF::HashSet.1813" = type { %"class.WTF::HashTable.1814" }
%"class.WTF::HashTable.1814" = type <{ %"class.blink::WeakMember.1816"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1816" = type opaque
%"class.blink::HeapHashSet.1817" = type { %"class.WTF::HashSet.1820" }
%"class.WTF::HashSet.1820" = type { %"class.WTF::HashTable.1821" }
%"class.WTF::HashTable.1821" = type <{ %"class.blink::WeakMember.1823"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1823" = type opaque
%"class.std::__1::unique_ptr.1824" = type { %"class.std::__1::__compressed_pair.1825" }
%"class.std::__1::__compressed_pair.1825" = type { %"struct.std::__1::__compressed_pair_elem.1826" }
%"struct.std::__1::__compressed_pair_elem.1826" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1830" = type { %"class.std::__1::__compressed_pair.1831" }
%"class.std::__1::__compressed_pair.1831" = type { %"struct.std::__1::__compressed_pair_elem.1832" }
%"struct.std::__1::__compressed_pair_elem.1832" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1465", i32, i32, i32, i8, [3 x i8] }>
%"class.WTF::Vector.498" = type { %"class.WTF::VectorBuffer.499" }
%"class.WTF::VectorBuffer.499" = type { %"class.WTF::VectorBufferBase.500" }
%"class.WTF::VectorBufferBase.500" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.283" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.295" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.285", %"class.blink::Member.285" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.285", %"class.blink::Member.287", %"class.blink::Member.285", %"class.blink::Member.285", %"class.blink::Member.289" }
%"class.blink::Member.287" = type { %"class.blink::MemberBase.288" }
%"class.blink::MemberBase.288" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.410", %"class.blink::Member.412", %"class.blink::Member.287", %"class.blink::Member.414", %"class.blink::Member.414", %"class.blink::Member.436", %"class.blink::Member.438", %"class.blink::Member.440", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.445", %"class.blink::HeapVector.447" }
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.412" = type { %"class.blink::MemberBase.413" }
%"class.blink::MemberBase.413" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.490", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.498", %"class.WTF::Vector.498", i8, i32, %"class.blink::Member.503", %"class.blink::Member.580", %"class.blink::Member.846", %"class.blink::Member.848", %"class.blink::Member.850", %"class.blink::Member.852", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.854", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.860", %"class.blink::Member.862", %"class.blink::Member.453", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.864", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.429", %"class.blink::Member.283", %"class.blink::Member.822", %"class.blink::Member.283", %"class.blink::Member.283", %"class.blink::Member.283", %"class.blink::UserActionElementSet", %"class.blink::Member.1074", double, double, i64, i64, %"class.blink::HeapHashSet.1076", %"class.blink::HeapHashSet.1083", i16, i8, %"class.blink::Member.1090", %"class.blink::Member.1092", %"class.blink::Member.1094", %"class.blink::Member.1096", %"class.blink::TextLinkColors", %"class.blink::Member.1098", i8, [7 x i8], %"class.blink::HeapHashMap.1100", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.283", %"class.WTF::Vector.1107", %"class.blink::Member.1112", %"class.blink::Member.1114", i8, %"class.blink::Member.283", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1116", %"class.blink::HeapVector.1118", %"class.std::__1::unique_ptr.1126", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1132", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1145", %"class.WTF::Vector.1147", i8, i8, %"class.std::__1::unique_ptr.1152", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.429", %"class.blink::HeapVector.1158", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1166", i8, i32, %"class.blink::Member.1168", %"class.blink::Member.1170", %"class.blink::Member.1172", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1174", %"class.WTF::HashMap.1176", %"class.blink::Member.1181", %"class.blink::Member.1183", %"class.blink::Member.1185", %"class.blink::Member.1187", %"class.blink::Member.412", %"class.blink::Member.412", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1189", i8, i32, %"class.blink::Member.1196", %"class.blink::Member.1198", i32, %"class.blink::Member.1200", %"class.blink::Member.1202", %"class.blink::Member.1204", %"class.std::__1::unique_ptr.1206", i64, %"class.std::__1::unique_ptr.1212", i32, i32, %"class.blink::Member.1218", %"class.blink::Member.1220", %"class.blink::Member.1222", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1224", %"class.WTF::Vector.833", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1226", %"class.blink::Member.1233", %"class.std::__1::unique_ptr.1235", %"class.blink::Member.1241", i8, i8, %"class.WTF::String", %"class.blink::Member.1243", i8, [7 x i8], %"class.blink::HeapHashMap.1245", %"class.blink::HeapObserverSet.1252", %"class.blink::Member.1260", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1262", i32, i8, i8, %"class.blink::WeakMember.1264", %"class.blink::Member.1265" }
%"class.blink::Supplementable.490" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.491" }
%"class.blink::HeapHashMap.491" = type { %"class.WTF::HashMap.494" }
%"class.WTF::HashMap.494" = type { %"class.WTF::HashTable.495" }
%"class.WTF::HashTable.495" = type <{ %"struct.WTF::KeyValuePair.497"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.497" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.682", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.690", %"class.blink::Member.412", %"class.blink::Member.692", i8, %"class.blink::Member.694", %"class.blink::Member.696", %"class.blink::Member.698", %"class.blink::Member.698", %"class.blink::Member.698", %"class.blink::Member.698", %"class.blink::Member.698", %"class.blink::Member.698", %"class.blink::Member.700", %"class.blink::Member.702", %"class.blink::Member.704", %"class.blink::Member.706", %"class.blink::Member.708", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.639", %"class.blink::Member.710", %class.scoped_refptr.712, %"class.blink::HeapHashSet.774", %"class.blink::Member.781", %"class.blink::HeapHashMap.794", %"class.std::__1::unique_ptr.801", %"class.blink::Member.807", %"class.blink::Member.826", %"class.blink::Member.828", %"class.blink::Member.830", %"class.WTF::Vector.833", %"class.util::TokenType", %"class.WTF::HashSet.838", %"class.WTF::Deque" }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.505", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.586", i32, i8, [3 x i8], %"class.blink::HeapVector.588", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.596", %"class.blink::Member.598", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.607", %"class.blink::Member.668", %"class.blink::Member.670", i8 }>
%"class.blink::Supplementable.505" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.506" }
%"class.blink::HeapHashMap.506" = type { %"class.WTF::HashMap.509" }
%"class.WTF::HashMap.509" = type { %"class.WTF::HashTable.510" }
%"class.WTF::HashTable.510" = type <{ %"struct.WTF::KeyValuePair.512"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.512" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.520" }
%"class.blink::Supplementable.520" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.521" }
%"class.blink::HeapHashMap.521" = type { %"class.WTF::HashMap.524" }
%"class.WTF::HashMap.524" = type { %"class.WTF::HashTable.525" }
%"class.WTF::HashTable.525" = type <{ %"struct.WTF::KeyValuePair.527"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.527" = type { i8*, %"class.blink::Member.2163" }
%"class.blink::Member.2163" = type { %"class.blink::MemberBase.2164" }
%"class.blink::MemberBase.2164" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2165" }
%"class.blink::Member.2165" = type { %"class.blink::MemberBase.2166" }
%"class.blink::MemberBase.2166" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.528, %"class.std::__1::unique_ptr.537", %"class.std::__1::unique_ptr.537", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.564", %"class.blink::Member.580", i32, [4 x i8], %"class.WTF::HashSet.582", i32, i32 }
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.540", %"class.std::__1::map.551", %"class.std::__1::map.560"* }
%"class.std::__1::map.540" = type { %"class.std::__1::__tree.541" }
%"class.std::__1::__tree.541" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.542", %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.551" = type { %"class.std::__1::__tree.552" }
%"class.std::__1::__tree.552" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.553", %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.560" = type opaque
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map.567" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.WTF::HashSet.582" = type { %"class.WTF::HashTable.583" }
%"class.WTF::HashTable.583" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.586" = type { %"class.blink::MemberBase.587" }
%"class.blink::MemberBase.587" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.588" = type { %"class.WTF::Vector.591" }
%"class.WTF::Vector.591" = type { %"class.WTF::VectorBuffer.592" }
%"class.WTF::VectorBuffer.592" = type { %"class.WTF::VectorBufferBase.593" }
%"class.WTF::VectorBufferBase.593" = type { %"class.blink::Member.594"*, i32, i32 }
%"class.blink::Member.594" = type opaque
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.598" = type { %"class.blink::MemberBase.599" }
%"class.blink::MemberBase.599" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.600", i32, i32 }
%"class.blink::HeapHashMap.600" = type { %"class.WTF::HashMap.603" }
%"class.WTF::HashMap.603" = type { %"class.WTF::HashTable.604" }
%"class.WTF::HashTable.604" = type <{ %"struct.WTF::KeyValuePair.606"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.606" = type opaque
%"class.blink::Member.668" = type { %"class.blink::MemberBase.669" }
%"class.blink::MemberBase.669" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.670" = type { %"class.blink::MemberBase.671" }
%"class.blink::MemberBase.671" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.598", i8, [7 x i8], %"class.WTF::Vector.614", %"class.blink::HeapVector.674", i8, [7 x i8], %"class.WTF::HashSet.582", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.674" = type { %"class.WTF::Vector.677" }
%"class.WTF::Vector.677" = type { %"class.WTF::VectorBuffer.678" }
%"class.WTF::VectorBuffer.678" = type { %"class.WTF::VectorBufferBase.679" }
%"class.WTF::VectorBufferBase.679" = type { %"class.blink::Member.680"*, i32, i32 }
%"class.blink::Member.680" = type opaque
%"class.blink::Supplementable.682" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.683" }
%"class.blink::HeapHashMap.683" = type { %"class.WTF::HashMap.686" }
%"class.WTF::HashMap.686" = type { %"class.WTF::HashTable.687" }
%"class.WTF::HashTable.687" = type <{ %"struct.WTF::KeyValuePair.689"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.689" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.690" = type { %"class.blink::MemberBase.691" }
%"class.blink::MemberBase.691" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.692" = type { %"class.blink::MemberBase.693" }
%"class.blink::MemberBase.693" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.694" = type { %"class.blink::MemberBase.695" }
%"class.blink::MemberBase.695" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.696" = type { %"class.blink::MemberBase.697" }
%"class.blink::MemberBase.697" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.698" = type { %"class.blink::MemberBase.699" }
%"class.blink::MemberBase.699" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.700" = type { %"class.blink::MemberBase.701" }
%"class.blink::MemberBase.701" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.702" = type { %"class.blink::MemberBase.703" }
%"class.blink::MemberBase.703" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.704" = type { %"class.blink::MemberBase.705" }
%"class.blink::MemberBase.705" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.706" = type { %"class.blink::MemberBase.707" }
%"class.blink::MemberBase.707" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.708" = type { %"class.blink::MemberBase.709" }
%"class.blink::MemberBase.709" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.710" = type { %"class.blink::MemberBase.711" }
%"class.blink::MemberBase.711" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%"class.blink::HeapHashSet.774" = type { %"class.WTF::HashSet.777" }
%"class.WTF::HashSet.777" = type { %"class.WTF::HashTable.778" }
%"class.WTF::HashTable.778" = type <{ %"class.blink::WeakMember.780"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.780" = type opaque
%"class.blink::Member.781" = type { %"class.blink::MemberBase.782" }
%"class.blink::MemberBase.782" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.788", %"class.blink::Member.788", %"class.blink::Member.790", %"class.blink::Member.792", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.783" }
%"class.absl::optional.783" = type { %"class.absl::optional_internal::optional_data.784" }
%"class.absl::optional_internal::optional_data.784" = type { %"class.absl::optional_internal::optional_data_base.785" }
%"class.absl::optional_internal::optional_data_base.785" = type { %"class.absl::optional_internal::optional_data_dtor_base.786" }
%"class.absl::optional_internal::optional_data_dtor_base.786" = type { i8, %union.anon.787 }
%union.anon.787 = type { i64 }
%"class.blink::Member.788" = type { %"class.blink::MemberBase.789" }
%"class.blink::MemberBase.789" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.790" = type { %"class.blink::MemberBase.791" }
%"class.blink::MemberBase.791" = type { %"class.blink::Event"* }
%"class.blink::Member.792" = type { %"class.blink::MemberBase.793" }
%"class.blink::MemberBase.793" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.794" = type { %"class.WTF::HashMap.797" }
%"class.WTF::HashMap.797" = type { %"class.WTF::HashTable.798" }
%"class.WTF::HashTable.798" = type <{ %"struct.WTF::KeyValuePair.800"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.800" = type opaque
%"class.std::__1::unique_ptr.801" = type { %"class.std::__1::__compressed_pair.802" }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.807" = type { %"class.blink::MemberBase.808" }
%"class.blink::MemberBase.808" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.212", %"class.blink::CachedTextInputInfo", %"class.blink::Member.822", %"class.blink::Member.824", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.813", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.815", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.813" = type { %"class.blink::MemberBase.814" }
%"class.blink::MemberBase.814" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.815" = type { %"class.WTF::HashMap.818" }
%"class.WTF::HashMap.818" = type { %"class.WTF::HashTable.819" }
%"class.WTF::HashTable.819" = type <{ %"struct.WTF::KeyValuePair.821"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.821" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.285", i32, i32 }
%"class.blink::Member.824" = type { %"class.blink::MemberBase.825" }
%"class.blink::MemberBase.825" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.826" = type { %"class.blink::MemberBase.827" }
%"class.blink::MemberBase.827" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.503", %"class.blink::Member.1587", %"class.blink::Member.1589" }
%"class.blink::Member.1587" = type { %"class.blink::MemberBase.1588" }
%"class.blink::MemberBase.1588" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1589" = type { %"class.blink::MemberBase.1590" }
%"class.blink::MemberBase.1590" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.828" = type { %"class.blink::MemberBase.829" }
%"class.blink::MemberBase.829" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.503", %"class.blink::HeapMojoRemote.1582" }
%"class.blink::HeapMojoRemote.1582" = type { %"class.blink::Member.1583" }
%"class.blink::Member.1583" = type { %"class.blink::MemberBase.1584" }
%"class.blink::MemberBase.1584" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.830" = type { %"class.blink::MemberBase.831" }
%"class.blink::MemberBase.831" = type { %"class.blink::HeapHashMap.832"* }
%"class.blink::HeapHashMap.832" = type opaque
%"class.WTF::HashSet.838" = type { %"class.WTF::HashTable.839" }
%"class.WTF::HashTable.839" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.844" }
%"class.WTF::VectorBuffer.844" = type { %"class.WTF::VectorBufferBase.845" }
%"class.WTF::VectorBufferBase.845" = type { i64*, i32, i32 }
%"class.blink::Member.580" = type { %"class.blink::MemberBase.581" }
%"class.blink::MemberBase.581" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.505", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.586", i32, i8, [3 x i8], %"class.blink::HeapVector.588", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.596", %"class.blink::Member.598", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.607", %"class.blink::Member.668", %"class.blink::Member.670", i8, [7 x i8] }>
%"class.blink::Member.846" = type { %"class.blink::MemberBase.847" }
%"class.blink::MemberBase.847" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.1287", %"class.blink::Member.1288", %"class.blink::Member.1290", %"class.blink::Member.1292", %class.scoped_refptr.1064, %class.scoped_refptr.1064, %"class.blink::Member.1296", %"class.blink::Member.1298", %"class.blink::Member.1304", %"class.blink::Member.1308", %"class.blink::Member.1359", %"class.blink::HeapHashMap.1361", %"class.blink::HeapHashSet.1368", %"class.blink::HeapHashSet.1368", %"class.blink::HeapHashMap.1530", %"class.blink::HeapVector.1537", %"class.blink::Member.1545", %"class.blink::HeapTaskRunnerTimer.1547", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1549", %"class.WTF::Vector.1556", %"class.blink::HeapHashSet.1562", %"class.blink::HeapHashSet.1562", %"class.std::__1::unique_ptr.1568", %"class.base::WeakPtr.1353", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote.1574", %"class.blink::Member.1577", i8, i8, %"class.base::WeakPtrFactory.1579" }
%"class.blink::ThreadState::PrefinalizerRegistration.1287" = type { i8 }
%"class.blink::Member.1288" = type { %"class.blink::MemberBase.1289" }
%"class.blink::MemberBase.1289" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1290" = type { %"class.blink::MemberBase.1291" }
%"class.blink::MemberBase.1291" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.1292" = type { %"class.blink::MemberBase.1293" }
%"class.blink::MemberBase.1293" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type { i32 (...)** }
%"class.blink::Member.1296" = type { %"class.blink::MemberBase.1297" }
%"class.blink::MemberBase.1297" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1298" = type { %"class.blink::MemberBase.1299" }
%"class.blink::MemberBase.1299" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1302" }
%"class.blink::Member.1302" = type { %"class.blink::MemberBase.1303" }
%"class.blink::MemberBase.1303" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1304" = type { %"class.blink::MemberBase.1305" }
%"class.blink::MemberBase.1305" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1308" = type { %"class.blink::MemberBase.1309" }
%"class.blink::MemberBase.1309" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1312", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1314", %"class.WTF::HashSet.1319", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1323", %"class.std::__1::map.1330", %"class.std::__1::map.1341", %"class.std::__1::unique_ptr.1350", %"class.blink::Member.1298", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1357", %"class.mojo::InlinedStructPtr.399", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1312" = type { %"class.blink::MemberBase.1313" }
%"class.blink::MemberBase.1313" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"struct.WTF::KeyValuePair.1318"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1318" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1319" = type { %"class.WTF::HashTable.1320" }
%"class.WTF::HashTable.1320" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1323" = type { %"class.WTF::HashMap.1326" }
%"class.WTF::HashMap.1326" = type { %"class.WTF::HashTable.1327" }
%"class.WTF::HashTable.1327" = type <{ %"struct.WTF::KeyValuePair.1329"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1329" = type opaque
%"class.std::__1::map.1330" = type { %"class.std::__1::__tree.1331" }
%"class.std::__1::__tree.1331" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1332", %"class.std::__1::__compressed_pair.1336" }
%"class.std::__1::__compressed_pair.1332" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.1336" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::map.1341" = type { %"class.std::__1::__tree.1342" }
%"class.std::__1::__tree.1342" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1343", %"class.std::__1::__compressed_pair.1347" }
%"class.std::__1::__compressed_pair.1343" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.1347" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.1353", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.blink::Member.1357" = type { %"class.blink::MemberBase.1358" }
%"class.blink::MemberBase.1358" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.399" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1359" = type { %"class.blink::MemberBase.1360" }
%"class.blink::MemberBase.1360" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1361" = type { %"class.WTF::HashMap.1364" }
%"class.WTF::HashMap.1364" = type { %"class.WTF::HashTable.1365" }
%"class.WTF::HashTable.1365" = type <{ %"struct.WTF::KeyValuePair.1367"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1367" = type opaque
%"class.blink::HeapHashSet.1368" = type { %"class.WTF::HashSet.1371" }
%"class.WTF::HashSet.1371" = type { %"class.WTF::HashTable.1372" }
%"class.WTF::HashTable.1372" = type <{ %"class.blink::WeakMember.1374"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1374" = type { %"class.blink::MemberBase.1375" }
%"class.blink::MemberBase.1375" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.1378", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.1398", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1488", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1505", %"class.blink::ResourceResponse", %class.scoped_refptr.1507, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.1378" = type { %"class.absl::optional_internal::optional_data.1379" }
%"class.absl::optional_internal::optional_data.1379" = type { %"class.absl::optional_internal::optional_data_base.1380" }
%"class.absl::optional_internal::optional_data_base.1380" = type { %"class.absl::optional_internal::optional_data_dtor_base.1381" }
%"class.absl::optional_internal::optional_data_dtor_base.1381" = type { i8, %union.anon.1382 }
%union.anon.1382 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.1383", i8, %"class.absl::optional.1388", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.1383" = type { %"class.absl::optional_internal::optional_data.1384" }
%"class.absl::optional_internal::optional_data.1384" = type { %"class.absl::optional_internal::optional_data_base.1385" }
%"class.absl::optional_internal::optional_data_base.1385" = type { %"class.absl::optional_internal::optional_data_dtor_base.1386" }
%"class.absl::optional_internal::optional_data_dtor_base.1386" = type { i8, [7 x i8], %union.anon.1387 }
%union.anon.1387 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.1388" = type { %"class.absl::optional_internal::optional_data.1389" }
%"class.absl::optional_internal::optional_data.1389" = type { %"class.absl::optional_internal::optional_data_base.1390" }
%"class.absl::optional_internal::optional_data_base.1390" = type { %"class.absl::optional_internal::optional_data_dtor_base.1391" }
%"class.absl::optional_internal::optional_data_dtor_base.1391" = type { i8, %union.anon.1392 }
%union.anon.1392 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.1393", %"class.WTF::Vector.639" }
%"class.WTF::Vector.1393" = type { %"class.WTF::VectorBuffer.1394" }
%"class.WTF::VectorBuffer.1394" = type { %"class.WTF::VectorBufferBase.1395" }
%"class.WTF::VectorBufferBase.1395" = type { i32*, i32, i32 }
%"class.WTF::Vector.1398" = type { %"class.WTF::VectorBuffer.1399" }
%"class.WTF::VectorBuffer.1399" = type { %"class.WTF::VectorBufferBase.1400" }
%"class.WTF::VectorBufferBase.1400" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1484" }
%"class.WTF::HashMap.1484" = type { %"class.WTF::HashTable.1485" }
%"class.WTF::HashTable.1485" = type <{ %"struct.WTF::KeyValuePair.1487"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1487" = type <{ %"class.blink::WeakMember.2234", i32, [4 x i8] }>
%"class.blink::WeakMember.2234" = type { %"class.blink::MemberBase.2235" }
%"class.blink::MemberBase.2235" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2119", [7 x i8], %"class.blink::Member.1543", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.2119" = type { i8 }
%"class.blink::Member.1543" = type { %"class.blink::MemberBase.1375" }
%"class.blink::HeapHashSet.1488" = type { %"class.WTF::HashSet.1491" }
%"class.WTF::HashSet.1491" = type { %"class.WTF::HashTable.1492" }
%"class.WTF::HashTable.1492" = type <{ %"class.blink::WeakMember.1494"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1494" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.1495", %"class.WTF::String", %"class.WTF::HashSet.1496", i8, i8, %class.scoped_refptr.867, %class.scoped_refptr.1501, %class.scoped_refptr.1503 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.536, %class.scoped_refptr.536, %class.scoped_refptr.536, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.1406, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1419", %"class.absl::optional.1424", %"class.absl::optional.1434", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.227", %"class.absl::optional.1434", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1434", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.227", %"class.absl::optional.1439", i8, %class.scoped_refptr.1445 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.absl::optional.1419" = type { %"class.absl::optional_internal::optional_data.1420" }
%"class.absl::optional_internal::optional_data.1420" = type { %"class.absl::optional_internal::optional_data_base.1421" }
%"class.absl::optional_internal::optional_data_base.1421" = type { %"class.absl::optional_internal::optional_data_dtor_base.1422" }
%"class.absl::optional_internal::optional_data_dtor_base.1422" = type { i8, %union.anon.1423 }
%union.anon.1423 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1424" = type { %"class.absl::optional_internal::optional_data.1425" }
%"class.absl::optional_internal::optional_data.1425" = type { %"class.absl::optional_internal::optional_data_base.1426" }
%"class.absl::optional_internal::optional_data_base.1426" = type { %"class.absl::optional_internal::optional_data_dtor_base.1427" }
%"class.absl::optional_internal::optional_data_dtor_base.1427" = type { i8, %union.anon.1428 }
%union.anon.1428 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1429", %"class.WTF::Vector.639", %"class.WTF::String" }
%"class.absl::optional.1434" = type { %"class.absl::optional_internal::optional_data.1435" }
%"class.absl::optional_internal::optional_data.1435" = type { %"class.absl::optional_internal::optional_data_base.1436" }
%"class.absl::optional_internal::optional_data_base.1436" = type { %"class.absl::optional_internal::optional_data_dtor_base.1437" }
%"class.absl::optional_internal::optional_data_dtor_base.1437" = type { i8, %union.anon.1438 }
%"class.absl::optional.1439" = type { %"class.absl::optional_internal::optional_data.1440" }
%"class.absl::optional_internal::optional_data.1440" = type { %"class.absl::optional_internal::optional_data_base.1441" }
%"class.absl::optional_internal::optional_data_base.1441" = type { %"class.absl::optional_internal::optional_data_dtor_base.1442" }
%"class.absl::optional_internal::optional_data_dtor_base.1442" = type { i8, %union.anon.1443 }
%union.anon.1443 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1444" }
%"class.blink::Member.1505" = type { %"class.blink::MemberBase.1506" }
%"class.blink::MemberBase.1506" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1521" }
%"class.std::__1::__tree.1521" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1522", %"class.std::__1::__compressed_pair.1526" }
%"class.std::__1::__compressed_pair.1522" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"class.std::__1::__compressed_pair.1526" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.blink::HeapHashMap.1530" = type { %"class.WTF::HashMap.1533" }
%"class.WTF::HashMap.1533" = type { %"class.WTF::HashTable.1534" }
%"class.WTF::HashTable.1534" = type <{ %"struct.WTF::KeyValuePair.1536"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1536" = type opaque
%"class.blink::HeapVector.1537" = type { %"class.WTF::Vector.1540" }
%"class.WTF::Vector.1540" = type { %"class.WTF::VectorBuffer.1541" }
%"class.WTF::VectorBuffer.1541" = type { %"class.WTF::VectorBufferBase.1542" }
%"class.WTF::VectorBufferBase.1542" = type { %"class.blink::Member.1543"*, i32, i32 }
%"class.blink::HeapTaskRunnerTimer.1547" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1548", { i64, i64 } }
%"class.blink::WeakMember.1548" = type { %"class.blink::MemberBase.847" }
%"class.blink::HeapHashMap.1549" = type { %"class.WTF::HashMap.1552" }
%"class.WTF::HashMap.1552" = type { %"class.WTF::HashTable.1553" }
%"class.WTF::HashTable.1553" = type <{ %"struct.WTF::KeyValuePair.1555"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1555" = type opaque
%"class.WTF::Vector.1556" = type { %"class.WTF::VectorBuffer.1557" }
%"class.WTF::VectorBuffer.1557" = type { %"class.WTF::VectorBufferBase.1558" }
%"class.WTF::VectorBufferBase.1558" = type { %class.scoped_refptr.1559*, i32, i32 }
%"class.blink::HeapHashSet.1562" = type { %"class.WTF::HashSet.1565" }
%"class.WTF::HashSet.1565" = type { %"class.WTF::HashTable.1566" }
%"class.WTF::HashTable.1566" = type <{ %"class.blink::Member.1505"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1568" = type { %"class.std::__1::__compressed_pair.1569" }
%"class.std::__1::__compressed_pair.1569" = type { %"struct.std::__1::__compressed_pair_elem.1570" }
%"struct.std::__1::__compressed_pair_elem.1570" = type { %"class.WTF::HashSet.277"* }
%"class.base::WeakPtr.1353" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::HeapMojoRemote.1574" = type { %"class.blink::Member.1575" }
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1577" = type { %"class.blink::MemberBase.1578" }
%"class.blink::MemberBase.1578" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1579" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.850" = type { %"class.blink::MemberBase.851" }
%"class.blink::MemberBase.851" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.852" = type { %"class.blink::MemberBase.853" }
%"class.blink::MemberBase.853" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.854" = type { %"class.std::__1::__compressed_pair.855" }
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.860" = type { %"class.blink::MemberBase.861" }
%"class.blink::MemberBase.861" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.862" = type { %"class.blink::MemberBase.863" }
%"class.blink::MemberBase.863" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.455", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.457, %"class.WTF::Vector.458", %"class.WTF::Vector.458", %"class.blink::Member.285", %"class.blink::Member.463", %"class.blink::HeapHashSet.467", %"class.blink::Member.412", %"class.WTF::HashSet.474", %"class.WTF::TextPosition", %"class.blink::Member.478", %"class.blink::HeapVector.480", %"class.blink::Member.487" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.457 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.458" = type { %"class.WTF::VectorBuffer.459" }
%"class.WTF::VectorBuffer.459" = type { %"class.WTF::VectorBufferBase.460" }
%"class.WTF::VectorBufferBase.460" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.465" }
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.467" = type { %"class.WTF::HashSet.470" }
%"class.WTF::HashSet.470" = type { %"class.WTF::HashTable.471" }
%"class.WTF::HashTable.471" = type <{ %"class.blink::WeakMember.473"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.473" = type { %"class.blink::MemberBase.288" }
%"class.WTF::HashSet.474" = type { %"class.WTF::HashTable.475" }
%"class.WTF::HashTable.475" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.480" = type { %"class.WTF::Vector.483" }
%"class.WTF::Vector.483" = type { %"class.WTF::VectorBuffer.484" }
%"class.WTF::VectorBuffer.484" = type { %"class.WTF::VectorBufferBase.485" }
%"class.WTF::VectorBufferBase.485" = type { %"class.blink::Member.463"*, i32, i32 }
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.864" = type { %"class.WTF::VectorBuffer.865" }
%"class.WTF::VectorBuffer.865" = type { %"class.WTF::VectorBufferBase.866" }
%"class.WTF::VectorBufferBase.866" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.867 }
%"class.blink::Member.822" = type { %"class.blink::MemberBase.823" }
%"class.blink::MemberBase.823" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.412", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.285", %"class.blink::Member.285", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1067" }
%"class.blink::HeapHashMap.1067" = type { %"class.WTF::HashMap.1070" }
%"class.WTF::HashMap.1070" = type { %"class.WTF::HashTable.1071" }
%"class.WTF::HashTable.1071" = type <{ %"struct.WTF::KeyValuePair.1073"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1073" = type opaque
%"class.blink::Member.1074" = type { %"class.blink::MemberBase.1075" }
%"class.blink::MemberBase.1075" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1076" = type { %"class.WTF::HashSet.1079" }
%"class.WTF::HashSet.1079" = type { %"class.WTF::HashTable.1080" }
%"class.WTF::HashTable.1080" = type <{ %"class.blink::WeakMember.1082"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1082" = type opaque
%"class.blink::HeapHashSet.1083" = type { %"class.WTF::HashSet.1086" }
%"class.WTF::HashSet.1086" = type { %"class.WTF::HashTable.1087" }
%"class.WTF::HashTable.1087" = type <{ %"class.blink::WeakMember.1089"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1089" = type opaque
%"class.blink::Member.1090" = type { %"class.blink::MemberBase.1091" }
%"class.blink::MemberBase.1091" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1092" = type { %"class.blink::MemberBase.1093" }
%"class.blink::MemberBase.1093" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1094" = type { %"class.blink::MemberBase.1095" }
%"class.blink::MemberBase.1095" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.287", %"class.blink::HeapVector.447" }
%"class.blink::Member.1096" = type { %"class.blink::MemberBase.1097" }
%"class.blink::MemberBase.1097" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1098" = type { %"class.blink::MemberBase.1099" }
%"class.blink::MemberBase.1099" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1100" = type { %"class.WTF::HashMap.1103" }
%"class.WTF::HashMap.1103" = type { %"class.WTF::HashTable.1104" }
%"class.WTF::HashTable.1104" = type <{ %"struct.WTF::KeyValuePair.1106"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1106" = type opaque
%"class.WTF::Vector.1107" = type { %"class.WTF::VectorBuffer.1108" }
%"class.WTF::VectorBuffer.1108" = type { %"class.WTF::VectorBufferBase.1109" }
%"class.WTF::VectorBufferBase.1109" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1116" = type { %"class.blink::MemberBase.1117" }
%"class.blink::MemberBase.1117" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1118" = type { %"class.WTF::Vector.1121" }
%"class.WTF::Vector.1121" = type { %"class.WTF::VectorBuffer.1122" }
%"class.WTF::VectorBuffer.1122" = type { %"class.WTF::VectorBufferBase.1123" }
%"class.WTF::VectorBufferBase.1123" = type { %"class.blink::Member.1124"*, i32, i32 }
%"class.blink::Member.1124" = type opaque
%"class.std::__1::unique_ptr.1126" = type { %"class.std::__1::__compressed_pair.1127" }
%"class.std::__1::__compressed_pair.1127" = type { %"struct.std::__1::__compressed_pair_elem.1128" }
%"struct.std::__1::__compressed_pair_elem.1128" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1132" = type { %"class.WTF::HashSet.1135" }
%"class.WTF::HashSet.1135" = type { %"class.WTF::HashTable.1136" }
%"class.WTF::HashTable.1136" = type <{ %"class.blink::WeakMember.1138"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1138" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1139", i32, [4 x i8] }>
%"class.WTF::Vector.1139" = type { %"class.WTF::VectorBuffer.1140" }
%"class.WTF::VectorBuffer.1140" = type { %"class.WTF::VectorBufferBase.1141" }
%"class.WTF::VectorBufferBase.1141" = type { %"struct.std::__1::pair.1142"*, i32, i32 }
%"struct.std::__1::pair.1142" = type opaque
%"class.blink::Member.1145" = type { %"class.blink::MemberBase.1146" }
%"class.blink::MemberBase.1146" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1147" = type { %"class.WTF::VectorBuffer.1148" }
%"class.WTF::VectorBuffer.1148" = type { %"class.WTF::VectorBufferBase.1149" }
%"class.WTF::VectorBufferBase.1149" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1152" = type { %"class.std::__1::__compressed_pair.1153" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.429" = type { %"class.WTF::Vector.432" }
%"class.WTF::Vector.432" = type { %"class.WTF::VectorBuffer.433" }
%"class.WTF::VectorBuffer.433" = type { %"class.WTF::VectorBufferBase.434" }
%"class.WTF::VectorBufferBase.434" = type { %"class.blink::Member.283"*, i32, i32 }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.412" }
%"class.blink::Member.1166" = type { %"class.blink::MemberBase.1167" }
%"class.blink::MemberBase.1167" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1168" = type { %"class.blink::MemberBase.1169" }
%"class.blink::MemberBase.1169" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1174" = type { %"class.blink::MemberBase.1175" }
%"class.blink::MemberBase.1175" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1176" = type { %"class.WTF::HashTable.1177" }
%"class.WTF::HashTable.1177" = type <{ %"struct.WTF::KeyValuePair.1180"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1180" = type opaque
%"class.blink::Member.1181" = type { %"class.blink::MemberBase.1182" }
%"class.blink::MemberBase.1182" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1183" = type { %"class.blink::MemberBase.1184" }
%"class.blink::MemberBase.1184" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1185" = type { %"class.blink::MemberBase.1186" }
%"class.blink::MemberBase.1186" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1187" = type { %"class.blink::MemberBase.1188" }
%"class.blink::MemberBase.1188" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1066", { i64, i64 } }
%"class.blink::WeakMember.1066" = type { %"class.blink::MemberBase.413" }
%"class.blink::HeapHashSet.1189" = type { %"class.WTF::HashSet.1192" }
%"class.WTF::HashSet.1192" = type { %"class.WTF::HashTable.1193" }
%"class.WTF::HashTable.1193" = type <{ %"class.blink::Member.1195"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1195" = type opaque
%"class.blink::Member.1196" = type { %"class.blink::MemberBase.1197" }
%"class.blink::MemberBase.1197" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1198" = type { %"class.blink::MemberBase.1199" }
%"class.blink::MemberBase.1199" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1202" = type { %"class.blink::MemberBase.1203" }
%"class.blink::MemberBase.1203" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1204" = type { %"class.blink::MemberBase.1205" }
%"class.blink::MemberBase.1205" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1206" = type { %"class.std::__1::__compressed_pair.1207" }
%"class.std::__1::__compressed_pair.1207" = type { %"struct.std::__1::__compressed_pair_elem.1208" }
%"struct.std::__1::__compressed_pair_elem.1208" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1212" = type { %"class.std::__1::__compressed_pair.1213" }
%"class.std::__1::__compressed_pair.1213" = type { %"struct.std::__1::__compressed_pair_elem.1214" }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1218" = type { %"class.blink::MemberBase.1219" }
%"class.blink::MemberBase.1219" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1220" = type { %"class.blink::MemberBase.1221" }
%"class.blink::MemberBase.1221" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1222" = type { %"class.blink::MemberBase.1223" }
%"class.blink::MemberBase.1223" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1224" = type { %"class.blink::MemberBase.1225" }
%"class.blink::MemberBase.1225" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.833" = type { %"class.WTF::VectorBuffer.834" }
%"class.WTF::VectorBuffer.834" = type { %"class.WTF::VectorBufferBase.835" }
%"class.WTF::VectorBufferBase.835" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1226" = type { %"class.WTF::HashMap.1229" }
%"class.WTF::HashMap.1229" = type { %"class.WTF::HashTable.1230" }
%"class.WTF::HashTable.1230" = type <{ %"struct.WTF::KeyValuePair.1232"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1232" = type opaque
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1235" = type { %"class.std::__1::__compressed_pair.1236" }
%"class.std::__1::__compressed_pair.1236" = type { %"struct.std::__1::__compressed_pair_elem.1237" }
%"struct.std::__1::__compressed_pair_elem.1237" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1241" = type { %"class.blink::MemberBase.1242" }
%"class.blink::MemberBase.1242" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1243" = type { %"class.blink::MemberBase.1244" }
%"class.blink::MemberBase.1244" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1245" = type { %"class.WTF::HashMap.1248" }
%"class.WTF::HashMap.1248" = type { %"class.WTF::HashTable.1249" }
%"class.WTF::HashTable.1249" = type <{ %"struct.WTF::KeyValuePair.1251"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1251" = type opaque
%"class.blink::HeapObserverSet.1252" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1253" }
%"class.blink::HeapHashSet.1253" = type { %"class.WTF::HashSet.1256" }
%"class.WTF::HashSet.1256" = type { %"class.WTF::HashTable.1257" }
%"class.WTF::HashTable.1257" = type <{ %"class.blink::WeakMember.1259"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1259" = type opaque
%"class.blink::Member.1260" = type { %"class.blink::MemberBase.1261" }
%"class.blink::MemberBase.1261" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1262" = type { %"class.blink::MemberBase.1263" }
%"class.blink::MemberBase.1263" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.412", %"class.blink::HeapHashSet.1269", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1276", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1269" = type { %"class.WTF::HashSet.1272" }
%"class.WTF::HashSet.1272" = type { %"class.WTF::HashTable.1273" }
%"class.WTF::HashTable.1273" = type <{ %"class.blink::Member.1275"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1275" = type opaque
%"class.blink::HeapTaskRunnerTimer.1276" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1277", { i64, i64 } }
%"class.blink::WeakMember.1277" = type { %"class.blink::MemberBase.1263" }
%"class.blink::WeakMember.1264" = type { %"class.blink::MemberBase.286" }
%"class.blink::MemberBase.286" = type { %"class.blink::Node"* }
%"class.blink::Member.1265" = type { %"class.blink::MemberBase.1266" }
%"class.blink::MemberBase.1266" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.418" }
%"class.blink::HeapHashMap.418" = type { %"class.WTF::HashMap.421" }
%"class.WTF::HashMap.421" = type { %"class.WTF::HashTable.422" }
%"class.WTF::HashTable.422" = type <{ %"struct.WTF::KeyValuePair.424"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.424" = type { %"class.WTF::AtomicString", %"class.blink::Member.425" }
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.283", i32, %"class.blink::HeapVector.429" }
%"class.blink::Member.436" = type { %"class.blink::MemberBase.437" }
%"class.blink::MemberBase.437" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.440" = type { %"class.blink::MemberBase.441" }
%"class.blink::MemberBase.441" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.442" }
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::HeapHashMap.444"* }
%"class.blink::HeapHashMap.444" = type opaque
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.447" = type { %"class.WTF::Vector.450" }
%"class.WTF::Vector.450" = type { %"class.WTF::VectorBuffer.451" }
%"class.WTF::VectorBuffer.451" = type { %"class.WTF::VectorBufferBase.452" }
%"class.WTF::VectorBufferBase.452" = type { %"class.blink::Member.453"*, i32, i32 }
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.285" = type { %"class.blink::MemberBase.286" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.293 }
%class.scoped_refptr.293 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.294" }
%"class.base::RefCounted.294" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.295" = type { %"class.blink::MemberBase.296" }
%"class.blink::MemberBase.296" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.299", %"class.blink::Member.301", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.299" = type { %"class.WTF::SingleThreadedBitField.300" }
%"class.WTF::SingleThreadedBitField.300" = type { i32 }
%"class.blink::Member.301" = type { %"class.blink::MemberBase.302" }
%"class.blink::MemberBase.302" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.303 }
%class.scoped_refptr.303 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.304", %"class.WTF::AtomicString", %"class.WTF::Vector.306" }
%"class.WTF::RefCounted.304" = type { %"class.base::RefCounted.305" }
%"class.base::RefCounted.305" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.306" = type { %"class.WTF::VectorBuffer.307" }
%"class.WTF::VectorBuffer.307" = type { %"class.WTF::VectorBufferBase.308", [32 x i8] }
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.313" = type { %"class.blink::MemberBase.314" }
%"class.blink::MemberBase.314" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.315" = type { %"class.blink::MemberBase.316" }
%"class.blink::MemberBase.316" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.317" = type { %"class.blink::MemberBase.318" }
%"class.blink::MemberBase.318" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.319" = type { %"class.blink::MemberBase.320" }
%"class.blink::MemberBase.320" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.321 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.324" = type { %"class.blink::MemberBase.325" }
%"class.blink::MemberBase.325" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.330" = type { %"class.blink::MemberBase.331" }
%"class.blink::MemberBase.331" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.332" = type { %"class.blink::MemberBase.333" }
%"class.blink::MemberBase.333" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.334" = type { %"class.blink::MemberBase.335" }
%"class.blink::MemberBase.335" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.336" }
%"class.blink::Member.336" = type { %"class.blink::MemberBase.337" }
%"class.blink::MemberBase.337" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2188" }
%"class.mojo::Remote.2188" = type { %"class.mojo::internal::InterfacePtrState.2189" }
%"class.mojo::internal::InterfacePtrState.2189" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2190" }
%"class.std::__1::unique_ptr.2190" = type { %"class.std::__1::__compressed_pair.2191" }
%"class.std::__1::__compressed_pair.2191" = type { %"struct.std::__1::__compressed_pair_elem.2192" }
%"struct.std::__1::__compressed_pair_elem.2192" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.341, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.341 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.342", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.342" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.350, i8, [7 x i8] }>
%class.scoped_refptr.350 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.351", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.351" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.352" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"class.base::RepeatingCallback.359" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.227" = type { %"class.absl::optional_internal::optional_data.228" }
%"class.absl::optional_internal::optional_data.228" = type { %"class.absl::optional_internal::optional_data_base.229" }
%"class.absl::optional_internal::optional_data_base.229" = type { %"class.absl::optional_internal::optional_data_dtor_base.230" }
%"class.absl::optional_internal::optional_data_dtor_base.230" = type { i8, %union.anon.231 }
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.372" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2198" }
%"class.mojo::AssociatedRemote.2198" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2199" }
%"class.mojo::internal::AssociatedInterfacePtrState.2199" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2200" }
%"class.std::__1::unique_ptr.2200" = type { %"class.std::__1::__compressed_pair.2201" }
%"class.std::__1::__compressed_pair.2201" = type { %"struct.std::__1::__compressed_pair_elem.2202" }
%"struct.std::__1::__compressed_pair_elem.2202" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.374" = type { %"class.blink::Member.375" }
%"class.blink::Member.375" = type { %"class.blink::MemberBase.376" }
%"class.blink::MemberBase.376" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2208" }
%"class.mojo::AssociatedRemote.2208" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2209" }
%"class.mojo::internal::AssociatedInterfacePtrState.2209" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2210" }
%"class.std::__1::unique_ptr.2210" = type { %"class.std::__1::__compressed_pair.2211" }
%"class.std::__1::__compressed_pair.2211" = type { %"struct.std::__1::__compressed_pair_elem.2212" }
%"struct.std::__1::__compressed_pair_elem.2212" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.377" }
%"class.blink::Member.377" = type { %"class.blink::MemberBase.378" }
%"class.blink::MemberBase.378" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2218", %"class.blink::Member.212", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2218" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2219" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.150" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2219" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.379" = type { %"class.blink::Member.380" }
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2222", %"class.blink::Member.212", %"class.mojo::AssociatedReceiver.2223" }
%"class.blink::ThreadState::PrefinalizerRegistration.2222" = type { i8 }
%"class.mojo::AssociatedReceiver.2223" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2224" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2224" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.382" }
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2227", %"class.blink::Member.212", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2227" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.27, %"class.std::__1::unique_ptr.150", %"class.base::WeakPtrFactory.2228" }
%"class.base::WeakPtrFactory.2228" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.384" = type { %"class.blink::Member.385" }
%"class.blink::Member.385" = type { %"class.blink::MemberBase.386" }
%"class.blink::MemberBase.386" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2231", %"class.blink::Member.212", %"class.mojo::AssociatedReceiver.2232" }
%"class.blink::ThreadState::PrefinalizerRegistration.2231" = type { i8 }
%"class.mojo::AssociatedReceiver.2232" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2233" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2233" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.387" = type { %"class.blink::MemberBase.388" }
%"class.blink::MemberBase.388" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::HeapHashMap.395"* }
%"class.blink::HeapHashMap.395" = type opaque
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.396" }
%"class.std::__1::unique_ptr.396" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr.399" }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.blink::Member.403" = type { %"class.blink::MemberBase.404" }
%"class.blink::MemberBase.404" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.405" = type { %"class.absl::optional_internal::optional_data.406" }
%"class.absl::optional_internal::optional_data.406" = type { %"class.absl::optional_internal::optional_data_base.407" }
%"class.absl::optional_internal::optional_data_base.407" = type { %"class.absl::optional_internal::optional_data_dtor_base.408" }
%"class.absl::optional_internal::optional_data_dtor_base.408" = type { i8, %union.anon.409 }
%union.anon.409 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::FetchParameters" = type <{ %"class.blink::ResourceRequest", %"class.blink::TextResourceDecoderOptions", %"struct.blink::ResourceLoaderOptions", i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.blink::LocalFrameClient" = type { %"class.blink::FrameClient" }
%"class.blink::RawResource" = type <{ %"class.blink::Resource", %class.scoped_refptr.2034, %"class.blink::Member.2117", i8, [7 x i8] }>
%"class.blink::Member.2117" = type { %"class.blink::MemberBase.2118" }
%"class.blink::MemberBase.2118" = type { %"class.blink::BufferingBytesConsumer"* }
%"class.blink::BufferingBytesConsumer" = type opaque
%"class.blink::RawResourceClient" = type { %"class.blink::ResourceClient.base", [7 x i8] }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.2119", [7 x i8], %"class.blink::Member.1543", i8 }>
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.2122, %"class.blink::Member.2123", %"class.blink::SelfKeepAlive", %"class.util::TokenType.2127" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.2122 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2123" = type { %"class.blink::MemberBase.2124" }
%"class.blink::MemberBase.2124" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2125" }
%"class.blink::Persistent.2125" = type { %"class.blink::PersistentBase.2126" }
%"class.blink::PersistentBase.2126" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.2127" = type { %"class.base::StrongAlias.2128" }
%"class.base::StrongAlias.2128" = type { %"class.base::UnguessableToken" }
%"class.blink::(anonymous namespace)::BeaconString" = type { %"class.blink::(anonymous namespace)::Beacon", %"class.WTF::String" }
%"class.blink::(anonymous namespace)::Beacon" = type { i32 (...)** }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.2129" }
%"class.blink::Member.2129" = type { %"class.blink::MemberBase.2130" }
%"class.blink::MemberBase.2130" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::(anonymous namespace)::BeaconDOMArrayBufferView" = type { %"class.blink::(anonymous namespace)::Beacon", %"class.blink::DOMArrayBufferView"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::(anonymous namespace)::BeaconDOMArrayBuffer" = type { %"class.blink::(anonymous namespace)::Beacon", %"class.blink::DOMArrayBuffer"* }
%"class.blink::URLSearchParams" = type { %"class.blink::ScriptWrappable", %"class.blink::PairIterable", %"class.WTF::Vector.2131", %"class.blink::WeakMember.2137" }
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.WTF::Vector.2131" = type { %"class.WTF::VectorBuffer.2132" }
%"class.WTF::VectorBuffer.2132" = type { %"class.WTF::VectorBufferBase.2133" }
%"class.WTF::VectorBufferBase.2133" = type { %"struct.std::__1::pair.2134"*, i32, i32 }
%"struct.std::__1::pair.2134" = type opaque
%"class.blink::WeakMember.2137" = type { %"class.blink::MemberBase.2138" }
%"class.blink::MemberBase.2138" = type { %"class.blink::DOMURL"* }
%"class.blink::DOMURL" = type opaque
%"class.blink::(anonymous namespace)::BeaconURLSearchParams" = type { %"class.blink::(anonymous namespace)::Beacon", %"class.blink::URLSearchParams"* }
%"class.blink::FormData" = type <{ %"class.blink::ScriptWrappable", %"class.blink::PairIterable.2139", %"class.WTF::TextEncoding", %"class.blink::HeapVector.2141", i8, [7 x i8] }>
%"class.blink::PairIterable.2139" = type { %"class.blink::Iterable.2140" }
%"class.blink::Iterable.2140" = type { i32 (...)** }
%"class.blink::HeapVector.2141" = type { %"class.WTF::Vector.2144" }
%"class.WTF::Vector.2144" = type { %"class.WTF::VectorBuffer.2145" }
%"class.WTF::VectorBuffer.2145" = type { %"class.WTF::VectorBufferBase.2146" }
%"class.WTF::VectorBufferBase.2146" = type { %"class.blink::Member.2147"*, i32, i32 }
%"class.blink::Member.2147" = type opaque
%"class.WTF::StringAppend" = type { %"class.WTF::AtomicString", i8* }
%"class.blink::(anonymous namespace)::BeaconFormData" = type { %"class.blink::(anonymous namespace)::Beacon", %"class.blink::FormData"*, %class.scoped_refptr.2028, %"class.WTF::AtomicString" }
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.2034 }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%"class.blink::ParsedContentType" = type { %"class.WTF::String", %"class.absl::optional.2270" }
%"class.absl::optional.2270" = type { %"class.absl::optional_internal::optional_data.2271" }
%"class.absl::optional_internal::optional_data.2271" = type { %"class.absl::optional_internal::optional_data_base.2272" }
%"class.absl::optional_internal::optional_data_base.2272" = type { %"class.absl::optional_internal::optional_data_dtor_base.2273" }
%"class.absl::optional_internal::optional_data_dtor_base.2273" = type { i8, %union.anon.2274 }
%union.anon.2274 = type { %"class.blink::ParsedContentHeaderFieldParameters" }
%"class.blink::ParsedContentHeaderFieldParameters" = type { %"class.WTF::Vector.2275" }
%"class.WTF::Vector.2275" = type { %"class.WTF::VectorBuffer.2276" }
%"class.WTF::VectorBuffer.2276" = type { %"class.WTF::VectorBufferBase.2277" }
%"class.WTF::VectorBufferBase.2277" = type { %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"*, i32, i32 }
%"struct.blink::ParsedContentHeaderFieldParameters::NameValue" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::(anonymous namespace)::BeaconBlob" = type { %"class.blink::(anonymous namespace)::Beacon", %"class.blink::Blob"*, %"class.WTF::AtomicString" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.2268" }
%"class.WTF::StringTypeAdapter.2268" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.2269" = type <{ i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::File" = type { %"class.blink::Blob", i8, i32, %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.absl::optional.783", %"class.absl::optional.1465", %"class.WTF::String" }

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNK3WTF12StringAppendINS_12AtomicStringEPKcEcvNS_6StringEEv = comdat any

$_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv = comdat any

$_ZN5blink17ParsedContentTypeD2Ev = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

@_ZN5blink10http_names5kPOSTE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [10 x i8] c"text/ping\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"PING\00", align 1
@_ZN5blink10http_names13kCacheControlE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.2 = private unnamed_addr constant [10 x i8] c"max-age=0\00", align 1
@_ZN5blink10http_names7kPingToE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.3 = private unnamed_addr constant [5 x i8] c"http\00", align 1
@_ZN5blink10http_names9kPingFromE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink26fetch_initiator_type_names5kPingE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.4 = private unnamed_addr constant [23 x i8] c"application/csp-report\00", align 1
@_ZN5blink26fetch_initiator_type_names16kViolationreportE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10http_names12kContentTypeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZTVN5blink12_GLOBAL__N_112BeaconStringE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::BeaconString"*, %"class.blink::ResourceRequest"*)* @_ZNK5blink12_GLOBAL__N_112BeaconString9SerializeERNS_15ResourceRequestE to i8*), i8* bitcast (i64 (%"class.blink::(anonymous namespace)::BeaconString"*)* @_ZNK5blink12_GLOBAL__N_112BeaconString4sizeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::BeaconString"*)* @_ZNK5blink12_GLOBAL__N_112BeaconString14GetContentTypeEv to i8*)] }, align 8
@.str.5 = private unnamed_addr constant [25 x i8] c"text/plain;charset=UTF-8\00", align 1
@__const._ZN5blink12_GLOBAL__N_116SendBeaconCommonERKNS_11ScriptStateEPNS_10LocalFrameERKNS_4KURLERKNS0_6BeaconE.params = private unnamed_addr constant <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.535 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.536, %class.scoped_refptr.536, %class.scoped_refptr.536, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1406, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1429", %"class.WTF::Vector.639", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1438 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.159 } } } }, { { { { i8, [7 x i8], %union.anon.159 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.231 } } } }, { { { { i8, [7 x i8], %union.anon.1438 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1438 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.231 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1444" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1445 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias.1495", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1496", i8, i8, [6 x i8], %class.scoped_refptr.867, %class.scoped_refptr.1501, %class.scoped_refptr.1503 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }> <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.535 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.536, %class.scoped_refptr.536, %class.scoped_refptr.536, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1406, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1429", %"class.WTF::Vector.639", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1438 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.159 } } } }, { { { { i8, [7 x i8], %union.anon.159 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.231 } } } }, { { { { i8, [7 x i8], %union.anon.1438 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1438 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.231 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1444" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1445 }, %"class.blink::ResourceRequestBody" } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.535 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.536, %class.scoped_refptr.536, %class.scoped_refptr.536, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1406, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1429", %"class.WTF::Vector.639", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1438 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.159 } } } }, { { { { i8, [7 x i8], %union.anon.159 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.231 } } } }, { { { { i8, [7 x i8], %union.anon.1438 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1438 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.231 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1444" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1445 } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr.268" { %"class.std::__1::__compressed_pair.269" { %"struct.std::__1::__compressed_pair_elem.270" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, %"class.base::TimeDelta" { i64 -6148914691236517206 }, <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.535 } } } } } }, i8, [7 x i8] }> <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.535 } } } } } } { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.535 } } } } } { %"class.url::SchemeHostPort" <{ %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.35" { %"struct.std::__1::__compressed_pair_elem.36" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.35" { %"struct.std::__1::__compressed_pair_elem.36" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, { { { { i8, [7 x i8], %union.anon.535 } } } } { { { { i8, [7 x i8], %union.anon.535 } } } { { { i8, [7 x i8], %union.anon.535 } } { { i8, [7 x i8], %union.anon.535 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.535 { %"class.url::Origin::Nonce" { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %class.scoped_refptr.536 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %class.scoped_refptr.536 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %class.scoped_refptr.536 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.blink::HTTPHeaderMap" { %"class.WTF::HashMap.1401" { %"class.WTF::HashTable.1402" <{ %"struct.WTF::KeyValuePair.1405"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair.1405"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } }, i16 -21846, [2 x i8] c"\AA\AA", i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, %class.scoped_refptr.1406 { %"class.blink::WebURLRequestExtraData"* inttoptr (i64 -6148914691236517206 to %"class.blink::WebURLRequestExtraData"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" } } } } } } } { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" } } } } } } { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" } } } } } { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" } } } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" } } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr.268" { %"class.std::__1::__compressed_pair.269" { %"struct.std::__1::__compressed_pair_elem.270" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr.268" { %"class.std::__1::__compressed_pair.269" { %"struct.std::__1::__compressed_pair_elem.270" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1429", %"class.WTF::Vector.639", %"class.WTF::String" } } } } } } { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1429", %"class.WTF::Vector.639", %"class.WTF::String" } } } } } { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1429", %"class.WTF::Vector.639", %"class.WTF::String" } } } } { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1429", %"class.WTF::Vector.639", %"class.WTF::String" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1429", %"class.WTF::Vector.639", %"class.WTF::String" } } { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1429", %"class.WTF::Vector.639", %"class.WTF::String" } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.WTF::Vector.1429" { %"class.WTF::VectorBuffer.1430" { %"class.WTF::VectorBufferBase.1431" { %class.scoped_refptr.536* inttoptr (i64 -6148914691236517206 to %class.scoped_refptr.536*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::Vector.639" { %"class.WTF::VectorBuffer.640" { %"class.WTF::VectorBufferBase.641" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } } }, { { { { i8, [7 x i8], %union.anon.1438 } } } } { { { { i8, [7 x i8], %union.anon.1438 } } } { { { i8, [7 x i8], %union.anon.1438 } } { { i8, [7 x i8], %union.anon.1438 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1438 { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.159 } } } }, { { { { i8, [7 x i8], %union.anon.159 } } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.159 } } } } { { { { i8, [7 x i8], %union.anon.159 } } } { { { i8, [7 x i8], %union.anon.159 } } { { i8, [7 x i8], %union.anon.159 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.159 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } }, { { { { i8, [7 x i8], %union.anon.159 } } } } { { { { i8, [7 x i8], %union.anon.159 } } } { { { i8, [7 x i8], %union.anon.159 } } { { i8, [7 x i8], %union.anon.159 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.159 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } } }, i8 -86, i8 -86, i8 -86, i8 -86, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.231 } } } } { { { { i8, [7 x i8], %union.anon.231 } } } { { { i8, [7 x i8], %union.anon.231 } } { { i8, [7 x i8], %union.anon.231 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.231 { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { { { { i8, [7 x i8], %union.anon.1438 } } } } { { { { i8, [7 x i8], %union.anon.1438 } } } { { { i8, [7 x i8], %union.anon.1438 } } { { i8, [7 x i8], %union.anon.1438 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1438 { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { { { { i8, [7 x i8], %union.anon.1438 } } } } { { { { i8, [7 x i8], %union.anon.1438 } } } { { { i8, [7 x i8], %union.anon.1438 } } { { i8, [7 x i8], %union.anon.1438 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.1438 { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, i64 -6148914691236517206, %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, i64 -6148914691236517206, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [2 x i8] c"\AA\AA", { { { { i8, [7 x i8], %union.anon.231 } } } } { { { { i8, [7 x i8], %union.anon.231 } } } { { { i8, [7 x i8], %union.anon.231 } } { { i8, [7 x i8], %union.anon.231 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.231 { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1444" } } } } } } { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1444" } } } } } { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1444" } } } } { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1444" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1444" } } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1444" } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr.268" { %"class.std::__1::__compressed_pair.269" { %"struct.std::__1::__compressed_pair_elem.270" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, %"class.mojo::PendingRemote.1444" { %"struct.mojo::internal::PendingRemoteState" { %"class.mojo::ScopedHandleBase" { %"class.mojo::MessagePipeHandle" { %"class.mojo::Handle" { i32 -1431655766 } } }, i32 -1431655766 } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %class.scoped_refptr.1445 { %"class.base::RefCountedData.1446"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.1446"*) } }, %"class.blink::ResourceRequestBody" { %class.scoped_refptr.2028 { %"class.blink::EncodedFormData"* inttoptr (i64 -6148914691236517206 to %"class.blink::EncodedFormData"*) }, %"class.mojo::PendingRemote.2116" { %"struct.mojo::internal::PendingRemoteState" { %"class.mojo::ScopedHandleBase" { %"class.mojo::MessagePipeHandle" { %"class.mojo::Handle" { i32 -1431655766 } } }, i32 -1431655766 } } } }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, [3 x i8], [5 x i8] }> <{ i32 -1431655766, i32 -1431655766, %"class.WTF::TextEncoding" { i8* inttoptr (i64 -6148914691236517206 to i8*) }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr.268" { %"class.std::__1::__compressed_pair.269" { %"struct.std::__1::__compressed_pair_elem.270" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, [3 x i8] c"\AA\AA\AA", [5 x i8] c"\AA\AA\AA\AA\AA" }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias.1495", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1496", i8, i8, [6 x i8], %class.scoped_refptr.867, %class.scoped_refptr.1501, %class.scoped_refptr.1503 } { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" } { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.WTF::TextPosition" { %"class.WTF::OrdinalNumber" { i32 -1431655766 }, %"class.WTF::OrdinalNumber" { i32 -1431655766 } }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, i8 -86, %"class.base::StrongAlias.1495" { i8 -86 }, [5 x i8] c"\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::HashSet.1496" { %"class.WTF::HashTable.1497" <{ %"struct.std::__1::pair.1500"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair.1500"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %class.scoped_refptr.867 { %"class.blink::DOMWrapperWorld"* inttoptr (i64 -6148914691236517206 to %"class.blink::DOMWrapperWorld"*) }, %class.scoped_refptr.1501 { %"class.base::RefCountedData.1502"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.1502"*) }, %class.scoped_refptr.1503 { %"class.base::RefCountedData.1504"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.1504"*) } }, i32 -1431655766, i32 -1431655766, %"struct.blink::FetchParameters::ResourceWidth" <{ float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.blink::ClientHintsPreferences" { %"struct.blink::WebEnabledClientHints" { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, [5 x i8] c"\AA\AA\AA\AA\AA" }>, align 8
@_ZN5blink26fetch_initiator_type_names7kBeaconE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZTVN5blink12_GLOBAL__N_124BeaconDOMArrayBufferViewE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::BeaconDOMArrayBufferView"*, %"class.blink::ResourceRequest"*)* @_ZNK5blink12_GLOBAL__N_124BeaconDOMArrayBufferView9SerializeERNS_15ResourceRequestE to i8*), i8* bitcast (i64 (%"class.blink::(anonymous namespace)::BeaconDOMArrayBufferView"*)* @_ZNK5blink12_GLOBAL__N_124BeaconDOMArrayBufferView4sizeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::BeaconDOMArrayBufferView"*)* @_ZNK5blink12_GLOBAL__N_124BeaconDOMArrayBufferView14GetContentTypeEv to i8*)] }, align 8
@.str.6 = private unnamed_addr constant [60 x i8] c"../../third_party/blink/renderer/core/loader/ping_loader.cc\00", align 1
@.str.7 = private unnamed_addr constant [63 x i8] c"base::CheckedNumeric<wtf_size_t>(data->byteLength()).IsValid()\00", align 1
@.str.8 = private unnamed_addr constant [60 x i8] c"EncodedFormData::Create cannot deal with huge ArrayBuffers.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZTVN5blink12_GLOBAL__N_120BeaconDOMArrayBufferE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::BeaconDOMArrayBuffer"*, %"class.blink::ResourceRequest"*)* @_ZNK5blink12_GLOBAL__N_120BeaconDOMArrayBuffer9SerializeERNS_15ResourceRequestE to i8*), i8* bitcast (i64 (%"class.blink::(anonymous namespace)::BeaconDOMArrayBuffer"*)* @_ZNK5blink12_GLOBAL__N_120BeaconDOMArrayBuffer4sizeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::BeaconDOMArrayBuffer"*)* @_ZNK5blink12_GLOBAL__N_120BeaconDOMArrayBuffer14GetContentTypeEv to i8*)] }, align 8
@.str.10 = private unnamed_addr constant [63 x i8] c"base::CheckedNumeric<wtf_size_t>(data->ByteLength()).IsValid()\00", align 1
@_ZTVN5blink12_GLOBAL__N_121BeaconURLSearchParamsE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::BeaconURLSearchParams"*, %"class.blink::ResourceRequest"*)* @_ZNK5blink12_GLOBAL__N_121BeaconURLSearchParams9SerializeERNS_15ResourceRequestE to i8*), i8* bitcast (i64 (%"class.blink::(anonymous namespace)::BeaconURLSearchParams"*)* @_ZNK5blink12_GLOBAL__N_121BeaconURLSearchParams4sizeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::BeaconURLSearchParams"*)* @_ZNK5blink12_GLOBAL__N_121BeaconURLSearchParams14GetContentTypeEv to i8*)] }, align 8
@.str.11 = private unnamed_addr constant [48 x i8] c"application/x-www-form-urlencoded;charset=UTF-8\00", align 1
@_ZTVN5blink12_GLOBAL__N_114BeaconFormDataE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::BeaconFormData"*, %"class.blink::ResourceRequest"*)* @_ZNK5blink12_GLOBAL__N_114BeaconFormData9SerializeERNS_15ResourceRequestE to i8*), i8* bitcast (i64 (%"class.blink::(anonymous namespace)::BeaconFormData"*)* @_ZNK5blink12_GLOBAL__N_114BeaconFormData4sizeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::BeaconFormData"*)* @_ZNK5blink12_GLOBAL__N_114BeaconFormData14GetContentTypeEv to i8*)] }, align 8
@.str.12 = private unnamed_addr constant [31 x i8] c"multipart/form-data; boundary=\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.13 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.14 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZTVN5blink12_GLOBAL__N_110BeaconBlobE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::BeaconBlob"*, %"class.blink::ResourceRequest"*)* @_ZNK5blink12_GLOBAL__N_110BeaconBlob9SerializeERNS_15ResourceRequestE to i8*), i8* bitcast (i64 (%"class.blink::(anonymous namespace)::BeaconBlob"*)* @_ZNK5blink12_GLOBAL__N_110BeaconBlob4sizeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::(anonymous namespace)::BeaconBlob"*)* @_ZNK5blink12_GLOBAL__N_110BeaconBlob14GetContentTypeEv to i8*)] }, align 8
@.str.16 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.17 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10PingLoader17SendLinkAuditPingEPNS_10LocalFrameERKNS_4KURLES5_(%"class.blink::LocalFrame"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* nocapture readonly dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.blink::ResourceRequest", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::AtomicString", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca %"class.blink::FetchParameters", align 8
  %11 = alloca %"class.blink::ResourceRequest", align 8
  %12 = tail call zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"* %1) #10
  br i1 %12, label %13, label %258

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %5, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1032, i8* nonnull %14) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 1032, i1 false)
  call void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"* nonnull %5, %"class.blink::KURL"* dereferenceable(112) %1) #10
  %15 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %5, i64 0, i32 0
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names5kPOSTE, align 8
  call void @_ZN5blink19ResourceRequestHead13SetHttpMethodERKN3WTF12AtomicStringE(%"class.blink::ResourceRequestHead"* nonnull %15, %"class.WTF::AtomicString"* dereferenceable(8) %16) #10
  %17 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i64 9) #10
  %18 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kContentTypeE, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* nonnull %15, %"class.WTF::AtomicString"* dereferenceable(8) %18, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %6) #10
  %19 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #10
  br label %35

35:                                               ; preds = %13, %31, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  %36 = call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEN4base4spanIKcLm18446744073709551615EEE(i64 5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #10
  call void @_ZN5blink15ResourceRequest11SetHttpBodyE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::ResourceRequest"* nonnull %5, %"class.blink::EncodedFormData"* %36) #10
  %37 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names13kCacheControlE, align 8
  %38 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #10
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i64 9) #10
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* nonnull %15, %"class.WTF::AtomicString"* dereferenceable(8) %37, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %7) #10
  %39 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #10
  br label %55

55:                                               ; preds = %35, %51, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #10
  %56 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names7kPingToE, align 8
  %57 = bitcast %"class.WTF::AtomicString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #10
  %58 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 4, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %84, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 acquire, align 4
  %64 = and i32 %63, 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %82, label %66

66:                                               ; preds = %61
  %67 = load atomic i32, i32* %62 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %84

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #10
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !2

79:                                               ; preds = %70
  call void @llvm.trap() #10
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %84

82:                                               ; preds = %61
  %83 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %59) #10
  br label %84

84:                                               ; preds = %55, %66, %80, %82
  %85 = phi %"class.WTF::StringImpl"* [ %83, %82 ], [ %59, %66 ], [ %59, %80 ], [ null, %55 ]
  %86 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %87 = bitcast %"class.WTF::AtomicString"* %8 to i64*
  store i64 %86, i64* %87, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* nonnull %15, %"class.WTF::AtomicString"* dereferenceable(8) %56, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %8) #10
  %88 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %8, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #10
  br label %104

104:                                              ; preds = %103, %100, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #10
  %105 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112) %1) #10
  %106 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %0) #10
  %107 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14LocalDOMWindow3UrlEv(%"class.blink::LocalDOMWindow"* %106) #10
  %108 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %107, i64 0, i32 4
  %109 = call zeroext i1 @_ZN5blink10ProtocolIsERKN3WTF6StringEPKc(%"class.WTF::String"* dereferenceable(8) %108, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #10
  br i1 %109, label %117, label %110

110:                                              ; preds = %104
  %111 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %0) #10
  %112 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %111, i64 0, i32 1
  %113 = bitcast %"class.blink::ExecutionContext.base"* %112 to %"class.blink::ExecutionContext"*
  %114 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %113) #10
  %115 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %115) #10
  store i32 -1431655766, i32* %4, align 4
  %116 = call zeroext i1 @_ZNK5blink14SecurityOrigin9CanAccessEPKS0_RNS0_24AccessResultDomainDetailE(%"class.blink::SecurityOrigin"* %114, %"class.blink::SecurityOrigin"* %105, i32* nonnull dereferenceable(4) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115) #10
  br i1 %116, label %117, label %169

117:                                              ; preds = %110, %104
  %118 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names9kPingFromE, align 8
  %119 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #10
  %120 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %0) #10
  %121 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14LocalDOMWindow3UrlEv(%"class.blink::LocalDOMWindow"* %120) #10
  %122 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %121, i64 0, i32 4, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %148, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 acquire, align 4
  %128 = and i32 %127, 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %146, label %130

130:                                              ; preds = %125
  %131 = load atomic i32, i32* %126 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %148

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = zext i32 %136 to i33
  %138 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %137, i33 1) #10
  %139 = extractvalue { i33, i1 } %138, 1
  %140 = extractvalue { i33, i1 } %138, 0
  %141 = icmp slt i33 %140, 0
  %142 = or i1 %139, %141
  br i1 %142, label %143, label %144, !prof !2

143:                                              ; preds = %134
  call void @llvm.trap() #10
  unreachable

144:                                              ; preds = %134
  %145 = trunc i33 %140 to i32
  store i32 %145, i32* %135, align 4
  br label %148

146:                                              ; preds = %125
  %147 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %123) #10
  br label %148

148:                                              ; preds = %117, %130, %144, %146
  %149 = phi %"class.WTF::StringImpl"* [ %147, %146 ], [ %123, %130 ], [ %123, %144 ], [ null, %117 ]
  %150 = ptrtoint %"class.WTF::StringImpl"* %149 to i64
  %151 = bitcast %"class.WTF::AtomicString"* %9 to i64*
  store i64 %150, i64* %151, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* nonnull %15, %"class.WTF::AtomicString"* dereferenceable(8) %118, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %9) #10
  %152 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %154, label %168, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  br i1 %159, label %162, label %164

162:                                              ; preds = %155
  %163 = add i32 %161, -1
  store i32 %163, i32* %160, align 4
  br label %164

164:                                              ; preds = %162, %155
  %165 = phi i32 [ %163, %162 ], [ %161, %155 ]
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %164
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #10
  br label %168

168:                                              ; preds = %148, %164, %167
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #10
  br label %169

169:                                              ; preds = %110, %168
  %170 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %5, i64 0, i32 0, i32 8
  %171 = load i16, i16* %170, align 8
  %172 = or i16 %171, 128
  store i16 %172, i16* %170, align 8
  %173 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %5, i64 0, i32 0, i32 22
  %174 = bitcast %"class.WTF::String"* %173 to i64*
  %175 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %173, i64 0, i32 0, i32 0
  %176 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %175, align 8
  store i64 0, i64* %174, align 8
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %169
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #10
  br label %191

191:                                              ; preds = %190, %187, %169
  %192 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %5, i64 0, i32 0, i32 23
  store i32 3, i32* %192, align 8
  %193 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %5, i64 0, i32 0, i32 15
  store i32 20, i32* %193, align 8
  %194 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1344, i8* nonnull %194) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %194, i8* align 8 getelementptr inbounds (<{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.535 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.536, %class.scoped_refptr.536, %class.scoped_refptr.536, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1406, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1429", %"class.WTF::Vector.639", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1438 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.159 } } } }, { { { { i8, [7 x i8], %union.anon.159 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.231 } } } }, { { { { i8, [7 x i8], %union.anon.1438 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1438 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.231 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1444" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1445 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias.1495", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1496", i8, i8, [6 x i8], %class.scoped_refptr.867, %class.scoped_refptr.1501, %class.scoped_refptr.1503 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>, <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.535 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.536, %class.scoped_refptr.536, %class.scoped_refptr.536, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1406, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1429", %"class.WTF::Vector.639", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1438 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.159 } } } }, { { { { i8, [7 x i8], %union.anon.159 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.231 } } } }, { { { { i8, [7 x i8], %union.anon.1438 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1438 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.231 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1444" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1445 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias.1495", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1496", i8, i8, [6 x i8], %class.scoped_refptr.867, %class.scoped_refptr.1501, %class.scoped_refptr.1503 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>* @__const._ZN5blink12_GLOBAL__N_116SendBeaconCommonERKNS_11ScriptStateEPNS_10LocalFrameERKNS_4KURLERKNS0_6BeaconE.params, i64 0, i32 0, i32 0, i32 0, i32 0), i64 1344, i1 false)
  call void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"* nonnull %11, %"class.blink::ResourceRequest"* nonnull dereferenceable(1032) %5) #10
  %195 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %0) #10
  %196 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %195, i64 0, i32 1
  %197 = bitcast %"class.blink::ExecutionContext.base"* %196 to %"class.blink::ExecutionContext"*
  %198 = call %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"* %197) #10
  call void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestE13scoped_refptrIKNS_15DOMWrapperWorldEE(%"class.blink::FetchParameters"* nonnull %10, %"class.blink::ResourceRequest"* nonnull %11, %"class.blink::DOMWrapperWorld"* %198) #10
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %11) #10
  %199 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names5kPingE, align 8
  %200 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %10, i64 0, i32 2, i32 0, i32 0
  %201 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %199, i64 0, i32 0, i32 0, i32 0
  %202 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %201, align 8
  %203 = icmp eq %"class.WTF::StringImpl"* %202, null
  br i1 %203, label %221, label %204

204:                                              ; preds = %191
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = and i32 %206, 2
  %208 = icmp eq i32 %207, 0
  br i1 %208, label %209, label %221

209:                                              ; preds = %204
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %202, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  %212 = zext i32 %211 to i33
  %213 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %212, i33 1) #10
  %214 = extractvalue { i33, i1 } %213, 1
  %215 = extractvalue { i33, i1 } %213, 0
  %216 = icmp slt i33 %215, 0
  %217 = or i1 %214, %216
  br i1 %217, label %218, label %219, !prof !2

218:                                              ; preds = %209
  call void @llvm.trap() #10
  unreachable

219:                                              ; preds = %209
  %220 = trunc i33 %215 to i32
  store i32 %220, i32* %210, align 4
  br label %221

221:                                              ; preds = %219, %204, %191
  %222 = ptrtoint %"class.WTF::StringImpl"* %202 to i64
  %223 = bitcast %"class.WTF::AtomicString"* %200 to i64*
  %224 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %200, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  store i64 %222, i64* %223, align 8
  %226 = icmp eq %"class.WTF::StringImpl"* %225, null
  br i1 %226, label %240, label %227

227:                                              ; preds = %221
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load atomic i32, i32* %228 monotonic, align 4
  %230 = and i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 0
  %233 = load i32, i32* %232, align 4
  br i1 %231, label %234, label %236

234:                                              ; preds = %227
  %235 = add i32 %233, -1
  store i32 %235, i32* %232, align 4
  br label %236

236:                                              ; preds = %234, %227
  %237 = phi i32 [ %235, %234 ], [ %233, %227 ]
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %240

239:                                              ; preds = %236
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %225) #10
  br label %240

240:                                              ; preds = %221, %236, %239
  %241 = call %"class.blink::LocalFrameClient"* @_ZNK5blink10LocalFrame6ClientEv(%"class.blink::LocalFrame"* %0) #10
  %242 = bitcast %"class.blink::LocalFrameClient"* %241 to void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)***
  %243 = load void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)**, void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)*** %242, align 8
  %244 = getelementptr inbounds void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)*, void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)** %243, i64 26
  %245 = load void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)*, void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)** %244, align 8
  call void %245(%"class.blink::LocalFrameClient"* %241, %"class.blink::KURL"* dereferenceable(112) %1) #10
  %246 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %0) #10
  %247 = call %"class.blink::ResourceFetcher"* @_ZNK5blink14LocalDOMWindow7FetcherEv(%"class.blink::LocalDOMWindow"* %246) #10
  %248 = call %"class.blink::RawResource"* @_ZN5blink11RawResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_17RawResourceClientE(%"class.blink::FetchParameters"* nonnull dereferenceable(1344) %10, %"class.blink::ResourceFetcher"* %247, %"class.blink::RawResourceClient"* null) #10
  call void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 1344, i8* nonnull %194) #10
  %249 = icmp eq %"class.blink::SecurityOrigin"* %105, null
  br i1 %249, label %257, label %250

250:                                              ; preds = %240
  %251 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %105, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %251) #10
  %252 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %105, i64 0, i32 0, i32 0, i32 0, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %255, label %257

255:                                              ; preds = %250
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %105) #10
  %256 = bitcast %"class.blink::SecurityOrigin"* %105 to i8*
  call void @free(i8* %256) #10
  br label %257

257:                                              ; preds = %240, %250, %255
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 1032, i8* nonnull %14) #10
  br label %258

258:                                              ; preds = %3, %257
  ret void
}

declare zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

declare void @_ZN5blink19ResourceRequestHead13SetHttpMethodERKN3WTF12AtomicStringE(%"class.blink::ResourceRequestHead"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink15ResourceRequest11SetHttpBodyE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::ResourceRequest"*, %"class.blink::EncodedFormData"*) local_unnamed_addr #1

declare %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEN4base4spanIKcLm18446744073709551615EEE(i64, i8*) local_unnamed_addr #1

declare void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink10ProtocolIsERKN3WTF6StringEPKc(%"class.WTF::String"* dereferenceable(8), i8*) local_unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink14LocalDOMWindow3UrlEv(%"class.blink::LocalDOMWindow"*) unnamed_addr #1

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"*, %"class.blink::ResourceRequest"* dereferenceable(1032)) unnamed_addr #1

declare %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestE13scoped_refptrIKNS_15DOMWrapperWorldEE(%"class.blink::FetchParameters"*, %"class.blink::ResourceRequest"*, %"class.blink::DOMWrapperWorld"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"*) unnamed_addr #3

declare %"class.blink::LocalFrameClient"* @_ZNK5blink10LocalFrame6ClientEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

declare %"class.blink::RawResource"* @_ZN5blink11RawResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_17RawResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*, %"class.blink::RawResourceClient"*) local_unnamed_addr #1

declare %"class.blink::ResourceFetcher"* @_ZNK5blink14LocalDOMWindow7FetcherEv(%"class.blink::LocalDOMWindow"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10PingLoader19SendViolationReportEPNS_10LocalFrameERKNS_4KURLE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::LocalFrame"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::EncodedFormData"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::ResourceRequest", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.blink::FetchParameters", align 8
  %7 = alloca %"class.blink::ResourceRequest", align 8
  %8 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1032, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 1032, i1 false)
  call void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"* nonnull %4, %"class.blink::KURL"* dereferenceable(112) %1) #10
  %9 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %4, i64 0, i32 0
  %10 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names5kPOSTE, align 8
  call void @_ZN5blink19ResourceRequestHead13SetHttpMethodERKN3WTF12AtomicStringE(%"class.blink::ResourceRequestHead"* nonnull %9, %"class.WTF::AtomicString"* dereferenceable(8) %10) #10
  %11 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i64 22) #10
  %12 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kContentTypeE, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* nonnull %9, %"class.WTF::AtomicString"* dereferenceable(8) %12, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #10
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #10
  br label %29

29:                                               ; preds = %3, %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  %30 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %4, i64 0, i32 0, i32 8
  %31 = load i16, i16* %30, align 8
  %32 = or i16 %31, 128
  store i16 %32, i16* %30, align 8
  call void @_ZN5blink15ResourceRequest11SetHttpBodyE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::ResourceRequest"* nonnull %4, %"class.blink::EncodedFormData"* %2) #10
  %33 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %4, i64 0, i32 0, i32 19
  store i32 1, i32* %33, align 8
  %34 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %4, i64 0, i32 0, i32 15
  store i32 3, i32* %34, align 8
  %35 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %4, i64 0, i32 0, i32 16
  store i32 12, i32* %35, align 4
  %36 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %0) #10
  %37 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %36, i64 0, i32 1
  %38 = bitcast %"class.blink::ExecutionContext.base"* %37 to %"class.blink::ExecutionContext"*
  %39 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %38) #10
  %40 = icmp eq %"class.blink::SecurityOrigin"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %39, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %42) #10
  br label %43

43:                                               ; preds = %29, %41
  %44 = ptrtoint %"class.blink::SecurityOrigin"* %39 to i64
  %45 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %4, i64 0, i32 0, i32 4
  %46 = bitcast %class.scoped_refptr.536* %45 to i64*
  %47 = getelementptr inbounds %class.scoped_refptr.536, %class.scoped_refptr.536* %45, i64 0, i32 0
  %48 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %47, align 8
  store i64 %44, i64* %46, align 8
  %49 = icmp eq %"class.blink::SecurityOrigin"* %48, null
  br i1 %49, label %57, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %48, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %51) #10
  %52 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %50
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %48) #10
  %56 = bitcast %"class.blink::SecurityOrigin"* %48 to i8*
  call void @free(i8* %56) #10
  br label %57

57:                                               ; preds = %43, %50, %55
  %58 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %4, i64 0, i32 0, i32 20
  store i32 1, i32* %58, align 4
  %59 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1344, i8* nonnull %59) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 8 getelementptr inbounds (<{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.535 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.536, %class.scoped_refptr.536, %class.scoped_refptr.536, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1406, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1429", %"class.WTF::Vector.639", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1438 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.159 } } } }, { { { { i8, [7 x i8], %union.anon.159 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.231 } } } }, { { { { i8, [7 x i8], %union.anon.1438 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1438 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.231 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1444" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1445 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias.1495", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1496", i8, i8, [6 x i8], %class.scoped_refptr.867, %class.scoped_refptr.1501, %class.scoped_refptr.1503 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>, <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.535 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.536, %class.scoped_refptr.536, %class.scoped_refptr.536, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1406, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1429", %"class.WTF::Vector.639", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1438 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.159 } } } }, { { { { i8, [7 x i8], %union.anon.159 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.231 } } } }, { { { { i8, [7 x i8], %union.anon.1438 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1438 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.231 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1444" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1445 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias.1495", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1496", i8, i8, [6 x i8], %class.scoped_refptr.867, %class.scoped_refptr.1501, %class.scoped_refptr.1503 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>* @__const._ZN5blink12_GLOBAL__N_116SendBeaconCommonERKNS_11ScriptStateEPNS_10LocalFrameERKNS_4KURLERKNS0_6BeaconE.params, i64 0, i32 0, i32 0, i32 0, i32 0), i64 1344, i1 false)
  call void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"* nonnull %7, %"class.blink::ResourceRequest"* nonnull dereferenceable(1032) %4) #10
  %60 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %0) #10
  %61 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %60, i64 0, i32 1
  %62 = bitcast %"class.blink::ExecutionContext.base"* %61 to %"class.blink::ExecutionContext"*
  %63 = call %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"* %62) #10
  call void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestE13scoped_refptrIKNS_15DOMWrapperWorldEE(%"class.blink::FetchParameters"* nonnull %6, %"class.blink::ResourceRequest"* nonnull %7, %"class.blink::DOMWrapperWorld"* %63) #10
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %7) #10
  %64 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names16kViolationreportE, align 8
  %65 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %6, i64 0, i32 2, i32 0, i32 0
  %66 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %86, label %69

69:                                               ; preds = %57
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %86

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i33
  %78 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %77, i33 1) #10
  %79 = extractvalue { i33, i1 } %78, 1
  %80 = extractvalue { i33, i1 } %78, 0
  %81 = icmp slt i33 %80, 0
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %84, !prof !2

83:                                               ; preds = %74
  call void @llvm.trap() #10
  unreachable

84:                                               ; preds = %74
  %85 = trunc i33 %80 to i32
  store i32 %85, i32* %75, align 4
  br label %86

86:                                               ; preds = %84, %69, %57
  %87 = ptrtoint %"class.WTF::StringImpl"* %67 to i64
  %88 = bitcast %"class.WTF::AtomicString"* %65 to i64*
  %89 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %65, i64 0, i32 0, i32 0, i32 0
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  store i64 %87, i64* %88, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #10
  br label %105

105:                                              ; preds = %104, %101, %86
  %106 = call %"class.blink::LocalFrameClient"* @_ZNK5blink10LocalFrame6ClientEv(%"class.blink::LocalFrame"* %0) #10
  %107 = bitcast %"class.blink::LocalFrameClient"* %106 to void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)***
  %108 = load void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)**, void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)*, void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)** %108, i64 26
  %110 = load void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)*, void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)** %109, align 8
  call void %110(%"class.blink::LocalFrameClient"* %106, %"class.blink::KURL"* dereferenceable(112) %1) #10
  %111 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %0) #10
  %112 = call %"class.blink::ResourceFetcher"* @_ZNK5blink14LocalDOMWindow7FetcherEv(%"class.blink::LocalDOMWindow"* %111) #10
  %113 = call %"class.blink::RawResource"* @_ZN5blink11RawResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_17RawResourceClientE(%"class.blink::FetchParameters"* nonnull dereferenceable(1344) %6, %"class.blink::ResourceFetcher"* %112, %"class.blink::RawResourceClient"* null) #10
  call void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 1344, i8* nonnull %59) #10
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 1032, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink10PingLoader10SendBeaconERKNS_11ScriptStateEPNS_10LocalFrameERKNS_4KURLERKN3WTF6StringE(%"class.blink::ScriptState"* nocapture readonly dereferenceable(64), %"class.blink::LocalFrame"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::(anonymous namespace)::BeaconString", align 8
  %6 = bitcast %"class.blink::(anonymous namespace)::BeaconString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconString", %"class.blink::(anonymous namespace)::BeaconString"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconString", %"class.blink::(anonymous namespace)::BeaconString"* %5, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_112BeaconStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %8, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #10
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #10
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %4, %12, %27
  %30 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconString", %"class.blink::(anonymous namespace)::BeaconString"* %5, i64 0, i32 0
  %31 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116SendBeaconCommonERKNS_11ScriptStateEPNS_10LocalFrameERKNS_4KURLERKNS0_6BeaconE(%"class.blink::ScriptState"* dereferenceable(64) %0, %"class.blink::LocalFrame"* %1, %"class.blink::KURL"* dereferenceable(112) %2, %"class.blink::(anonymous namespace)::Beacon"* nonnull dereferenceable(8) %30)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_112BeaconStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #10
  br label %47

47:                                               ; preds = %29, %43, %46
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116SendBeaconCommonERKNS_11ScriptStateEPNS_10LocalFrameERKNS_4KURLERKNS0_6BeaconE(%"class.blink::ScriptState"* nocapture readonly dereferenceable(64), %"class.blink::LocalFrame"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::(anonymous namespace)::Beacon"* dereferenceable(8)) unnamed_addr #0 {
  %5 = alloca %"class.blink::ResourceRequest", align 8
  %6 = alloca %"class.blink::FetchParameters", align 8
  %7 = alloca %"class.blink::ResourceRequest", align 8
  %8 = tail call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %1) #10
  %9 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %0, i64 0, i32 2, i32 0
  %10 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %9, align 8
  %11 = tail call %"class.blink::ContentSecurityPolicy"* @_ZN5blink14LocalDOMWindow32GetContentSecurityPolicyForWorldEPKNS_15DOMWrapperWorldE(%"class.blink::LocalDOMWindow"* %8, %"class.blink::DOMWrapperWorld"* %10) #10
  %12 = tail call zeroext i1 @_ZN5blink21ContentSecurityPolicy20AllowConnectToSourceERKNS_4KURLES3_NS_19ResourceRequestHead14RedirectStatusENS_20ReportingDispositionENS0_15CheckHeaderTypeE(%"class.blink::ContentSecurityPolicy"* %11, %"class.blink::KURL"* dereferenceable(112) %2, %"class.blink::KURL"* dereferenceable(112) %2, i8 zeroext 1, i32 1, i32 0) #10
  br i1 %12, label %13, label %83

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %5, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1032, i8* nonnull %14) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 1032, i1 false)
  call void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"* nonnull %5, %"class.blink::KURL"* dereferenceable(112) %2) #10
  %15 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %5, i64 0, i32 0
  %16 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names5kPOSTE, align 8
  call void @_ZN5blink19ResourceRequestHead13SetHttpMethodERKN3WTF12AtomicStringE(%"class.blink::ResourceRequestHead"* nonnull %15, %"class.WTF::AtomicString"* dereferenceable(8) %16) #10
  %17 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %5, i64 0, i32 0, i32 8
  %18 = load i16, i16* %17, align 8
  %19 = or i16 %18, 128
  store i16 %19, i16* %17, align 8
  %20 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %5, i64 0, i32 0, i32 15
  store i32 2, i32* %20, align 8
  %21 = bitcast %"class.blink::(anonymous namespace)::Beacon"* %3 to void (%"class.blink::(anonymous namespace)::Beacon"*, %"class.blink::ResourceRequest"*)***
  %22 = load void (%"class.blink::(anonymous namespace)::Beacon"*, %"class.blink::ResourceRequest"*)**, void (%"class.blink::(anonymous namespace)::Beacon"*, %"class.blink::ResourceRequest"*)*** %21, align 8
  %23 = load void (%"class.blink::(anonymous namespace)::Beacon"*, %"class.blink::ResourceRequest"*)*, void (%"class.blink::(anonymous namespace)::Beacon"*, %"class.blink::ResourceRequest"*)** %22, align 8
  call void %23(%"class.blink::(anonymous namespace)::Beacon"* %3, %"class.blink::ResourceRequest"* nonnull dereferenceable(1032) %5) #10
  %24 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1344, i8* nonnull %24) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 getelementptr inbounds (<{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.535 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.536, %class.scoped_refptr.536, %class.scoped_refptr.536, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1406, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1429", %"class.WTF::Vector.639", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1438 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.159 } } } }, { { { { i8, [7 x i8], %union.anon.159 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.231 } } } }, { { { { i8, [7 x i8], %union.anon.1438 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1438 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.231 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1444" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1445 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias.1495", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1496", i8, i8, [6 x i8], %class.scoped_refptr.867, %class.scoped_refptr.1501, %class.scoped_refptr.1503 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>, <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.535 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.536, %class.scoped_refptr.536, %class.scoped_refptr.536, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.1406, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.1429", %"class.WTF::Vector.639", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.1438 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.159 } } } }, { { { { i8, [7 x i8], %union.anon.159 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.231 } } } }, { { { { i8, [7 x i8], %union.anon.1438 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.1438 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.231 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1444" } } } } } }, i8, [7 x i8], %class.scoped_refptr.1445 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.268" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias.1495", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.1496", i8, i8, [6 x i8], %class.scoped_refptr.867, %class.scoped_refptr.1501, %class.scoped_refptr.1503 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>* @__const._ZN5blink12_GLOBAL__N_116SendBeaconCommonERKNS_11ScriptStateEPNS_10LocalFrameERKNS_4KURLERKNS0_6BeaconE.params, i64 0, i32 0, i32 0, i32 0, i32 0), i64 1344, i1 false)
  call void @_ZN5blink15ResourceRequestC1EOS0_(%"class.blink::ResourceRequest"* nonnull %7, %"class.blink::ResourceRequest"* nonnull dereferenceable(1032) %5) #10
  %25 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %9, align 8
  %26 = icmp eq %"class.blink::DOMWrapperWorld"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %25, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %28) #10
  br label %29

29:                                               ; preds = %13, %27
  call void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestE13scoped_refptrIKNS_15DOMWrapperWorldEE(%"class.blink::FetchParameters"* nonnull %6, %"class.blink::ResourceRequest"* nonnull %7, %"class.blink::DOMWrapperWorld"* %25) #10
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %7) #10
  %30 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names7kBeaconE, align 8
  %31 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %6, i64 0, i32 2, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %30, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #10
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %40
  call void @llvm.trap() #10
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %50, %35, %29
  %53 = ptrtoint %"class.WTF::StringImpl"* %33 to i64
  %54 = bitcast %"class.WTF::AtomicString"* %31 to i64*
  %55 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %31, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  store i64 %53, i64* %54, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #10
  br label %71

71:                                               ; preds = %52, %67, %70
  %72 = call %"class.blink::LocalFrameClient"* @_ZNK5blink10LocalFrame6ClientEv(%"class.blink::LocalFrame"* %1) #10
  %73 = bitcast %"class.blink::LocalFrameClient"* %72 to void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)***
  %74 = load void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)**, void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)*, void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)** %74, i64 26
  %76 = load void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)*, void (%"class.blink::LocalFrameClient"*, %"class.blink::KURL"*)** %75, align 8
  call void %76(%"class.blink::LocalFrameClient"* %72, %"class.blink::KURL"* dereferenceable(112) %2) #10
  %77 = call %"class.blink::LocalDOMWindow"* @_ZN5blink10LocalFrame9DomWindowEv(%"class.blink::LocalFrame"* %1) #10
  %78 = call %"class.blink::ResourceFetcher"* @_ZNK5blink14LocalDOMWindow7FetcherEv(%"class.blink::LocalDOMWindow"* %77) #10
  %79 = call %"class.blink::RawResource"* @_ZN5blink11RawResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_17RawResourceClientE(%"class.blink::FetchParameters"* nonnull dereferenceable(1344) %6, %"class.blink::ResourceFetcher"* %78, %"class.blink::RawResourceClient"* null) #10
  %80 = getelementptr inbounds %"class.blink::RawResource", %"class.blink::RawResource"* %79, i64 0, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp ne i8 %81, 3
  call void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 1344, i8* nonnull %24) #10
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 1032, i8* nonnull %14) #10
  br label %83

83:                                               ; preds = %4, %71
  %84 = phi i1 [ %82, %71 ], [ true, %4 ]
  ret i1 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink10PingLoader10SendBeaconERKNS_11ScriptStateEPNS_10LocalFrameERKNS_4KURLEPNS_18DOMArrayBufferViewE(%"class.blink::ScriptState"* nocapture readonly dereferenceable(64), %"class.blink::LocalFrame"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::DOMArrayBufferView"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.blink::(anonymous namespace)::BeaconDOMArrayBufferView", align 8
  %7 = bitcast %"class.blink::(anonymous namespace)::BeaconDOMArrayBufferView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconDOMArrayBufferView", %"class.blink::(anonymous namespace)::BeaconDOMArrayBufferView"* %6, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconDOMArrayBufferView", %"class.blink::(anonymous namespace)::BeaconDOMArrayBufferView"* %6, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_124BeaconDOMArrayBufferViewE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store %"class.blink::DOMArrayBufferView"* %3, %"class.blink::DOMArrayBufferView"** %9, align 8
  %10 = bitcast %"class.blink::DOMArrayBufferView"* %3 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %11 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %10, align 8
  %12 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %11, i64 10
  %13 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %12, align 8
  %14 = tail call i64 %13(%"class.blink::DOMArrayBufferView"* %3) #10
  %15 = icmp ult i64 %14, 4294967296
  br i1 %15, label %20, label %16

16:                                               ; preds = %4
  %17 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.6, i64 0, i64 0), i32 137, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.7, i64 0, i64 0)) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8, i64 0, i64 0), i64 59) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %20

20:                                               ; preds = %4, %16
  %21 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconDOMArrayBufferView", %"class.blink::(anonymous namespace)::BeaconDOMArrayBufferView"* %6, i64 0, i32 0
  %22 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116SendBeaconCommonERKNS_11ScriptStateEPNS_10LocalFrameERKNS_4KURLERKNS0_6BeaconE(%"class.blink::ScriptState"* dereferenceable(64) %0, %"class.blink::LocalFrame"* %1, %"class.blink::KURL"* dereferenceable(112) %2, %"class.blink::(anonymous namespace)::Beacon"* nonnull dereferenceable(8) %21)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink10PingLoader10SendBeaconERKNS_11ScriptStateEPNS_10LocalFrameERKNS_4KURLEPNS_14DOMArrayBufferE(%"class.blink::ScriptState"* nocapture readonly dereferenceable(64), %"class.blink::LocalFrame"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::DOMArrayBuffer"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.blink::(anonymous namespace)::BeaconDOMArrayBuffer", align 8
  %7 = bitcast %"class.blink::(anonymous namespace)::BeaconDOMArrayBuffer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconDOMArrayBuffer", %"class.blink::(anonymous namespace)::BeaconDOMArrayBuffer"* %6, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconDOMArrayBuffer", %"class.blink::(anonymous namespace)::BeaconDOMArrayBuffer"* %6, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_120BeaconDOMArrayBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  store %"class.blink::DOMArrayBuffer"* %3, %"class.blink::DOMArrayBuffer"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::DOMArrayBuffer", %"class.blink::DOMArrayBuffer"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %10, align 8
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %4
  %14 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %11) #10
  %15 = icmp ult i64 %14, 4294967296
  br i1 %15, label %20, label %16

16:                                               ; preds = %13
  %17 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.6, i64 0, i64 0), i32 161, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.10, i64 0, i64 0)) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8, i64 0, i64 0), i64 59) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %20

20:                                               ; preds = %4, %13, %16
  %21 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconDOMArrayBuffer", %"class.blink::(anonymous namespace)::BeaconDOMArrayBuffer"* %6, i64 0, i32 0
  %22 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116SendBeaconCommonERKNS_11ScriptStateEPNS_10LocalFrameERKNS_4KURLERKNS0_6BeaconE(%"class.blink::ScriptState"* dereferenceable(64) %0, %"class.blink::LocalFrame"* %1, %"class.blink::KURL"* dereferenceable(112) %2, %"class.blink::(anonymous namespace)::Beacon"* nonnull dereferenceable(8) %21)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #10
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink10PingLoader10SendBeaconERKNS_11ScriptStateEPNS_10LocalFrameERKNS_4KURLEPNS_15URLSearchParamsE(%"class.blink::ScriptState"* nocapture readonly dereferenceable(64), %"class.blink::LocalFrame"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::URLSearchParams"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::(anonymous namespace)::BeaconURLSearchParams", align 8
  %6 = bitcast %"class.blink::(anonymous namespace)::BeaconURLSearchParams"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconURLSearchParams", %"class.blink::(anonymous namespace)::BeaconURLSearchParams"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconURLSearchParams", %"class.blink::(anonymous namespace)::BeaconURLSearchParams"* %5, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_121BeaconURLSearchParamsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  store %"class.blink::URLSearchParams"* %3, %"class.blink::URLSearchParams"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconURLSearchParams", %"class.blink::(anonymous namespace)::BeaconURLSearchParams"* %5, i64 0, i32 0
  %10 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116SendBeaconCommonERKNS_11ScriptStateEPNS_10LocalFrameERKNS_4KURLERKNS0_6BeaconE(%"class.blink::ScriptState"* dereferenceable(64) %0, %"class.blink::LocalFrame"* %1, %"class.blink::KURL"* dereferenceable(112) %2, %"class.blink::(anonymous namespace)::Beacon"* nonnull dereferenceable(8) %9)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink10PingLoader10SendBeaconERKNS_11ScriptStateEPNS_10LocalFrameERKNS_4KURLEPNS_8FormDataE(%"class.blink::ScriptState"* nocapture readonly dereferenceable(64), %"class.blink::LocalFrame"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::FormData"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = alloca %"class.WTF::AtomicString", align 8
  %7 = alloca %"class.blink::(anonymous namespace)::BeaconFormData", align 8
  %8 = bitcast %"class.blink::(anonymous namespace)::BeaconFormData"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconFormData", %"class.blink::(anonymous namespace)::BeaconFormData"* %7, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconFormData", %"class.blink::(anonymous namespace)::BeaconFormData"* %7, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconFormData", %"class.blink::(anonymous namespace)::BeaconFormData"* %7, i64 0, i32 2, i32 0
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconFormData", %"class.blink::(anonymous namespace)::BeaconFormData"* %7, i64 0, i32 3, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_114BeaconFormDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  store %"class.blink::FormData"* %3, %"class.blink::FormData"** %10, align 8
  %13 = tail call %"class.blink::EncodedFormData"* @_ZN5blink8FormData23EncodeMultiPartFormDataEv(%"class.blink::FormData"* %3) #10
  store %"class.blink::EncodedFormData"* %13, %"class.blink::EncodedFormData"** %11, align 8
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconFormData", %"class.blink::(anonymous namespace)::BeaconFormData"* %7, i64 0, i32 3
  %15 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %14, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  %16 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #10
  %17 = bitcast %"class.WTF::AtomicString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i64 0, i64 0), i64 30) #10
  %18 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %13, i64 0, i32 4, i32 0, i32 0, i32 0
  %19 = bitcast i8** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %6, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %67, label %24

24:                                               ; preds = %4
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %41

31:                                               ; preds = %24
  %32 = zext i32 %30 to i33
  %33 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #10
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %31
  call void @llvm.trap() #10
  unreachable

39:                                               ; preds = %31
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %29, align 4
  br label %41

41:                                               ; preds = %39, %24
  %42 = phi i32 [ %40, %39 ], [ %30, %24 ]
  %43 = load atomic i32, i32* %25 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %56

46:                                               ; preds = %41
  %47 = zext i32 %42 to i33
  %48 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #10
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !2

53:                                               ; preds = %46
  call void @llvm.trap() #10
  unreachable

54:                                               ; preds = %46
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %29, align 4
  br label %56

56:                                               ; preds = %54, %41
  %57 = phi i32 [ %55, %54 ], [ %42, %41 ]
  %58 = load atomic i32, i32* %25 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  %62 = add i32 %57, -1
  store i32 %62, i32* %29, align 4
  br label %63

63:                                               ; preds = %61, %56
  %64 = phi i32 [ %62, %61 ], [ %57, %56 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #10
  br label %67

67:                                               ; preds = %66, %63, %4
  %68 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %68, align 8
  %69 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  %70 = bitcast i8** %69 to i64*
  store i64 %20, i64* %70, align 8
  %71 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcEcvNS_6StringEEv(%"class.WTF::StringAppend"* nonnull %5) #10
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %109, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 acquire, align 4
  %76 = and i32 %75, 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %94, label %78

78:                                               ; preds = %73
  %79 = load atomic i32, i32* %74 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %96

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i33
  %86 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %85, i33 1) #10
  %87 = extractvalue { i33, i1 } %86, 1
  %88 = extractvalue { i33, i1 } %86, 0
  %89 = icmp slt i33 %88, 0
  %90 = or i1 %87, %89
  br i1 %90, label %91, label %92, !prof !2

91:                                               ; preds = %82
  call void @llvm.trap() #10
  unreachable

92:                                               ; preds = %82
  %93 = trunc i33 %88 to i32
  store i32 %93, i32* %83, align 4
  br label %96

94:                                               ; preds = %73
  %95 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %71) #10
  br label %96

96:                                               ; preds = %94, %92, %78
  %97 = phi %"class.WTF::StringImpl"* [ %71, %92 ], [ %71, %78 ], [ %95, %94 ]
  %98 = load atomic i32, i32* %74 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #10
  br label %109

109:                                              ; preds = %108, %105, %67
  %110 = phi %"class.WTF::StringImpl"* [ %97, %105 ], [ %97, %108 ], [ null, %67 ]
  %111 = ptrtoint %"class.WTF::StringImpl"* %110 to i64
  %112 = bitcast %"class.WTF::AtomicString"* %14 to i64*
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  store i64 %111, i64* %112, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #10
  br label %128

128:                                              ; preds = %127, %124, %109
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %144, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  br i1 %135, label %138, label %140

138:                                              ; preds = %131
  %139 = add i32 %137, -1
  store i32 %139, i32* %136, align 4
  br label %140

140:                                              ; preds = %138, %131
  %141 = phi i32 [ %139, %138 ], [ %137, %131 ]
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %140
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %129) #10
  br label %144

144:                                              ; preds = %143, %140, %128
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #10
  br label %160

160:                                              ; preds = %144, %156, %159
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #10
  %161 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconFormData", %"class.blink::(anonymous namespace)::BeaconFormData"* %7, i64 0, i32 0
  %162 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116SendBeaconCommonERKNS_11ScriptStateEPNS_10LocalFrameERKNS_4KURLERKNS0_6BeaconE(%"class.blink::ScriptState"* dereferenceable(64) %0, %"class.blink::LocalFrame"* %1, %"class.blink::KURL"* dereferenceable(112) %2, %"class.blink::(anonymous namespace)::Beacon"* nonnull dereferenceable(8) %161)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_114BeaconFormDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %178, label %165

165:                                              ; preds = %160
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = and i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %171 = load i32, i32* %170, align 4
  br i1 %169, label %172, label %174

172:                                              ; preds = %165
  %173 = add i32 %171, -1
  store i32 %173, i32* %170, align 4
  br label %174

174:                                              ; preds = %172, %165
  %175 = phi i32 [ %173, %172 ], [ %171, %165 ]
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %174
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #10
  br label %178

178:                                              ; preds = %177, %174, %160
  %179 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %11, align 8
  %180 = icmp eq %"class.blink::EncodedFormData"* %179, null
  br i1 %180, label %188, label %181

181:                                              ; preds = %178
  %182 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %179, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %182) #10
  %183 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %179, i64 0, i32 0, i32 0, i32 0, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %188

186:                                              ; preds = %181
  call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %179) #10
  %187 = bitcast %"class.blink::EncodedFormData"* %179 to i8*
  call void @free(i8* %187) #10
  br label %188

188:                                              ; preds = %178, %181, %186
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #10
  ret i1 %162
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink10PingLoader10SendBeaconERKNS_11ScriptStateEPNS_10LocalFrameERKNS_4KURLEPNS_4BlobE(%"class.blink::ScriptState"* nocapture readonly dereferenceable(64), %"class.blink::LocalFrame"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::Blob"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::ParsedContentType", align 8
  %7 = alloca %"class.blink::(anonymous namespace)::BeaconBlob", align 8
  %8 = bitcast %"class.blink::(anonymous namespace)::BeaconBlob"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconBlob", %"class.blink::(anonymous namespace)::BeaconBlob"* %7, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconBlob", %"class.blink::(anonymous namespace)::BeaconBlob"* %7, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconBlob", %"class.blink::(anonymous namespace)::BeaconBlob"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_110BeaconBlobE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  store %"class.blink::Blob"* %3, %"class.blink::Blob"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconBlob", %"class.blink::(anonymous namespace)::BeaconBlob"* %7, i64 0, i32 2
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %13, align 8
  %14 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.blink::Blob", %"class.blink::Blob"* %3, i64 0, i32 3, i32 0
  %16 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %16, i64 0, i32 2
  %18 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %17) #10
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %19, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %20, label %91, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %75, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.blink::ParsedContentType"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %26) #10
  call void @_ZN5blink17ParsedContentTypeC1ERKN3WTF6StringENS_34ParsedContentHeaderFieldParameters4ModeE(%"class.blink::ParsedContentType"* nonnull %6, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32 0) #10
  %27 = getelementptr inbounds %"class.blink::ParsedContentType", %"class.blink::ParsedContentType"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 8, !range !3
  %29 = icmp eq i8 %28, 0
  call void @_ZN5blink17ParsedContentTypeD2Ev(%"class.blink::ParsedContentType"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %26) #10
  br i1 %29, label %75, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %56, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 acquire, align 4
  %36 = and i32 %35, 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %54, label %38

38:                                               ; preds = %33
  %39 = load atomic i32, i32* %34 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %56

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #10
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !2

51:                                               ; preds = %42
  call void @llvm.trap() #10
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %56

54:                                               ; preds = %33
  %55 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %31) #10
  br label %56

56:                                               ; preds = %54, %52, %38, %30
  %57 = phi %"class.WTF::StringImpl"* [ %55, %54 ], [ %31, %38 ], [ %31, %52 ], [ null, %30 ]
  %58 = ptrtoint %"class.WTF::StringImpl"* %57 to i64
  %59 = bitcast %"class.WTF::AtomicString"* %12 to i64*
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  store i64 %58, i64* %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #10
  br label %75

75:                                               ; preds = %74, %71, %56, %25, %21
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #10
  br label %91

91:                                               ; preds = %4, %75, %87, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %92 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconBlob", %"class.blink::(anonymous namespace)::BeaconBlob"* %7, i64 0, i32 0
  %93 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116SendBeaconCommonERKNS_11ScriptStateEPNS_10LocalFrameERKNS_4KURLERKNS0_6BeaconE(%"class.blink::ScriptState"* dereferenceable(64) %0, %"class.blink::LocalFrame"* %1, %"class.blink::KURL"* dereferenceable(112) %2, %"class.blink::(anonymous namespace)::Beacon"* nonnull dereferenceable(8) %92)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_110BeaconBlobE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #10
  br label %109

109:                                              ; preds = %91, %105, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #10
  ret i1 %93
}

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink14SecurityOrigin9CanAccessEPKS0_RNS0_24AccessResultDomainDetailE(%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*, i32* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_112BeaconString9SerializeERNS_15ResourceRequestE(%"class.blink::(anonymous namespace)::BeaconString"*, %"class.blink::ResourceRequest"* dereferenceable(1032)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconString", %"class.blink::(anonymous namespace)::BeaconString"* %0, i64 0, i32 1
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* %7, i32 0) #10
  %8 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = select i1 %11, i8* %13, i8* %6
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %10 to i64
  %18 = select i1 %11, i64 %16, i64 %17
  %19 = call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEN4base4spanIKcLm18446744073709551615EEE(i64 %18, i8* %14) #10
  %20 = load i8, i8* %9, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %2
  %23 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %23) #11
  br label %24

24:                                               ; preds = %2, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  %25 = icmp eq %"class.blink::EncodedFormData"* %19, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %19, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %27) #10
  br label %28

28:                                               ; preds = %24, %26
  call void @_ZN5blink15ResourceRequest11SetHttpBodyE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::ResourceRequest"* %1, %"class.blink::EncodedFormData"* %19) #10
  %29 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %1, i64 0, i32 0
  %30 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  %31 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31)
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i64 24) #10
  %32 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  %33 = load i64, i64* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31)
  %34 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.WTF::AtomicString"* %5 to i64*
  store i64 %33, i64* %35, align 8
  %36 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kContentTypeE, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %29, %"class.WTF::AtomicString"* dereferenceable(8) %36, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5) #10
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #10
  br label %52

52:                                               ; preds = %28, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  br i1 %25, label %60, label %53

53:                                               ; preds = %52
  %54 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %19, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #10
  %55 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %19) #10
  %59 = bitcast %"class.blink::EncodedFormData"* %19 to i8*
  call void @free(i8* %59) #10
  br label %60

60:                                               ; preds = %52, %53, %58
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal i64 @_ZNK5blink12_GLOBAL__N_112BeaconString4sizeEv(%"class.blink::(anonymous namespace)::BeaconString"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconString", %"class.blink::(anonymous namespace)::BeaconString"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = select i1 %12, i64 2, i64 1
  %14 = mul nuw nsw i64 %13, %8
  br label %15

15:                                               ; preds = %1, %5
  %16 = phi i64 [ %14, %5 ], [ 0, %1 ]
  ret i64 %16
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_112BeaconString14GetContentTypeEv(%"class.blink::(anonymous namespace)::BeaconString"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i64 24) #10
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare %"class.blink::ContentSecurityPolicy"* @_ZN5blink14LocalDOMWindow32GetContentSecurityPolicyForWorldEPKNS_15DOMWrapperWorldE(%"class.blink::LocalDOMWindow"*, %"class.blink::DOMWrapperWorld"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink21ContentSecurityPolicy20AllowConnectToSourceERKNS_4KURLES3_NS_19ResourceRequestHead14RedirectStatusENS_20ReportingDispositionENS0_15CheckHeaderTypeE(%"class.blink::ContentSecurityPolicy"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112), i8 zeroext, i32, i32) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_124BeaconDOMArrayBufferView9SerializeERNS_15ResourceRequestE(%"class.blink::(anonymous namespace)::BeaconDOMArrayBufferView"* nocapture readonly, %"class.blink::ResourceRequest"* dereferenceable(1032)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconDOMArrayBufferView", %"class.blink::(anonymous namespace)::BeaconDOMArrayBufferView"* %0, i64 0, i32 1
  %4 = load %"class.blink::DOMArrayBufferView"*, %"class.blink::DOMArrayBufferView"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %4, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %6, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !3
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::DOMArrayBufferView", %"class.blink::DOMArrayBufferView"* %4, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  br label %13

13:                                               ; preds = %2, %10
  %14 = phi i8* [ %12, %10 ], [ null, %2 ]
  %15 = bitcast %"class.blink::DOMArrayBufferView"* %4 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %16 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %15, align 8
  %17 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %16, i64 10
  %18 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %17, align 8
  %19 = tail call i64 %18(%"class.blink::DOMArrayBufferView"* %4) #10
  %20 = icmp ult i64 %19, 4294967296
  br i1 %20, label %22, label %21, !prof !4

21:                                               ; preds = %13
  tail call void @llvm.trap() #10
  unreachable

22:                                               ; preds = %13
  %23 = trunc i64 %19 to i32
  %24 = tail call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEPKvj(i8* %14, i32 %23) #10
  tail call void @_ZN5blink15ResourceRequest11SetHttpBodyE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::ResourceRequest"* %1, %"class.blink::EncodedFormData"* %24) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK5blink12_GLOBAL__N_124BeaconDOMArrayBufferView4sizeEv(%"class.blink::(anonymous namespace)::BeaconDOMArrayBufferView"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconDOMArrayBufferView", %"class.blink::(anonymous namespace)::BeaconDOMArrayBufferView"* %0, i64 0, i32 1
  %3 = load %"class.blink::DOMArrayBufferView"*, %"class.blink::DOMArrayBufferView"** %2, align 8
  %4 = bitcast %"class.blink::DOMArrayBufferView"* %3 to i64 (%"class.blink::DOMArrayBufferView"*)***
  %5 = load i64 (%"class.blink::DOMArrayBufferView"*)**, i64 (%"class.blink::DOMArrayBufferView"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %5, i64 10
  %7 = load i64 (%"class.blink::DOMArrayBufferView"*)*, i64 (%"class.blink::DOMArrayBufferView"*)** %6, align 8
  %8 = tail call i64 %7(%"class.blink::DOMArrayBufferView"* %3) #10
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_124BeaconDOMArrayBufferView14GetContentTypeEv(%"class.blink::(anonymous namespace)::BeaconDOMArrayBufferView"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #10
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #10
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %1, %6, %21
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #11
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEPKvj(i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_120BeaconDOMArrayBuffer9SerializeERNS_15ResourceRequestE(%"class.blink::(anonymous namespace)::BeaconDOMArrayBuffer"* nocapture readonly, %"class.blink::ResourceRequest"* dereferenceable(1032)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconDOMArrayBuffer", %"class.blink::(anonymous namespace)::BeaconDOMArrayBuffer"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::DOMArrayBuffer"** %3 to %"class.blink::DOMArrayBufferBase"**
  %5 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %6, align 8
  %8 = icmp eq %"class.v8::BackingStore"* %7, null
  br i1 %8, label %19, label %9

9:                                                ; preds = %2
  %10 = tail call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %7) #10
  %11 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %4, align 8
  %12 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %11, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %12, align 8
  %14 = icmp eq %"class.v8::BackingStore"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %9
  %16 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %13) #10
  %17 = icmp ult i64 %16, 4294967296
  br i1 %17, label %19, label %18, !prof !4

18:                                               ; preds = %15
  tail call void @llvm.trap() #10
  unreachable

19:                                               ; preds = %2, %9, %15
  %20 = phi i8* [ %10, %15 ], [ %10, %9 ], [ null, %2 ]
  %21 = phi i64 [ %16, %15 ], [ 0, %9 ], [ 0, %2 ]
  %22 = trunc i64 %21 to i32
  %23 = tail call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEPKvj(i8* %20, i32 %22) #10
  tail call void @_ZN5blink15ResourceRequest11SetHttpBodyE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::ResourceRequest"* %1, %"class.blink::EncodedFormData"* %23) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK5blink12_GLOBAL__N_120BeaconDOMArrayBuffer4sizeEv(%"class.blink::(anonymous namespace)::BeaconDOMArrayBuffer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconDOMArrayBuffer", %"class.blink::(anonymous namespace)::BeaconDOMArrayBuffer"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::DOMArrayBuffer"** %2 to %"class.blink::DOMArrayBufferBase"**
  %4 = load %"class.blink::DOMArrayBufferBase"*, %"class.blink::DOMArrayBufferBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %4, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %5, align 8
  %7 = icmp eq %"class.v8::BackingStore"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = tail call i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"* nonnull %6) #10
  br label %10

10:                                               ; preds = %1, %8
  %11 = phi i64 [ %9, %8 ], [ 0, %1 ]
  ret i64 %11
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_120BeaconDOMArrayBuffer14GetContentTypeEv(%"class.blink::(anonymous namespace)::BeaconDOMArrayBuffer"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #10
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #10
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %1, %6, %21
  ret %"class.WTF::StringImpl"* %4
}

declare i64 @_ZNK2v812BackingStore10ByteLengthEv(%"class.v8::BackingStore"*) local_unnamed_addr #1

declare i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_121BeaconURLSearchParams9SerializeERNS_15ResourceRequestE(%"class.blink::(anonymous namespace)::BeaconURLSearchParams"* nocapture readonly, %"class.blink::ResourceRequest"* dereferenceable(1032)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconURLSearchParams", %"class.blink::(anonymous namespace)::BeaconURLSearchParams"* %0, i64 0, i32 1
  %6 = load %"class.blink::URLSearchParams"*, %"class.blink::URLSearchParams"** %5, align 8
  %7 = tail call %"class.blink::EncodedFormData"* @_ZNK5blink15URLSearchParams17ToEncodedFormDataEv(%"class.blink::URLSearchParams"* %6) #10
  tail call void @_ZN5blink15ResourceRequest11SetHttpBodyE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::ResourceRequest"* %1, %"class.blink::EncodedFormData"* %7) #10
  %8 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %1, i64 0, i32 0
  %9 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %3, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11, i64 0, i64 0), i64 47) #10
  %11 = bitcast %"class.WTF::AtomicString"* %3 to i64*
  %12 = load i64, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  store i64 %12, i64* %14, align 8
  %15 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kContentTypeE, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %8, %"class.WTF::AtomicString"* dereferenceable(8) %15, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4) #10
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #10
  br label %31

31:                                               ; preds = %2, %27, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK5blink12_GLOBAL__N_121BeaconURLSearchParams4sizeEv(%"class.blink::(anonymous namespace)::BeaconURLSearchParams"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconURLSearchParams", %"class.blink::(anonymous namespace)::BeaconURLSearchParams"* %0, i64 0, i32 1
  %3 = load %"class.blink::URLSearchParams"*, %"class.blink::URLSearchParams"** %2, align 8
  %4 = tail call %"class.WTF::StringImpl"* @_ZNK5blink15URLSearchParams8toStringEv(%"class.blink::URLSearchParams"* %3) #10
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %27, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  %14 = select i1 %13, i64 2, i64 1
  %15 = mul nuw nsw i64 %14, %9
  %16 = load atomic i32, i32* %10 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %6
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %6
  %24 = phi i32 [ %22, %21 ], [ %20, %6 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #10
  br label %27

27:                                               ; preds = %1, %23, %26
  %28 = phi i64 [ %15, %23 ], [ %15, %26 ], [ 0, %1 ]
  ret i64 %28
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_121BeaconURLSearchParams14GetContentTypeEv(%"class.blink::(anonymous namespace)::BeaconURLSearchParams"* nocapture readnone) unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11, i64 0, i64 0), i64 47) #10
  %3 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

declare %"class.blink::EncodedFormData"* @_ZNK5blink15URLSearchParams17ToEncodedFormDataEv(%"class.blink::URLSearchParams"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink15URLSearchParams8toStringEv(%"class.blink::URLSearchParams"*) local_unnamed_addr #1

declare %"class.blink::EncodedFormData"* @_ZN5blink8FormData23EncodeMultiPartFormDataEv(%"class.blink::FormData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_114BeaconFormData9SerializeERNS_15ResourceRequestE(%"class.blink::(anonymous namespace)::BeaconFormData"*, %"class.blink::ResourceRequest"* dereferenceable(1032)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconFormData", %"class.blink::(anonymous namespace)::BeaconFormData"* %0, i64 0, i32 2, i32 0
  %4 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %3, align 8
  %5 = icmp eq %"class.blink::EncodedFormData"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %7) #10
  br label %8

8:                                                ; preds = %2, %6
  tail call void @_ZN5blink15ResourceRequest11SetHttpBodyE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::ResourceRequest"* %1, %"class.blink::EncodedFormData"* %4) #10
  %9 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %1, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconFormData", %"class.blink::(anonymous namespace)::BeaconFormData"* %0, i64 0, i32 3
  %11 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kContentTypeE, align 8
  tail call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %9, %"class.WTF::AtomicString"* dereferenceable(8) %11, %"class.WTF::AtomicString"* dereferenceable(8) %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK5blink12_GLOBAL__N_114BeaconFormData4sizeEv(%"class.blink::(anonymous namespace)::BeaconFormData"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconFormData", %"class.blink::(anonymous namespace)::BeaconFormData"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %2, align 8
  %4 = tail call i64 @_ZNK5blink15EncodedFormData11SizeInBytesEv(%"class.blink::EncodedFormData"* %3) #10
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_114BeaconFormData14GetContentTypeEv(%"class.blink::(anonymous namespace)::BeaconFormData"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconFormData", %"class.blink::(anonymous namespace)::BeaconFormData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #10
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %10
  tail call void @llvm.trap() #10
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcEcvNS_6StringEEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2269", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2269", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.2269", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.2269"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #10
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2269"* nonnull %6, i8* %16) #10
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #10
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #10
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #10
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.2269"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #10
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2269"* nonnull %5, i8* %45) #10
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2268"* nonnull %46, i8* %25) #10
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2269"* nonnull %5, i8* %49) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #10
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #10
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %58
  call void @llvm.trap() #10
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #10
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #10
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #10
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #10
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #10
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.2269"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #10
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2269"* nonnull %3, i8* %105) #10
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2268"* nonnull %106, i16* %85) #10
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2269"* nonnull %3, i16* %109) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #10
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #10
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !2

125:                                              ; preds = %118
  call void @llvm.trap() #10
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #10
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #10
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2269", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.2269"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2269", %"class.WTF::StringTypeAdapter.2269"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.2269"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2269"* nonnull %4, i8* %21) #10
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #10
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i8* %30, i8* %31) #10
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.14, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #10
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #10
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #10
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #10
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8* %46, i8* %47) #10
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.14, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #10
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #10
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #10
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2269"*, i8*) unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2268"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2269"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2268"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2269"*, i16*) local_unnamed_addr #1

declare i64 @_ZNK5blink15EncodedFormData11SizeInBytesEv(%"class.blink::EncodedFormData"*) local_unnamed_addr #1

declare void @_ZN5blink17ParsedContentTypeC1ERKN3WTF6StringENS_34ParsedContentHeaderFieldParameters4ModeE(%"class.blink::ParsedContentType"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ParsedContentTypeD2Ev(%"class.blink::ParsedContentType"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ParsedContentType", %"class.blink::ParsedContentType"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %62, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ParsedContentType", %"class.blink::ParsedContentType"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.blink::ParsedContentHeaderFieldParameters", %"class.blink::ParsedContentHeaderFieldParameters"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"*, %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"** %7, align 8
  %9 = icmp eq %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %8, null
  br i1 %9, label %61, label %10, !prof !4

10:                                               ; preds = %5
  %11 = bitcast %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %8 to i8*
  %12 = getelementptr inbounds %"class.blink::ParsedContentType", %"class.blink::ParsedContentType"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %59, label %15, !prof !2

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"struct.blink::ParsedContentHeaderFieldParameters::NameValue", %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %8, i64 %16
  br label %18

18:                                               ; preds = %53, %15
  %19 = phi %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* [ %54, %53 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"struct.blink::ParsedContentHeaderFieldParameters::NameValue", %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %19, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #10
  br label %36

36:                                               ; preds = %35, %32, %18
  %37 = getelementptr inbounds %"struct.blink::ParsedContentHeaderFieldParameters::NameValue", %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %19, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #10
  br label %53

53:                                               ; preds = %52, %49, %36
  %54 = getelementptr inbounds %"struct.blink::ParsedContentHeaderFieldParameters::NameValue", %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %19, i64 1
  %55 = icmp eq %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* %54, %17
  br i1 %55, label %56, label %18

56:                                               ; preds = %53
  store i32 0, i32* %12, align 4
  %57 = bitcast %"class.blink::ParsedContentHeaderFieldParameters"* %6 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %10
  %60 = phi i8* [ %58, %56 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %60) #10
  store %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"* null, %"struct.blink::ParsedContentHeaderFieldParameters::NameValue"** %7, align 8
  br label %61

61:                                               ; preds = %5, %59
  store i8 0, i8* %2, align 8
  br label %62

62:                                               ; preds = %1, %61
  %63 = getelementptr inbounds %"class.blink::ParsedContentType", %"class.blink::ParsedContentType"* %0, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #10
  br label %79

79:                                               ; preds = %62, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_110BeaconBlob9SerializeERNS_15ResourceRequestE(%"class.blink::(anonymous namespace)::BeaconBlob"*, %"class.blink::ResourceRequest"* dereferenceable(1032)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.absl::optional.1465", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEv() #10
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconBlob", %"class.blink::(anonymous namespace)::BeaconBlob"* %0, i64 0, i32 1
  %8 = load %"class.blink::Blob"*, %"class.blink::Blob"** %7, align 8
  %9 = bitcast %"class.blink::Blob"* %8 to i1 (%"class.blink::Blob"*)***
  %10 = load i1 (%"class.blink::Blob"*)**, i1 (%"class.blink::Blob"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::Blob"*)*, i1 (%"class.blink::Blob"*)** %10, i64 12
  %12 = load i1 (%"class.blink::Blob"*)*, i1 (%"class.blink::Blob"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::Blob"* %8) #10
  br i1 %13, label %14, label %21

14:                                               ; preds = %2
  %15 = bitcast %"class.blink::Blob"** %7 to %"class.blink::File"**
  %16 = load %"class.blink::File"*, %"class.blink::File"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::File", %"class.blink::File"* %16, i64 0, i32 3
  %18 = getelementptr inbounds %"class.absl::optional.1465", %"class.absl::optional.1465"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #10
  %19 = tail call i64 @_ZNK5blink4File16LastModifiedTimeEv(%"class.blink::File"* %16) #10
  store i8 1, i8* %18, align 8
  %20 = getelementptr inbounds %"class.absl::optional.1465", %"class.absl::optional.1465"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i64 %19, i64* %20, align 8
  call void @_ZN5blink15EncodedFormData10AppendFileERKN3WTF6StringERKN4absl8optionalIN4base4TimeEEE(%"class.blink::EncodedFormData"* %6, %"class.WTF::String"* dereferenceable(8) %17, %"class.absl::optional.1465"* nonnull dereferenceable(16) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #10
  br label %57

21:                                               ; preds = %2
  %22 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  %23 = load %"class.blink::Blob"*, %"class.blink::Blob"** %7, align 8
  %24 = getelementptr inbounds %"class.blink::Blob", %"class.blink::Blob"* %23, i64 0, i32 3, i32 0
  %25 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %25, i64 0, i32 1
  %27 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %26) #10
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  %29 = load %"class.blink::Blob"*, %"class.blink::Blob"** %7, align 8
  %30 = getelementptr inbounds %"class.blink::Blob", %"class.blink::Blob"* %29, i64 0, i32 3, i32 0
  %31 = load %"class.blink::BlobDataHandle"*, %"class.blink::BlobDataHandle"** %30, align 8
  %32 = icmp eq %"class.blink::BlobDataHandle"* %31, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %21
  %34 = getelementptr inbounds %"class.blink::BlobDataHandle", %"class.blink::BlobDataHandle"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 1 monotonic
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %33
  %38 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17, i64 0, i64 0)) #10
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #10
  br label %40

40:                                               ; preds = %21, %33, %37
  call void @_ZN5blink15EncodedFormData10AppendBlobERKN3WTF6StringE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::EncodedFormData"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::BlobDataHandle"* %31) #10
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #10
  br label %56

56:                                               ; preds = %40, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  br label %57

57:                                               ; preds = %56, %14
  call void @_ZN5blink15ResourceRequest11SetHttpBodyE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::ResourceRequest"* %1, %"class.blink::EncodedFormData"* %6) #10
  %58 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconBlob", %"class.blink::(anonymous namespace)::BeaconBlob"* %0, i64 0, i32 2
  %59 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %74, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %74, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %58, i64 0, i32 0
  %68 = call zeroext i1 @_ZN5blink4cors27IsCorsSafelistedContentTypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %67) #10
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %1, i64 0, i32 0, i32 17
  store i32 2, i32* %70, align 8
  br label %71

71:                                               ; preds = %69, %66
  %72 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %1, i64 0, i32 0
  %73 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kContentTypeE, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %72, %"class.WTF::AtomicString"* dereferenceable(8) %73, %"class.WTF::AtomicString"* dereferenceable(8) %58) #10
  br label %74

74:                                               ; preds = %57, %62, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZNK5blink12_GLOBAL__N_110BeaconBlob4sizeEv(%"class.blink::(anonymous namespace)::BeaconBlob"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconBlob", %"class.blink::(anonymous namespace)::BeaconBlob"* %0, i64 0, i32 1
  %3 = load %"class.blink::Blob"*, %"class.blink::Blob"** %2, align 8
  %4 = bitcast %"class.blink::Blob"* %3 to i64 (%"class.blink::Blob"*)***
  %5 = load i64 (%"class.blink::Blob"*)**, i64 (%"class.blink::Blob"*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%"class.blink::Blob"*)*, i64 (%"class.blink::Blob"*)** %5, i64 9
  %7 = load i64 (%"class.blink::Blob"*)*, i64 (%"class.blink::Blob"*)** %6, align 8
  %8 = tail call i64 %7(%"class.blink::Blob"* %3) #10
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define internal %"class.WTF::StringImpl"* @_ZNK5blink12_GLOBAL__N_110BeaconBlob14GetContentTypeEv(%"class.blink::(anonymous namespace)::BeaconBlob"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::BeaconBlob", %"class.blink::(anonymous namespace)::BeaconBlob"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #10
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %10
  tail call void @llvm.trap() #10
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEv() local_unnamed_addr #1

declare void @_ZN5blink15EncodedFormData10AppendFileERKN3WTF6StringERKN4absl8optionalIN4base4TimeEEE(%"class.blink::EncodedFormData"*, %"class.WTF::String"* dereferenceable(8), %"class.absl::optional.1465"* dereferenceable(16)) local_unnamed_addr #1

declare i64 @_ZNK5blink4File16LastModifiedTimeEv(%"class.blink::File"*) local_unnamed_addr #1

declare void @_ZN5blink15EncodedFormData10AppendBlobERKN3WTF6StringE13scoped_refptrINS_14BlobDataHandleEE(%"class.blink::EncodedFormData"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::BlobDataHandle"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink4cors27IsCorsSafelistedContentTypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #10
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #10
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #10
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #10
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #10
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #10
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
