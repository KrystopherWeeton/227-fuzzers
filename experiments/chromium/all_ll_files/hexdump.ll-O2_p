; ModuleID = '../../third_party/boringssl/src/crypto/bio/hexdump.c'
source_filename = "../../third_party/boringssl/src/crypto/bio/hexdump.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct.hexdump_ctx = type { %struct.bio_st*, [18 x i8], i32, i64, i32 }

@hexbyte.hextable = internal unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @BIO_hexdump(%struct.bio_st*, i8* nocapture readonly, i64, i32) local_unnamed_addr #0 {
  %5 = alloca [10 x i8], align 1
  %6 = alloca [5 x i8], align 4
  %7 = alloca %struct.hexdump_ctx, align 8
  %8 = bitcast %struct.hexdump_ctx* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #3
  %9 = getelementptr inbounds %struct.hexdump_ctx, %struct.hexdump_ctx* %7, i64 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 40, i1 false) #3
  %10 = getelementptr inbounds %struct.hexdump_ctx, %struct.hexdump_ctx* %7, i64 0, i32 0
  store %struct.bio_st* %0, %struct.bio_st** %10, align 8
  %11 = getelementptr inbounds %struct.hexdump_ctx, %struct.hexdump_ctx* %7, i64 0, i32 4
  store i32 %3, i32* %11, align 8
  %12 = getelementptr inbounds [10 x i8], [10 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %12) #3
  %13 = getelementptr inbounds [10 x i8], [10 x i8]* %5, i64 0, i64 1
  %14 = getelementptr inbounds [10 x i8], [10 x i8]* %5, i64 0, i64 2
  %15 = getelementptr inbounds [10 x i8], [10 x i8]* %5, i64 0, i64 3
  %16 = getelementptr inbounds [10 x i8], [10 x i8]* %5, i64 0, i64 4
  %17 = getelementptr inbounds [10 x i8], [10 x i8]* %5, i64 0, i64 5
  %18 = getelementptr inbounds [10 x i8], [10 x i8]* %5, i64 0, i64 6
  %19 = getelementptr inbounds [10 x i8], [10 x i8]* %5, i64 0, i64 7
  %20 = getelementptr inbounds [10 x i8], [10 x i8]* %5, i64 0, i64 8
  %21 = getelementptr inbounds [10 x i8], [10 x i8]* %5, i64 0, i64 9
  %22 = getelementptr inbounds %struct.hexdump_ctx, %struct.hexdump_ctx* %7, i64 0, i32 1, i64 16
  %23 = icmp eq i64 %2, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %12, i8 -86, i64 10, i1 false) #3
  br i1 %23, label %117, label %24

24:                                               ; preds = %4
  %25 = getelementptr inbounds %struct.hexdump_ctx, %struct.hexdump_ctx* %7, i64 0, i32 2
  %26 = getelementptr inbounds %struct.hexdump_ctx, %struct.hexdump_ctx* %7, i64 0, i32 3
  %27 = getelementptr inbounds %struct.hexdump_ctx, %struct.hexdump_ctx* %7, i64 0, i32 1, i64 17
  %28 = getelementptr inbounds %struct.hexdump_ctx, %struct.hexdump_ctx* %7, i64 0, i32 1, i64 0
  br label %29

29:                                               ; preds = %112, %24
  %30 = phi i32 [ 0, %24 ], [ %113, %112 ]
  %31 = phi i64 [ 0, %24 ], [ %114, %112 ]
  %32 = icmp eq i32 %30, 0
  br i1 %32, label %33, label %74

33:                                               ; preds = %29
  %34 = load %struct.bio_st*, %struct.bio_st** %10, align 8
  %35 = load i32, i32* %11, align 8
  %36 = call i32 @BIO_indent(%struct.bio_st* %34, i32 %35, i32 -1) #3
  %37 = load i64, i64* %26, align 8
  %38 = lshr i64 %37, 24
  %39 = lshr i64 %37, 28
  %40 = and i64 %39, 15
  %41 = getelementptr inbounds [17 x i8], [17 x i8]* @hexbyte.hextable, i64 0, i64 %40
  %42 = load i8, i8* %41, align 1
  store i8 %42, i8* %12, align 1
  %43 = and i64 %38, 15
  %44 = getelementptr inbounds [17 x i8], [17 x i8]* @hexbyte.hextable, i64 0, i64 %43
  %45 = load i8, i8* %44, align 1
  store i8 %45, i8* %13, align 1
  %46 = lshr i64 %37, 16
  %47 = lshr i64 %37, 20
  %48 = and i64 %47, 15
  %49 = getelementptr inbounds [17 x i8], [17 x i8]* @hexbyte.hextable, i64 0, i64 %48
  %50 = load i8, i8* %49, align 1
  store i8 %50, i8* %14, align 1
  %51 = and i64 %46, 15
  %52 = getelementptr inbounds [17 x i8], [17 x i8]* @hexbyte.hextable, i64 0, i64 %51
  %53 = load i8, i8* %52, align 1
  store i8 %53, i8* %15, align 1
  %54 = lshr i64 %37, 8
  %55 = lshr i64 %37, 12
  %56 = and i64 %55, 15
  %57 = getelementptr inbounds [17 x i8], [17 x i8]* @hexbyte.hextable, i64 0, i64 %56
  %58 = load i8, i8* %57, align 1
  store i8 %58, i8* %16, align 1
  %59 = and i64 %54, 15
  %60 = getelementptr inbounds [17 x i8], [17 x i8]* @hexbyte.hextable, i64 0, i64 %59
  %61 = load i8, i8* %60, align 1
  store i8 %61, i8* %17, align 1
  %62 = lshr i64 %37, 4
  %63 = and i64 %62, 15
  %64 = getelementptr inbounds [17 x i8], [17 x i8]* @hexbyte.hextable, i64 0, i64 %63
  %65 = load i8, i8* %64, align 1
  store i8 %65, i8* %18, align 1
  %66 = and i64 %37, 15
  %67 = getelementptr inbounds [17 x i8], [17 x i8]* @hexbyte.hextable, i64 0, i64 %66
  %68 = load i8, i8* %67, align 1
  store i8 %68, i8* %19, align 1
  store i8 32, i8* %21, align 1
  store i8 32, i8* %20, align 1
  %69 = load %struct.bio_st*, %struct.bio_st** %10, align 8
  %70 = call i32 @BIO_write(%struct.bio_st* %69, i8* nonnull %12, i32 10) #3
  %71 = icmp slt i32 %70, 0
  br i1 %71, label %116, label %72

72:                                               ; preds = %33
  %73 = load i32, i32* %25, align 4
  br label %74

74:                                               ; preds = %72, %29
  %75 = phi i32 [ %73, %72 ], [ %30, %29 ]
  %76 = getelementptr inbounds i8, i8* %1, i64 %31
  %77 = load i8, i8* %76, align 1
  %78 = zext i8 %77 to i32
  %79 = lshr i32 %78, 4
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds [17 x i8], [17 x i8]* @hexbyte.hextable, i64 0, i64 %80
  %82 = load i8, i8* %81, align 1
  store i8 %82, i8* %12, align 1
  %83 = and i32 %78, 15
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds [17 x i8], [17 x i8]* @hexbyte.hextable, i64 0, i64 %84
  %86 = load i8, i8* %85, align 1
  store i8 %86, i8* %13, align 1
  store i8 32, i8* %14, align 1
  switch i32 %75, label %89 [
    i32 7, label %87
    i32 15, label %88
  ]

87:                                               ; preds = %74
  store i8 32, i8* %15, align 1
  br label %89

88:                                               ; preds = %74
  store i8 32, i8* %15, align 1
  store i8 124, i8* %16, align 1
  br label %89

89:                                               ; preds = %88, %87, %74
  %90 = phi i32 [ 4, %87 ], [ 5, %88 ], [ 3, %74 ]
  %91 = load %struct.bio_st*, %struct.bio_st** %10, align 8
  %92 = call i32 @BIO_write(%struct.bio_st* %91, i8* nonnull %12, i32 %90) #3
  %93 = icmp slt i32 %92, 0
  br i1 %93, label %116, label %94

94:                                               ; preds = %89
  %95 = load i8, i8* %76, align 1
  %96 = add i8 %95, -32
  %97 = icmp ugt i8 %96, 94
  %98 = select i1 %97, i8 46, i8 %95
  %99 = load i32, i32* %25, align 4
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds %struct.hexdump_ctx, %struct.hexdump_ctx* %7, i64 0, i32 1, i64 %100
  store i8 %98, i8* %101, align 1
  %102 = load i32, i32* %25, align 4
  %103 = add i32 %102, 1
  store i32 %103, i32* %25, align 4
  %104 = load i64, i64* %26, align 8
  %105 = add i64 %104, 1
  store i64 %105, i64* %26, align 8
  %106 = icmp eq i32 %103, 16
  br i1 %106, label %107, label %112

107:                                              ; preds = %94
  store i8 124, i8* %22, align 8
  store i8 10, i8* %27, align 1
  %108 = load %struct.bio_st*, %struct.bio_st** %10, align 8
  %109 = call i32 @BIO_write(%struct.bio_st* %108, i8* %28, i32 18) #3
  %110 = icmp slt i32 %109, 0
  br i1 %110, label %116, label %111

111:                                              ; preds = %107
  store i32 0, i32* %25, align 4
  br label %112

112:                                              ; preds = %111, %94
  %113 = phi i32 [ %103, %94 ], [ 0, %111 ]
  %114 = add nuw i64 %31, 1
  %115 = icmp eq i64 %114, %2
  br i1 %115, label %117, label %29

116:                                              ; preds = %107, %89, %33
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %12) #3
  br label %153

117:                                              ; preds = %112, %4
  %118 = phi i32 [ 0, %4 ], [ %113, %112 ]
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %12) #3
  %119 = getelementptr inbounds %struct.hexdump_ctx, %struct.hexdump_ctx* %7, i64 0, i32 2
  %120 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %120) #3
  %121 = icmp eq i32 %118, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %120, i8 -86, i64 5, i1 false) #3
  br i1 %121, label %122, label %123

122:                                              ; preds = %117
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %120) #3
  br label %153

123:                                              ; preds = %117
  %124 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 4
  %125 = bitcast [5 x i8]* %6 to i32*
  store i32 538976288, i32* %125, align 4
  store i8 124, i8* %124, align 4
  %126 = icmp ult i32 %118, 16
  br i1 %126, label %127, label %141

127:                                              ; preds = %123, %137
  %128 = phi i32 [ %139, %137 ], [ %118, %123 ]
  %129 = icmp eq i32 %128, 15
  %130 = select i1 %129, i32 5, i32 3
  %131 = icmp eq i32 %128, 7
  %132 = select i1 %131, i32 4, i32 %130
  %133 = load %struct.bio_st*, %struct.bio_st** %10, align 8
  %134 = call i32 @BIO_write(%struct.bio_st* %133, i8* nonnull %120, i32 %132) #3
  %135 = icmp slt i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %127
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %120) #3
  br label %152

137:                                              ; preds = %127
  %138 = load i32, i32* %119, align 4
  %139 = add i32 %138, 1
  store i32 %139, i32* %119, align 4
  %140 = icmp ult i32 %139, 16
  br i1 %140, label %127, label %141

141:                                              ; preds = %137, %123
  %142 = zext i32 %118 to i64
  %143 = getelementptr inbounds %struct.hexdump_ctx, %struct.hexdump_ctx* %7, i64 0, i32 1, i64 %142
  store i8 124, i8* %143, align 1
  %144 = add i32 %118, 1
  %145 = zext i32 %144 to i64
  %146 = getelementptr inbounds %struct.hexdump_ctx, %struct.hexdump_ctx* %7, i64 0, i32 1, i64 %145
  store i8 10, i8* %146, align 1
  %147 = load %struct.bio_st*, %struct.bio_st** %10, align 8
  %148 = getelementptr inbounds %struct.hexdump_ctx, %struct.hexdump_ctx* %7, i64 0, i32 1, i64 0
  %149 = add i32 %118, 2
  %150 = call i32 @BIO_write(%struct.bio_st* %147, i8* %148, i32 %149) #3
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %120) #3
  %151 = icmp slt i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %136, %141
  br label %153

153:                                              ; preds = %152, %141, %122, %116
  %154 = phi i32 [ 0, %116 ], [ 0, %152 ], [ 1, %141 ], [ 1, %122 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #3
  ret i32 %154
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @BIO_indent(%struct.bio_st*, i32, i32) local_unnamed_addr #2

declare i32 @BIO_write(%struct.bio_st*, i8*, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
