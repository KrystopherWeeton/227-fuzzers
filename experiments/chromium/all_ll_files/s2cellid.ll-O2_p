; ModuleID = '../../third_party/s2cellid/src/s2/s2cellid.cc'
source_filename = "../../third_party/s2cellid/src/s2/s2cellid.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::once_flag" = type { i64 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%class.S2CellId = type { i64 }
%class.Vector3 = type { [3 x double] }
%class.S2LatLng = type { %class.Vector2 }
%class.Vector2 = type { [2 x double] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %class.anon* }
%class.anon = type { i8 }
%"class.std::__1::__call_once_param" = type { %"class.std::__1::tuple"* }
%class.R2Rect = type { [2 x %class.R1Interval] }
%class.R1Interval = type { %class.Vector2 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.S2CellId*, %class.S2CellId*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.S2CellId* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZN8S2CellId9kFaceBitsE = hidden local_unnamed_addr constant i32 3, align 4
@_ZN8S2CellId9kNumFacesE = hidden local_unnamed_addr constant i32 6, align 4
@_ZN8S2CellId9kMaxLevelE = hidden local_unnamed_addr constant i32 30, align 4
@_ZN8S2CellId8kPosBitsE = hidden local_unnamed_addr constant i32 61, align 4
@_ZN8S2CellId8kMaxSizeE = hidden local_unnamed_addr constant i32 1073741824, align 4
@_ZL10lookup_pos = internal unnamed_addr global [1024 x i16] zeroinitializer, align 16
@_ZL9lookup_ij = internal unnamed_addr global [1024 x i16] zeroinitializer, align 16
@.str.1 = private unnamed_addr constant [16 x i8] c"Invalid: %016lu\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%d/\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"0123\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 1
@_ZL4flag = internal global %"struct.std::__1::once_flag" zeroinitializer, align 8
@_ZN2S28internal8kPosToIJE = external local_unnamed_addr constant [4 x [4 x i32]], align 16
@_ZN2S28internal17kPosToOrientationE = external local_unnamed_addr constant [4 x i32], align 16
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN8S2CellIdC1ERK7Vector3IdE = hidden unnamed_addr alias void (%class.S2CellId*, %class.Vector3*), void (%class.S2CellId*, %class.Vector3*)* @_ZN8S2CellIdC2ERK7Vector3IdE
@_ZN8S2CellIdC1ERK8S2LatLng = hidden unnamed_addr alias void (%class.S2CellId*, %class.S2LatLng*), void (%class.S2CellId*, %class.S2LatLng*)* @_ZN8S2CellIdC2ERK8S2LatLng

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK8S2CellId7advanceEl(%class.S2CellId* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  %4 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = sub i64 0, %5
  br i1 %3, label %31, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @llvm.cttz.i64(i64 %5, i1 true) #14, !range !2
  %9 = trunc i64 %8 to i32
  %10 = or i32 %9, 1
  %11 = icmp slt i64 %1, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = lshr i64 %5, %13
  %15 = sub nsw i64 0, %14
  %16 = icmp sgt i64 %15, %1
  %17 = select i1 %16, i64 %15, i64 %1
  br label %26

18:                                               ; preds = %7
  %19 = and i64 %5, %6
  %20 = sub i64 -4611686018427387904, %5
  %21 = add i64 %20, %19
  %22 = zext i32 %10 to i64
  %23 = lshr i64 %21, %22
  %24 = icmp slt i64 %23, %1
  %25 = select i1 %24, i64 %23, i64 %1
  br label %26

26:                                               ; preds = %18, %12
  %27 = phi i64 [ %22, %18 ], [ %13, %12 ]
  %28 = phi i64 [ %25, %18 ], [ %17, %12 ]
  %29 = shl i64 %28, %27
  %30 = add i64 %29, %5
  br label %31

31:                                               ; preds = %2, %26
  %32 = phi i64 [ %30, %26 ], [ %5, %2 ]
  ret i64 %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK8S2CellId19distance_from_beginEv(%class.S2CellId* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %0, i64 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = tail call i64 @llvm.cttz.i64(i64 %3, i1 true) #14, !range !2
  %5 = or i64 %4, 1
  %6 = lshr i64 %3, %5
  ret i64 %6
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK8S2CellId12advance_wrapEl(%class.S2CellId* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i64 %1, 0
  %4 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  br i1 %3, label %38, label %6

6:                                                ; preds = %2
  %7 = tail call i64 @llvm.cttz.i64(i64 %5, i1 true) #14, !range !2
  %8 = trunc i64 %7 to i32
  %9 = or i32 %8, 1
  %10 = icmp slt i64 %1, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = lshr i64 %5, %12
  %14 = sub nsw i64 0, %13
  %15 = icmp sgt i64 %14, %1
  br i1 %15, label %16, label %33

16:                                               ; preds = %11
  %17 = lshr i64 -4611686018427387904, %12
  %18 = srem i64 %1, %17
  %19 = icmp slt i64 %18, %14
  %20 = select i1 %19, i64 %17, i64 0
  %21 = add nsw i64 %20, %18
  br label %33

22:                                               ; preds = %6
  %23 = sub i64 -4611686018427387904, %5
  %24 = zext i32 %9 to i64
  %25 = lshr i64 %23, %24
  %26 = icmp slt i64 %25, %1
  br i1 %26, label %27, label %33

27:                                               ; preds = %22
  %28 = lshr i64 -4611686018427387904, %24
  %29 = srem i64 %1, %28
  %30 = icmp sgt i64 %29, %25
  %31 = select i1 %30, i64 %28, i64 0
  %32 = sub nsw i64 %29, %31
  br label %33

33:                                               ; preds = %22, %27, %11, %16
  %34 = phi i64 [ %24, %22 ], [ %24, %27 ], [ %12, %11 ], [ %12, %16 ]
  %35 = phi i64 [ %1, %22 ], [ %32, %27 ], [ %1, %11 ], [ %21, %16 ]
  %36 = shl i64 %35, %34
  %37 = add i64 %36, %5
  br label %38

38:                                               ; preds = %2, %33
  %39 = phi i64 [ %37, %33 ], [ %5, %2 ]
  ret i64 %39
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK8S2CellId12maximum_tileES_(%class.S2CellId* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = sub i64 0, %4
  %6 = and i64 %4, %5
  %7 = add i64 %4, 1
  %8 = sub i64 %7, %6
  %9 = sub i64 0, %1
  %10 = and i64 %9, %1
  %11 = add i64 %1, 1
  %12 = sub i64 %11, %10
  %13 = icmp ult i64 %8, %12
  br i1 %13, label %14, label %50

14:                                               ; preds = %2
  %15 = add i64 %4, -1
  %16 = add i64 %15, %6
  %17 = icmp ult i64 %16, %1
  br i1 %17, label %30, label %18

18:                                               ; preds = %14, %18
  %19 = phi i64 [ %24, %18 ], [ %4, %14 ]
  %20 = sub i64 0, %19
  %21 = and i64 %19, %20
  %22 = lshr i64 %21, 2
  %23 = mul i64 %22, -3
  %24 = add i64 %23, %19
  %25 = sub i64 0, %24
  %26 = and i64 %24, %25
  %27 = add i64 %24, -1
  %28 = add i64 %27, %26
  %29 = icmp ult i64 %28, %1
  br i1 %29, label %50, label %18

30:                                               ; preds = %14, %46
  %31 = phi i64 [ %40, %46 ], [ %4, %14 ]
  %32 = and i64 %31, 1152921504606846975
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %50, label %34

34:                                               ; preds = %30
  %35 = sub i64 0, %31
  %36 = and i64 %31, %35
  %37 = shl i64 %36, 2
  %38 = sub i64 0, %37
  %39 = and i64 %31, %38
  %40 = or i64 %39, %37
  %41 = sub i64 0, %40
  %42 = and i64 %40, %41
  %43 = or i64 %40, 1
  %44 = sub i64 %43, %42
  %45 = icmp eq i64 %44, %8
  br i1 %45, label %46, label %50

46:                                               ; preds = %34
  %47 = add i64 %40, -1
  %48 = add i64 %47, %42
  %49 = icmp ult i64 %48, %1
  br i1 %49, label %30, label %50

50:                                               ; preds = %18, %46, %34, %30, %2
  %51 = phi i64 [ %1, %2 ], [ %31, %30 ], [ %31, %34 ], [ %31, %46 ], [ %24, %18 ]
  ret i64 %51
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK8S2CellId22GetCommonAncestorLevelES_(%class.S2CellId* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %0, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = xor i64 %4, %1
  %6 = sub i64 0, %4
  %7 = and i64 %4, %6
  %8 = sub i64 0, %1
  %9 = and i64 %8, %1
  %10 = icmp ult i64 %7, %9
  %11 = select i1 %10, i64 %9, i64 %7
  %12 = icmp ult i64 %5, %11
  %13 = select i1 %12, i64 %11, i64 %5
  %14 = tail call i64 @llvm.ctlz.i64(i64 %13, i1 true) #14, !range !2
  %15 = trunc i64 %14 to i32
  %16 = xor i32 %15, 63
  %17 = sub nsw i32 60, %16
  %18 = icmp sgt i32 %17, -1
  %19 = select i1 %18, i32 %17, i32 -1
  %20 = ashr i32 %19, 1
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8S2CellId7ToTokenEv(%"class.std::__1::basic_string"* noalias sret, %class.S2CellId* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %1, i64 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 1, i8* %8, align 1
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 88, i8* %9, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 1
  store i8 0, i8* %10, align 1
  br label %80

11:                                               ; preds = %2
  %12 = tail call i64 @llvm.cttz.i64(i64 %4, i1 true) #14, !range !2
  %13 = lshr i64 %12, 2
  %14 = and i64 %12, 60
  %15 = lshr i64 %4, %14
  %16 = sub nuw nsw i64 16, %13
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 -86, i64 24, i1 false) #14, !alias.scope !3
  %19 = icmp ult i64 %16, 23
  br i1 %19, label %28, label %20

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = sub nuw nsw i64 32, %13
  %24 = and i64 %23, 48
  %25 = tail call i8* @_Znwm(i64 %24) #15
  store i8* %25, i8** %17, align 8, !alias.scope !3
  %26 = or i64 %24, -9223372036854775808
  store i64 %26, i64* %21, align 8, !alias.scope !3
  store i64 %16, i64* %22, align 8, !alias.scope !3
  %27 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %34

28:                                               ; preds = %11
  %29 = trunc i64 %16 to i8
  %30 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  store i8 %29, i8* %31, align 1, !alias.scope !3
  %32 = icmp eq i64 %16, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %28
  store i8 0, i8* %18, align 8, !alias.scope !3
  br label %80

34:                                               ; preds = %28, %20
  %35 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %30, %28 ], [ %27, %20 ]
  %36 = phi i8* [ %18, %28 ], [ %25, %20 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %36, i8 32, i64 %16, i1 false) #14
  %37 = getelementptr inbounds i8, i8* %36, i64 %16
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %39 = and i64 %12, 4
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = xor i64 %13, 15
  %43 = and i64 %15, 15
  %44 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.4, i64 0, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = load i8, i8* %38, align 1, !alias.scope !3
  %47 = icmp slt i8 %46, 0
  %48 = load i8*, i8** %17, align 8, !alias.scope !3
  %49 = select i1 %47, i8* %48, i8* %18
  %50 = getelementptr inbounds i8, i8* %49, i64 %42
  store i8 %45, i8* %50, align 1
  %51 = lshr i64 %15, 4
  br label %52

52:                                               ; preds = %34, %41
  %53 = phi i64 [ %16, %34 ], [ %42, %41 ]
  %54 = phi i64 [ %15, %34 ], [ %51, %41 ]
  %55 = icmp eq i64 %13, 15
  br i1 %55, label %80, label %56

56:                                               ; preds = %52, %56
  %57 = phi i64 [ %69, %56 ], [ %53, %52 ]
  %58 = phi i64 [ %78, %56 ], [ %54, %52 ]
  %59 = add i64 %57, -1
  %60 = and i64 %58, 15
  %61 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.4, i64 0, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = load i8, i8* %38, align 1, !alias.scope !3
  %64 = icmp slt i8 %63, 0
  %65 = load i8*, i8** %17, align 8, !alias.scope !3
  %66 = select i1 %64, i8* %65, i8* %18
  %67 = getelementptr inbounds i8, i8* %66, i64 %59
  store i8 %62, i8* %67, align 1
  %68 = lshr i64 %58, 4
  %69 = add i64 %57, -2
  %70 = and i64 %68, 15
  %71 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.4, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = load i8, i8* %38, align 1, !alias.scope !3
  %74 = icmp slt i8 %73, 0
  %75 = load i8*, i8** %17, align 8, !alias.scope !3
  %76 = select i1 %74, i8* %75, i8* %18
  %77 = getelementptr inbounds i8, i8* %76, i64 %69
  store i8 %72, i8* %77, align 1
  %78 = lshr i64 %58, 8
  %79 = icmp eq i64 %69, 0
  br i1 %79, label %80, label %56

80:                                               ; preds = %52, %56, %33, %6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN8S2CellId9FromTokenEPKcm(i8* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %3 = add i64 %1, -1
  %4 = icmp ult i64 %3, 16
  br i1 %4, label %5, label %29

5:                                                ; preds = %2, %20
  %6 = phi i64 [ %26, %20 ], [ 0, %2 ]
  %7 = phi i32 [ %27, %20 ], [ 60, %2 ]
  %8 = phi i64 [ %25, %20 ], [ 0, %2 ]
  %9 = getelementptr inbounds i8, i8* %0, i64 %6
  %10 = load i8, i8* %9, align 1
  %11 = sext i8 %10 to i64
  %12 = add i8 %10, -48
  %13 = icmp ult i8 %12, 10
  br i1 %13, label %20, label %14

14:                                               ; preds = %5
  %15 = add i8 %10, -97
  %16 = icmp ult i8 %15, 6
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = add i8 %10, -65
  %19 = icmp ult i8 %18, 6
  br i1 %19, label %20, label %29

20:                                               ; preds = %17, %14, %5
  %21 = phi i64 [ -48, %5 ], [ -87, %14 ], [ -55, %17 ]
  %22 = add nsw i64 %21, %11
  %23 = zext i32 %7 to i64
  %24 = shl i64 %22, %23
  %25 = or i64 %24, %8
  %26 = add nuw i64 %6, 1
  %27 = add nsw i32 %7, -4
  %28 = icmp ult i64 %26, %1
  br i1 %28, label %5, label %29

29:                                               ; preds = %17, %20, %2
  %30 = phi i64 [ 0, %2 ], [ 0, %17 ], [ %25, %20 ]
  ret i64 %30
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN8S2CellId9FromTokenERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %2 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %3 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %2, i64 0, i32 1, i32 0
  %4 = load i8, i8* %3, align 1
  %5 = icmp slt i8 %4, 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %11 = zext i8 %4 to i64
  %12 = select i1 %5, i8* %7, i8* %10
  %13 = select i1 %5, i64 %9, i64 %11
  %14 = add i64 %13, -1
  %15 = icmp ult i64 %14, 16
  br i1 %15, label %16, label %40

16:                                               ; preds = %1, %31
  %17 = phi i64 [ %37, %31 ], [ 0, %1 ]
  %18 = phi i32 [ %38, %31 ], [ 60, %1 ]
  %19 = phi i64 [ %36, %31 ], [ 0, %1 ]
  %20 = getelementptr inbounds i8, i8* %12, i64 %17
  %21 = load i8, i8* %20, align 1
  %22 = sext i8 %21 to i64
  %23 = add i8 %21, -48
  %24 = icmp ult i8 %23, 10
  br i1 %24, label %31, label %25

25:                                               ; preds = %16
  %26 = add i8 %21, -97
  %27 = icmp ult i8 %26, 6
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i8 %21, -65
  %30 = icmp ult i8 %29, 6
  br i1 %30, label %31, label %40

31:                                               ; preds = %28, %25, %16
  %32 = phi i64 [ -48, %16 ], [ -87, %25 ], [ -55, %28 ]
  %33 = add nsw i64 %32, %22
  %34 = zext i32 %18 to i64
  %35 = shl i64 %33, %34
  %36 = or i64 %35, %19
  %37 = add nuw i64 %17, 1
  %38 = add nsw i32 %18, -4
  %39 = icmp ult i64 %37, %13
  br i1 %39, label %16, label %40

40:                                               ; preds = %28, %31, %1
  %41 = phi i64 [ 0, %1 ], [ %36, %31 ], [ 0, %28 ]
  ret i64 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8S2CellId10FromFaceIJEiii(i32, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::__call_once_param", align 8
  %6 = alloca %class.anon, align 1
  %7 = getelementptr inbounds %class.anon, %class.anon* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #14
  %8 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::once_flag", %"struct.std::__1::once_flag"* @_ZL4flag, i64 0, i32 0) acquire, align 8
  %9 = icmp eq i64 %8, -1
  br i1 %9, label %15, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %class.anon* %6, %class.anon** %12, align 8
  %13 = bitcast %"class.std::__1::__call_once_param"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.std::__1::__call_once_param", %"class.std::__1::__call_once_param"* %5, i64 0, i32 0
  store %"class.std::__1::tuple"* %4, %"class.std::__1::tuple"** %14, align 8
  call void @_ZNSt3__111__call_onceERVmPvPFvS2_E(i64* dereferenceable(8) getelementptr inbounds (%"struct.std::__1::once_flag", %"struct.std::__1::once_flag"* @_ZL4flag, i64 0, i32 0), i8* nonnull %13, void (i8*)* nonnull @_ZNSt3__117__call_once_proxyINS_5tupleIJOZL9MaybeInitvEUlvE_EEEEEvPv) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  br label %15

15:                                               ; preds = %3, %10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #14
  %16 = zext i32 %0 to i64
  %17 = shl i64 %16, 60
  %18 = and i32 %0, 1
  %19 = lshr i32 %1, 28
  %20 = shl nuw nsw i32 %19, 6
  %21 = or i32 %20, %18
  %22 = lshr i32 %2, 28
  %23 = shl nuw nsw i32 %22, 2
  %24 = or i32 %21, %23
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds [1024 x i16], [1024 x i16]* @_ZL10lookup_pos, i64 0, i64 %25
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i64
  %29 = lshr i64 %28, 2
  %30 = shl i64 %29, 56
  %31 = or i64 %30, %17
  %32 = and i64 %28, 3
  %33 = lshr i32 %1, 18
  %34 = and i32 %33, 960
  %35 = lshr i32 %2, 22
  %36 = and i32 %35, 60
  %37 = or i32 %36, %34
  %38 = zext i32 %37 to i64
  %39 = or i64 %32, %38
  %40 = getelementptr inbounds [1024 x i16], [1024 x i16]* @_ZL10lookup_pos, i64 0, i64 %39
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i64
  %43 = lshr i64 %42, 2
  %44 = shl nuw nsw i64 %43, 48
  %45 = or i64 %31, %44
  %46 = and i64 %42, 3
  %47 = lshr i32 %1, 14
  %48 = and i32 %47, 960
  %49 = lshr i32 %2, 18
  %50 = and i32 %49, 60
  %51 = or i32 %50, %48
  %52 = zext i32 %51 to i64
  %53 = or i64 %46, %52
  %54 = getelementptr inbounds [1024 x i16], [1024 x i16]* @_ZL10lookup_pos, i64 0, i64 %53
  %55 = load i16, i16* %54, align 2
  %56 = zext i16 %55 to i64
  %57 = lshr i64 %56, 2
  %58 = shl nuw nsw i64 %57, 40
  %59 = or i64 %45, %58
  %60 = and i64 %56, 3
  %61 = lshr i32 %1, 10
  %62 = and i32 %61, 960
  %63 = lshr i32 %2, 14
  %64 = and i32 %63, 60
  %65 = or i32 %64, %62
  %66 = zext i32 %65 to i64
  %67 = or i64 %60, %66
  %68 = getelementptr inbounds [1024 x i16], [1024 x i16]* @_ZL10lookup_pos, i64 0, i64 %67
  %69 = load i16, i16* %68, align 2
  %70 = zext i16 %69 to i64
  %71 = lshr i64 %70, 2
  %72 = shl nuw nsw i64 %71, 32
  %73 = or i64 %59, %72
  %74 = and i64 %70, 3
  %75 = lshr i32 %1, 6
  %76 = and i32 %75, 960
  %77 = lshr i32 %2, 10
  %78 = and i32 %77, 60
  %79 = or i32 %78, %76
  %80 = zext i32 %79 to i64
  %81 = or i64 %74, %80
  %82 = getelementptr inbounds [1024 x i16], [1024 x i16]* @_ZL10lookup_pos, i64 0, i64 %81
  %83 = load i16, i16* %82, align 2
  %84 = zext i16 %83 to i64
  %85 = lshr i64 %84, 2
  %86 = shl nuw nsw i64 %85, 24
  %87 = or i64 %73, %86
  %88 = and i64 %84, 3
  %89 = lshr i32 %1, 2
  %90 = and i32 %89, 960
  %91 = lshr i32 %2, 6
  %92 = and i32 %91, 60
  %93 = or i32 %92, %90
  %94 = zext i32 %93 to i64
  %95 = or i64 %88, %94
  %96 = getelementptr inbounds [1024 x i16], [1024 x i16]* @_ZL10lookup_pos, i64 0, i64 %95
  %97 = load i16, i16* %96, align 2
  %98 = zext i16 %97 to i64
  %99 = lshr i64 %98, 2
  %100 = shl nuw nsw i64 %99, 16
  %101 = or i64 %87, %100
  %102 = and i64 %98, 3
  %103 = shl i32 %1, 2
  %104 = and i32 %103, 960
  %105 = lshr i32 %2, 2
  %106 = and i32 %105, 60
  %107 = or i32 %106, %104
  %108 = zext i32 %107 to i64
  %109 = or i64 %102, %108
  %110 = getelementptr inbounds [1024 x i16], [1024 x i16]* @_ZL10lookup_pos, i64 0, i64 %109
  %111 = load i16, i16* %110, align 2
  %112 = zext i16 %111 to i64
  %113 = lshr i64 %112, 2
  %114 = shl nuw nsw i64 %113, 8
  %115 = or i64 %101, %114
  %116 = and i64 %112, 3
  %117 = shl i32 %1, 6
  %118 = and i32 %117, 960
  %119 = shl i32 %2, 2
  %120 = and i32 %119, 60
  %121 = or i32 %120, %118
  %122 = zext i32 %121 to i64
  %123 = or i64 %116, %122
  %124 = getelementptr inbounds [1024 x i16], [1024 x i16]* @_ZL10lookup_pos, i64 0, i64 %123
  %125 = load i16, i16* %124, align 2
  %126 = lshr i16 %125, 2
  %127 = zext i16 %126 to i64
  %128 = or i64 %115, %127
  %129 = shl i64 %128, 1
  %130 = or i64 %129, 1
  ret i64 %130
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8S2CellIdC2ERK7Vector3IdE(%class.S2CellId* nocapture, %class.Vector3* nocapture readonly dereferenceable(24)) unnamed_addr #2 align 2 {
  %3 = bitcast %class.Vector3* %1 to <2 x double>*
  %4 = load <2 x double>, <2 x double>* %3, align 8, !noalias !6
  %5 = call <2 x double> @llvm.fabs.v2f64(<2 x double> %4)
  %6 = getelementptr inbounds %class.Vector3, %class.Vector3* %1, i64 0, i32 0, i64 2
  %7 = load double, double* %6, align 8, !noalias !6
  %8 = tail call double @llvm.fabs.f64(double %7) #14
  %9 = extractelement <2 x double> %5, i32 0
  %10 = extractelement <2 x double> %5, i32 1
  %11 = fcmp ogt double %9, %10
  %12 = fcmp ogt double %9, %8
  %13 = select i1 %12, i32 0, i32 2
  %14 = fcmp ogt double %10, %8
  %15 = select i1 %14, i32 1, i32 2
  %16 = select i1 %11, i32 %13, i32 %15
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %class.Vector3, %class.Vector3* %1, i64 0, i32 0, i64 %17
  %19 = load double, double* %18, align 8
  %20 = fcmp olt double %19, 0.000000e+00
  %21 = add nuw nsw i32 %16, 3
  %22 = select i1 %20, i32 %21, i32 %16
  switch i32 %22, label %53 [
    i32 0, label %23
    i32 1, label %27
    i32 2, label %34
    i32 3, label %40
    i32 4, label %46
  ]

23:                                               ; preds = %2
  %24 = insertelement <2 x double> %4, double %7, i32 0
  %25 = shufflevector <2 x double> %4, <2 x double> undef, <2 x i32> zeroinitializer
  %26 = fdiv <2 x double> %24, %25
  br label %58

27:                                               ; preds = %2
  %28 = extractelement <2 x double> %4, i32 0
  %29 = fsub double -0.000000e+00, %28
  %30 = insertelement <2 x double> undef, double %7, i32 0
  %31 = insertelement <2 x double> %30, double %29, i32 1
  %32 = shufflevector <2 x double> %4, <2 x double> undef, <2 x i32> <i32 1, i32 1>
  %33 = fdiv <2 x double> %31, %32
  br label %58

34:                                               ; preds = %2
  %35 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %4
  %36 = shufflevector <2 x double> %35, <2 x double> undef, <2 x i32> <i32 1, i32 0>
  %37 = insertelement <2 x double> undef, double %7, i32 0
  %38 = shufflevector <2 x double> %37, <2 x double> undef, <2 x i32> zeroinitializer
  %39 = fdiv <2 x double> %36, %38
  br label %58

40:                                               ; preds = %2
  %41 = extractelement <2 x double> %4, i32 1
  %42 = insertelement <2 x double> undef, double %41, i32 0
  %43 = insertelement <2 x double> %42, double %7, i32 1
  %44 = shufflevector <2 x double> %4, <2 x double> undef, <2 x i32> zeroinitializer
  %45 = fdiv <2 x double> %43, %44
  br label %58

46:                                               ; preds = %2
  %47 = extractelement <2 x double> %4, i32 0
  %48 = fsub double -0.000000e+00, %47
  %49 = insertelement <2 x double> undef, double %48, i32 0
  %50 = insertelement <2 x double> %49, double %7, i32 1
  %51 = shufflevector <2 x double> %4, <2 x double> undef, <2 x i32> <i32 1, i32 1>
  %52 = fdiv <2 x double> %50, %51
  br label %58

53:                                               ; preds = %2
  %54 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %4
  %55 = insertelement <2 x double> undef, double %7, i32 0
  %56 = shufflevector <2 x double> %55, <2 x double> undef, <2 x i32> zeroinitializer
  %57 = fdiv <2 x double> %54, %56
  br label %58

58:                                               ; preds = %23, %27, %34, %40, %46, %53
  %59 = phi <2 x double> [ %57, %53 ], [ %52, %46 ], [ %45, %40 ], [ %39, %34 ], [ %33, %27 ], [ %26, %23 ]
  %60 = extractelement <2 x double> %59, i32 1
  %61 = fcmp ult double %60, 0.000000e+00
  %62 = fmul double %60, 3.000000e+00
  br i1 %61, label %67, label %63

63:                                               ; preds = %58
  %64 = fadd double %62, 1.000000e+00
  %65 = tail call double @sqrt(double %64) #14
  %66 = fmul double %65, 5.000000e-01
  br label %72

67:                                               ; preds = %58
  %68 = fsub double 1.000000e+00, %62
  %69 = tail call double @sqrt(double %68) #14
  %70 = fmul double %69, 5.000000e-01
  %71 = fsub double 1.000000e+00, %70
  br label %72

72:                                               ; preds = %63, %67
  %73 = phi double [ %66, %63 ], [ %71, %67 ]
  %74 = fmul double %73, 0x41D0000000000000
  %75 = fadd double %74, -5.000000e-01
  %76 = tail call i32 asm sideeffect "cvtsd2si $1, $0", "=r,x,~{dirflag},~{fpsr},~{flags}"(double %75) #14, !srcloc !9
  %77 = icmp slt i32 %76, 1073741823
  %78 = select i1 %77, i32 %76, i32 1073741823
  %79 = icmp sgt i32 %78, 0
  %80 = select i1 %79, i32 %78, i32 0
  %81 = extractelement <2 x double> %59, i32 0
  %82 = fcmp ult double %81, 0.000000e+00
  %83 = fmul double %81, 3.000000e+00
  br i1 %82, label %88, label %84

84:                                               ; preds = %72
  %85 = fadd double %83, 1.000000e+00
  %86 = tail call double @sqrt(double %85) #14
  %87 = fmul double %86, 5.000000e-01
  br label %93

88:                                               ; preds = %72
  %89 = fsub double 1.000000e+00, %83
  %90 = tail call double @sqrt(double %89) #14
  %91 = fmul double %90, 5.000000e-01
  %92 = fsub double 1.000000e+00, %91
  br label %93

93:                                               ; preds = %84, %88
  %94 = phi double [ %87, %84 ], [ %92, %88 ]
  %95 = fmul double %94, 0x41D0000000000000
  %96 = fadd double %95, -5.000000e-01
  %97 = tail call i32 asm sideeffect "cvtsd2si $1, $0", "=r,x,~{dirflag},~{fpsr},~{flags}"(double %96) #14, !srcloc !9
  %98 = icmp slt i32 %97, 1073741823
  %99 = select i1 %98, i32 %97, i32 1073741823
  %100 = icmp sgt i32 %99, 0
  %101 = select i1 %100, i32 %99, i32 0
  %102 = tail call i64 @_ZN8S2CellId10FromFaceIJEiii(i32 %22, i32 %80, i32 %101)
  %103 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %0, i64 0, i32 0
  store i64 %102, i64* %103, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8S2CellIdC2ERK8S2LatLng(%class.S2CellId* nocapture, %class.S2LatLng* dereferenceable(16)) unnamed_addr #2 align 2 {
  %3 = alloca %class.Vector3, align 8
  %4 = bitcast %class.Vector3* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #14
  call void @_ZNK8S2LatLng7ToPointEv(%class.Vector3* nonnull sret %3, %class.S2LatLng* %1) #14
  call void @_ZN8S2CellIdC2ERK7Vector3IdE(%class.S2CellId* %0, %class.Vector3* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #14
  ret void
}

declare void @_ZNK8S2LatLng7ToPointEv(%class.Vector3* sret, %class.S2LatLng*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8S2CellId19ToFaceIJOrientationEPiS0_S0_(%class.S2CellId* nocapture readonly, i32* nocapture, i32* nocapture, i32*) local_unnamed_addr #2 align 2 {
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::__call_once_param", align 8
  %7 = alloca %class.anon, align 1
  %8 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #14
  %9 = load atomic i64, i64* getelementptr inbounds (%"struct.std::__1::once_flag", %"struct.std::__1::once_flag"* @_ZL4flag, i64 0, i32 0) acquire, align 8
  %10 = icmp eq i64 %9, -1
  br i1 %10, label %16, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #14
  %13 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store %class.anon* %7, %class.anon** %13, align 8
  %14 = bitcast %"class.std::__1::__call_once_param"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.std::__1::__call_once_param", %"class.std::__1::__call_once_param"* %6, i64 0, i32 0
  store %"class.std::__1::tuple"* %5, %"class.std::__1::tuple"** %15, align 8
  call void @_ZNSt3__111__call_onceERVmPvPFvS2_E(i64* dereferenceable(8) getelementptr inbounds (%"struct.std::__1::once_flag", %"struct.std::__1::once_flag"* @_ZL4flag, i64 0, i32 0), i8* nonnull %14, void (i8*)* nonnull @_ZNSt3__117__call_once_proxyINS_5tupleIJOZL9MaybeInitvEUlvE_EEEEEvPv) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #14
  br label %16

16:                                               ; preds = %4, %11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #14
  %17 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %0, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = lshr i64 %18, 61
  %20 = trunc i64 %19 to i32
  %21 = and i64 %19, 1
  %22 = lshr i64 %18, 55
  %23 = and i64 %22, 60
  %24 = or i64 %21, %23
  %25 = getelementptr inbounds [1024 x i16], [1024 x i16]* @_ZL9lookup_ij, i64 0, i64 %24
  %26 = load i16, i16* %25, align 2
  %27 = zext i16 %26 to i32
  %28 = lshr i32 %27, 6
  %29 = shl i32 %28, 28
  %30 = lshr i32 %27, 2
  %31 = shl i32 %30, 28
  %32 = and i32 %27, 3
  %33 = lshr i64 %18, 47
  %34 = trunc i64 %33 to i32
  %35 = and i32 %34, 1020
  %36 = or i32 %32, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds [1024 x i16], [1024 x i16]* @_ZL9lookup_ij, i64 0, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = zext i16 %39 to i32
  %41 = lshr i32 %40, 6
  %42 = shl i32 %41, 24
  %43 = add nsw i32 %42, %29
  %44 = shl i32 %40, 22
  %45 = and i32 %44, 251658240
  %46 = or i32 %45, %31
  %47 = and i32 %40, 3
  %48 = lshr i64 %18, 39
  %49 = trunc i64 %48 to i32
  %50 = and i32 %49, 1020
  %51 = or i32 %47, %50
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds [1024 x i16], [1024 x i16]* @_ZL9lookup_ij, i64 0, i64 %52
  %54 = load i16, i16* %53, align 2
  %55 = zext i16 %54 to i32
  %56 = lshr i32 %55, 6
  %57 = shl nuw nsw i32 %56, 20
  %58 = add nsw i32 %43, %57
  %59 = shl i32 %55, 18
  %60 = and i32 %59, 15728640
  %61 = or i32 %46, %60
  %62 = and i32 %55, 3
  %63 = lshr i64 %18, 31
  %64 = trunc i64 %63 to i32
  %65 = and i32 %64, 1020
  %66 = or i32 %62, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds [1024 x i16], [1024 x i16]* @_ZL9lookup_ij, i64 0, i64 %67
  %69 = load i16, i16* %68, align 2
  %70 = zext i16 %69 to i32
  %71 = lshr i32 %70, 6
  %72 = shl nuw nsw i32 %71, 16
  %73 = add nsw i32 %58, %72
  %74 = shl nuw nsw i32 %70, 14
  %75 = and i32 %74, 983040
  %76 = or i32 %61, %75
  %77 = and i32 %70, 3
  %78 = lshr i64 %18, 23
  %79 = trunc i64 %78 to i32
  %80 = and i32 %79, 1020
  %81 = or i32 %77, %80
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds [1024 x i16], [1024 x i16]* @_ZL9lookup_ij, i64 0, i64 %82
  %84 = load i16, i16* %83, align 2
  %85 = zext i16 %84 to i32
  %86 = lshr i32 %85, 6
  %87 = shl nuw nsw i32 %86, 12
  %88 = add nsw i32 %73, %87
  %89 = shl nuw nsw i32 %85, 10
  %90 = and i32 %89, 61440
  %91 = or i32 %76, %90
  %92 = and i32 %85, 3
  %93 = lshr i64 %18, 15
  %94 = trunc i64 %93 to i32
  %95 = and i32 %94, 1020
  %96 = or i32 %92, %95
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds [1024 x i16], [1024 x i16]* @_ZL9lookup_ij, i64 0, i64 %97
  %99 = load i16, i16* %98, align 2
  %100 = zext i16 %99 to i32
  %101 = lshr i32 %100, 6
  %102 = shl nuw nsw i32 %101, 8
  %103 = add nsw i32 %88, %102
  %104 = shl nuw nsw i32 %100, 6
  %105 = and i32 %104, 3840
  %106 = or i32 %91, %105
  %107 = and i32 %100, 3
  %108 = lshr i64 %18, 7
  %109 = trunc i64 %108 to i32
  %110 = and i32 %109, 1020
  %111 = or i32 %107, %110
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds [1024 x i16], [1024 x i16]* @_ZL9lookup_ij, i64 0, i64 %112
  %114 = load i16, i16* %113, align 2
  %115 = zext i16 %114 to i32
  %116 = lshr i32 %115, 6
  %117 = shl nuw nsw i32 %116, 4
  %118 = add nsw i32 %103, %117
  %119 = shl nuw nsw i32 %115, 2
  %120 = and i32 %119, 240
  %121 = or i32 %106, %120
  %122 = and i32 %115, 3
  %123 = trunc i64 %18 to i32
  %124 = shl i32 %123, 1
  %125 = and i32 %124, 1020
  %126 = or i32 %122, %125
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds [1024 x i16], [1024 x i16]* @_ZL9lookup_ij, i64 0, i64 %127
  %129 = load i16, i16* %128, align 2
  %130 = zext i16 %129 to i32
  %131 = lshr i32 %130, 6
  %132 = add nsw i32 %118, %131
  %133 = lshr i32 %130, 2
  %134 = and i32 %133, 15
  %135 = add nsw i32 %121, %134
  store i32 %132, i32* %1, align 4
  store i32 %135, i32* %2, align 4
  %136 = icmp eq i32* %3, null
  br i1 %136, label %146, label %137

137:                                              ; preds = %16
  %138 = and i32 %130, 3
  %139 = load i64, i64* %17, align 8
  %140 = sub i64 0, %139
  %141 = and i64 %140, 1229782938247303440
  %142 = and i64 %141, %139
  %143 = icmp ne i64 %142, 0
  %144 = zext i1 %143 to i32
  %145 = xor i32 %138, %144
  store i32 %145, i32* %3, align 4
  br label %146

146:                                              ; preds = %16, %137
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8S2CellId10ToPointRawEv(%class.Vector3* noalias sret, %class.S2CellId* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #14
  store i32 -1431655766, i32* %3, align 4
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #14
  store i32 -1431655766, i32* %4, align 4
  %7 = call i32 @_ZNK8S2CellId19ToFaceIJOrientationEPiS0_S0_(%class.S2CellId* %1, i32* nonnull %3, i32* nonnull %4, i32* null) #14
  %8 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %1, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 1
  %11 = icmp eq i64 %10, 0
  %12 = load i32, i32* %3, align 4
  br i1 %11, label %13, label %19

13:                                               ; preds = %2
  %14 = trunc i64 %9 to i32
  %15 = lshr i32 %14, 2
  %16 = xor i32 %15, %12
  %17 = shl i32 %16, 1
  %18 = and i32 %17, 2
  br label %19

19:                                               ; preds = %2, %13
  %20 = phi i32 [ %18, %13 ], [ 1, %2 ]
  %21 = shl i32 %12, 1
  %22 = add nsw i32 %20, %21
  %23 = load i32, i32* %4, align 4
  %24 = shl i32 %23, 1
  %25 = add nsw i32 %24, %20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #14
  tail call void @_ZN2S213FaceSiTitoXYZEijj(%class.Vector3* sret %0, i32 %7, i32 %22, i32 %25) #14
  ret void
}

declare void @_ZN2S213FaceSiTitoXYZEijj(%class.Vector3* sret, i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden { double, double } @_ZNK8S2CellId8ToLatLngEv(%class.S2CellId* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %class.S2LatLng, align 8
  %5 = alloca %class.Vector3, align 8
  %6 = bitcast %class.Vector3* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #14, !noalias !10
  store i32 -1431655766, i32* %2, align 4, !noalias !10
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #14, !noalias !10
  store i32 -1431655766, i32* %3, align 4, !noalias !10
  %9 = call i32 @_ZNK8S2CellId19ToFaceIJOrientationEPiS0_S0_(%class.S2CellId* %0, i32* nonnull %2, i32* nonnull %3, i32* null) #14, !noalias !10
  %10 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %0, i64 0, i32 0
  %11 = load i64, i64* %10, align 8, !noalias !10
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  %14 = load i32, i32* %2, align 4, !noalias !10
  br i1 %13, label %15, label %21

15:                                               ; preds = %1
  %16 = trunc i64 %11 to i32
  %17 = lshr i32 %16, 2
  %18 = xor i32 %17, %14
  %19 = shl i32 %18, 1
  %20 = and i32 %19, 2
  br label %21

21:                                               ; preds = %1, %15
  %22 = phi i32 [ %20, %15 ], [ 1, %1 ]
  %23 = shl i32 %14, 1
  %24 = add nsw i32 %22, %23
  %25 = load i32, i32* %3, align 4, !noalias !10
  %26 = shl i32 %25, 1
  %27 = add nsw i32 %26, %22
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #14, !noalias !10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #14, !noalias !10
  call void @_ZN2S213FaceSiTitoXYZEijj(%class.Vector3* nonnull sret %5, i32 %9, i32 %24, i32 %27) #14
  call void @_ZN8S2LatLngC1ERK7Vector3IdE(%class.S2LatLng* nonnull %4, %class.Vector3* nonnull dereferenceable(24) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  %28 = getelementptr inbounds %class.S2LatLng, %class.S2LatLng* %4, i64 0, i32 0, i32 0, i64 0
  %29 = load double, double* %28, align 8
  %30 = insertvalue { double, double } undef, double %29, 0
  %31 = getelementptr inbounds %class.S2LatLng, %class.S2LatLng* %4, i64 0, i32 0, i32 0, i64 1
  %32 = load double, double* %31, align 8
  %33 = insertvalue { double, double } %30, double %32, 1
  ret { double, double } %33
}

declare void @_ZN8S2LatLngC1ERK7Vector3IdE(%class.S2LatLng*, %class.Vector3* dereferenceable(24)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden { double, double } @_ZNK8S2CellId11GetCenterSTEv(%class.S2CellId* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #14
  store i32 -1431655766, i32* %2, align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #14
  store i32 -1431655766, i32* %3, align 4
  %6 = call i32 @_ZNK8S2CellId19ToFaceIJOrientationEPiS0_S0_(%class.S2CellId* %0, i32* nonnull %2, i32* nonnull %3, i32* null) #14
  %7 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  %11 = load i32, i32* %2, align 4
  br i1 %10, label %12, label %18

12:                                               ; preds = %1
  %13 = trunc i64 %8 to i32
  %14 = lshr i32 %13, 2
  %15 = xor i32 %14, %11
  %16 = shl i32 %15, 1
  %17 = and i32 %16, 2
  br label %18

18:                                               ; preds = %1, %12
  %19 = phi i32 [ %17, %12 ], [ 1, %1 ]
  %20 = shl i32 %11, 1
  %21 = add nsw i32 %19, %20
  %22 = load i32, i32* %3, align 4
  %23 = shl i32 %22, 1
  %24 = add nsw i32 %23, %19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #14
  %25 = uitofp i32 %21 to double
  %26 = fmul double %25, 0x3E00000000000000
  %27 = uitofp i32 %24 to double
  %28 = fmul double %27, 0x3E00000000000000
  %29 = insertvalue { double, double } undef, double %26, 0
  %30 = insertvalue { double, double } %29, double %28, 1
  ret { double, double } %30
}

; Function Attrs: nounwind ssp uwtable
define hidden { double, double } @_ZNK8S2CellId11GetCenterUVEv(%class.S2CellId* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #14
  store i32 -1431655766, i32* %2, align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #14
  store i32 -1431655766, i32* %3, align 4
  %6 = call i32 @_ZNK8S2CellId19ToFaceIJOrientationEPiS0_S0_(%class.S2CellId* %0, i32* nonnull %2, i32* nonnull %3, i32* null) #14
  %7 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  %11 = load i32, i32* %2, align 4
  br i1 %10, label %12, label %18

12:                                               ; preds = %1
  %13 = trunc i64 %8 to i32
  %14 = lshr i32 %13, 2
  %15 = xor i32 %14, %11
  %16 = shl i32 %15, 1
  %17 = and i32 %16, 2
  br label %18

18:                                               ; preds = %1, %12
  %19 = phi i32 [ %17, %12 ], [ 1, %1 ]
  %20 = shl i32 %11, 1
  %21 = add nsw i32 %19, %20
  %22 = load i32, i32* %3, align 4
  %23 = shl i32 %22, 1
  %24 = add nsw i32 %23, %19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #14
  %25 = uitofp i32 %21 to double
  %26 = fmul double %25, 0x3E00000000000000
  %27 = fcmp ult double %26, 5.000000e-01
  br i1 %27, label %32, label %28

28:                                               ; preds = %18
  %29 = fmul double %26, 4.000000e+00
  %30 = fmul double %26, %29
  %31 = fadd double %30, -1.000000e+00
  br label %37

32:                                               ; preds = %18
  %33 = fsub double 1.000000e+00, %26
  %34 = fmul double %33, 4.000000e+00
  %35 = fmul double %33, %34
  %36 = fsub double 1.000000e+00, %35
  br label %37

37:                                               ; preds = %28, %32
  %38 = phi double [ %31, %28 ], [ %36, %32 ]
  %39 = fmul double %38, 0x3FD5555555555555
  %40 = uitofp i32 %24 to double
  %41 = fmul double %40, 0x3E00000000000000
  %42 = fcmp ult double %41, 5.000000e-01
  br i1 %42, label %47, label %43

43:                                               ; preds = %37
  %44 = fmul double %41, 4.000000e+00
  %45 = fmul double %41, %44
  %46 = fadd double %45, -1.000000e+00
  br label %52

47:                                               ; preds = %37
  %48 = fsub double 1.000000e+00, %41
  %49 = fmul double %48, 4.000000e+00
  %50 = fmul double %48, %49
  %51 = fsub double 1.000000e+00, %50
  br label %52

52:                                               ; preds = %43, %47
  %53 = phi double [ %46, %43 ], [ %51, %47 ]
  %54 = fmul double %53, 0x3FD5555555555555
  %55 = insertvalue { double, double } undef, double %39, 0
  %56 = insertvalue { double, double } %55, double %54, 1
  ret { double, double } %56
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8S2CellId16IJLevelToBoundUVEPii(%class.R2Rect* noalias nocapture sret, i32* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 0
  %5 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 0, i32 0, i32 0, i64 1
  %6 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %7 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 1
  %8 = bitcast %class.R2Rect* %0 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %8, align 8
  %9 = bitcast double* %6 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 0.000000e+00>, <2 x double>* %9, align 8
  %10 = sub nsw i32 30, %2
  %11 = shl i32 1, %10
  %12 = sub nsw i32 0, %11
  %13 = load i32, i32* %1, align 4
  %14 = and i32 %13, %12
  %15 = add nsw i32 %14, %11
  %16 = sitofp i32 %14 to double
  %17 = fmul double %16, 0x3E10000000000000
  %18 = fcmp ult double %17, 5.000000e-01
  br i1 %18, label %23, label %19

19:                                               ; preds = %3
  %20 = fmul double %17, 4.000000e+00
  %21 = fmul double %17, %20
  %22 = fadd double %21, -1.000000e+00
  br label %28

23:                                               ; preds = %3
  %24 = fsub double 1.000000e+00, %17
  %25 = fmul double %24, 4.000000e+00
  %26 = fmul double %24, %25
  %27 = fsub double 1.000000e+00, %26
  br label %28

28:                                               ; preds = %19, %23
  %29 = phi double [ %22, %19 ], [ %27, %23 ]
  %30 = fmul double %29, 0x3FD5555555555555
  store double %30, double* %4, align 8
  %31 = sitofp i32 %15 to double
  %32 = fmul double %31, 0x3E10000000000000
  %33 = fcmp ult double %32, 5.000000e-01
  br i1 %33, label %38, label %34

34:                                               ; preds = %28
  %35 = fmul double %32, 4.000000e+00
  %36 = fmul double %32, %35
  %37 = fadd double %36, -1.000000e+00
  br label %43

38:                                               ; preds = %28
  %39 = fsub double 1.000000e+00, %32
  %40 = fmul double %39, 4.000000e+00
  %41 = fmul double %39, %40
  %42 = fsub double 1.000000e+00, %41
  br label %43

43:                                               ; preds = %34, %38
  %44 = phi double [ %37, %34 ], [ %42, %38 ]
  %45 = fmul double %44, 0x3FD5555555555555
  store double %45, double* %5, align 8
  %46 = getelementptr inbounds i32, i32* %1, i64 1
  %47 = load i32, i32* %46, align 4
  %48 = and i32 %47, %12
  %49 = add nsw i32 %48, %11
  %50 = sitofp i32 %48 to double
  %51 = fmul double %50, 0x3E10000000000000
  %52 = fcmp ult double %51, 5.000000e-01
  br i1 %52, label %57, label %53

53:                                               ; preds = %43
  %54 = fmul double %51, 4.000000e+00
  %55 = fmul double %51, %54
  %56 = fadd double %55, -1.000000e+00
  br label %62

57:                                               ; preds = %43
  %58 = fsub double 1.000000e+00, %51
  %59 = fmul double %58, 4.000000e+00
  %60 = fmul double %58, %59
  %61 = fsub double 1.000000e+00, %60
  br label %62

62:                                               ; preds = %57, %53
  %63 = phi double [ %56, %53 ], [ %61, %57 ]
  %64 = fmul double %63, 0x3FD5555555555555
  store double %64, double* %6, align 8
  %65 = sitofp i32 %49 to double
  %66 = fmul double %65, 0x3E10000000000000
  %67 = fcmp ult double %66, 5.000000e-01
  br i1 %67, label %72, label %68

68:                                               ; preds = %62
  %69 = fmul double %66, 4.000000e+00
  %70 = fmul double %66, %69
  %71 = fadd double %70, -1.000000e+00
  br label %77

72:                                               ; preds = %62
  %73 = fsub double 1.000000e+00, %66
  %74 = fmul double %73, 4.000000e+00
  %75 = fmul double %73, %74
  %76 = fsub double 1.000000e+00, %75
  br label %77

77:                                               ; preds = %72, %68
  %78 = phi double [ %71, %68 ], [ %76, %72 ]
  %79 = fmul double %78, 0x3FD5555555555555
  store double %79, double* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8S2CellId10GetBoundSTEv(%class.R2Rect* noalias sret, %class.S2CellId* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %class.Vector2, align 8
  %6 = alloca %class.Vector2, align 8
  %7 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %1, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.cttz.i64(i64 %8, i1 true) #14, !range !2
  %10 = trunc i64 %9 to i32
  %11 = lshr i32 %10, 1
  %12 = shl i32 1, %11
  %13 = sitofp i32 %12 to double
  %14 = fmul double %13, 0x3E10000000000000
  %15 = bitcast %class.Vector2* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #14
  %16 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #14
  store i32 -1431655766, i32* %3, align 4
  %17 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #14
  store i32 -1431655766, i32* %4, align 4
  %18 = call i32 @_ZNK8S2CellId19ToFaceIJOrientationEPiS0_S0_(%class.S2CellId* %1, i32* nonnull %3, i32* nonnull %4, i32* null) #14
  %19 = load i64, i64* %7, align 8
  %20 = and i64 %19, 1
  %21 = icmp eq i64 %20, 0
  %22 = load i32, i32* %3, align 4
  br i1 %21, label %23, label %29

23:                                               ; preds = %2
  %24 = trunc i64 %19 to i32
  %25 = lshr i32 %24, 2
  %26 = xor i32 %25, %22
  %27 = shl i32 %26, 1
  %28 = and i32 %27, 2
  br label %29

29:                                               ; preds = %2, %23
  %30 = phi i32 [ %28, %23 ], [ 1, %2 ]
  %31 = shl i32 %22, 1
  %32 = add nsw i32 %30, %31
  %33 = load i32, i32* %4, align 4
  %34 = shl i32 %33, 1
  %35 = add nsw i32 %34, %30
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #14
  %36 = uitofp i32 %32 to double
  %37 = fmul double %36, 0x3E00000000000000
  %38 = uitofp i32 %35 to double
  %39 = fmul double %38, 0x3E00000000000000
  %40 = getelementptr inbounds %class.Vector2, %class.Vector2* %5, i64 0, i32 0, i64 0
  store double %37, double* %40, align 8
  %41 = getelementptr inbounds %class.Vector2, %class.Vector2* %5, i64 0, i32 0, i64 1
  store double %39, double* %41, align 8
  %42 = bitcast %class.Vector2* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %42) #14
  %43 = getelementptr inbounds %class.Vector2, %class.Vector2* %6, i64 0, i32 0, i64 0
  store double %14, double* %43, align 8
  %44 = getelementptr inbounds %class.Vector2, %class.Vector2* %6, i64 0, i32 0, i64 1
  store double %14, double* %44, align 8
  call void @_ZN6R2Rect14FromCenterSizeERK7Vector2IdES3_(%class.R2Rect* sret %0, %class.Vector2* nonnull dereferenceable(16) %5, %class.Vector2* nonnull dereferenceable(16) %6) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %42) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #14
  ret void
}

declare void @_ZN6R2Rect14FromCenterSizeERK7Vector2IdES3_(%class.R2Rect* sret, %class.Vector2* dereferenceable(16), %class.Vector2* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8S2CellId10GetBoundUVEv(%class.R2Rect* noalias nocapture sret, %class.S2CellId* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = alloca [2 x i32], align 4
  %4 = bitcast [2 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #14
  %5 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 0
  store i32 -1431655766, i32* %5, align 4
  %6 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 1
  store i32 -1431655766, i32* %6, align 4
  %7 = call i32 @_ZNK8S2CellId19ToFaceIJOrientationEPiS0_S0_(%class.S2CellId* %1, i32* nonnull %5, i32* %6, i32* null)
  %8 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %1, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = tail call i64 @llvm.cttz.i64(i64 %9, i1 true) #14, !range !2
  %11 = trunc i64 %10 to i32
  %12 = lshr i32 %11, 1
  %13 = sub nsw i32 30, %12
  call void @_ZN8S2CellId16IJLevelToBoundUVEPii(%class.R2Rect* sret %0, i32* nonnull %5, i32 %13)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8S2CellId20ExpandedByDistanceUVERK6R2Rect7S1Angle(%class.R2Rect* noalias nocapture sret, %class.R2Rect* nocapture readonly dereferenceable(32), double) local_unnamed_addr #2 align 2 {
  %4 = bitcast %class.R2Rect* %1 to <2 x double>*
  %5 = load <2 x double>, <2 x double>* %4, align 8
  %6 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %1, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %7 = bitcast double* %6 to <2 x double>*
  %8 = load <2 x double>, <2 x double>* %7, align 8
  %9 = call <2 x double> @llvm.fabs.v2f64(<2 x double> %5)
  %10 = extractelement <2 x double> %9, i32 0
  %11 = extractelement <2 x double> %9, i32 1
  %12 = fcmp olt double %10, %11
  %13 = select i1 %12, double %11, double %10
  %14 = call <2 x double> @llvm.fabs.v2f64(<2 x double> %8)
  %15 = extractelement <2 x double> %14, i32 0
  %16 = extractelement <2 x double> %14, i32 1
  %17 = fcmp olt double %15, %16
  %18 = select i1 %17, double %16, double %15
  %19 = tail call double @sin(double %2) #14
  %20 = fsub double -0.000000e+00, %19
  %21 = extractelement <2 x double> %5, i32 0
  %22 = fmul double %21, %21
  %23 = fadd double %22, 1.000000e+00
  %24 = fmul double %18, %18
  %25 = fadd double %23, %24
  %26 = fdiv double %25, %23
  %27 = tail call double @sqrt(double %26) #14
  %28 = fmul double %27, %20
  %29 = fmul double %28, %28
  %30 = fsub double 1.000000e+00, %29
  %31 = tail call double @sqrt(double %30) #14
  %32 = extractelement <2 x double> %5, i32 1
  %33 = fmul double %32, %32
  %34 = fadd double %33, 1.000000e+00
  %35 = fadd double %34, %24
  %36 = fdiv double %35, %34
  %37 = tail call double @sqrt(double %36) #14
  %38 = fmul double %19, %37
  %39 = fmul double %38, %38
  %40 = fsub double 1.000000e+00, %39
  %41 = tail call double @sqrt(double %40) #14
  %42 = insertelement <2 x double> undef, double %31, i32 0
  %43 = insertelement <2 x double> %42, double %41, i32 1
  %44 = fmul <2 x double> %5, %43
  %45 = insertelement <2 x double> undef, double %28, i32 0
  %46 = insertelement <2 x double> %45, double %38, i32 1
  %47 = fadd <2 x double> %46, %44
  %48 = fmul <2 x double> %5, %46
  %49 = fsub <2 x double> %43, %48
  %50 = fdiv <2 x double> %47, %49
  %51 = extractelement <2 x double> %8, i32 0
  %52 = fmul double %51, %51
  %53 = fadd double %52, 1.000000e+00
  %54 = fmul double %13, %13
  %55 = fadd double %53, %54
  %56 = fdiv double %55, %53
  %57 = tail call double @sqrt(double %56) #14
  %58 = fmul double %57, %20
  %59 = fmul double %58, %58
  %60 = fsub double 1.000000e+00, %59
  %61 = tail call double @sqrt(double %60) #14
  %62 = extractelement <2 x double> %8, i32 1
  %63 = fmul double %62, %62
  %64 = fadd double %63, 1.000000e+00
  %65 = fadd double %64, %54
  %66 = fdiv double %65, %64
  %67 = tail call double @sqrt(double %66) #14
  %68 = fmul double %19, %67
  %69 = fmul double %68, %68
  %70 = fsub double 1.000000e+00, %69
  %71 = tail call double @sqrt(double %70) #14
  %72 = insertelement <2 x double> undef, double %61, i32 0
  %73 = insertelement <2 x double> %72, double %71, i32 1
  %74 = fmul <2 x double> %8, %73
  %75 = insertelement <2 x double> undef, double %58, i32 0
  %76 = insertelement <2 x double> %75, double %68, i32 1
  %77 = fadd <2 x double> %76, %74
  %78 = fmul <2 x double> %8, %76
  %79 = fsub <2 x double> %73, %78
  %80 = fdiv <2 x double> %77, %79
  %81 = getelementptr inbounds %class.R2Rect, %class.R2Rect* %0, i64 0, i32 0, i64 1, i32 0, i32 0, i64 0
  %82 = bitcast %class.R2Rect* %0 to <2 x double>*
  store <2 x double> %50, <2 x double>* %82, align 8
  %83 = bitcast double* %81 to <2 x double>*
  store <2 x double> %80, <2 x double>* %83, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN8S2CellId14FromFaceIJWrapEiii(i32, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = alloca %class.Vector3, align 16
  %5 = icmp slt i32 %1, 1073741824
  %6 = select i1 %5, i32 %1, i32 1073741824
  %7 = icmp sgt i32 %6, -1
  %8 = select i1 %7, i32 %6, i32 -1
  %9 = icmp slt i32 %2, 1073741824
  %10 = select i1 %9, i32 %2, i32 1073741824
  %11 = icmp sgt i32 %10, -1
  %12 = select i1 %11, i32 %10, i32 -1
  %13 = shl i32 %8, 1
  %14 = shl i32 %12, 1
  %15 = insertelement <2 x i32> undef, i32 %14, i32 0
  %16 = insertelement <2 x i32> %15, i32 %13, i32 1
  %17 = add <2 x i32> %16, <i32 -1073741823, i32 -1073741823>
  %18 = sitofp <2 x i32> %17 to <2 x double>
  %19 = fmul <2 x double> %18, <double 0x3E10000000000000, double 0x3E10000000000000>
  %20 = fcmp olt <2 x double> %19, <double 0x3FF0000000000001, double 0x3FF0000000000001>
  %21 = select <2 x i1> %20, <2 x double> %19, <2 x double> <double 0x3FF0000000000001, double 0x3FF0000000000001>
  %22 = fcmp ogt <2 x double> %21, <double 0xBFF0000000000001, double 0xBFF0000000000001>
  %23 = select <2 x i1> %22, <2 x double> %21, <2 x double> <double 0xBFF0000000000001, double 0xBFF0000000000001>
  %24 = bitcast %class.Vector3* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #14
  %25 = extractelement <2 x double> %23, i32 1
  %26 = shufflevector <2 x double> %23, <2 x double> undef, <2 x i32> <i32 1, i32 undef>
  %27 = insertelement <2 x double> %26, double 1.000000e+00, i32 1
  %28 = extractelement <2 x double> %23, i32 0
  switch i32 %0, label %41 [
    i32 0, label %43
    i32 1, label %29
    i32 2, label %32
    i32 3, label %34
    i32 4, label %38
  ]

29:                                               ; preds = %3
  %30 = fsub double -0.000000e+00, %25
  %31 = insertelement <2 x double> <double 1.000000e+00, double undef>, double %30, i32 1
  br label %43

32:                                               ; preds = %3
  %33 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %23
  br label %43

34:                                               ; preds = %3
  %35 = fsub double -0.000000e+00, %28
  %36 = fsub double -0.000000e+00, %25
  %37 = insertelement <2 x double> <double undef, double -1.000000e+00>, double %35, i32 0
  br label %43

38:                                               ; preds = %3
  %39 = fsub double -0.000000e+00, %25
  %40 = shufflevector <2 x double> <double -1.000000e+00, double undef>, <2 x double> %23, <2 x i32> <i32 0, i32 2>
  br label %43

41:                                               ; preds = %3
  %42 = shufflevector <2 x double> %26, <2 x double> %23, <2 x i32> <i32 0, i32 2>
  br label %43

43:                                               ; preds = %3, %29, %32, %34, %38, %41
  %44 = phi double [ %28, %29 ], [ 1.000000e+00, %32 ], [ %36, %34 ], [ %39, %38 ], [ -1.000000e+00, %41 ], [ %28, %3 ]
  %45 = phi <2 x double> [ %31, %29 ], [ %33, %32 ], [ %37, %34 ], [ %40, %38 ], [ %42, %41 ], [ %27, %3 ]
  %46 = shufflevector <2 x double> %45, <2 x double> undef, <2 x i32> <i32 1, i32 0>
  %47 = bitcast %class.Vector3* %4 to <2 x double>*
  store <2 x double> %46, <2 x double>* %47, align 16, !alias.scope !13
  %48 = getelementptr inbounds %class.Vector3, %class.Vector3* %4, i64 0, i32 0, i64 2
  store double %44, double* %48, align 16, !alias.scope !13
  %49 = extractelement <2 x double> %45, i32 1
  %50 = tail call double @llvm.fabs.f64(double %49) #14
  %51 = extractelement <2 x double> %45, i32 0
  %52 = tail call double @llvm.fabs.f64(double %51) #14
  %53 = tail call double @llvm.fabs.f64(double %44) #14
  %54 = fcmp ogt double %50, %52
  %55 = fcmp ogt double %50, %53
  %56 = select i1 %55, i32 0, i32 2
  %57 = fcmp ogt double %52, %53
  %58 = select i1 %57, i32 1, i32 2
  %59 = select i1 %54, i32 %56, i32 %58
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %class.Vector3, %class.Vector3* %4, i64 0, i32 0, i64 %60
  %62 = load double, double* %61, align 8
  %63 = fcmp olt double %62, 0.000000e+00
  %64 = add nuw nsw i32 %59, 3
  %65 = select i1 %63, i32 %64, i32 %59
  switch i32 %65, label %94 [
    i32 0, label %66
    i32 1, label %71
    i32 2, label %77
    i32 3, label %83
    i32 4, label %88
  ]

66:                                               ; preds = %43
  %67 = insertelement <2 x double> undef, double %51, i32 0
  %68 = insertelement <2 x double> %67, double %44, i32 1
  %69 = shufflevector <2 x double> %45, <2 x double> undef, <2 x i32> <i32 1, i32 1>
  %70 = fdiv <2 x double> %68, %69
  br label %99

71:                                               ; preds = %43
  %72 = fsub double -0.000000e+00, %49
  %73 = insertelement <2 x double> undef, double %72, i32 0
  %74 = insertelement <2 x double> %73, double %44, i32 1
  %75 = shufflevector <2 x double> %45, <2 x double> undef, <2 x i32> zeroinitializer
  %76 = fdiv <2 x double> %74, %75
  br label %99

77:                                               ; preds = %43
  %78 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %45
  %79 = shufflevector <2 x double> %78, <2 x double> undef, <2 x i32> <i32 1, i32 0>
  %80 = insertelement <2 x double> undef, double %44, i32 0
  %81 = shufflevector <2 x double> %80, <2 x double> undef, <2 x i32> zeroinitializer
  %82 = fdiv <2 x double> %79, %81
  br label %99

83:                                               ; preds = %43
  %84 = insertelement <2 x double> undef, double %44, i32 0
  %85 = shufflevector <2 x double> %84, <2 x double> %45, <2 x i32> <i32 0, i32 2>
  %86 = shufflevector <2 x double> %45, <2 x double> undef, <2 x i32> <i32 1, i32 1>
  %87 = fdiv <2 x double> %85, %86
  br label %99

88:                                               ; preds = %43
  %89 = fsub double -0.000000e+00, %49
  %90 = insertelement <2 x double> undef, double %44, i32 0
  %91 = insertelement <2 x double> %90, double %89, i32 1
  %92 = shufflevector <2 x double> %45, <2 x double> undef, <2 x i32> zeroinitializer
  %93 = fdiv <2 x double> %91, %92
  br label %99

94:                                               ; preds = %43
  %95 = fsub <2 x double> <double -0.000000e+00, double -0.000000e+00>, %45
  %96 = insertelement <2 x double> undef, double %44, i32 0
  %97 = shufflevector <2 x double> %96, <2 x double> undef, <2 x i32> zeroinitializer
  %98 = fdiv <2 x double> %95, %97
  br label %99

99:                                               ; preds = %66, %71, %77, %83, %88, %94
  %100 = phi <2 x double> [ %98, %94 ], [ %93, %88 ], [ %87, %83 ], [ %82, %77 ], [ %76, %71 ], [ %70, %66 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #14
  %101 = extractelement <2 x double> %100, i32 0
  %102 = fadd double %101, 1.000000e+00
  %103 = fmul double %102, 5.000000e-01
  %104 = fmul double %103, 0x41D0000000000000
  %105 = fadd double %104, -5.000000e-01
  %106 = tail call i32 asm sideeffect "cvtsd2si $1, $0", "=r,x,~{dirflag},~{fpsr},~{flags}"(double %105) #14, !srcloc !9
  %107 = icmp slt i32 %106, 1073741823
  %108 = select i1 %107, i32 %106, i32 1073741823
  %109 = icmp sgt i32 %108, 0
  %110 = select i1 %109, i32 %108, i32 0
  %111 = extractelement <2 x double> %100, i32 1
  %112 = fadd double %111, 1.000000e+00
  %113 = fmul double %112, 5.000000e-01
  %114 = fmul double %113, 0x41D0000000000000
  %115 = fadd double %114, -5.000000e-01
  %116 = tail call i32 asm sideeffect "cvtsd2si $1, $0", "=r,x,~{dirflag},~{fpsr},~{flags}"(double %115) #14, !srcloc !9
  %117 = icmp slt i32 %116, 1073741823
  %118 = select i1 %117, i32 %116, i32 1073741823
  %119 = icmp sgt i32 %118, 0
  %120 = select i1 %119, i32 %118, i32 0
  %121 = tail call i64 @_ZN8S2CellId10FromFaceIJEiii(i32 %65, i32 %110, i32 %120)
  ret i64 %121
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8S2CellId16GetEdgeNeighborsEPS_(%class.S2CellId* nocapture readonly, %class.S2CellId* nocapture) local_unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #14
  store i32 -1431655766, i32* %3, align 4
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #14
  store i32 -1431655766, i32* %4, align 4
  %7 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.cttz.i64(i64 %8, i1 true) #14, !range !2
  %10 = trunc i64 %9 to i32
  %11 = lshr i32 %10, 1
  %12 = shl i32 1, %11
  %13 = call i32 @_ZNK8S2CellId19ToFaceIJOrientationEPiS0_S0_(%class.S2CellId* %0, i32* nonnull %3, i32* nonnull %4, i32* null)
  %14 = load i32, i32* %3, align 4
  %15 = load i32, i32* %4, align 4
  %16 = sub nsw i32 %15, %12
  %17 = icmp sgt i32 %16, -1
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = tail call i64 @_ZN8S2CellId10FromFaceIJEiii(i32 %13, i32 %14, i32 %16) #14
  br label %22

20:                                               ; preds = %2
  %21 = tail call i64 @_ZN8S2CellId14FromFaceIJWrapEiii(i32 %13, i32 %14, i32 %16) #14
  br label %22

22:                                               ; preds = %18, %20
  %23 = phi i64 [ %19, %18 ], [ %21, %20 ]
  %24 = and i64 %9, 62
  %25 = shl i64 1, %24
  %26 = sub nsw i64 0, %25
  %27 = and i64 %23, %26
  %28 = or i64 %27, %25
  %29 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %1, i64 0, i32 0
  store i64 %28, i64* %29, align 8
  %30 = add nsw i32 %12, %14
  %31 = icmp slt i32 %30, 1073741824
  br i1 %31, label %32, label %34

32:                                               ; preds = %22
  %33 = tail call i64 @_ZN8S2CellId10FromFaceIJEiii(i32 %13, i32 %30, i32 %15) #14
  br label %36

34:                                               ; preds = %22
  %35 = tail call i64 @_ZN8S2CellId14FromFaceIJWrapEiii(i32 %13, i32 %30, i32 %15) #14
  br label %36

36:                                               ; preds = %32, %34
  %37 = phi i64 [ %33, %32 ], [ %35, %34 ]
  %38 = and i64 %37, %26
  %39 = or i64 %38, %25
  %40 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %1, i64 1, i32 0
  store i64 %39, i64* %40, align 8
  %41 = add nsw i32 %12, %15
  %42 = icmp slt i32 %41, 1073741824
  br i1 %42, label %43, label %45

43:                                               ; preds = %36
  %44 = tail call i64 @_ZN8S2CellId10FromFaceIJEiii(i32 %13, i32 %14, i32 %41) #14
  br label %47

45:                                               ; preds = %36
  %46 = tail call i64 @_ZN8S2CellId14FromFaceIJWrapEiii(i32 %13, i32 %14, i32 %41) #14
  br label %47

47:                                               ; preds = %43, %45
  %48 = phi i64 [ %44, %43 ], [ %46, %45 ]
  %49 = and i64 %48, %26
  %50 = or i64 %49, %25
  %51 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %1, i64 2, i32 0
  store i64 %50, i64* %51, align 8
  %52 = sub nsw i32 %14, %12
  %53 = icmp sgt i32 %52, -1
  br i1 %53, label %54, label %56

54:                                               ; preds = %47
  %55 = tail call i64 @_ZN8S2CellId10FromFaceIJEiii(i32 %13, i32 %52, i32 %15) #14
  br label %58

56:                                               ; preds = %47
  %57 = tail call i64 @_ZN8S2CellId14FromFaceIJWrapEiii(i32 %13, i32 %52, i32 %15) #14
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi i64 [ %55, %54 ], [ %57, %56 ]
  %60 = and i64 %59, %26
  %61 = or i64 %60, %25
  %62 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %1, i64 3, i32 0
  store i64 %61, i64* %62, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8S2CellId21AppendVertexNeighborsEiPNSt3__16vectorIS_NS0_9allocatorIS_EEEE(%class.S2CellId* nocapture readonly, i32, %"class.std::__1::vector"*) local_unnamed_addr #2 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #14
  store i32 -1431655766, i32* %4, align 4
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #14
  store i32 -1431655766, i32* %5, align 4
  %8 = call i32 @_ZNK8S2CellId19ToFaceIJOrientationEPiS0_S0_(%class.S2CellId* %0, i32* nonnull %4, i32* nonnull %5, i32* null)
  %9 = sub i32 29, %1
  %10 = shl i32 1, %9
  %11 = shl i32 %10, 1
  %12 = load i32, i32* %4, align 4
  %13 = and i32 %12, %10
  %14 = icmp eq i32 %13, 0
  %15 = add nsw i32 %12, %11
  %16 = icmp slt i32 %15, 1073741824
  %17 = sub nsw i32 0, %11
  %18 = icmp sge i32 %12, %11
  %19 = select i1 %14, i1 %18, i1 %16
  %20 = select i1 %14, i32 %17, i32 %11
  %21 = load i32, i32* %5, align 4
  %22 = and i32 %21, %10
  %23 = icmp eq i32 %22, 0
  %24 = add nsw i32 %21, %11
  %25 = icmp slt i32 %24, 1073741824
  %26 = icmp sge i32 %21, %11
  %27 = select i1 %23, i1 %26, i1 %25
  %28 = select i1 %23, i32 %17, i32 %11
  %29 = shl i32 %1, 1
  %30 = sub i32 60, %29
  %31 = zext i32 %30 to i64
  %32 = shl i64 1, %31
  %33 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %0, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 0, %32
  %36 = and i64 %34, %35
  %37 = or i64 %36, %32
  %38 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %39 = load %class.S2CellId*, %class.S2CellId** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = load %class.S2CellId*, %class.S2CellId** %40, align 8
  %42 = icmp ult %class.S2CellId* %39, %41
  %43 = ptrtoint %class.S2CellId* %41 to i64
  br i1 %42, label %44, label %49

44:                                               ; preds = %3
  %45 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %39, i64 0, i32 0
  store i64 %37, i64* %45, align 8
  %46 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %39, i64 1
  %47 = ptrtoint %class.S2CellId* %46 to i64
  %48 = bitcast %class.S2CellId** %38 to i64*
  store i64 %47, i64* %48, align 8
  br label %106

49:                                               ; preds = %3
  %50 = ptrtoint %class.S2CellId* %39 to i64
  %51 = bitcast %class.S2CellId** %38 to i64*
  %52 = bitcast %"class.std::__1::vector"* %2 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %50, %53
  %55 = ashr exact i64 %54, 3
  %56 = add nsw i64 %55, 1
  %57 = icmp ugt i64 %56, 2305843009213693951
  br i1 %57, label %58, label %60

58:                                               ; preds = %49
  %59 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %59) #16
  unreachable

60:                                               ; preds = %49
  %61 = bitcast %class.S2CellId** %40 to i64*
  %62 = sub i64 %43, %53
  %63 = ashr exact i64 %62, 3
  %64 = icmp ult i64 %63, 1152921504606846975
  br i1 %64, label %65, label %73

65:                                               ; preds = %60
  %66 = ashr exact i64 %62, 2
  %67 = icmp ult i64 %66, %56
  %68 = select i1 %67, i64 %56, i64 %66
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %78, label %70

70:                                               ; preds = %65
  %71 = icmp ugt i64 %68, 2305843009213693951
  br i1 %71, label %72, label %73

72:                                               ; preds = %70
  tail call void @abort() #16
  unreachable

73:                                               ; preds = %70, %60
  %74 = phi i64 [ %68, %70 ], [ 2305843009213693951, %60 ]
  %75 = shl i64 %74, 3
  %76 = tail call i8* @_Znwm(i64 %75) #15
  %77 = bitcast i8* %76 to %class.S2CellId*
  br label %78

78:                                               ; preds = %73, %65
  %79 = phi i64 [ %74, %73 ], [ 0, %65 ]
  %80 = phi %class.S2CellId* [ %77, %73 ], [ null, %65 ]
  %81 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %80, i64 %55
  %82 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %80, i64 %79
  %83 = ptrtoint %class.S2CellId* %82 to i64
  %84 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %81, i64 0, i32 0
  store i64 %37, i64* %84, align 8
  %85 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %81, i64 1
  %86 = ptrtoint %class.S2CellId* %85 to i64
  %87 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %88 = load %class.S2CellId*, %class.S2CellId** %87, align 8
  %89 = load i64, i64* %51, align 8
  %90 = ptrtoint %class.S2CellId* %88 to i64
  %91 = sub i64 %89, %90
  %92 = ashr exact i64 %91, 3
  %93 = sub nsw i64 0, %92
  %94 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %81, i64 %93
  %95 = ptrtoint %class.S2CellId* %94 to i64
  %96 = icmp sgt i64 %91, 0
  br i1 %96, label %97, label %101

97:                                               ; preds = %78
  %98 = bitcast %class.S2CellId* %94 to i8*
  %99 = bitcast %class.S2CellId* %88 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 %91, i1 false) #14
  %100 = load %class.S2CellId*, %class.S2CellId** %87, align 8
  br label %101

101:                                              ; preds = %97, %78
  %102 = phi %class.S2CellId* [ %88, %78 ], [ %100, %97 ]
  store i64 %95, i64* %52, align 8
  store i64 %86, i64* %51, align 8
  store i64 %83, i64* %61, align 8
  %103 = icmp eq %class.S2CellId* %102, null
  br i1 %103, label %106, label %104

104:                                              ; preds = %101
  %105 = bitcast %class.S2CellId* %102 to i8*
  tail call void @_ZdlPv(i8* %105) #15
  br label %106

106:                                              ; preds = %44, %101, %104
  %107 = add nsw i32 %20, %12
  br i1 %19, label %108, label %110

108:                                              ; preds = %106
  %109 = tail call i64 @_ZN8S2CellId10FromFaceIJEiii(i32 %8, i32 %107, i32 %21) #14
  br label %112

110:                                              ; preds = %106
  %111 = tail call i64 @_ZN8S2CellId14FromFaceIJWrapEiii(i32 %8, i32 %107, i32 %21) #14
  br label %112

112:                                              ; preds = %108, %110
  %113 = phi i64 [ %109, %108 ], [ %111, %110 ]
  %114 = and i64 %113, %35
  %115 = or i64 %114, %32
  %116 = load %class.S2CellId*, %class.S2CellId** %38, align 8
  %117 = load %class.S2CellId*, %class.S2CellId** %40, align 8
  %118 = icmp ult %class.S2CellId* %116, %117
  %119 = ptrtoint %class.S2CellId* %117 to i64
  br i1 %118, label %120, label %125

120:                                              ; preds = %112
  %121 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %116, i64 0, i32 0
  store i64 %115, i64* %121, align 8
  %122 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %116, i64 1
  %123 = ptrtoint %class.S2CellId* %122 to i64
  %124 = bitcast %class.S2CellId** %38 to i64*
  store i64 %123, i64* %124, align 8
  br label %182

125:                                              ; preds = %112
  %126 = ptrtoint %class.S2CellId* %116 to i64
  %127 = bitcast %class.S2CellId** %38 to i64*
  %128 = bitcast %"class.std::__1::vector"* %2 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = sub i64 %126, %129
  %131 = ashr exact i64 %130, 3
  %132 = add nsw i64 %131, 1
  %133 = icmp ugt i64 %132, 2305843009213693951
  br i1 %133, label %134, label %136

134:                                              ; preds = %125
  %135 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %135) #16
  unreachable

136:                                              ; preds = %125
  %137 = bitcast %class.S2CellId** %40 to i64*
  %138 = sub i64 %119, %129
  %139 = ashr exact i64 %138, 3
  %140 = icmp ult i64 %139, 1152921504606846975
  br i1 %140, label %141, label %149

141:                                              ; preds = %136
  %142 = ashr exact i64 %138, 2
  %143 = icmp ult i64 %142, %132
  %144 = select i1 %143, i64 %132, i64 %142
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %154, label %146

146:                                              ; preds = %141
  %147 = icmp ugt i64 %144, 2305843009213693951
  br i1 %147, label %148, label %149

148:                                              ; preds = %146
  tail call void @abort() #16
  unreachable

149:                                              ; preds = %146, %136
  %150 = phi i64 [ %144, %146 ], [ 2305843009213693951, %136 ]
  %151 = shl i64 %150, 3
  %152 = tail call i8* @_Znwm(i64 %151) #15
  %153 = bitcast i8* %152 to %class.S2CellId*
  br label %154

154:                                              ; preds = %149, %141
  %155 = phi i64 [ %150, %149 ], [ 0, %141 ]
  %156 = phi %class.S2CellId* [ %153, %149 ], [ null, %141 ]
  %157 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %156, i64 %131
  %158 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %156, i64 %155
  %159 = ptrtoint %class.S2CellId* %158 to i64
  %160 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %157, i64 0, i32 0
  store i64 %115, i64* %160, align 8
  %161 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %157, i64 1
  %162 = ptrtoint %class.S2CellId* %161 to i64
  %163 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %164 = load %class.S2CellId*, %class.S2CellId** %163, align 8
  %165 = load i64, i64* %127, align 8
  %166 = ptrtoint %class.S2CellId* %164 to i64
  %167 = sub i64 %165, %166
  %168 = ashr exact i64 %167, 3
  %169 = sub nsw i64 0, %168
  %170 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %157, i64 %169
  %171 = ptrtoint %class.S2CellId* %170 to i64
  %172 = icmp sgt i64 %167, 0
  br i1 %172, label %173, label %177

173:                                              ; preds = %154
  %174 = bitcast %class.S2CellId* %170 to i8*
  %175 = bitcast %class.S2CellId* %164 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %174, i8* align 8 %175, i64 %167, i1 false) #14
  %176 = load %class.S2CellId*, %class.S2CellId** %163, align 8
  br label %177

177:                                              ; preds = %173, %154
  %178 = phi %class.S2CellId* [ %164, %154 ], [ %176, %173 ]
  store i64 %171, i64* %128, align 8
  store i64 %162, i64* %127, align 8
  store i64 %159, i64* %137, align 8
  %179 = icmp eq %class.S2CellId* %178, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %177
  %181 = bitcast %class.S2CellId* %178 to i8*
  tail call void @_ZdlPv(i8* %181) #15
  br label %182

182:                                              ; preds = %120, %177, %180
  %183 = add nsw i32 %28, %21
  br i1 %27, label %184, label %186

184:                                              ; preds = %182
  %185 = tail call i64 @_ZN8S2CellId10FromFaceIJEiii(i32 %8, i32 %12, i32 %183) #14
  br label %188

186:                                              ; preds = %182
  %187 = tail call i64 @_ZN8S2CellId14FromFaceIJWrapEiii(i32 %8, i32 %12, i32 %183) #14
  br label %188

188:                                              ; preds = %184, %186
  %189 = phi i64 [ %185, %184 ], [ %187, %186 ]
  %190 = and i64 %189, %35
  %191 = or i64 %190, %32
  %192 = load %class.S2CellId*, %class.S2CellId** %38, align 8
  %193 = load %class.S2CellId*, %class.S2CellId** %40, align 8
  %194 = icmp ult %class.S2CellId* %192, %193
  %195 = ptrtoint %class.S2CellId* %193 to i64
  br i1 %194, label %196, label %201

196:                                              ; preds = %188
  %197 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %192, i64 0, i32 0
  store i64 %191, i64* %197, align 8
  %198 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %192, i64 1
  %199 = ptrtoint %class.S2CellId* %198 to i64
  %200 = bitcast %class.S2CellId** %38 to i64*
  store i64 %199, i64* %200, align 8
  br label %258

201:                                              ; preds = %188
  %202 = ptrtoint %class.S2CellId* %192 to i64
  %203 = bitcast %class.S2CellId** %38 to i64*
  %204 = bitcast %"class.std::__1::vector"* %2 to i64*
  %205 = load i64, i64* %204, align 8
  %206 = sub i64 %202, %205
  %207 = ashr exact i64 %206, 3
  %208 = add nsw i64 %207, 1
  %209 = icmp ugt i64 %208, 2305843009213693951
  br i1 %209, label %210, label %212

210:                                              ; preds = %201
  %211 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %211) #16
  unreachable

212:                                              ; preds = %201
  %213 = bitcast %class.S2CellId** %40 to i64*
  %214 = sub i64 %195, %205
  %215 = ashr exact i64 %214, 3
  %216 = icmp ult i64 %215, 1152921504606846975
  br i1 %216, label %217, label %225

217:                                              ; preds = %212
  %218 = ashr exact i64 %214, 2
  %219 = icmp ult i64 %218, %208
  %220 = select i1 %219, i64 %208, i64 %218
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %230, label %222

222:                                              ; preds = %217
  %223 = icmp ugt i64 %220, 2305843009213693951
  br i1 %223, label %224, label %225

224:                                              ; preds = %222
  tail call void @abort() #16
  unreachable

225:                                              ; preds = %222, %212
  %226 = phi i64 [ %220, %222 ], [ 2305843009213693951, %212 ]
  %227 = shl i64 %226, 3
  %228 = tail call i8* @_Znwm(i64 %227) #15
  %229 = bitcast i8* %228 to %class.S2CellId*
  br label %230

230:                                              ; preds = %225, %217
  %231 = phi i64 [ %226, %225 ], [ 0, %217 ]
  %232 = phi %class.S2CellId* [ %229, %225 ], [ null, %217 ]
  %233 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %232, i64 %207
  %234 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %232, i64 %231
  %235 = ptrtoint %class.S2CellId* %234 to i64
  %236 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %233, i64 0, i32 0
  store i64 %191, i64* %236, align 8
  %237 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %233, i64 1
  %238 = ptrtoint %class.S2CellId* %237 to i64
  %239 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %240 = load %class.S2CellId*, %class.S2CellId** %239, align 8
  %241 = load i64, i64* %203, align 8
  %242 = ptrtoint %class.S2CellId* %240 to i64
  %243 = sub i64 %241, %242
  %244 = ashr exact i64 %243, 3
  %245 = sub nsw i64 0, %244
  %246 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %233, i64 %245
  %247 = ptrtoint %class.S2CellId* %246 to i64
  %248 = icmp sgt i64 %243, 0
  br i1 %248, label %249, label %253

249:                                              ; preds = %230
  %250 = bitcast %class.S2CellId* %246 to i8*
  %251 = bitcast %class.S2CellId* %240 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %250, i8* align 8 %251, i64 %243, i1 false) #14
  %252 = load %class.S2CellId*, %class.S2CellId** %239, align 8
  br label %253

253:                                              ; preds = %249, %230
  %254 = phi %class.S2CellId* [ %240, %230 ], [ %252, %249 ]
  store i64 %247, i64* %204, align 8
  store i64 %238, i64* %203, align 8
  store i64 %235, i64* %213, align 8
  %255 = icmp eq %class.S2CellId* %254, null
  br i1 %255, label %258, label %256

256:                                              ; preds = %253
  %257 = bitcast %class.S2CellId* %254 to i8*
  tail call void @_ZdlPv(i8* %257) #15
  br label %258

258:                                              ; preds = %196, %253, %256
  %259 = or i1 %19, %27
  br i1 %259, label %260, label %336

260:                                              ; preds = %258
  %261 = and i1 %19, %27
  br i1 %261, label %262, label %264

262:                                              ; preds = %260
  %263 = tail call i64 @_ZN8S2CellId10FromFaceIJEiii(i32 %8, i32 %107, i32 %183) #14
  br label %266

264:                                              ; preds = %260
  %265 = tail call i64 @_ZN8S2CellId14FromFaceIJWrapEiii(i32 %8, i32 %107, i32 %183) #14
  br label %266

266:                                              ; preds = %262, %264
  %267 = phi i64 [ %263, %262 ], [ %265, %264 ]
  %268 = and i64 %267, %35
  %269 = or i64 %268, %32
  %270 = load %class.S2CellId*, %class.S2CellId** %38, align 8
  %271 = load %class.S2CellId*, %class.S2CellId** %40, align 8
  %272 = icmp ult %class.S2CellId* %270, %271
  %273 = ptrtoint %class.S2CellId* %271 to i64
  br i1 %272, label %274, label %279

274:                                              ; preds = %266
  %275 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %270, i64 0, i32 0
  store i64 %269, i64* %275, align 8
  %276 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %270, i64 1
  %277 = ptrtoint %class.S2CellId* %276 to i64
  %278 = bitcast %class.S2CellId** %38 to i64*
  store i64 %277, i64* %278, align 8
  br label %336

279:                                              ; preds = %266
  %280 = ptrtoint %class.S2CellId* %270 to i64
  %281 = bitcast %class.S2CellId** %38 to i64*
  %282 = bitcast %"class.std::__1::vector"* %2 to i64*
  %283 = load i64, i64* %282, align 8
  %284 = sub i64 %280, %283
  %285 = ashr exact i64 %284, 3
  %286 = add nsw i64 %285, 1
  %287 = icmp ugt i64 %286, 2305843009213693951
  br i1 %287, label %288, label %290

288:                                              ; preds = %279
  %289 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %289) #16
  unreachable

290:                                              ; preds = %279
  %291 = bitcast %class.S2CellId** %40 to i64*
  %292 = sub i64 %273, %283
  %293 = ashr exact i64 %292, 3
  %294 = icmp ult i64 %293, 1152921504606846975
  br i1 %294, label %295, label %303

295:                                              ; preds = %290
  %296 = ashr exact i64 %292, 2
  %297 = icmp ult i64 %296, %286
  %298 = select i1 %297, i64 %286, i64 %296
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %308, label %300

300:                                              ; preds = %295
  %301 = icmp ugt i64 %298, 2305843009213693951
  br i1 %301, label %302, label %303

302:                                              ; preds = %300
  tail call void @abort() #16
  unreachable

303:                                              ; preds = %300, %290
  %304 = phi i64 [ %298, %300 ], [ 2305843009213693951, %290 ]
  %305 = shl i64 %304, 3
  %306 = tail call i8* @_Znwm(i64 %305) #15
  %307 = bitcast i8* %306 to %class.S2CellId*
  br label %308

308:                                              ; preds = %303, %295
  %309 = phi i64 [ %304, %303 ], [ 0, %295 ]
  %310 = phi %class.S2CellId* [ %307, %303 ], [ null, %295 ]
  %311 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %310, i64 %285
  %312 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %310, i64 %309
  %313 = ptrtoint %class.S2CellId* %312 to i64
  %314 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %311, i64 0, i32 0
  store i64 %269, i64* %314, align 8
  %315 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %311, i64 1
  %316 = ptrtoint %class.S2CellId* %315 to i64
  %317 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %318 = load %class.S2CellId*, %class.S2CellId** %317, align 8
  %319 = load i64, i64* %281, align 8
  %320 = ptrtoint %class.S2CellId* %318 to i64
  %321 = sub i64 %319, %320
  %322 = ashr exact i64 %321, 3
  %323 = sub nsw i64 0, %322
  %324 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %311, i64 %323
  %325 = ptrtoint %class.S2CellId* %324 to i64
  %326 = icmp sgt i64 %321, 0
  br i1 %326, label %327, label %331

327:                                              ; preds = %308
  %328 = bitcast %class.S2CellId* %324 to i8*
  %329 = bitcast %class.S2CellId* %318 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %328, i8* align 8 %329, i64 %321, i1 false) #14
  %330 = load %class.S2CellId*, %class.S2CellId** %317, align 8
  br label %331

331:                                              ; preds = %327, %308
  %332 = phi %class.S2CellId* [ %318, %308 ], [ %330, %327 ]
  store i64 %325, i64* %282, align 8
  store i64 %316, i64* %281, align 8
  store i64 %313, i64* %291, align 8
  %333 = icmp eq %class.S2CellId* %332, null
  br i1 %333, label %336, label %334

334:                                              ; preds = %331
  %335 = bitcast %class.S2CellId* %332 to i8*
  tail call void @_ZdlPv(i8* %335) #15
  br label %336

336:                                              ; preds = %334, %331, %274, %258
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8S2CellId18AppendAllNeighborsEiPNSt3__16vectorIS_NS0_9allocatorIS_EEEE(%class.S2CellId* nocapture readonly, i32, %"class.std::__1::vector"*) local_unnamed_addr #2 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #14
  store i32 -1431655766, i32* %4, align 4
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #14
  store i32 -1431655766, i32* %5, align 4
  %8 = call i32 @_ZNK8S2CellId19ToFaceIJOrientationEPiS0_S0_(%class.S2CellId* %0, i32* nonnull %4, i32* nonnull %5, i32* null)
  %9 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = tail call i64 @llvm.cttz.i64(i64 %10, i1 true) #14, !range !2
  %12 = trunc i64 %11 to i32
  %13 = lshr i32 %12, 1
  %14 = shl i32 1, %13
  %15 = sub nsw i32 0, %14
  %16 = load i32, i32* %4, align 4
  %17 = and i32 %16, %15
  store i32 %17, i32* %4, align 4
  %18 = load i32, i32* %5, align 4
  %19 = and i32 %18, %15
  store i32 %19, i32* %5, align 4
  %20 = sub nsw i32 30, %1
  %21 = shl i32 1, %20
  %22 = sub nsw i32 0, %21
  %23 = sub nsw i32 %17, %21
  %24 = sub nsw i32 %19, %21
  %25 = icmp slt i32 %19, %14
  %26 = shl i32 %1, 1
  %27 = sub i32 60, %26
  %28 = zext i32 %27 to i64
  %29 = shl i64 1, %28
  %30 = sub i64 0, %29
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %class.S2CellId** %31 to i64*
  %34 = bitcast %"class.std::__1::vector"* %2 to i64*
  %35 = bitcast %class.S2CellId** %32 to i64*
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %37 = add nsw i32 %19, %14
  %38 = icmp slt i32 %37, 1073741824
  %39 = icmp slt i32 %17, %14
  %40 = add nsw i32 %17, %14
  %41 = icmp slt i32 %40, 1073741824
  br label %42

42:                                               ; preds = %343, %3
  %43 = phi i32 [ %22, %3 ], [ %345, %343 ]
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %42
  %46 = add nsw i32 %43, %19
  %47 = icmp sgt i32 %46, -1
  br i1 %47, label %196, label %201

48:                                               ; preds = %42
  %49 = icmp slt i32 %43, %14
  br i1 %49, label %50, label %193

50:                                               ; preds = %48
  %51 = add nsw i32 %43, %17
  br i1 %25, label %54, label %52

52:                                               ; preds = %50
  %53 = tail call i64 @_ZN8S2CellId10FromFaceIJEiii(i32 %8, i32 %51, i32 %24) #14
  br label %56

54:                                               ; preds = %50
  %55 = tail call i64 @_ZN8S2CellId14FromFaceIJWrapEiii(i32 %8, i32 %51, i32 %24) #14
  br label %56

56:                                               ; preds = %52, %54
  %57 = phi i64 [ %53, %52 ], [ %55, %54 ]
  %58 = and i64 %57, %30
  %59 = or i64 %58, %29
  %60 = load %class.S2CellId*, %class.S2CellId** %31, align 8
  %61 = load %class.S2CellId*, %class.S2CellId** %32, align 8
  %62 = icmp ult %class.S2CellId* %60, %61
  %63 = ptrtoint %class.S2CellId* %61 to i64
  br i1 %62, label %64, label %68

64:                                               ; preds = %56
  %65 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %60, i64 0, i32 0
  store i64 %59, i64* %65, align 8
  %66 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %60, i64 1
  %67 = ptrtoint %class.S2CellId* %66 to i64
  store i64 %67, i64* %33, align 8
  br label %121

68:                                               ; preds = %56
  %69 = ptrtoint %class.S2CellId* %60 to i64
  %70 = load i64, i64* %34, align 8
  %71 = sub i64 %69, %70
  %72 = ashr exact i64 %71, 3
  %73 = add nsw i64 %72, 1
  %74 = icmp ugt i64 %73, 2305843009213693951
  br i1 %74, label %75, label %77

75:                                               ; preds = %68
  %76 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %76) #16
  unreachable

77:                                               ; preds = %68
  %78 = sub i64 %63, %70
  %79 = ashr exact i64 %78, 3
  %80 = icmp ult i64 %79, 1152921504606846975
  br i1 %80, label %81, label %89

81:                                               ; preds = %77
  %82 = ashr exact i64 %78, 2
  %83 = icmp ult i64 %82, %73
  %84 = select i1 %83, i64 %73, i64 %82
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %94, label %86

86:                                               ; preds = %81
  %87 = icmp ugt i64 %84, 2305843009213693951
  br i1 %87, label %88, label %89

88:                                               ; preds = %86
  tail call void @abort() #16
  unreachable

89:                                               ; preds = %86, %77
  %90 = phi i64 [ %84, %86 ], [ 2305843009213693951, %77 ]
  %91 = shl i64 %90, 3
  %92 = tail call i8* @_Znwm(i64 %91) #15
  %93 = bitcast i8* %92 to %class.S2CellId*
  br label %94

94:                                               ; preds = %89, %81
  %95 = phi i64 [ %90, %89 ], [ 0, %81 ]
  %96 = phi %class.S2CellId* [ %93, %89 ], [ null, %81 ]
  %97 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %96, i64 %72
  %98 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %96, i64 %95
  %99 = ptrtoint %class.S2CellId* %98 to i64
  %100 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %97, i64 0, i32 0
  store i64 %59, i64* %100, align 8
  %101 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %97, i64 1
  %102 = ptrtoint %class.S2CellId* %101 to i64
  %103 = load %class.S2CellId*, %class.S2CellId** %36, align 8
  %104 = load i64, i64* %33, align 8
  %105 = ptrtoint %class.S2CellId* %103 to i64
  %106 = sub i64 %104, %105
  %107 = ashr exact i64 %106, 3
  %108 = sub nsw i64 0, %107
  %109 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %97, i64 %108
  %110 = ptrtoint %class.S2CellId* %109 to i64
  %111 = icmp sgt i64 %106, 0
  br i1 %111, label %112, label %116

112:                                              ; preds = %94
  %113 = bitcast %class.S2CellId* %109 to i8*
  %114 = bitcast %class.S2CellId* %103 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 %106, i1 false) #14
  %115 = load %class.S2CellId*, %class.S2CellId** %36, align 8
  br label %116

116:                                              ; preds = %112, %94
  %117 = phi %class.S2CellId* [ %103, %94 ], [ %115, %112 ]
  store i64 %110, i64* %34, align 8
  store i64 %102, i64* %33, align 8
  store i64 %99, i64* %35, align 8
  %118 = icmp eq %class.S2CellId* %117, null
  br i1 %118, label %121, label %119

119:                                              ; preds = %116
  %120 = bitcast %class.S2CellId* %117 to i8*
  tail call void @_ZdlPv(i8* %120) #15
  br label %121

121:                                              ; preds = %64, %116, %119
  br i1 %38, label %122, label %124

122:                                              ; preds = %121
  %123 = tail call i64 @_ZN8S2CellId10FromFaceIJEiii(i32 %8, i32 %51, i32 %37) #14
  br label %126

124:                                              ; preds = %121
  %125 = tail call i64 @_ZN8S2CellId14FromFaceIJWrapEiii(i32 %8, i32 %51, i32 %37) #14
  br label %126

126:                                              ; preds = %122, %124
  %127 = phi i64 [ %123, %122 ], [ %125, %124 ]
  %128 = and i64 %127, %30
  %129 = or i64 %128, %29
  %130 = load %class.S2CellId*, %class.S2CellId** %31, align 8
  %131 = load %class.S2CellId*, %class.S2CellId** %32, align 8
  %132 = icmp ult %class.S2CellId* %130, %131
  %133 = ptrtoint %class.S2CellId* %131 to i64
  br i1 %132, label %134, label %138

134:                                              ; preds = %126
  %135 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %130, i64 0, i32 0
  store i64 %129, i64* %135, align 8
  %136 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %130, i64 1
  %137 = ptrtoint %class.S2CellId* %136 to i64
  store i64 %137, i64* %33, align 8
  br label %191

138:                                              ; preds = %126
  %139 = ptrtoint %class.S2CellId* %130 to i64
  %140 = load i64, i64* %34, align 8
  %141 = sub i64 %139, %140
  %142 = ashr exact i64 %141, 3
  %143 = add nsw i64 %142, 1
  %144 = icmp ugt i64 %143, 2305843009213693951
  br i1 %144, label %145, label %147

145:                                              ; preds = %138
  %146 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %146) #16
  unreachable

147:                                              ; preds = %138
  %148 = sub i64 %133, %140
  %149 = ashr exact i64 %148, 3
  %150 = icmp ult i64 %149, 1152921504606846975
  br i1 %150, label %151, label %159

151:                                              ; preds = %147
  %152 = ashr exact i64 %148, 2
  %153 = icmp ult i64 %152, %143
  %154 = select i1 %153, i64 %143, i64 %152
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %164, label %156

156:                                              ; preds = %151
  %157 = icmp ugt i64 %154, 2305843009213693951
  br i1 %157, label %158, label %159

158:                                              ; preds = %156
  tail call void @abort() #16
  unreachable

159:                                              ; preds = %156, %147
  %160 = phi i64 [ %154, %156 ], [ 2305843009213693951, %147 ]
  %161 = shl i64 %160, 3
  %162 = tail call i8* @_Znwm(i64 %161) #15
  %163 = bitcast i8* %162 to %class.S2CellId*
  br label %164

164:                                              ; preds = %159, %151
  %165 = phi i64 [ %160, %159 ], [ 0, %151 ]
  %166 = phi %class.S2CellId* [ %163, %159 ], [ null, %151 ]
  %167 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %166, i64 %142
  %168 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %166, i64 %165
  %169 = ptrtoint %class.S2CellId* %168 to i64
  %170 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %167, i64 0, i32 0
  store i64 %129, i64* %170, align 8
  %171 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %167, i64 1
  %172 = ptrtoint %class.S2CellId* %171 to i64
  %173 = load %class.S2CellId*, %class.S2CellId** %36, align 8
  %174 = load i64, i64* %33, align 8
  %175 = ptrtoint %class.S2CellId* %173 to i64
  %176 = sub i64 %174, %175
  %177 = ashr exact i64 %176, 3
  %178 = sub nsw i64 0, %177
  %179 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %167, i64 %178
  %180 = ptrtoint %class.S2CellId* %179 to i64
  %181 = icmp sgt i64 %176, 0
  br i1 %181, label %182, label %186

182:                                              ; preds = %164
  %183 = bitcast %class.S2CellId* %179 to i8*
  %184 = bitcast %class.S2CellId* %173 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %183, i8* align 8 %184, i64 %176, i1 false) #14
  %185 = load %class.S2CellId*, %class.S2CellId** %36, align 8
  br label %186

186:                                              ; preds = %182, %164
  %187 = phi %class.S2CellId* [ %173, %164 ], [ %185, %182 ]
  store i64 %180, i64* %34, align 8
  store i64 %172, i64* %33, align 8
  store i64 %169, i64* %35, align 8
  %188 = icmp eq %class.S2CellId* %187, null
  br i1 %188, label %191, label %189

189:                                              ; preds = %186
  %190 = bitcast %class.S2CellId* %187 to i8*
  tail call void @_ZdlPv(i8* %190) #15
  br label %191

191:                                              ; preds = %134, %186, %189
  %192 = add nsw i32 %43, %19
  br i1 %39, label %201, label %198

193:                                              ; preds = %48
  %194 = add nsw i32 %43, %19
  %195 = icmp slt i32 %194, 1073741824
  br i1 %195, label %196, label %201

196:                                              ; preds = %193, %45
  %197 = phi i32 [ %194, %193 ], [ %46, %45 ]
  br i1 %39, label %201, label %198

198:                                              ; preds = %191, %196
  %199 = phi i32 [ %192, %191 ], [ %197, %196 ]
  %200 = tail call i64 @_ZN8S2CellId10FromFaceIJEiii(i32 %8, i32 %23, i32 %199) #14
  br label %205

201:                                              ; preds = %191, %196, %45, %193
  %202 = phi i1 [ true, %196 ], [ true, %191 ], [ false, %45 ], [ false, %193 ]
  %203 = phi i32 [ %197, %196 ], [ %192, %191 ], [ %46, %45 ], [ %194, %193 ]
  %204 = tail call i64 @_ZN8S2CellId14FromFaceIJWrapEiii(i32 %8, i32 %23, i32 %203) #14
  br label %205

205:                                              ; preds = %198, %201
  %206 = phi i1 [ true, %198 ], [ %202, %201 ]
  %207 = phi i32 [ %199, %198 ], [ %203, %201 ]
  %208 = phi i64 [ %200, %198 ], [ %204, %201 ]
  %209 = and i64 %208, %30
  %210 = or i64 %209, %29
  %211 = load %class.S2CellId*, %class.S2CellId** %31, align 8
  %212 = load %class.S2CellId*, %class.S2CellId** %32, align 8
  %213 = icmp ult %class.S2CellId* %211, %212
  %214 = ptrtoint %class.S2CellId* %212 to i64
  br i1 %213, label %215, label %219

215:                                              ; preds = %205
  %216 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %211, i64 0, i32 0
  store i64 %210, i64* %216, align 8
  %217 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %211, i64 1
  %218 = ptrtoint %class.S2CellId* %217 to i64
  store i64 %218, i64* %33, align 8
  br label %272

219:                                              ; preds = %205
  %220 = ptrtoint %class.S2CellId* %211 to i64
  %221 = load i64, i64* %34, align 8
  %222 = sub i64 %220, %221
  %223 = ashr exact i64 %222, 3
  %224 = add nsw i64 %223, 1
  %225 = icmp ugt i64 %224, 2305843009213693951
  br i1 %225, label %226, label %228

226:                                              ; preds = %219
  %227 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %227) #16
  unreachable

228:                                              ; preds = %219
  %229 = sub i64 %214, %221
  %230 = ashr exact i64 %229, 3
  %231 = icmp ult i64 %230, 1152921504606846975
  br i1 %231, label %232, label %240

232:                                              ; preds = %228
  %233 = ashr exact i64 %229, 2
  %234 = icmp ult i64 %233, %224
  %235 = select i1 %234, i64 %224, i64 %233
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %245, label %237

237:                                              ; preds = %232
  %238 = icmp ugt i64 %235, 2305843009213693951
  br i1 %238, label %239, label %240

239:                                              ; preds = %237
  tail call void @abort() #16
  unreachable

240:                                              ; preds = %237, %228
  %241 = phi i64 [ %235, %237 ], [ 2305843009213693951, %228 ]
  %242 = shl i64 %241, 3
  %243 = tail call i8* @_Znwm(i64 %242) #15
  %244 = bitcast i8* %243 to %class.S2CellId*
  br label %245

245:                                              ; preds = %240, %232
  %246 = phi i64 [ %241, %240 ], [ 0, %232 ]
  %247 = phi %class.S2CellId* [ %244, %240 ], [ null, %232 ]
  %248 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %247, i64 %223
  %249 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %247, i64 %246
  %250 = ptrtoint %class.S2CellId* %249 to i64
  %251 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %248, i64 0, i32 0
  store i64 %210, i64* %251, align 8
  %252 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %248, i64 1
  %253 = ptrtoint %class.S2CellId* %252 to i64
  %254 = load %class.S2CellId*, %class.S2CellId** %36, align 8
  %255 = load i64, i64* %33, align 8
  %256 = ptrtoint %class.S2CellId* %254 to i64
  %257 = sub i64 %255, %256
  %258 = ashr exact i64 %257, 3
  %259 = sub nsw i64 0, %258
  %260 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %248, i64 %259
  %261 = ptrtoint %class.S2CellId* %260 to i64
  %262 = icmp sgt i64 %257, 0
  br i1 %262, label %263, label %267

263:                                              ; preds = %245
  %264 = bitcast %class.S2CellId* %260 to i8*
  %265 = bitcast %class.S2CellId* %254 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %264, i8* align 8 %265, i64 %257, i1 false) #14
  %266 = load %class.S2CellId*, %class.S2CellId** %36, align 8
  br label %267

267:                                              ; preds = %263, %245
  %268 = phi %class.S2CellId* [ %254, %245 ], [ %266, %263 ]
  store i64 %261, i64* %34, align 8
  store i64 %253, i64* %33, align 8
  store i64 %250, i64* %35, align 8
  %269 = icmp eq %class.S2CellId* %268, null
  br i1 %269, label %272, label %270

270:                                              ; preds = %267
  %271 = bitcast %class.S2CellId* %268 to i8*
  tail call void @_ZdlPv(i8* %271) #15
  br label %272

272:                                              ; preds = %215, %267, %270
  %273 = and i1 %41, %206
  br i1 %273, label %274, label %276

274:                                              ; preds = %272
  %275 = tail call i64 @_ZN8S2CellId10FromFaceIJEiii(i32 %8, i32 %40, i32 %207) #14
  br label %278

276:                                              ; preds = %272
  %277 = tail call i64 @_ZN8S2CellId14FromFaceIJWrapEiii(i32 %8, i32 %40, i32 %207) #14
  br label %278

278:                                              ; preds = %274, %276
  %279 = phi i64 [ %275, %274 ], [ %277, %276 ]
  %280 = and i64 %279, %30
  %281 = or i64 %280, %29
  %282 = load %class.S2CellId*, %class.S2CellId** %31, align 8
  %283 = load %class.S2CellId*, %class.S2CellId** %32, align 8
  %284 = icmp ult %class.S2CellId* %282, %283
  %285 = ptrtoint %class.S2CellId* %283 to i64
  br i1 %284, label %286, label %290

286:                                              ; preds = %278
  %287 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %282, i64 0, i32 0
  store i64 %281, i64* %287, align 8
  %288 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %282, i64 1
  %289 = ptrtoint %class.S2CellId* %288 to i64
  store i64 %289, i64* %33, align 8
  br label %343

290:                                              ; preds = %278
  %291 = ptrtoint %class.S2CellId* %282 to i64
  %292 = load i64, i64* %34, align 8
  %293 = sub i64 %291, %292
  %294 = ashr exact i64 %293, 3
  %295 = add nsw i64 %294, 1
  %296 = icmp ugt i64 %295, 2305843009213693951
  br i1 %296, label %297, label %299

297:                                              ; preds = %290
  %298 = bitcast %"class.std::__1::vector"* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %298) #16
  unreachable

299:                                              ; preds = %290
  %300 = sub i64 %285, %292
  %301 = ashr exact i64 %300, 3
  %302 = icmp ult i64 %301, 1152921504606846975
  br i1 %302, label %303, label %311

303:                                              ; preds = %299
  %304 = ashr exact i64 %300, 2
  %305 = icmp ult i64 %304, %295
  %306 = select i1 %305, i64 %295, i64 %304
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %316, label %308

308:                                              ; preds = %303
  %309 = icmp ugt i64 %306, 2305843009213693951
  br i1 %309, label %310, label %311

310:                                              ; preds = %308
  tail call void @abort() #16
  unreachable

311:                                              ; preds = %308, %299
  %312 = phi i64 [ %306, %308 ], [ 2305843009213693951, %299 ]
  %313 = shl i64 %312, 3
  %314 = tail call i8* @_Znwm(i64 %313) #15
  %315 = bitcast i8* %314 to %class.S2CellId*
  br label %316

316:                                              ; preds = %311, %303
  %317 = phi i64 [ %312, %311 ], [ 0, %303 ]
  %318 = phi %class.S2CellId* [ %315, %311 ], [ null, %303 ]
  %319 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %318, i64 %294
  %320 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %318, i64 %317
  %321 = ptrtoint %class.S2CellId* %320 to i64
  %322 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %319, i64 0, i32 0
  store i64 %281, i64* %322, align 8
  %323 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %319, i64 1
  %324 = ptrtoint %class.S2CellId* %323 to i64
  %325 = load %class.S2CellId*, %class.S2CellId** %36, align 8
  %326 = load i64, i64* %33, align 8
  %327 = ptrtoint %class.S2CellId* %325 to i64
  %328 = sub i64 %326, %327
  %329 = ashr exact i64 %328, 3
  %330 = sub nsw i64 0, %329
  %331 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %319, i64 %330
  %332 = ptrtoint %class.S2CellId* %331 to i64
  %333 = icmp sgt i64 %328, 0
  br i1 %333, label %334, label %338

334:                                              ; preds = %316
  %335 = bitcast %class.S2CellId* %331 to i8*
  %336 = bitcast %class.S2CellId* %325 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %335, i8* align 8 %336, i64 %328, i1 false) #14
  %337 = load %class.S2CellId*, %class.S2CellId** %36, align 8
  br label %338

338:                                              ; preds = %334, %316
  %339 = phi %class.S2CellId* [ %325, %316 ], [ %337, %334 ]
  store i64 %332, i64* %34, align 8
  store i64 %324, i64* %33, align 8
  store i64 %321, i64* %35, align 8
  %340 = icmp eq %class.S2CellId* %339, null
  br i1 %340, label %343, label %341

341:                                              ; preds = %338
  %342 = bitcast %class.S2CellId* %339 to i8*
  tail call void @_ZdlPv(i8* %342) #15
  br label %343

343:                                              ; preds = %286, %338, %341
  %344 = icmp slt i32 %43, %14
  %345 = add nsw i32 %43, %21
  br i1 %344, label %42, label %346

346:                                              ; preds = %343
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8S2CellId8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %class.S2CellId* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %class.S2CellId, %class.S2CellId* %1, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 61
  %7 = trunc i64 %6 to i32
  %8 = icmp ult i32 %7, 6
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = sub i64 0, %5
  %11 = and i64 %10, 1537228672809129301
  %12 = and i64 %11, %5
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %9, %2
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i64 %5) #14
  br label %41

15:                                               ; preds = %9
  %16 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #14
  %17 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false)
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %7) #14
  %18 = load i64, i64* %4, align 8
  %19 = call i64 @llvm.cttz.i64(i64 %18, i1 true) #14, !range !2
  %20 = trunc i64 %19 to i32
  %21 = icmp ugt i32 %20, 59
  br i1 %21, label %22, label %24

22:                                               ; preds = %24, %15
  %23 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* nonnull align 8 %16, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #14
  br label %41

24:                                               ; preds = %15, %24
  %25 = phi i64 [ %33, %24 ], [ 1, %15 ]
  %26 = phi i64 [ %34, %24 ], [ %18, %15 ]
  %27 = shl nuw i64 %25, 1
  %28 = sub nuw nsw i64 61, %27
  %29 = lshr i64 %26, %28
  %30 = and i64 %29, 3
  %31 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.3, i64 0, i64 %30
  %32 = load i8, i8* %31, align 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %3, i8 signext %32) #14
  %33 = add nuw nsw i64 %25, 1
  %34 = load i64, i64* %4, align 8
  %35 = call i64 @llvm.cttz.i64(i64 %34, i1 true) #14, !range !2
  %36 = trunc i64 %35 to i32
  %37 = lshr i32 %36, 1
  %38 = sub nsw i32 30, %37
  %39 = sext i32 %38 to i64
  %40 = icmp slt i64 %25, %39
  br i1 %40, label %24, label %22

41:                                               ; preds = %22, %14
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEE8S2CellId(%"class.std::__1::basic_ostream"* dereferenceable(160), i64) local_unnamed_addr #2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  %6 = lshr i64 %1, 61
  %7 = trunc i64 %6 to i32
  %8 = icmp ult i32 %7, 6
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = sub i64 0, %1
  %11 = and i64 %10, 1537228672809129301
  %12 = and i64 %11, %1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %9, %2
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i64 %1) #14
  br label %35

15:                                               ; preds = %9
  %16 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #14, !noalias !16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false) #14, !noalias !16
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %7) #14
  %17 = call i64 @llvm.cttz.i64(i64 %1, i1 true) #14, !range !2
  %18 = trunc i64 %17 to i32
  %19 = icmp ugt i32 %18, 59
  br i1 %19, label %24, label %20

20:                                               ; preds = %15
  %21 = lshr i32 %18, 1
  %22 = sub nuw nsw i32 30, %21
  %23 = sext i32 %22 to i64
  br label %25

24:                                               ; preds = %25, %15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* nonnull align 8 %16, i64 24, i1 false) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #14, !noalias !16
  br label %35

25:                                               ; preds = %20, %25
  %26 = phi i64 [ %33, %25 ], [ 1, %20 ]
  %27 = shl nuw i64 %26, 1
  %28 = sub nuw nsw i64 61, %27
  %29 = lshr i64 %1, %28
  %30 = and i64 %29, 3
  %31 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.3, i64 0, i64 %30
  %32 = load i8, i8* %31, align 1
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"* nonnull %3, i8 signext %32) #14
  %33 = add nuw nsw i64 %26, 1
  %34 = icmp slt i64 %26, %23
  br i1 %34, label %25, label %24

35:                                               ; preds = %14, %24
  %36 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = zext i8 %38 to i64
  %45 = select i1 %39, i8* %41, i8* %5
  %46 = select i1 %39, i64 %43, i64 %44
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %45, i64 %46) #14
  %48 = load i8, i8* %37, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %35
  %51 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %51) #15
  br label %52

52:                                               ; preds = %35, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  ret %"class.std::__1::basic_ostream"* %47
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #6

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNSt3__111__call_onceERVmPvPFvS2_E(i64* dereferenceable(8), i8*, void (i8*)*) local_unnamed_addr #4

; Function Attrs: nofree nounwind ssp uwtable writeonly
define internal void @_ZNSt3__117__call_once_proxyINS_5tupleIJOZL9MaybeInitvEUlvE_EEEEEvPv(i8* nocapture readnone) #9 {
  tail call fastcc void @_ZL14InitLookupCelliiiiii(i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) #14
  tail call fastcc void @_ZL14InitLookupCelliiiiii(i32 0, i32 0, i32 0, i32 1, i32 0, i32 1) #14
  tail call fastcc void @_ZL14InitLookupCelliiiiii(i32 0, i32 0, i32 0, i32 2, i32 0, i32 2) #14
  tail call fastcc void @_ZL14InitLookupCelliiiiii(i32 0, i32 0, i32 0, i32 3, i32 0, i32 3) #14
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable writeonly
define internal fastcc void @_ZL14InitLookupCelliiiiii(i32, i32, i32, i32, i32, i32) unnamed_addr #9 {
  %7 = icmp eq i32 %0, 4
  br i1 %7, label %13, label %8

8:                                                ; preds = %6
  %9 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @_ZN2S28internal17kPosToOrientationE, i64 0, i64 0), align 16
  %10 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @_ZN2S28internal17kPosToOrientationE, i64 0, i64 1), align 4
  %11 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @_ZN2S28internal17kPosToOrientationE, i64 0, i64 2), align 8
  %12 = load i32, i32* getelementptr inbounds ([4 x i32], [4 x i32]* @_ZN2S28internal17kPosToOrientationE, i64 0, i64 3), align 4
  br label %32

13:                                               ; preds = %32, %6
  %14 = phi i32 [ %1, %6 ], [ %69, %32 ]
  %15 = phi i32 [ %2, %6 ], [ %71, %32 ]
  %16 = phi i32 [ %4, %6 ], [ %72, %32 ]
  %17 = phi i32 [ %5, %6 ], [ %73, %32 ]
  %18 = shl i32 %14, 4
  %19 = add nsw i32 %18, %15
  %20 = shl i32 %16, 2
  %21 = add nsw i32 %20, %17
  %22 = trunc i32 %21 to i16
  %23 = shl i32 %19, 2
  %24 = add nsw i32 %23, %3
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [1024 x i16], [1024 x i16]* @_ZL10lookup_pos, i64 0, i64 %25
  store i16 %22, i16* %26, align 2
  %27 = add nsw i32 %23, %17
  %28 = trunc i32 %27 to i16
  %29 = add nsw i32 %20, %3
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [1024 x i16], [1024 x i16]* @_ZL9lookup_ij, i64 0, i64 %30
  store i16 %28, i16* %31, align 2
  ret void

32:                                               ; preds = %8, %32
  %33 = phi i32 [ %5, %8 ], [ %73, %32 ]
  %34 = phi i32 [ %4, %8 ], [ %72, %32 ]
  %35 = phi i32 [ %2, %8 ], [ %71, %32 ]
  %36 = phi i32 [ %1, %8 ], [ %69, %32 ]
  %37 = phi i32 [ %0, %8 ], [ %38, %32 ]
  %38 = add nsw i32 %37, 1
  %39 = shl i32 %36, 1
  %40 = shl i32 %35, 1
  %41 = shl i32 %34, 2
  %42 = sext i32 %33 to i64
  %43 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @_ZN2S28internal8kPosToIJE, i64 0, i64 %42, i64 0
  %44 = load i32, i32* %43, align 16
  %45 = ashr i32 %44, 1
  %46 = add nsw i32 %45, %39
  %47 = and i32 %44, 1
  %48 = or i32 %47, %40
  %49 = xor i32 %9, %33
  tail call fastcc void @_ZL14InitLookupCelliiiiii(i32 %38, i32 %46, i32 %48, i32 %3, i32 %41, i32 %49)
  %50 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @_ZN2S28internal8kPosToIJE, i64 0, i64 %42, i64 1
  %51 = load i32, i32* %50, align 4
  %52 = ashr i32 %51, 1
  %53 = add nsw i32 %52, %39
  %54 = and i32 %51, 1
  %55 = or i32 %54, %40
  %56 = or i32 %41, 1
  %57 = xor i32 %10, %33
  tail call fastcc void @_ZL14InitLookupCelliiiiii(i32 %38, i32 %53, i32 %55, i32 %3, i32 %56, i32 %57)
  %58 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @_ZN2S28internal8kPosToIJE, i64 0, i64 %42, i64 2
  %59 = load i32, i32* %58, align 8
  %60 = ashr i32 %59, 1
  %61 = add nsw i32 %60, %39
  %62 = and i32 %59, 1
  %63 = or i32 %62, %40
  %64 = or i32 %41, 2
  %65 = xor i32 %11, %33
  tail call fastcc void @_ZL14InitLookupCelliiiiii(i32 %38, i32 %61, i32 %63, i32 %3, i32 %64, i32 %65)
  %66 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @_ZN2S28internal8kPosToIJE, i64 0, i64 %42, i64 3
  %67 = load i32, i32* %66, align 4
  %68 = ashr i32 %67, 1
  %69 = add nsw i32 %68, %39
  %70 = and i32 %67, 1
  %71 = or i32 %70, %40
  %72 = or i32 %41, 3
  %73 = xor i32 %12, %33
  %74 = icmp eq i32 %38, 4
  br i1 %74, label %13, label %32
}

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #6

; Function Attrs: nofree nounwind
declare double @sin(double) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #12

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc(%"class.std::__1::basic_string"*, i8 signext) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #2 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #14
  %7 = load i8, i8* %6, align 8, !range !19
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #14
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #14
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #14
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #14
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #14
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #14
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #2 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #14
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #15
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #14
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #14
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #14
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #13

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #13

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare <2 x double> @llvm.fabs.v2f64(<2 x double>) #6

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZL15HexFormatStringmm: argument 0"}
!5 = distinct !{!5, !"_ZL15HexFormatStringmm"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK7Vector3IdE3AbsEv: argument 0"}
!8 = distinct !{!8, !"_ZNK7Vector3IdE3AbsEv"}
!9 = !{i32 4543921}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK8S2CellId10ToPointRawEv: argument 0"}
!12 = distinct !{!12, !"_ZNK8S2CellId10ToPointRawEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN2S211FaceUVtoXYZEidd: argument 0"}
!15 = distinct !{!15, !"_ZN2S211FaceUVtoXYZEidd"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK8S2CellId8ToStringEv: argument 0"}
!18 = distinct !{!18, !"_ZNK8S2CellId8ToStringEv"}
!19 = !{i8 0, i8 2}
