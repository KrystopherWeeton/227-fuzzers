; ModuleID = '../../third_party/webrtc/modules/audio_coding/codecs/g711/audio_decoder_pcm.cc'
source_filename = "../../third_party/webrtc/modules/audio_coding/codecs/g711/audio_decoder_pcm.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc::AudioDecoderPcmU" = type { %"class.webrtc::AudioDecoder", i64 }
%"class.webrtc::AudioDecoder" = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::AudioDecoder::ParseResult"*, %"struct.webrtc::AudioDecoder::ParseResult"*, %"class.std::__1::__compressed_pair.7" }
%"struct.webrtc::AudioDecoder::ParseResult" = type { i32, i32, %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.webrtc::AudioDecoder::EncodedAudioFrame"* }
%"class.webrtc::AudioDecoder::EncodedAudioFrame" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.webrtc::AudioDecoder::ParseResult"* }
%"class.rtc::BufferT" = type { i64, i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.webrtc::AudioDecoderPcmA" = type { %"class.webrtc::AudioDecoder", i64 }
%"class.rtc::BufferT.10" = type opaque

$_ZN6webrtc12AudioDecoderD2Ev = comdat any

$_ZN6webrtc16AudioDecoderPcmUD0Ev = comdat any

$_ZN6webrtc16AudioDecoderPcmAD0Ev = comdat any

@_ZTVN6webrtc16AudioDecoderPcmUE = hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::AudioDecoder"*)* @_ZN6webrtc12AudioDecoderD2Ev to i8*), i8* bitcast (void (%"class.webrtc::AudioDecoderPcmU"*)* @_ZN6webrtc16AudioDecoderPcmUD0Ev to i8*), i8* bitcast (void (%"class.std::__1::vector"*, %"class.webrtc::AudioDecoderPcmU"*, %"class.rtc::BufferT"*, i32)* @_ZN6webrtc16AudioDecoderPcmU12ParsePayloadEON3rtc7BufferTIhLb0EEEj to i8*), i8* bitcast (i1 (%"class.webrtc::AudioDecoder"*)* @_ZNK6webrtc12AudioDecoder12HasDecodePlcEv to i8*), i8* bitcast (i64 (%"class.webrtc::AudioDecoder"*, i64, i16*)* @_ZN6webrtc12AudioDecoder9DecodePlcEmPs to i8*), i8* bitcast (void (%"class.webrtc::AudioDecoder"*, i64, %"class.rtc::BufferT.10"*)* @_ZN6webrtc12AudioDecoder11GeneratePlcEmPN3rtc7BufferTIsLb0EEE to i8*), i8* bitcast (void (%"class.webrtc::AudioDecoderPcmU"*)* @_ZN6webrtc16AudioDecoderPcmU5ResetEv to i8*), i8* bitcast (i32 (%"class.webrtc::AudioDecoder"*)* @_ZN6webrtc12AudioDecoder9ErrorCodeEv to i8*), i8* bitcast (i32 (%"class.webrtc::AudioDecoderPcmU"*, i8*, i64)* @_ZNK6webrtc16AudioDecoderPcmU14PacketDurationEPKhm to i8*), i8* bitcast (i32 (%"class.webrtc::AudioDecoder"*, i8*, i64)* @_ZNK6webrtc12AudioDecoder23PacketDurationRedundantEPKhm to i8*), i8* bitcast (i1 (%"class.webrtc::AudioDecoder"*, i8*, i64)* @_ZNK6webrtc12AudioDecoder12PacketHasFecEPKhm to i8*), i8* bitcast (i32 (%"class.webrtc::AudioDecoderPcmU"*)* @_ZNK6webrtc16AudioDecoderPcmU12SampleRateHzEv to i8*), i8* bitcast (i64 (%"class.webrtc::AudioDecoderPcmU"*)* @_ZNK6webrtc16AudioDecoderPcmU8ChannelsEv to i8*), i8* bitcast (i32 (%"class.webrtc::AudioDecoderPcmU"*, i8*, i64, i32, i16*, i32*)* @_ZN6webrtc16AudioDecoderPcmU14DecodeInternalEPKhmiPsPNS_12AudioDecoder10SpeechTypeE to i8*), i8* bitcast (i32 (%"class.webrtc::AudioDecoder"*, i8*, i64, i32, i16*, i32*)* @_ZN6webrtc12AudioDecoder23DecodeRedundantInternalEPKhmiPsPNS0_10SpeechTypeE to i8*)] }, align 8
@_ZTVN6webrtc16AudioDecoderPcmAE = hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::AudioDecoder"*)* @_ZN6webrtc12AudioDecoderD2Ev to i8*), i8* bitcast (void (%"class.webrtc::AudioDecoderPcmA"*)* @_ZN6webrtc16AudioDecoderPcmAD0Ev to i8*), i8* bitcast (void (%"class.std::__1::vector"*, %"class.webrtc::AudioDecoderPcmA"*, %"class.rtc::BufferT"*, i32)* @_ZN6webrtc16AudioDecoderPcmA12ParsePayloadEON3rtc7BufferTIhLb0EEEj to i8*), i8* bitcast (i1 (%"class.webrtc::AudioDecoder"*)* @_ZNK6webrtc12AudioDecoder12HasDecodePlcEv to i8*), i8* bitcast (i64 (%"class.webrtc::AudioDecoder"*, i64, i16*)* @_ZN6webrtc12AudioDecoder9DecodePlcEmPs to i8*), i8* bitcast (void (%"class.webrtc::AudioDecoder"*, i64, %"class.rtc::BufferT.10"*)* @_ZN6webrtc12AudioDecoder11GeneratePlcEmPN3rtc7BufferTIsLb0EEE to i8*), i8* bitcast (void (%"class.webrtc::AudioDecoderPcmA"*)* @_ZN6webrtc16AudioDecoderPcmA5ResetEv to i8*), i8* bitcast (i32 (%"class.webrtc::AudioDecoder"*)* @_ZN6webrtc12AudioDecoder9ErrorCodeEv to i8*), i8* bitcast (i32 (%"class.webrtc::AudioDecoderPcmA"*, i8*, i64)* @_ZNK6webrtc16AudioDecoderPcmA14PacketDurationEPKhm to i8*), i8* bitcast (i32 (%"class.webrtc::AudioDecoder"*, i8*, i64)* @_ZNK6webrtc12AudioDecoder23PacketDurationRedundantEPKhm to i8*), i8* bitcast (i1 (%"class.webrtc::AudioDecoder"*, i8*, i64)* @_ZNK6webrtc12AudioDecoder12PacketHasFecEPKhm to i8*), i8* bitcast (i32 (%"class.webrtc::AudioDecoderPcmA"*)* @_ZNK6webrtc16AudioDecoderPcmA12SampleRateHzEv to i8*), i8* bitcast (i64 (%"class.webrtc::AudioDecoderPcmA"*)* @_ZNK6webrtc16AudioDecoderPcmA8ChannelsEv to i8*), i8* bitcast (i32 (%"class.webrtc::AudioDecoderPcmA"*, i8*, i64, i32, i16*, i32*)* @_ZN6webrtc16AudioDecoderPcmA14DecodeInternalEPKhmiPsPNS_12AudioDecoder10SpeechTypeE to i8*), i8* bitcast (i32 (%"class.webrtc::AudioDecoder"*, i8*, i64, i32, i16*, i32*)* @_ZN6webrtc12AudioDecoder23DecodeRedundantInternalEPKhmiPsPNS0_10SpeechTypeE to i8*)] }, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc16AudioDecoderPcmU5ResetEv(%"class.webrtc::AudioDecoderPcmU"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16AudioDecoderPcmU12ParsePayloadEON3rtc7BufferTIhLb0EEEj(%"class.std::__1::vector"* noalias sret, %"class.webrtc::AudioDecoderPcmU"*, %"class.rtc::BufferT"* dereferenceable(24), i32) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::AudioDecoderPcmU", %"class.webrtc::AudioDecoderPcmU"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"class.webrtc::AudioDecoderPcmU", %"class.webrtc::AudioDecoderPcmU"* %1, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 3
  tail call void @_ZN6webrtc23LegacyEncodedAudioFrame14SplitBySamplesEPNS_12AudioDecoderEON3rtc7BufferTIhLb0EEEjmj(%"class.std::__1::vector"* sret %0, %"class.webrtc::AudioDecoder"* %5, %"class.rtc::BufferT"* dereferenceable(24) %2, i32 %3, i64 %8, i32 8) #7
  ret void
}

declare void @_ZN6webrtc23LegacyEncodedAudioFrame14SplitBySamplesEPNS_12AudioDecoderEON3rtc7BufferTIhLb0EEEjmj(%"class.std::__1::vector"* sret, %"class.webrtc::AudioDecoder"*, %"class.rtc::BufferT"* dereferenceable(24), i32, i64, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK6webrtc16AudioDecoderPcmU12SampleRateHzEv(%"class.webrtc::AudioDecoderPcmU"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 8000
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6webrtc16AudioDecoderPcmU8ChannelsEv(%"class.webrtc::AudioDecoderPcmU"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AudioDecoderPcmU", %"class.webrtc::AudioDecoderPcmU"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc16AudioDecoderPcmU14DecodeInternalEPKhmiPsPNS_12AudioDecoder10SpeechTypeE(%"class.webrtc::AudioDecoderPcmU"* nocapture readnone, i8*, i64, i32, i16*, i32* nocapture) unnamed_addr #1 align 2 {
  %7 = alloca i16, align 2
  %8 = bitcast i16* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %8) #7
  store i16 1, i16* %7, align 2
  %9 = call i64 @WebRtcG711_DecodeU(i8* %1, i64 %2, i16* %4, i16* nonnull %7) #7
  %10 = load i16, i16* %7, align 2
  %11 = call i32 @_ZN6webrtc12AudioDecoder17ConvertSpeechTypeEs(i16 signext %10) #7
  store i32 %11, i32* %5, align 4
  %12 = trunc i64 %9 to i32
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %8) #7
  ret i32 %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare i64 @WebRtcG711_DecodeU(i8*, i64, i16*, i16*) local_unnamed_addr #2

declare i32 @_ZN6webrtc12AudioDecoder17ConvertSpeechTypeEs(i16 signext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6webrtc16AudioDecoderPcmU14PacketDurationEPKhm(%"class.webrtc::AudioDecoderPcmU"* nocapture readonly, i8* nocapture readnone, i64) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::AudioDecoderPcmU", %"class.webrtc::AudioDecoderPcmU"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = udiv i64 %2, %5
  %7 = trunc i64 %6 to i32
  ret i32 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc16AudioDecoderPcmA5ResetEv(%"class.webrtc::AudioDecoderPcmA"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16AudioDecoderPcmA12ParsePayloadEON3rtc7BufferTIhLb0EEEj(%"class.std::__1::vector"* noalias sret, %"class.webrtc::AudioDecoderPcmA"*, %"class.rtc::BufferT"* dereferenceable(24), i32) unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::AudioDecoderPcmA", %"class.webrtc::AudioDecoderPcmA"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"class.webrtc::AudioDecoderPcmA", %"class.webrtc::AudioDecoderPcmA"* %1, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = shl i64 %7, 3
  tail call void @_ZN6webrtc23LegacyEncodedAudioFrame14SplitBySamplesEPNS_12AudioDecoderEON3rtc7BufferTIhLb0EEEjmj(%"class.std::__1::vector"* sret %0, %"class.webrtc::AudioDecoder"* %5, %"class.rtc::BufferT"* dereferenceable(24) %2, i32 %3, i64 %8, i32 8) #7
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK6webrtc16AudioDecoderPcmA12SampleRateHzEv(%"class.webrtc::AudioDecoderPcmA"* nocapture readnone) unnamed_addr #0 align 2 {
  ret i32 8000
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6webrtc16AudioDecoderPcmA8ChannelsEv(%"class.webrtc::AudioDecoderPcmA"* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AudioDecoderPcmA", %"class.webrtc::AudioDecoderPcmA"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc16AudioDecoderPcmA14DecodeInternalEPKhmiPsPNS_12AudioDecoder10SpeechTypeE(%"class.webrtc::AudioDecoderPcmA"* nocapture readnone, i8*, i64, i32, i16*, i32* nocapture) unnamed_addr #1 align 2 {
  %7 = alloca i16, align 2
  %8 = bitcast i16* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %8) #7
  store i16 1, i16* %7, align 2
  %9 = call i64 @WebRtcG711_DecodeA(i8* %1, i64 %2, i16* %4, i16* nonnull %7) #7
  %10 = load i16, i16* %7, align 2
  %11 = call i32 @_ZN6webrtc12AudioDecoder17ConvertSpeechTypeEs(i16 signext %10) #7
  store i32 %11, i32* %5, align 4
  %12 = trunc i64 %9 to i32
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %8) #7
  ret i32 %12
}

declare i64 @WebRtcG711_DecodeA(i8*, i64, i16*, i16*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6webrtc16AudioDecoderPcmA14PacketDurationEPKhm(%"class.webrtc::AudioDecoderPcmA"* nocapture readonly, i8* nocapture readnone, i64) unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::AudioDecoderPcmA", %"class.webrtc::AudioDecoderPcmA"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = udiv i64 %2, %5
  %7 = trunc i64 %6 to i32
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc12AudioDecoderD2Ev(%"class.webrtc::AudioDecoder"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc16AudioDecoderPcmUD0Ev(%"class.webrtc::AudioDecoderPcmU"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.webrtc::AudioDecoderPcmU"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

declare zeroext i1 @_ZNK6webrtc12AudioDecoder12HasDecodePlcEv(%"class.webrtc::AudioDecoder"*) unnamed_addr #2

declare i64 @_ZN6webrtc12AudioDecoder9DecodePlcEmPs(%"class.webrtc::AudioDecoder"*, i64, i16*) unnamed_addr #2

declare void @_ZN6webrtc12AudioDecoder11GeneratePlcEmPN3rtc7BufferTIsLb0EEE(%"class.webrtc::AudioDecoder"*, i64, %"class.rtc::BufferT.10"*) unnamed_addr #2

declare i32 @_ZN6webrtc12AudioDecoder9ErrorCodeEv(%"class.webrtc::AudioDecoder"*) unnamed_addr #2

declare i32 @_ZNK6webrtc12AudioDecoder23PacketDurationRedundantEPKhm(%"class.webrtc::AudioDecoder"*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZNK6webrtc12AudioDecoder12PacketHasFecEPKhm(%"class.webrtc::AudioDecoder"*, i8*, i64) unnamed_addr #2

declare i32 @_ZN6webrtc12AudioDecoder23DecodeRedundantInternalEPKhmiPsPNS0_10SpeechTypeE(%"class.webrtc::AudioDecoder"*, i8*, i64, i32, i16*, i32*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc16AudioDecoderPcmAD0Ev(%"class.webrtc::AudioDecoderPcmA"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.webrtc::AudioDecoderPcmA"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
