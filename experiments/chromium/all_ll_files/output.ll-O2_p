; ModuleID = '../../third_party/abseil-cpp/absl/strings/internal/str_format/output.cc'
source_filename = "../../third_party/abseil-cpp/absl/strings/internal/str_format/output.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.absl::str_format_internal::BufferRawSink" = type { i8*, i64, i64 }
%"class.absl::str_format_internal::FILERawSink" = type { %struct._IO_FILE*, i32, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl19str_format_internal13BufferRawSink5WriteENS_11string_viewE(%"class.absl::str_format_internal::BufferRawSink"* nocapture, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.absl::str_format_internal::BufferRawSink", %"class.absl::str_format_internal::BufferRawSink"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, %2
  %7 = select i1 %6, i64 %5, i64 %2
  %8 = getelementptr inbounds %"class.absl::str_format_internal::BufferRawSink", %"class.absl::str_format_internal::BufferRawSink"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %9, i8* align 1 %1, i64 %7, i1 false)
  %10 = load i8*, i8** %8, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %7
  store i8* %11, i8** %8, align 8
  %12 = load i64, i64* %4, align 8
  %13 = sub i64 %12, %7
  store i64 %13, i64* %4, align 8
  %14 = getelementptr inbounds %"class.absl::str_format_internal::BufferRawSink", %"class.absl::str_format_internal::BufferRawSink"* %0, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = add i64 %15, %2
  store i64 %16, i64* %14, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl19str_format_internal11FILERawSink5WriteENS_11string_viewE(%"class.absl::str_format_internal::FILERawSink"* nocapture, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %48, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.absl::str_format_internal::FILERawSink", %"class.absl::str_format_internal::FILERawSink"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.absl::str_format_internal::FILERawSink", %"class.absl::str_format_internal::FILERawSink"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.absl::str_format_internal::FILERawSink", %"class.absl::str_format_internal::FILERawSink"* %0, i64 0, i32 2
  br label %9

9:                                                ; preds = %5, %44
  %10 = phi i8* [ %1, %5 ], [ %45, %44 ]
  %11 = phi i64 [ %2, %5 ], [ %46, %44 ]
  %12 = load i32, i32* %6, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %48

14:                                               ; preds = %9
  %15 = tail call i32* @__errno_location() #6
  %16 = load i32, i32* %15, align 4
  store i32 0, i32* %15, align 4
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %18 = tail call i64 @fwrite(i8* %10, i64 1, i64 %11, %struct._IO_FILE* %17)
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %14
  %21 = load i64, i64* %8, align 8
  %22 = add i64 %21, %18
  store i64 %22, i64* %8, align 8
  %23 = icmp ult i64 %11, %18
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %20
  tail call void @llvm.trap() #7
  unreachable

25:                                               ; preds = %20
  %26 = getelementptr inbounds i8, i8* %10, i64 %18
  %27 = sub i64 %11, %18
  br label %36

28:                                               ; preds = %14
  %29 = load i32, i32* %15, align 4
  switch i32 %29, label %30 [
    i32 4, label %44
    i32 0, label %31
  ]

30:                                               ; preds = %28
  store i32 %29, i32* %6, align 8
  br label %36

31:                                               ; preds = %28
  %32 = load %struct._IO_FILE*, %struct._IO_FILE** %7, align 8
  %33 = tail call i32 @ferror(%struct._IO_FILE* %32) #7
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %31
  store i32 9, i32* %6, align 8
  br label %36

36:                                               ; preds = %25, %30, %35
  %37 = phi i64 [ %27, %25 ], [ %11, %35 ], [ %11, %30 ]
  %38 = phi i8* [ %26, %25 ], [ %10, %35 ], [ %10, %30 ]
  %39 = load i32, i32* %15, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %31, %36
  %42 = phi i8* [ %38, %36 ], [ %10, %31 ]
  %43 = phi i64 [ %37, %36 ], [ %11, %31 ]
  store i32 %16, i32* %15, align 4
  br label %44

44:                                               ; preds = %28, %36, %41
  %45 = phi i8* [ %38, %36 ], [ %42, %41 ], [ %10, %28 ]
  %46 = phi i64 [ %37, %36 ], [ %43, %41 ], [ %11, %28 ]
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %9

48:                                               ; preds = %9, %44, %3
  ret void
}

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @ferror(%struct._IO_FILE* nocapture) local_unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind readnone }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
