; ModuleID = '../../components/reporting/storage/resources/disk_resource_impl.cc'
source_filename = "../../components/reporting/storage/resources/disk_resource_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.base::NoDestructor" = type { [24 x i8] }
%"class.reporting::DiskResourceImpl" = type { %"class.reporting::ResourceInterface", i64, %"struct.std::__1::atomic" }
%"class.reporting::ResourceInterface" = type { i32 (...)** }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }

@_ZTVN9reporting16DiskResourceImplE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.reporting::DiskResourceImpl"*)* @_ZN9reporting16DiskResourceImplD2Ev to i8*), i8* bitcast (void (%"class.reporting::DiskResourceImpl"*)* @_ZN9reporting16DiskResourceImplD0Ev to i8*), i8* bitcast (i1 (%"class.reporting::DiskResourceImpl"*, i64)* @_ZN9reporting16DiskResourceImpl7ReserveEm to i8*), i8* bitcast (void (%"class.reporting::DiskResourceImpl"*, i64)* @_ZN9reporting16DiskResourceImpl7DiscardEm to i8*), i8* bitcast (i64 (%"class.reporting::DiskResourceImpl"*)* @_ZN9reporting16DiskResourceImpl8GetTotalEv to i8*), i8* bitcast (i64 (%"class.reporting::DiskResourceImpl"*)* @_ZN9reporting16DiskResourceImpl7GetUsedEv to i8*), i8* bitcast (void (%"class.reporting::DiskResourceImpl"*, i64)* @_ZN9reporting16DiskResourceImpl13Test_SetTotalEm to i8*)] }, align 8
@_ZZN9reporting15GetDiskResourceEvE4disk = internal global %"class.base::NoDestructor" zeroinitializer, align 8
@_ZGVZN9reporting15GetDiskResourceEvE4disk = internal global i64 0, align 8

@_ZN9reporting16DiskResourceImplC1Ev = hidden unnamed_addr alias void (%"class.reporting::DiskResourceImpl"*), void (%"class.reporting::DiskResourceImpl"*)* @_ZN9reporting16DiskResourceImplC2Ev
@_ZN9reporting16DiskResourceImplD1Ev = hidden unnamed_addr alias void (%"class.reporting::DiskResourceImpl"*), void (%"class.reporting::DiskResourceImpl"*)* @_ZN9reporting16DiskResourceImplD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN9reporting16DiskResourceImplC2Ev(%"class.reporting::DiskResourceImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.reporting::DiskResourceImpl", %"class.reporting::DiskResourceImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN9reporting16DiskResourceImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.reporting::DiskResourceImpl", %"class.reporting::DiskResourceImpl"* %0, i64 0, i32 1
  %4 = bitcast i64* %3 to <2 x i64>*
  store <2 x i64> <i64 268435456, i64 0>, <2 x i64>* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN9reporting16DiskResourceImplD2Ev(%"class.reporting::DiskResourceImpl"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9reporting16DiskResourceImplD0Ev(%"class.reporting::DiskResourceImpl"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.reporting::DiskResourceImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN9reporting16DiskResourceImpl7ReserveEm(%"class.reporting::DiskResourceImpl"* nocapture, i64) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.reporting::DiskResourceImpl", %"class.reporting::DiskResourceImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw add i64* %3, i64 %1 seq_cst
  %5 = add i64 %4, %1
  %6 = getelementptr inbounds %"class.reporting::DiskResourceImpl", %"class.reporting::DiskResourceImpl"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %5, %7
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = atomicrmw sub i64* %3, i64 %1 seq_cst
  br label %11

11:                                               ; preds = %2, %9
  %12 = phi i1 [ false, %9 ], [ true, %2 ]
  ret i1 %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9reporting16DiskResourceImpl7DiscardEm(%"class.reporting::DiskResourceImpl"* nocapture, i64) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.reporting::DiskResourceImpl", %"class.reporting::DiskResourceImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw sub i64* %3, i64 %1 seq_cst
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN9reporting16DiskResourceImpl8GetTotalEv(%"class.reporting::DiskResourceImpl"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.reporting::DiskResourceImpl", %"class.reporting::DiskResourceImpl"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN9reporting16DiskResourceImpl7GetUsedEv(%"class.reporting::DiskResourceImpl"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.reporting::DiskResourceImpl", %"class.reporting::DiskResourceImpl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 seq_cst, align 8
  ret i64 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN9reporting16DiskResourceImpl13Test_SetTotalEm(%"class.reporting::DiskResourceImpl"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.reporting::DiskResourceImpl", %"class.reporting::DiskResourceImpl"* %0, i64 0, i32 1
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden %"class.reporting::ResourceInterface"* @_ZN9reporting15GetDiskResourceEv() local_unnamed_addr #6 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN9reporting15GetDiskResourceEvE4disk to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN9reporting15GetDiskResourceEvE4disk) #9
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN9reporting16DiskResourceImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (%"class.base::NoDestructor"* @_ZZN9reporting15GetDiskResourceEvE4disk to i32 (...)***), align 8
  store <2 x i64> <i64 268435456, i64 0>, <2 x i64>* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN9reporting15GetDiskResourceEvE4disk, i64 0, i32 0, i64 8) to <2 x i64>*), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN9reporting15GetDiskResourceEvE4disk) #9
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.reporting::ResourceInterface"* bitcast (%"class.base::NoDestructor"* @_ZZN9reporting15GetDiskResourceEvE4disk to %"class.reporting::ResourceInterface"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
