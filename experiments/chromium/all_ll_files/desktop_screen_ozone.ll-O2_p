; ModuleID = '../../ui/views/widget/desktop_aura/desktop_screen_ozone.cc'
source_filename = "../../ui/views/widget/desktop_aura/desktop_screen_ozone.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.views::DesktopScreenOzone" = type { %"class.aura::ScreenOzone" }
%"class.aura::ScreenOzone" = type { %"class.display::Screen", %"class.display::Screen"*, %"class.std::__1::unique_ptr" }
%"class.display::Screen" = type { i32 (...)**, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::PlatformScreen"* }
%"class.ui::PlatformScreen" = type opaque
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector.79", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.86", %"class.std::__1::vector.130", i32, i32, i32, [4 x i8], %"class.base::ObserverList.137", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.149", %"class.base::WeakPtr.155" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.1", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.7" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.10", %"class.std::__1::vector.26", %"class.ui::EventHandler"* }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.33" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type { i32 (...)**, %"class.ui::EventDispatcherDelegate"*, %"class.ui::Event"*, %"class.std::__1::vector.26" }
%"class.ui::EventDispatcherDelegate" = type { i32 (...)**, %"class.ui::EventDispatcher"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.19" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.12" }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.14" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.base::flat_map.22"* }
%"class.base::flat_map.22" = type opaque
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.38", %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.46" }
%"class.std::__1::map.46" = type { %"class.std::__1::__tree.47" }
%"class.std::__1::__tree.47" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.48", %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.aura::WindowTreeHost" = type { %"class.ui::internal::InputMethodDelegate", %"class.ui::EventSource", %"class.display::DisplayObserver", %"class.ui::CompositorObserver", %"class.aura::Window"*, i32, [4 x i8], %"class.base::ObserverList.65", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.108", float, %"class.ui::Cursor", %"class.gfx::Point", %"class.std::__1::unique_ptr.117", %"class.ui::InputMethod"*, i8, i8, i8, %"class.base::WeakPtrFactory.123" }
%"class.ui::internal::InputMethodDelegate" = type { i32 (...)** }
%"class.ui::EventSource" = type { i32 (...)**, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.55" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.display::DisplayObserver" = type { %"class.base::CheckedObserver" }
%"class.base::CheckedObserver" = type { i32 (...)**, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.60" }
%"struct.std::__1::atomic.60" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__atomic_base.62" }
%"struct.std::__1::__atomic_base.62" = type { %"struct.std::__1::__cxx_atomic_impl.63" }
%"struct.std::__1::__cxx_atomic_impl.63" = type { %"struct.std::__1::__cxx_atomic_base_impl.64" }
%"struct.std::__1::__cxx_atomic_base_impl.64" = type { i8 }
%"class.ui::CompositorObserver" = type { i32 (...)** }
%"class.base::ObserverList.65" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.66", i64, i32, [4 x i8] }>
%"class.base::LinkedList.66" = type { %"class.base::LinkNode.67" }
%"class.base::LinkNode.67" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.aura::WindowEventDispatcher"* }
%"class.aura::WindowEventDispatcher" = type { %"class.ui::EventProcessor", %"class.ui::GestureEventHelper", %"class.aura::client::CaptureDelegate", %"class.aura::WindowObserver", %"class.aura::EnvObserver", %"class.aura::WindowTreeHost"*, %"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*, %"class.aura::Window"*, %"class.ui::FractionOfTimeWithoutUserInputRecorder", i8, i8, i32, %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73", %"class.ui::LocatedEvent"*, %"class.base::ScopedMultiSourceObservation", %"class.std::__1::unique_ptr.86", i8, %"class.base::OnceCallback", %"class.std::__1::queue", i8, %"class.base::WeakPtrFactory.104", %"class.base::WeakPtrFactory.104" }
%"class.ui::EventProcessor" = type { %"class.ui::EventDispatcherDelegate", %"class.ui::EventSink", %"class.base::WeakPtrFactory.72" }
%"class.ui::EventSink" = type { i32 (...)** }
%"class.base::WeakPtrFactory.72" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.ui::GestureEventHelper" = type { i32 (...)** }
%"class.aura::client::CaptureDelegate" = type { i32 (...)** }
%"class.aura::WindowObserver" = type { %"class.base::CheckedObserver" }
%"class.aura::EnvObserver" = type { i32 (...)** }
%"class.ui::FractionOfTimeWithoutUserInputRecorder" = type { i32 (...)**, %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.ui::LocatedEvent"* }
%"class.ui::LocatedEvent" = type { %"class.ui::Event", %"class.gfx::PointF", %"class.gfx::PointF" }
%"class.gfx::PointF" = type { float, float }
%"class.base::ScopedMultiSourceObservation" = type { %"class.aura::WindowObserver"*, %"class.std::__1::vector.79" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.92 }
%class.scoped_refptr.92 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.93", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.93" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.100" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.94"**, %"class.std::__1::unique_ptr.94"**, %"class.std::__1::unique_ptr.94"**, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::unique_ptr.94" = type opaque
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.std::__1::unique_ptr.94"** }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"class.base::WeakPtrFactory.104" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.ui::Compositor"* }
%"class.ui::Compositor" = type opaque
%"class.ui::Cursor" = type { i32, %class.scoped_refptr.114, float, %"class.gfx::Point", %class.SkBitmap }
%class.scoped_refptr.114 = type { %"class.ui::PlatformCursor"* }
%"class.ui::PlatformCursor" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.116 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.115, i32, i32 }
%class.sk_sp.115 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.60" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.116 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.ui::ViewProp"* }
%"class.ui::ViewProp" = type opaque
%"class.ui::InputMethod" = type opaque
%"class.base::WeakPtrFactory.123" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.aura::WindowDelegate" = type opaque
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.aura::Window"** }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type opaque
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.137" = type <{ %"class.std::__1::vector.138", %"class.base::LinkedList.146", i64, i32, [4 x i8] }>
%"class.std::__1::vector.138" = type { %"class.std::__1::__vector_base.139" }
%"class.std::__1::__vector_base.139" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.141" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.140 }
%class.scoped_refptr.140 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.146" = type { %"class.base::LinkNode.147" }
%"class.base::LinkNode.147" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.155" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::set" = type opaque
%"class.std::__1::vector.156" = type { %"class.std::__1::__vector_base.157" }
%"class.std::__1::__vector_base.157" = type { %"class.display::Display"*, %"class.display::Display"*, %"class.std::__1::__compressed_pair.163" }
%"class.display::Display" = type { i64, %"class.gfx::Rect", %"class.gfx::Size", %"class.gfx::Rect", float, i32, %"class.absl::optional", i32, i32, %"class.gfx::Size", %"class.gfx::DisplayColorSpaces", i32, i32, i8, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.158" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.158" = type { %"class.absl::optional_internal::optional_data.159" }
%"class.absl::optional_internal::optional_data.159" = type { %"class.absl::optional_internal::optional_data_base.160" }
%"class.absl::optional_internal::optional_data_base.160" = type { %"class.absl::optional_internal::optional_data_dtor_base.161" }
%"class.absl::optional_internal::optional_data_dtor_base.161" = type { i8, %union.anon.162 }
%union.anon.162 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.display::Display"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.170 }
%union.anon.170 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.188" }
%"union.absl::variant_internal::DestructibleUnionImpl.188" = type { %"union.absl::variant_internal::DestructibleUnionImpl.189" }
%"union.absl::variant_internal::DestructibleUnionImpl.189" = type { %"union.absl::variant_internal::DestructibleUnionImpl.190" }
%"union.absl::variant_internal::DestructibleUnionImpl.190" = type { %"union.absl::variant_internal::DestructibleUnionImpl.191" }
%"union.absl::variant_internal::DestructibleUnionImpl.191" = type { %"class.std::__1::basic_string" }
%"struct.gfx::GpuExtraInfo" = type { %"class.std::__1::vector.174", %"class.std::__1::vector.181" }
%"class.std::__1::vector.174" = type { %"class.std::__1::__vector_base.175" }
%"class.std::__1::__vector_base.175" = type { %"struct.gfx::ANGLEFeature"*, %"struct.gfx::ANGLEFeature"*, %"class.std::__1::__compressed_pair.176" }
%"struct.gfx::ANGLEFeature" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.gfx::ANGLEFeature"* }
%"class.std::__1::vector.181" = type { %"class.std::__1::__vector_base.182" }
%"class.std::__1::__vector_base.182" = type { %"struct.gfx::BufferUsageAndFormat"*, %"struct.gfx::BufferUsageAndFormat"*, %"class.std::__1::__compressed_pair.183" }
%"struct.gfx::BufferUsageAndFormat" = type { i32, i32 }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"struct.gfx::BufferUsageAndFormat"* }

@_ZTVN5views18DesktopScreenOzoneE = hidden unnamed_addr constant { [26 x i8*] } { [26 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::DesktopScreenOzone"*)* @_ZN5views18DesktopScreenOzoneD2Ev to i8*), i8* bitcast (void (%"class.views::DesktopScreenOzone"*)* @_ZN5views18DesktopScreenOzoneD0Ev to i8*), i8* bitcast (i64 (%"class.aura::ScreenOzone"*)* @_ZN4aura11ScreenOzone20GetCursorScreenPointEv to i8*), i8* bitcast (i1 (%"class.aura::ScreenOzone"*, %"class.aura::Window"*)* @_ZN4aura11ScreenOzone19IsWindowUnderCursorEPNS_6WindowE to i8*), i8* bitcast (%"class.aura::Window"* (%"class.aura::ScreenOzone"*, %"class.gfx::Point"*)* @_ZN4aura11ScreenOzone22GetWindowAtScreenPointERKN3gfx5PointE to i8*), i8* bitcast (%"class.aura::Window"* (%"class.aura::ScreenOzone"*, %"class.gfx::Point"*, %"class.std::__1::set"*)* @_ZN4aura11ScreenOzone28GetLocalProcessWindowAtPointERKN3gfx5PointERKNSt3__13setIPNS_6WindowENS5_4lessIS8_EENS5_9allocatorIS8_EEEE to i8*), i8* bitcast (i32 (%"class.aura::ScreenOzone"*)* @_ZNK4aura11ScreenOzone14GetNumDisplaysEv to i8*), i8* bitcast (%"class.std::__1::vector.156"* (%"class.aura::ScreenOzone"*)* @_ZNK4aura11ScreenOzone14GetAllDisplaysEv to i8*), i8* bitcast (void (%"class.display::Display"*, %"class.aura::ScreenOzone"*, %"class.aura::Window"*)* @_ZNK4aura11ScreenOzone23GetDisplayNearestWindowEPNS_6WindowE to i8*), i8* bitcast (void (%"class.display::Display"*, %"class.aura::ScreenOzone"*, %"class.aura::Window"*)* @_ZNK4aura11ScreenOzone21GetDisplayNearestViewEPNS_6WindowE to i8*), i8* bitcast (void (%"class.display::Display"*, %"class.aura::ScreenOzone"*, %"class.gfx::Point"*)* @_ZNK4aura11ScreenOzone22GetDisplayNearestPointERKN3gfx5PointE to i8*), i8* bitcast (void (%"class.display::Display"*, %"class.aura::ScreenOzone"*, %"class.gfx::Rect"*)* @_ZNK4aura11ScreenOzone18GetDisplayMatchingERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.display::Display"*, %"class.aura::ScreenOzone"*)* @_ZNK4aura11ScreenOzone17GetPrimaryDisplayEv to i8*), i8* bitcast (void (%"class.aura::ScreenOzone"*, i1)* @_ZN4aura11ScreenOzone23SetScreenSaverSuspendedEb to i8*), i8* bitcast (i1 (%"class.aura::ScreenOzone"*)* @_ZNK4aura11ScreenOzone19IsScreenSaverActiveEv to i8*), i8* bitcast (i64 (%"class.aura::ScreenOzone"*)* @_ZNK4aura11ScreenOzone17CalculateIdleTimeEv to i8*), i8* bitcast (void (%"class.aura::ScreenOzone"*, %"class.display::DisplayObserver"*)* @_ZN4aura11ScreenOzone11AddObserverEPN7display15DisplayObserverE to i8*), i8* bitcast (void (%"class.aura::ScreenOzone"*, %"class.display::DisplayObserver"*)* @_ZN4aura11ScreenOzone14RemoveObserverEPN7display15DisplayObserverE to i8*), i8* bitcast ({ i64, i64 } (%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"*)* @_ZNK7display6Screen23ScreenToDIPRectInWindowEPN4aura6WindowERKN3gfx4RectE to i8*), i8* bitcast ({ i64, i64 } (%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"*)* @_ZNK7display6Screen23DIPToScreenRectInWindowEPN4aura6WindowERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.display::Screen"*, i64, i32)* @_ZN7display6Screen26SetPanelRotationForTestingElNS_7Display8RotationE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.aura::ScreenOzone"*)* @_ZN4aura11ScreenOzone19GetCurrentWorkspaceEv to i8*), i8* bitcast (void (%"class.base::Value"*, %"class.aura::ScreenOzone"*, %"struct.gfx::GpuExtraInfo"*)* @_ZN4aura11ScreenOzone26GetGpuExtraInfoAsListValueERKN3gfx12GpuExtraInfoE to i8*), i8* bitcast (%"class.aura::Window"* (%"class.views::DesktopScreenOzone"*, i32)* @_ZNK5views18DesktopScreenOzone36GetNativeWindowFromAcceleratedWidgetEj to i8*)] }, align 8

@_ZN5views18DesktopScreenOzoneC1Ev = hidden unnamed_addr alias void (%"class.views::DesktopScreenOzone"*), void (%"class.views::DesktopScreenOzone"*)* @_ZN5views18DesktopScreenOzoneC2Ev
@_ZN5views18DesktopScreenOzoneD1Ev = hidden unnamed_addr alias void (%"class.views::DesktopScreenOzone"*), void (%"class.views::DesktopScreenOzone"*)* @_ZN5views18DesktopScreenOzoneD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views18DesktopScreenOzoneC2Ev(%"class.views::DesktopScreenOzone"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::DesktopScreenOzone", %"class.views::DesktopScreenOzone"* %0, i64 0, i32 0
  tail call void @_ZN4aura11ScreenOzoneC2Ev(%"class.aura::ScreenOzone"* %2) #4
  %3 = getelementptr inbounds %"class.views::DesktopScreenOzone", %"class.views::DesktopScreenOzone"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [26 x i8*] }, { [26 x i8*] }* @_ZTVN5views18DesktopScreenOzoneE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN4aura11ScreenOzoneC2Ev(%"class.aura::ScreenOzone"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4aura11ScreenOzoneD2Ev(%"class.aura::ScreenOzone"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views18DesktopScreenOzoneD2Ev(%"class.views::DesktopScreenOzone"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::DesktopScreenOzone", %"class.views::DesktopScreenOzone"* %0, i64 0, i32 0
  tail call void @_ZN4aura11ScreenOzoneD2Ev(%"class.aura::ScreenOzone"* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views18DesktopScreenOzoneD0Ev(%"class.views::DesktopScreenOzone"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.views::DesktopScreenOzone", %"class.views::DesktopScreenOzone"* %0, i64 0, i32 0
  tail call void @_ZN4aura11ScreenOzoneD2Ev(%"class.aura::ScreenOzone"* %2) #4
  %3 = bitcast %"class.views::DesktopScreenOzone"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.aura::Window"* @_ZNK5views18DesktopScreenOzone36GetNativeWindowFromAcceleratedWidgetEj(%"class.views::DesktopScreenOzone"* nocapture readnone, i32) unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = tail call %"class.aura::Window"* @_ZN5views29DesktopWindowTreeHostPlatform25GetContentWindowForWidgetEj(i32 %1) #4
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi %"class.aura::Window"* [ %5, %4 ], [ null, %2 ]
  ret %"class.aura::Window"* %7
}

declare %"class.aura::Window"* @_ZN5views29DesktopWindowTreeHostPlatform25GetContentWindowForWidgetEj(i32) local_unnamed_addr #1

declare i64 @_ZN4aura11ScreenOzone20GetCursorScreenPointEv(%"class.aura::ScreenOzone"*) unnamed_addr #1

declare zeroext i1 @_ZN4aura11ScreenOzone19IsWindowUnderCursorEPNS_6WindowE(%"class.aura::ScreenOzone"*, %"class.aura::Window"*) unnamed_addr #1

declare %"class.aura::Window"* @_ZN4aura11ScreenOzone22GetWindowAtScreenPointERKN3gfx5PointE(%"class.aura::ScreenOzone"*, %"class.gfx::Point"* dereferenceable(8)) unnamed_addr #1

declare %"class.aura::Window"* @_ZN4aura11ScreenOzone28GetLocalProcessWindowAtPointERKN3gfx5PointERKNSt3__13setIPNS_6WindowENS5_4lessIS8_EENS5_9allocatorIS8_EEEE(%"class.aura::ScreenOzone"*, %"class.gfx::Point"* dereferenceable(8), %"class.std::__1::set"*) unnamed_addr #1

declare i32 @_ZNK4aura11ScreenOzone14GetNumDisplaysEv(%"class.aura::ScreenOzone"*) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::vector.156"* @_ZNK4aura11ScreenOzone14GetAllDisplaysEv(%"class.aura::ScreenOzone"*) unnamed_addr #1

declare void @_ZNK4aura11ScreenOzone23GetDisplayNearestWindowEPNS_6WindowE(%"class.display::Display"* sret, %"class.aura::ScreenOzone"*, %"class.aura::Window"*) unnamed_addr #1

declare void @_ZNK4aura11ScreenOzone21GetDisplayNearestViewEPNS_6WindowE(%"class.display::Display"* sret, %"class.aura::ScreenOzone"*, %"class.aura::Window"*) unnamed_addr #1

declare void @_ZNK4aura11ScreenOzone22GetDisplayNearestPointERKN3gfx5PointE(%"class.display::Display"* sret, %"class.aura::ScreenOzone"*, %"class.gfx::Point"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK4aura11ScreenOzone18GetDisplayMatchingERKN3gfx4RectE(%"class.display::Display"* sret, %"class.aura::ScreenOzone"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

declare void @_ZNK4aura11ScreenOzone17GetPrimaryDisplayEv(%"class.display::Display"* sret, %"class.aura::ScreenOzone"*) unnamed_addr #1

declare void @_ZN4aura11ScreenOzone23SetScreenSaverSuspendedEb(%"class.aura::ScreenOzone"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK4aura11ScreenOzone19IsScreenSaverActiveEv(%"class.aura::ScreenOzone"*) unnamed_addr #1

declare i64 @_ZNK4aura11ScreenOzone17CalculateIdleTimeEv(%"class.aura::ScreenOzone"*) unnamed_addr #1

declare void @_ZN4aura11ScreenOzone11AddObserverEPN7display15DisplayObserverE(%"class.aura::ScreenOzone"*, %"class.display::DisplayObserver"*) unnamed_addr #1

declare void @_ZN4aura11ScreenOzone14RemoveObserverEPN7display15DisplayObserverE(%"class.aura::ScreenOzone"*, %"class.display::DisplayObserver"*) unnamed_addr #1

declare { i64, i64 } @_ZNK7display6Screen23ScreenToDIPRectInWindowEPN4aura6WindowERKN3gfx4RectE(%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

declare { i64, i64 } @_ZNK7display6Screen23DIPToScreenRectInWindowEPN4aura6WindowERKN3gfx4RectE(%"class.display::Screen"*, %"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN7display6Screen26SetPanelRotationForTestingElNS_7Display8RotationE(%"class.display::Screen"*, i64, i32) unnamed_addr #1

declare void @_ZN4aura11ScreenOzone19GetCurrentWorkspaceEv(%"class.std::__1::basic_string"* sret, %"class.aura::ScreenOzone"*) unnamed_addr #1

declare void @_ZN4aura11ScreenOzone26GetGpuExtraInfoAsListValueERKN3gfx12GpuExtraInfoE(%"class.base::Value"* sret, %"class.aura::ScreenOzone"*, %"struct.gfx::GpuExtraInfo"* dereferenceable(48)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
