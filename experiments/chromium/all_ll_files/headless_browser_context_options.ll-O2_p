; ModuleID = '../../headless/lib/browser/headless_browser_context_options.cc'
source_filename = "../../headless/lib/browser/headless_browser_context_options.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.headless::HeadlessBrowserContextOptions" = type { %"struct.headless::HeadlessBrowser::Options"*, %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.std::__1::unique_ptr", %"class.absl::optional", %"class.absl::optional.26", %"class.absl::optional.31", %"class.absl::optional.36", %"class.absl::optional.36", %"class.absl::optional.41", %"class.absl::optional.46" }
%"struct.headless::HeadlessBrowser::Options" = type <{ i32, [4 x i8], i8**, %"class.net::HostPortPair", i8, [7 x i8], %"class.base::MessagePump"*, i8, i8, i8, [5 x i8], %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr", %"class.gfx::Size", %"class.base::FilePath", i8, i8, i8, i8, [4 x i8], %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.24", i8, [7 x i8], %"class.base::FilePath", i32, [4 x i8] }>
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.base::MessagePump" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback.24" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.net::ProxyConfig"* }
%"class.net::ProxyConfig" = type { i8, %class.GURL, i8, %"struct.net::ProxyConfig::ProxyRules" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.3" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.GURL* }
%"struct.net::ProxyConfig::ProxyRules" = type { %"class.net::ProxyBypassRules", i8, i32, %"class.net::ProxyList", %"class.net::ProxyList", %"class.net::ProxyList", %"class.net::ProxyList", %"class.net::ProxyList" }
%"class.net::ProxyBypassRules" = type { %"class.net::SchemeHostPortMatcher" }
%"class.net::SchemeHostPortMatcher" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.7"*, %"class.std::__1::unique_ptr.7"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::unique_ptr.7" = type opaque
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::unique_ptr.7"* }
%"class.net::ProxyList" = type { %"class.std::__1::vector.13" }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.net::ProxyServer"*, %"class.net::ProxyServer"*, %"class.std::__1::__compressed_pair.15" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.net::ProxyServer"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.25 }
%union.anon.25 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.26" = type { %"class.absl::optional_internal::optional_data.27" }
%"class.absl::optional_internal::optional_data.27" = type { %"class.absl::optional_internal::optional_data_base.28" }
%"class.absl::optional_internal::optional_data_base.28" = type { %"class.absl::optional_internal::optional_data_dtor_base.29" }
%"class.absl::optional_internal::optional_data_dtor_base.29" = type { i8, %union.anon.30 }
%union.anon.30 = type { %"class.gfx::Size" }
%"class.absl::optional.31" = type { %"class.absl::optional_internal::optional_data.32" }
%"class.absl::optional_internal::optional_data.32" = type { %"class.absl::optional_internal::optional_data_base.33" }
%"class.absl::optional_internal::optional_data_base.33" = type { %"class.absl::optional_internal::optional_data_dtor_base.34" }
%"class.absl::optional_internal::optional_data_dtor_base.34" = type { i8, %union.anon.35 }
%union.anon.35 = type { %"class.base::FilePath" }
%"class.absl::optional.36" = type { %"class.absl::optional_internal::optional_data.37" }
%"class.absl::optional_internal::optional_data.37" = type { %"class.absl::optional_internal::optional_data_base.38" }
%"class.absl::optional_internal::optional_data_base.38" = type { %"class.absl::optional_internal::optional_data_dtor_base.39" }
%"class.absl::optional_internal::optional_data_dtor_base.39" = type { i8, %union.anon.40 }
%union.anon.40 = type { i8 }
%"class.absl::optional.41" = type { %"class.absl::optional_internal::optional_data.42" }
%"class.absl::optional_internal::optional_data.42" = type { %"class.absl::optional_internal::optional_data_base.43" }
%"class.absl::optional_internal::optional_data_base.43" = type { %"class.absl::optional_internal::optional_data_dtor_base.44" }
%"class.absl::optional_internal::optional_data_dtor_base.44" = type { i8, %union.anon.45 }
%union.anon.45 = type { %"class.base::RepeatingCallback" }
%"class.absl::optional.46" = type { %"class.absl::optional_internal::optional_data.47" }
%"class.absl::optional_internal::optional_data.47" = type { %"class.absl::optional_internal::optional_data_base.48" }
%"class.absl::optional_internal::optional_data_base.48" = type { %"class.absl::optional_internal::optional_data_dtor_base.49" }
%"class.absl::optional_internal::optional_data_dtor_base.49" = type { i8, %union.anon.50 }
%union.anon.50 = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN8headless29HeadlessBrowserContextOptionsC1EOS0_ = hidden unnamed_addr alias void (%"class.headless::HeadlessBrowserContextOptions"*, %"class.headless::HeadlessBrowserContextOptions"*), void (%"class.headless::HeadlessBrowserContextOptions"*, %"class.headless::HeadlessBrowserContextOptions"*)* @_ZN8headless29HeadlessBrowserContextOptionsC2EOS0_
@_ZN8headless29HeadlessBrowserContextOptionsD1Ev = hidden unnamed_addr alias void (%"class.headless::HeadlessBrowserContextOptions"*), void (%"class.headless::HeadlessBrowserContextOptions"*)* @_ZN8headless29HeadlessBrowserContextOptionsD2Ev
@_ZN8headless29HeadlessBrowserContextOptionsC1EPNS_15HeadlessBrowser7OptionsE = hidden unnamed_addr alias void (%"class.headless::HeadlessBrowserContextOptions"*, %"struct.headless::HeadlessBrowser::Options"*), void (%"class.headless::HeadlessBrowserContextOptions"*, %"struct.headless::HeadlessBrowser::Options"*)* @_ZN8headless29HeadlessBrowserContextOptionsC2EPNS_15HeadlessBrowser7OptionsE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless29HeadlessBrowserContextOptionsC2EOS0_(%"class.headless::HeadlessBrowserContextOptions"*, %"class.headless::HeadlessBrowserContextOptions"* dereferenceable(224)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.headless::HeadlessBrowserContextOptions"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.headless::HeadlessBrowserContextOptions"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false) #6
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #6
  store i8 1, i8* %6, align 8
  br label %15

15:                                               ; preds = %2, %10
  %16 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #6
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %24 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #6
  store i8 1, i8* %16, align 8
  br label %25

25:                                               ; preds = %15, %20
  %26 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false) #6
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %33 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %34 = bitcast %"class.std::__1::basic_string"* %31 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 24, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #6
  store i8 1, i8* %26, align 8
  br label %35

35:                                               ; preds = %25, %30
  %36 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 4
  %37 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 4
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  %40 = load i64, i64* %39, align 8
  store %"class.net::ProxyConfig"* null, %"class.net::ProxyConfig"** %38, align 8
  %41 = bitcast %"class.std::__1::unique_ptr"* %36 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 32, i1 false) #6
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %35
  %47 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %48 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %49 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #6
  store i8 1, i8* %42, align 8
  br label %51

51:                                               ; preds = %35, %46
  %52 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 12, i1 false)
  %54 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 32, i1 false) #6
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %60 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* %60, %"class.base::FilePath"* dereferenceable(24) %59) #6
  store i8 1, i8* %54, align 8
  br label %61

61:                                               ; preds = %51, %58
  %62 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %64 = bitcast i8* %63 to i32*
  %65 = bitcast i8* %62 to i32*
  %66 = load i32, i32* %64, align 8
  store i32 %66, i32* %65, align 8
  %67 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #6
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %78, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %73 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %74 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %72, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.base::RepeatingCallback"* %72 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.base::RepeatingCallback"* %73 to i64*
  store i64 %76, i64* %77, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %74, align 8
  store i8 1, i8* %67, align 8
  br label %78

78:                                               ; preds = %61, %71
  %79 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %81 = bitcast i8* %80 to i64*
  %82 = bitcast i8* %79 to i64*
  %83 = load i64, i64* %81, align 8
  store i64 %83, i64* %82, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless29HeadlessBrowserContextOptionsD2Ev(%"class.headless::HeadlessBrowserContextOptions"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %6) #6
  store i8 0, i8* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %12) #6
  store i8 0, i8* %8, align 8
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %27, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  tail call void @_ZdlPv(i8* %25) #7
  br label %26

26:                                               ; preds = %23, %17
  store i8 0, i8* %14, align 8
  br label %27

27:                                               ; preds = %13, %26
  %28 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %29 = load %"class.net::ProxyConfig"*, %"class.net::ProxyConfig"** %28, align 8
  store %"class.net::ProxyConfig"* null, %"class.net::ProxyConfig"** %28, align 8
  %30 = icmp eq %"class.net::ProxyConfig"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  tail call void @_ZN3net11ProxyConfigD1Ev(%"class.net::ProxyConfig"* nonnull %29) #6
  %32 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %29, i64 0, i32 0
  tail call void @_ZdlPv(i8* %32) #7
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %47, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #7
  br label %46

46:                                               ; preds = %43, %37
  store i8 0, i8* %34, align 8
  br label %47

47:                                               ; preds = %33, %46
  %48 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %49 = load i8, i8* %48, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %61, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %53 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  tail call void @_ZdlPv(i8* %59) #7
  br label %60

60:                                               ; preds = %57, %51
  store i8 0, i8* %48, align 8
  br label %61

61:                                               ; preds = %47, %60
  %62 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %75, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %67 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  tail call void @_ZdlPv(i8* %73) #7
  br label %74

74:                                               ; preds = %71, %65
  store i8 0, i8* %62, align 8
  br label %75

75:                                               ; preds = %61, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(224) %"class.headless::HeadlessBrowserContextOptions"* @_ZN8headless29HeadlessBrowserContextOptionsaSEOS0_(%"class.headless::HeadlessBrowserContextOptions"* returned, %"class.headless::HeadlessBrowserContextOptions"* dereferenceable(224)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.headless::HeadlessBrowserContextOptions"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast %"class.headless::HeadlessBrowserContextOptions"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %32, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %14, label %29, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #7
  br label %24

24:                                               ; preds = %21, %16
  %25 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #6
  %27 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 0, i8* %28, align 1
  store i8 0, i8* %26, align 1
  br label %46

29:                                               ; preds = %10
  %30 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %31 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #6
  store i8 1, i8* %12, align 8
  br label %46

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %46, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZdlPv(i8* %44) #7
  br label %45

45:                                               ; preds = %42, %36
  store i8 0, i8* %33, align 8
  br label %46

46:                                               ; preds = %24, %29, %32, %45
  %47 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 2
  %48 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %49 = load i8, i8* %48, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %73, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %53 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  %56 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %55, label %70, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  tail call void @_ZdlPv(i8* %64) #7
  br label %65

65:                                               ; preds = %62, %57
  %66 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  %67 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 24, i1 false) #6
  %68 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  store i8 0, i8* %69, align 1
  store i8 0, i8* %67, align 1
  br label %87

70:                                               ; preds = %51
  %71 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  %72 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 24, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 24, i1 false) #6
  store i8 1, i8* %53, align 8
  br label %87

73:                                               ; preds = %46
  %74 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #7
  br label %86

86:                                               ; preds = %83, %77
  store i8 0, i8* %74, align 8
  br label %87

87:                                               ; preds = %65, %70, %73, %86
  %88 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 3
  %89 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %90 = load i8, i8* %89, align 8, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %114, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %94 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %88, i64 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8, i8* %94, align 8, !range !2
  %96 = icmp eq i8 %95, 0
  %97 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %96, label %111, label %98

98:                                               ; preds = %92
  %99 = bitcast %"class.std::__1::basic_string"* %97 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  tail call void @_ZdlPv(i8* %105) #7
  br label %106

106:                                              ; preds = %103, %98
  %107 = bitcast %"class.std::__1::basic_string"* %97 to i8*
  %108 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 24, i1 false) #6
  %109 = bitcast %"class.std::__1::basic_string"* %93 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %109, i64 0, i32 1, i32 0
  store i8 0, i8* %110, align 1
  store i8 0, i8* %108, align 1
  br label %128

111:                                              ; preds = %92
  %112 = bitcast %"class.std::__1::basic_string"* %97 to i8*
  %113 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 24, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 24, i1 false) #6
  store i8 1, i8* %94, align 8
  br label %128

114:                                              ; preds = %87
  %115 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %88, i64 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8, i8* %115, align 8, !range !2
  %117 = icmp eq i8 %116, 0
  br i1 %117, label %128, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  tail call void @_ZdlPv(i8* %126) #7
  br label %127

127:                                              ; preds = %124, %118
  store i8 0, i8* %115, align 8
  br label %128

128:                                              ; preds = %106, %111, %114, %127
  %129 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 4
  %130 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 4
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %130, i64 0, i32 0, i32 0, i32 0
  %132 = bitcast %"class.std::__1::unique_ptr"* %130 to i64*
  %133 = load i64, i64* %132, align 8
  store %"class.net::ProxyConfig"* null, %"class.net::ProxyConfig"** %131, align 8
  %134 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %129, i64 0, i32 0, i32 0, i32 0
  %135 = load %"class.net::ProxyConfig"*, %"class.net::ProxyConfig"** %134, align 8
  %136 = bitcast %"class.std::__1::unique_ptr"* %129 to i64*
  store i64 %133, i64* %136, align 8
  %137 = icmp eq %"class.net::ProxyConfig"* %135, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %128
  tail call void @_ZN3net11ProxyConfigD1Ev(%"class.net::ProxyConfig"* nonnull %135) #6
  %139 = getelementptr inbounds %"class.net::ProxyConfig", %"class.net::ProxyConfig"* %135, i64 0, i32 0
  tail call void @_ZdlPv(i8* %139) #7
  br label %140

140:                                              ; preds = %128, %138
  %141 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 5
  %142 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %143 = load i8, i8* %142, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %167, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %147 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %141, i64 0, i32 0, i32 0, i32 0, i32 0
  %148 = load i8, i8* %147, align 8, !range !2
  %149 = icmp eq i8 %148, 0
  %150 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %149, label %164, label %151

151:                                              ; preds = %145
  %152 = bitcast %"class.std::__1::basic_string"* %150 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %152, i64 0, i32 1, i32 0
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  tail call void @_ZdlPv(i8* %158) #7
  br label %159

159:                                              ; preds = %156, %151
  %160 = bitcast %"class.std::__1::basic_string"* %150 to i8*
  %161 = bitcast %"class.std::__1::basic_string"* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %160, i8* align 8 %161, i64 24, i1 false) #6
  %162 = bitcast %"class.std::__1::basic_string"* %146 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  store i8 0, i8* %163, align 1
  store i8 0, i8* %161, align 1
  br label %181

164:                                              ; preds = %145
  %165 = bitcast %"class.std::__1::basic_string"* %150 to i8*
  %166 = bitcast %"class.std::__1::basic_string"* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %166, i64 24, i1 false) #6
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %166, i8 0, i64 24, i1 false) #6
  store i8 1, i8* %147, align 8
  br label %181

167:                                              ; preds = %140
  %168 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %141, i64 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i8, i8* %168, align 8, !range !2
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %181, label %171

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %173 = bitcast %"class.std::__1::basic_string"* %172 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %174 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %173, i64 0, i32 1, i32 0
  %175 = load i8, i8* %174, align 1
  %176 = icmp slt i8 %175, 0
  br i1 %176, label %177, label %180

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load i8*, i8** %178, align 8
  tail call void @_ZdlPv(i8* %179) #7
  br label %180

180:                                              ; preds = %177, %171
  store i8 0, i8* %168, align 8
  br label %181

181:                                              ; preds = %159, %164, %167, %180
  %182 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %183 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* align 8 %183, i64 12, i1 false)
  %184 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 7
  %185 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %186 = load i8, i8* %185, align 8, !range !2
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %197, label %188

188:                                              ; preds = %181
  %189 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %190 = getelementptr inbounds %"class.absl::optional.31", %"class.absl::optional.31"* %184, i64 0, i32 0, i32 0, i32 0, i32 0
  %191 = load i8, i8* %190, align 8, !range !2
  %192 = icmp eq i8 %191, 0
  %193 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %192, label %196, label %194

194:                                              ; preds = %188
  %195 = tail call dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSEOS0_(%"class.base::FilePath"* %193, %"class.base::FilePath"* dereferenceable(24) %189) #6
  br label %203

196:                                              ; preds = %188
  tail call void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"* %193, %"class.base::FilePath"* dereferenceable(24) %189) #6
  store i8 1, i8* %190, align 8
  br label %203

197:                                              ; preds = %181
  %198 = getelementptr inbounds %"class.absl::optional.31", %"class.absl::optional.31"* %184, i64 0, i32 0, i32 0, i32 0, i32 0
  %199 = load i8, i8* %198, align 8, !range !2
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %203, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %202) #6
  store i8 0, i8* %198, align 8
  br label %203

203:                                              ; preds = %194, %196, %197, %201
  %204 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %205 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %206 = bitcast i8* %205 to i32*
  %207 = bitcast i8* %204 to i32*
  %208 = load i32, i32* %206, align 8
  store i32 %208, i32* %207, align 8
  %209 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 10
  %210 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %211 = load i8, i8* %210, align 8, !range !2
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %228, label %213

213:                                              ; preds = %203
  %214 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %215 = getelementptr inbounds %"class.absl::optional.41", %"class.absl::optional.41"* %209, i64 0, i32 0, i32 0, i32 0, i32 0
  %216 = load i8, i8* %215, align 8, !range !2
  %217 = icmp eq i8 %216, 0
  %218 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %217, label %223, label %219

219:                                              ; preds = %213
  %220 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %218, i64 0, i32 0
  %221 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %214, i64 0, i32 0
  %222 = tail call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %220, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %221) #6
  br label %234

223:                                              ; preds = %213
  %224 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %214, i64 0, i32 0, i32 0, i32 0, i32 0
  %225 = bitcast %"class.base::RepeatingCallback"* %214 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = bitcast %"class.base::RepeatingCallback"* %218 to i64*
  store i64 %226, i64* %227, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %224, align 8
  store i8 1, i8* %215, align 8
  br label %234

228:                                              ; preds = %203
  %229 = getelementptr inbounds %"class.absl::optional.41", %"class.absl::optional.41"* %209, i64 0, i32 0, i32 0, i32 0, i32 0
  %230 = load i8, i8* %229, align 8, !range !2
  %231 = icmp eq i8 %230, 0
  br i1 %231, label %234, label %232

232:                                              ; preds = %228
  %233 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %233) #6
  store i8 0, i8* %229, align 8
  br label %234

234:                                              ; preds = %219, %223, %228, %232
  %235 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %236 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %237 = bitcast i8* %236 to i64*
  %238 = bitcast i8* %235 to i64*
  %239 = load i64, i64* %237, align 8
  store i64 %239, i64* %238, align 8
  ret %"class.headless::HeadlessBrowserContextOptions"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless29HeadlessBrowserContextOptionsC2EPNS_15HeadlessBrowser7OptionsE(%"class.headless::HeadlessBrowserContextOptions"* nocapture, %"struct.headless::HeadlessBrowser::Options"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 0
  store %"struct.headless::HeadlessBrowser::Options"* %1, %"struct.headless::HeadlessBrowser::Options"** %3, align 8
  %4 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %13, align 4
  %14 = bitcast %union.anon.25* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 25, i1 false)
  %15 = bitcast %union.anon.25* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 25, i1 false)
  %16 = bitcast %union.anon.25* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 33, i1 false)
  %17 = bitcast %union.anon.25* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 25, i1 false)
  %18 = bitcast %union.anon.35* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 25, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK8headless29HeadlessBrowserContextOptions24product_name_and_versionEv(%"class.headless::HeadlessBrowserContextOptions"* readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 0
  %3 = load %"struct.headless::HeadlessBrowser::Options"*, %"struct.headless::HeadlessBrowser::Options"** %2, align 8
  %4 = getelementptr inbounds %"struct.headless::HeadlessBrowser::Options", %"struct.headless::HeadlessBrowser::Options"* %3, i64 0, i32 13
  %5 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = select i1 %7, %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"* %8
  ret %"class.std::__1::basic_string"* %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK8headless29HeadlessBrowserContextOptions15accept_languageEv(%"class.headless::HeadlessBrowserContextOptions"* readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 0
  %3 = load %"struct.headless::HeadlessBrowser::Options"*, %"struct.headless::HeadlessBrowser::Options"** %2, align 8
  %4 = getelementptr inbounds %"struct.headless::HeadlessBrowser::Options", %"struct.headless::HeadlessBrowser::Options"* %3, i64 0, i32 14
  %5 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = select i1 %7, %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"* %8
  ret %"class.std::__1::basic_string"* %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK8headless29HeadlessBrowserContextOptions10user_agentEv(%"class.headless::HeadlessBrowserContextOptions"* readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 0
  %3 = load %"struct.headless::HeadlessBrowser::Options"*, %"struct.headless::HeadlessBrowser::Options"** %2, align 8
  %4 = getelementptr inbounds %"struct.headless::HeadlessBrowser::Options", %"struct.headless::HeadlessBrowser::Options"* %3, i64 0, i32 15
  %5 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = select i1 %7, %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"* %8
  ret %"class.std::__1::basic_string"* %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.net::ProxyConfig"* @_ZNK8headless29HeadlessBrowserContextOptions12proxy_configEv(%"class.headless::HeadlessBrowserContextOptions"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.net::ProxyConfig"*, %"class.net::ProxyConfig"** %2, align 8
  %4 = icmp eq %"class.net::ProxyConfig"* %3, null
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 0
  %7 = load %"struct.headless::HeadlessBrowser::Options"*, %"struct.headless::HeadlessBrowser::Options"** %6, align 8
  %8 = getelementptr inbounds %"struct.headless::HeadlessBrowser::Options", %"struct.headless::HeadlessBrowser::Options"* %7, i64 0, i32 16, i32 0, i32 0, i32 0
  %9 = load %"class.net::ProxyConfig"*, %"class.net::ProxyConfig"** %8, align 8
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %"class.net::ProxyConfig"* [ %9, %5 ], [ %3, %1 ]
  ret %"class.net::ProxyConfig"* %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(8) %"class.gfx::Size"* @_ZNK8headless29HeadlessBrowserContextOptions11window_sizeEv(%"class.headless::HeadlessBrowserContextOptions"* readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 0
  %3 = load %"struct.headless::HeadlessBrowser::Options"*, %"struct.headless::HeadlessBrowser::Options"** %2, align 8
  %4 = getelementptr inbounds %"struct.headless::HeadlessBrowser::Options", %"struct.headless::HeadlessBrowser::Options"* %3, i64 0, i32 17
  %5 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = select i1 %7, %"class.gfx::Size"* %4, %"class.gfx::Size"* %8
  ret %"class.gfx::Size"* %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.base::FilePath"* @_ZNK8headless29HeadlessBrowserContextOptions13user_data_dirEv(%"class.headless::HeadlessBrowserContextOptions"* readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 0
  %3 = load %"struct.headless::HeadlessBrowser::Options"*, %"struct.headless::HeadlessBrowser::Options"** %2, align 8
  %4 = getelementptr inbounds %"struct.headless::HeadlessBrowser::Options", %"struct.headless::HeadlessBrowser::Options"* %3, i64 0, i32 18
  %5 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = select i1 %7, %"class.base::FilePath"* %4, %"class.base::FilePath"* %8
  ret %"class.base::FilePath"* %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8headless29HeadlessBrowserContextOptions14incognito_modeEv(%"class.headless::HeadlessBrowserContextOptions"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 0
  %3 = load %"struct.headless::HeadlessBrowser::Options"*, %"struct.headless::HeadlessBrowser::Options"** %2, align 8
  %4 = getelementptr inbounds %"struct.headless::HeadlessBrowser::Options", %"struct.headless::HeadlessBrowser::Options"* %3, i64 0, i32 19
  %5 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = select i1 %7, i8* %4, i8* %8
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp ne i8 %10, 0
  ret i1 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8headless29HeadlessBrowserContextOptions22block_new_web_contentsEv(%"class.headless::HeadlessBrowserContextOptions"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 0
  %3 = load %"struct.headless::HeadlessBrowser::Options"*, %"struct.headless::HeadlessBrowser::Options"** %2, align 8
  %4 = getelementptr inbounds %"struct.headless::HeadlessBrowser::Options", %"struct.headless::HeadlessBrowser::Options"* %3, i64 0, i32 20
  %5 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = select i1 %7, i8* %4, i8* %8
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp ne i8 %10, 0
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8headless29HeadlessBrowserContextOptions33override_web_preferences_callbackEv(%"class.base::RepeatingCallback"* noalias sret, %"class.headless::HeadlessBrowserContextOptions"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 0
  %4 = load %"struct.headless::HeadlessBrowser::Options"*, %"struct.headless::HeadlessBrowser::Options"** %3, align 8
  %5 = getelementptr inbounds %"struct.headless::HeadlessBrowser::Options", %"struct.headless::HeadlessBrowser::Options"* %4, i64 0, i32 24
  %6 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %10 = select i1 %8, %"class.base::RepeatingCallback"* %5, %"class.base::RepeatingCallback"* %9
  %11 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %10, i64 0, i32 0
  tail call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %11, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %12) #6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK8headless29HeadlessBrowserContextOptions19font_render_hintingEv(%"class.headless::HeadlessBrowserContextOptions"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 0
  %3 = load %"struct.headless::HeadlessBrowser::Options"*, %"struct.headless::HeadlessBrowser::Options"** %2, align 8
  %4 = getelementptr inbounds %"struct.headless::HeadlessBrowser::Options", %"struct.headless::HeadlessBrowser::Options"* %3, i64 0, i32 29
  %5 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.headless::HeadlessBrowserContextOptions", %"class.headless::HeadlessBrowserContextOptions"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = select i1 %7, i32* %4, i32* %8
  %10 = load i32, i32* %9, align 4
  ret i32 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind
declare void @_ZN4base8FilePathC1EOS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(24) %"class.base::FilePath"* @_ZN4base8FilePathaSEOS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN3net11ProxyConfigD1Ev(%"class.net::ProxyConfig"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
