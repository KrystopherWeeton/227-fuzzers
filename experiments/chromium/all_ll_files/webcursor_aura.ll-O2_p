; ModuleID = '../../content/common/cursors/webcursor_aura.cc'
source_filename = "../../content/common/cursors/webcursor_aura.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ui::Cursor" = type { i32, %class.scoped_refptr, float, %"class.gfx::Point", %class.SkBitmap }
%class.scoped_refptr = type { %"class.ui::PlatformCursor"* }
%"class.ui::PlatformCursor" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.gfx::Point" = type { i32, i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.content::WebCursor" = type { %"class.ui::Cursor", float, i32, %"class.gfx::Size", %"class.absl::optional" }
%"class.gfx::Size" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.ui::Cursor" }
%"class.ui::CursorFactory" = type { i32 (...)**, %"class.base::ObserverList" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content9WebCursor15GetNativeCursorEv(%"class.ui::Cursor"* noalias sret, %"class.content::WebCursor"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkBitmap, align 8
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.gfx::Point"*
  %6 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 45
  br i1 %8, label %9, label %54

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %52

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN2ui6CursorC1ENS_5mojom10CursorTypeE(%"class.ui::Cursor"* %14, i32 45) #5
  store i8 1, i8* %10, align 8
  %15 = bitcast %class.SkBitmap* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %15) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %3) #5
  %16 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #5
  %17 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 0, i32 4
  %18 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* nonnull %3, %class.SkBitmap* dereferenceable(56) %17) #5
  %19 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 0, i32 3
  %20 = bitcast %"class.gfx::Point"* %19 to i64*
  %21 = load i64, i64* %20, align 4
  store i64 %21, i64* %4, align 8
  %22 = call float @_ZN7content9WebCursor20GetCursorScaleFactorEP8SkBitmap(%"class.content::WebCursor"* %1, %class.SkBitmap* nonnull %3) #5
  %23 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  call void @_ZN2ui37ScaleAndRotateCursorBitmapAndHotpointEfN7display7Display8RotationEP8SkBitmapPN3gfx5PointE(float %22, i32 %24, %class.SkBitmap* nonnull %3, %"class.gfx::Point"* nonnull %5) #5
  %25 = load i8, i8* %10, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %13
  call void @llvm.trap() #5
  unreachable

28:                                               ; preds = %13
  %29 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %30 = call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %29, %class.SkBitmap* nonnull dereferenceable(56) %3) #5
  %31 = load i8, i8* %10, align 8, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %34, !prof !3

33:                                               ; preds = %28
  call void @llvm.trap() #5
  unreachable

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %36 = bitcast %"class.gfx::Point"* %35 to i64*
  %37 = load i64, i64* %4, align 8
  store i64 %37, i64* %36, align 4
  %38 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 1
  %39 = bitcast float* %38 to i32*
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %42 = bitcast float* %41 to i32*
  store i32 %40, i32* %42, align 8
  %43 = call %"class.ui::CursorFactory"* @_ZN2ui13CursorFactory11GetInstanceEv() #5
  %44 = bitcast %"class.ui::CursorFactory"* %43 to %"class.ui::PlatformCursor"* (%"class.ui::CursorFactory"*, i32, %class.SkBitmap*, %"class.gfx::Point"*)***
  %45 = load %"class.ui::PlatformCursor"* (%"class.ui::CursorFactory"*, i32, %class.SkBitmap*, %"class.gfx::Point"*)**, %"class.ui::PlatformCursor"* (%"class.ui::CursorFactory"*, i32, %class.SkBitmap*, %"class.gfx::Point"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.ui::PlatformCursor"* (%"class.ui::CursorFactory"*, i32, %class.SkBitmap*, %"class.gfx::Point"*)*, %"class.ui::PlatformCursor"* (%"class.ui::CursorFactory"*, i32, %class.SkBitmap*, %"class.gfx::Point"*)** %45, i64 3
  %47 = load %"class.ui::PlatformCursor"* (%"class.ui::CursorFactory"*, i32, %class.SkBitmap*, %"class.gfx::Point"*)*, %"class.ui::PlatformCursor"* (%"class.ui::CursorFactory"*, i32, %class.SkBitmap*, %"class.gfx::Point"*)** %46, align 8
  %48 = call %"class.ui::PlatformCursor"* %47(%"class.ui::CursorFactory"* %43, i32 45, %class.SkBitmap* nonnull dereferenceable(56) %3, %"class.gfx::Point"* nonnull dereferenceable(8) %5) #5
  call void @_ZN2ui6Cursor17SetPlatformCursorE13scoped_refptrINS_14PlatformCursorEE(%"class.ui::Cursor"* %14, %"class.ui::PlatformCursor"* %48) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #5
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %15) #5
  %49 = load i8, i8* %10, align 8
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %52, !prof !3

51:                                               ; preds = %34
  call void @llvm.trap() #5
  unreachable

52:                                               ; preds = %9, %34
  %53 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN2ui6CursorC1ERKS0_(%"class.ui::Cursor"* %0, %"class.ui::Cursor"* dereferenceable(88) %53) #5
  br label %55

54:                                               ; preds = %2
  tail call void @_ZN2ui6CursorC1ENS_5mojom10CursorTypeE(%"class.ui::Cursor"* %0, i32 %7) #5
  br label %55

55:                                               ; preds = %54, %52
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content9WebCursor42CreateScaledBitmapAndHotspotFromCustomDataEP8SkBitmapPN3gfx5PointEPf(%"class.content::WebCursor"*, %class.SkBitmap*, %"class.gfx::Point"*, float* nocapture) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 0, i32 4
  %6 = tail call dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap* %1, %class.SkBitmap* dereferenceable(56) %5) #5
  %7 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 0, i32 3
  %8 = bitcast %"class.gfx::Point"* %7 to i64*
  %9 = bitcast %"class.gfx::Point"* %2 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 4
  %11 = tail call float @_ZN7content9WebCursor20GetCursorScaleFactorEP8SkBitmap(%"class.content::WebCursor"* %0, %class.SkBitmap* %1) #5
  store float %11, float* %3, align 4
  %12 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  tail call void @_ZN2ui37ScaleAndRotateCursorBitmapAndHotpointEfN7display7Display8RotationEP8SkBitmapPN3gfx5PointE(float %11, i32 %13, %class.SkBitmap* %1, %"class.gfx::Point"* %2) #5
  ret void
}

declare void @_ZN2ui6Cursor17SetPlatformCursorE13scoped_refptrINS_14PlatformCursorEE(%"class.ui::Cursor"*, %"class.ui::PlatformCursor"*) local_unnamed_addr #2

declare %"class.ui::CursorFactory"* @_ZN2ui13CursorFactory11GetInstanceEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #3

declare void @_ZN2ui6CursorC1ERKS0_(%"class.ui::Cursor"*, %"class.ui::Cursor"* dereferenceable(88)) unnamed_addr #2

declare void @_ZN2ui6CursorC1ENS_5mojom10CursorTypeE(%"class.ui::Cursor"*, i32) unnamed_addr #2

declare dereferenceable(56) %class.SkBitmap* @_ZN8SkBitmapaSERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #2

declare float @_ZN7content9WebCursor20GetCursorScaleFactorEP8SkBitmap(%"class.content::WebCursor"*, %class.SkBitmap*) local_unnamed_addr #2

declare void @_ZN2ui37ScaleAndRotateCursorBitmapAndHotpointEfN7display7Display8RotationEP8SkBitmapPN3gfx5PointE(float, i32, %class.SkBitmap*, %"class.gfx::Point"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content9WebCursor19CleanupPlatformDataEv(%"class.content::WebCursor"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.content::WebCursor", %"class.content::WebCursor"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN2ui6CursorD1Ev(%"class.ui::Cursor"* %6) #5
  store i8 0, i8* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2ui6CursorD1Ev(%"class.ui::Cursor"*) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
