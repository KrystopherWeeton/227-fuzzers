; ModuleID = '../../third_party/skia/src/core/SkDevice.cpp'
source_filename = "../../third_party/skia/src/core/SkDevice.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.skif::Mapping" = type { %class.SkMatrix, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.skif::LayerSpace" = type { %struct.SkIRect }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.SkImageFilterCache = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"class.skif::FilterResult" = type { %class.sk_sp.185, %"class.skif::LayerSpace.187" }
%class.sk_sp.185 = type { %class.SkSpecialImage* }
%class.SkSpecialImage = type { %class.SkRefCnt.base, %class.SkSurfaceProps, %struct.SkIRect, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%"class.skif::LayerSpace.187" = type { %struct.SkIPoint }
%struct.SkIPoint = type { i32, i32 }
%class.SkGlyphRun = type { %class.SkZip, %class.SkSpan, %class.SkSpan.157, %class.SkSpan.158, %class.SkFont }
%class.SkZip = type { %"class.std::__1::tuple", i64 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.156" }
%"class.std::__1::__tuple_leaf" = type { i16* }
%"class.std::__1::__tuple_leaf.156" = type { %struct.SkPoint* }
%struct.SkPoint = type { float, float }
%class.SkSpan = type { i8*, i64 }
%class.SkSpan.157 = type { i32*, i64 }
%class.SkSpan.158 = type { %struct.SkPoint*, i64 }
%class.SkFont = type <{ %class.sk_sp.159, float, float, float, i8, i8, i8, i8 }>
%class.sk_sp.159 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkPaint = type <{ %class.sk_sp.7, %class.sk_sp.8, %class.sk_sp.9, %class.sk_sp.10, %class.sk_sp.11, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.7 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.8 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.9 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.10 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.11 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkM44 = type { [16 x float] }
%class.SkBaseDevice = type { %class.SkRefCnt.base, %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkMarkerStack = type { %class.SkRefCnt.base, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.SkMarkerStack::Rec"*, %"struct.SkMarkerStack::Rec"*, %"class.std::__1::__compressed_pair" }
%"struct.SkMarkerStack::Rec" = type <{ i8*, %class.SkM44, %class.SkM44, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkMarkerStack::Rec"* }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%struct.SkISize = type { i32, i32 }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%class.SkPath = type <{ %class.sk_sp.12, i32, %"struct.std::__1::atomic.2", %"struct.std::__1::atomic.2", i8, i8 }>
%class.sk_sp.12 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.13, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.14, %class.SkTDArray.15, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.13 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.14 = type { i8*, i32, i32 }
%class.SkTDArray.15 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.16 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.16 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.17", [3 x i8] }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i8 }
%"class.SkRegion::Iterator" = type <{ %class.SkRegion*, i32*, %struct.SkIRect, i8, [7 x i8] }>
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%class.sk_sp.21 = type { %class.SkVertices* }
%class.SkVertices = type <{ %class.SkNVRefCnt.22, i32, %struct.SkPoint*, i16*, %struct.SkPoint*, i32*, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkNVRefCnt.22 = type { %"struct.std::__1::atomic" }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%"struct.SkCanvas::Lattice" = type { i32*, i32*, i8*, i32, i32, %struct.SkIRect*, i32* }
%class.SkLatticeIter = type { %class.SkTArray, %class.SkTArray, %class.SkTArray.23, %class.SkTArray.23, %class.SkTArray.24, %class.SkTArray.25, i32, i32, i32, i32 }
%class.SkTArray = type { i32*, i64 }
%class.SkTArray.23 = type { float*, i64 }
%class.SkTArray.24 = type { i8*, i64 }
%class.SkTArray.25 = type { i32*, i64 }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %class.sk_sp.67, %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.105", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.120", %"class.std::__1::unique_ptr.126" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.26 }
%class.sk_sp.26 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.39 }
%class.SkFibBlockSizes.39 = type { i32 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.67 = type { %class.GrGpu* }
%class.GrGpu = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %class.GrResourceCache* }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray.71, %class.SkTMultiMap, %class.SkTDynamicHash.81, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray.71 }
%class.SkTDArray.71 = type { %class.GrGpuResource**, i32, i32 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.72, [4 x i8] }>
%union.anon.72 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.73, i8* }
%class.sk_sp.73 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.74, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.74 = type { %"struct.std::__1::atomic" }
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.75" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.81 = type { %class.SkTHashTable.82 }
%class.SkTHashTable.82 = type { i32, i32, %class.SkAutoTArray.83 }
%class.SkAutoTArray.83 = type { %"class.std::__1::unique_ptr.84" }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.90, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.90 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.91, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.91 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.92 }
%class.sk_sp.92 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.93, void (i8*)*, i8* }
%class.SkNVRefCnt.93 = type { %"struct.std::__1::atomic" }
%class.SkTHashMap = type { %class.SkTHashTable.94 }
%class.SkTHashTable.94 = type { i32, i32, %class.SkAutoTArray.95 }
%class.SkAutoTArray.95 = type { %"class.std::__1::unique_ptr.96" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.108, %class.sk_sp.110, %class.sk_sp.110 }
%class.sk_sp.108 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.109, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp.109 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.110 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%struct.SkRSXform = type { float, float, float, float }
%"class.SkVertices::Builder" = type { %class.sk_sp.21, %"class.std::__1::unique_ptr.132" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { i8* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.SkCanvas::ImageSetEntry" = type <{ %class.sk_sp.138, %struct.SkRect, %struct.SkRect, i32, float, i32, i8, [3 x i8] }>
%class.sk_sp.138 = type { %class.SkImage* }
%class.SkDrawable = type { %class.SkFlattenable.base, i32 }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.139, [384 x i64], %class.sk_sp.140, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.141", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.147" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.139 = type { %class.SkMarkerStack* }
%class.sk_sp.140 = type { %class.SkBaseDevice* }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type { i32, %class.SkAutoTMalloc, i32, %class.SkAutoTMalloc, %"class.std::__1::vector.154", %class.SkGlyphRunList, %"class.std::__1::vector.172" }
%class.SkAutoTMalloc = type { %"class.std::__1::unique_ptr.150" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %struct.SkPoint* }
%"class.std::__1::vector.154" = type { %"class.std::__1::__vector_base.155" }
%"class.std::__1::__vector_base.155" = type { %class.SkGlyphRun*, %class.SkGlyphRun*, %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %class.SkGlyphRun* }
%class.SkGlyphRunList = type { %class.SkSpan.165, %class.SkTextBlob*, %struct.SkRect, %struct.SkPoint }
%class.SkSpan.165 = type { %class.SkGlyphRun*, i64 }
%class.SkTextBlob = type { %class.SkNVRefCnt.166, %struct.SkRect, i32, %"struct.std::__1::atomic.167" }
%class.SkNVRefCnt.166 = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__atomic_base.169" }
%"struct.std::__1::__atomic_base.169" = type { %"struct.std::__1::__cxx_atomic_impl.170" }
%"struct.std::__1::__cxx_atomic_impl.170" = type { %"struct.std::__1::__cxx_atomic_base_impl.171" }
%"struct.std::__1::__cxx_atomic_base_impl.171" = type { i32 }
%"class.std::__1::vector.172" = type { %"class.std::__1::__vector_base.173" }
%"class.std::__1::__vector_base.173" = type { i16*, i16*, %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { i16* }
%class.SkBitmap = type { %class.sk_sp.182, %class.SkPixmap, %class.sk_sp.183 }
%class.sk_sp.182 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.183 = type { %class.SkMipmap* }
%class.SkMipmap = type <{ %class.SkCachedData.base, [6 x i8], %class.sk_sp, %"struct.SkMipmap::Level"*, i32, [4 x i8] }>
%class.SkCachedData.base = type <{ i32 (...)**, %class.SkMutex, %union.anon.184, i8*, i64, i32, i32, i8, i8 }>
%union.anon.184 = type { %class.SkDiscardableMemory* }
%class.SkDiscardableMemory = type opaque
%"struct.SkMipmap::Level" = type { %class.SkPixmap, %struct.SkSize }
%struct.SkSize = type { float, float }
%"class.skif::DeviceSpace" = type { %struct.SkIRect }
%"class.skif::Context" = type { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, %class.SkColorSpace*, %"class.skif::FilterResult" }
%"class.skif::FilterResult.188" = type { %class.sk_sp.185, %"class.skif::LayerSpace.187" }
%class.SkImageFilter_Base = type <{ %class.SkImageFilter.base, [4 x i8], %class.SkAutoSTArray, i8, [3 x i8], %"class.SkImageFilter_Base::CropRect", i32, [4 x i8] }>
%class.SkImageFilter.base = type { %class.SkFlattenable.base }
%class.SkAutoSTArray = type { i32, %class.sk_sp.11*, [16 x i8] }
%"class.SkImageFilter_Base::CropRect" = type { %struct.SkRect, i32 }
%class.SkTCopyOnFirstWrite = type { %class.SkMatrix*, %class.SkTLazy }
%class.SkTLazy = type { [40 x i8], %class.SkMatrix* }
%class.SkEnumerate = type { %class.SkZip, i64, %"class.SkZip<const unsigned short, const SkPoint>::Iterator", %"class.SkZip<const unsigned short, const SkPoint>::Iterator" }
%"class.SkZip<const unsigned short, const SkPoint>::Iterator" = type { %class.SkZip*, i64 }
%class.SkShaderBase = type { %class.SkShader.base, %class.SkMatrix, [4 x i8] }
%class.SkShader.base = type { %class.SkFlattenable.base }
%class.sk_sp.195 = type { %class.SkSurface* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkNoPixelsDevice = type { %class.SkBaseDevice, %struct.SkIRect, %class.SkSTArray }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.196 }
%class.SkAlignedSTStorage = type { [160 x i8] }
%class.SkTArray.196 = type { %"struct.SkNoPixelsDevice::ClipState"*, i64 }
%"struct.SkNoPixelsDevice::ClipState" = type <{ %class.SkConservativeClip, i32, [4 x i8] }>
%class.SkConservativeClip = type { %struct.SkIRect, i8, i8, %struct.SkIRect* }
%class.GrSurfaceDrawContext = type opaque
%struct.SkDrawShadowRec = type opaque
%"struct.SkBaseDevice::CreateInfo" = type { %struct.SkImageInfo, i32, i32, i8, %class.SkRasterHandleAllocator* }
%class.SkRefCnt = type { %class.SkRefCntBase.base, [4 x i8] }

$_ZNK4skif7Mapping13deviceToLayerI7SkIRectEENS_10LayerSpaceIT_EERKNS_11DeviceSpaceIS4_EE = comdat any

$_ZN12SkBaseDeviceD2Ev = comdat any

$_ZN12SkBaseDeviceD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK12SkBaseDevice15getRasterHandleEv = comdat any

$_ZNK12SkBaseDevice29localToDeviceHitsPixelCentersEv = comdat any

$_ZN12SkBaseDevice17validateDevBoundsERK7SkIRect = comdat any

$_ZN12SkBaseDevice29android_utils_clipWithStencilEv = comdat any

$_ZNK12SkBaseDevice16recordingContextEv = comdat any

$_ZN12SkBaseDevice18surfaceDrawContextEv = comdat any

$_ZN12SkBaseDevice6onSaveEv = comdat any

$_ZN12SkBaseDevice9onRestoreEv = comdat any

$_ZN12SkBaseDevice10onClipRectERK6SkRect8SkClipOpb = comdat any

$_ZN12SkBaseDevice11onClipRRectERK7SkRRect8SkClipOpb = comdat any

$_ZN12SkBaseDevice10onClipPathERK6SkPath8SkClipOpb = comdat any

$_ZN12SkBaseDevice12onClipShaderE5sk_spI8SkShaderE = comdat any

$_ZN12SkBaseDevice12onClipRegionERK8SkRegion8SkClipOp = comdat any

$_ZN12SkBaseDevice13onReplaceClipERK7SkIRect = comdat any

$_ZN12SkBaseDevice26onSetDeviceClipRestrictionEP7SkIRect = comdat any

$_ZN12SkBaseDevice14drawAnnotationERK6SkRectPKcP6SkData = comdat any

$_ZN12SkBaseDevice12setImmutableEv = comdat any

$_ZN12SkBaseDevice12onPeekPixelsEP8SkPixmap = comdat any

$_ZN12SkBaseDevice14onAccessPixelsEP8SkPixmap = comdat any

$_ZN12SkBaseDevice14onCreateDeviceERKNS_10CreateInfoEPK7SkPaint = comdat any

$_ZNK12SkBaseDevice16isNoPixelsDeviceEv = comdat any

$_ZN12SkBaseDevice36replaceBitmapBackendForRasterSurfaceERK8SkBitmap = comdat any

$_ZNK12SkBaseDevice27forceConservativeRasterClipEv = comdat any

$_ZN12SkBaseDevice19getImageFilterCacheEv = comdat any

$_ZThn16_N12SkBaseDeviceD1Ev = comdat any

$_ZThn16_N12SkBaseDeviceD0Ev = comdat any

$_ZThn16_NK12SkBaseDevice29localToDeviceHitsPixelCentersEv = comdat any

$_ZN16SkNoPixelsDeviceD2Ev = comdat any

$_ZN16SkNoPixelsDeviceD0Ev = comdat any

$_ZNK16SkNoPixelsDevice10onClipIsAAEv = comdat any

$_ZNK16SkNoPixelsDevice16onClipIsWideOpenEv = comdat any

$_ZNK16SkNoPixelsDevice11onAsRgnClipEP8SkRegion = comdat any

$_ZNK16SkNoPixelsDevice15onDevClipBoundsEv = comdat any

$_ZN16SkNoPixelsDevice9drawPaintERK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice8drawRectERK6SkRectRK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice8drawOvalERK6SkRectRK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice9drawRRectERK7SkRRectRK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice8drawPathERK6SkPathRK7SkPaintb = comdat any

$_ZN16SkNoPixelsDevice13drawImageRectEPK7SkImagePK6SkRectRS4_RK17SkSamplingOptionsRK7SkPaintN8SkCanvas17SrcRectConstraintE = comdat any

$_ZN16SkNoPixelsDevice12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice10drawDeviceEP12SkBaseDeviceRK17SkSamplingOptionsRK7SkPaint = comdat any

$_ZN16SkNoPixelsDevice17drawFilteredImageERKN4skif7MappingEP14SkSpecialImagePK13SkImageFilterRK17SkSamplingOptionsRK7SkPaint = comdat any

$_ZNK16SkNoPixelsDevice16isNoPixelsDeviceEv = comdat any

$_ZThn16_N16SkNoPixelsDeviceD1Ev = comdat any

$_ZThn16_N16SkNoPixelsDeviceD0Ev = comdat any

$_ZN12SkRefCntBaseD2Ev = comdat any

$_ZN8SkRefCntD0Ev = comdat any

$_ZN16SkMatrixProviderD2Ev = comdat any

$_ZN16SkMatrixProviderD0Ev = comdat any

$_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE = comdat any

$_ZTV8SkRefCnt = comdat any

$_ZTV16SkMatrixProvider = comdat any

@_ZTV12SkBaseDevice = hidden unnamed_addr constant { [63 x i8*], [6 x i8*] } { [63 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkBaseDevice*)* @_ZN12SkBaseDeviceD2Ev to i8*), i8* bitcast (void (%class.SkBaseDevice*)* @_ZN12SkBaseDeviceD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i8* (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice15getRasterHandleEv to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, i32, %class.SkM44*)* @_ZNK12SkBaseDevice16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice29localToDeviceHitsPixelCentersEv to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkIRect*)* @_ZN12SkBaseDevice17validateDevBoundsERK7SkIRect to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZN12SkBaseDevice29android_utils_clipWithStencilEv to i8*), i8* bitcast (%class.GrRecordingContext* (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice16recordingContextEv to i8*), i8* bitcast (%class.GrSurfaceDrawContext* (%class.SkBaseDevice*)* @_ZN12SkBaseDevice18surfaceDrawContextEv to i8*), i8* bitcast (void (%class.SkBaseDevice*)* @_ZN12SkBaseDevice6onSaveEv to i8*), i8* bitcast (void (%class.SkBaseDevice*)* @_ZN12SkBaseDevice9onRestoreEv to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, i32, i1)* @_ZN12SkBaseDevice10onClipRectERK6SkRect8SkClipOpb to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkRRect*, i32, i1)* @_ZN12SkBaseDevice11onClipRRectERK7SkRRect8SkClipOpb to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkPath*, i32, i1)* @_ZN12SkBaseDevice10onClipPathERK6SkPath8SkClipOpb to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.sk_sp.8*)* @_ZN12SkBaseDevice12onClipShaderE5sk_spI8SkShaderE to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkRegion*, i32)* @_ZN12SkBaseDevice12onClipRegionERK8SkRegion8SkClipOp to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkIRect*)* @_ZN12SkBaseDevice13onReplaceClipERK7SkIRect to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkIRect*)* @_ZN12SkBaseDevice26onSetDeviceClipRestrictionEP7SkIRect to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkRegion*, %class.SkPaint*)* @_ZN12SkBaseDevice10drawRegionERK8SkRegionRK7SkPaint to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, float, float, i1, %class.SkPaint*)* @_ZN12SkBaseDevice7drawArcERK6SkRectffbRK7SkPaint to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)* @_ZN12SkBaseDevice10drawDRRectERK7SkRRectS2_RK7SkPaint to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)* @_ZN12SkBaseDevice16drawImageLatticeEPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModeRK7SkPaint to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkPath*, %struct.SkDrawShadowRec*)* @_ZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRec to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)* @_ZN12SkBaseDevice9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN12SkBaseDevice9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, i8*, %class.SkData*)* @_ZN12SkBaseDevice14drawAnnotationERK6SkRectPKcP6SkData to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)* @_ZN12SkBaseDevice14drawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode to i8*), i8* bitcast (void (%class.SkBaseDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN12SkBaseDevice18drawEdgeAAImageSetEPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintNS0_17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkDrawable*, %class.SkMatrix*, %class.SkCanvas*)* @_ZN12SkBaseDevice12drawDrawableEP10SkDrawablePK8SkMatrixP8SkCanvas to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN12SkBaseDevice10drawDeviceEPS_RK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN12SkBaseDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN12SkBaseDevice17drawFilteredImageERKN4skif7MappingEP14SkSpecialImagePK13SkImageFilterRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.sk_sp.185*, %class.SkBaseDevice*, %class.SkBitmap*)* @_ZN12SkBaseDevice11makeSpecialERK8SkBitmap to i8*), i8* bitcast (void (%class.sk_sp.185*, %class.SkBaseDevice*, %class.SkImage*)* @_ZN12SkBaseDevice11makeSpecialEPK7SkImage to i8*), i8* bitcast (void (%class.sk_sp.185*, %class.SkBaseDevice*, %struct.SkIRect*, i1)* @_ZN12SkBaseDevice11snapSpecialERK7SkIRectb to i8*), i8* bitcast (void (%class.SkBaseDevice*)* @_ZN12SkBaseDevice12setImmutableEv to i8*), i8* bitcast (void (%class.sk_sp.195*, %class.SkBaseDevice*, %struct.SkImageInfo*, %class.SkSurfaceProps*)* @_ZN12SkBaseDevice11makeSurfaceERK11SkImageInfoRK14SkSurfaceProps to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*)* @_ZN12SkBaseDevice12onPeekPixelsEP8SkPixmap to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)* @_ZN12SkBaseDevice12onReadPixelsERK8SkPixmapii to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)* @_ZN12SkBaseDevice13onWritePixelsERK8SkPixmapii to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*)* @_ZN12SkBaseDevice14onAccessPixelsEP8SkPixmap to i8*), i8* bitcast (%class.SkBaseDevice* (%class.SkBaseDevice*, %"struct.SkBaseDevice::CreateInfo"*, %class.SkPaint*)* @_ZN12SkBaseDevice14onCreateDeviceERKNS_10CreateInfoEPK7SkPaint to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice16isNoPixelsDeviceEv to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkBitmap*)* @_ZN12SkBaseDevice36replaceBitmapBackendForRasterSurfaceERK8SkBitmap to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice27forceConservativeRasterClipEv to i8*), i8* bitcast (%class.SkImageFilterCache* (%class.SkBaseDevice*)* @_ZN12SkBaseDevice19getImageFilterCacheEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%class.SkBaseDevice*)* @_ZThn16_N12SkBaseDeviceD1Ev to i8*), i8* bitcast (void (%class.SkBaseDevice*)* @_ZThn16_N12SkBaseDeviceD0Ev to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, i32, %class.SkM44*)* @_ZThn16_NK12SkBaseDevice16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZThn16_NK12SkBaseDevice29localToDeviceHitsPixelCentersEv to i8*)] }, align 8
@__const._ZN12SkBaseDevice17drawFilteredImageERKN4skif7MappingEP14SkSpecialImagePK13SkImageFilterRK17SkSamplingOptionsRK7SkPaint.ctx = private unnamed_addr constant { %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, [4 x i8], %class.SkColorSpace*, %"class.skif::FilterResult" } { %"class.skif::Mapping" { %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, %"class.skif::LayerSpace" { %struct.SkIRect { i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766 } }, %class.SkImageFilterCache* inttoptr (i64 -6148914691236517206 to %class.SkImageFilterCache*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*), %"class.skif::FilterResult" { %class.sk_sp.185 { %class.SkSpecialImage* inttoptr (i64 -6148914691236517206 to %class.SkSpecialImage*) }, %"class.skif::LayerSpace.187" { %struct.SkIPoint { i32 -1431655766, i32 -1431655766 } } } }, align 8
@__const._ZN12SkBaseDevice32simplifyGlyphRunRSXFormAndRedrawERK14SkGlyphRunListRK7SkPaint.glyphRun = private unnamed_addr constant %class.SkGlyphRun { %class.SkZip { %"class.std::__1::tuple" { %"struct.std::__1::__tuple_impl" { %"class.std::__1::__tuple_leaf" { i16* inttoptr (i64 -6148914691236517206 to i16*) }, %"class.std::__1::__tuple_leaf.156" { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*) } } }, i64 -6148914691236517206 }, %class.SkSpan { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206 }, %class.SkSpan.157 { i32* inttoptr (i64 -6148914691236517206 to i32*), i64 -6148914691236517206 }, %class.SkSpan.158 { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*), i64 -6148914691236517206 }, %class.SkFont <{ %class.sk_sp.159 { %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*) }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, i8 -86, i8 -86, i8 -86 }> }, align 8
@__const._ZN12SkBaseDevice32simplifyGlyphRunRSXFormAndRedrawERK14SkGlyphRunListRK7SkPaint.invertingPaint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.7 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.8 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.9 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.10 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.11 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTV16SkNoPixelsDevice = hidden unnamed_addr constant { [63 x i8*], [6 x i8*] } { [63 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkNoPixelsDevice*)* @_ZN16SkNoPixelsDeviceD2Ev to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*)* @_ZN16SkNoPixelsDeviceD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i8* (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice15getRasterHandleEv to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, i32, %class.SkM44*)* @_ZNK12SkBaseDevice16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice29localToDeviceHitsPixelCentersEv to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkIRect*)* @_ZN12SkBaseDevice17validateDevBoundsERK7SkIRect to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZN12SkBaseDevice29android_utils_clipWithStencilEv to i8*), i8* bitcast (%class.GrRecordingContext* (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice16recordingContextEv to i8*), i8* bitcast (%class.GrSurfaceDrawContext* (%class.SkBaseDevice*)* @_ZN12SkBaseDevice18surfaceDrawContextEv to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*)* @_ZN16SkNoPixelsDevice6onSaveEv to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*)* @_ZN16SkNoPixelsDevice9onRestoreEv to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %struct.SkRect*, i32, i1)* @_ZN16SkNoPixelsDevice10onClipRectERK6SkRect8SkClipOpb to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkRRect*, i32, i1)* @_ZN16SkNoPixelsDevice11onClipRRectERK7SkRRect8SkClipOpb to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkPath*, i32, i1)* @_ZN16SkNoPixelsDevice10onClipPathERK6SkPath8SkClipOpb to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.sk_sp.8*)* @_ZN16SkNoPixelsDevice12onClipShaderE5sk_spI8SkShaderE to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkRegion*, i32)* @_ZN16SkNoPixelsDevice12onClipRegionERK8SkRegion8SkClipOp to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %struct.SkIRect*)* @_ZN16SkNoPixelsDevice13onReplaceClipERK7SkIRect to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %struct.SkIRect*)* @_ZN16SkNoPixelsDevice26onSetDeviceClipRestrictionEP7SkIRect to i8*), i8* bitcast (i1 (%class.SkNoPixelsDevice*)* @_ZNK16SkNoPixelsDevice10onClipIsAAEv to i8*), i8* bitcast (i1 (%class.SkNoPixelsDevice*)* @_ZNK16SkNoPixelsDevice16onClipIsWideOpenEv to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkRegion*)* @_ZNK16SkNoPixelsDevice11onAsRgnClipEP8SkRegion to i8*), i8* bitcast (i32 (%class.SkNoPixelsDevice*)* @_ZNK16SkNoPixelsDevice13onGetClipTypeEv to i8*), i8* bitcast ({ i64, i64 } (%class.SkNoPixelsDevice*)* @_ZNK16SkNoPixelsDevice15onDevClipBoundsEv to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice9drawPaintERK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %struct.SkRect*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice8drawRectERK6SkRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkRegion*, %class.SkPaint*)* @_ZN12SkBaseDevice10drawRegionERK8SkRegionRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %struct.SkRect*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice8drawOvalERK6SkRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, float, float, i1, %class.SkPaint*)* @_ZN12SkBaseDevice7drawArcERK6SkRectffbRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkRRect*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice9drawRRectERK7SkRRectRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkRRect*, %class.SkRRect*, %class.SkPaint*)* @_ZN12SkBaseDevice10drawDRRectERK7SkRRectS2_RK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkPath*, %class.SkPaint*, i1)* @_ZN16SkNoPixelsDevice8drawPathERK6SkPathRK7SkPaintb to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN16SkNoPixelsDevice13drawImageRectEPK7SkImagePK6SkRectRS4_RK17SkSamplingOptionsRK7SkPaintN8SkCanvas17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkImage*, %"struct.SkCanvas::Lattice"*, %struct.SkRect*, i32, %class.SkPaint*)* @_ZN12SkBaseDevice16drawImageLatticeEPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkVertices*, i32, %class.SkPaint*)* @_ZN16SkNoPixelsDevice12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkPath*, %struct.SkDrawShadowRec*)* @_ZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRec to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint*)* @_ZN12SkBaseDevice9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32*, i32, i32, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN12SkBaseDevice9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, i8*, %class.SkData*)* @_ZN12SkBaseDevice14drawAnnotationERK6SkRectPKcP6SkData to i8*), i8* bitcast (void (%class.SkBaseDevice*, %struct.SkRect*, %struct.SkPoint*, i32, %struct.SkRGBA4f*, i32)* @_ZN12SkBaseDevice14drawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode to i8*), i8* bitcast (void (%class.SkBaseDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)* @_ZN12SkBaseDevice18drawEdgeAAImageSetEPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintNS0_17SrcRectConstraintE to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkDrawable*, %class.SkMatrix*, %class.SkCanvas*)* @_ZN12SkBaseDevice12drawDrawableEP10SkDrawablePK8SkMatrixP8SkCanvas to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkGlyphRunList*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice10drawDeviceEP12SkBaseDeviceRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN12SkBaseDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*, %"class.skif::Mapping"*, %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN16SkNoPixelsDevice17drawFilteredImageERKN4skif7MappingEP14SkSpecialImagePK13SkImageFilterRK17SkSamplingOptionsRK7SkPaint to i8*), i8* bitcast (void (%class.sk_sp.185*, %class.SkBaseDevice*, %class.SkBitmap*)* @_ZN12SkBaseDevice11makeSpecialERK8SkBitmap to i8*), i8* bitcast (void (%class.sk_sp.185*, %class.SkBaseDevice*, %class.SkImage*)* @_ZN12SkBaseDevice11makeSpecialEPK7SkImage to i8*), i8* bitcast (void (%class.sk_sp.185*, %class.SkBaseDevice*, %struct.SkIRect*, i1)* @_ZN12SkBaseDevice11snapSpecialERK7SkIRectb to i8*), i8* bitcast (void (%class.SkBaseDevice*)* @_ZN12SkBaseDevice12setImmutableEv to i8*), i8* bitcast (void (%class.sk_sp.195*, %class.SkBaseDevice*, %struct.SkImageInfo*, %class.SkSurfaceProps*)* @_ZN12SkBaseDevice11makeSurfaceERK11SkImageInfoRK14SkSurfaceProps to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*)* @_ZN12SkBaseDevice12onPeekPixelsEP8SkPixmap to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)* @_ZN12SkBaseDevice12onReadPixelsERK8SkPixmapii to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)* @_ZN12SkBaseDevice13onWritePixelsERK8SkPixmapii to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, %class.SkPixmap*)* @_ZN12SkBaseDevice14onAccessPixelsEP8SkPixmap to i8*), i8* bitcast (%class.SkBaseDevice* (%class.SkBaseDevice*, %"struct.SkBaseDevice::CreateInfo"*, %class.SkPaint*)* @_ZN12SkBaseDevice14onCreateDeviceERKNS_10CreateInfoEPK7SkPaint to i8*), i8* bitcast (i1 (%class.SkNoPixelsDevice*)* @_ZNK16SkNoPixelsDevice16isNoPixelsDeviceEv to i8*), i8* bitcast (void (%class.SkBaseDevice*, %class.SkBitmap*)* @_ZN12SkBaseDevice36replaceBitmapBackendForRasterSurfaceERK8SkBitmap to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZNK12SkBaseDevice27forceConservativeRasterClipEv to i8*), i8* bitcast (%class.SkImageFilterCache* (%class.SkBaseDevice*)* @_ZN12SkBaseDevice19getImageFilterCacheEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%class.SkNoPixelsDevice*)* @_ZThn16_N16SkNoPixelsDeviceD1Ev to i8*), i8* bitcast (void (%class.SkNoPixelsDevice*)* @_ZThn16_N16SkNoPixelsDeviceD0Ev to i8*), i8* bitcast (i1 (%class.SkBaseDevice*, i32, %class.SkM44*)* @_ZThn16_NK12SkBaseDevice16getLocalToMarkerEjP5SkM44 to i8*), i8* bitcast (i1 (%class.SkBaseDevice*)* @_ZThn16_NK12SkBaseDevice29localToDeviceHitsPixelCentersEv to i8*)] }, align 8
@_ZTV8SkRefCnt = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkRefCntBase*)* @_ZN12SkRefCntBaseD2Ev to i8*), i8* bitcast (void (%class.SkRefCnt*)* @_ZN8SkRefCntD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*)] }, comdat, align 8
@_ZTV16SkMatrixProvider = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD2Ev to i8*), i8* bitcast (void (%class.SkMatrixProvider*)* @_ZN16SkMatrixProviderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@constinit = private unnamed_addr constant [16 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4
@.ref.tmp = private unnamed_addr constant %class.SkM44 { [16 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00] }, align 4
@_ZN6SkOpts8memset32E = external local_unnamed_addr global void (i32*, i32, i32)*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkBaseDeviceC2ERK11SkImageInfoRK14SkSurfaceProps(%class.SkBaseDevice*, %struct.SkImageInfo* nocapture readonly dereferenceable(24), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %5, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV8SkRefCnt, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #15
  %7 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV16SkMatrixProvider, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1
  %9 = bitcast %class.SkMatrix* %6 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 1
  %12 = bitcast float* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 2
  %15 = bitcast float* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 3
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 5
  %24 = bitcast float* %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 6
  %27 = bitcast float* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 7
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = bitcast %class.SkM44* %8 to i32*
  store i32 %10, i32* %35, align 4
  %36 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 1
  %37 = bitcast float* %36 to i32*
  store i32 %19, i32* %37, align 4
  %38 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 2
  store float 0.000000e+00, float* %38, align 4
  %39 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 3
  %40 = bitcast float* %39 to i32*
  store i32 %28, i32* %40, align 4
  %41 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 4
  %42 = bitcast float* %41 to i32*
  store i32 %13, i32* %42, align 4
  %43 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 5
  %44 = bitcast float* %43 to i32*
  store i32 %22, i32* %44, align 4
  %45 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 6
  store float 0.000000e+00, float* %45, align 4
  %46 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 7
  %47 = bitcast float* %46 to i32*
  store i32 %31, i32* %47, align 4
  %48 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 8
  %49 = bitcast float* %48 to <4 x float>*
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %49, align 4
  %50 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 12
  %51 = bitcast float* %50 to i32*
  store i32 %16, i32* %51, align 4
  %52 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 13
  %53 = bitcast float* %52 to i32*
  store i32 %25, i32* %53, align 4
  %54 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 14
  store float 0.000000e+00, float* %54, align 4
  %55 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 15
  %56 = bitcast float* %55 to i32*
  store i32 %34, i32* %56, align 4
  %57 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2
  %58 = bitcast %class.SkMatrix* %57 to i8*
  %59 = bitcast %class.SkMatrix* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 4 %59, i64 40, i1 false) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %60 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 2
  store %class.SkMarkerStack* null, %class.SkMarkerStack** %60, align 8
  %61 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %63 = load %class.SkColorSpace*, %class.SkColorSpace** %62, align 8
  %64 = icmp eq %class.SkColorSpace* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %3
  %66 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = atomicrmw add i32* %66, i32 1 monotonic
  br label %68

68:                                               ; preds = %3, %65
  store %class.SkColorSpace* %63, %class.SkColorSpace** %61, align 8
  %69 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 3, i32 0, i32 1
  %70 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %71 = bitcast i32* %70 to i64*
  %72 = bitcast i32* %69 to i64*
  %73 = load i64, i64* %71, align 8
  store i64 %73, i64* %72, align 8
  %74 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 3, i32 1
  %75 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1
  %76 = bitcast %struct.SkISize* %75 to i64*
  %77 = bitcast %struct.SkISize* %74 to i64*
  %78 = load i64, i64* %76, align 8
  store i64 %78, i64* %77, align 8
  %79 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 4
  tail call void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps* %79, %class.SkSurfaceProps* dereferenceable(8) %2) #15
  %80 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 5
  %81 = bitcast %class.SkM44* %80 to i8*
  %82 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 6
  %83 = bitcast %class.SkM44* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %81, i8* align 4 bitcast (%class.SkM44* @.ref.tmp to i8*), i64 64, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %83, i8* align 4 bitcast (%class.SkM44* @.ref.tmp to i8*), i64 64, i1 false) #15
  ret void
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #1

declare void @_ZN14SkSurfacePropsC1ERKS_(%class.SkSurfaceProps*, %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkBaseDevice25setDeviceCoordinateSystemERK5SkM44S2_ii(%class.SkBaseDevice*, %class.SkM44* dereferenceable(64), %class.SkM44* nocapture readonly dereferenceable(64), i32, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 5
  %7 = bitcast %class.SkM44* %6 to i8*
  %8 = bitcast %class.SkM44* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 4 %8, i64 64, i1 false)
  tail call void @_ZN5SkM4420normalizePerspectiveEv(%class.SkM44* %6) #15
  %9 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 6
  %10 = tail call zeroext i1 @_ZNK5SkM446invertEPS_(%class.SkM44* %1, %class.SkM44* %9) #15
  %11 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1
  %12 = bitcast %class.SkM44* %11 to i8*
  %13 = bitcast %class.SkM44* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 4 %13, i64 64, i1 false)
  tail call void @_ZN5SkM4420normalizePerspectiveEv(%class.SkM44* %11) #15
  %14 = or i32 %4, %3
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %5
  %17 = sitofp i32 %3 to float
  %18 = sitofp i32 %4 to float
  %19 = tail call dereferenceable(64) %class.SkM44* @_ZN5SkM4412preTranslateEfff(%class.SkM44* %6, float %17, float %18, float 0.000000e+00) #15
  %20 = sub nsw i32 0, %3
  %21 = sitofp i32 %20 to float
  %22 = sub nsw i32 0, %4
  %23 = sitofp i32 %22 to float
  %24 = tail call dereferenceable(64) %class.SkM44* @_ZN5SkM4413postTranslateEfff(%class.SkM44* %9, float %21, float %23, float 0.000000e+00) #15
  %25 = tail call dereferenceable(64) %class.SkM44* @_ZN5SkM4413postTranslateEfff(%class.SkM44* %11, float %21, float %23, float 0.000000e+00) #15
  br label %26

26:                                               ; preds = %5, %16
  %27 = bitcast %class.SkM44* %11 to i32*
  %28 = load i32, i32* %27, align 4, !noalias !2
  %29 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 4
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 4, !noalias !2
  %32 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 12
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 4, !noalias !2
  %35 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 1
  %36 = bitcast float* %35 to i32*
  %37 = load i32, i32* %36, align 4, !noalias !2
  %38 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 5
  %39 = bitcast float* %38 to i32*
  %40 = load i32, i32* %39, align 4, !noalias !2
  %41 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 13
  %42 = bitcast float* %41 to i32*
  %43 = load i32, i32* %42, align 4, !noalias !2
  %44 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 3
  %45 = bitcast float* %44 to i32*
  %46 = load i32, i32* %45, align 4, !noalias !2
  %47 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 7
  %48 = bitcast float* %47 to i32*
  %49 = load i32, i32* %48, align 4, !noalias !2
  %50 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 15
  %51 = bitcast float* %50 to i32*
  %52 = load i32, i32* %51, align 4, !noalias !2
  %53 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2
  %54 = bitcast %class.SkMatrix* %53 to i32*
  store i32 %28, i32* %54, align 8
  %55 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 1
  %56 = bitcast float* %55 to i32*
  store i32 %31, i32* %56, align 4
  %57 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 2
  %58 = bitcast float* %57 to i32*
  store i32 %34, i32* %58, align 8
  %59 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 3
  %60 = bitcast float* %59 to i32*
  store i32 %37, i32* %60, align 4
  %61 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 4
  %62 = bitcast float* %61 to i32*
  store i32 %40, i32* %62, align 8
  %63 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 5
  %64 = bitcast float* %63 to i32*
  store i32 %43, i32* %64, align 4
  %65 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 6
  %66 = bitcast float* %65 to i32*
  store i32 %46, i32* %66, align 8
  %67 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 7
  %68 = bitcast float* %67 to i32*
  store i32 %49, i32* %68, align 4
  %69 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 8
  %70 = bitcast float* %69 to i32*
  store i32 %52, i32* %70, align 8
  %71 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 1
  store i32 128, i32* %71, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN5SkM4420normalizePerspectiveEv(%class.SkM44*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5SkM446invertEPS_(%class.SkM44*, %class.SkM44*) local_unnamed_addr #1

declare dereferenceable(64) %class.SkM44* @_ZN5SkM4412preTranslateEfff(%class.SkM44*, float, float, float) local_unnamed_addr #1

declare dereferenceable(64) %class.SkM44* @_ZN5SkM4413postTranslateEfff(%class.SkM44*, float, float, float) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkBaseDevice12setGlobalCTMERK5SkM44(%class.SkBaseDevice*, %class.SkM44* nocapture readonly dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1
  %4 = bitcast %class.SkM44* %3 to i8*
  %5 = bitcast %class.SkM44* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 4 %5, i64 64, i1 false)
  tail call void @_ZN5SkM4420normalizePerspectiveEv(%class.SkM44* %3) #15
  %6 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 6
  %7 = tail call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* %3, %class.SkM44* dereferenceable(64) %6, %class.SkM44* dereferenceable(64) %3) #15
  %8 = bitcast %class.SkM44* %3 to i32*
  %9 = load i32, i32* %8, align 4, !noalias !5
  %10 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 4
  %11 = bitcast float* %10 to i32*
  %12 = load i32, i32* %11, align 4, !noalias !5
  %13 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 12
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4, !noalias !5
  %16 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 1
  %17 = bitcast float* %16 to i32*
  %18 = load i32, i32* %17, align 4, !noalias !5
  %19 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 5
  %20 = bitcast float* %19 to i32*
  %21 = load i32, i32* %20, align 4, !noalias !5
  %22 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 13
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4, !noalias !5
  %25 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 3
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4, !noalias !5
  %28 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 7
  %29 = bitcast float* %28 to i32*
  %30 = load i32, i32* %29, align 4, !noalias !5
  %31 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 15
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4, !noalias !5
  %34 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2
  %35 = bitcast %class.SkMatrix* %34 to i32*
  store i32 %9, i32* %35, align 8
  %36 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 1
  %37 = bitcast float* %36 to i32*
  store i32 %12, i32* %37, align 4
  %38 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 2
  %39 = bitcast float* %38 to i32*
  store i32 %15, i32* %39, align 8
  %40 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 3
  %41 = bitcast float* %40 to i32*
  store i32 %18, i32* %41, align 4
  %42 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 4
  %43 = bitcast float* %42 to i32*
  store i32 %21, i32* %43, align 8
  %44 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 5
  %45 = bitcast float* %44 to i32*
  store i32 %24, i32* %45, align 4
  %46 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 6
  %47 = bitcast float* %46 to i32*
  store i32 %27, i32* %47, align 8
  %48 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 7
  %49 = bitcast float* %48 to i32*
  store i32 %30, i32* %49, align 4
  %50 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 8
  %51 = bitcast float* %50 to i32*
  store i32 %33, i32* %51, align 8
  %52 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 1
  store i32 128, i32* %52, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12SkBaseDevice22isPixelAlignedToGlobalEv(%class.SkBaseDevice*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.SkM44, align 4
  %3 = bitcast %class.SkM44* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %3) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %3, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #15
  %4 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 5
  %5 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 5, i32 0, i64 12
  %6 = load float, float* %5, align 4
  %7 = tail call float @llvm.floor.f32(float %6)
  %8 = getelementptr inbounds %class.SkM44, %class.SkM44* %2, i64 0, i32 0, i64 12
  store float %7, float* %8, align 4
  %9 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 5, i32 0, i64 13
  %10 = load float, float* %9, align 4
  %11 = tail call float @llvm.floor.f32(float %10)
  %12 = getelementptr inbounds %class.SkM44, %class.SkM44* %2, i64 0, i32 0, i64 13
  store float %11, float* %12, align 4
  %13 = call zeroext i1 @_ZNK5SkM44eqERKS_(%class.SkM44* nonnull %2, %class.SkM44* dereferenceable(64) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %3) #15
  ret i1 %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #3

declare zeroext i1 @_ZNK5SkM44eqERKS_(%class.SkM44*, %class.SkM44* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK12SkBaseDevice9getOriginEv(%class.SkBaseDevice* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 5, i32 0, i64 12
  %3 = load float, float* %2, align 4
  %4 = tail call float @llvm.floor.f32(float %3)
  %5 = fcmp olt float %4, 0x41DFFFFFE0000000
  %6 = select i1 %5, float %4, float 0x41DFFFFFE0000000
  %7 = fcmp ogt float %6, 0xC1DFFFFFE0000000
  %8 = select i1 %7, float %6, float 0xC1DFFFFFE0000000
  %9 = fptosi float %8 to i32
  %10 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 5, i32 0, i64 13
  %11 = load float, float* %10, align 4
  %12 = tail call float @llvm.floor.f32(float %11)
  %13 = fcmp olt float %12, 0x41DFFFFFE0000000
  %14 = select i1 %13, float %12, float 0x41DFFFFFE0000000
  %15 = fcmp ogt float %14, 0xC1DFFFFFE0000000
  %16 = select i1 %15, float %14, float 0xC1DFFFFFE0000000
  %17 = fptosi float %16 to i32
  %18 = zext i32 %17 to i64
  %19 = shl nuw i64 %18, 32
  %20 = zext i32 %9 to i64
  %21 = or i64 %19, %20
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK12SkBaseDevice20getRelativeTransformERKS_(%class.SkMatrix* noalias nocapture sret, %class.SkBaseDevice*, %class.SkBaseDevice* dereferenceable(296)) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkM44, align 4
  %5 = bitcast %class.SkM44* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %5) #15
  %6 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %2, i64 0, i32 6
  %7 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %1, i64 0, i32 5
  %8 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %4, %class.SkM44* dereferenceable(64) %6, %class.SkM44* dereferenceable(64) %7) #15
  %9 = bitcast %class.SkM44* %4 to i32*
  %10 = load i32, i32* %9, align 4, !noalias !8
  %11 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 4
  %12 = bitcast float* %11 to i32*
  %13 = load i32, i32* %12, align 4, !noalias !8
  %14 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 12
  %15 = bitcast float* %14 to i32*
  %16 = load i32, i32* %15, align 4, !noalias !8
  %17 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 1
  %18 = bitcast float* %17 to i32*
  %19 = load i32, i32* %18, align 4, !noalias !8
  %20 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 5
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4, !noalias !8
  %23 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 13
  %24 = bitcast float* %23 to i32*
  %25 = load i32, i32* %24, align 4, !noalias !8
  %26 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 3
  %27 = bitcast float* %26 to i32*
  %28 = load i32, i32* %27, align 4, !noalias !8
  %29 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 7
  %30 = bitcast float* %29 to i32*
  %31 = load i32, i32* %30, align 4, !noalias !8
  %32 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 15
  %33 = bitcast float* %32 to i32*
  %34 = load i32, i32* %33, align 4, !noalias !8
  %35 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 1
  %36 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 1
  %37 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 2
  %38 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 3
  %39 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 4
  %40 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 5
  %41 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 6
  %42 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 7
  %43 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %0, i64 0, i32 0, i64 8
  %44 = bitcast %class.SkMatrix* %0 to i32*
  store i32 %10, i32* %44, align 4, !alias.scope !11
  %45 = bitcast float* %36 to i32*
  store i32 %13, i32* %45, align 4, !alias.scope !11
  %46 = bitcast float* %37 to i32*
  store i32 %16, i32* %46, align 4, !alias.scope !11
  %47 = bitcast float* %38 to i32*
  store i32 %19, i32* %47, align 4, !alias.scope !11
  %48 = bitcast float* %39 to i32*
  store i32 %22, i32* %48, align 4, !alias.scope !11
  %49 = bitcast float* %40 to i32*
  store i32 %25, i32* %49, align 4, !alias.scope !11
  %50 = bitcast float* %41 to i32*
  store i32 %28, i32* %50, align 4, !alias.scope !11
  %51 = bitcast float* %42 to i32*
  store i32 %31, i32* %51, align 4, !alias.scope !11
  %52 = bitcast float* %43 to i32*
  store i32 %34, i32* %52, align 4, !alias.scope !11
  store i32 128, i32* %35, align 4, !alias.scope !11
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK12SkBaseDevice16getLocalToMarkerEjP5SkM44(%class.SkBaseDevice*, i32, %class.SkM44*) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkM44, align 4
  %5 = alloca %class.SkM44, align 4
  %6 = alloca %class.SkM44, align 4
  %7 = alloca %class.SkM44, align 4
  %8 = bitcast %class.SkM44* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #15
  %9 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 2
  %10 = load %class.SkMarkerStack*, %class.SkMarkerStack** %9, align 8
  %11 = icmp eq %class.SkMarkerStack* %10, null
  br i1 %11, label %28, label %12

12:                                               ; preds = %3
  %13 = icmp eq i32 %1, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %12
  %15 = call zeroext i1 @_ZNK13SkMarkerStack17findMarkerInverseEjP5SkM44(%class.SkMarkerStack* nonnull %10, i32 %1, %class.SkM44* nonnull %4) #15
  br i1 %15, label %16, label %28

16:                                               ; preds = %14, %12
  %17 = icmp eq %class.SkM44* %2, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %16
  %19 = bitcast %class.SkM44* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %19) #15
  %20 = bitcast %class.SkM44* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %20) #15
  %21 = bitcast %class.SkM44* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %21) #15
  %22 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 5
  %23 = bitcast %class.SkM44* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 8 %23, i64 64, i1 false)
  %24 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %6, %class.SkM44* nonnull dereferenceable(64) %4, %class.SkM44* nonnull dereferenceable(64) %7) #15
  %25 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1
  %26 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %5, %class.SkM44* nonnull dereferenceable(64) %6, %class.SkM44* dereferenceable(64) %25) #15
  %27 = bitcast %class.SkM44* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %27, i8* nonnull align 4 %19, i64 64, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %21) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %20) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %19) #15
  br label %28

28:                                               ; preds = %14, %3, %18, %16
  %29 = phi i1 [ true, %16 ], [ true, %18 ], [ false, %3 ], [ false, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #15
  ret i1 %29
}

declare zeroext i1 @_ZNK13SkMarkerStack17findMarkerInverseEjP5SkM44(%class.SkMarkerStack*, i32, %class.SkM44*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn16_NK12SkBaseDevice16getLocalToMarkerEjP5SkM44(%class.SkBaseDevice*, i32, %class.SkM44*) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkM44, align 4
  %5 = alloca %class.SkM44, align 4
  %6 = alloca %class.SkM44, align 4
  %7 = alloca %class.SkM44, align 4
  %8 = bitcast %class.SkM44* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %8) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %8, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #15
  %9 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 -1, i32 6, i32 0, i64 44
  %10 = bitcast float* %9 to %class.SkMarkerStack**
  %11 = load %class.SkMarkerStack*, %class.SkMarkerStack** %10, align 8
  %12 = icmp eq %class.SkMarkerStack* %11, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %3
  %14 = icmp eq i32 %1, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = call zeroext i1 @_ZNK13SkMarkerStack17findMarkerInverseEjP5SkM44(%class.SkMarkerStack* nonnull %11, i32 %1, %class.SkM44* nonnull %4) #15
  br i1 %16, label %17, label %30

17:                                               ; preds = %15, %13
  %18 = icmp eq %class.SkM44* %2, null
  br i1 %18, label %30, label %19

19:                                               ; preds = %17
  %20 = bitcast %class.SkM44* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %20) #15
  %21 = bitcast %class.SkM44* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %21) #15
  %22 = bitcast %class.SkM44* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %22) #15
  %23 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 -1, i32 6, i32 0, i64 54
  %24 = bitcast float* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 8 %24, i64 64, i1 false) #15
  %25 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %6, %class.SkM44* nonnull dereferenceable(64) %4, %class.SkM44* nonnull dereferenceable(64) %7) #15
  %26 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 -1, i32 6, i32 0, i64 18
  %27 = bitcast float* %26 to %class.SkM44*
  %28 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %5, %class.SkM44* nonnull dereferenceable(64) %6, %class.SkM44* dereferenceable(64) %27) #15
  %29 = bitcast %class.SkM44* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %29, i8* nonnull align 4 %20, i64 64, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %22) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %21) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %20) #15
  br label %30

30:                                               ; preds = %3, %15, %17, %19
  %31 = phi i1 [ true, %17 ], [ true, %19 ], [ false, %3 ], [ false, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %8) #15
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkBaseDevice10drawRegionERK8SkRegionRK7SkPaint(%class.SkBaseDevice*, %class.SkRegion* dereferenceable(24), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPath, align 8
  %5 = alloca %"class.SkRegion::Iterator", align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %8 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = trunc i32 %9 to i8
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2
  %14 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %13) #15
  %15 = zext i8 %14 to i32
  store i32 %15, i32* %8, align 4
  br label %16

16:                                               ; preds = %3, %12
  %17 = phi i32 [ %15, %12 ], [ %9, %3 ]
  %18 = and i32 %17, 14
  %19 = icmp ne i32 %18, 0
  %20 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 8, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 192
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %32

24:                                               ; preds = %16
  %25 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 2, i32 0
  %26 = load %class.SkMaskFilter*, %class.SkMaskFilter** %25, align 8
  %27 = icmp eq %class.SkMaskFilter* %26, null
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 0, i32 0
  %30 = load %class.SkPathEffect*, %class.SkPathEffect** %29, align 8
  %31 = icmp ne %class.SkPathEffect* %30, null
  br label %32

32:                                               ; preds = %24, %16, %28
  %33 = phi i1 [ true, %24 ], [ true, %16 ], [ %31, %28 ]
  %34 = and i32 %21, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %60, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 2
  %38 = load float, float* %37, align 4
  %39 = fadd float %38, 5.000000e-01
  %40 = tail call float @llvm.floor.f32(float %39) #15
  %41 = fcmp olt float %40, 0x41DFFFFFE0000000
  %42 = select i1 %41, float %40, float 0x41DFFFFFE0000000
  %43 = fcmp ogt float %42, 0xC1DFFFFFE0000000
  %44 = select i1 %43, float %42, float 0xC1DFFFFFE0000000
  %45 = fptosi float %44 to i32
  %46 = sitofp i32 %45 to float
  %47 = fcmp oeq float %38, %46
  br i1 %47, label %48, label %64

48:                                               ; preds = %36
  %49 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 5
  %50 = load float, float* %49, align 4
  %51 = fadd float %50, 5.000000e-01
  %52 = tail call float @llvm.floor.f32(float %51) #15
  %53 = fcmp olt float %52, 0x41DFFFFFE0000000
  %54 = select i1 %53, float %52, float 0x41DFFFFFE0000000
  %55 = fcmp ogt float %54, 0xC1DFFFFFE0000000
  %56 = select i1 %55, float %54, float 0xC1DFFFFFE0000000
  %57 = fptosi float %56 to i32
  %58 = sitofp i32 %57 to float
  %59 = fcmp une float %50, %58
  br label %60

60:                                               ; preds = %32, %48
  %61 = phi i1 [ false, %32 ], [ %59, %48 ]
  %62 = or i1 %19, %33
  %63 = or i1 %62, %61
  br i1 %63, label %64, label %75

64:                                               ; preds = %36, %60
  %65 = bitcast %class.SkPath* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #15
  %66 = getelementptr inbounds %class.SkPath, %class.SkPath* %4, i64 0, i32 4
  %67 = bitcast %class.SkPath* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %4) #15
  %68 = call zeroext i1 @_ZNK8SkRegion15getBoundaryPathEP6SkPath(%class.SkRegion* %1, %class.SkPath* nonnull %4) #15
  %69 = load i8, i8* %66, align 2
  %70 = or i8 %69, 4
  store i8 %70, i8* %66, align 2
  %71 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)***
  %72 = load void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)**, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*** %71, align 8
  %73 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)** %72, i64 32
  %74 = load void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)** %73, align 8
  call void %74(%class.SkBaseDevice* %0, %class.SkPath* nonnull dereferenceable(16) %4, %class.SkPaint* dereferenceable(72) %2, i1 zeroext true) #15
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #15
  br label %108

75:                                               ; preds = %60
  %76 = bitcast %"class.SkRegion::Iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %76) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 40, i1 false)
  call void @_ZN8SkRegion8IteratorC1ERKS_(%"class.SkRegion::Iterator"* nonnull %5, %class.SkRegion* dereferenceable(24) %1) #15
  %77 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %5, i64 0, i32 3
  %78 = load i8, i8* %77, align 8, !range !14
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %107

80:                                               ; preds = %75
  %81 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  %82 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %5, i64 0, i32 2, i32 0
  %83 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %5, i64 0, i32 2, i32 1
  %84 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %5, i64 0, i32 2, i32 2
  %85 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %5, i64 0, i32 2, i32 3
  %86 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %87 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %88 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)***
  br label %89

89:                                               ; preds = %80, %89
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #15
  %90 = load i32, i32* %82, align 8
  %91 = sitofp i32 %90 to float
  %92 = insertelement <2 x float> undef, float %91, i32 0
  %93 = load i32, i32* %83, align 4
  %94 = sitofp i32 %93 to float
  %95 = insertelement <2 x float> %92, float %94, i32 1
  %96 = load i32, i32* %84, align 8
  %97 = sitofp i32 %96 to float
  %98 = insertelement <2 x float> undef, float %97, i32 0
  %99 = load i32, i32* %85, align 4
  %100 = sitofp i32 %99 to float
  %101 = insertelement <2 x float> %98, float %100, i32 1
  store <2 x float> %95, <2 x float>* %86, align 8
  store <2 x float> %101, <2 x float>* %87, align 8
  %102 = load void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*** %88, align 8
  %103 = getelementptr inbounds void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)** %102, i64 26
  %104 = load void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)** %103, align 8
  call void %104(%class.SkBaseDevice* %0, %struct.SkRect* nonnull dereferenceable(16) %7, %class.SkPaint* dereferenceable(72) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #15
  call void @_ZN8SkRegion8Iterator4nextEv(%"class.SkRegion::Iterator"* nonnull %5) #15
  %105 = load i8, i8* %77, align 8, !range !14
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %89, label %107

107:                                              ; preds = %89, %75
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %76) #15
  br label %108

108:                                              ; preds = %107, %64
  ret void
}

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #1

declare zeroext i1 @_ZNK8SkRegion15getBoundaryPathEP6SkPath(%class.SkRegion*, %class.SkPath*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #5

declare void @_ZN8SkRegion8IteratorC1ERKS_(%"class.SkRegion::Iterator"*, %class.SkRegion* dereferenceable(24)) unnamed_addr #1

declare void @_ZN8SkRegion8Iterator4nextEv(%"class.SkRegion::Iterator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkBaseDevice7drawArcERK6SkRectffbRK7SkPaint(%class.SkBaseDevice*, %struct.SkRect* dereferenceable(16), float, float, i1 zeroext, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %7 = alloca %class.SkPath, align 8
  %8 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #15
  %9 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %7) #15
  %10 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %5, i64 0, i32 8, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 192
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %6
  %15 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %5, i64 0, i32 0, i32 0
  %16 = load %class.SkPathEffect*, %class.SkPathEffect** %15, align 8
  %17 = icmp eq %class.SkPathEffect* %16, null
  br label %18

18:                                               ; preds = %14, %6
  %19 = phi i1 [ false, %6 ], [ %17, %14 ]
  call void @_ZN10SkPathPriv17CreateDrawArcPathEP6SkPathRK6SkRectffbb(%class.SkPath* nonnull %7, %struct.SkRect* dereferenceable(16) %1, float %2, float %3, i1 zeroext %4, i1 zeroext %19) #15
  %20 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)***
  %21 = load void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)**, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*** %20, align 8
  %22 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)** %21, i64 32
  %23 = load void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)** %22, align 8
  call void %23(%class.SkBaseDevice* %0, %class.SkPath* nonnull dereferenceable(16) %7, %class.SkPaint* dereferenceable(72) %5, i1 zeroext false) #15
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #15
  ret void
}

declare void @_ZN10SkPathPriv17CreateDrawArcPathEP6SkPathRK6SkRectffbb(%class.SkPath*, %struct.SkRect* dereferenceable(16), float, float, i1 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkBaseDevice10drawDRRectERK7SkRRectS2_RK7SkPaint(%class.SkBaseDevice*, %class.SkRRect* dereferenceable(52), %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %class.SkPath, align 8
  %6 = bitcast %class.SkPath* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  %7 = getelementptr inbounds %class.SkPath, %class.SkPath* %5, i64 0, i32 4
  %8 = bitcast %class.SkPath* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %5) #15
  %9 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirection(%class.SkPath* nonnull %5, %class.SkRRect* dereferenceable(52) %1, i32 0) #15
  %10 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirection(%class.SkPath* nonnull %5, %class.SkRRect* dereferenceable(52) %2, i32 0) #15
  %11 = load i8, i8* %7, align 2
  %12 = and i8 %11, -8
  %13 = or i8 %12, 5
  store i8 %13, i8* %7, align 2
  %14 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)***
  %15 = load void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)**, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*** %14, align 8
  %16 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)** %15, i64 32
  %17 = load void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)** %16, align 8
  call void %17(%class.SkBaseDevice* %0, %class.SkPath* nonnull dereferenceable(16) %5, %class.SkPaint* dereferenceable(72) %3, i1 zeroext true) #15
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret void
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirection(%class.SkPath*, %class.SkRRect* dereferenceable(52), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkBaseDevice9drawPatchEPK7SkPointPKjS2_11SkBlendModeRK7SkPaint(%class.SkBaseDevice*, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp.21, align 8
  %8 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2
  %9 = tail call i64 @_ZN12SkPatchUtils16GetLevelOfDetailEPK7SkPointPK8SkMatrix(%struct.SkPoint* %1, %class.SkMatrix* %8) #15
  %10 = trunc i64 %9 to i32
  %11 = lshr i64 %9, 32
  %12 = trunc i64 %11 to i32
  %13 = bitcast %class.sk_sp.21* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  %14 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %7, i64 0, i32 0
  store %class.SkVertices* inttoptr (i64 -6148914691236517206 to %class.SkVertices*), %class.SkVertices** %14, align 8
  %15 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %class.SkColorSpace*, %class.SkColorSpace** %15, align 8
  call void @_ZN12SkPatchUtils12MakeVerticesEPK7SkPointPKjS2_iiP12SkColorSpace(%class.sk_sp.21* nonnull sret %7, %struct.SkPoint* %1, i32* %2, %struct.SkPoint* %3, i32 %10, i32 %12, %class.SkColorSpace* %16) #15
  %17 = load %class.SkVertices*, %class.SkVertices** %14, align 8
  %18 = icmp eq %class.SkVertices* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %6
  %20 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)***
  %21 = load void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)** %21, i64 35
  %23 = load void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)** %22, align 8
  call void %23(%class.SkBaseDevice* %0, %class.SkVertices* nonnull %17, i32 %4, %class.SkPaint* dereferenceable(72) %5) #15
  %24 = load %class.SkVertices*, %class.SkVertices** %14, align 8
  %25 = icmp eq %class.SkVertices* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 -1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %32

30:                                               ; preds = %26
  %31 = bitcast %class.SkVertices* %24 to i8*
  call void @_ZN10SkVerticesdlEPv(i8* nonnull %31) #15
  br label %32

32:                                               ; preds = %6, %19, %26, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  ret void
}

declare i64 @_ZN12SkPatchUtils16GetLevelOfDetailEPK7SkPointPK8SkMatrix(%struct.SkPoint*, %class.SkMatrix*) local_unnamed_addr #1

declare void @_ZN12SkPatchUtils12MakeVerticesEPK7SkPointPKjS2_iiP12SkColorSpace(%class.sk_sp.21* sret, %struct.SkPoint*, i32*, %struct.SkPoint*, i32, i32, %class.SkColorSpace*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkBaseDevice16drawImageLatticeEPK7SkImageRKN8SkCanvas7LatticeERK6SkRect12SkFilterModeRK7SkPaint(%class.SkBaseDevice*, %class.SkImage*, %"struct.SkCanvas::Lattice"* dereferenceable(48), %struct.SkRect* dereferenceable(16), i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %7 = alloca %struct.SkIRect, align 4
  %8 = alloca %class.SkLatticeIter, align 8
  %9 = alloca %struct.SkRect, align 8
  %10 = alloca %struct.SkRect, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca %struct.SkImageInfo, align 16
  %14 = alloca %class.SkPaint, align 8
  %15 = alloca %struct.SkSamplingOptions, align 4
  %16 = bitcast %class.SkLatticeIter* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %16) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 112, i1 false)
  call void @_ZN13SkLatticeIterC1ERKN8SkCanvas7LatticeERK6SkRect(%class.SkLatticeIter* nonnull %8, %"struct.SkCanvas::Lattice"* dereferenceable(48) %2, %struct.SkRect* dereferenceable(16) %3) #15
  %17 = bitcast %struct.SkRect* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #15
  %18 = bitcast %struct.SkRect* %10 to i8*
  %19 = bitcast %struct.SkRect* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #15
  %20 = bitcast i32* %11 to i8*
  %21 = bitcast %struct.SkRect* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %21, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #15
  store i32 -1431655766, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #15
  store i8 0, i8* %12, align 1
  %22 = bitcast %struct.SkImageInfo* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #15
  %23 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %13, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %struct.SkImageInfo* %13 to <2 x i64>*
  store <2 x i64> <i64 0, i64 12884901894>, <2 x i64>* %24, align 16, !alias.scope !15
  %25 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %13, i64 0, i32 1
  %26 = bitcast %struct.SkISize* %25 to i64*
  store i64 4294967297, i64* %26, align 16, !alias.scope !15
  %27 = bitcast %struct.SkIRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %27, i8 -86, i64 16, i1 false) #15
  %28 = call zeroext i1 @_ZN13SkLatticeIter4nextEP7SkIRectP6SkRectPbPj(%class.SkLatticeIter* nonnull %8, %struct.SkIRect* nonnull %7, %struct.SkRect* nonnull %10, i8* nonnull %12, i32* nonnull %11) #15
  br i1 %28, label %30, label %29

29:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #15
  br label %117

30:                                               ; preds = %6
  %31 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %9, i64 0, i32 2
  %32 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 0
  %33 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 3
  %34 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 2
  %35 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %7, i64 0, i32 1
  %36 = bitcast %struct.SkRect* %9 to <2 x float>*
  %37 = bitcast float* %31 to <2 x float>*
  %38 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %5, i64 0, i32 8, i32 0, i32 0
  %39 = bitcast %class.SkPaint* %14 to i8*
  %40 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %5, i64 0, i32 5, i32 3
  %41 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)***
  %42 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %15, i64 0, i32 0
  %43 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %15, i64 0, i32 1, i32 0
  %44 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %15, i64 0, i32 1, i32 1
  %45 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %15, i64 0, i32 2
  %46 = getelementptr inbounds %struct.SkSamplingOptions, %struct.SkSamplingOptions* %15, i64 0, i32 3
  %47 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)***
  br label %48

48:                                               ; preds = %30, %106
  %49 = load i32, i32* %32, align 4
  %50 = sitofp i32 %49 to float
  %51 = insertelement <2 x float> undef, float %50, i32 0
  %52 = load i32, i32* %35, align 4
  %53 = sitofp i32 %52 to float
  %54 = insertelement <2 x float> %51, float %53, i32 1
  %55 = load i32, i32* %34, align 4
  %56 = sitofp i32 %55 to float
  %57 = insertelement <2 x float> undef, float %56, i32 0
  %58 = load i32, i32* %33, align 4
  %59 = sitofp i32 %58 to float
  %60 = insertelement <2 x float> %57, float %59, i32 1
  store <2 x float> %54, <2 x float>* %36, align 8
  store <2 x float> %60, <2 x float>* %37, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #15
  %61 = load i8, i8* %12, align 1, !range !14
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %73

63:                                               ; preds = %48
  %64 = fsub float %56, %50
  %65 = fcmp ugt float %64, 1.000000e+00
  %66 = fsub float %59, %53
  %67 = fcmp ugt float %66, 1.000000e+00
  %68 = or i1 %65, %67
  br i1 %68, label %102, label %69

69:                                               ; preds = %63
  %70 = fptosi float %50 to i32
  %71 = fptosi float %53 to i32
  %72 = call zeroext i1 @_ZNK7SkImage10readPixelsEP15GrDirectContextRK11SkImageInfoPvmiiNS_11CachingHintE(%class.SkImage* %1, %class.GrDirectContext* null, %struct.SkImageInfo* nonnull dereferenceable(24) %13, i8* nonnull %20, i64 4, i32 %70, i32 %71, i32 0) #15
  br i1 %72, label %73, label %102

73:                                               ; preds = %48, %69
  %74 = load i32, i32* %11, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %73
  %77 = load i32, i32* %38, align 8
  %78 = and i32 %77, 261120
  %79 = icmp eq i32 %78, 3072
  br i1 %79, label %106, label %80

80:                                               ; preds = %73, %76
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %39) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 8 bitcast (%class.SkPaint* @__const._ZN12SkBaseDevice32simplifyGlyphRunRSXFormAndRedrawERK14SkGlyphRunListRK7SkPaint.invertingPaint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %14, %class.SkPaint* dereferenceable(72) %5) #15
  %81 = load i32, i32* %11, align 4
  %82 = lshr i32 %81, 24
  %83 = load float, float* %40, align 4
  %84 = fmul float %83, 2.550000e+02
  %85 = fadd float %84, 5.000000e-01
  %86 = call float @llvm.floor.f32(float %85) #15
  %87 = fcmp olt float %86, 0x41DFFFFFE0000000
  %88 = select i1 %87, float %86, float 0x41DFFFFFE0000000
  %89 = fcmp ogt float %88, 0xC1DFFFFFE0000000
  %90 = select i1 %89, float %88, float 0xC1DFFFFFE0000000
  %91 = fptosi float %90 to i32
  %92 = and i32 %91, 255
  %93 = add nuw nsw i32 %92, 1
  %94 = mul nuw nsw i32 %93, %82
  %95 = lshr i32 %94, 8
  %96 = and i32 %81, 16777215
  %97 = shl i32 %95, 24
  %98 = or i32 %97, %96
  call void @_ZN7SkPaint8setColorEj(%class.SkPaint* nonnull %14, i32 %98) #15
  %99 = load void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*** %41, align 8
  %100 = getelementptr inbounds void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)** %99, i64 26
  %101 = load void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)** %100, align 8
  call void %101(%class.SkBaseDevice* %0, %struct.SkRect* nonnull dereferenceable(16) %10, %class.SkPaint* nonnull dereferenceable(72) %14) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %14) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %39) #15
  br label %106

102:                                              ; preds = %63, %69
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %42) #15
  store i8 0, i8* %42, align 4
  store float 0.000000e+00, float* %43, align 4
  store float 0.000000e+00, float* %44, align 4
  store i32 %4, i32* %45, align 4
  store i32 0, i32* %46, align 4
  %103 = load void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)**, void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*** %47, align 8
  %104 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*, void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)** %103, i64 33
  %105 = load void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*, void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)** %104, align 8
  call void %105(%class.SkBaseDevice* %0, %class.SkImage* %1, %struct.SkRect* nonnull %9, %struct.SkRect* nonnull dereferenceable(16) %10, %struct.SkSamplingOptions* nonnull dereferenceable(20) %15, %class.SkPaint* dereferenceable(72) %5, i32 0) #15
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %42) #15
  br label %106

106:                                              ; preds = %76, %80, %102
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %27, i8 -86, i64 16, i1 false) #15
  %107 = call zeroext i1 @_ZN13SkLatticeIter4nextEP7SkIRectP6SkRectPbPj(%class.SkLatticeIter* nonnull %8, %struct.SkIRect* nonnull %7, %struct.SkRect* nonnull %10, i8* nonnull %12, i32* nonnull %11) #15
  br i1 %107, label %48, label %108

108:                                              ; preds = %106
  %109 = load %class.SkColorSpace*, %class.SkColorSpace** %23, align 16
  %110 = bitcast %class.SkColorSpace* %109 to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #15
  %111 = icmp eq %class.SkColorSpace* %109, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %109, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw add i32* %113, i32 -1 acq_rel
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %116, label %117

116:                                              ; preds = %112
  call void @_ZdlPv(i8* %110) #16
  br label %117

117:                                              ; preds = %29, %108, %112, %116
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #15
  %118 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %8, i64 0, i32 5, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = and i64 %119, 1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %126, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %8, i64 0, i32 5
  %124 = bitcast %class.SkTArray.25* %123 to i8**
  %125 = load i8*, i8** %124, align 8
  call void @_Z7sk_freePv(i8* %125) #15
  br label %126

126:                                              ; preds = %122, %117
  %127 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %8, i64 0, i32 4, i32 1
  %128 = load i64, i64* %127, align 8
  %129 = and i64 %128, 1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %134, label %131

131:                                              ; preds = %126
  %132 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %8, i64 0, i32 4, i32 0
  %133 = load i8*, i8** %132, align 8
  call void @_Z7sk_freePv(i8* %133) #15
  br label %134

134:                                              ; preds = %131, %126
  %135 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %8, i64 0, i32 3, i32 1
  %136 = load i64, i64* %135, align 8
  %137 = and i64 %136, 1
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %143, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %8, i64 0, i32 3
  %141 = bitcast %class.SkTArray.23* %140 to i8**
  %142 = load i8*, i8** %141, align 8
  call void @_Z7sk_freePv(i8* %142) #15
  br label %143

143:                                              ; preds = %139, %134
  %144 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %8, i64 0, i32 2, i32 1
  %145 = load i64, i64* %144, align 8
  %146 = and i64 %145, 1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %152, label %148

148:                                              ; preds = %143
  %149 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %8, i64 0, i32 2
  %150 = bitcast %class.SkTArray.23* %149 to i8**
  %151 = load i8*, i8** %150, align 8
  call void @_Z7sk_freePv(i8* %151) #15
  br label %152

152:                                              ; preds = %148, %143
  %153 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %8, i64 0, i32 1, i32 1
  %154 = load i64, i64* %153, align 8
  %155 = and i64 %154, 1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %161, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %8, i64 0, i32 1
  %159 = bitcast %class.SkTArray* %158 to i8**
  %160 = load i8*, i8** %159, align 8
  call void @_Z7sk_freePv(i8* %160) #15
  br label %161

161:                                              ; preds = %157, %152
  %162 = getelementptr inbounds %class.SkLatticeIter, %class.SkLatticeIter* %8, i64 0, i32 0, i32 1
  %163 = load i64, i64* %162, align 8
  %164 = and i64 %163, 1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %161
  %167 = bitcast %class.SkLatticeIter* %8 to i8**
  %168 = load i8*, i8** %167, align 8
  call void @_Z7sk_freePv(i8* %168) #15
  br label %169

169:                                              ; preds = %161, %166
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %16) #15
  ret void
}

declare void @_ZN13SkLatticeIterC1ERKN8SkCanvas7LatticeERK6SkRect(%class.SkLatticeIter*, %"struct.SkCanvas::Lattice"* dereferenceable(48), %struct.SkRect* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK7SkImage10readPixelsEP15GrDirectContextRK11SkImageInfoPvmiiNS_11CachingHintE(%class.SkImage*, %class.GrDirectContext*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN7SkPaintC1ERKS_(%class.SkPaint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #1

declare void @_ZN7SkPaint8setColorEj(%class.SkPaint*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkBaseDevice9drawAtlasEPK7SkImagePK9SkRSXformPK6SkRectPKji11SkBlendModeRK17SkSamplingOptionsRK7SkPaint(%class.SkBaseDevice*, %class.SkImage*, %struct.SkRSXform*, %struct.SkRect*, i32* readonly, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %10 = alloca %"class.SkVertices::Builder", align 8
  %11 = alloca [4 x %struct.SkPoint], align 16
  %12 = alloca %class.SkPaint, align 8
  %13 = alloca %class.sk_sp.8, align 8
  %14 = alloca %class.sk_sp.21, align 8
  %15 = mul i32 %5, 6
  %16 = icmp ne i32* %4, null
  %17 = select i1 %16, i32 3, i32 1
  %18 = bitcast %"class.SkVertices::Builder"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.SkVertices::Builder", %"class.SkVertices::Builder"* %10, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.SkVertices::Builder", %"class.SkVertices::Builder"* %10, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = bitcast %"class.SkVertices::Builder"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 16, i1 false)
  call void @_ZN10SkVertices7BuilderC1ENS_10VertexModeEiij(%"class.SkVertices::Builder"* nonnull %10, i32 0, i32 %15, i32 0, i32 %17) #15
  %22 = call %struct.SkPoint* @_ZN10SkVertices7Builder9positionsEv(%"class.SkVertices::Builder"* nonnull %10) #15
  %23 = call %struct.SkPoint* @_ZN10SkVertices7Builder9texCoordsEv(%"class.SkVertices::Builder"* nonnull %10) #15
  %24 = call i32* @_ZN10SkVertices7Builder6colorsEv(%"class.SkVertices::Builder"* nonnull %10) #15
  %25 = icmp sgt i32 %5, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %9
  %27 = bitcast [4 x %struct.SkPoint]* %11 to i8*
  %28 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %11, i64 0, i64 0
  %29 = bitcast [4 x %struct.SkPoint]* %11 to i64*
  %30 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %11, i64 0, i64 1
  %31 = bitcast %struct.SkPoint* %30 to i64*
  %32 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %11, i64 0, i64 2
  %33 = bitcast %struct.SkPoint* %32 to i64*
  %34 = zext i32 %5 to i64
  %35 = bitcast [4 x %struct.SkPoint]* %11 to i8*
  %36 = bitcast %struct.SkPoint* %32 to <2 x i64>*
  %37 = bitcast %struct.SkPoint* %32 to <2 x i64>*
  br label %83

38:                                               ; preds = %135, %9
  %39 = bitcast %class.SkPaint* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %39) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* align 8 bitcast (%class.SkPaint* @__const._ZN12SkBaseDevice32simplifyGlyphRunRSXFormAndRedrawERK14SkGlyphRunListRK7SkPaint.invertingPaint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %12, %class.SkPaint* dereferenceable(72) %8) #15
  call void @_ZNK7SkImage10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.8* nonnull sret %13, %class.SkImage* %1, i32 0, i32 0, %struct.SkSamplingOptions* dereferenceable(20) %7, %class.SkMatrix* null) #15
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %12, %class.sk_sp.8* nonnull %13) #15
  %40 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %13, i64 0, i32 0
  %41 = load %class.SkShader*, %class.SkShader** %40, align 8
  %42 = icmp eq %class.SkShader* %41, null
  br i1 %42, label %53, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %class.SkShader, %class.SkShader* %41, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = bitcast %class.SkShader* %41 to %class.SkRefCntBase*
  %49 = bitcast %class.SkShader* %41 to void (%class.SkRefCntBase*)***
  %50 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, i64 2
  %52 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, align 8
  call void %52(%class.SkRefCntBase* nonnull %48) #15
  br label %53

53:                                               ; preds = %38, %43, %47
  %54 = bitcast %class.sk_sp.21* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #15
  call void @_ZN10SkVertices7Builder6detachEv(%class.sk_sp.21* nonnull sret %14, %"class.SkVertices::Builder"* nonnull %10) #15
  %55 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %14, i64 0, i32 0
  %56 = load %class.SkVertices*, %class.SkVertices** %55, align 8
  %57 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)***
  %58 = load void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)*** %57, align 8
  %59 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)** %58, i64 35
  %60 = load void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkVertices*, i32, %class.SkPaint*)** %59, align 8
  call void %60(%class.SkBaseDevice* %0, %class.SkVertices* %56, i32 %6, %class.SkPaint* nonnull dereferenceable(72) %12) #15
  %61 = load %class.SkVertices*, %class.SkVertices** %55, align 8
  %62 = icmp eq %class.SkVertices* %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %53
  %64 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 -1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %69

67:                                               ; preds = %63
  %68 = bitcast %class.SkVertices* %61 to i8*
  call void @_ZN10SkVerticesdlEPv(i8* nonnull %68) #15
  br label %69

69:                                               ; preds = %53, %63, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %12) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %39) #15
  %70 = load i8*, i8** %20, align 8
  store i8* null, i8** %20, align 8
  %71 = icmp eq i8* %70, null
  br i1 %71, label %73, label %72

72:                                               ; preds = %69
  call void @_ZdaPv(i8* nonnull %70) #16
  br label %73

73:                                               ; preds = %72, %69
  %74 = load %class.SkVertices*, %class.SkVertices** %19, align 8
  %75 = icmp eq %class.SkVertices* %74, null
  br i1 %75, label %82, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %class.SkVertices, %class.SkVertices* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = atomicrmw add i32* %77, i32 -1 acq_rel
  %79 = icmp eq i32 %78, 1
  br i1 %79, label %80, label %82

80:                                               ; preds = %76
  %81 = bitcast %class.SkVertices* %74 to i8*
  call void @_ZN10SkVerticesdlEPv(i8* nonnull %81) #15
  br label %82

82:                                               ; preds = %73, %76, %80
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #15
  ret void

83:                                               ; preds = %135, %26
  %84 = phi i64 [ 0, %26 ], [ %137, %135 ]
  %85 = phi i32* [ %24, %26 ], [ %136, %135 ]
  %86 = phi %struct.SkPoint* [ %23, %26 ], [ %129, %135 ]
  %87 = phi %struct.SkPoint* [ %22, %26 ], [ %114, %135 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #15
  %88 = getelementptr inbounds %struct.SkRSXform, %struct.SkRSXform* %2, i64 %84
  %89 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 %84
  %90 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 %84, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %35, i8 -1, i64 32, i1 false)
  %91 = load float, float* %90, align 4
  %92 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %89, i64 0, i32 0
  %93 = load float, float* %92, align 4
  %94 = fsub float %91, %93
  %95 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 %84, i32 3
  %96 = load float, float* %95, align 4
  %97 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %3, i64 %84, i32 1
  %98 = load float, float* %97, align 4
  %99 = fsub float %96, %98
  call void @_ZNK9SkRSXform6toQuadEffP7SkPoint(%struct.SkRSXform* %88, float %94, float %99, %struct.SkPoint* nonnull %28) #15
  %100 = bitcast %struct.SkPoint* %87 to i64*
  %101 = load i64, i64* %29, align 16
  store i64 %101, i64* %100, align 4
  %102 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %87, i64 1
  %103 = bitcast %struct.SkPoint* %102 to i64*
  %104 = load i64, i64* %31, align 8
  store i64 %104, i64* %103, align 4
  %105 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %87, i64 2
  %106 = bitcast %struct.SkPoint* %105 to i64*
  %107 = load i64, i64* %33, align 16
  store i64 %107, i64* %106, align 4
  %108 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %87, i64 3
  %109 = bitcast %struct.SkPoint* %108 to i64*
  %110 = load i64, i64* %29, align 16
  store i64 %110, i64* %109, align 4
  %111 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %87, i64 4
  %112 = load <2 x i64>, <2 x i64>* %36, align 16
  %113 = bitcast %struct.SkPoint* %111 to <2 x i64>*
  store <2 x i64> %112, <2 x i64>* %113, align 4
  %114 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %87, i64 6
  call void @_ZNK6SkRect6toQuadEP7SkPoint(%struct.SkRect* %89, %struct.SkPoint* nonnull %28) #15
  %115 = bitcast %struct.SkPoint* %86 to i64*
  %116 = load i64, i64* %29, align 16
  store i64 %116, i64* %115, align 4
  %117 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %86, i64 1
  %118 = bitcast %struct.SkPoint* %117 to i64*
  %119 = load i64, i64* %31, align 8
  store i64 %119, i64* %118, align 4
  %120 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %86, i64 2
  %121 = bitcast %struct.SkPoint* %120 to i64*
  %122 = load i64, i64* %33, align 16
  store i64 %122, i64* %121, align 4
  %123 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %86, i64 3
  %124 = bitcast %struct.SkPoint* %123 to i64*
  %125 = load i64, i64* %29, align 16
  store i64 %125, i64* %124, align 4
  %126 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %86, i64 4
  %127 = load <2 x i64>, <2 x i64>* %37, align 16
  %128 = bitcast %struct.SkPoint* %126 to <2 x i64>*
  store <2 x i64> %127, <2 x i64>* %128, align 4
  %129 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %86, i64 6
  br i1 %16, label %130, label %135

130:                                              ; preds = %83
  %131 = getelementptr inbounds i32, i32* %4, i64 %84
  %132 = load i32, i32* %131, align 4
  %133 = load void (i32*, i32, i32)*, void (i32*, i32, i32)** @_ZN6SkOpts8memset32E, align 8
  call void %133(i32* %85, i32 %132, i32 6) #15
  %134 = getelementptr inbounds i32, i32* %85, i64 6
  br label %135

135:                                              ; preds = %130, %83
  %136 = phi i32* [ %134, %130 ], [ %85, %83 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #15
  %137 = add nuw nsw i64 %84, 1
  %138 = icmp eq i64 %137, %34
  br i1 %138, label %38, label %83
}

declare void @_ZN10SkVertices7BuilderC1ENS_10VertexModeEiij(%"class.SkVertices::Builder"*, i32, i32, i32, i32) unnamed_addr #1

declare %struct.SkPoint* @_ZN10SkVertices7Builder9positionsEv(%"class.SkVertices::Builder"*) local_unnamed_addr #1

declare %struct.SkPoint* @_ZN10SkVertices7Builder9texCoordsEv(%"class.SkVertices::Builder"*) local_unnamed_addr #1

declare i32* @_ZN10SkVertices7Builder6colorsEv(%"class.SkVertices::Builder"*) local_unnamed_addr #1

declare void @_ZNK9SkRSXform6toQuadEffP7SkPoint(%struct.SkRSXform*, float, float, %struct.SkPoint*) local_unnamed_addr #1

declare void @_ZNK6SkRect6toQuadEP7SkPoint(%struct.SkRect*, %struct.SkPoint*) local_unnamed_addr #1

declare void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint*, %class.sk_sp.8*) local_unnamed_addr #1

declare void @_ZN10SkVertices7Builder6detachEv(%class.sk_sp.21* sret, %"class.SkVertices::Builder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkBaseDevice14drawEdgeAAQuadERK6SkRectPK7SkPointN8SkCanvas11QuadAAFlagsERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkBaseDevice*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*, i32, %struct.SkRGBA4f* dereferenceable(16), i32) unnamed_addr #0 align 2 {
  %7 = alloca %class.SkPaint, align 8
  %8 = alloca %class.SkPath, align 8
  %9 = bitcast %class.SkPaint* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 bitcast (%class.SkPaint* @__const._ZN12SkBaseDevice32simplifyGlyphRunRSXFormAndRedrawERK14SkGlyphRunListRK7SkPaint.invertingPaint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %7) #15
  call void @_ZN7SkPaint8setColorERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint* nonnull %7, %struct.SkRGBA4f* dereferenceable(16) %4, %class.SkColorSpace* null) #15
  %10 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %7, i64 0, i32 8, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = shl i32 %5, 10
  %13 = and i32 %12, 261120
  %14 = and i32 %11, -261122
  %15 = icmp eq i32 %3, 15
  %16 = zext i1 %15 to i32
  %17 = or i32 %13, %16
  %18 = or i32 %17, %14
  store i32 %18, i32* %10, align 8
  %19 = icmp eq %struct.SkPoint* %2, null
  br i1 %19, label %28, label %20

20:                                               ; preds = %6
  %21 = bitcast %class.SkPath* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #15
  %22 = bitcast %class.SkPath* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %8) #15
  %23 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPolyEPK7SkPointib(%class.SkPath* nonnull %8, %struct.SkPoint* nonnull %2, i32 4, i1 zeroext true) #15
  %24 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)***
  %25 = load void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)**, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*** %24, align 8
  %26 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)** %25, i64 32
  %27 = load void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, %class.SkPaint*, i1)** %26, align 8
  call void %27(%class.SkBaseDevice* %0, %class.SkPath* nonnull dereferenceable(16) %8, %class.SkPaint* nonnull dereferenceable(72) %7, i1 zeroext false) #15
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #15
  br label %33

28:                                               ; preds = %6
  %29 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)***
  %30 = load void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)** %30, i64 26
  %32 = load void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %struct.SkRect*, %class.SkPaint*)** %31, align 8
  call void %32(%class.SkBaseDevice* %0, %struct.SkRect* dereferenceable(16) %1, %class.SkPaint* nonnull dereferenceable(72) %7) #15
  br label %33

33:                                               ; preds = %28, %20
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #15
  ret void
}

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #1

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPolyEPK7SkPointib(%class.SkPath*, %struct.SkPoint*, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkBaseDevice18drawEdgeAAImageSetEPKN8SkCanvas13ImageSetEntryEiPK7SkPointPK8SkMatrixRK17SkSamplingOptionsRK7SkPaintNS0_17SrcRectConstraintE(%class.SkBaseDevice*, %"struct.SkCanvas::ImageSetEntry"*, i32, %struct.SkPoint*, %class.SkMatrix* nocapture readonly, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72), i32) unnamed_addr #0 align 2 {
  %9 = alloca %class.SkPaint, align 8
  %10 = alloca %class.SkM44, align 4
  %11 = alloca %class.SkM44, align 4
  %12 = alloca %class.SkM44, align 4
  %13 = alloca %class.SkPath, align 8
  %14 = bitcast %class.SkPaint* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %14) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 bitcast (%class.SkPaint* @__const._ZN12SkBaseDevice32simplifyGlyphRunRSXFormAndRedrawERK14SkGlyphRunListRK7SkPaint.invertingPaint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %9, %class.SkPaint* dereferenceable(72) %6) #15
  %15 = bitcast %class.SkM44* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %15) #15
  %16 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1
  %17 = bitcast %class.SkM44* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %15, i8* align 4 %17, i64 64, i1 false)
  %18 = icmp sgt i32 %2, 0
  br i1 %18, label %19, label %88

19:                                               ; preds = %8
  %20 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %9, i64 0, i32 8, i32 0, i32 0
  %21 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %6, i64 0, i32 5, i32 3
  %22 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*)***
  %23 = bitcast %class.SkM44* %11 to i8*
  %24 = bitcast %class.SkM44* %12 to i8*
  %25 = bitcast %class.SkM44* %12 to i32*
  %26 = getelementptr inbounds %class.SkM44, %class.SkM44* %12, i64 0, i32 0, i64 1
  %27 = bitcast float* %26 to i32*
  %28 = getelementptr inbounds %class.SkM44, %class.SkM44* %12, i64 0, i32 0, i64 2
  %29 = getelementptr inbounds %class.SkM44, %class.SkM44* %12, i64 0, i32 0, i64 3
  %30 = bitcast float* %29 to i32*
  %31 = getelementptr inbounds %class.SkM44, %class.SkM44* %12, i64 0, i32 0, i64 4
  %32 = bitcast float* %31 to i32*
  %33 = getelementptr inbounds %class.SkM44, %class.SkM44* %12, i64 0, i32 0, i64 5
  %34 = bitcast float* %33 to i32*
  %35 = getelementptr inbounds %class.SkM44, %class.SkM44* %12, i64 0, i32 0, i64 6
  %36 = getelementptr inbounds %class.SkM44, %class.SkM44* %12, i64 0, i32 0, i64 7
  %37 = bitcast float* %36 to i32*
  %38 = getelementptr inbounds %class.SkM44, %class.SkM44* %12, i64 0, i32 0, i64 8
  %39 = getelementptr inbounds %class.SkM44, %class.SkM44* %12, i64 0, i32 0, i64 12
  %40 = bitcast float* %39 to i32*
  %41 = getelementptr inbounds %class.SkM44, %class.SkM44* %12, i64 0, i32 0, i64 13
  %42 = bitcast float* %41 to i32*
  %43 = getelementptr inbounds %class.SkM44, %class.SkM44* %12, i64 0, i32 0, i64 14
  %44 = getelementptr inbounds %class.SkM44, %class.SkM44* %12, i64 0, i32 0, i64 15
  %45 = bitcast float* %44 to i32*
  %46 = bitcast %class.SkM44* %16 to i32*
  %47 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 4
  %48 = bitcast float* %47 to i32*
  %49 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 12
  %50 = bitcast float* %49 to i32*
  %51 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 1
  %52 = bitcast float* %51 to i32*
  %53 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 5
  %54 = bitcast float* %53 to i32*
  %55 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 13
  %56 = bitcast float* %55 to i32*
  %57 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 3
  %58 = bitcast float* %57 to i32*
  %59 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 7
  %60 = bitcast float* %59 to i32*
  %61 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 15
  %62 = bitcast float* %61 to i32*
  %63 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2
  %64 = bitcast %class.SkMatrix* %63 to i32*
  %65 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 1
  %66 = bitcast float* %65 to i32*
  %67 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 2
  %68 = bitcast float* %67 to i32*
  %69 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 3
  %70 = bitcast float* %69 to i32*
  %71 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 4
  %72 = bitcast float* %71 to i32*
  %73 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 5
  %74 = bitcast float* %73 to i32*
  %75 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 6
  %76 = bitcast float* %75 to i32*
  %77 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 7
  %78 = bitcast float* %77 to i32*
  %79 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 8
  %80 = bitcast float* %79 to i32*
  %81 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 1
  %82 = bitcast %class.SkPath* %13 to i8*
  %83 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %class.SkPath*, i32, i1)***
  %84 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)***
  %85 = zext i32 %2 to i64
  %86 = bitcast %class.SkPath* %13 to i8*
  %87 = bitcast float* %38 to <4 x float>*
  br label %89

88:                                               ; preds = %196, %8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %15) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %14) #15
  ret void

89:                                               ; preds = %196, %19
  %90 = phi i64 [ 0, %19 ], [ %197, %196 ]
  %91 = phi i32 [ 0, %19 ], [ %172, %196 ]
  %92 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %1, i64 %90, i32 5
  %93 = load i32, i32* %92, align 8
  %94 = icmp eq i32 %93, 15
  %95 = zext i1 %94 to i32
  %96 = load i32, i32* %20, align 8
  %97 = and i32 %96, -2
  %98 = or i32 %97, %95
  store i32 %98, i32* %20, align 8
  %99 = load float, float* %21, align 4
  %100 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %1, i64 %90, i32 4
  %101 = load float, float* %100, align 4
  %102 = fmul float %99, %101
  call void @_ZN7SkPaint9setAlphafEf(%class.SkPaint* nonnull %9, float %102) #15
  %103 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %1, i64 %90, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = icmp sgt i32 %104, -1
  br i1 %105, label %106, label %149

106:                                              ; preds = %89
  %107 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %22, align 8
  %108 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %107, i64 10
  %109 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %108, align 8
  call void %109(%class.SkBaseDevice* %0) #15
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %23) #15
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %24) #15
  %110 = load i32, i32* %103, align 8
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 %111
  %113 = bitcast %class.SkMatrix* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 %111, i32 0, i64 1
  %116 = bitcast float* %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 %111, i32 0, i64 2
  %119 = bitcast float* %118 to i32*
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 %111, i32 0, i64 3
  %122 = bitcast float* %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 %111, i32 0, i64 4
  %125 = bitcast float* %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 %111, i32 0, i64 5
  %128 = bitcast float* %127 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 %111, i32 0, i64 6
  %131 = bitcast float* %130 to i32*
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 %111, i32 0, i64 7
  %134 = bitcast float* %133 to i32*
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 %111, i32 0, i64 8
  %137 = bitcast float* %136 to i32*
  %138 = load i32, i32* %137, align 4
  store i32 %114, i32* %25, align 4
  store i32 %123, i32* %27, align 4
  store float 0.000000e+00, float* %28, align 4
  store i32 %132, i32* %30, align 4
  store i32 %117, i32* %32, align 4
  store i32 %126, i32* %34, align 4
  store float 0.000000e+00, float* %35, align 4
  store i32 %135, i32* %37, align 4
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %87, align 4
  store i32 %120, i32* %40, align 4
  store i32 %129, i32* %42, align 4
  store float 0.000000e+00, float* %43, align 4
  store i32 %138, i32* %45, align 4
  %139 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %11, %class.SkM44* nonnull dereferenceable(64) %10, %class.SkM44* nonnull dereferenceable(64) %12) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* nonnull align 4 %23, i64 64, i1 false) #15
  %140 = load i32, i32* %46, align 4, !noalias !18
  %141 = load i32, i32* %48, align 4, !noalias !18
  %142 = load i32, i32* %50, align 4, !noalias !18
  %143 = load i32, i32* %52, align 4, !noalias !18
  %144 = load i32, i32* %54, align 4, !noalias !18
  %145 = load i32, i32* %56, align 4, !noalias !18
  %146 = load i32, i32* %58, align 4, !noalias !18
  %147 = load i32, i32* %60, align 4, !noalias !18
  %148 = load i32, i32* %62, align 4, !noalias !18
  store i32 %140, i32* %64, align 8
  store i32 %141, i32* %66, align 4
  store i32 %142, i32* %68, align 8
  store i32 %143, i32* %70, align 4
  store i32 %144, i32* %72, align 8
  store i32 %145, i32* %74, align 4
  store i32 %146, i32* %76, align 8
  store i32 %147, i32* %78, align 4
  store i32 %148, i32* %80, align 8
  store i32 128, i32* %81, align 4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %24) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %23) #15
  br label %149

149:                                              ; preds = %106, %89
  %150 = phi i8 [ 1, %106 ], [ 0, %89 ]
  %151 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %1, i64 %90, i32 6
  %152 = load i8, i8* %151, align 4, !range !14
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %171, label %154

154:                                              ; preds = %149
  %155 = icmp eq i8 %150, 0
  br i1 %155, label %156, label %160

156:                                              ; preds = %154
  %157 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %22, align 8
  %158 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %157, i64 10
  %159 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %158, align 8
  call void %159(%class.SkBaseDevice* %0) #15
  br label %160

160:                                              ; preds = %154, %156
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 16, i1 false)
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %13) #15
  %161 = sext i32 %91 to i64
  %162 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 %161
  %163 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPolyEPK7SkPointib(%class.SkPath* nonnull %13, %struct.SkPoint* %162, i32 4, i1 zeroext true) #15
  %164 = load i32, i32* %20, align 8
  %165 = and i32 %164, 1
  %166 = icmp ne i32 %165, 0
  %167 = load void (%class.SkBaseDevice*, %class.SkPath*, i32, i1)**, void (%class.SkBaseDevice*, %class.SkPath*, i32, i1)*** %83, align 8
  %168 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkPath*, i32, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, i32, i1)** %167, i64 14
  %169 = load void (%class.SkBaseDevice*, %class.SkPath*, i32, i1)*, void (%class.SkBaseDevice*, %class.SkPath*, i32, i1)** %168, align 8
  call void %169(%class.SkBaseDevice* %0, %class.SkPath* nonnull dereferenceable(16) %13, i32 1, i1 zeroext %166) #15
  %170 = add nsw i32 %91, 4
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %13) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #15
  br label %171

171:                                              ; preds = %149, %160
  %172 = phi i32 [ %170, %160 ], [ %91, %149 ]
  %173 = phi i8 [ 1, %160 ], [ %150, %149 ]
  %174 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %1, i64 %90, i32 0, i32 0
  %175 = load %class.SkImage*, %class.SkImage** %174, align 8
  %176 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %1, i64 %90, i32 1
  %177 = getelementptr inbounds %"struct.SkCanvas::ImageSetEntry", %"struct.SkCanvas::ImageSetEntry"* %1, i64 %90, i32 2
  %178 = load void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)**, void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*** %84, align 8
  %179 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*, void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)** %178, i64 33
  %180 = load void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)*, void (%class.SkBaseDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect*, %struct.SkSamplingOptions*, %class.SkPaint*, i32)** %179, align 8
  call void %180(%class.SkBaseDevice* %0, %class.SkImage* %175, %struct.SkRect* %176, %struct.SkRect* dereferenceable(16) %177, %struct.SkSamplingOptions* dereferenceable(20) %5, %class.SkPaint* nonnull dereferenceable(72) %9, i32 %7) #15
  %181 = and i8 %173, 1
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %196, label %183

183:                                              ; preds = %171
  %184 = load void (%class.SkBaseDevice*)**, void (%class.SkBaseDevice*)*** %22, align 8
  %185 = getelementptr inbounds void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %184, i64 11
  %186 = load void (%class.SkBaseDevice*)*, void (%class.SkBaseDevice*)** %185, align 8
  call void %186(%class.SkBaseDevice* %0) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* nonnull align 4 %15, i64 64, i1 false) #15
  %187 = load i32, i32* %46, align 4, !noalias !21
  %188 = load i32, i32* %48, align 4, !noalias !21
  %189 = load i32, i32* %50, align 4, !noalias !21
  %190 = load i32, i32* %52, align 4, !noalias !21
  %191 = load i32, i32* %54, align 4, !noalias !21
  %192 = load i32, i32* %56, align 4, !noalias !21
  %193 = load i32, i32* %58, align 4, !noalias !21
  %194 = load i32, i32* %60, align 4, !noalias !21
  %195 = load i32, i32* %62, align 4, !noalias !21
  store i32 %187, i32* %64, align 8
  store i32 %188, i32* %66, align 4
  store i32 %189, i32* %68, align 8
  store i32 %190, i32* %70, align 4
  store i32 %191, i32* %72, align 8
  store i32 %192, i32* %74, align 4
  store i32 %193, i32* %76, align 8
  store i32 %194, i32* %78, align 4
  store i32 %195, i32* %80, align 8
  store i32 128, i32* %81, align 4
  br label %196

196:                                              ; preds = %171, %183
  %197 = add nuw nsw i64 %90, 1
  %198 = icmp eq i64 %197, %85
  br i1 %198, label %88, label %89
}

declare void @_ZN7SkPaint9setAlphafEf(%class.SkPaint*, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkBaseDevice12drawDrawableEP10SkDrawablePK8SkMatrixP8SkCanvas(%class.SkBaseDevice* nocapture readnone, %class.SkDrawable*, %class.SkMatrix*, %class.SkCanvas*) unnamed_addr #0 align 2 {
  tail call void @_ZN10SkDrawable4drawEP8SkCanvasPK8SkMatrix(%class.SkDrawable* %1, %class.SkCanvas* %3, %class.SkMatrix* %2) #15
  ret void
}

declare void @_ZN10SkDrawable4drawEP8SkCanvasPK8SkMatrix(%class.SkDrawable*, %class.SkCanvas*, %class.SkMatrix*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN12SkBaseDevice11drawSpecialEP14SkSpecialImageRK8SkMatrixRK17SkSamplingOptionsRK7SkPaint(%class.SkBaseDevice* nocapture, %class.SkSpecialImage* nocapture, %class.SkMatrix* nocapture dereferenceable(40), %struct.SkSamplingOptions* nocapture dereferenceable(20), %class.SkPaint* nocapture dereferenceable(72)) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12SkBaseDevice11makeSpecialERK8SkBitmap(%class.sk_sp.185* noalias nocapture sret, %class.SkBaseDevice* nocapture readnone, %class.SkBitmap* nocapture readnone dereferenceable(56)) unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %class.sk_sp.185, %class.sk_sp.185* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12SkBaseDevice11makeSpecialEPK7SkImage(%class.sk_sp.185* noalias nocapture sret, %class.SkBaseDevice* nocapture readnone, %class.SkImage* nocapture readnone) unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %class.sk_sp.185, %class.sk_sp.185* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12SkBaseDevice11snapSpecialERK7SkIRectb(%class.sk_sp.185* noalias nocapture sret, %class.SkBaseDevice* nocapture readnone, %struct.SkIRect* nocapture readnone dereferenceable(16), i1 zeroext) unnamed_addr #7 align 2 {
  %5 = getelementptr inbounds %class.sk_sp.185, %class.sk_sp.185* %0, i64 0, i32 0
  store %class.SkSpecialImage* null, %class.SkSpecialImage** %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkBaseDevice11snapSpecialEv(%class.sk_sp.185* noalias sret, %class.SkBaseDevice*) local_unnamed_addr #0 align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %struct.SkIRect*
  %5 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #15
  %6 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %1, i64 0, i32 3, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %1, i64 0, i32 3, i32 1, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = shl nuw i64 %10, 32
  %12 = zext i32 %7 to i64
  %13 = or i64 %11, %12
  %14 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  store i64 %13, i64* %15, align 8
  %16 = bitcast %class.SkBaseDevice* %1 to void (%class.sk_sp.185*, %class.SkBaseDevice*, %struct.SkIRect*, i1)***
  %17 = load void (%class.sk_sp.185*, %class.SkBaseDevice*, %struct.SkIRect*, i1)**, void (%class.sk_sp.185*, %class.SkBaseDevice*, %struct.SkIRect*, i1)*** %16, align 8
  %18 = getelementptr inbounds void (%class.sk_sp.185*, %class.SkBaseDevice*, %struct.SkIRect*, i1)*, void (%class.sk_sp.185*, %class.SkBaseDevice*, %struct.SkIRect*, i1)** %17, i64 49
  %19 = load void (%class.sk_sp.185*, %class.SkBaseDevice*, %struct.SkIRect*, i1)*, void (%class.sk_sp.185*, %class.SkBaseDevice*, %struct.SkIRect*, i1)** %18, align 8
  call void %19(%class.sk_sp.185* sret %0, %class.SkBaseDevice* %1, %struct.SkIRect* nonnull dereferenceable(16) %4, i1 zeroext false) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkBaseDevice10drawDeviceEPS_RK17SkSamplingOptionsRK7SkPaint(%class.SkBaseDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %5 = alloca %class.SkM44, align 4
  %6 = alloca { i64, i64 }, align 8
  %7 = alloca %class.sk_sp.185, align 8
  %8 = alloca %class.SkMatrix, align 4
  %9 = bitcast %class.sk_sp.185* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %class.sk_sp.185, %class.sk_sp.185* %7, i64 0, i32 0
  store %class.SkSpecialImage* inttoptr (i64 -6148914691236517206 to %class.SkSpecialImage*), %class.SkSpecialImage** %10, align 8
  %11 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %12 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #15, !noalias !24
  %13 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %1, i64 0, i32 3, i32 1, i32 0
  %14 = load i32, i32* %13, align 4, !noalias !24
  %15 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %1, i64 0, i32 3, i32 1, i32 1
  %16 = load i32, i32* %15, align 4, !noalias !24
  %17 = zext i32 %16 to i64
  %18 = shl nuw i64 %17, 32
  %19 = zext i32 %14 to i64
  %20 = or i64 %18, %19
  %21 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 0, i64* %21, align 8, !noalias !24
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %20, i64* %22, align 8, !noalias !24
  %23 = bitcast %class.SkBaseDevice* %1 to void (%class.sk_sp.185*, %class.SkBaseDevice*, %struct.SkIRect*, i1)***
  %24 = load void (%class.sk_sp.185*, %class.SkBaseDevice*, %struct.SkIRect*, i1)**, void (%class.sk_sp.185*, %class.SkBaseDevice*, %struct.SkIRect*, i1)*** %23, align 8, !noalias !24
  %25 = getelementptr inbounds void (%class.sk_sp.185*, %class.SkBaseDevice*, %struct.SkIRect*, i1)*, void (%class.sk_sp.185*, %class.SkBaseDevice*, %struct.SkIRect*, i1)** %24, i64 49
  %26 = load void (%class.sk_sp.185*, %class.SkBaseDevice*, %struct.SkIRect*, i1)*, void (%class.sk_sp.185*, %class.SkBaseDevice*, %struct.SkIRect*, i1)** %25, align 8, !noalias !24
  call void %26(%class.sk_sp.185* nonnull sret %7, %class.SkBaseDevice* %1, %struct.SkIRect* nonnull dereferenceable(16) %11, i1 zeroext false) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #15, !noalias !24
  %27 = load %class.SkSpecialImage*, %class.SkSpecialImage** %10, align 8
  %28 = icmp eq %class.SkSpecialImage* %27, null
  br i1 %28, label %95, label %29

29:                                               ; preds = %4
  %30 = bitcast %class.SkMatrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #15
  %31 = bitcast %class.SkM44* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %31) #15, !noalias !27
  %32 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 6
  %33 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %1, i64 0, i32 5
  %34 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %5, %class.SkM44* dereferenceable(64) %32, %class.SkM44* dereferenceable(64) %33) #15, !noalias !27
  %35 = bitcast %class.SkM44* %5 to i32*
  %36 = load i32, i32* %35, align 4, !noalias !30
  %37 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 4
  %38 = bitcast float* %37 to i32*
  %39 = load i32, i32* %38, align 4, !noalias !30
  %40 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 12
  %41 = bitcast float* %40 to i32*
  %42 = load i32, i32* %41, align 4, !noalias !30
  %43 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 1
  %44 = bitcast float* %43 to i32*
  %45 = load i32, i32* %44, align 4, !noalias !30
  %46 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 5
  %47 = bitcast float* %46 to i32*
  %48 = load i32, i32* %47, align 4, !noalias !30
  %49 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 13
  %50 = bitcast float* %49 to i32*
  %51 = load i32, i32* %50, align 4, !noalias !30
  %52 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 3
  %53 = bitcast float* %52 to i32*
  %54 = load i32, i32* %53, align 4, !noalias !30
  %55 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 7
  %56 = bitcast float* %55 to i32*
  %57 = load i32, i32* %56, align 4, !noalias !30
  %58 = getelementptr inbounds %class.SkM44, %class.SkM44* %5, i64 0, i32 0, i64 15
  %59 = bitcast float* %58 to i32*
  %60 = load i32, i32* %59, align 4, !noalias !30
  %61 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 1
  %62 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 1
  %63 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 2
  %64 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 3
  %65 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 4
  %66 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 5
  %67 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 6
  %68 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 7
  %69 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 8
  %70 = bitcast %class.SkMatrix* %8 to i32*
  store i32 %36, i32* %70, align 4, !alias.scope !33
  %71 = bitcast float* %62 to i32*
  store i32 %39, i32* %71, align 4, !alias.scope !33
  %72 = bitcast float* %63 to i32*
  store i32 %42, i32* %72, align 4, !alias.scope !33
  %73 = bitcast float* %64 to i32*
  store i32 %45, i32* %73, align 4, !alias.scope !33
  %74 = bitcast float* %65 to i32*
  store i32 %48, i32* %74, align 4, !alias.scope !33
  %75 = bitcast float* %66 to i32*
  store i32 %51, i32* %75, align 4, !alias.scope !33
  %76 = bitcast float* %67 to i32*
  store i32 %54, i32* %76, align 4, !alias.scope !33
  %77 = bitcast float* %68 to i32*
  store i32 %57, i32* %77, align 4, !alias.scope !33
  %78 = bitcast float* %69 to i32*
  store i32 %60, i32* %78, align 4, !alias.scope !33
  store i32 128, i32* %61, align 4, !alias.scope !33
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %31) #15, !noalias !27
  %79 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)***
  %80 = load void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)*** %79, align 8
  %81 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)** %80, i64 45
  %82 = load void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)** %81, align 8
  call void %82(%class.SkBaseDevice* %0, %class.SkSpecialImage* nonnull %27, %class.SkMatrix* nonnull dereferenceable(40) %8, %struct.SkSamplingOptions* dereferenceable(20) %2, %class.SkPaint* dereferenceable(72) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #15
  %83 = load %class.SkSpecialImage*, %class.SkSpecialImage** %10, align 8
  %84 = icmp eq %class.SkSpecialImage* %83, null
  br i1 %84, label %95, label %85

85:                                               ; preds = %29
  %86 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %83, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 -1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %95

89:                                               ; preds = %85
  %90 = bitcast %class.SkSpecialImage* %83 to %class.SkRefCntBase*
  %91 = bitcast %class.SkSpecialImage* %83 to void (%class.SkRefCntBase*)***
  %92 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %91, align 8
  %93 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %92, i64 2
  %94 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %93, align 8
  call void %94(%class.SkRefCntBase* nonnull %90) #15
  br label %95

95:                                               ; preds = %4, %29, %85, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkBaseDevice17drawFilteredImageERKN4skif7MappingEP14SkSpecialImagePK13SkImageFilterRK17SkSamplingOptionsRK7SkPaint(%class.SkBaseDevice*, %"class.skif::Mapping"* dereferenceable(80), %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 align 2 {
  %7 = alloca %"class.skif::DeviceSpace", align 8
  %8 = alloca %"class.skif::Context", align 8
  %9 = alloca %"class.skif::FilterResult.188", align 8
  %10 = alloca %class.SkMatrix, align 4
  %11 = bitcast %"class.skif::DeviceSpace"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #15
  %12 = bitcast %class.SkBaseDevice* %0 to { i64, i64 } (%class.SkBaseDevice*)***
  %13 = load { i64, i64 } (%class.SkBaseDevice*)**, { i64, i64 } (%class.SkBaseDevice*)*** %12, align 8
  %14 = getelementptr inbounds { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %13, i64 23
  %15 = load { i64, i64 } (%class.SkBaseDevice*)*, { i64, i64 } (%class.SkBaseDevice*)** %14, align 8
  %16 = tail call { i64, i64 } %15(%class.SkBaseDevice* %0) #15
  %17 = extractvalue { i64, i64 } %16, 0
  %18 = extractvalue { i64, i64 } %16, 1
  %19 = bitcast %"class.skif::DeviceSpace"* %7 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.skif::DeviceSpace", %"class.skif::DeviceSpace"* %7, i64 0, i32 0, i32 2
  %21 = bitcast i32* %20 to i64*
  store i64 %18, i64* %21, align 8
  %22 = call { i64, i64 } @_ZNK4skif7Mapping13deviceToLayerI7SkIRectEENS_10LayerSpaceIT_EERKNS_11DeviceSpaceIS4_EE(%"class.skif::Mapping"* %1, %"class.skif::DeviceSpace"* nonnull dereferenceable(16) %7)
  %23 = extractvalue { i64, i64 } %22, 0
  %24 = extractvalue { i64, i64 } %22, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #15
  %25 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 3, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  %28 = select i1 %27, i32 4, i32 %26
  %29 = bitcast %class.SkBaseDevice* %0 to %class.SkImageFilterCache* (%class.SkBaseDevice*)***
  %30 = load %class.SkImageFilterCache* (%class.SkBaseDevice*)**, %class.SkImageFilterCache* (%class.SkBaseDevice*)*** %29, align 8
  %31 = getelementptr inbounds %class.SkImageFilterCache* (%class.SkBaseDevice*)*, %class.SkImageFilterCache* (%class.SkBaseDevice*)** %30, i64 60
  %32 = load %class.SkImageFilterCache* (%class.SkBaseDevice*)*, %class.SkImageFilterCache* (%class.SkBaseDevice*)** %31, align 8
  %33 = call %class.SkImageFilterCache* %32(%class.SkBaseDevice* %0) #15
  %34 = bitcast %"class.skif::Context"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %34) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 8 bitcast ({ %"class.skif::Mapping", %"class.skif::LayerSpace", %class.SkImageFilterCache*, i32, [4 x i8], %class.SkColorSpace*, %"class.skif::FilterResult" }* @__const._ZN12SkBaseDevice17drawFilteredImageERKN4skif7MappingEP14SkSpecialImagePK13SkImageFilterRK17SkSamplingOptionsRK7SkPaint.ctx to i8*), i64 136, i1 false)
  %35 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = bitcast %class.SkColorSpace** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq %class.SkSpecialImage* %2, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %6
  %40 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 1 monotonic, !noalias !36
  br label %42

42:                                               ; preds = %6, %39
  %43 = bitcast %"class.skif::Mapping"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %34, i8* align 4 %43, i64 80, i1 false) #15
  %44 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %8, i64 0, i32 1
  %45 = bitcast %"class.skif::LayerSpace"* %44 to i64*
  store i64 %23, i64* %45, align 8
  %46 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %8, i64 0, i32 1, i32 0, i32 2
  %47 = bitcast i32* %46 to i64*
  store i64 %24, i64* %47, align 8
  %48 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %8, i64 0, i32 2
  store %class.SkImageFilterCache* %33, %class.SkImageFilterCache** %48, align 8
  %49 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %8, i64 0, i32 3
  store i32 %28, i32* %49, align 8
  %50 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %8, i64 0, i32 4
  %51 = bitcast %class.SkColorSpace** %50 to i64*
  store i64 %37, i64* %51, align 8
  %52 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %8, i64 0, i32 5, i32 0, i32 0
  br i1 %38, label %53, label %55

53:                                               ; preds = %42
  %54 = bitcast %class.SkSpecialImage** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false)
  br label %68

55:                                               ; preds = %42
  %56 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %2, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 1 monotonic
  store %class.SkSpecialImage* %2, %class.SkSpecialImage** %52, align 8
  %58 = getelementptr inbounds %"class.skif::Context", %"class.skif::Context"* %8, i64 0, i32 5, i32 1
  %59 = bitcast %"class.skif::LayerSpace.187"* %58 to i64*
  store i64 0, i64* %59, align 8
  %60 = atomicrmw add i32* %56, i32 -1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %68

62:                                               ; preds = %55
  %63 = bitcast %class.SkSpecialImage* %2 to %class.SkRefCntBase*
  %64 = bitcast %class.SkSpecialImage* %2 to void (%class.SkRefCntBase*)***
  %65 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %64, align 8
  %66 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, i64 2
  %67 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, align 8
  call void %67(%class.SkRefCntBase* nonnull %63) #15
  br label %68

68:                                               ; preds = %62, %55, %53
  %69 = bitcast %"class.skif::FilterResult.188"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #15
  %70 = bitcast %class.SkImageFilter* %3 to %class.SkImageFilter_Base*
  call void @_ZNK18SkImageFilter_Base11filterImageERKN4skif7ContextE(%"class.skif::FilterResult.188"* nonnull sret %9, %class.SkImageFilter_Base* %70, %"class.skif::Context"* nonnull dereferenceable(136) %8) #15
  %71 = getelementptr inbounds %"class.skif::FilterResult.188", %"class.skif::FilterResult.188"* %9, i64 0, i32 0, i32 0
  %72 = load %class.SkSpecialImage*, %class.SkSpecialImage** %71, align 8, !noalias !39
  %73 = icmp eq %class.SkSpecialImage* %72, null
  br i1 %73, label %91, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.skif::FilterResult.188", %"class.skif::FilterResult.188"* %9, i64 0, i32 1, i32 0
  %76 = bitcast %struct.SkIPoint* %75 to i64*
  %77 = load i64, i64* %76, align 8, !noalias !39
  %78 = trunc i64 %77 to i32
  %79 = lshr i64 %77, 32
  %80 = trunc i64 %79 to i32
  %81 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %72, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 1 monotonic, !noalias !39
  %83 = atomicrmw add i32* %81, i32 -1 acq_rel
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %92

85:                                               ; preds = %74
  %86 = bitcast %class.SkSpecialImage* %72 to %class.SkRefCntBase*
  %87 = bitcast %class.SkSpecialImage* %72 to void (%class.SkRefCntBase*)***
  %88 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %87, align 8
  %89 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %88, i64 2
  %90 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, align 8
  call void %90(%class.SkRefCntBase* nonnull %86) #15
  br label %92

91:                                               ; preds = %68
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #15
  br label %109

92:                                               ; preds = %74, %85
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #15
  %93 = bitcast %class.SkMatrix* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %93) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %93, i8* align 4 %43, i64 40, i1 false)
  %94 = sitofp i32 %78 to float
  %95 = sitofp i32 %80 to float
  %96 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix* nonnull %10, float %94, float %95) #15
  %97 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)***
  %98 = load void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)*** %97, align 8
  %99 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)** %98, i64 45
  %100 = load void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkSpecialImage*, %class.SkMatrix*, %struct.SkSamplingOptions*, %class.SkPaint*)** %99, align 8
  call void %100(%class.SkBaseDevice* %0, %class.SkSpecialImage* nonnull %72, %class.SkMatrix* nonnull dereferenceable(40) %10, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* dereferenceable(72) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %93) #15
  %101 = atomicrmw add i32* %81, i32 -1 acq_rel
  %102 = icmp eq i32 %101, 1
  br i1 %102, label %103, label %109

103:                                              ; preds = %92
  %104 = bitcast %class.SkSpecialImage* %72 to %class.SkRefCntBase*
  %105 = bitcast %class.SkSpecialImage* %72 to void (%class.SkRefCntBase*)***
  %106 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %105, align 8
  %107 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %106, i64 2
  %108 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %107, align 8
  call void %108(%class.SkRefCntBase* nonnull %104) #15
  br label %109

109:                                              ; preds = %91, %92, %103
  %110 = load %class.SkSpecialImage*, %class.SkSpecialImage** %52, align 8
  %111 = icmp eq %class.SkSpecialImage* %110, null
  br i1 %111, label %122, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %class.SkSpecialImage, %class.SkSpecialImage* %110, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw add i32* %113, i32 -1 acq_rel
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %116, label %122

116:                                              ; preds = %112
  %117 = bitcast %class.SkSpecialImage* %110 to %class.SkRefCntBase*
  %118 = bitcast %class.SkSpecialImage* %110 to void (%class.SkRefCntBase*)***
  %119 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %118, align 8
  %120 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %119, i64 2
  %121 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %120, align 8
  call void %121(%class.SkRefCntBase* nonnull %117) #15
  br label %122

122:                                              ; preds = %109, %112, %116
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %34) #15
  %123 = icmp eq %class.SkImageFilterCache* %33, null
  br i1 %123, label %134, label %124

124:                                              ; preds = %122
  %125 = getelementptr inbounds %class.SkImageFilterCache, %class.SkImageFilterCache* %33, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = atomicrmw add i32* %125, i32 -1 acq_rel
  %127 = icmp eq i32 %126, 1
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = bitcast %class.SkImageFilterCache* %33 to %class.SkRefCntBase*
  %130 = bitcast %class.SkImageFilterCache* %33 to void (%class.SkRefCntBase*)***
  %131 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %130, align 8
  %132 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %131, i64 2
  %133 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %132, align 8
  call void %133(%class.SkRefCntBase* nonnull %129) #15
  br label %134

134:                                              ; preds = %122, %124, %128
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK4skif7Mapping13deviceToLayerI7SkIRectEENS_10LayerSpaceIT_EERKNS_11DeviceSpaceIS4_EE(%"class.skif::Mapping"*, %"class.skif::DeviceSpace"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %class.SkMatrix, align 16
  %4 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #15
  %5 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %6 = bitcast %class.SkMatrix* %3 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %6, align 16
  %7 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %8 = bitcast float* %7 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %8, align 16
  %9 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %9, align 16
  store i32 16, i32* %5, align 4
  %10 = getelementptr inbounds %"class.skif::Mapping", %"class.skif::Mapping"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.skif::Mapping", %"class.skif::Mapping"* %0, i64 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = trunc i32 %12 to i8
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %2
  %16 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %10) #15
  %17 = zext i8 %16 to i32
  store i32 %17, i32* %11, align 4
  br label %18

18:                                               ; preds = %15, %2
  %19 = phi i32 [ %17, %15 ], [ %12, %2 ]
  %20 = and i32 %19, 15
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %3) #15
  br label %32

24:                                               ; preds = %18
  %25 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* %10, %class.SkMatrix* nonnull %3) #15
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = bitcast %"class.skif::DeviceSpace"* %1 to i64*
  %28 = load i64, i64* %27, align 4
  %29 = getelementptr inbounds %"class.skif::DeviceSpace", %"class.skif::DeviceSpace"* %1, i64 0, i32 0, i32 2
  %30 = bitcast i32* %29 to i64*
  %31 = load i64, i64* %30, align 4
  br label %37

32:                                               ; preds = %22, %24
  %33 = getelementptr inbounds %"class.skif::DeviceSpace", %"class.skif::DeviceSpace"* %1, i64 0, i32 0
  %34 = call { i64, i64 } @_ZN4skif7Mapping3mapI7SkIRectEET_RKS3_RK8SkMatrix(%struct.SkIRect* dereferenceable(16) %33, %class.SkMatrix* nonnull dereferenceable(40) %3) #15
  %35 = extractvalue { i64, i64 } %34, 0
  %36 = extractvalue { i64, i64 } %34, 1
  br label %37

37:                                               ; preds = %32, %26
  %38 = phi i64 [ %35, %32 ], [ %28, %26 ]
  %39 = phi i64 [ %36, %32 ], [ %31, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #15
  %40 = insertvalue { i64, i64 } undef, i64 %38, 0
  %41 = insertvalue { i64, i64 } %40, i64 %39, 1
  ret { i64, i64 } %41
}

declare void @_ZNK18SkImageFilter_Base11filterImageERKN4skif7ContextE(%"class.skif::FilterResult.188"* sret, %class.SkImageFilter_Base*, %"class.skif::Context"* dereferenceable(136)) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12preTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkBaseDevice10readPixelsERK8SkPixmapii(%class.SkBaseDevice*, %class.SkPixmap* dereferenceable(40), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = bitcast %class.SkBaseDevice* %0 to i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)***
  %6 = load i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)**, i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)*, i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)** %6, i64 53
  %8 = load i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)*, i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.SkBaseDevice* %0, %class.SkPixmap* dereferenceable(40) %1, i32 %2, i32 %3) #15
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkBaseDevice11writePixelsERK8SkPixmapii(%class.SkBaseDevice*, %class.SkPixmap* dereferenceable(40), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = bitcast %class.SkBaseDevice* %0 to i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)***
  %6 = load i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)**, i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)*, i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)** %6, i64 54
  %8 = load i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)*, i1 (%class.SkBaseDevice*, %class.SkPixmap*, i32, i32)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.SkBaseDevice* %0, %class.SkPixmap* dereferenceable(40) %1, i32 %2, i32 %3) #15
  ret i1 %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN12SkBaseDevice13onWritePixelsERK8SkPixmapii(%class.SkBaseDevice* nocapture readnone, %class.SkPixmap* nocapture readnone dereferenceable(40), i32, i32) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN12SkBaseDevice12onReadPixelsERK8SkPixmapii(%class.SkBaseDevice* nocapture readnone, %class.SkPixmap* nocapture readnone dereferenceable(40), i32, i32) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkBaseDevice12accessPixelsEP8SkPixmap(%class.SkBaseDevice*, %class.SkPixmap*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkPixmap, align 8
  %4 = bitcast %class.SkPixmap* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 40, i1 false) #15
  %5 = icmp eq %class.SkPixmap* %1, null
  %6 = select i1 %5, %class.SkPixmap* %3, %class.SkPixmap* %1
  %7 = bitcast %class.SkBaseDevice* %0 to i1 (%class.SkBaseDevice*, %class.SkPixmap*)***
  %8 = load i1 (%class.SkBaseDevice*, %class.SkPixmap*)**, i1 (%class.SkBaseDevice*, %class.SkPixmap*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%class.SkBaseDevice*, %class.SkPixmap*)*, i1 (%class.SkBaseDevice*, %class.SkPixmap*)** %8, i64 55
  %10 = load i1 (%class.SkBaseDevice*, %class.SkPixmap*)*, i1 (%class.SkBaseDevice*, %class.SkPixmap*)** %9, align 8
  %11 = call zeroext i1 %10(%class.SkBaseDevice* %0, %class.SkPixmap* %6) #15
  %12 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %class.SkColorSpace*, %class.SkColorSpace** %12, align 8
  %14 = icmp eq %class.SkColorSpace* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = bitcast %class.SkColorSpace* %13 to i8*
  call void @_ZdlPv(i8* %20) #16
  br label %21

21:                                               ; preds = %2, %15, %19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #15
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN12SkBaseDevice10peekPixelsEP8SkPixmap(%class.SkBaseDevice*, %class.SkPixmap*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkPixmap, align 8
  %4 = bitcast %class.SkPixmap* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %4) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 40, i1 false) #15
  %5 = icmp eq %class.SkPixmap* %1, null
  %6 = select i1 %5, %class.SkPixmap* %3, %class.SkPixmap* %1
  %7 = bitcast %class.SkBaseDevice* %0 to i1 (%class.SkBaseDevice*, %class.SkPixmap*)***
  %8 = load i1 (%class.SkBaseDevice*, %class.SkPixmap*)**, i1 (%class.SkBaseDevice*, %class.SkPixmap*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%class.SkBaseDevice*, %class.SkPixmap*)*, i1 (%class.SkBaseDevice*, %class.SkPixmap*)** %8, i64 52
  %10 = load i1 (%class.SkBaseDevice*, %class.SkPixmap*)*, i1 (%class.SkBaseDevice*, %class.SkPixmap*)** %9, align 8
  %11 = call zeroext i1 %10(%class.SkBaseDevice* %0, %class.SkPixmap* %6) #15
  %12 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %class.SkColorSpace*, %class.SkColorSpace** %12, align 8
  %14 = icmp eq %class.SkColorSpace* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = bitcast %class.SkColorSpace* %13 to i8*
  call void @_ZdlPv(i8* %20) #16
  br label %21

21:                                               ; preds = %2, %15, %19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %4) #15
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkBaseDevice16drawGlyphRunListERK14SkGlyphRunListRK7SkPaint(%class.SkBaseDevice*, %class.SkGlyphRunList* dereferenceable(48), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 0
  %5 = load float, float* %4, align 4
  %6 = fmul float %5, 0.000000e+00
  %7 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 1
  %8 = load float, float* %7, align 4
  %9 = fmul float %6, %8
  %10 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 2
  %11 = load float, float* %10, align 4
  %12 = fmul float %9, %11
  %13 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 3
  %14 = load float, float* %13, align 4
  %15 = fmul float %12, %14
  %16 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 4
  %17 = load float, float* %16, align 4
  %18 = fmul float %15, %17
  %19 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 5
  %20 = load float, float* %19, align 4
  %21 = fmul float %18, %20
  %22 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 6
  %23 = load float, float* %22, align 4
  %24 = fmul float %21, %23
  %25 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 7
  %26 = load float, float* %25, align 4
  %27 = fmul float %24, %26
  %28 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 8
  %29 = load float, float* %28, align 4
  %30 = fmul float %27, %29
  %31 = fcmp oeq float %30, 0.000000e+00
  br i1 %31, label %32, label %53

32:                                               ; preds = %3
  %33 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 0, i32 0
  %34 = load %class.SkGlyphRun*, %class.SkGlyphRun** %33, align 8
  %35 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %34, i64 %36
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %47, label %41

39:                                               ; preds = %41
  %40 = icmp eq %class.SkGlyphRun* %46, %37
  br i1 %40, label %47, label %41

41:                                               ; preds = %32, %39
  %42 = phi %class.SkGlyphRun* [ %46, %39 ], [ %34, %32 ]
  %43 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %42, i64 0, i32 3, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 0
  %46 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %42, i64 1
  br i1 %45, label %39, label %52

47:                                               ; preds = %39, %32
  %48 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %class.SkGlyphRunList*, %class.SkPaint*)***
  %49 = load void (%class.SkBaseDevice*, %class.SkGlyphRunList*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkGlyphRunList*, %class.SkPaint*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkGlyphRunList*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkGlyphRunList*, %class.SkPaint*)** %49, i64 43
  %51 = load void (%class.SkBaseDevice*, %class.SkGlyphRunList*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkGlyphRunList*, %class.SkPaint*)** %50, align 8
  tail call void %51(%class.SkBaseDevice* %0, %class.SkGlyphRunList* dereferenceable(48) %1, %class.SkPaint* dereferenceable(72) %2) #15
  br label %53

52:                                               ; preds = %41
  tail call void @_ZN12SkBaseDevice32simplifyGlyphRunRSXFormAndRedrawERK14SkGlyphRunListRK7SkPaint(%class.SkBaseDevice* %0, %class.SkGlyphRunList* dereferenceable(48) %1, %class.SkPaint* dereferenceable(72) %2)
  br label %53

53:                                               ; preds = %3, %52, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12SkBaseDevice32simplifyGlyphRunRSXFormAndRedrawERK14SkGlyphRunListRK7SkPaint(%class.SkBaseDevice*, %class.SkGlyphRunList* nocapture readonly dereferenceable(48), %class.SkPaint* dereferenceable(72)) local_unnamed_addr #8 align 2 {
  %4 = alloca %class.SkMatrix, align 16
  %5 = alloca %class.SkMatrix, align 16
  %6 = alloca %class.sk_sp.8, align 8
  %7 = alloca %class.SkMatrix, align 4
  %8 = alloca %class.SkTCopyOnFirstWrite, align 8
  %9 = alloca %class.SkMatrix, align 16
  %10 = alloca %class.SkMatrix, align 16
  %11 = alloca %class.SkMatrix, align 16
  %12 = alloca %class.SkMatrix, align 16
  %13 = alloca %class.SkGlyphRunList, align 8
  %14 = alloca { <2 x float>, <2 x float> }, align 8
  %15 = bitcast { <2 x float>, <2 x float> }* %14 to %struct.SkRect*
  %16 = alloca i64, align 8
  %17 = bitcast i64* %16 to %struct.SkPoint*
  %18 = alloca i16, align 2
  %19 = alloca %class.SkGlyphRun, align 8
  %20 = alloca %class.SkSpan, align 8
  %21 = alloca %class.SkSpan.157, align 8
  %22 = alloca %class.SkSpan.158, align 8
  %23 = alloca %class.SkM44, align 4
  %24 = alloca %class.SkEnumerate, align 8
  %25 = alloca { <2 x float>, <2 x float> }, align 8
  %26 = bitcast { <2 x float>, <2 x float> }* %25 to %struct.SkRSXform*
  %27 = alloca %class.SkMatrix, align 16
  %28 = alloca %class.SkPaint, align 8
  %29 = alloca %class.sk_sp.8, align 8
  %30 = alloca %class.SkM44, align 4
  %31 = alloca %class.SkM44, align 4
  %32 = alloca %class.SkGlyphRunList, align 8
  %33 = alloca { <2 x float>, <2 x float> }, align 8
  %34 = bitcast { <2 x float>, <2 x float> }* %33 to %struct.SkRect*
  %35 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 0, i32 0
  %36 = load %class.SkGlyphRun*, %class.SkGlyphRun** %35, align 8
  %37 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %36, i64 %38
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %210, label %41

41:                                               ; preds = %3
  %42 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %1, i64 0, i32 3
  %43 = bitcast %struct.SkPoint* %42 to <2 x float>*
  %44 = bitcast i64* %16 to i8*
  %45 = bitcast i16* %18 to i8*
  %46 = bitcast %class.SkGlyphRun* %19 to i8*
  %47 = bitcast %class.SkSpan* %20 to i8*
  %48 = bitcast %class.SkSpan.157* %21 to i8*
  %49 = bitcast %class.SkSpan.158* %22 to i8*
  %50 = bitcast %class.SkM44* %23 to i8*
  %51 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1
  %52 = bitcast %class.SkM44* %51 to i8*
  %53 = bitcast %class.SkEnumerate* %24 to i8*
  %54 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %24, i64 0, i32 0
  %55 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %24, i64 0, i32 1
  %56 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %24, i64 0, i32 2, i32 0
  %57 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %24, i64 0, i32 2, i32 1
  %58 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %24, i64 0, i32 0, i32 1
  %59 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %24, i64 0, i32 3, i32 0
  %60 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %24, i64 0, i32 3, i32 1
  %61 = bitcast { <2 x float>, <2 x float> }* %25 to i8*
  %62 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %25, i64 0, i32 1
  %63 = bitcast %class.SkMatrix* %27 to i8*
  %64 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %27, i64 0, i32 1
  %65 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %27, i64 0, i32 0, i64 1
  %66 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %27, i64 0, i32 0, i64 2
  %67 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %27, i64 0, i32 0, i64 3
  %68 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %27, i64 0, i32 0, i64 4
  %69 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %27, i64 0, i32 0, i64 5
  %70 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %27, i64 0, i32 0, i64 6
  %71 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %27, i64 0, i32 0, i64 7
  %72 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %27, i64 0, i32 0, i64 8
  %73 = bitcast %class.SkPaint* %28 to i8*
  %74 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %2, i64 0, i32 1, i32 0
  %75 = bitcast %class.SkMatrix* %4 to i8*
  %76 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %77 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %78 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 8
  %79 = bitcast %class.SkMatrix* %5 to i8*
  %80 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %81 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %82 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  %83 = bitcast %class.sk_sp.8* %6 to i8*
  %84 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %6, i64 0, i32 0
  %85 = bitcast %class.SkMatrix* %7 to i8*
  %86 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  %87 = bitcast %class.SkTCopyOnFirstWrite* %8 to i8*
  %88 = bitcast %class.SkTCopyOnFirstWrite* %8 to i8**
  %89 = getelementptr inbounds %class.SkTCopyOnFirstWrite, %class.SkTCopyOnFirstWrite* %8, i64 0, i32 1, i32 1
  %90 = bitcast %class.SkMatrix* %9 to i8*
  %91 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 1
  %92 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 4
  %93 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %9, i64 0, i32 0, i64 8
  %94 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %29, i64 0, i32 0
  %95 = bitcast %class.SkMatrix* %10 to i8*
  %96 = bitcast %class.SkMatrix* %11 to i8*
  %97 = bitcast %class.SkMatrix* %12 to i8*
  %98 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 1
  %99 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 4
  %100 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %12, i64 0, i32 0, i64 8
  %101 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 1
  %102 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 4
  %103 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 8
  %104 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 1
  %105 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 4
  %106 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %10, i64 0, i32 0, i64 8
  %107 = bitcast %class.SkM44* %30 to i8*
  %108 = bitcast %class.SkM44* %31 to i8*
  %109 = bitcast %class.SkMatrix* %27 to i32*
  %110 = bitcast float* %65 to i32*
  %111 = bitcast float* %66 to i32*
  %112 = bitcast float* %67 to i32*
  %113 = bitcast float* %68 to i32*
  %114 = bitcast float* %69 to i32*
  %115 = bitcast float* %70 to i32*
  %116 = bitcast float* %71 to i32*
  %117 = bitcast float* %72 to i32*
  %118 = bitcast %class.SkM44* %31 to i32*
  %119 = getelementptr inbounds %class.SkM44, %class.SkM44* %31, i64 0, i32 0, i64 1
  %120 = bitcast float* %119 to i32*
  %121 = getelementptr inbounds %class.SkM44, %class.SkM44* %31, i64 0, i32 0, i64 2
  %122 = getelementptr inbounds %class.SkM44, %class.SkM44* %31, i64 0, i32 0, i64 3
  %123 = bitcast float* %122 to i32*
  %124 = getelementptr inbounds %class.SkM44, %class.SkM44* %31, i64 0, i32 0, i64 4
  %125 = bitcast float* %124 to i32*
  %126 = getelementptr inbounds %class.SkM44, %class.SkM44* %31, i64 0, i32 0, i64 5
  %127 = bitcast float* %126 to i32*
  %128 = getelementptr inbounds %class.SkM44, %class.SkM44* %31, i64 0, i32 0, i64 6
  %129 = getelementptr inbounds %class.SkM44, %class.SkM44* %31, i64 0, i32 0, i64 7
  %130 = bitcast float* %129 to i32*
  %131 = getelementptr inbounds %class.SkM44, %class.SkM44* %31, i64 0, i32 0, i64 8
  %132 = getelementptr inbounds %class.SkM44, %class.SkM44* %31, i64 0, i32 0, i64 12
  %133 = bitcast float* %132 to i32*
  %134 = getelementptr inbounds %class.SkM44, %class.SkM44* %31, i64 0, i32 0, i64 13
  %135 = bitcast float* %134 to i32*
  %136 = getelementptr inbounds %class.SkM44, %class.SkM44* %31, i64 0, i32 0, i64 14
  %137 = getelementptr inbounds %class.SkM44, %class.SkM44* %31, i64 0, i32 0, i64 15
  %138 = bitcast float* %137 to i32*
  %139 = bitcast %class.SkM44* %51 to i32*
  %140 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 4
  %141 = bitcast float* %140 to i32*
  %142 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 12
  %143 = bitcast float* %142 to i32*
  %144 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 1
  %145 = bitcast float* %144 to i32*
  %146 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 5
  %147 = bitcast float* %146 to i32*
  %148 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 13
  %149 = bitcast float* %148 to i32*
  %150 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 3
  %151 = bitcast float* %150 to i32*
  %152 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 7
  %153 = bitcast float* %152 to i32*
  %154 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 1, i32 0, i64 15
  %155 = bitcast float* %154 to i32*
  %156 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2
  %157 = bitcast %class.SkMatrix* %156 to i32*
  %158 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 1
  %159 = bitcast float* %158 to i32*
  %160 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 2
  %161 = bitcast float* %160 to i32*
  %162 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 3
  %163 = bitcast float* %162 to i32*
  %164 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 4
  %165 = bitcast float* %164 to i32*
  %166 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 5
  %167 = bitcast float* %166 to i32*
  %168 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 6
  %169 = bitcast float* %168 to i32*
  %170 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 7
  %171 = bitcast float* %170 to i32*
  %172 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 8
  %173 = bitcast float* %172 to i32*
  %174 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 1
  %175 = bitcast %class.SkGlyphRunList* %32 to i8*
  %176 = bitcast { <2 x float>, <2 x float> }* %33 to i8*
  %177 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %33, i64 0, i32 0
  %178 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %33, i64 0, i32 1
  %179 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 2, i32 0, i64 0
  %180 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %32, i64 0, i32 0, i32 0
  %181 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %32, i64 0, i32 0, i32 1
  %182 = bitcast %class.SkBaseDevice* %0 to void (%class.SkBaseDevice*, %class.SkGlyphRunList*, %class.SkPaint*)***
  %183 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %19, i64 0, i32 4, i32 0, i32 0
  %184 = bitcast %class.SkGlyphRunList* %13 to i8*
  %185 = bitcast { <2 x float>, <2 x float> }* %14 to i8*
  %186 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 0
  %187 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 1
  %188 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %13, i64 0, i32 0, i32 0
  %189 = getelementptr inbounds %class.SkGlyphRunList, %class.SkGlyphRunList* %13, i64 0, i32 0, i32 1
  %190 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = getelementptr inbounds %class.SkEnumerate, %class.SkEnumerate* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %192 = bitcast { <2 x float>, <2 x float> }* %25 to i8*
  %193 = bitcast { <2 x float>, <2 x float> }* %25 to i64*
  %194 = bitcast <2 x float>* %62 to i64*
  %195 = bitcast %class.SkMatrix* %27 to <4 x float>*
  %196 = bitcast float* %68 to <4 x float>*
  %197 = bitcast %class.SkMatrix* %4 to <4 x float>*
  %198 = bitcast float* %77 to <4 x float>*
  %199 = bitcast %class.SkMatrix* %5 to <4 x float>*
  %200 = bitcast float* %81 to <4 x float>*
  %201 = bitcast %class.SkMatrix* %9 to <4 x float>*
  %202 = bitcast float* %92 to <4 x float>*
  %203 = bitcast %class.SkMatrix* %12 to <4 x float>*
  %204 = bitcast float* %99 to <4 x float>*
  %205 = bitcast %class.SkMatrix* %11 to <4 x float>*
  %206 = bitcast float* %102 to <4 x float>*
  %207 = bitcast %class.SkMatrix* %10 to <4 x float>*
  %208 = bitcast float* %105 to <4 x float>*
  %209 = bitcast float* %131 to <4 x float>*
  br label %211

210:                                              ; preds = %453, %3
  ret void

211:                                              ; preds = %41, %453
  %212 = phi %class.SkGlyphRun* [ %36, %41 ], [ %454, %453 ]
  %213 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %212, i64 0, i32 3, i32 0
  %214 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %212, i64 0, i32 3, i32 1
  %215 = load i64, i64* %214, align 8
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %259

217:                                              ; preds = %211
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %184) #15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %185) #15
  %218 = call { <2 x float>, <2 x float> } @_ZNK10SkGlyphRun12sourceBoundsERK7SkPaint(%class.SkGlyphRun* %212, %class.SkPaint* dereferenceable(72) %2) #15
  %219 = extractvalue { <2 x float>, <2 x float> } %218, 0
  store <2 x float> %219, <2 x float>* %186, align 8
  %220 = extractvalue { <2 x float>, <2 x float> } %218, 1
  store <2 x float> %220, <2 x float>* %187, align 8
  call void @_ZN14SkGlyphRunListC1ERK10SkGlyphRunRK6SkRect7SkPoint(%class.SkGlyphRunList* nonnull %13, %class.SkGlyphRun* dereferenceable(96) %212, %struct.SkRect* nonnull dereferenceable(16) %15, <2 x float> zeroinitializer) #15
  %221 = load float, float* %179, align 4
  %222 = fmul float %221, 0.000000e+00
  %223 = load float, float* %158, align 4
  %224 = fmul float %222, %223
  %225 = load float, float* %160, align 4
  %226 = fmul float %224, %225
  %227 = load float, float* %162, align 4
  %228 = fmul float %226, %227
  %229 = load float, float* %164, align 4
  %230 = fmul float %228, %229
  %231 = load float, float* %166, align 4
  %232 = fmul float %230, %231
  %233 = load float, float* %168, align 4
  %234 = fmul float %232, %233
  %235 = load float, float* %170, align 4
  %236 = fmul float %234, %235
  %237 = load float, float* %172, align 4
  %238 = fmul float %236, %237
  %239 = fcmp oeq float %238, 0.000000e+00
  br i1 %239, label %240, label %258

240:                                              ; preds = %217
  %241 = load %class.SkGlyphRun*, %class.SkGlyphRun** %188, align 8
  %242 = load i64, i64* %189, align 8
  %243 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %241, i64 %242
  %244 = icmp eq i64 %242, 0
  br i1 %244, label %253, label %247

245:                                              ; preds = %247
  %246 = icmp eq %class.SkGlyphRun* %252, %243
  br i1 %246, label %253, label %247

247:                                              ; preds = %240, %245
  %248 = phi %class.SkGlyphRun* [ %252, %245 ], [ %241, %240 ]
  %249 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %248, i64 0, i32 3, i32 1
  %250 = load i64, i64* %249, align 8
  %251 = icmp eq i64 %250, 0
  %252 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %248, i64 1
  br i1 %251, label %245, label %257

253:                                              ; preds = %245, %240
  %254 = load void (%class.SkBaseDevice*, %class.SkGlyphRunList*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkGlyphRunList*, %class.SkPaint*)*** %182, align 8
  %255 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkGlyphRunList*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkGlyphRunList*, %class.SkPaint*)** %254, i64 43
  %256 = load void (%class.SkBaseDevice*, %class.SkGlyphRunList*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkGlyphRunList*, %class.SkPaint*)** %255, align 8
  call void %256(%class.SkBaseDevice* %0, %class.SkGlyphRunList* nonnull dereferenceable(48) %13, %class.SkPaint* dereferenceable(72) %2) #15
  br label %258

257:                                              ; preds = %247
  call void @_ZN12SkBaseDevice32simplifyGlyphRunRSXFormAndRedrawERK14SkGlyphRunListRK7SkPaint(%class.SkBaseDevice* %0, %class.SkGlyphRunList* nonnull dereferenceable(48) %13, %class.SkPaint* dereferenceable(72) %2) #15
  br label %258

258:                                              ; preds = %217, %253, %257
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %185) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %184) #15
  br label %453

259:                                              ; preds = %211
  %260 = load <2 x float>, <2 x float>* %43, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #15
  store i64 0, i64* %16, align 8
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %45) #15
  store i16 -21846, i16* %18, align 2
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %46) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* align 8 bitcast (%class.SkGlyphRun* @__const._ZN12SkBaseDevice32simplifyGlyphRunRSXFormAndRedrawERK14SkGlyphRunListRK7SkPaint.glyphRun to i8*), i64 96, i1 false)
  %261 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %212, i64 0, i32 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 16, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 16, i1 false) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 16, i1 false) #15
  call void @_ZN10SkGlyphRunC1ERK6SkFont6SkSpanIK7SkPointES3_IKtES3_IKcES3_IKjES6_(%class.SkGlyphRun* nonnull %19, %class.SkFont* dereferenceable(24) %261, %struct.SkPoint* nonnull %17, i64 1, i16* nonnull %18, i64 1, %class.SkSpan* nonnull byval(%class.SkSpan) align 8 %20, %class.SkSpan.157* nonnull byval(%class.SkSpan.157) align 8 %21, %class.SkSpan.158* nonnull byval(%class.SkSpan.158) align 8 %22) #15
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %50) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %50, i8* align 4 %52, i64 64, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %53) #15
  %262 = bitcast %class.SkGlyphRun* %212 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %53, i8* align 8 %262, i64 24, i1 false)
  store i64 0, i64* %55, align 8, !alias.scope !42
  store %class.SkZip* %54, %class.SkZip** %56, align 8, !alias.scope !45
  store i64 0, i64* %57, align 8, !alias.scope !45
  %263 = load i64, i64* %58, align 8, !alias.scope !42, !noalias !50
  store %class.SkZip* %54, %class.SkZip** %59, align 8, !alias.scope !55
  store i64 %263, i64* %60, align 8, !alias.scope !55
  %264 = icmp eq i64 %263, 0
  br i1 %264, label %268, label %265

265:                                              ; preds = %259
  %266 = extractelement <2 x float> %260, i32 0
  %267 = extractelement <2 x float> %260, i32 1
  br label %291

268:                                              ; preds = %450, %259
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %53) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* nonnull align 4 %50, i64 64, i1 false) #15
  %269 = load i32, i32* %139, align 4, !noalias !56
  %270 = load i32, i32* %141, align 4, !noalias !56
  %271 = load i32, i32* %143, align 4, !noalias !56
  %272 = load i32, i32* %145, align 4, !noalias !56
  %273 = load i32, i32* %147, align 4, !noalias !56
  %274 = load i32, i32* %149, align 4, !noalias !56
  %275 = load i32, i32* %151, align 4, !noalias !56
  %276 = load i32, i32* %153, align 4, !noalias !56
  %277 = load i32, i32* %155, align 4, !noalias !56
  store i32 %269, i32* %157, align 8
  store i32 %270, i32* %159, align 4
  store i32 %271, i32* %161, align 8
  store i32 %272, i32* %163, align 4
  store i32 %273, i32* %165, align 8
  store i32 %274, i32* %167, align 4
  store i32 %275, i32* %169, align 8
  store i32 %276, i32* %171, align 4
  store i32 %277, i32* %173, align 8
  store i32 128, i32* %174, align 4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %50) #15
  %278 = load %class.SkTypeface*, %class.SkTypeface** %183, align 8
  %279 = icmp eq %class.SkTypeface* %278, null
  br i1 %279, label %290, label %280

280:                                              ; preds = %268
  %281 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %278, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = atomicrmw add i32* %281, i32 -1 acq_rel
  %283 = icmp eq i32 %282, 1
  br i1 %283, label %284, label %290

284:                                              ; preds = %280
  %285 = bitcast %class.SkTypeface* %278 to %class.SkRefCntBase*
  %286 = bitcast %class.SkTypeface* %278 to void (%class.SkRefCntBase*)***
  %287 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %286, align 8
  %288 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %287, i64 2
  %289 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %288, align 8
  call void %289(%class.SkRefCntBase* nonnull %285) #15
  br label %290

290:                                              ; preds = %268, %280, %284
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %46) #15
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %45) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #15
  br label %453

291:                                              ; preds = %265, %450
  %292 = phi i64 [ 0, %265 ], [ %451, %450 ]
  %293 = load i16*, i16** %190, align 8, !noalias !59
  %294 = getelementptr inbounds i16, i16* %293, i64 %292
  %295 = load %struct.SkPoint*, %struct.SkPoint** %191, align 8, !noalias !59
  %296 = load i16, i16* %294, align 2
  store i16 %296, i16* %18, align 2
  %297 = load %struct.SkPoint*, %struct.SkPoint** %213, align 8
  %298 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %297, i64 %292, i32 0
  %299 = bitcast float* %298 to i64*
  %300 = load i64, i64* %299, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #15
  %301 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %295, i64 %292, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %192, i8 -1, i64 16, i1 false)
  %302 = bitcast float* %301 to i64*
  %303 = load i64, i64* %302, align 4
  store i64 %300, i64* %193, align 8
  store i64 %303, i64* %194, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %63) #15
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %195, align 16
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %196, align 16
  store float 1.000000e+00, float* %72, align 16
  store i32 16, i32* %64, align 4
  %304 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10setRSXformERK9SkRSXform(%class.SkMatrix* nonnull %27, %struct.SkRSXform* nonnull dereferenceable(16) %26) #15
  %305 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* %304, float %266, float %267) #15
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %73) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* align 8 bitcast (%class.SkPaint* @__const._ZN12SkBaseDevice32simplifyGlyphRunRSXFormAndRedrawERK14SkGlyphRunListRK7SkPaint.invertingPaint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1ERKS_(%class.SkPaint* nonnull %28, %class.SkPaint* dereferenceable(72) %2) #15
  %306 = load %class.SkShader*, %class.SkShader** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %75) #15, !noalias !62
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %197, align 16, !noalias !62
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %198, align 16, !noalias !62
  store float 1.000000e+00, float* %78, align 16, !noalias !62
  store i32 16, i32* %76, align 4, !noalias !62
  %307 = icmp eq %class.SkShader* %306, null
  br i1 %307, label %323, label %308

308:                                              ; preds = %291
  %309 = load i32, i32* %64, align 4, !noalias !62
  %310 = trunc i32 %309 to i8
  %311 = icmp slt i8 %310, 0
  br i1 %311, label %312, label %315

312:                                              ; preds = %308
  %313 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %27) #15
  %314 = zext i8 %313 to i32
  store i32 %314, i32* %64, align 4, !noalias !62
  br label %315

315:                                              ; preds = %312, %308
  %316 = phi i32 [ %314, %312 ], [ %309, %308 ]
  %317 = and i32 %316, 15
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %319, label %321

319:                                              ; preds = %315
  %320 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %4) #15
  br label %324

321:                                              ; preds = %315
  %322 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* nonnull %27, %class.SkMatrix* nonnull %4) #15
  br i1 %322, label %324, label %323

323:                                              ; preds = %321, %291
  store %class.SkShader* null, %class.SkShader** %94, align 8, !alias.scope !62
  br label %377

324:                                              ; preds = %321, %319
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %79) #15, !noalias !62
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %199, align 16, !noalias !62
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %200, align 16, !noalias !62
  store float 1.000000e+00, float* %82, align 16, !noalias !62
  store i32 16, i32* %80, align 4, !noalias !62
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #15, !noalias !62
  store %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*), %class.SkShader** %84, align 8, !noalias !62
  %325 = bitcast %class.SkShader* %306 to %class.SkShaderBase*
  %326 = bitcast %class.SkShader* %306 to void (%class.sk_sp.8*, %class.SkShaderBase*, %class.SkMatrix*)***
  %327 = load void (%class.sk_sp.8*, %class.SkShaderBase*, %class.SkMatrix*)**, void (%class.sk_sp.8*, %class.SkShaderBase*, %class.SkMatrix*)*** %326, align 8, !noalias !62
  %328 = getelementptr inbounds void (%class.sk_sp.8*, %class.SkShaderBase*, %class.SkMatrix*)*, void (%class.sk_sp.8*, %class.SkShaderBase*, %class.SkMatrix*)** %327, i64 13
  %329 = load void (%class.sk_sp.8*, %class.SkShaderBase*, %class.SkMatrix*)*, void (%class.sk_sp.8*, %class.SkShaderBase*, %class.SkMatrix*)** %328, align 8, !noalias !62
  call void %329(%class.sk_sp.8* nonnull sret %6, %class.SkShaderBase* nonnull %325, %class.SkMatrix* nonnull %5) #15, !noalias !62
  %330 = load %class.SkShader*, %class.SkShader** %84, align 8, !noalias !62
  %331 = icmp eq %class.SkShader* %330, null
  br i1 %331, label %334, label %332

332:                                              ; preds = %324
  %333 = bitcast %class.SkShader* %330 to %class.SkShaderBase*
  br label %336

334:                                              ; preds = %324
  %335 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %5) #15
  br label %336

336:                                              ; preds = %334, %332
  %337 = phi %class.SkShaderBase* [ %333, %332 ], [ %325, %334 ]
  %338 = phi %class.SkShader* [ %330, %332 ], [ %306, %334 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %85) #15, !noalias !62
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %85, i8 -1, i64 36, i1 false) #15, !noalias !62
  store i32 -1431655766, i32* %86, align 4, !noalias !62
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %87) #15, !noalias !62
  call void @_ZNK12SkShaderBase16totalLocalMatrixEPK8SkMatrix(%class.SkTCopyOnFirstWrite* nonnull sret %8, %class.SkShaderBase* %337, %class.SkMatrix* null) #15, !noalias !62
  %339 = load i8*, i8** %88, align 8, !noalias !62
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %85, i8* align 4 %339, i64 40, i1 false) #15, !noalias !62
  %340 = load %class.SkMatrix*, %class.SkMatrix** %89, align 8, !noalias !62
  %341 = icmp eq %class.SkMatrix* %340, null
  br i1 %341, label %343, label %342

342:                                              ; preds = %336
  store %class.SkMatrix* null, %class.SkMatrix** %89, align 8, !noalias !62
  br label %343

343:                                              ; preds = %342, %336
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %87) #15, !noalias !62
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %90) #15, !noalias !62
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %201, align 16, !noalias !62
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %202, align 16, !noalias !62
  store float 1.000000e+00, float* %93, align 16, !noalias !62
  store i32 16, i32* %91, align 4, !noalias !62
  %344 = load i32, i32* %86, align 4, !noalias !62
  %345 = trunc i32 %344 to i8
  %346 = icmp slt i8 %345, 0
  br i1 %346, label %347, label %350

347:                                              ; preds = %343
  %348 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %7) #15
  %349 = zext i8 %348 to i32
  store i32 %349, i32* %86, align 4, !noalias !62
  br label %350

350:                                              ; preds = %347, %343
  %351 = phi i32 [ %349, %347 ], [ %344, %343 ]
  %352 = and i32 %351, 15
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %356

354:                                              ; preds = %350
  %355 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %9) #15
  br label %359

356:                                              ; preds = %350
  %357 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* nonnull %7, %class.SkMatrix* nonnull %9) #15
  br i1 %357, label %359, label %358

358:                                              ; preds = %356
  store %class.SkShader* null, %class.SkShader** %94, align 8, !alias.scope !62
  br label %363

359:                                              ; preds = %356, %354
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %95) #15, !noalias !62
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %96) #15, !noalias !62
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %97) #15, !noalias !62
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %203, align 16, !alias.scope !65, !noalias !62
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %204, align 16, !alias.scope !65, !noalias !62
  store float 1.000000e+00, float* %100, align 16, !alias.scope !65, !noalias !62
  store i32 16, i32* %98, align 4, !alias.scope !65, !noalias !62
  %360 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %12, %class.SkMatrix* nonnull dereferenceable(40) %9, %class.SkMatrix* nonnull dereferenceable(40) %4) #15, !noalias !62
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %205, align 16, !alias.scope !70, !noalias !62
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %206, align 16, !alias.scope !70, !noalias !62
  store float 1.000000e+00, float* %103, align 16, !alias.scope !70, !noalias !62
  store i32 16, i32* %101, align 4, !alias.scope !70, !noalias !62
  %361 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %11, %class.SkMatrix* nonnull dereferenceable(40) %12, %class.SkMatrix* nonnull dereferenceable(40) %7) #15, !noalias !62
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %207, align 16, !alias.scope !75, !noalias !62
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %208, align 16, !alias.scope !75, !noalias !62
  store float 1.000000e+00, float* %106, align 16, !alias.scope !75, !noalias !62
  store i32 16, i32* %104, align 4, !alias.scope !75, !noalias !62
  %362 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %10, %class.SkMatrix* nonnull dereferenceable(40) %11, %class.SkMatrix* nonnull dereferenceable(40) %5) #15, !noalias !62
  call void @_ZNK8SkShader19makeWithLocalMatrixERK8SkMatrix(%class.sk_sp.8* nonnull sret %29, %class.SkShader* nonnull %338, %class.SkMatrix* nonnull dereferenceable(40) %10) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %97) #15, !noalias !62
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %96) #15, !noalias !62
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %95) #15, !noalias !62
  br label %363

363:                                              ; preds = %359, %358
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %90) #15, !noalias !62
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %85) #15, !noalias !62
  %364 = load %class.SkShader*, %class.SkShader** %84, align 8, !noalias !62
  %365 = icmp eq %class.SkShader* %364, null
  br i1 %365, label %376, label %366

366:                                              ; preds = %363
  %367 = getelementptr inbounds %class.SkShader, %class.SkShader* %364, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %368 = atomicrmw add i32* %367, i32 -1 acq_rel
  %369 = icmp eq i32 %368, 1
  br i1 %369, label %370, label %376

370:                                              ; preds = %366
  %371 = bitcast %class.SkShader* %364 to %class.SkRefCntBase*
  %372 = bitcast %class.SkShader* %364 to void (%class.SkRefCntBase*)***
  %373 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %372, align 8
  %374 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %373, i64 2
  %375 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %374, align 8
  call void %375(%class.SkRefCntBase* nonnull %371) #15
  br label %376

376:                                              ; preds = %370, %366, %363
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #15, !noalias !62
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %79) #15, !noalias !62
  br label %377

377:                                              ; preds = %323, %376
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %75) #15, !noalias !62
  call void @_ZN7SkPaint9setShaderE5sk_spI8SkShaderE(%class.SkPaint* nonnull %28, %class.sk_sp.8* nonnull %29) #15
  %378 = load %class.SkShader*, %class.SkShader** %94, align 8
  %379 = icmp eq %class.SkShader* %378, null
  br i1 %379, label %390, label %380

380:                                              ; preds = %377
  %381 = getelementptr inbounds %class.SkShader, %class.SkShader* %378, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %382 = atomicrmw add i32* %381, i32 -1 acq_rel
  %383 = icmp eq i32 %382, 1
  br i1 %383, label %384, label %390

384:                                              ; preds = %380
  %385 = bitcast %class.SkShader* %378 to %class.SkRefCntBase*
  %386 = bitcast %class.SkShader* %378 to void (%class.SkRefCntBase*)***
  %387 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %386, align 8
  %388 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %387, i64 2
  %389 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %388, align 8
  call void %389(%class.SkRefCntBase* nonnull %385) #15
  br label %390

390:                                              ; preds = %377, %380, %384
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %107) #15
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %108) #15
  %391 = load i32, i32* %109, align 16
  %392 = load i32, i32* %110, align 4
  %393 = load i32, i32* %111, align 8
  %394 = load i32, i32* %112, align 4
  %395 = load i32, i32* %113, align 16
  %396 = load i32, i32* %114, align 4
  %397 = load i32, i32* %115, align 8
  %398 = load i32, i32* %116, align 4
  %399 = load i32, i32* %117, align 16
  store i32 %391, i32* %118, align 4
  store i32 %394, i32* %120, align 4
  store float 0.000000e+00, float* %121, align 4
  store i32 %397, i32* %123, align 4
  store i32 %392, i32* %125, align 4
  store i32 %395, i32* %127, align 4
  store float 0.000000e+00, float* %128, align 4
  store i32 %398, i32* %130, align 4
  store <4 x float> <float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00>, <4 x float>* %209, align 4
  store i32 %393, i32* %133, align 4
  store i32 %396, i32* %135, align 4
  store float 0.000000e+00, float* %136, align 4
  store i32 %399, i32* %138, align 4
  %400 = call dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44* nonnull %30, %class.SkM44* nonnull dereferenceable(64) %23, %class.SkM44* nonnull dereferenceable(64) %31) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* nonnull align 4 %107, i64 64, i1 false) #15
  %401 = load i32, i32* %139, align 4, !noalias !80
  %402 = load i32, i32* %141, align 4, !noalias !80
  %403 = load i32, i32* %143, align 4, !noalias !80
  %404 = load i32, i32* %145, align 4, !noalias !80
  %405 = load i32, i32* %147, align 4, !noalias !80
  %406 = load i32, i32* %149, align 4, !noalias !80
  %407 = load i32, i32* %151, align 4, !noalias !80
  %408 = load i32, i32* %153, align 4, !noalias !80
  %409 = load i32, i32* %155, align 4, !noalias !80
  store i32 %401, i32* %157, align 8
  store i32 %402, i32* %159, align 4
  store i32 %403, i32* %161, align 8
  store i32 %404, i32* %163, align 4
  store i32 %405, i32* %165, align 8
  store i32 %406, i32* %167, align 4
  store i32 %407, i32* %169, align 8
  store i32 %408, i32* %171, align 4
  store i32 %409, i32* %173, align 8
  store i32 128, i32* %174, align 4
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %108) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %107) #15
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %175) #15
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %176) #15
  %410 = call { <2 x float>, <2 x float> } @_ZNK10SkGlyphRun12sourceBoundsERK7SkPaint(%class.SkGlyphRun* nonnull %19, %class.SkPaint* dereferenceable(72) %2) #15
  %411 = extractvalue { <2 x float>, <2 x float> } %410, 0
  store <2 x float> %411, <2 x float>* %177, align 8
  %412 = extractvalue { <2 x float>, <2 x float> } %410, 1
  store <2 x float> %412, <2 x float>* %178, align 8
  call void @_ZN14SkGlyphRunListC1ERK10SkGlyphRunRK6SkRect7SkPoint(%class.SkGlyphRunList* nonnull %32, %class.SkGlyphRun* nonnull dereferenceable(96) %19, %struct.SkRect* nonnull dereferenceable(16) %34, <2 x float> zeroinitializer) #15
  %413 = load float, float* %179, align 4
  %414 = fmul float %413, 0.000000e+00
  %415 = load float, float* %158, align 4
  %416 = fmul float %414, %415
  %417 = load float, float* %160, align 4
  %418 = fmul float %416, %417
  %419 = load float, float* %162, align 4
  %420 = fmul float %418, %419
  %421 = load float, float* %164, align 4
  %422 = fmul float %420, %421
  %423 = load float, float* %166, align 4
  %424 = fmul float %422, %423
  %425 = load float, float* %168, align 4
  %426 = fmul float %424, %425
  %427 = load float, float* %170, align 4
  %428 = fmul float %426, %427
  %429 = load float, float* %172, align 4
  %430 = fmul float %428, %429
  %431 = fcmp oeq float %430, 0.000000e+00
  br i1 %431, label %432, label %450

432:                                              ; preds = %390
  %433 = load %class.SkGlyphRun*, %class.SkGlyphRun** %180, align 8
  %434 = load i64, i64* %181, align 8
  %435 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %433, i64 %434
  %436 = icmp eq i64 %434, 0
  br i1 %436, label %445, label %439

437:                                              ; preds = %439
  %438 = icmp eq %class.SkGlyphRun* %444, %435
  br i1 %438, label %445, label %439

439:                                              ; preds = %432, %437
  %440 = phi %class.SkGlyphRun* [ %444, %437 ], [ %433, %432 ]
  %441 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %440, i64 0, i32 3, i32 1
  %442 = load i64, i64* %441, align 8
  %443 = icmp eq i64 %442, 0
  %444 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %440, i64 1
  br i1 %443, label %437, label %449

445:                                              ; preds = %437, %432
  %446 = load void (%class.SkBaseDevice*, %class.SkGlyphRunList*, %class.SkPaint*)**, void (%class.SkBaseDevice*, %class.SkGlyphRunList*, %class.SkPaint*)*** %182, align 8
  %447 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkGlyphRunList*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkGlyphRunList*, %class.SkPaint*)** %446, i64 43
  %448 = load void (%class.SkBaseDevice*, %class.SkGlyphRunList*, %class.SkPaint*)*, void (%class.SkBaseDevice*, %class.SkGlyphRunList*, %class.SkPaint*)** %447, align 8
  call void %448(%class.SkBaseDevice* %0, %class.SkGlyphRunList* nonnull dereferenceable(48) %32, %class.SkPaint* nonnull dereferenceable(72) %28) #15
  br label %450

449:                                              ; preds = %439
  call void @_ZN12SkBaseDevice32simplifyGlyphRunRSXFormAndRedrawERK14SkGlyphRunListRK7SkPaint(%class.SkBaseDevice* %0, %class.SkGlyphRunList* nonnull dereferenceable(48) %32, %class.SkPaint* nonnull dereferenceable(72) %28) #15
  br label %450

450:                                              ; preds = %390, %445, %449
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %176) #15
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %175) #15
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %28) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %73) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %63) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #15
  %451 = add nuw i64 %292, 1
  %452 = icmp eq i64 %451, %263
  br i1 %452, label %268, label %291

453:                                              ; preds = %290, %258
  %454 = getelementptr inbounds %class.SkGlyphRun, %class.SkGlyphRun* %212, i64 1
  %455 = icmp eq %class.SkGlyphRun* %454, %39
  br i1 %455, label %210, label %211
}

declare { <2 x float>, <2 x float> } @_ZNK10SkGlyphRun12sourceBoundsERK7SkPaint(%class.SkGlyphRun*, %class.SkPaint* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN14SkGlyphRunListC1ERK10SkGlyphRunRK6SkRect7SkPoint(%class.SkGlyphRunList*, %class.SkGlyphRun* dereferenceable(96), %struct.SkRect* dereferenceable(16), <2 x float>) unnamed_addr #1

declare void @_ZN10SkGlyphRunC1ERK6SkFont6SkSpanIK7SkPointES3_IKtES3_IKcES3_IKjES6_(%class.SkGlyphRun*, %class.SkFont* dereferenceable(24), %struct.SkPoint*, i64, i16*, i64, %class.SkSpan* byval(%class.SkSpan) align 8, %class.SkSpan.157* byval(%class.SkSpan.157) align 8, %class.SkSpan.158* byval(%class.SkSpan.158) align 8) unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10setRSXformERK9SkRSXform(%class.SkMatrix*, %struct.SkRSXform* dereferenceable(16)) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN12SkBaseDevice11makeSurfaceERK11SkImageInfoRK14SkSurfaceProps(%class.sk_sp.195* noalias nocapture sret, %class.SkBaseDevice* nocapture readnone, %struct.SkImageInfo* nocapture readnone dereferenceable(24), %class.SkSurfaceProps* nocapture readnone dereferenceable(8)) unnamed_addr #7 align 2 {
  %5 = getelementptr inbounds %class.sk_sp.195, %class.sk_sp.195* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN16SkNoPixelsDevice6onSaveEv(%class.SkNoPixelsDevice* nocapture readonly) unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %3 = bitcast i8* %2 to %"struct.SkNoPixelsDevice::ClipState"**
  %4 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %3, align 8
  %5 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 1
  %9 = and i64 %8, 2147483647
  %10 = add nsw i64 %9, -1
  %11 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %4, i64 %10, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkNoPixelsDevice9onRestoreEv(%class.SkNoPixelsDevice*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %3 = bitcast i8* %2 to %"struct.SkNoPixelsDevice::ClipState"**
  %4 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %3, align 8
  %5 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 1
  %9 = and i64 %8, 2147483647
  %10 = add nsw i64 %9, -1
  %11 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %4, i64 %10, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %1
  %15 = add nsw i32 %12, -1
  store i32 %15, i32* %11, align 8
  br label %23

16:                                               ; preds = %1
  %17 = bitcast i8* %2 to %class.SkTArray.196*
  %18 = and i64 %7, 4294967294
  %19 = add nuw nsw i64 %18, 4294967294
  %20 = and i64 %19, 4294967294
  %21 = and i64 %7, -4294967295
  %22 = or i64 %20, %21
  store i64 %22, i64* %6, align 8
  tail call void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.196* %17, i32 0, i32 2) #15
  br label %23

23:                                               ; preds = %16, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(32) %class.SkConservativeClip* @_ZN16SkNoPixelsDevice12writableClipEv(%class.SkNoPixelsDevice*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.SkConservativeClip, align 8
  %3 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %4 = bitcast i8* %3 to %"struct.SkNoPixelsDevice::ClipState"**
  %5 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %4, align 8
  %6 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %7 = bitcast i8* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = lshr i64 %8, 1
  %10 = and i64 %9, 2147483647
  %11 = add nsw i64 %10, -1
  %12 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %5, i64 %11
  %13 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %5, i64 %11, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %32

16:                                               ; preds = %1
  %17 = bitcast i8* %3 to %class.SkTArray.196*
  %18 = add nsw i32 %14, -1
  store i32 %18, i32* %13, align 8
  %19 = bitcast %class.SkConservativeClip* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19)
  %20 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 8 %20, i64 32, i1 false)
  tail call void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.196* %17, i32 1, i32 1) #15
  %21 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %4, align 8
  %22 = load i64, i64* %7, align 8
  %23 = lshr i64 %22, 1
  %24 = and i64 %23, 2147483647
  %25 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %21, i64 %24
  %26 = add i64 %22, 2
  %27 = and i64 %26, 4294967294
  %28 = and i64 %22, -4294967295
  %29 = or i64 %27, %28
  store i64 %29, i64* %7, align 8
  %30 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* nonnull align 8 %19, i64 32, i1 false)
  %31 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %21, i64 %24, i32 1
  store i32 0, i32* %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19)
  br label %32

32:                                               ; preds = %1, %16
  %33 = phi %"struct.SkNoPixelsDevice::ClipState"* [ %25, %16 ], [ %12, %1 ]
  %34 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %33, i64 0, i32 0
  ret %class.SkConservativeClip* %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkNoPixelsDevice10onClipRectERK6SkRect8SkClipOpb(%class.SkNoPixelsDevice*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %class.SkConservativeClip, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %8 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %9 = bitcast i8* %8 to %"struct.SkNoPixelsDevice::ClipState"**
  %10 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %9, align 8
  %11 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = lshr i64 %13, 1
  %15 = and i64 %14, 2147483647
  %16 = add nsw i64 %15, -1
  %17 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %10, i64 %16
  %18 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %10, i64 %16, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %37

21:                                               ; preds = %4
  %22 = bitcast i8* %8 to %class.SkTArray.196*
  %23 = add nsw i32 %19, -1
  store i32 %23, i32* %18, align 8
  %24 = bitcast %class.SkConservativeClip* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24)
  %25 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 %25, i64 32, i1 false) #15
  tail call void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.196* %22, i32 1, i32 1) #15
  %26 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %9, align 8
  %27 = load i64, i64* %12, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %26, i64 %29
  %31 = add i64 %27, 2
  %32 = and i64 %31, 4294967294
  %33 = and i64 %27, -4294967295
  %34 = or i64 %32, %33
  store i64 %34, i64* %12, align 8
  %35 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* nonnull align 8 %24, i64 32, i1 false) #15
  %36 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %26, i64 %29, i32 1
  store i32 0, i32* %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24)
  br label %37

37:                                               ; preds = %4, %21
  %38 = phi %"struct.SkNoPixelsDevice::ClipState"* [ %30, %21 ], [ %17, %4 ]
  %39 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %38, i64 0, i32 0
  %40 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 1, i32 2
  %41 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #15
  %42 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = shl nuw i64 %46, 32
  %48 = zext i32 %43 to i64
  %49 = or i64 %47, %48
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 0, i64* %50, align 8
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %49, i64* %51, align 8
  call void @_ZN18SkConservativeClip6opRectERK6SkRectRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkConservativeClip* %39, %struct.SkRect* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %40, %struct.SkIRect* nonnull dereferenceable(16) %7, i32 %2, i1 zeroext %3) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #15
  ret void
}

declare void @_ZN18SkConservativeClip6opRectERK6SkRectRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkConservativeClip*, %struct.SkRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkIRect* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkNoPixelsDevice11onClipRRectERK7SkRRect8SkClipOpb(%class.SkNoPixelsDevice*, %class.SkRRect* dereferenceable(52), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %class.SkConservativeClip, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %8 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %9 = bitcast i8* %8 to %"struct.SkNoPixelsDevice::ClipState"**
  %10 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %9, align 8
  %11 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = lshr i64 %13, 1
  %15 = and i64 %14, 2147483647
  %16 = add nsw i64 %15, -1
  %17 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %10, i64 %16
  %18 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %10, i64 %16, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %37

21:                                               ; preds = %4
  %22 = bitcast i8* %8 to %class.SkTArray.196*
  %23 = add nsw i32 %19, -1
  store i32 %23, i32* %18, align 8
  %24 = bitcast %class.SkConservativeClip* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24)
  %25 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 %25, i64 32, i1 false) #15
  tail call void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.196* %22, i32 1, i32 1) #15
  %26 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %9, align 8
  %27 = load i64, i64* %12, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %26, i64 %29
  %31 = add i64 %27, 2
  %32 = and i64 %31, 4294967294
  %33 = and i64 %27, -4294967295
  %34 = or i64 %32, %33
  store i64 %34, i64* %12, align 8
  %35 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* nonnull align 8 %24, i64 32, i1 false) #15
  %36 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %26, i64 %29, i32 1
  store i32 0, i32* %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24)
  br label %37

37:                                               ; preds = %4, %21
  %38 = phi %"struct.SkNoPixelsDevice::ClipState"* [ %30, %21 ], [ %17, %4 ]
  %39 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %38, i64 0, i32 0
  %40 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 1, i32 2
  %41 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #15
  %42 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = shl nuw i64 %46, 32
  %48 = zext i32 %43 to i64
  %49 = or i64 %47, %48
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 0, i64* %50, align 8
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %49, i64* %51, align 8
  call void @_ZN18SkConservativeClip7opRRectERK7SkRRectRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkConservativeClip* %39, %class.SkRRect* dereferenceable(52) %1, %class.SkMatrix* dereferenceable(40) %40, %struct.SkIRect* nonnull dereferenceable(16) %7, i32 %2, i1 zeroext %3) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #15
  ret void
}

declare void @_ZN18SkConservativeClip7opRRectERK7SkRRectRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkConservativeClip*, %class.SkRRect* dereferenceable(52), %class.SkMatrix* dereferenceable(40), %struct.SkIRect* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkNoPixelsDevice10onClipPathERK6SkPath8SkClipOpb(%class.SkNoPixelsDevice*, %class.SkPath* dereferenceable(16), i32, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %class.SkConservativeClip, align 8
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %struct.SkIRect*
  %8 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %9 = bitcast i8* %8 to %"struct.SkNoPixelsDevice::ClipState"**
  %10 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %9, align 8
  %11 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %12 = bitcast i8* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = lshr i64 %13, 1
  %15 = and i64 %14, 2147483647
  %16 = add nsw i64 %15, -1
  %17 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %10, i64 %16
  %18 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %10, i64 %16, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %21, label %37

21:                                               ; preds = %4
  %22 = bitcast i8* %8 to %class.SkTArray.196*
  %23 = add nsw i32 %19, -1
  store i32 %23, i32* %18, align 8
  %24 = bitcast %class.SkConservativeClip* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24)
  %25 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %24, i8* align 8 %25, i64 32, i1 false) #15
  tail call void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.196* %22, i32 1, i32 1) #15
  %26 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %9, align 8
  %27 = load i64, i64* %12, align 8
  %28 = lshr i64 %27, 1
  %29 = and i64 %28, 2147483647
  %30 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %26, i64 %29
  %31 = add i64 %27, 2
  %32 = and i64 %31, 4294967294
  %33 = and i64 %27, -4294967295
  %34 = or i64 %32, %33
  store i64 %34, i64* %12, align 8
  %35 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* nonnull align 8 %24, i64 32, i1 false) #15
  %36 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %26, i64 %29, i32 1
  store i32 0, i32* %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24)
  br label %37

37:                                               ; preds = %4, %21
  %38 = phi %"struct.SkNoPixelsDevice::ClipState"* [ %30, %21 ], [ %17, %4 ]
  %39 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %38, i64 0, i32 0
  %40 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 1, i32 2
  %41 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #15
  %42 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i64
  %47 = shl nuw i64 %46, 32
  %48 = zext i32 %43 to i64
  %49 = or i64 %47, %48
  %50 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  store i64 0, i64* %50, align 8
  %51 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  store i64 %49, i64* %51, align 8
  call void @_ZN18SkConservativeClip6opPathERK6SkPathRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkConservativeClip* %39, %class.SkPath* dereferenceable(16) %1, %class.SkMatrix* dereferenceable(40) %40, %struct.SkIRect* nonnull dereferenceable(16) %7, i32 %2, i1 zeroext %3) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #15
  ret void
}

declare void @_ZN18SkConservativeClip6opPathERK6SkPathRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkConservativeClip*, %class.SkPath* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %struct.SkIRect* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkNoPixelsDevice12onClipRegionERK8SkRegion8SkClipOp(%class.SkNoPixelsDevice*, %class.SkRegion* dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkM44, align 4
  %5 = alloca %class.SkConservativeClip, align 8
  %6 = alloca %class.SkConservativeClip, align 8
  %7 = alloca %class.SkConservativeClip, align 8
  %8 = alloca %class.SkRegion, align 8
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRect*
  %11 = alloca %class.SkMatrix, align 4
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %struct.SkIRect*
  %14 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 1
  %15 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %14, align 8
  %16 = icmp eq %"struct.SkRegion::RunHead"* %15, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br i1 %16, label %17, label %54

17:                                               ; preds = %3
  %18 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %19 = bitcast i8* %18 to %"struct.SkNoPixelsDevice::ClipState"**
  %20 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %19, align 8
  %21 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %22 = bitcast i8* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = lshr i64 %23, 1
  %25 = and i64 %24, 2147483647
  %26 = add nsw i64 %25, -1
  %27 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %20, i64 %26
  %28 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %20, i64 %26, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %17
  %32 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %27 to i8*
  br label %49

33:                                               ; preds = %17
  %34 = bitcast i8* %18 to %class.SkTArray.196*
  %35 = add nsw i32 %29, -1
  store i32 %35, i32* %28, align 8
  %36 = bitcast %class.SkConservativeClip* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %36)
  %37 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 %37, i64 32, i1 false) #15
  tail call void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.196* %34, i32 1, i32 1) #15
  %38 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %19, align 8
  %39 = load i64, i64* %22, align 8
  %40 = lshr i64 %39, 1
  %41 = and i64 %40, 2147483647
  %42 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %38, i64 %41
  %43 = add i64 %39, 2
  %44 = and i64 %43, 4294967294
  %45 = and i64 %39, -4294967295
  %46 = or i64 %44, %45
  store i64 %46, i64* %22, align 8
  %47 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %36, i64 32, i1 false) #15
  %48 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %38, i64 %41, i32 1
  store i32 0, i32* %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %36)
  br label %49

49:                                               ; preds = %31, %33
  %50 = phi i8* [ %32, %31 ], [ %47, %33 ]
  %51 = phi %"struct.SkNoPixelsDevice::ClipState"* [ %27, %31 ], [ %42, %33 ]
  %52 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %51, i64 0, i32 0, i32 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 16, i1 false) #15
  store i8 1, i8* %52, align 8
  %53 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %51, i64 0, i32 0, i32 2
  store i8 0, i8* %53, align 1
  br label %226

54:                                               ; preds = %3
  %55 = bitcast %class.SkM44* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %55) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %55, i8* align 4 bitcast ([16 x float]* @constinit to i8*), i64 64, i1 false) #15
  %56 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 5
  %57 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 5, i32 0, i64 12
  %58 = load float, float* %57, align 4
  %59 = tail call float @llvm.floor.f32(float %58) #15
  %60 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 12
  store float %59, float* %60, align 4
  %61 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 5, i32 0, i64 13
  %62 = load float, float* %61, align 4
  %63 = tail call float @llvm.floor.f32(float %62) #15
  %64 = getelementptr inbounds %class.SkM44, %class.SkM44* %4, i64 0, i32 0, i64 13
  store float %63, float* %64, align 4
  %65 = call zeroext i1 @_ZNK5SkM44eqERKS_(%class.SkM44* nonnull %4, %class.SkM44* dereferenceable(64) %56) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %55) #15
  br i1 %65, label %66, label %117

66:                                               ; preds = %54
  %67 = load float, float* %57, align 4
  %68 = call float @llvm.floor.f32(float %67) #15
  %69 = fcmp olt float %68, 0x41DFFFFFE0000000
  %70 = select i1 %69, float %68, float 0x41DFFFFFE0000000
  %71 = fcmp ogt float %70, 0xC1DFFFFFE0000000
  %72 = select i1 %71, float %70, float 0xC1DFFFFFE0000000
  %73 = fptosi float %72 to i32
  %74 = load float, float* %61, align 4
  %75 = call float @llvm.floor.f32(float %74) #15
  %76 = fcmp olt float %75, 0x41DFFFFFE0000000
  %77 = select i1 %76, float %75, float 0x41DFFFFFE0000000
  %78 = fcmp ogt float %77, 0xC1DFFFFFE0000000
  %79 = select i1 %78, float %77, float 0xC1DFFFFFE0000000
  %80 = fptosi float %79 to i32
  %81 = bitcast %class.SkRegion* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #15
  %82 = bitcast %class.SkRegion* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* nonnull %8, %class.SkRegion* dereferenceable(24) %1) #15
  %83 = sub nsw i32 0, %73
  %84 = sub nsw i32 0, %80
  call void @_ZNK8SkRegion9translateEiiPS_(%class.SkRegion* nonnull %8, i32 %83, i32 %84, %class.SkRegion* nonnull %8) #15
  %85 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %86 = bitcast i8* %85 to %"struct.SkNoPixelsDevice::ClipState"**
  %87 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %86, align 8
  %88 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %89 = bitcast i8* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = lshr i64 %90, 1
  %92 = and i64 %91, 2147483647
  %93 = add nsw i64 %92, -1
  %94 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %87, i64 %93
  %95 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %87, i64 %93, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = icmp sgt i32 %96, 0
  br i1 %97, label %98, label %114

98:                                               ; preds = %66
  %99 = bitcast i8* %85 to %class.SkTArray.196*
  %100 = add nsw i32 %96, -1
  store i32 %100, i32* %95, align 8
  %101 = bitcast %class.SkConservativeClip* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %101)
  %102 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %101, i8* align 8 %102, i64 32, i1 false) #15
  call void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.196* %99, i32 1, i32 1) #15
  %103 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %86, align 8
  %104 = load i64, i64* %89, align 8
  %105 = lshr i64 %104, 1
  %106 = and i64 %105, 2147483647
  %107 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %103, i64 %106
  %108 = add i64 %104, 2
  %109 = and i64 %108, 4294967294
  %110 = and i64 %104, -4294967295
  %111 = or i64 %109, %110
  store i64 %111, i64* %89, align 8
  %112 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %107 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* nonnull align 8 %101, i64 32, i1 false) #15
  %113 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %103, i64 %106, i32 1
  store i32 0, i32* %113, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %101)
  br label %114

114:                                              ; preds = %66, %98
  %115 = phi %"struct.SkNoPixelsDevice::ClipState"* [ %107, %98 ], [ %94, %66 ]
  %116 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %115, i64 0, i32 0
  call void @_ZN18SkConservativeClip8opRegionERK8SkRegionNS0_2OpE(%class.SkConservativeClip* %116, %class.SkRegion* nonnull dereferenceable(24) %8, i32 %2) #15
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #15
  br label %226

117:                                              ; preds = %54
  %118 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %119 = bitcast i8* %118 to %"struct.SkNoPixelsDevice::ClipState"**
  %120 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %119, align 8
  %121 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %122 = bitcast i8* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = lshr i64 %123, 1
  %125 = and i64 %124, 2147483647
  %126 = add nsw i64 %125, -1
  %127 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %120, i64 %126
  %128 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %120, i64 %126, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = icmp sgt i32 %129, 0
  br i1 %130, label %131, label %147

131:                                              ; preds = %117
  %132 = bitcast i8* %118 to %class.SkTArray.196*
  %133 = add nsw i32 %129, -1
  store i32 %133, i32* %128, align 8
  %134 = bitcast %class.SkConservativeClip* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %134)
  %135 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %127 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %134, i8* align 8 %135, i64 32, i1 false) #15
  call void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.196* %132, i32 1, i32 1) #15
  %136 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %119, align 8
  %137 = load i64, i64* %122, align 8
  %138 = lshr i64 %137, 1
  %139 = and i64 %138, 2147483647
  %140 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %136, i64 %139
  %141 = add i64 %137, 2
  %142 = and i64 %141, 4294967294
  %143 = and i64 %137, -4294967295
  %144 = or i64 %142, %143
  store i64 %144, i64* %122, align 8
  %145 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %145, i8* nonnull align 8 %134, i64 32, i1 false) #15
  %146 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %136, i64 %139, i32 1
  store i32 0, i32* %146, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %134)
  br label %147

147:                                              ; preds = %117, %131
  %148 = phi %"struct.SkNoPixelsDevice::ClipState"* [ %140, %131 ], [ %127, %117 ]
  %149 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %148, i64 0, i32 0
  %150 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150) #15
  %151 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = sitofp i32 %152 to float
  %154 = insertelement <2 x float> undef, float %153, i32 0
  %155 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = sitofp i32 %156 to float
  %158 = insertelement <2 x float> %154, float %157, i32 1
  %159 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 2
  %160 = load i32, i32* %159, align 4
  %161 = sitofp i32 %160 to float
  %162 = insertelement <2 x float> undef, float %161, i32 0
  %163 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 3
  %164 = load i32, i32* %163, align 4
  %165 = sitofp i32 %164 to float
  %166 = insertelement <2 x float> %162, float %165, i32 1
  %167 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  store <2 x float> %158, <2 x float>* %167, align 8
  %168 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  store <2 x float> %166, <2 x float>* %168, align 8
  %169 = bitcast %class.SkMatrix* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %169) #15
  %170 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 6
  %171 = bitcast %class.SkM44* %170 to i32*
  %172 = load i32, i32* %171, align 4, !noalias !83
  %173 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 6, i32 0, i64 4
  %174 = bitcast float* %173 to i32*
  %175 = load i32, i32* %174, align 4, !noalias !83
  %176 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 6, i32 0, i64 12
  %177 = bitcast float* %176 to i32*
  %178 = load i32, i32* %177, align 4, !noalias !83
  %179 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 6, i32 0, i64 1
  %180 = bitcast float* %179 to i32*
  %181 = load i32, i32* %180, align 4, !noalias !83
  %182 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 6, i32 0, i64 5
  %183 = bitcast float* %182 to i32*
  %184 = load i32, i32* %183, align 4, !noalias !83
  %185 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 6, i32 0, i64 13
  %186 = bitcast float* %185 to i32*
  %187 = load i32, i32* %186, align 4, !noalias !83
  %188 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 6, i32 0, i64 3
  %189 = bitcast float* %188 to i32*
  %190 = load i32, i32* %189, align 4, !noalias !83
  %191 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 6, i32 0, i64 7
  %192 = bitcast float* %191 to i32*
  %193 = load i32, i32* %192, align 4, !noalias !83
  %194 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 6, i32 0, i64 15
  %195 = bitcast float* %194 to i32*
  %196 = load i32, i32* %195, align 4, !noalias !83
  %197 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 1
  %198 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 1
  %199 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 2
  %200 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 3
  %201 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 4
  %202 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 5
  %203 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 6
  %204 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 7
  %205 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %11, i64 0, i32 0, i64 8
  %206 = bitcast %class.SkMatrix* %11 to i32*
  store i32 %172, i32* %206, align 4, !alias.scope !86
  %207 = bitcast float* %198 to i32*
  store i32 %175, i32* %207, align 4, !alias.scope !86
  %208 = bitcast float* %199 to i32*
  store i32 %178, i32* %208, align 4, !alias.scope !86
  %209 = bitcast float* %200 to i32*
  store i32 %181, i32* %209, align 4, !alias.scope !86
  %210 = bitcast float* %201 to i32*
  store i32 %184, i32* %210, align 4, !alias.scope !86
  %211 = bitcast float* %202 to i32*
  store i32 %187, i32* %211, align 4, !alias.scope !86
  %212 = bitcast float* %203 to i32*
  store i32 %190, i32* %212, align 4, !alias.scope !86
  %213 = bitcast float* %204 to i32*
  store i32 %193, i32* %213, align 4, !alias.scope !86
  %214 = bitcast float* %205 to i32*
  store i32 %196, i32* %214, align 4, !alias.scope !86
  store i32 128, i32* %197, align 4, !alias.scope !86
  %215 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %215) #15
  %216 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 1
  %219 = load i32, i32* %218, align 4
  %220 = zext i32 %219 to i64
  %221 = shl nuw i64 %220, 32
  %222 = zext i32 %217 to i64
  %223 = or i64 %221, %222
  %224 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 0, i64* %224, align 8
  %225 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  store i64 %223, i64* %225, align 8
  call void @_ZN18SkConservativeClip6opRectERK6SkRectRK8SkMatrixRK7SkIRectN8SkRegion2OpEb(%class.SkConservativeClip* %149, %struct.SkRect* nonnull dereferenceable(16) %10, %class.SkMatrix* nonnull dereferenceable(40) %11, %struct.SkIRect* nonnull dereferenceable(16) %13, i32 %2, i1 zeroext false) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %215) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %169) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150) #15
  br label %226

226:                                              ; preds = %114, %147, %49
  ret void
}

declare void @_ZN8SkRegionC1ERKS_(%class.SkRegion*, %class.SkRegion* dereferenceable(24)) unnamed_addr #1

declare void @_ZN18SkConservativeClip8opRegionERK8SkRegionNS0_2OpE(%class.SkConservativeClip*, %class.SkRegion* dereferenceable(24), i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkRegionD1Ev(%class.SkRegion*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkNoPixelsDevice12onClipShaderE5sk_spI8SkShaderE(%class.SkNoPixelsDevice*, %class.sk_sp.8* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkConservativeClip, align 8
  %4 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %5 = bitcast i8* %4 to %"struct.SkNoPixelsDevice::ClipState"**
  %6 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %5, align 8
  %7 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = lshr i64 %9, 1
  %11 = and i64 %10, 2147483647
  %12 = add nsw i64 %11, -1
  %13 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %6, i64 %12
  %14 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %6, i64 %12, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %33

17:                                               ; preds = %2
  %18 = bitcast i8* %4 to %class.SkTArray.196*
  %19 = add nsw i32 %15, -1
  store i32 %19, i32* %14, align 8
  %20 = bitcast %class.SkConservativeClip* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20)
  %21 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %20, i8* align 8 %21, i64 32, i1 false) #15
  tail call void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.196* %18, i32 1, i32 1) #15
  %22 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %5, align 8
  %23 = load i64, i64* %8, align 8
  %24 = lshr i64 %23, 1
  %25 = and i64 %24, 2147483647
  %26 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %22, i64 %25
  %27 = add i64 %23, 2
  %28 = and i64 %27, 4294967294
  %29 = and i64 %23, -4294967295
  %30 = or i64 %28, %29
  store i64 %30, i64* %8, align 8
  %31 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* nonnull align 8 %20, i64 32, i1 false) #15
  %32 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %22, i64 %25, i32 1
  store i32 0, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20)
  br label %33

33:                                               ; preds = %2, %17
  %34 = phi %"struct.SkNoPixelsDevice::ClipState"* [ %26, %17 ], [ %13, %2 ]
  %35 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %1, i64 0, i32 0
  %36 = load %class.SkShader*, %class.SkShader** %35, align 8
  store %class.SkShader* null, %class.SkShader** %35, align 8
  %37 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %34, i64 0, i32 0, i32 1
  store i8 0, i8* %37, align 8
  %38 = icmp eq %class.SkShader* %36, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %class.SkShader, %class.SkShader* %36, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw add i32* %40, i32 -1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %49

43:                                               ; preds = %39
  %44 = bitcast %class.SkShader* %36 to %class.SkRefCntBase*
  %45 = bitcast %class.SkShader* %36 to void (%class.SkRefCntBase*)***
  %46 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %46, i64 2
  %48 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %47, align 8
  tail call void %48(%class.SkRefCntBase* nonnull %44) #15
  br label %49

49:                                               ; preds = %33, %39, %43
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkNoPixelsDevice13onReplaceClipERK7SkIRect(%class.SkNoPixelsDevice*, %struct.SkIRect* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkConservativeClip, align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %struct.SkIRect*
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %struct.SkIRect*
  %10 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #15
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %12 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 6
  %13 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #15
  %14 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = sitofp i32 %15 to float
  %17 = insertelement <2 x float> undef, float %16, i32 0
  %18 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = sitofp i32 %19 to float
  %21 = insertelement <2 x float> %17, float %20, i32 1
  %22 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = sitofp i32 %23 to float
  %25 = insertelement <2 x float> undef, float %24, i32 0
  %26 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = sitofp i32 %27 to float
  %29 = insertelement <2 x float> %25, float %28, i32 1
  %30 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %21, <2 x float>* %30, align 8
  %31 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %29, <2 x float>* %31, align 8
  %32 = call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %12, %struct.SkRect* nonnull dereferenceable(16) %7) #15
  %33 = extractvalue { <2 x float>, <2 x float> } %32, 0
  %34 = extractvalue { <2 x float>, <2 x float> } %32, 1
  %35 = extractelement <2 x float> %33, i32 0
  %36 = fadd float %35, 5.000000e-01
  %37 = call float @llvm.floor.f32(float %36) #15
  %38 = fcmp olt float %37, 0x41DFFFFFE0000000
  %39 = select i1 %38, float %37, float 0x41DFFFFFE0000000
  %40 = fcmp ogt float %39, 0xC1DFFFFFE0000000
  %41 = select i1 %40, float %39, float 0xC1DFFFFFE0000000
  %42 = fptosi float %41 to i32
  %43 = extractelement <2 x float> %33, i32 1
  %44 = fadd float %43, 5.000000e-01
  %45 = call float @llvm.floor.f32(float %44) #15
  %46 = fcmp olt float %45, 0x41DFFFFFE0000000
  %47 = select i1 %46, float %45, float 0x41DFFFFFE0000000
  %48 = fcmp ogt float %47, 0xC1DFFFFFE0000000
  %49 = select i1 %48, float %47, float 0xC1DFFFFFE0000000
  %50 = fptosi float %49 to i32
  %51 = extractelement <2 x float> %34, i32 0
  %52 = fadd float %51, 5.000000e-01
  %53 = call float @llvm.floor.f32(float %52) #15
  %54 = fcmp olt float %53, 0x41DFFFFFE0000000
  %55 = select i1 %54, float %53, float 0x41DFFFFFE0000000
  %56 = fcmp ogt float %55, 0xC1DFFFFFE0000000
  %57 = select i1 %56, float %55, float 0xC1DFFFFFE0000000
  %58 = fptosi float %57 to i32
  %59 = extractelement <2 x float> %34, i32 1
  %60 = fadd float %59, 5.000000e-01
  %61 = call float @llvm.floor.f32(float %60) #15
  %62 = fcmp olt float %61, 0x41DFFFFFE0000000
  %63 = select i1 %62, float %61, float 0x41DFFFFFE0000000
  %64 = fcmp ogt float %63, 0xC1DFFFFFE0000000
  %65 = select i1 %64, float %63, float 0xC1DFFFFFE0000000
  %66 = fptosi float %65 to i32
  %67 = zext i32 %50 to i64
  %68 = shl nuw i64 %67, 32
  %69 = zext i32 %42 to i64
  %70 = or i64 %68, %69
  %71 = zext i32 %66 to i64
  %72 = shl nuw i64 %71, 32
  %73 = zext i32 %58 to i64
  %74 = or i64 %72, %73
  %75 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %70, i64* %75, align 8
  store i64 %74, i64* %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #15
  %76 = bitcast { i64, i64 }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #15
  %77 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = zext i32 %80 to i64
  %82 = shl nuw i64 %81, 32
  %83 = zext i32 %78 to i64
  %84 = or i64 %82, %83
  %85 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  store i64 0, i64* %85, align 8
  %86 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  store i64 %84, i64* %86, align 8
  %87 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %5, %struct.SkIRect* nonnull dereferenceable(16) %5, %struct.SkIRect* nonnull dereferenceable(16) %9) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #15
  br i1 %87, label %89, label %88

88:                                               ; preds = %2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #15
  br label %89

89:                                               ; preds = %2, %88
  %90 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %91 = bitcast i8* %90 to %"struct.SkNoPixelsDevice::ClipState"**
  %92 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %91, align 8
  %93 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %94 = bitcast i8* %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = lshr i64 %95, 1
  %97 = and i64 %96, 2147483647
  %98 = add nsw i64 %97, -1
  %99 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %92, i64 %98
  %100 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %92, i64 %98, i32 1
  %101 = load i32, i32* %100, align 8
  %102 = icmp sgt i32 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %89
  %104 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %99 to i8*
  br label %121

105:                                              ; preds = %89
  %106 = bitcast i8* %90 to %class.SkTArray.196*
  %107 = add nsw i32 %101, -1
  store i32 %107, i32* %100, align 8
  %108 = bitcast %class.SkConservativeClip* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %108)
  %109 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %108, i8* align 8 %109, i64 32, i1 false) #15
  call void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.196* %106, i32 1, i32 1) #15
  %110 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %91, align 8
  %111 = load i64, i64* %94, align 8
  %112 = lshr i64 %111, 1
  %113 = and i64 %112, 2147483647
  %114 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %110, i64 %113
  %115 = add i64 %111, 2
  %116 = and i64 %115, 4294967294
  %117 = and i64 %111, -4294967295
  %118 = or i64 %116, %117
  store i64 %118, i64* %94, align 8
  %119 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* nonnull align 8 %108, i64 32, i1 false) #15
  %120 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %110, i64 %113, i32 1
  store i32 0, i32* %120, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108)
  br label %121

121:                                              ; preds = %103, %105
  %122 = phi i8* [ %104, %103 ], [ %119, %105 ]
  %123 = phi %"struct.SkNoPixelsDevice::ClipState"* [ %99, %103 ], [ %114, %105 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %122, i8* nonnull align 8 %10, i64 16, i1 false) #15
  %124 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %123, i64 0, i32 0, i32 1
  store i8 1, i8* %124, align 8
  %125 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %123, i64 0, i32 0, i32 2
  store i8 0, i8* %125, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #15
  ret void
}

declare { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkNoPixelsDevice26onSetDeviceClipRestrictionEP7SkIRect(%class.SkNoPixelsDevice*, %struct.SkIRect* readonly) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkConservativeClip, align 8
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %6 = icmp eq %struct.SkIRect* %1, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = sub nsw i64 %10, %13
  %15 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = sub nsw i64 %17, %20
  %22 = icmp slt i64 %14, 1
  %23 = icmp slt i64 %21, 1
  %24 = or i1 %22, %23
  br i1 %24, label %29, label %25

25:                                               ; preds = %7
  %26 = or i64 %21, %14
  %27 = add nsw i64 %26, 2147483648
  %28 = icmp ugt i64 %27, 4294967295
  br i1 %28, label %29, label %32

29:                                               ; preds = %7, %2, %25
  %30 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 1
  %31 = bitcast %struct.SkIRect* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %31, i8 0, i64 16, i1 false) #15
  br label %124

32:                                               ; preds = %25
  %33 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 6
  %34 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #15
  %35 = sitofp i32 %12 to float
  %36 = insertelement <2 x float> undef, float %35, i32 0
  %37 = sitofp i32 %19 to float
  %38 = insertelement <2 x float> %36, float %37, i32 1
  %39 = sitofp i32 %9 to float
  %40 = insertelement <2 x float> undef, float %39, i32 0
  %41 = sitofp i32 %16 to float
  %42 = insertelement <2 x float> %40, float %41, i32 1
  %43 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %38, <2 x float>* %43, align 8
  %44 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %42, <2 x float>* %44, align 8
  %45 = call { <2 x float>, <2 x float> } @_ZN12SkMatrixPriv7MapRectERK5SkM44RK6SkRect(%class.SkM44* dereferenceable(64) %33, %struct.SkRect* nonnull dereferenceable(16) %5) #15
  %46 = extractvalue { <2 x float>, <2 x float> } %45, 0
  %47 = extractvalue { <2 x float>, <2 x float> } %45, 1
  %48 = extractelement <2 x float> %46, i32 0
  %49 = fadd float %48, 5.000000e-01
  %50 = call float @llvm.floor.f32(float %49) #15
  %51 = fcmp olt float %50, 0x41DFFFFFE0000000
  %52 = select i1 %51, float %50, float 0x41DFFFFFE0000000
  %53 = fcmp ogt float %52, 0xC1DFFFFFE0000000
  %54 = select i1 %53, float %52, float 0xC1DFFFFFE0000000
  %55 = fptosi float %54 to i32
  %56 = extractelement <2 x float> %46, i32 1
  %57 = fadd float %56, 5.000000e-01
  %58 = call float @llvm.floor.f32(float %57) #15
  %59 = fcmp olt float %58, 0x41DFFFFFE0000000
  %60 = select i1 %59, float %58, float 0x41DFFFFFE0000000
  %61 = fcmp ogt float %60, 0xC1DFFFFFE0000000
  %62 = select i1 %61, float %60, float 0xC1DFFFFFE0000000
  %63 = fptosi float %62 to i32
  %64 = extractelement <2 x float> %47, i32 0
  %65 = fadd float %64, 5.000000e-01
  %66 = call float @llvm.floor.f32(float %65) #15
  %67 = fcmp olt float %66, 0x41DFFFFFE0000000
  %68 = select i1 %67, float %66, float 0x41DFFFFFE0000000
  %69 = fcmp ogt float %68, 0xC1DFFFFFE0000000
  %70 = select i1 %69, float %68, float 0xC1DFFFFFE0000000
  %71 = fptosi float %70 to i32
  %72 = extractelement <2 x float> %47, i32 1
  %73 = fadd float %72, 5.000000e-01
  %74 = call float @llvm.floor.f32(float %73) #15
  %75 = fcmp olt float %74, 0x41DFFFFFE0000000
  %76 = select i1 %75, float %74, float 0x41DFFFFFE0000000
  %77 = fcmp ogt float %76, 0xC1DFFFFFE0000000
  %78 = select i1 %77, float %76, float 0xC1DFFFFFE0000000
  %79 = fptosi float %78 to i32
  %80 = zext i32 %63 to i64
  %81 = shl nuw i64 %80, 32
  %82 = zext i32 %55 to i64
  %83 = or i64 %81, %82
  %84 = zext i32 %79 to i64
  %85 = shl nuw i64 %84, 32
  %86 = zext i32 %71 to i64
  %87 = or i64 %85, %86
  %88 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 1
  %89 = bitcast %struct.SkIRect* %88 to i64*
  store i64 %83, i64* %89, align 8
  %90 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 1, i32 2
  %91 = bitcast i32* %90 to i64*
  store i64 %87, i64* %91, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #15
  %92 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %93 = bitcast i8* %92 to %"struct.SkNoPixelsDevice::ClipState"**
  %94 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %93, align 8
  %95 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %96 = bitcast i8* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = lshr i64 %97, 1
  %99 = and i64 %98, 2147483647
  %100 = add nsw i64 %99, -1
  %101 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %94, i64 %100
  %102 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %94, i64 %100, i32 1
  %103 = load i32, i32* %102, align 8
  %104 = icmp sgt i32 %103, 0
  br i1 %104, label %105, label %121

105:                                              ; preds = %32
  %106 = bitcast i8* %92 to %class.SkTArray.196*
  %107 = add nsw i32 %103, -1
  store i32 %107, i32* %102, align 8
  %108 = bitcast %class.SkConservativeClip* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %108)
  %109 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %108, i8* align 8 %109, i64 32, i1 false) #15
  call void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.196* %106, i32 1, i32 1) #15
  %110 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %93, align 8
  %111 = load i64, i64* %96, align 8
  %112 = lshr i64 %111, 1
  %113 = and i64 %112, 2147483647
  %114 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %110, i64 %113
  %115 = add i64 %111, 2
  %116 = and i64 %115, 4294967294
  %117 = and i64 %111, -4294967295
  %118 = or i64 %116, %117
  store i64 %118, i64* %96, align 8
  %119 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* nonnull align 8 %108, i64 32, i1 false) #15
  %120 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %110, i64 %113, i32 1
  store i32 0, i32* %120, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108)
  br label %121

121:                                              ; preds = %32, %105
  %122 = phi %"struct.SkNoPixelsDevice::ClipState"* [ %114, %105 ], [ %101, %32 ]
  %123 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %122, i64 0, i32 0
  call void @_ZN18SkConservativeClip7opIRectERK7SkIRectN8SkRegion2OpE(%class.SkConservativeClip* %123, %struct.SkIRect* dereferenceable(16) %88, i32 1) #15
  br label %124

124:                                              ; preds = %121, %29
  ret void
}

declare void @_ZN18SkConservativeClip7opIRectERK7SkIRectN8SkRegion2OpE(%class.SkConservativeClip*, %struct.SkIRect* dereferenceable(16), i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK16SkNoPixelsDevice13onGetClipTypeEv(%class.SkNoPixelsDevice* nocapture readonly) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %3 = bitcast i8* %2 to %"struct.SkNoPixelsDevice::ClipState"**
  %4 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %3, align 8
  %5 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 1
  %9 = and i64 %8, 2147483647
  %10 = add nsw i64 %9, -1
  %11 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %4, i64 %10, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %4, i64 %10, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = sext i32 %15 to i64
  %17 = sub nsw i64 %13, %16
  %18 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %4, i64 %10, i32 0, i32 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %4, i64 %10, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = sext i32 %22 to i64
  %24 = sub nsw i64 %20, %23
  %25 = icmp slt i64 %17, 1
  %26 = icmp slt i64 %24, 1
  %27 = or i1 %25, %26
  br i1 %27, label %37, label %28

28:                                               ; preds = %1
  %29 = or i64 %24, %17
  %30 = add nsw i64 %29, 2147483648
  %31 = icmp ugt i64 %30, 4294967295
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %4, i64 %10, i32 0, i32 1
  %34 = load i8, i8* %33, align 8, !range !14
  %35 = icmp eq i8 %34, 0
  %36 = select i1 %35, i32 2, i32 1
  br label %37

37:                                               ; preds = %1, %32, %28
  %38 = phi i32 [ 0, %28 ], [ %36, %32 ], [ 0, %1 ]
  ret i32 %38
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDeviceD2Ev(%class.SkBaseDevice*) unnamed_addr #11 comdat align 2 {
  %2 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %5 = load %class.SkColorSpace*, %class.SkColorSpace** %4, align 8
  %6 = icmp eq %class.SkColorSpace* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 -1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = bitcast %class.SkColorSpace* %5 to i8*
  tail call void @_ZdlPv(i8* %12) #16
  br label %13

13:                                               ; preds = %1, %7, %11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDeviceD0Ev(%class.SkBaseDevice*) unnamed_addr #11 comdat align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #15
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK12SkBaseDevice15getRasterHandleEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkBaseDevice29localToDeviceHitsPixelCentersEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice17validateDevBoundsERK7SkIRect(%class.SkBaseDevice*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12SkBaseDevice29android_utils_clipWithStencilEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrRecordingContext* @_ZNK12SkBaseDevice16recordingContextEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret %class.GrRecordingContext* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.GrSurfaceDrawContext* @_ZN12SkBaseDevice18surfaceDrawContextEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret %class.GrSurfaceDrawContext* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice6onSaveEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice9onRestoreEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice10onClipRectERK6SkRect8SkClipOpb(%class.SkBaseDevice*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice11onClipRRectERK7SkRRect8SkClipOpb(%class.SkBaseDevice*, %class.SkRRect* dereferenceable(52), i32, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice10onClipPathERK6SkPath8SkClipOpb(%class.SkBaseDevice*, %class.SkPath* dereferenceable(16), i32, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice12onClipShaderE5sk_spI8SkShaderE(%class.SkBaseDevice*, %class.sk_sp.8*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice12onClipRegionERK8SkRegion8SkClipOp(%class.SkBaseDevice*, %class.SkRegion* dereferenceable(24), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice13onReplaceClipERK7SkIRect(%class.SkBaseDevice*, %struct.SkIRect* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice26onSetDeviceClipRestrictionEP7SkIRect(%class.SkBaseDevice*, %struct.SkIRect*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZN12SkBaseDevice10drawShadowERK6SkPathRK15SkDrawShadowRec(%class.SkBaseDevice*, %class.SkPath* dereferenceable(16), %struct.SkDrawShadowRec*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice14drawAnnotationERK6SkRectPKcP6SkData(%class.SkBaseDevice*, %struct.SkRect* dereferenceable(16), i8*, %class.SkData*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice12setImmutableEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12SkBaseDevice12onPeekPixelsEP8SkPixmap(%class.SkBaseDevice*, %class.SkPixmap*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN12SkBaseDevice14onAccessPixelsEP8SkPixmap(%class.SkBaseDevice*, %class.SkPixmap*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkBaseDevice* @_ZN12SkBaseDevice14onCreateDeviceERKNS_10CreateInfoEPK7SkPaint(%class.SkBaseDevice*, %"struct.SkBaseDevice::CreateInfo"* dereferenceable(48), %class.SkPaint*) unnamed_addr #0 comdat align 2 {
  ret %class.SkBaseDevice* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkBaseDevice16isNoPixelsDeviceEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkBaseDevice36replaceBitmapBackendForRasterSurfaceERK8SkBitmap(%class.SkBaseDevice*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkBaseDevice27forceConservativeRasterClipEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkImageFilterCache* @_ZN12SkBaseDevice19getImageFilterCacheEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret %class.SkImageFilterCache* null
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N12SkBaseDeviceD1Ev(%class.SkBaseDevice*) unnamed_addr #11 comdat align 2 {
  %2 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 -1, i32 6, i32 0, i64 12
  %3 = bitcast float* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 -1, i32 6, i32 0, i64 16
  %5 = bitcast float* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.SkBaseDevice, %class.SkBaseDevice* %0, i64 -1, i32 6, i32 0, i64 46
  %7 = bitcast float* %6 to %class.SkColorSpace**
  %8 = load %class.SkColorSpace*, %class.SkColorSpace** %7, align 8
  %9 = icmp eq %class.SkColorSpace* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 -1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  %15 = bitcast %class.SkColorSpace* %8 to i8*
  tail call void @_ZdlPv(i8* %15) #16
  br label %16

16:                                               ; preds = %1, %10, %14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N12SkBaseDeviceD0Ev(%class.SkBaseDevice*) unnamed_addr #11 comdat align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZThn16_NK12SkBaseDevice29localToDeviceHitsPixelCentersEv(%class.SkBaseDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDeviceD2Ev(%class.SkNoPixelsDevice*) unnamed_addr #11 comdat align 2 {
  %2 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV16SkNoPixelsDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV16SkNoPixelsDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %11 = bitcast i8* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  tail call void @_Z7sk_freePv(i8* %12) #15
  br label %13

13:                                               ; preds = %1, %9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %14 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %15 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 8
  %16 = icmp eq %class.SkColorSpace* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = bitcast %class.SkColorSpace* %15 to i8*
  tail call void @_ZdlPv(i8* %22) #16
  br label %23

23:                                               ; preds = %13, %17, %21
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDeviceD0Ev(%class.SkNoPixelsDevice*) unnamed_addr #11 comdat align 2 {
  %2 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV16SkNoPixelsDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV16SkNoPixelsDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %5 = bitcast i8* %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %11 = bitcast i8* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  tail call void @_Z7sk_freePv(i8* %12) #15
  br label %13

13:                                               ; preds = %9, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %14 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %15 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 8
  %16 = icmp eq %class.SkColorSpace* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = bitcast %class.SkColorSpace* %15 to i8*
  tail call void @_ZdlPv(i8* %22) #16
  br label %23

23:                                               ; preds = %13, %17, %21
  %24 = bitcast %class.SkNoPixelsDevice* %0 to i8*
  tail call void @_ZdlPv(i8* %24) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkNoPixelsDevice10onClipIsAAEv(%class.SkNoPixelsDevice*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %3 = bitcast i8* %2 to %"struct.SkNoPixelsDevice::ClipState"**
  %4 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %3, align 8
  %5 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 1
  %9 = and i64 %8, 2147483647
  %10 = add nsw i64 %9, -1
  %11 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %4, i64 %10, i32 0, i32 2
  %12 = load i8, i8* %11, align 1, !range !14
  %13 = icmp ne i8 %12, 0
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkNoPixelsDevice16onClipIsWideOpenEv(%class.SkNoPixelsDevice*) unnamed_addr #0 comdat align 2 {
  %2 = alloca { i64, i64 }, align 8
  %3 = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %5 = bitcast i8* %4 to %"struct.SkNoPixelsDevice::ClipState"**
  %6 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %5, align 8
  %7 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = lshr i64 %9, 1
  %11 = and i64 %10, 2147483647
  %12 = add nsw i64 %11, -1
  %13 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %6, i64 %12, i32 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !14
  %15 = icmp eq i8 %14, 0
  %16 = bitcast { i64, i64 }* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #15
  %17 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #15
  br i1 %15, label %40, label %18

18:                                               ; preds = %1
  %19 = bitcast %class.SkNoPixelsDevice* %0 to { i64, i64 } (%class.SkNoPixelsDevice*)***
  %20 = load { i64, i64 } (%class.SkNoPixelsDevice*)**, { i64, i64 } (%class.SkNoPixelsDevice*)*** %19, align 8
  %21 = getelementptr inbounds { i64, i64 } (%class.SkNoPixelsDevice*)*, { i64, i64 } (%class.SkNoPixelsDevice*)** %20, i64 23
  %22 = load { i64, i64 } (%class.SkNoPixelsDevice*)*, { i64, i64 } (%class.SkNoPixelsDevice*)** %21, align 8
  %23 = tail call { i64, i64 } %22(%class.SkNoPixelsDevice* %0) #15
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 0
  %25 = extractvalue { i64, i64 } %23, 0
  store i64 %25, i64* %24, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %2, i64 0, i32 1
  %27 = extractvalue { i64, i64 } %23, 1
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 0, i32 3, i32 1, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = shl nuw i64 %32, 32
  %34 = zext i32 %29 to i64
  %35 = or i64 %33, %34
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  store i64 %35, i64* %37, align 8
  %38 = call i32 @bcmp(i8* nonnull %16, i8* nonnull %17, i64 16) #15
  %39 = icmp eq i32 %38, 0
  br label %40

40:                                               ; preds = %1, %18
  %41 = phi i1 [ false, %1 ], [ %39, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #15
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK16SkNoPixelsDevice11onAsRgnClipEP8SkRegion(%class.SkNoPixelsDevice*, %class.SkRegion*) unnamed_addr #0 comdat align 2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = bitcast { i64, i64 }* %3 to %struct.SkIRect*
  %5 = bitcast { i64, i64 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #15
  %6 = bitcast %class.SkNoPixelsDevice* %0 to { i64, i64 } (%class.SkNoPixelsDevice*)***
  %7 = load { i64, i64 } (%class.SkNoPixelsDevice*)**, { i64, i64 } (%class.SkNoPixelsDevice*)*** %6, align 8
  %8 = getelementptr inbounds { i64, i64 } (%class.SkNoPixelsDevice*)*, { i64, i64 } (%class.SkNoPixelsDevice*)** %7, i64 23
  %9 = load { i64, i64 } (%class.SkNoPixelsDevice*)*, { i64, i64 } (%class.SkNoPixelsDevice*)** %8, align 8
  %10 = tail call { i64, i64 } %9(%class.SkNoPixelsDevice* %0) #15
  %11 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %12 = extractvalue { i64, i64 } %10, 0
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %14 = extractvalue { i64, i64 } %10, 1
  store i64 %14, i64* %13, align 8
  %15 = call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* %1, %struct.SkIRect* nonnull dereferenceable(16) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK16SkNoPixelsDevice15onDevClipBoundsEv(%class.SkNoPixelsDevice*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 160
  %3 = bitcast i8* %2 to %"struct.SkNoPixelsDevice::ClipState"**
  %4 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %3, align 8
  %5 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 0, i32 2, i32 0, i32 0, i64 168
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 1
  %9 = and i64 %8, 2147483647
  %10 = add nsw i64 %9, -1
  %11 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %4, i64 %10, i32 0, i32 0
  %12 = bitcast %struct.SkIRect* %11 to i64*
  %13 = load i64, i64* %12, align 4
  %14 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %4, i64 %10, i32 0, i32 0, i32 2
  %15 = bitcast i32* %14 to i64*
  %16 = load i64, i64* %15, align 4
  %17 = insertvalue { i64, i64 } undef, i64 %13, 0
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1
  ret { i64, i64 } %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice9drawPaintERK7SkPaint(%class.SkNoPixelsDevice*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice10drawPointsEN8SkCanvas9PointModeEmPK7SkPointRK7SkPaint(%class.SkNoPixelsDevice*, i32, i64, %struct.SkPoint*, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice8drawRectERK6SkRectRK7SkPaint(%class.SkNoPixelsDevice*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice8drawOvalERK6SkRectRK7SkPaint(%class.SkNoPixelsDevice*, %struct.SkRect* dereferenceable(16), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice9drawRRectERK7SkRRectRK7SkPaint(%class.SkNoPixelsDevice*, %class.SkRRect* dereferenceable(52), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice8drawPathERK6SkPathRK7SkPaintb(%class.SkNoPixelsDevice*, %class.SkPath* dereferenceable(16), %class.SkPaint* dereferenceable(72), i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice13drawImageRectEPK7SkImagePK6SkRectRS4_RK17SkSamplingOptionsRK7SkPaintN8SkCanvas17SrcRectConstraintE(%class.SkNoPixelsDevice*, %class.SkImage*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice12drawVerticesEPK10SkVertices11SkBlendModeRK7SkPaint(%class.SkNoPixelsDevice*, %class.SkVertices*, i32, %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice18onDrawGlyphRunListERK14SkGlyphRunListRK7SkPaint(%class.SkNoPixelsDevice*, %class.SkGlyphRunList* dereferenceable(48), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice10drawDeviceEP12SkBaseDeviceRK17SkSamplingOptionsRK7SkPaint(%class.SkNoPixelsDevice*, %class.SkBaseDevice*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkNoPixelsDevice17drawFilteredImageERKN4skif7MappingEP14SkSpecialImagePK13SkImageFilterRK17SkSamplingOptionsRK7SkPaint(%class.SkNoPixelsDevice*, %"class.skif::Mapping"* dereferenceable(80), %class.SkSpecialImage*, %class.SkImageFilter*, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK16SkNoPixelsDevice16isNoPixelsDeviceEv(%class.SkNoPixelsDevice*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N16SkNoPixelsDeviceD1Ev(%class.SkNoPixelsDevice*) unnamed_addr #11 comdat align 2 {
  %2 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 -1, i32 2, i32 1
  %3 = bitcast %class.SkTArray.196* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV16SkNoPixelsDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.SkTArray.196, %class.SkTArray.196* %2, i64 1
  %5 = bitcast %class.SkTArray.196* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV16SkNoPixelsDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.SkTArray.196, %class.SkTArray.196* %2, i64 30
  %7 = bitcast %class.SkTArray.196* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.SkTArray.196, %class.SkTArray.196* %2, i64 29, i32 1
  %13 = bitcast i64* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @_Z7sk_freePv(i8* %14) #15
  br label %15

15:                                               ; preds = %11, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %16 = getelementptr inbounds %class.SkTArray.196, %class.SkTArray.196* %2, i64 8, i32 1
  %17 = bitcast i64* %16 to %class.SkColorSpace**
  %18 = load %class.SkColorSpace*, %class.SkColorSpace** %17, align 8
  %19 = icmp eq %class.SkColorSpace* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = bitcast %class.SkColorSpace* %18 to i8*
  tail call void @_ZdlPv(i8* %25) #16
  br label %26

26:                                               ; preds = %15, %20, %24
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn16_N16SkNoPixelsDeviceD0Ev(%class.SkNoPixelsDevice*) unnamed_addr #11 comdat align 2 {
  %2 = getelementptr inbounds %class.SkNoPixelsDevice, %class.SkNoPixelsDevice* %0, i64 -1, i32 2, i32 1
  %3 = bitcast %class.SkTArray.196* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV16SkNoPixelsDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.SkTArray.196, %class.SkTArray.196* %2, i64 1
  %5 = bitcast %class.SkTArray.196* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV16SkNoPixelsDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.SkTArray.196, %class.SkTArray.196* %2, i64 30
  %7 = bitcast %class.SkTArray.196* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.SkTArray.196, %class.SkTArray.196* %2, i64 29, i32 1
  %13 = bitcast i64* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @_Z7sk_freePv(i8* %14) #15
  br label %15

15:                                               ; preds = %11, %1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [63 x i8*], [6 x i8*] }, { [63 x i8*], [6 x i8*] }* @_ZTV12SkBaseDevice, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %16 = getelementptr inbounds %class.SkTArray.196, %class.SkTArray.196* %2, i64 8, i32 1
  %17 = bitcast i64* %16 to %class.SkColorSpace**
  %18 = load %class.SkColorSpace*, %class.SkColorSpace** %17, align 8
  %19 = icmp eq %class.SkColorSpace* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = bitcast %class.SkColorSpace* %18 to i8*
  tail call void @_ZdlPv(i8* %25) #16
  br label %26

26:                                               ; preds = %15, %20, %24
  %27 = bitcast %class.SkTArray.196* %2 to i8*
  tail call void @_ZdlPv(i8* %27) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12SkRefCntBaseD2Ev(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkRefCntD0Ev(%class.SkRefCnt*) unnamed_addr #11 comdat align 2 {
  %2 = bitcast %class.SkRefCnt* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkMatrixProviderD2Ev(%class.SkMatrixProvider*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkMatrixProviderD0Ev(%class.SkMatrixProvider*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #17
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #13

declare dereferenceable(64) %class.SkM44* @_ZN5SkM449setConcatERKS_S1_(%class.SkM44*, %class.SkM44* dereferenceable(64), %class.SkM44* dereferenceable(64)) local_unnamed_addr #1

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #1

declare zeroext i1 @_ZN13SkLatticeIter4nextEP7SkIRectP6SkRectPbPj(%class.SkLatticeIter*, %struct.SkIRect*, %struct.SkRect*, i8*, i32*) local_unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

declare void @_ZNK7SkImage10makeShaderE10SkTileModeS0_RK17SkSamplingOptionsPK8SkMatrix(%class.sk_sp.8* sret, %class.SkImage*, i32, i32, %struct.SkSamplingOptions* dereferenceable(20), %class.SkMatrix*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #12

declare void @_ZN7SkPaint8setColorERK8SkRGBA4fIL11SkAlphaType3EEP12SkColorSpace(%class.SkPaint*, %struct.SkRGBA4f* dereferenceable(16), %class.SkColorSpace*) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #1

declare void @_ZNK12SkShaderBase16totalLocalMatrixEPK8SkMatrix(%class.SkTCopyOnFirstWrite* sret, %class.SkShaderBase*, %class.SkMatrix*) local_unnamed_addr #1

declare void @_ZNK8SkShader19makeWithLocalMatrixERK8SkMatrix(%class.sk_sp.8* sret, %class.SkShader*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare void @_ZNK8SkRegion9translateEiiPS_(%class.SkRegion*, i32, i32, %class.SkRegion*) local_unnamed_addr #1

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN10SkVerticesdlEPv(i8*) local_unnamed_addr #5

declare { i64, i64 } @_ZN4skif7Mapping3mapI7SkIRectEET_RKS3_RK8SkMatrix(%struct.SkIRect* dereferenceable(16), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN16SkNoPixelsDevice9ClipStateELb0EE12checkReallocEiNS2_11ReallocTypeE(%class.SkTArray.196*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.196, %class.SkTArray.196* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %74

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %74, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 40) #15
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %62, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.196, %class.SkTArray.196* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %57, %50 ]
  %52 = mul nuw nsw i64 %51, 40
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %"struct.SkNoPixelsDevice::ClipState"*, %"struct.SkNoPixelsDevice::ClipState"** %49, align 8
  %55 = getelementptr inbounds %"struct.SkNoPixelsDevice::ClipState", %"struct.SkNoPixelsDevice::ClipState"* %54, i64 %51
  %56 = bitcast %"struct.SkNoPixelsDevice::ClipState"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %56, i64 40, i1 false) #15
  %57 = add nuw nsw i64 %51, 1
  %58 = load i64, i64* %4, align 8
  %59 = lshr i64 %58, 1
  %60 = and i64 %59, 2147483647
  %61 = icmp ult i64 %57, %60
  br i1 %61, label %50, label %62

62:                                               ; preds = %50, %35
  %63 = phi i64 [ %45, %35 ], [ %58, %50 ]
  %64 = and i64 %63, 1
  %65 = icmp eq i64 %64, 0
  %66 = bitcast %class.SkTArray.196* %0 to i8**
  br i1 %65, label %70, label %67

67:                                               ; preds = %62
  %68 = load i8*, i8** %66, align 8
  tail call void @_Z7sk_freePv(i8* %68) #15
  %69 = load i64, i64* %4, align 8
  br label %70

70:                                               ; preds = %62, %67
  %71 = phi i64 [ %69, %67 ], [ %63, %62 ]
  store i8* %44, i8** %66, align 8
  %72 = and i64 %71, -4294967298
  %73 = or i64 %72, 1
  store i64 %73, i64* %4, align 8
  br label %74

74:                                               ; preds = %70, %32, %21
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { cold noreturn nounwind }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5SkM445asM33Ev: argument 0"}
!4 = distinct !{!4, !"_ZNK5SkM445asM33Ev"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5SkM445asM33Ev: argument 0"}
!7 = distinct !{!7, !"_ZNK5SkM445asM33Ev"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK5SkM445asM33Ev: argument 0"}
!10 = distinct !{!10, !"_ZNK5SkM445asM33Ev"}
!11 = !{!12, !9}
!12 = distinct !{!12, !13, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!13 = distinct !{!13, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!14 = !{i8 0, i8 2}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!17 = distinct !{!17, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK5SkM445asM33Ev: argument 0"}
!20 = distinct !{!20, !"_ZNK5SkM445asM33Ev"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK5SkM445asM33Ev: argument 0"}
!23 = distinct !{!23, !"_ZNK5SkM445asM33Ev"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN12SkBaseDevice11snapSpecialEv: argument 0"}
!26 = distinct !{!26, !"_ZN12SkBaseDevice11snapSpecialEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK12SkBaseDevice20getRelativeTransformERKS_: argument 0"}
!29 = distinct !{!29, !"_ZNK12SkBaseDevice20getRelativeTransformERKS_"}
!30 = !{!31, !28}
!31 = distinct !{!31, !32, !"_ZNK5SkM445asM33Ev: argument 0"}
!32 = distinct !{!32, !"_ZNK5SkM445asM33Ev"}
!33 = !{!34, !31, !28}
!34 = distinct !{!34, !35, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!35 = distinct !{!35, !"_ZN8SkMatrix7MakeAllEfffffffff"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_Z9sk_ref_spI14SkSpecialImageE5sk_spIT_EPS2_: argument 0"}
!38 = distinct !{!38, !"_Z9sk_ref_spI14SkSpecialImageE5sk_spIT_EPS2_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNK4skif12FilterResultILNS_5UsageE3EE14imageAndOffsetEP8SkIPoint: argument 0"}
!41 = distinct !{!41, !"_ZNK4skif12FilterResultILNS_5UsageE3EE14imageAndOffsetEP8SkIPoint"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_Z15SkMakeEnumerateI5SkZipIJKtK7SkPointEENS4_8IteratorEE11SkEnumerateIT0_T_EOS8_: argument 0"}
!44 = distinct !{!44, !"_Z15SkMakeEnumerateI5SkZipIJKtK7SkPointEENS4_8IteratorEE11SkEnumerateIT0_T_EOS8_"}
!45 = !{!46, !48, !43}
!46 = distinct !{!46, !47, !"_ZNK5SkZipIJKtK7SkPointEE5beginEv: argument 0"}
!47 = distinct !{!47, !"_ZNK5SkZipIJKtK7SkPointEE5beginEv"}
!48 = distinct !{!48, !49, !"_ZNSt3__15beginI5SkZipIJKtK7SkPointEEEEDTcldtfp_5beginEERT_: argument 0"}
!49 = distinct !{!49, !"_ZNSt3__15beginI5SkZipIJKtK7SkPointEEEEDTcldtfp_5beginEERT_"}
!50 = !{!51, !53}
!51 = distinct !{!51, !52, !"_ZNK5SkZipIJKtK7SkPointEE3endEv: argument 0"}
!52 = distinct !{!52, !"_ZNK5SkZipIJKtK7SkPointEE3endEv"}
!53 = distinct !{!53, !54, !"_ZNSt3__13endI5SkZipIJKtK7SkPointEEEEDTcldtfp_3endEERT_: argument 0"}
!54 = distinct !{!54, !"_ZNSt3__13endI5SkZipIJKtK7SkPointEEEEDTcldtfp_3endEERT_"}
!55 = !{!51, !53, !43}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZNK5SkM445asM33Ev: argument 0"}
!58 = distinct !{!58, !"_ZNK5SkM445asM33Ev"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN11SkEnumerateIN5SkZipIJKtK7SkPointEE8IteratorES4_E8IteratordeEv: argument 0"}
!61 = distinct !{!61, !"_ZN11SkEnumerateIN5SkZipIJKtK7SkPointEE8IteratorES4_E8IteratordeEv"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZL20make_post_inverse_lmPK8SkShaderRK8SkMatrix: argument 0"}
!64 = distinct !{!64, !"_ZL20make_post_inverse_lmPK8SkShaderRK8SkMatrix"}
!65 = !{!66, !68}
!66 = distinct !{!66, !67, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!67 = distinct !{!67, !"_ZN8SkMatrix6ConcatERKS_S1_"}
!68 = distinct !{!68, !69, !"_ZmlRK8SkMatrixS1_: argument 0"}
!69 = distinct !{!69, !"_ZmlRK8SkMatrixS1_"}
!70 = !{!71, !73}
!71 = distinct !{!71, !72, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!72 = distinct !{!72, !"_ZN8SkMatrix6ConcatERKS_S1_"}
!73 = distinct !{!73, !74, !"_ZmlRK8SkMatrixS1_: argument 0"}
!74 = distinct !{!74, !"_ZmlRK8SkMatrixS1_"}
!75 = !{!76, !78}
!76 = distinct !{!76, !77, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!77 = distinct !{!77, !"_ZN8SkMatrix6ConcatERKS_S1_"}
!78 = distinct !{!78, !79, !"_ZmlRK8SkMatrixS1_: argument 0"}
!79 = distinct !{!79, !"_ZmlRK8SkMatrixS1_"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNK5SkM445asM33Ev: argument 0"}
!82 = distinct !{!82, !"_ZNK5SkM445asM33Ev"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZNK5SkM445asM33Ev: argument 0"}
!85 = distinct !{!85, !"_ZNK5SkM445asM33Ev"}
!86 = !{!87, !84}
!87 = distinct !{!87, !88, !"_ZN8SkMatrix7MakeAllEfffffffff: argument 0"}
!88 = distinct !{!88, !"_ZN8SkMatrix7MakeAllEfffffffff"}
