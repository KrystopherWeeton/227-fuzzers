; ModuleID = '../../third_party/pdfium/core/fxge/cfx_graphstate.cpp'
source_filename = "../../third_party/pdfium/core/fxge/cfx_graphstate.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFX_GraphState = type { %"class.fxcrt::SharedCopyOnWrite" }
%"class.fxcrt::SharedCopyOnWrite" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_RetainableGraphStateData* }
%class.CFX_RetainableGraphStateData = type { %"class.fxcrt::Retainable", %class.CFX_GraphStateData }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { float* }

$_ZN5fxcrt17SharedCopyOnWriteI28CFX_RetainableGraphStateDataE14GetPrivateCopyIJEEEPS1_DpT_ = comdat any

@_ZN14CFX_GraphStateC1Ev = hidden unnamed_addr alias void (%class.CFX_GraphState*), void (%class.CFX_GraphState*)* @_ZN14CFX_GraphStateC2Ev
@_ZN14CFX_GraphStateC1ERKS_ = hidden unnamed_addr alias void (%class.CFX_GraphState*, %class.CFX_GraphState*), void (%class.CFX_GraphState*, %class.CFX_GraphState*)* @_ZN14CFX_GraphStateC2ERKS_
@_ZN14CFX_GraphStateD1Ev = hidden unnamed_addr alias void (%class.CFX_GraphState*), void (%class.CFX_GraphState*)* @_ZN14CFX_GraphStateD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN14CFX_GraphStateC2Ev(%class.CFX_GraphState* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CFX_GraphState* %0 to i64*
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN14CFX_GraphStateC2ERKS_(%class.CFX_GraphState* nocapture, %class.CFX_GraphState* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CFX_GraphState, %class.CFX_GraphState* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFX_RetainableGraphStateData*, %class.CFX_RetainableGraphStateData** %3, align 8
  %5 = ptrtoint %class.CFX_RetainableGraphStateData* %4 to i64
  %6 = bitcast %class.CFX_GraphState* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = icmp eq %class.CFX_RetainableGraphStateData* %4, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %4, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %10, 1
  store i64 %11, i64* %9, align 8
  br label %12

12:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_GraphStateD2Ev(%class.CFX_GraphState* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CFX_GraphState, %class.CFX_GraphState* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_RetainableGraphStateData*, %class.CFX_RetainableGraphStateData** %2, align 8
  store %class.CFX_RetainableGraphStateData* null, %class.CFX_RetainableGraphStateData** %2, align 8
  %4 = icmp eq %class.CFX_RetainableGraphStateData* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %3, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %3, i64 0, i32 0
  %12 = bitcast %class.CFX_RetainableGraphStateData* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #8
  br label %16

16:                                               ; preds = %1, %5, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_GraphState7EmplaceEv(%class.CFX_GraphState* nocapture) local_unnamed_addr #2 align 2 {
  %2 = tail call i8* @_Znwm(i64 56) #9, !noalias !2
  %3 = bitcast i8* %2 to %class.CFX_RetainableGraphStateData*
  tail call void @_ZN28CFX_RetainableGraphStateDataC1Ev(%class.CFX_RetainableGraphStateData* nonnull %3) #8, !noalias !2
  %4 = ptrtoint i8* %2 to i64
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8, !noalias !2
  %8 = add nsw i64 %7, 1
  store i64 %8, i64* %6, align 8, !noalias !2
  %9 = getelementptr inbounds %class.CFX_GraphState, %class.CFX_GraphState* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CFX_RetainableGraphStateData*, %class.CFX_RetainableGraphStateData** %9, align 8
  %11 = bitcast %class.CFX_GraphState* %0 to i64*
  store i64 %4, i64* %11, align 8
  %12 = icmp eq %class.CFX_RetainableGraphStateData* %10, null
  br i1 %12, label %24, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %10, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = add nsw i64 %15, -1
  store i64 %16, i64* %14, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %24

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %10, i64 0, i32 0
  %20 = bitcast %class.CFX_RetainableGraphStateData* %10 to void (%"class.fxcrt::Retainable"*)***
  %21 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %21, i64 1
  %23 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %22, align 8
  tail call void %23(%"class.fxcrt::Retainable"* nonnull %19) #8
  br label %24

24:                                               ; preds = %1, %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_GraphState11SetLineDashENSt3__16vectorIfNS0_9allocatorIfEEEEff(%class.CFX_GraphState*, %"class.std::__1::vector"* nocapture, float, float) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %class.CFX_GraphState, %class.CFX_GraphState* %0, i64 0, i32 0
  %6 = tail call %class.CFX_RetainableGraphStateData* @_ZN5fxcrt17SharedCopyOnWriteI28CFX_RetainableGraphStateDataE14GetPrivateCopyIJEEEPS1_DpT_(%"class.fxcrt::SharedCopyOnWrite"* %5)
  %7 = icmp eq %class.CFX_RetainableGraphStateData* %6, null
  %8 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %6, i64 0, i32 1, i32 0
  %9 = bitcast i8* %8 to %class.CFX_GraphStateData*
  %10 = select i1 %7, %class.CFX_GraphStateData* null, %class.CFX_GraphStateData* %9
  %11 = fmul float %2, %3
  %12 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %10, i64 0, i32 2
  store float %11, float* %12, align 4
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 0
  %14 = load float*, float** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %16 = load float*, float** %15, align 8
  %17 = icmp eq float* %14, %16
  br i1 %17, label %85, label %18

18:                                               ; preds = %4
  %19 = ptrtoint float* %14 to i64
  %20 = getelementptr float, float* %16, i64 -1
  %21 = ptrtoint float* %20 to i64
  %22 = sub i64 %21, %19
  %23 = lshr i64 %22, 2
  %24 = add nuw nsw i64 %23, 1
  %25 = icmp ult i64 %24, 8
  br i1 %25, label %26, label %28

26:                                               ; preds = %83, %18
  %27 = phi float* [ %14, %18 ], [ %30, %83 ]
  br label %110

28:                                               ; preds = %18
  %29 = and i64 %24, 9223372036854775800
  %30 = getelementptr float, float* %14, i64 %29
  %31 = insertelement <4 x float> undef, float %3, i32 0
  %32 = shufflevector <4 x float> %31, <4 x float> undef, <4 x i32> zeroinitializer
  %33 = insertelement <4 x float> undef, float %3, i32 0
  %34 = shufflevector <4 x float> %33, <4 x float> undef, <4 x i32> zeroinitializer
  %35 = add nsw i64 %29, -8
  %36 = lshr exact i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 1
  %39 = icmp eq i64 %35, 0
  br i1 %39, label %69, label %40

40:                                               ; preds = %28
  %41 = sub nuw nsw i64 %37, %38
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ 0, %40 ], [ %66, %42 ]
  %44 = phi i64 [ %41, %40 ], [ %67, %42 ]
  %45 = getelementptr float, float* %14, i64 %43
  %46 = bitcast float* %45 to <4 x float>*
  %47 = load <4 x float>, <4 x float>* %46, align 4
  %48 = getelementptr float, float* %45, i64 4
  %49 = bitcast float* %48 to <4 x float>*
  %50 = load <4 x float>, <4 x float>* %49, align 4
  %51 = fmul <4 x float> %47, %32
  %52 = fmul <4 x float> %50, %34
  %53 = bitcast float* %45 to <4 x float>*
  store <4 x float> %51, <4 x float>* %53, align 4
  %54 = bitcast float* %48 to <4 x float>*
  store <4 x float> %52, <4 x float>* %54, align 4
  %55 = or i64 %43, 8
  %56 = getelementptr float, float* %14, i64 %55
  %57 = bitcast float* %56 to <4 x float>*
  %58 = load <4 x float>, <4 x float>* %57, align 4
  %59 = getelementptr float, float* %56, i64 4
  %60 = bitcast float* %59 to <4 x float>*
  %61 = load <4 x float>, <4 x float>* %60, align 4
  %62 = fmul <4 x float> %58, %32
  %63 = fmul <4 x float> %61, %34
  %64 = bitcast float* %56 to <4 x float>*
  store <4 x float> %62, <4 x float>* %64, align 4
  %65 = bitcast float* %59 to <4 x float>*
  store <4 x float> %63, <4 x float>* %65, align 4
  %66 = add i64 %43, 16
  %67 = add i64 %44, -2
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %42, !llvm.loop !5

69:                                               ; preds = %42, %28
  %70 = phi i64 [ 0, %28 ], [ %66, %42 ]
  %71 = icmp eq i64 %38, 0
  br i1 %71, label %83, label %72

72:                                               ; preds = %69
  %73 = getelementptr float, float* %14, i64 %70
  %74 = bitcast float* %73 to <4 x float>*
  %75 = load <4 x float>, <4 x float>* %74, align 4
  %76 = getelementptr float, float* %73, i64 4
  %77 = bitcast float* %76 to <4 x float>*
  %78 = load <4 x float>, <4 x float>* %77, align 4
  %79 = fmul <4 x float> %75, %32
  %80 = fmul <4 x float> %78, %34
  %81 = bitcast float* %73 to <4 x float>*
  store <4 x float> %79, <4 x float>* %81, align 4
  %82 = bitcast float* %76 to <4 x float>*
  store <4 x float> %80, <4 x float>* %82, align 4
  br label %83

83:                                               ; preds = %69, %72
  %84 = icmp eq i64 %24, %29
  br i1 %84, label %85, label %26

85:                                               ; preds = %110, %83, %4
  %86 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %10, i64 0, i32 5
  %87 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %86, i64 0, i32 0, i32 0
  %88 = load float*, float** %87, align 8
  %89 = icmp eq float* %88, null
  br i1 %89, label %96, label %90

90:                                               ; preds = %85
  %91 = ptrtoint float* %88 to i64
  %92 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %10, i64 0, i32 5, i32 0, i32 1
  %93 = bitcast float** %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = bitcast float* %88 to i8*
  tail call void @_ZdlPv(i8* %94) #9
  %95 = bitcast %"class.std::__1::vector"* %86 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #8
  br label %96

96:                                               ; preds = %85, %90
  %97 = bitcast %"class.std::__1::vector"* %1 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.std::__1::vector"* %86 to i64*
  store i64 %98, i64* %99, align 8
  %100 = bitcast float** %15 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %10, i64 0, i32 5, i32 0, i32 1
  %103 = bitcast float** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %105 = bitcast float** %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = getelementptr inbounds %class.CFX_GraphStateData, %class.CFX_GraphStateData* %10, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %108 = bitcast float** %107 to i64*
  store i64 %106, i64* %108, align 8
  %109 = bitcast %"class.std::__1::vector"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 24, i1 false) #8
  ret void

110:                                              ; preds = %26, %110
  %111 = phi float* [ %114, %110 ], [ %27, %26 ]
  %112 = load float, float* %111, align 4
  %113 = fmul float %112, %3
  store float %113, float* %111, align 4
  %114 = getelementptr inbounds float, float* %111, i64 1
  %115 = icmp eq float* %114, %16
  br i1 %115, label %85, label %110, !llvm.loop !7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.CFX_RetainableGraphStateData* @_ZN5fxcrt17SharedCopyOnWriteI28CFX_RetainableGraphStateDataE14GetPrivateCopyIJEEEPS1_DpT_(%"class.fxcrt::SharedCopyOnWrite"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.fxcrt::RetainPtr", align 8
  %3 = getelementptr inbounds %"class.fxcrt::SharedCopyOnWrite", %"class.fxcrt::SharedCopyOnWrite"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFX_RetainableGraphStateData*, %class.CFX_RetainableGraphStateData** %3, align 8
  %5 = icmp eq %class.CFX_RetainableGraphStateData* %4, null
  br i1 %5, label %6, label %28

6:                                                ; preds = %1
  %7 = tail call i8* @_Znwm(i64 56) #9, !noalias !9
  %8 = bitcast i8* %7 to %class.CFX_RetainableGraphStateData*
  tail call void @_ZN28CFX_RetainableGraphStateDataC1Ev(%class.CFX_RetainableGraphStateData* nonnull %8) #8, !noalias !9
  %9 = ptrtoint i8* %7 to i64
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8, !noalias !9
  %13 = add nsw i64 %12, 1
  store i64 %13, i64* %11, align 8, !noalias !9
  %14 = load %class.CFX_RetainableGraphStateData*, %class.CFX_RetainableGraphStateData** %3, align 8
  %15 = bitcast %"class.fxcrt::SharedCopyOnWrite"* %0 to i64*
  store i64 %9, i64* %15, align 8
  %16 = icmp eq %class.CFX_RetainableGraphStateData* %14, null
  br i1 %16, label %67, label %17

17:                                               ; preds = %6
  %18 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %14, i64 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add nsw i64 %19, -1
  store i64 %20, i64* %18, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %67

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %14, i64 0, i32 0
  %24 = bitcast %class.CFX_RetainableGraphStateData* %14 to void (%"class.fxcrt::Retainable"*)***
  %25 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %25, i64 1
  %27 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %26, align 8
  tail call void %27(%"class.fxcrt::Retainable"* nonnull %23) #8
  br label %67

28:                                               ; preds = %1
  %29 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %4, i64 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 1
  br i1 %31, label %67, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.fxcrt::RetainPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  call void @_ZNK28CFX_RetainableGraphStateData5CloneEv(%"class.fxcrt::RetainPtr"* nonnull sret %2, %class.CFX_RetainableGraphStateData* nonnull %4) #8
  %34 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.fxcrt::RetainPtr"* %2 to i64*
  %36 = load i64, i64* %35, align 8
  store %class.CFX_RetainableGraphStateData* null, %class.CFX_RetainableGraphStateData** %34, align 8
  %37 = load %class.CFX_RetainableGraphStateData*, %class.CFX_RetainableGraphStateData** %3, align 8
  %38 = bitcast %"class.fxcrt::SharedCopyOnWrite"* %0 to i64*
  store i64 %36, i64* %38, align 8
  %39 = icmp eq %class.CFX_RetainableGraphStateData* %37, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %32
  store %class.CFX_RetainableGraphStateData* null, %class.CFX_RetainableGraphStateData** %34, align 8
  br label %66

41:                                               ; preds = %32
  %42 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %37, i64 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = add nsw i64 %43, -1
  store i64 %44, i64* %42, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %47, label %46

46:                                               ; preds = %41
  store %class.CFX_RetainableGraphStateData* null, %class.CFX_RetainableGraphStateData** %34, align 8
  br label %66

47:                                               ; preds = %41
  %48 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %37, i64 0, i32 0
  %49 = bitcast %class.CFX_RetainableGraphStateData* %37 to void (%"class.fxcrt::Retainable"*)***
  %50 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, i64 1
  %52 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %51, align 8
  call void %52(%"class.fxcrt::Retainable"* nonnull %48) #8
  %53 = load %class.CFX_RetainableGraphStateData*, %class.CFX_RetainableGraphStateData** %34, align 8
  %54 = bitcast %class.CFX_RetainableGraphStateData* %53 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_RetainableGraphStateData* null, %class.CFX_RetainableGraphStateData** %34, align 8
  %55 = icmp eq %class.CFX_RetainableGraphStateData* %53, null
  br i1 %55, label %66, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %53, i64 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = add nsw i64 %58, -1
  store i64 %59, i64* %57, align 8
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %66

61:                                               ; preds = %56
  %62 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %53, i64 0, i32 0
  %63 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %54, align 8
  %64 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %63, i64 1
  %65 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %64, align 8
  call void %65(%"class.fxcrt::Retainable"* nonnull %62) #8
  br label %66

66:                                               ; preds = %46, %40, %47, %56, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  br label %67

67:                                               ; preds = %28, %66, %22, %17, %6
  %68 = load %class.CFX_RetainableGraphStateData*, %class.CFX_RetainableGraphStateData** %3, align 8
  ret %class.CFX_RetainableGraphStateData* %68
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK14CFX_GraphState12GetLineWidthEv(%class.CFX_GraphState* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CFX_GraphState, %class.CFX_GraphState* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_RetainableGraphStateData*, %class.CFX_RetainableGraphStateData** %2, align 8
  %4 = icmp eq %class.CFX_RetainableGraphStateData* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %3, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds i8, i8* %6, i64 12
  %8 = bitcast i8* %7 to float*
  %9 = load float, float* %8, align 4
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi float [ %9, %5 ], [ 1.000000e+00, %1 ]
  ret float %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_GraphState12SetLineWidthEf(%class.CFX_GraphState*, float) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CFX_GraphState, %class.CFX_GraphState* %0, i64 0, i32 0
  %4 = tail call %class.CFX_RetainableGraphStateData* @_ZN5fxcrt17SharedCopyOnWriteI28CFX_RetainableGraphStateDataE14GetPrivateCopyIJEEEPS1_DpT_(%"class.fxcrt::SharedCopyOnWrite"* %3)
  %5 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %4, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds i8, i8* %5, i64 12
  %7 = bitcast i8* %6 to float*
  store float %1, float* %7, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK14CFX_GraphState10GetLineCapEv(%class.CFX_GraphState* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CFX_GraphState, %class.CFX_GraphState* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_RetainableGraphStateData*, %class.CFX_RetainableGraphStateData** %2, align 8
  %4 = icmp eq %class.CFX_RetainableGraphStateData* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %3, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i8 [ %7, %5 ], [ 0, %1 ]
  ret i8 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_GraphState10SetLineCapEN18CFX_GraphStateData7LineCapE(%class.CFX_GraphState*, i8 zeroext) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CFX_GraphState, %class.CFX_GraphState* %0, i64 0, i32 0
  %4 = tail call %class.CFX_RetainableGraphStateData* @_ZN5fxcrt17SharedCopyOnWriteI28CFX_RetainableGraphStateDataE14GetPrivateCopyIJEEEPS1_DpT_(%"class.fxcrt::SharedCopyOnWrite"* %3)
  %5 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %4, i64 0, i32 1, i32 0
  store i8 %1, i8* %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK14CFX_GraphState11GetLineJoinEv(%class.CFX_GraphState* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CFX_GraphState, %class.CFX_GraphState* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_RetainableGraphStateData*, %class.CFX_RetainableGraphStateData** %2, align 8
  %4 = icmp eq %class.CFX_RetainableGraphStateData* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %3, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds i8, i8* %6, i64 1
  %8 = load i8, i8* %7, align 1
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i8 [ %8, %5 ], [ 0, %1 ]
  ret i8 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_GraphState11SetLineJoinEN18CFX_GraphStateData8LineJoinE(%class.CFX_GraphState*, i8 zeroext) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CFX_GraphState, %class.CFX_GraphState* %0, i64 0, i32 0
  %4 = tail call %class.CFX_RetainableGraphStateData* @_ZN5fxcrt17SharedCopyOnWriteI28CFX_RetainableGraphStateDataE14GetPrivateCopyIJEEEPS1_DpT_(%"class.fxcrt::SharedCopyOnWrite"* %3)
  %5 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %4, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds i8, i8* %5, i64 1
  store i8 %1, i8* %6, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden float @_ZNK14CFX_GraphState13GetMiterLimitEv(%class.CFX_GraphState* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.CFX_GraphState, %class.CFX_GraphState* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_RetainableGraphStateData*, %class.CFX_RetainableGraphStateData** %2, align 8
  %4 = icmp eq %class.CFX_RetainableGraphStateData* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %3, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = bitcast i8* %7 to float*
  %9 = load float, float* %8, align 8
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi float [ %9, %5 ], [ 1.000000e+01, %1 ]
  ret float %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14CFX_GraphState13SetMiterLimitEf(%class.CFX_GraphState*, float) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CFX_GraphState, %class.CFX_GraphState* %0, i64 0, i32 0
  %4 = tail call %class.CFX_RetainableGraphStateData* @_ZN5fxcrt17SharedCopyOnWriteI28CFX_RetainableGraphStateDataE14GetPrivateCopyIJEEEPS1_DpT_(%"class.fxcrt::SharedCopyOnWrite"* %3)
  %5 = getelementptr inbounds %class.CFX_RetainableGraphStateData, %class.CFX_RetainableGraphStateData* %4, i64 0, i32 1, i32 0
  %6 = getelementptr inbounds i8, i8* %5, i64 8
  %7 = bitcast i8* %6 to float*
  store float %1, float* %7, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN28CFX_RetainableGraphStateDataC1Ev(%class.CFX_RetainableGraphStateData*) unnamed_addr #6

declare void @_ZNK28CFX_RetainableGraphStateData5CloneEv(%"class.fxcrt::RetainPtr"* sret, %class.CFX_RetainableGraphStateData*) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6pdfium10MakeRetainI28CFX_RetainableGraphStateDataJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZN6pdfium10MakeRetainI28CFX_RetainableGraphStateDataJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.isvectorized", i32 1}
!7 = distinct !{!7, !8, !6}
!8 = !{!"llvm.loop.unroll.runtime.disable"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN6pdfium10MakeRetainI28CFX_RetainableGraphStateDataJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!11 = distinct !{!11, !"_ZN6pdfium10MakeRetainI28CFX_RetainableGraphStateDataJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
