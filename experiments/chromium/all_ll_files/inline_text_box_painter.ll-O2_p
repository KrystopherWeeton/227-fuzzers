; ModuleID = '../../third_party/blink/renderer/core/paint/inline_text_box_painter.cc'
source_filename = "../../third_party/blink/renderer/core/paint/inline_text_box_painter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::Color" = type { i32 }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.blink::ScopedPaintTimingDetectorBlockPaintHook" = type { %"class.absl::optional.3152", %"class.absl::optional.3161" }
%"class.absl::optional.3152" = type { %"class.absl::optional_internal::optional_data.3153" }
%"class.absl::optional_internal::optional_data.3153" = type { %"class.absl::optional_internal::optional_data_base.3154" }
%"class.absl::optional_internal::optional_data_base.3154" = type { %"class.absl::optional_internal::optional_data_dtor_base.3155" }
%"class.absl::optional_internal::optional_data_dtor_base.3155" = type { i8, %union.anon.3156 }
%union.anon.3156 = type { %"class.base::AutoReset" }
%"class.base::AutoReset" = type { %"class.blink::ScopedPaintTimingDetectorBlockPaintHook"**, %"class.blink::ScopedPaintTimingDetectorBlockPaintHook"* }
%"class.absl::optional.3161" = type { %"class.absl::optional_internal::optional_data.3162" }
%"class.absl::optional_internal::optional_data.3162" = type { %"class.absl::optional_internal::optional_data_base.3163" }
%"class.absl::optional_internal::optional_data_base.3163" = type { %"class.absl::optional_internal::optional_data_dtor_base.3164" }
%"class.absl::optional_internal::optional_data_dtor_base.3164" = type { i8, %union.anon.3165 }
%union.anon.3165 = type { %"struct.blink::ScopedPaintTimingDetectorBlockPaintHook::Data" }
%"struct.blink::ScopedPaintTimingDetectorBlockPaintHook::Data" = type { %"class.blink::LayoutBoxModelObject"*, %"class.blink::PropertyTreeStateOrAlias"*, %"class.blink::TextPaintTimingDetector"*, %"class.blink::IntRect" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1754", [4 x i8] }>
%"class.WTF::RefCounted.1754" = type { %"class.base::RefCounted.1755" }
%"class.base::RefCounted.1755" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1747", i64 }
%"class.std::__1::vector.1747" = type { %"class.std::__1::__vector_base.1748" }
%"class.std::__1::__vector_base.1748" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1749" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1749" = type { %"struct.std::__1::__compressed_pair_elem.1750" }
%"struct.std::__1::__compressed_pair_elem.1750" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3096 }
%class.scoped_refptr.3096 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3097", %"class.WTF::Vector.630", %"class.WTF::Vector.3099", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3097" = type { %"class.base::RefCounted.3098" }
%"class.base::RefCounted.3098" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.3099" = type { %"class.WTF::VectorBuffer.3100" }
%"class.WTF::VectorBuffer.3100" = type { %"class.WTF::VectorBufferBase.3101" }
%"class.WTF::VectorBufferBase.3101" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3102 }
%union.anon.3102 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1349", %"class.blink::HeapVector.1351", %"class.std::__1::unique_ptr.1359", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1365", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1378", %"class.WTF::Vector.1380", i8, i8, %"class.std::__1::unique_ptr.1385", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1391", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1399", i8, i32, %"class.blink::Member.1401", %"class.blink::Member.1403", %"class.blink::Member.1405", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1407", %"class.WTF::HashMap.1409", %"class.blink::Member.1414", %"class.blink::Member.1416", %"class.blink::Member.1418", %"class.blink::Member.1420", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1422", i8, i32, %"class.blink::Member.1429", %"class.blink::Member.1431", i32, %"class.blink::Member.1433", %"class.blink::Member.1435", %"class.blink::Member.1437", %"class.std::__1::unique_ptr.1439", i64, %"class.std::__1::unique_ptr.1445", i32, i32, %"class.blink::Member.1456", %"class.blink::Member.1458", %"class.blink::Member.1460", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1462", %"class.WTF::Vector.1464", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1469", %"class.blink::Member.1476", %"class.std::__1::unique_ptr.1478", %"class.blink::Member.1484", i8, i8, %"class.WTF::String", %"class.blink::Member.1486", i8, [7 x i8], %"class.blink::HeapHashMap.1488", %"class.blink::HeapObserverSet", %"class.blink::Member.1502", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1504", i32, i8, i8, %"class.blink::WeakMember.1506", %"class.blink::Member.1507" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1531", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1598", i32, i8, [3 x i8], %"class.blink::HeapVector.1600", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1608", %"class.blink::Member.1610", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1619", %"class.blink::Member.1742", %"class.blink::Member.1744", i8, [7 x i8] }>
%"class.blink::Supplementable.1531" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1532" }
%"class.blink::HeapHashMap.1532" = type { %"class.WTF::HashMap.1535" }
%"class.WTF::HashMap.1535" = type { %"class.WTF::HashTable.1536" }
%"class.WTF::HashTable.1536" = type <{ %"struct.WTF::KeyValuePair.1538"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1538" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1547" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1539" }
%"class.blink::HeapObserverSet.1539" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1540" }
%"class.blink::HeapHashSet.1540" = type { %"class.WTF::HashSet.1543" }
%"class.WTF::HashSet.1543" = type { %"class.WTF::HashTable.1544" }
%"class.WTF::HashTable.1544" = type <{ %"class.blink::WeakMember.1546"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1546" = type opaque
%"class.blink::Supplementable.1547" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1548" }
%"class.blink::HeapHashMap.1548" = type { %"class.WTF::HashMap.1551" }
%"class.WTF::HashMap.1551" = type { %"class.WTF::HashTable.1552" }
%"class.WTF::HashTable.1552" = type <{ %"struct.WTF::KeyValuePair.1554"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1554" = type { i8*, %"class.blink::Member.3024" }
%"class.blink::Member.3024" = type { %"class.blink::MemberBase.3025" }
%"class.blink::MemberBase.3025" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3026" }
%"class.blink::Member.3026" = type { %"class.blink::MemberBase.3027" }
%"class.blink::MemberBase.3027" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1555, %"class.std::__1::unique_ptr.1564", %"class.std::__1::unique_ptr.1564", %"class.std::__1::unique_ptr.1588", %"class.std::__1::unique_ptr.1588", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1594", i32, i32 }
%class.scoped_refptr.1555 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1556", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1558", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1563 }
%"class.WTF::RefCounted.1556" = type { %"class.base::RefCounted.1557" }
%"class.base::RefCounted.1557" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1558" = type { %"class.absl::optional_internal::optional_data.1559" }
%"class.absl::optional_internal::optional_data.1559" = type { %"class.absl::optional_internal::optional_data_base.1560" }
%"class.absl::optional_internal::optional_data_base.1560" = type { %"class.absl::optional_internal::optional_data_dtor_base.1561" }
%"class.absl::optional_internal::optional_data_dtor_base.1561" = type { i8, %union.anon.1562 }
%union.anon.1562 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1563 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1564" = type { %"class.std::__1::__compressed_pair.1565" }
%"class.std::__1::__compressed_pair.1565" = type { %"struct.std::__1::__compressed_pair_elem.1566" }
%"struct.std::__1::__compressed_pair_elem.1566" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1575", %"class.std::__1::map.1584"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1558" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1567", %"class.std::__1::__compressed_pair.1572" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1567" = type { %"struct.std::__1::__compressed_pair_elem.1568" }
%"struct.std::__1::__compressed_pair_elem.1568" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1572" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1575" = type { %"class.std::__1::__tree.1576" }
%"class.std::__1::__tree.1576" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1577", %"class.std::__1::__compressed_pair.1581" }
%"class.std::__1::__compressed_pair.1577" = type { %"struct.std::__1::__compressed_pair_elem.1568" }
%"class.std::__1::__compressed_pair.1581" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1584" = type opaque
%"class.std::__1::unique_ptr.1588" = type { %"class.std::__1::__compressed_pair.1589" }
%"class.std::__1::__compressed_pair.1589" = type { %"struct.std::__1::__compressed_pair_elem.1590" }
%"struct.std::__1::__compressed_pair_elem.1590" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1594" = type { %"class.WTF::HashTable.1595" }
%"class.WTF::HashTable.1595" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1598" = type { %"class.blink::MemberBase.1599" }
%"class.blink::MemberBase.1599" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1600" = type { %"class.WTF::Vector.1603" }
%"class.WTF::Vector.1603" = type { %"class.WTF::VectorBuffer.1604" }
%"class.WTF::VectorBuffer.1604" = type { %"class.WTF::VectorBufferBase.1605" }
%"class.WTF::VectorBufferBase.1605" = type { %"class.blink::Member.1606"*, i32, i32 }
%"class.blink::Member.1606" = type opaque
%"class.blink::Member.1608" = type { %"class.blink::MemberBase.1609" }
%"class.blink::MemberBase.1609" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1610" = type { %"class.blink::MemberBase.1611" }
%"class.blink::MemberBase.1611" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1612", i32, i32 }
%"class.blink::HeapHashMap.1612" = type { %"class.WTF::HashMap.1615" }
%"class.WTF::HashMap.1615" = type { %"class.WTF::HashTable.1616" }
%"class.WTF::HashTable.1616" = type <{ %"struct.WTF::KeyValuePair.1618"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1618" = type opaque
%"class.std::__1::unique_ptr.1619" = type { %"class.std::__1::__compressed_pair.1620" }
%"class.std::__1::__compressed_pair.1620" = type { %"struct.std::__1::__compressed_pair_elem.1621" }
%"struct.std::__1::__compressed_pair_elem.1621" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1622" }
%"class.std::__1::unique_ptr.1622" = type { %"class.std::__1::__compressed_pair.1623" }
%"class.std::__1::__compressed_pair.1623" = type { %"struct.std::__1::__compressed_pair_elem.1624" }
%"struct.std::__1::__compressed_pair_elem.1624" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1625" }
%"class.WTF::Vector.1625" = type { %"class.WTF::VectorBuffer.1626" }
%"class.WTF::VectorBuffer.1626" = type { %"class.WTF::VectorBufferBase.1627" }
%"class.WTF::VectorBufferBase.1627" = type { %"class.mojo::StructPtr.1628"*, i32, i32 }
%"class.mojo::StructPtr.1628" = type { %"class.std::__1::unique_ptr.1629" }
%"class.std::__1::unique_ptr.1629" = type { %"class.std::__1::__compressed_pair.1630" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.1631" }
%"struct.std::__1::__compressed_pair_elem.1631" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1632", %"class.WTF::HashMap.1639", %"class.WTF::HashMap.1644", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1649", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1632" = type { %"class.std::__1::unique_ptr.1633" }
%"class.std::__1::unique_ptr.1633" = type { %"class.std::__1::__compressed_pair.1634" }
%"class.std::__1::__compressed_pair.1634" = type { %"struct.std::__1::__compressed_pair_elem.1635" }
%"struct.std::__1::__compressed_pair_elem.1635" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1639" = type { %"class.WTF::HashTable.1640" }
%"class.WTF::HashTable.1640" = type <{ %"struct.WTF::KeyValuePair.1643"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1643" = type opaque
%"class.WTF::HashMap.1644" = type { %"class.WTF::HashTable.1645" }
%"class.WTF::HashTable.1645" = type <{ %"struct.WTF::KeyValuePair.1648"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1648" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1649" = type { %"class.std::__1::unique_ptr.1650" }
%"class.std::__1::unique_ptr.1650" = type { %"class.std::__1::__compressed_pair.1651" }
%"class.std::__1::__compressed_pair.1651" = type { %"struct.std::__1::__compressed_pair_elem.1652" }
%"struct.std::__1::__compressed_pair_elem.1652" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1733" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1664", i32 }>
%"class.std::__1::unique_ptr.1664" = type { %"class.std::__1::__compressed_pair.1665" }
%"class.std::__1::__compressed_pair.1665" = type { %"struct.std::__1::__compressed_pair_elem.1666" }
%"struct.std::__1::__compressed_pair_elem.1666" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1667", %"class.absl::optional.1668", %"class.absl::optional.1673", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1686", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1708", %"class.std::__1::map.1719", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1728", i8, %class.scoped_refptr.1678, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1729" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1667" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1668" = type { %"class.absl::optional_internal::optional_data.1669" }
%"class.absl::optional_internal::optional_data.1669" = type { %"class.absl::optional_internal::optional_data_base.1670" }
%"class.absl::optional_internal::optional_data_base.1670" = type { %"class.absl::optional_internal::optional_data_dtor_base.1671" }
%"class.absl::optional_internal::optional_data_dtor_base.1671" = type { i8, %union.anon.1672 }
%union.anon.1672 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1673" = type { %"class.absl::optional_internal::optional_data.1674" }
%"class.absl::optional_internal::optional_data.1674" = type { %"class.absl::optional_internal::optional_data_base.1675" }
%"class.absl::optional_internal::optional_data_base.1675" = type { %"class.absl::optional_internal::optional_data_dtor_base.1676" }
%"class.absl::optional_internal::optional_data_dtor_base.1676" = type { i8, %union.anon.1677 }
%union.anon.1677 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1678, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1679" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1679" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1684 }
%class.scoped_refptr.1684 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1746", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1678, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1746" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1685 }
%class.scoped_refptr.1685 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1686" = type { %"class.std::__1::__compressed_pair.1687" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1689", %class.scoped_refptr.1690 }
%"class.base::RepeatingCallback.1689" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1690 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1691", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1691" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1695", %"class.std::__1::unique_ptr.1701", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1707" }
%"class.std::__1::unique_ptr.1695" = type { %"class.std::__1::__compressed_pair.1696" }
%"class.std::__1::__compressed_pair.1696" = type { %"struct.std::__1::__compressed_pair_elem.1697" }
%"struct.std::__1::__compressed_pair_elem.1697" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1701" = type { %"class.std::__1::__compressed_pair.1702" }
%"class.std::__1::__compressed_pair.1702" = type { %"struct.std::__1::__compressed_pair_elem.1703" }
%"struct.std::__1::__compressed_pair_elem.1703" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1707" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1708" = type { %"class.std::__1::__tree.1709" }
%"class.std::__1::__tree.1709" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1710", %"class.std::__1::__compressed_pair.1714" }
%"class.std::__1::__compressed_pair.1710" = type { %"struct.std::__1::__compressed_pair_elem.1568" }
%"class.std::__1::__compressed_pair.1714" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1719" = type { %"class.std::__1::__tree.1720" }
%"class.std::__1::__tree.1720" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1721", %"class.std::__1::__compressed_pair.1725" }
%"class.std::__1::__compressed_pair.1721" = type { %"struct.std::__1::__compressed_pair_elem.1568" }
%"class.std::__1::__compressed_pair.1725" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1728" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1678 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1729" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1733" = type { %"class.std::__1::__compressed_pair.1734" }
%"class.std::__1::__compressed_pair.1734" = type { %"struct.std::__1::__compressed_pair_elem.1735" }
%"struct.std::__1::__compressed_pair_elem.1735" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1742" = type { %"class.blink::MemberBase.1743" }
%"class.blink::MemberBase.1743" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1744" = type { %"class.blink::MemberBase.1745" }
%"class.blink::MemberBase.1745" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1522", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1522" = type { %"class.WTF::Vector.1525" }
%"class.WTF::Vector.1525" = type { %"class.WTF::VectorBuffer.1526" }
%"class.WTF::VectorBuffer.1526" = type { %"class.WTF::VectorBufferBase.1527" }
%"class.WTF::VectorBufferBase.1527" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3110 }
%class.scoped_refptr.3110 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.3120" }
%"class.blink::Member.3120" = type { %"class.blink::MemberBase.3121" }
%"class.blink::MemberBase.3121" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.3116" }
%"class.blink::MemberBase.3116" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.3117" }
%"class.blink::MemberBase.3117" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.3118" }
%"class.blink::MemberBase.3118" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.3119" }
%"class.blink::MemberBase.3119" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3111", %"class.WTF::Vector.3111" }
%"class.WTF::Vector.3111" = type { %"class.WTF::VectorBuffer.3112" }
%"class.WTF::VectorBuffer.3112" = type { %"class.WTF::VectorBufferBase.3113" }
%"class.WTF::VectorBufferBase.3113" = type { %class.scoped_refptr.3110*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::HeapHashMap.1342", %"class.blink::DocumentMarker::MarkerTypes", %"class.blink::Member.326" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.966" }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashMap.1342" = type { %"class.WTF::HashMap.1345" }
%"class.WTF::HashMap.1345" = type { %"class.WTF::HashTable.1346" }
%"class.WTF::HashTable.1346" = type <{ %"struct.WTF::KeyValuePair.1348"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1348" = type opaque
%"class.blink::DocumentMarker::MarkerTypes" = type { i32 }
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1349" = type { %"class.blink::MemberBase.1350" }
%"class.blink::MemberBase.1350" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1351" = type { %"class.WTF::Vector.1354" }
%"class.WTF::Vector.1354" = type { %"class.WTF::VectorBuffer.1355" }
%"class.WTF::VectorBuffer.1355" = type { %"class.WTF::VectorBufferBase.1356" }
%"class.WTF::VectorBufferBase.1356" = type { %"class.blink::Member.1357"*, i32, i32 }
%"class.blink::Member.1357" = type opaque
%"class.std::__1::unique_ptr.1359" = type { %"class.std::__1::__compressed_pair.1360" }
%"class.std::__1::__compressed_pair.1360" = type { %"struct.std::__1::__compressed_pair_elem.1361" }
%"struct.std::__1::__compressed_pair_elem.1361" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1365" = type { %"class.WTF::HashSet.1368" }
%"class.WTF::HashSet.1368" = type { %"class.WTF::HashTable.1369" }
%"class.WTF::HashTable.1369" = type <{ %"class.blink::WeakMember.1371"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1371" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1372", i32, [4 x i8] }>
%"class.WTF::Vector.1372" = type { %"class.WTF::VectorBuffer.1373" }
%"class.WTF::VectorBuffer.1373" = type { %"class.WTF::VectorBufferBase.1374" }
%"class.WTF::VectorBufferBase.1374" = type { %"struct.std::__1::pair.1375"*, i32, i32 }
%"struct.std::__1::pair.1375" = type opaque
%"class.blink::Member.1378" = type { %"class.blink::MemberBase.1379" }
%"class.blink::MemberBase.1379" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1380" = type { %"class.WTF::VectorBuffer.1381" }
%"class.WTF::VectorBuffer.1381" = type { %"class.WTF::VectorBufferBase.1382" }
%"class.WTF::VectorBufferBase.1382" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1385" = type { %"class.std::__1::__compressed_pair.1386" }
%"class.std::__1::__compressed_pair.1386" = type { %"struct.std::__1::__compressed_pair_elem.1387" }
%"struct.std::__1::__compressed_pair_elem.1387" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1391" = type { %"class.WTF::Vector.1394" }
%"class.WTF::Vector.1394" = type { %"class.WTF::VectorBuffer.1395" }
%"class.WTF::VectorBuffer.1395" = type { %"class.WTF::VectorBufferBase.1396" }
%"class.WTF::VectorBufferBase.1396" = type { %"class.blink::Member.1397"*, i32, i32 }
%"class.blink::Member.1397" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1399" = type { %"class.blink::MemberBase.1400" }
%"class.blink::MemberBase.1400" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1401" = type { %"class.blink::MemberBase.1402" }
%"class.blink::MemberBase.1402" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1403" = type { %"class.blink::MemberBase.1404" }
%"class.blink::MemberBase.1404" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1409" = type { %"class.WTF::HashTable.1410" }
%"class.WTF::HashTable.1410" = type <{ %"struct.WTF::KeyValuePair.1413"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1413" = type opaque
%"class.blink::Member.1414" = type { %"class.blink::MemberBase.1415" }
%"class.blink::MemberBase.1415" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1416" = type { %"class.blink::MemberBase.1417" }
%"class.blink::MemberBase.1417" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1418" = type { %"class.blink::MemberBase.1419" }
%"class.blink::MemberBase.1419" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1422" = type { %"class.WTF::HashSet.1425" }
%"class.WTF::HashSet.1425" = type { %"class.WTF::HashTable.1426" }
%"class.WTF::HashTable.1426" = type <{ %"class.blink::Member.1428"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1428" = type opaque
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1431" = type { %"class.blink::MemberBase.1432" }
%"class.blink::MemberBase.1432" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1433" = type { %"class.blink::MemberBase.1434" }
%"class.blink::MemberBase.1434" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1435" = type { %"class.blink::MemberBase.1436" }
%"class.blink::MemberBase.1436" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1437" = type { %"class.blink::MemberBase.1438" }
%"class.blink::MemberBase.1438" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1439" = type { %"class.std::__1::__compressed_pair.1440" }
%"class.std::__1::__compressed_pair.1440" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"struct.std::__1::__compressed_pair_elem.1441" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1445" = type { %"class.std::__1::__compressed_pair.1446" }
%"class.std::__1::__compressed_pair.1446" = type { %"struct.std::__1::__compressed_pair_elem.1447" }
%"struct.std::__1::__compressed_pair_elem.1447" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1448", %"class.WTF::HashMap.1448", %"class.WTF::HashMap.1448", %"class.WTF::HashMap.1448", %"class.WTF::HashMap.1448", %"class.WTF::HashMap.1448", %"class.WTF::HashMap.1448", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1448" = type { %"class.WTF::HashTable.1449" }
%"class.WTF::HashTable.1449" = type <{ %"struct.WTF::KeyValuePair.1452"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1452" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1456" = type { %"class.blink::MemberBase.1457" }
%"class.blink::MemberBase.1457" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1458" = type { %"class.blink::MemberBase.1459" }
%"class.blink::MemberBase.1459" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1460" = type { %"class.blink::MemberBase.1461" }
%"class.blink::MemberBase.1461" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1462" = type { %"class.blink::MemberBase.1463" }
%"class.blink::MemberBase.1463" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1464" = type { %"class.WTF::VectorBuffer.1465" }
%"class.WTF::VectorBuffer.1465" = type { %"class.WTF::VectorBufferBase.1466" }
%"class.WTF::VectorBufferBase.1466" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1469" = type { %"class.WTF::HashMap.1472" }
%"class.WTF::HashMap.1472" = type { %"class.WTF::HashTable.1473" }
%"class.WTF::HashTable.1473" = type <{ %"struct.WTF::KeyValuePair.1475"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1475" = type opaque
%"class.blink::Member.1476" = type { %"class.blink::MemberBase.1477" }
%"class.blink::MemberBase.1477" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1478" = type { %"class.std::__1::__compressed_pair.1479" }
%"class.std::__1::__compressed_pair.1479" = type { %"struct.std::__1::__compressed_pair_elem.1480" }
%"struct.std::__1::__compressed_pair_elem.1480" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1484" = type { %"class.blink::MemberBase.1485" }
%"class.blink::MemberBase.1485" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1486" = type { %"class.blink::MemberBase.1487" }
%"class.blink::MemberBase.1487" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1488" = type { %"class.WTF::HashMap.1491" }
%"class.WTF::HashMap.1491" = type { %"class.WTF::HashTable.1492" }
%"class.WTF::HashTable.1492" = type <{ %"struct.WTF::KeyValuePair.1494"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1494" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1495" }
%"class.blink::HeapHashSet.1495" = type { %"class.WTF::HashSet.1498" }
%"class.WTF::HashSet.1498" = type { %"class.WTF::HashTable.1499" }
%"class.WTF::HashTable.1499" = type <{ %"class.blink::WeakMember.1501"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1501" = type opaque
%"class.blink::Member.1502" = type { %"class.blink::MemberBase.1503" }
%"class.blink::MemberBase.1503" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1504" = type { %"class.blink::MemberBase.1505" }
%"class.blink::MemberBase.1505" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1511", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1518", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1511" = type { %"class.WTF::HashSet.1514" }
%"class.WTF::HashSet.1514" = type { %"class.WTF::HashTable.1515" }
%"class.WTF::HashTable.1515" = type <{ %"class.blink::Member.1517"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1517" = type opaque
%"class.blink::HeapTaskRunnerTimer.1518" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1519", { i64, i64 } }
%"class.blink::WeakMember.1519" = type { %"class.blink::MemberBase.1505" }
%"class.blink::WeakMember.1506" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1507" = type { %"class.blink::MemberBase.1508" }
%"class.blink::MemberBase.1508" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.3091" }
%"class.WTF::Vector.3091" = type { %"class.WTF::VectorBuffer.3092" }
%"class.WTF::VectorBuffer.3092" = type { %"class.WTF::VectorBufferBase.3093" }
%"class.WTF::VectorBufferBase.3093" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2873", %"class.absl::optional.2873", %"class.absl::optional.2873" }
%"class.absl::optional.2873" = type { %"class.absl::optional_internal::optional_data.2874" }
%"class.absl::optional_internal::optional_data.2874" = type { %"class.absl::optional_internal::optional_data_base.2875" }
%"class.absl::optional_internal::optional_data_base.2875" = type { %"class.absl::optional_internal::optional_data_dtor_base.2876" }
%"class.absl::optional_internal::optional_data_dtor_base.2876" = type { i8, %union.anon.2877 }
%union.anon.2877 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.3106" }
%"class.WTF::VectorBuffer.3106" = type { %"class.WTF::VectorBufferBase.3107", [32 x i8] }
%"class.WTF::VectorBufferBase.3107" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::TextPaintTimingDetector" = type opaque
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::InlineTextBoxPainter" = type { %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type { %"class.blink::InlineBox", %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*, i32, i16, i16 }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1756", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1756" = type { %"class.std::__1::__compressed_pair.1757" }
%"class.std::__1::__compressed_pair.1757" = type { %"struct.std::__1::__compressed_pair_elem.1758" }
%"struct.std::__1::__compressed_pair_elem.1758" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1759", %"class.absl::optional.1764" }
%"class.absl::optional.1759" = type { %"class.absl::optional_internal::optional_data.1760" }
%"class.absl::optional_internal::optional_data.1760" = type { %"class.absl::optional_internal::optional_data_base.1761" }
%"class.absl::optional_internal::optional_data_base.1761" = type { %"class.absl::optional_internal::optional_data_dtor_base.1762" }
%"class.absl::optional_internal::optional_data_dtor_base.1762" = type { i8, %union.anon.1763 }
%union.anon.1763 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.absl::optional.1764" = type { %"class.absl::optional_internal::optional_data.1765" }
%"class.absl::optional_internal::optional_data.1765" = type { %"class.absl::optional_internal::optional_data_base.1766" }
%"class.absl::optional_internal::optional_data_base.1766" = type { %"class.absl::optional_internal::optional_data_dtor_base.1767" }
%"class.absl::optional_internal::optional_data_dtor_base.1767" = type { i8, %union.anon.1768 }
%union.anon.1768 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"struct.blink::PaintInfo" = type <{ %"class.blink::GraphicsContext"*, i32, %"class.blink::CullRect", [4 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutUnit", i32, i32, i8, i8, [2 x i8] }>
%"class.blink::GraphicsContext" = type { %"class.cc::PaintCanvas"*, %"class.blink::PaintController"*, %"class.WTF::Vector.1847", i32, %"class.blink::GraphicsContextState"*, %"class.cc::PaintRecorder", %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"*, float, %"class.std::__1::unique_ptr.1927", i8, i8, i8, i32 }
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1772, %class.scoped_refptr.1772, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1827", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1832", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1772 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1773", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1780" }
%"class.WTF::RefCounted.1773" = type { %"class.base::RefCounted.1774" }
%"class.base::RefCounted.1774" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1775", i32, [4 x i8] }>
%"class.WTF::Vector.1775" = type { %"class.WTF::VectorBuffer.1776" }
%"class.WTF::VectorBuffer.1776" = type { %"class.WTF::VectorBufferBase.1777" }
%"class.WTF::VectorBufferBase.1777" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1780" = type { %"class.WTF::VectorBuffer.1781" }
%"class.WTF::VectorBuffer.1781" = type { %"class.WTF::VectorBufferBase.1782" }
%"class.WTF::VectorBufferBase.1782" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1783", %"class.std::__1::unique_ptr.1799", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1783" = type { %"class.std::__1::__compressed_pair.1784" }
%"class.std::__1::__compressed_pair.1784" = type { %"struct.std::__1::__compressed_pair_elem.1785" }
%"struct.std::__1::__compressed_pair_elem.1785" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1786", %"class.WTF::Vector.1791", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1786" = type { %"class.WTF::VectorBuffer.1787" }
%"class.WTF::VectorBuffer.1787" = type { %"class.WTF::VectorBufferBase.1788" }
%"class.WTF::VectorBufferBase.1788" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1791" = type { %"class.WTF::VectorBuffer.1792" }
%"class.WTF::VectorBuffer.1792" = type { %"class.WTF::VectorBufferBase.1793" }
%"class.WTF::VectorBufferBase.1793" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.1799" = type { %"class.std::__1::__compressed_pair.1800" }
%"class.std::__1::__compressed_pair.1800" = type { %"struct.std::__1::__compressed_pair_elem.1801" }
%"struct.std::__1::__compressed_pair_elem.1801" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1802", %"class.absl::optional.1802" }
%"class.absl::optional.1802" = type { %"class.absl::optional_internal::optional_data.1803" }
%"class.absl::optional_internal::optional_data.1803" = type { %"class.absl::optional_internal::optional_data_base.1804" }
%"class.absl::optional_internal::optional_data_base.1804" = type { %"class.absl::optional_internal::optional_data_dtor_base.1805" }
%"class.absl::optional_internal::optional_data_dtor_base.1805" = type { i8, [3 x i8], %union.anon.1806 }
%union.anon.1806 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1780"*, %"class.absl::optional.1812", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1812" = type { %"class.absl::optional_internal::optional_data.1813" }
%"class.absl::optional_internal::optional_data.1813" = type { %"class.absl::optional_internal::optional_data_base.1814" }
%"class.absl::optional_internal::optional_data_base.1814" = type { %"class.absl::optional_internal::optional_data_dtor_base.1815" }
%"class.absl::optional_internal::optional_data_dtor_base.1815" = type { i8, %union.anon.1816 }
%union.anon.1816 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1817", %"class.WTF::Vector.1822" }
%"class.WTF::Vector.1817" = type { %"class.WTF::VectorBuffer.1818" }
%"class.WTF::VectorBuffer.1818" = type { %"class.WTF::VectorBufferBase.1819", [128 x i8] }
%"class.WTF::VectorBufferBase.1819" = type { i32*, i32, i32 }
%"class.WTF::Vector.1822" = type { %"class.WTF::VectorBuffer.1823" }
%"class.WTF::VectorBuffer.1823" = type { %"class.WTF::VectorBufferBase.1824", [128 x i8] }
%"class.WTF::VectorBufferBase.1824" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1827" = type { %"class.WTF::VectorBuffer.1828" }
%"class.WTF::VectorBuffer.1828" = type { %"class.WTF::VectorBufferBase.1829" }
%"class.WTF::VectorBufferBase.1829" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1832" = type { %"class.WTF::HashTable.1833" }
%"class.WTF::HashTable.1833" = type <{ %"struct.WTF::KeyValuePair.1836"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1836" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1837", %"class.WTF::Vector.1842" }
%"class.WTF::HashMap.1837" = type { %"class.WTF::HashTable.1838" }
%"class.WTF::HashTable.1838" = type <{ %"struct.WTF::KeyValuePair.1841"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1841" = type opaque
%"class.WTF::Vector.1842" = type { %"class.WTF::VectorBuffer.1843" }
%"class.WTF::VectorBuffer.1843" = type { %"class.WTF::VectorBufferBase.1844" }
%"class.WTF::VectorBufferBase.1844" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.WTF::Vector.1847" = type { %"class.WTF::VectorBuffer.1848" }
%"class.WTF::VectorBuffer.1848" = type { %"class.WTF::VectorBufferBase.1849" }
%"class.WTF::VectorBufferBase.1849" = type { %"class.std::__1::unique_ptr.1850"*, i32, i32 }
%"class.std::__1::unique_ptr.1850" = type { %"class.std::__1::__compressed_pair.1851" }
%"class.std::__1::__compressed_pair.1851" = type { %"struct.std::__1::__compressed_pair_elem.1852" }
%"struct.std::__1::__compressed_pair_elem.1852" = type { %"class.blink::GraphicsContextState"* }
%"class.blink::GraphicsContextState" = type <{ %"class.cc::PaintFlags", %"class.cc::PaintFlags", %"class.blink::StrokeData", i32, i32, i16, i8, [5 x i8] }>
%"class.cc::PaintFlags" = type <{ %class.sk_sp.1853, %class.sk_sp.1854, %class.sk_sp.1892, %class.sk_sp.1893, %class.sk_sp.1894, %class.sk_sp.817, i32, float, float, i32, %union.anon.1895, [4 x i8] }>
%class.sk_sp.1853 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1854 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.1855", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.1863, i32, %"class.absl::optional.1879", %"class.std::__1::vector.842", %"class.std::__1::vector.1884", %class.sk_sp.1891, %class.sk_sp.1860, i32, [4 x i8] }>
%"class.absl::optional.1855" = type { %"class.absl::optional_internal::optional_data.1856" }
%"class.absl::optional_internal::optional_data.1856" = type { %"class.absl::optional_internal::optional_data_base.1857" }
%"class.absl::optional_internal::optional_data_base.1857" = type { %"class.absl::optional_internal::optional_data_dtor_base.1858" }
%"class.absl::optional_internal::optional_data_dtor_base.1858" = type { i8, %union.anon.1859 }
%union.anon.1859 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.cc::PaintImage" = type { %class.sk_sp.1860, %class.sk_sp.1863, %"class.gfx::Rect", i32, %class.sk_sp.1868, %class.sk_sp.1876, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.1860, %class.scoped_refptr.1877 }
%class.sk_sp.1868 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.1869" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1861, i32, i32 }
%class.sk_sp.1861 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.1862, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.1862 = type { %"struct.std::__1::atomic.41" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.1869" = type { %"class.std::__1::__vector_base.1870" }
%"class.std::__1::__vector_base.1870" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.1871" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.1871" = type { %"struct.std::__1::__compressed_pair_elem.1872" }
%"struct.std::__1::__compressed_pair_elem.1872" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.1876 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr.1877 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1878", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1878" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.sk_sp.1863 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.1864", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1864" = type { %"class.std::__1::__compressed_pair.1865" }
%"class.std::__1::__compressed_pair.1865" = type { %"struct.std::__1::__compressed_pair_elem.1866" }
%"struct.std::__1::__compressed_pair_elem.1866" = type { i8* }
%"class.absl::optional.1879" = type { %"class.absl::optional_internal::optional_data.1880" }
%"class.absl::optional_internal::optional_data.1880" = type { %"class.absl::optional_internal::optional_data_base.1881" }
%"class.absl::optional_internal::optional_data_base.1881" = type { %"class.absl::optional_internal::optional_data_dtor_base.1882" }
%"class.absl::optional_internal::optional_data_dtor_base.1882" = type { i8, %union.anon.1883 }
%union.anon.1883 = type { %"class.gfx::SizeF" }
%"class.std::__1::vector.1884" = type { %"class.std::__1::__vector_base.1885" }
%"class.std::__1::__vector_base.1885" = type { float*, float*, %"class.std::__1::__compressed_pair.1886" }
%"class.std::__1::__compressed_pair.1886" = type { %"struct.std::__1::__compressed_pair_elem.1887" }
%"struct.std::__1::__compressed_pair_elem.1887" = type { float* }
%class.sk_sp.1891 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.238", [7 x i8] }>
%class.sk_sp.1860 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.1892 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1893 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.1894 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon.1895 = type { i32 }
%"class.blink::StrokeData" = type { i32, float, i32, i32, float, %class.sk_sp.1853 }
%"class.cc::PaintRecorder" = type { i32 (...)**, %class.scoped_refptr.1901, %"class.std::__1::unique_ptr.1902" }
%class.scoped_refptr.1901 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.std::__1::unique_ptr.1902" = type { %"class.std::__1::__compressed_pair.1903" }
%"class.std::__1::__compressed_pair.1903" = type { %"struct.std::__1::__compressed_pair_elem.1904" }
%"struct.std::__1::__compressed_pair_elem.1904" = type { %"class.cc::RecordPaintCanvas"* }
%"class.cc::RecordPaintCanvas" = type { %"class.cc::PaintCanvas", %"class.cc::DisplayItemList"*, %"class.absl::optional.1905", %struct.SkRect }
%"class.absl::optional.1905" = type { %"class.absl::optional_internal::optional_data.1906" }
%"class.absl::optional_internal::optional_data.1906" = type { %"class.absl::optional_internal::optional_data_base.1907" }
%"class.absl::optional_internal::optional_data_base.1907" = type { %"class.absl::optional_internal::optional_data_dtor_base.1908" }
%"class.absl::optional_internal::optional_data_dtor_base.1908" = type { i8, %union.anon.1909 }
%union.anon.1909 = type { %class.SkNoDrawCanvas }
%class.SkNoDrawCanvas = type { %class.SkCanvasVirtualEnforcer }
%class.SkCanvasVirtualEnforcer = type { %class.SkCanvas }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.1910, [384 x i64], %class.sk_sp.1911, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.1912", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.1918" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.1910 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.1911 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr.1912" = type { %"class.std::__1::__compressed_pair.1913" }
%"class.std::__1::__compressed_pair.1913" = type { %"struct.std::__1::__compressed_pair_elem.1914" }
%"struct.std::__1::__compressed_pair_elem.1914" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.1918" = type { %"class.std::__1::__compressed_pair.1919" }
%"class.std::__1::__compressed_pair.1919" = type { %"struct.std::__1::__compressed_pair_elem.1920" }
%"struct.std::__1::__compressed_pair_elem.1920" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%"class.std::__1::unique_ptr.1927" = type { %"class.std::__1::__compressed_pair.1928" }
%"class.std::__1::__compressed_pair.1928" = type { %"struct.std::__1::__compressed_pair_elem.1929" }
%"struct.std::__1::__compressed_pair_elem.1929" = type { %"class.blink::DarkModeFilter"* }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional.1948", %"class.std::__1::unique_ptr.1953" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr.1930", %"class.std::__1::unique_ptr.1930", %"class.std::__1::unique_ptr.1936", %"class.std::__1::unique_ptr.1942", %class.sk_sp.1893 }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1930" = type { %"class.std::__1::__compressed_pair.1931" }
%"class.std::__1::__compressed_pair.1931" = type { %"struct.std::__1::__compressed_pair_elem.1932" }
%"struct.std::__1::__compressed_pair_elem.1932" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type opaque
%"class.std::__1::unique_ptr.1936" = type { %"class.std::__1::__compressed_pair.1937" }
%"class.std::__1::__compressed_pair.1937" = type { %"struct.std::__1::__compressed_pair_elem.1938" }
%"struct.std::__1::__compressed_pair_elem.1938" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type opaque
%"class.std::__1::unique_ptr.1942" = type { %"class.std::__1::__compressed_pair.1943" }
%"class.std::__1::__compressed_pair.1943" = type { %"struct.std::__1::__compressed_pair_elem.1944" }
%"struct.std::__1::__compressed_pair_elem.1944" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type opaque
%"class.absl::optional.1948" = type { %"class.absl::optional_internal::optional_data.1949" }
%"class.absl::optional_internal::optional_data.1949" = type { %"class.absl::optional_internal::optional_data_base.1950" }
%"class.absl::optional_internal::optional_data_base.1950" = type { %"class.absl::optional_internal::optional_data_dtor_base.1951" }
%"class.absl::optional_internal::optional_data_dtor_base.1951" = type { i8, %union.anon.1952 }
%union.anon.1952 = type { i32 }
%"class.std::__1::unique_ptr.1953" = type { %"class.std::__1::__compressed_pair.1954" }
%"class.std::__1::__compressed_pair.1954" = type { %"struct.std::__1::__compressed_pair_elem.1955" }
%"struct.std::__1::__compressed_pair_elem.1955" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::LineLayoutText" = type { %"class.blink::LineLayoutItem" }
%"class.absl::optional.1962" = type { %"class.absl::optional_internal::optional_data.1963" }
%"class.absl::optional_internal::optional_data.1963" = type { %"class.absl::optional_internal::optional_data_base.1964" }
%"class.absl::optional_internal::optional_data_base.1964" = type { %"class.absl::optional_internal::optional_data_dtor_base.1965" }
%"class.absl::optional_internal::optional_data_dtor_base.1965" = type { i8, %union.anon.1966 }
%union.anon.1966 = type { %"class.blink::SelectionBoundsRecorder" }
%"class.blink::SelectionBoundsRecorder" = type { i32, %"struct.blink::PhysicalRect", %"class.blink::PaintController"*, i8, i8, %"class.blink::LayoutObject"* }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.absl::optional.2868" = type { %"class.absl::optional_internal::optional_data.2869" }
%"class.absl::optional_internal::optional_data.2869" = type { %"class.absl::optional_internal::optional_data_base.2870" }
%"class.absl::optional_internal::optional_data_base.2870" = type { %"class.absl::optional_internal::optional_data_dtor_base.2871" }
%"class.absl::optional_internal::optional_data_dtor_base.2871" = type { i8, [7 x i8], %union.anon.2872 }
%union.anon.2872 = type { %"class.blink::DrawingRecorder" }
%"class.blink::DrawingRecorder" = type <{ %"class.blink::GraphicsContext"*, %"class.blink::DisplayItemClient"*, i32, %"class.blink::IntRect", %"class.absl::optional.2873", [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.2878, i32, i8, i8, [2 x i8] }>
%union.anon.2878 = type { %"class.WTF::Vector.2879" }
%"class.WTF::Vector.2879" = type { %"class.WTF::VectorBuffer.2880" }
%"class.WTF::VectorBuffer.2880" = type { %"class.WTF::VectorBufferBase.2881", [16 x i8] }
%"class.WTF::VectorBufferBase.2881" = type { i8*, i32, i32 }
%"class.blink::TextRun" = type <{ %union.anon.2889, i32, i32, float, float, i16, [2 x i8], %"struct.blink::TabSize", [4 x i8] }>
%union.anon.2889 = type { i8* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.absl::optional.2890" = type { %"class.absl::optional_internal::optional_data.2891" }
%"class.absl::optional_internal::optional_data.2891" = type { %"class.absl::optional_internal::optional_data_base.2892" }
%"class.absl::optional_internal::optional_data_base.2892" = type { %"class.absl::optional_internal::optional_data_dtor_base.2893" }
%"class.absl::optional_internal::optional_data_dtor_base.2893" = type { i8, %union.anon.2894 }
%union.anon.2894 = type { %"class.blink::AffineTransform" }
%"struct.blink::TextPaintStyle" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", float, i32, %"class.blink::ShadowList"*, %"class.absl::optional.2900" }
%"class.absl::optional.2900" = type { %"class.absl::optional_internal::optional_data.2901" }
%"class.absl::optional_internal::optional_data.2901" = type { %"class.absl::optional_internal::optional_data_base.2902" }
%"class.absl::optional_internal::optional_data_base.2902" = type { %"class.absl::optional_internal::optional_data_dtor_base.2903" }
%"class.absl::optional_internal::optional_data_dtor_base.2903" = type { i8, %union.anon.2904 }
%union.anon.2904 = type { %"class.blink::AppliedTextDecoration" }
%"class.blink::HeapVector.2905" = type { %"class.WTF::Vector.2908" }
%"class.WTF::Vector.2908" = type { %"class.WTF::VectorBuffer.2909" }
%"class.WTF::VectorBuffer.2909" = type { %"class.WTF::VectorBufferBase.2910" }
%"class.WTF::VectorBufferBase.2910" = type { %"class.blink::Member.2911"*, i32, i32 }
%"class.blink::Member.2911" = type { %"class.blink::MemberBase.2912" }
%"class.blink::MemberBase.2912" = type { %"class.blink::DocumentMarker"* }
%"class.blink::DocumentMarker" = type { i32 (...)**, i32, i32 }
%"class.blink::TextPainter" = type { %"class.blink::TextPainterBase", %"class.blink::TextRun"*, %"class.blink::LayoutTextCombine"* }
%"class.blink::TextPainterBase" = type { i32 (...)**, %"class.blink::GraphicsContext"*, %"class.blink::Font"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", i8, i8, %"class.WTF::AtomicString", i32, i32 }
%"class.blink::LayoutTextCombine" = type <{ %"class.blink::LayoutText", float, float, i8, [7 x i8] }>
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.2867 }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2867 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.absl::optional.2916" = type { %"class.absl::optional_internal::optional_data.2917" }
%"class.absl::optional_internal::optional_data.2917" = type { %"class.absl::optional_internal::optional_data_base.2918" }
%"class.absl::optional_internal::optional_data_base.2918" = type { %"class.absl::optional_internal::optional_data_dtor_base.2919" }
%"class.absl::optional_internal::optional_data_dtor_base.2919" = type { i8, %union.anon.2920 }
%union.anon.2920 = type { %"class.blink::TextDecorationInfo" }
%"class.blink::TextDecorationInfo" = type { %"class.blink::ComputedStyle"*, %"class.absl::optional.2900", i32, %"class.blink::LayoutUnit", %"class.blink::SimpleFontData"*, float, i32, %"class.blink::FloatPoint", i8, %"class.WTF::Vector.2921", i32, [4 x i8], [3 x %"struct.blink::TextDecorationInfo::PerLineData"] }
%"class.WTF::Vector.2921" = type { %"class.WTF::VectorBuffer.2922" }
%"class.WTF::VectorBuffer.2922" = type { %"class.WTF::VectorBufferBase.2923" }
%"class.WTF::VectorBufferBase.2923" = type { float*, i32, i32 }
%"struct.blink::TextDecorationInfo::PerLineData" = type { float, float, i32, [4 x i8], %"class.absl::optional.2926" }
%"class.absl::optional.2926" = type { %"class.absl::optional_internal::optional_data.2927" }
%"class.absl::optional_internal::optional_data.2927" = type { %"class.absl::optional_internal::optional_data_base.2928" }
%"class.absl::optional_internal::optional_data_base.2928" = type { %"class.absl::optional_internal::optional_data_dtor_base.2929" }
%"class.absl::optional_internal::optional_data_dtor_base.2929" = type { i8, [7 x i8], %union.anon.2930 }
%union.anon.2930 = type { %"class.blink::Path" }
%"class.blink::TextDecorationOffset" = type { %"class.blink::TextDecorationOffsetBase", %"class.blink::InlineTextBox"*, %"class.blink::LineLayoutItem" }
%"class.blink::TextDecorationOffsetBase" = type { i32 (...)**, %"class.blink::ComputedStyle"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2154", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2162", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2176", %"class.blink::FrameLoader", %"class.blink::Member.2197", %"class.blink::Member.343", %"class.blink::Member.2199", %"class.blink::Member.2229", %"class.blink::Member.2231", %"class.blink::Member.2233", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2235", %class.scoped_refptr.2459, %"class.blink::Member.2460", %"class.blink::Member.2462", %"class.blink::Member.2464", %"class.blink::Member.2466", %"class.blink::Member.2468", %"class.blink::Member.2472", %"class.blink::Member.2474", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2500", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2521", %"class.std::__1::unique_ptr.2522", %"class.absl::optional.2142", i32, [4 x i8], %"class.std::__1::unique_ptr.2528", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2536", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2541", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2546", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2549", %"class.blink::Member.2551", %"class.blink::Member.2553", %"class.blink::Member.2555", %"class.mojo::StructPtr.2558", %"class.blink::Member.2567", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2569", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1987", %"class.blink::Member.1989", %"class.blink::Member.1991", i8, i32, i8, i32, %"class.blink::Member.2124", %"class.blink::Member.2014", %"class.blink::FrameLifecycle", %"class.blink::Member.1985", %"class.blink::Member.1985", %"class.blink::Member.1985", %"class.blink::Member.1985", %"class.blink::Member.1985", %"class.blink::Member.1985", %"class.blink::Member.1969", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2135", i8, %"class.base::UnguessableToken", %"class.absl::optional.2137", %"class.absl::optional.2142", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1985", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1987" = type { %"class.blink::MemberBase.1988" }
%"class.blink::MemberBase.1988" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1989" = type { %"class.blink::MemberBase.1990" }
%"class.blink::MemberBase.1990" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1991" = type { %"class.blink::MemberBase.1992" }
%"class.blink::MemberBase.1992" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1985", %"class.blink::Member.2014", %"class.blink::Member.2016", %"class.blink::Member.2018", i8, %"class.WTF::Vector.2020" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2007" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1995" }
%"class.blink::HeapVector.1995" = type { %"class.WTF::Vector.1998" }
%"class.WTF::Vector.1998" = type { %"class.WTF::VectorBuffer.1999" }
%"class.WTF::VectorBuffer.1999" = type { %"class.WTF::VectorBufferBase.2000", [32 x i8] }
%"class.WTF::VectorBufferBase.2000" = type { %"struct.std::__1::pair.2001"*, i32, i32 }
%"struct.std::__1::pair.2001" = type { %"class.WTF::AtomicString", %"class.blink::Member.2002" }
%"class.blink::Member.2002" = type { %"class.blink::MemberBase.2003" }
%"class.blink::MemberBase.2003" = type { %"class.blink::HeapVector.2004"* }
%"class.blink::HeapVector.2004" = type opaque
%"class.std::__1::unique_ptr.2007" = type { %"class.std::__1::__compressed_pair.2008" }
%"class.std::__1::__compressed_pair.2008" = type { %"struct.std::__1::__compressed_pair_elem.2009" }
%"struct.std::__1::__compressed_pair_elem.2009" = type { %"class.WTF::Vector.2010"* }
%"class.WTF::Vector.2010" = type opaque
%"class.blink::Member.2016" = type { %"class.blink::MemberBase.2017" }
%"class.blink::MemberBase.2017" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2018" = type { %"class.blink::MemberBase.2019" }
%"class.blink::MemberBase.2019" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2020" = type { %"class.WTF::VectorBuffer.2021" }
%"class.WTF::VectorBuffer.2021" = type { %"class.WTF::VectorBufferBase.2022" }
%"class.WTF::VectorBufferBase.2022" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2116" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2023, %"class.std::__1::unique_ptr.1664", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1678, i32 }>
%class.scoped_refptr.2023 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1678, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2082", %"class.absl::optional.2087", %"class.absl::optional.2040", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2107", i8, [7 x i8], %class.scoped_refptr.1678, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1691" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1678, %"class.std::__1::unique_ptr.2024", %"class.absl::optional.2034", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2040", %"class.std::__1::unique_ptr.2045", i8, i64, %class.scoped_refptr.2079, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2080", %"class.base::WeakPtrFactory.2081" }
%"class.std::__1::unique_ptr.2024" = type { %"class.std::__1::__compressed_pair.2025" }
%"class.std::__1::__compressed_pair.2025" = type { %"struct.std::__1::__compressed_pair_elem.2026" }
%"struct.std::__1::__compressed_pair_elem.2026" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1678, i8, %"class.mojo::ScopedHandleBase.2027", %class.scoped_refptr.2028, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2029", i8*, %"class.base::WeakPtrFactory.2030" }
%"class.mojo::ScopedHandleBase.2027" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2028 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2029" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2030" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2034" = type { %"class.absl::optional_internal::optional_data.2035" }
%"class.absl::optional_internal::optional_data.2035" = type { %"class.absl::optional_internal::optional_data_base.2036" }
%"class.absl::optional_internal::optional_data_base.2036" = type { %"class.absl::optional_internal::optional_data_dtor_base.2037" }
%"class.absl::optional_internal::optional_data_dtor_base.2037" = type { i8, %union.anon.2038 }
%union.anon.2038 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2039", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2039" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2045" = type { %"class.std::__1::__compressed_pair.2046" }
%"class.std::__1::__compressed_pair.2046" = type { %"struct.std::__1::__compressed_pair_elem.2047" }
%"struct.std::__1::__compressed_pair_elem.2047" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2048", i8, i64, %class.scoped_refptr.2049, %class.scoped_refptr.2074 }
%"class.base::RepeatingCallback.2048" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2049 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2050", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2052", %"class.std::__1::map.2063", i8, [7 x i8] }>
%"class.base::RefCounted.2050" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2051 }
%class.scoped_refptr.2051 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2052" = type { %"class.std::__1::__tree.2053" }
%"class.std::__1::__tree.2053" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2054", %"class.std::__1::__compressed_pair.2058" }
%"class.std::__1::__compressed_pair.2054" = type { %"struct.std::__1::__compressed_pair_elem.1568" }
%"class.std::__1::__compressed_pair.2058" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2063" = type { %"class.std::__1::__tree.2064" }
%"class.std::__1::__tree.2064" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2065", %"class.std::__1::__compressed_pair.2069" }
%"class.std::__1::__compressed_pair.2065" = type { %"struct.std::__1::__compressed_pair_elem.1568" }
%"class.std::__1::__compressed_pair.2069" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2074 = type { %"class.base::RefCountedData.2075"* }
%"class.base::RefCountedData.2075" = type opaque
%class.scoped_refptr.2079 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2080" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2081" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2082" = type { %"class.absl::optional_internal::optional_data.2083" }
%"class.absl::optional_internal::optional_data.2083" = type { %"class.absl::optional_internal::optional_data_base.2084" }
%"class.absl::optional_internal::optional_data_base.2084" = type { %"class.absl::optional_internal::optional_data_dtor_base.2085" }
%"class.absl::optional_internal::optional_data_dtor_base.2085" = type { i8, %union.anon.2086 }
%union.anon.2086 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2087" = type { %"class.absl::optional_internal::optional_data.2088" }
%"class.absl::optional_internal::optional_data.2088" = type { %"class.absl::optional_internal::optional_data_base.2089" }
%"class.absl::optional_internal::optional_data_base.2089" = type { %"class.absl::optional_internal::optional_data_dtor_base.2090" }
%"class.absl::optional_internal::optional_data_dtor_base.2090" = type { i8, [7 x i8], %union.anon.2091 }
%union.anon.2091 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2040" = type { %"class.absl::optional_internal::optional_data.2041" }
%"class.absl::optional_internal::optional_data.2041" = type { %"class.absl::optional_internal::optional_data_base.2042" }
%"class.absl::optional_internal::optional_data_base.2042" = type { %"class.absl::optional_internal::optional_data_dtor_base.2043" }
%"class.absl::optional_internal::optional_data_dtor_base.2043" = type { i8, %union.anon.2044 }
%union.anon.2044 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2092 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2092 = type { %"class.std::__1::map.2095" }
%"class.std::__1::map.2095" = type { %"class.std::__1::__tree.2096" }
%"class.std::__1::__tree.2096" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2097", %"class.std::__1::__compressed_pair.2101" }
%"class.std::__1::__compressed_pair.2097" = type { %"struct.std::__1::__compressed_pair_elem.1568" }
%"class.std::__1::__compressed_pair.2101" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2106"*, i64 }
%"class.std::__1::unique_ptr.2106" = type opaque
%"class.std::__1::map.2107" = type { %"class.std::__1::__tree.2108" }
%"class.std::__1::__tree.2108" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2109", %"class.std::__1::__compressed_pair.2113" }
%"class.std::__1::__compressed_pair.2109" = type { %"struct.std::__1::__compressed_pair_elem.1568" }
%"class.std::__1::__compressed_pair.2113" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2116" = type { %"class.std::__1::__compressed_pair.2117" }
%"class.std::__1::__compressed_pair.2117" = type { %"struct.std::__1::__compressed_pair_elem.2118" }
%"struct.std::__1::__compressed_pair_elem.2118" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2124" = type { %"class.blink::MemberBase.2125" }
%"class.blink::MemberBase.2125" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2014" = type { %"class.blink::MemberBase.2015" }
%"class.blink::MemberBase.2015" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1985" = type { %"class.blink::MemberBase.1986" }
%"class.blink::MemberBase.1986" = type { %"class.blink::Frame"* }
%"class.blink::Member.1969" = type { %"class.blink::MemberBase.1970" }
%"class.blink::MemberBase.1970" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1985", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2126" }
%"class.base::internal::flat_tree.2126" = type { %"class.std::__1::vector.2127" }
%"class.std::__1::vector.2127" = type { %"class.std::__1::__vector_base.2128" }
%"class.std::__1::__vector_base.2128" = type { %"struct.std::__1::pair.2129"*, %"struct.std::__1::pair.2129"*, %"class.std::__1::__compressed_pair.2130" }
%"struct.std::__1::pair.2129" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2130" = type { %"struct.std::__1::__compressed_pair_elem.2131" }
%"struct.std::__1::__compressed_pair_elem.2131" = type { %"struct.std::__1::pair.2129"* }
%"class.blink::Member.2135" = type { %"class.blink::MemberBase.2136" }
%"class.blink::MemberBase.2136" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2137" = type { %"class.absl::optional_internal::optional_data.2138" }
%"class.absl::optional_internal::optional_data.2138" = type { %"class.absl::optional_internal::optional_data_base.2139" }
%"class.absl::optional_internal::optional_data_base.2139" = type { %"class.absl::optional_internal::optional_data_dtor_base.2140" }
%"class.absl::optional_internal::optional_data_dtor_base.2140" = type { i8, %union.anon.2141 }
%union.anon.2141 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2147" }
%"class.blink::HeapHashSet.2147" = type { %"class.WTF::HashSet.2150" }
%"class.WTF::HashSet.2150" = type { %"class.WTF::HashTable.2151" }
%"class.WTF::HashTable.2151" = type <{ %"class.blink::WeakMember.2153"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2153" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2154" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2155" }
%"class.blink::HeapHashMap.2155" = type { %"class.WTF::HashMap.2158" }
%"class.WTF::HashMap.2158" = type { %"class.WTF::HashTable.2159" }
%"class.WTF::HashTable.2159" = type <{ %"struct.WTF::KeyValuePair.2161"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2161" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2162" = type { %"class.std::__1::__compressed_pair.2163" }
%"class.std::__1::__compressed_pair.2163" = type { %"struct.std::__1::__compressed_pair_elem.2164" }
%"struct.std::__1::__compressed_pair_elem.2164" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2165", %"class.base::WeakPtrFactory.2170" }
%"class.WTF::HashMap.2165" = type { %"class.WTF::HashTable.2166" }
%"class.WTF::HashTable.2166" = type <{ %"struct.WTF::KeyValuePair.2169"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2169" = type opaque
%"class.base::WeakPtrFactory.2170" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2174" }
%"class.blink::Member.2174" = type { %"class.blink::MemberBase.2175" }
%"class.blink::MemberBase.2175" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3030" }
%"class.blink::WeakMember.3030" = type { %"class.blink::MemberBase.3031" }
%"class.blink::MemberBase.3031" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3032", i64, %"class.std::__1::map.3033", i8*, i64, %"class.base::WeakPtrFactory.3042" }
%"class.base::RepeatingCallback.3032" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3033" = type { %"class.std::__1::__tree.3034" }
%"class.std::__1::__tree.3034" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3035", %"class.std::__1::__compressed_pair.3039" }
%"class.std::__1::__compressed_pair.3035" = type { %"struct.std::__1::__compressed_pair_elem.1568" }
%"class.std::__1::__compressed_pair.3039" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.3042" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2176" = type { %"class.WTF::HashSet.2179" }
%"class.WTF::HashSet.2179" = type { %"class.WTF::HashTable.2180" }
%"class.WTF::HashTable.2180" = type <{ %"class.blink::WeakMember.2182"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2182" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1969", %"class.blink::Member.2183", %"class.blink::Member.2185", %"class.std::__1::unique_ptr.2187", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2193" }
%"class.blink::Member.2183" = type { %"class.blink::MemberBase.2184" }
%"class.blink::MemberBase.2184" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2185" = type { %"class.blink::MemberBase.2186" }
%"class.blink::MemberBase.2186" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2187" = type { %"class.std::__1::__compressed_pair.2188" }
%"class.std::__1::__compressed_pair.2188" = type { %"struct.std::__1::__compressed_pair_elem.2189" }
%"struct.std::__1::__compressed_pair_elem.2189" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.WTF::HashSet.2193" = type { %"class.WTF::HashTable.2194" }
%"class.WTF::HashTable.2194" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2197" = type { %"class.blink::MemberBase.2198" }
%"class.blink::MemberBase.2198" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2682", %"class.blink::Member.1969", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2687", i8, i32, %"class.blink::Color", %"class.absl::optional.2689", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2694", %"class.blink::Member.2696", %"class.blink::Member.2696", %"class.std::__1::unique_ptr.2699", i32, [4 x i8], %"class.WTF::HashSet.2702", %"class.blink::Member.2709", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2711", %"class.blink::HeapHashSet.2718", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2726", i8, %"class.blink::Member.2732", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2744", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2758", i8, %"class.std::__1::unique_ptr.2764", %"class.std::__1::unique_ptr.2770", %"class.WTF::Vector.2776", i32, %class.scoped_refptr.2781, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2782", %"class.blink::Member.2784", %"class.blink::Member.2819", %"class.blink::HeapHashSet.2821", %"class.blink::HeapHashSet.2828", %"class.std::__1::unique_ptr.2835", %"class.std::__1::unique_ptr.2842", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.2682" = type { %"class.WTF::HashTable.2683" }
%"class.WTF::HashTable.2683" = type <{ %class.scoped_refptr.2686*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2686 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2687" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2688", { i64, i64 } }
%"class.blink::WeakMember.2688" = type { %"class.blink::MemberBase.2198" }
%"class.absl::optional.2689" = type { %"class.absl::optional_internal::optional_data.2690" }
%"class.absl::optional_internal::optional_data.2690" = type { %"class.absl::optional_internal::optional_data_base.2691" }
%"class.absl::optional_internal::optional_data_base.2691" = type { %"class.absl::optional_internal::optional_data_dtor_base.2692" }
%"class.absl::optional_internal::optional_data_dtor_base.2692" = type { i8, %union.anon.2693 }
%union.anon.2693 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2694" = type { %"class.blink::MemberBase.2695" }
%"class.blink::MemberBase.2695" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2696" = type { %"class.blink::MemberBase.2697" }
%"class.blink::MemberBase.2697" = type { %"class.blink::HeapHashSet.2698"* }
%"class.blink::HeapHashSet.2698" = type opaque
%"class.std::__1::unique_ptr.2699" = type { %"class.std::__1::__compressed_pair.2700" }
%"class.std::__1::__compressed_pair.2700" = type { %"struct.std::__1::__compressed_pair_elem.2701" }
%"struct.std::__1::__compressed_pair_elem.2701" = type { %"class.WTF::HashSet.2702"* }
%"class.WTF::HashSet.2702" = type { %"class.WTF::HashTable.2703" }
%"class.WTF::HashTable.2703" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2709" = type { %"class.blink::MemberBase.2710" }
%"class.blink::MemberBase.2710" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2711" = type { %"class.WTF::HashSet.2714" }
%"class.WTF::HashSet.2714" = type { %"class.WTF::HashTable.2715" }
%"class.WTF::HashTable.2715" = type <{ %"class.blink::Member.2717"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2717" = type opaque
%"class.blink::HeapHashSet.2718" = type { %"class.WTF::HashSet.2721" }
%"class.WTF::HashSet.2721" = type { %"class.WTF::HashTable.2722" }
%"class.WTF::HashTable.2722" = type <{ %"class.blink::Member.2724"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2724" = type { %"class.blink::MemberBase.2725" }
%"class.blink::MemberBase.2725" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2855", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2865", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.2855" = type { %"class.blink::MemberBase.2856" }
%"class.blink::MemberBase.2856" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2857", %"class.blink::Member.2859", %"class.blink::Member.2861", %"class.blink::Member.2863", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2857" = type { %"class.blink::MemberBase.2858" }
%"class.blink::MemberBase.2858" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2859" = type { %"class.blink::MemberBase.2860" }
%"class.blink::MemberBase.2860" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2861" = type { %"class.blink::MemberBase.2862" }
%"class.blink::MemberBase.2862" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2863" = type { %"class.blink::MemberBase.2864" }
%"class.blink::MemberBase.2864" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2865" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2866", { i64, i64 } }
%"class.blink::WeakMember.2866" = type { %"class.blink::MemberBase.2725" }
%"class.std::__1::unique_ptr.2726" = type { %"class.std::__1::__compressed_pair.2727" }
%"class.std::__1::__compressed_pair.2727" = type { %"struct.std::__1::__compressed_pair_elem.2728" }
%"struct.std::__1::__compressed_pair_elem.2728" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2732" = type { %"class.blink::MemberBase.2733" }
%"class.blink::MemberBase.2733" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2736", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2736" = type { %"class.WTF::HashTable.2737" }
%"class.WTF::HashTable.2737" = type <{ %"struct.WTF::KeyValuePair.2739"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2739" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2740", i32, i32 }
%"class.WTF::Vector.2740" = type { %"class.WTF::VectorBuffer.2741" }
%"class.WTF::VectorBuffer.2741" = type { %"class.WTF::VectorBufferBase.2742" }
%"class.WTF::VectorBufferBase.2742" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2744" = type { %"class.WTF::LinkedHashSet.2747" }
%"class.WTF::LinkedHashSet.2747" = type { %"class.WTF::HashMap.2748", %"class.WTF::VectorBackedLinkedList.2752" }
%"class.WTF::HashMap.2748" = type { %"class.WTF::HashTable.2749" }
%"class.WTF::HashTable.2749" = type <{ %"struct.WTF::KeyValuePair.2751"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2751" = type opaque
%"class.WTF::VectorBackedLinkedList.2752" = type { %"class.WTF::Vector.2753", i32, i32 }
%"class.WTF::Vector.2753" = type { %"class.WTF::VectorBuffer.2754" }
%"class.WTF::VectorBuffer.2754" = type { %"class.WTF::VectorBufferBase.2755" }
%"class.WTF::VectorBufferBase.2755" = type { %"class.WTF::VectorBackedLinkedListNode.2756"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2756" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2758" = type { %"class.std::__1::__compressed_pair.2759" }
%"class.std::__1::__compressed_pair.2759" = type { %"struct.std::__1::__compressed_pair_elem.2760" }
%"struct.std::__1::__compressed_pair_elem.2760" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2764" = type { %"class.std::__1::__compressed_pair.2765" }
%"class.std::__1::__compressed_pair.2765" = type { %"struct.std::__1::__compressed_pair_elem.2766" }
%"struct.std::__1::__compressed_pair_elem.2766" = type { %"class.blink::PaintController"* }
%"class.std::__1::unique_ptr.2770" = type { %"class.std::__1::__compressed_pair.2771" }
%"class.std::__1::__compressed_pair.2771" = type { %"struct.std::__1::__compressed_pair_elem.2772" }
%"struct.std::__1::__compressed_pair_elem.2772" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2776" = type { %"class.WTF::VectorBuffer.2777" }
%"class.WTF::VectorBuffer.2777" = type { %"class.WTF::VectorBufferBase.2778" }
%"class.WTF::VectorBufferBase.2778" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2781 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2782" = type { %"class.blink::MemberBase.2783" }
%"class.blink::MemberBase.2783" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2784" = type { %"class.blink::MemberBase.2785" }
%"class.blink::MemberBase.2785" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type <{ %"class.blink::Member.2197", %"class.blink::Member.2788", %"class.blink::Member.2790", %"class.blink::Member.2792", %"class.base::TimeTicks", %"class.blink::Member.2794", %"class.absl::optional.2814", [6 x i8], %"class.base::TimeTicks", i64, %"class.base::TimeTicks", i64, %"class.base::TimeTicks", %"class.base::TimeTicks", i64, %"class.base::TimeTicks", i64, i8, [7 x i8] }>
%"class.blink::Member.2788" = type { %"class.blink::MemberBase.2789" }
%"class.blink::MemberBase.2789" = type { %"class.blink::TextPaintTimingDetector"* }
%"class.blink::Member.2790" = type { %"class.blink::MemberBase.2791" }
%"class.blink::MemberBase.2791" = type { %"class.blink::ImagePaintTimingDetector"* }
%"class.blink::ImagePaintTimingDetector" = type opaque
%"class.blink::Member.2792" = type { %"class.blink::MemberBase.2793" }
%"class.blink::MemberBase.2793" = type { %"class.blink::LargestContentfulPaintCalculator"* }
%"class.blink::LargestContentfulPaintCalculator" = type opaque
%"class.blink::Member.2794" = type { %"class.blink::MemberBase.2795" }
%"class.blink::MemberBase.2795" = type { %"class.blink::PaintTimingCallbackManagerImpl"* }
%"class.blink::PaintTimingCallbackManagerImpl" = type { %"class.blink::PaintTimingCallbackManager", %"class.blink::Member.2197", %"class.std::__1::unique_ptr.2798" }
%"class.blink::PaintTimingCallbackManager" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.2798" = type { %"class.std::__1::__compressed_pair.2799" }
%"class.std::__1::__compressed_pair.2799" = type { %"struct.std::__1::__compressed_pair_elem.2800" }
%"struct.std::__1::__compressed_pair_elem.2800" = type { %"class.std::__1::queue"* }
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.2807" }
%"struct.std::__1::__split_buffer" = type { %"class.base::OnceCallback.2801"**, %"class.base::OnceCallback.2801"**, %"class.base::OnceCallback.2801"**, %"class.std::__1::__compressed_pair.2802" }
%"class.base::OnceCallback.2801" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::__compressed_pair.2802" = type { %"struct.std::__1::__compressed_pair_elem.2803" }
%"struct.std::__1::__compressed_pair_elem.2803" = type { %"class.base::OnceCallback.2801"** }
%"class.std::__1::__compressed_pair.2807" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.absl::optional.2814" = type { %"class.absl::optional_internal::optional_data.2815" }
%"class.absl::optional_internal::optional_data.2815" = type { %"class.absl::optional_internal::optional_data_base.2816" }
%"class.absl::optional_internal::optional_data_base.2816" = type { %"class.absl::optional_internal::optional_data_dtor_base.2817" }
%"class.absl::optional_internal::optional_data_dtor_base.2817" = type { i8, %union.anon.2818 }
%union.anon.2818 = type { %"class.blink::PaintTimingVisualizer" }
%"class.blink::PaintTimingVisualizer" = type { i8 }
%"class.blink::Member.2819" = type { %"class.blink::MemberBase.2820" }
%"class.blink::MemberBase.2820" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2821" = type { %"class.WTF::HashSet.2824" }
%"class.WTF::HashSet.2824" = type { %"class.WTF::HashTable.2825" }
%"class.WTF::HashTable.2825" = type <{ %"class.blink::WeakMember.2827"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2827" = type opaque
%"class.blink::HeapHashSet.2828" = type { %"class.WTF::HashSet.2831" }
%"class.WTF::HashSet.2831" = type { %"class.WTF::HashTable.2832" }
%"class.WTF::HashTable.2832" = type <{ %"class.blink::WeakMember.2834"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2834" = type opaque
%"class.std::__1::unique_ptr.2835" = type { %"class.std::__1::__compressed_pair.2836" }
%"class.std::__1::__compressed_pair.2836" = type { %"struct.std::__1::__compressed_pair_elem.2837" }
%"struct.std::__1::__compressed_pair_elem.2837" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2838" }
%"class.base::time_internal::TimeBase.2838" = type { i64 }
%"class.std::__1::unique_ptr.2842" = type { %"class.std::__1::__compressed_pair.2843" }
%"class.std::__1::__compressed_pair.2843" = type { %"struct.std::__1::__compressed_pair_elem.2844" }
%"struct.std::__1::__compressed_pair_elem.2844" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2845", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2845" = type { %"class.absl::optional_internal::optional_data.2846" }
%"class.absl::optional_internal::optional_data.2846" = type { %"class.absl::optional_internal::optional_data_base.2847" }
%"class.absl::optional_internal::optional_data_base.2847" = type { %"class.absl::optional_internal::optional_data_dtor_base.2848" }
%"class.absl::optional_internal::optional_data_dtor_base.2848" = type { i8, %union.anon.2849 }
%union.anon.2849 = type { %"class.base::Time" }
%"class.blink::Member.2199" = type { %"class.blink::MemberBase.2200" }
%"class.blink::MemberBase.2200" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type <{ %"class.blink::Member.1969", %"class.blink::Member.2203", %"class.blink::Member.2205", i32, i8, i8, [2 x i8], %"class.std::__1::unique_ptr.2207", %"class.blink::VisibleSelectionTemplate", i8, [3 x i8], i32, %"class.blink::Member.2213", i8, [7 x i8] }>
%"class.blink::Member.2203" = type { %"class.blink::MemberBase.2204" }
%"class.blink::MemberBase.2204" = type { %"class.blink::CompositeEditCommand"* }
%"class.blink::CompositeEditCommand" = type opaque
%"class.blink::Member.2205" = type { %"class.blink::MemberBase.2206" }
%"class.blink::MemberBase.2206" = type { %"class.blink::UndoStack"* }
%"class.blink::UndoStack" = type opaque
%"class.std::__1::unique_ptr.2207" = type { %"class.std::__1::__compressed_pair.2208" }
%"class.std::__1::__compressed_pair.2208" = type { %"struct.std::__1::__compressed_pair_elem.2209" }
%"struct.std::__1::__compressed_pair_elem.2209" = type { %"class.blink::KillRing"* }
%"class.blink::KillRing" = type opaque
%"class.blink::VisibleSelectionTemplate" = type <{ %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i8, [3 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.blink::Member.2213" = type { %"class.blink::MemberBase.2214" }
%"class.blink::MemberBase.2214" = type { %"class.blink::EditingStyle"* }
%"class.blink::EditingStyle" = type <{ %"class.blink::Member.2217", %"class.blink::Member.318", i8, [3 x i8], float, i8, [7 x i8] }>
%"class.blink::Member.2217" = type { %"class.blink::MemberBase.2218" }
%"class.blink::MemberBase.2218" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.2219", %"class.blink::HeapVector.2221", i8, [7 x i8] }>
%"class.blink::Member.2219" = type { %"class.blink::MemberBase.2220" }
%"class.blink::MemberBase.2220" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.2217" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2679" }
%"class.blink::WeakMember.2679" = type { %"class.blink::MemberBase.916" }
%"class.blink::HeapVector.2221" = type { %"class.WTF::Vector.2224" }
%"class.WTF::Vector.2224" = type { %"class.WTF::VectorBuffer.2225" }
%"class.WTF::VectorBuffer.2225" = type { %"class.WTF::VectorBufferBase.2226", [96 x i8] }
%"class.WTF::VectorBufferBase.2226" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.1215" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Member.2229" = type { %"class.blink::MemberBase.2230" }
%"class.blink::MemberBase.2230" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1969", %"class.blink::Member.1971", %"class.blink::Member.1973", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.1975", %"class.blink::Member.1981" }
%"class.blink::Member.1971" = type { %"class.blink::MemberBase.1972" }
%"class.blink::MemberBase.1972" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.1973" = type { %"class.blink::MemberBase.1974" }
%"class.blink::MemberBase.1974" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.1975" = type { %"class.std::__1::__compressed_pair.1976" }
%"class.std::__1::__compressed_pair.1976" = type { %"struct.std::__1::__compressed_pair_elem.1977" }
%"struct.std::__1::__compressed_pair_elem.1977" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.1981" = type { %"class.blink::MemberBase.1982" }
%"class.blink::MemberBase.1982" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2231" = type { %"class.blink::MemberBase.2232" }
%"class.blink::MemberBase.2232" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2233" = type { %"class.blink::MemberBase.2234" }
%"class.blink::MemberBase.2234" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2235" = type { %"class.blink::MemberBase.2236" }
%"class.blink::MemberBase.2236" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2239", %"class.blink::HeapListHashSet.2250", %"class.blink::HeapListHashSet.2261", %"class.blink::HeapListHashSet.2272", %"class.blink::HeapListHashSet.2283", %"class.blink::HeapListHashSet.2294", %"class.blink::HeapListHashSet.2305", %"class.blink::HeapListHashSet.2316", %"class.blink::HeapListHashSet.2327", %"class.blink::HeapListHashSet.2338", %"class.blink::HeapListHashSet.2349", %"class.blink::HeapListHashSet.2360", %"class.blink::HeapListHashSet.2371", %"class.blink::HeapListHashSet.2382", %"class.blink::HeapListHashSet.2393", %"class.blink::HeapListHashSet.2404", %"class.blink::HeapListHashSet.2415", %"class.blink::HeapListHashSet.2426", %"class.blink::HeapListHashSet.2437", %"class.blink::HeapListHashSet.2448" }
%"class.blink::HeapListHashSet.2239" = type { %"class.WTF::ListHashSet.base.2249", [7 x i8] }
%"class.WTF::ListHashSet.base.2249" = type <{ %"class.WTF::HashTable.2244", %"class.blink::Member.2246", %"class.blink::Member.2246", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2244" = type <{ %"class.blink::Member.2246"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2246" = type { %"class.blink::MemberBase.2247" }
%"class.blink::MemberBase.2247" = type { %"class.blink::HeapListHashSetNode.2248"* }
%"class.blink::HeapListHashSetNode.2248" = type { %"class.blink::Member.2462", %"class.blink::Member.2246", %"class.blink::Member.2246" }
%"class.blink::HeapListHashSet.2250" = type { %"class.WTF::ListHashSet.base.2260", [7 x i8] }
%"class.WTF::ListHashSet.base.2260" = type <{ %"class.WTF::HashTable.2255", %"class.blink::Member.2257", %"class.blink::Member.2257", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2255" = type <{ %"class.blink::Member.2257"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2257" = type { %"class.blink::MemberBase.2258" }
%"class.blink::MemberBase.2258" = type { %"class.blink::HeapListHashSetNode.2259"* }
%"class.blink::HeapListHashSetNode.2259" = type { %"class.blink::Member.2675", %"class.blink::Member.2257", %"class.blink::Member.2257" }
%"class.blink::Member.2675" = type { %"class.blink::MemberBase.2676" }
%"class.blink::MemberBase.2676" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2261" = type { %"class.WTF::ListHashSet.base.2271", [7 x i8] }
%"class.WTF::ListHashSet.base.2271" = type <{ %"class.WTF::HashTable.2266", %"class.blink::Member.2268", %"class.blink::Member.2268", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2266" = type <{ %"class.blink::Member.2268"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2268" = type { %"class.blink::MemberBase.2269" }
%"class.blink::MemberBase.2269" = type { %"class.blink::HeapListHashSetNode.2270"* }
%"class.blink::HeapListHashSetNode.2270" = type { %"class.blink::Member.2671", %"class.blink::Member.2268", %"class.blink::Member.2268" }
%"class.blink::Member.2671" = type { %"class.blink::MemberBase.2672" }
%"class.blink::MemberBase.2672" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2272" = type { %"class.WTF::ListHashSet.base.2282", [7 x i8] }
%"class.WTF::ListHashSet.base.2282" = type <{ %"class.WTF::HashTable.2277", %"class.blink::Member.2279", %"class.blink::Member.2279", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2277" = type <{ %"class.blink::Member.2279"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2279" = type { %"class.blink::MemberBase.2280" }
%"class.blink::MemberBase.2280" = type { %"class.blink::HeapListHashSetNode.2281"* }
%"class.blink::HeapListHashSetNode.2281" = type { %"class.blink::Member.2667", %"class.blink::Member.2279", %"class.blink::Member.2279" }
%"class.blink::Member.2667" = type { %"class.blink::MemberBase.2668" }
%"class.blink::MemberBase.2668" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2283" = type { %"class.WTF::ListHashSet.base.2293", [7 x i8] }
%"class.WTF::ListHashSet.base.2293" = type <{ %"class.WTF::HashTable.2288", %"class.blink::Member.2290", %"class.blink::Member.2290", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2288" = type <{ %"class.blink::Member.2290"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2290" = type { %"class.blink::MemberBase.2291" }
%"class.blink::MemberBase.2291" = type { %"class.blink::HeapListHashSetNode.2292"* }
%"class.blink::HeapListHashSetNode.2292" = type { %"class.blink::Member.2663", %"class.blink::Member.2290", %"class.blink::Member.2290" }
%"class.blink::Member.2663" = type { %"class.blink::MemberBase.2664" }
%"class.blink::MemberBase.2664" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2294" = type { %"class.WTF::ListHashSet.base.2304", [7 x i8] }
%"class.WTF::ListHashSet.base.2304" = type <{ %"class.WTF::HashTable.2299", %"class.blink::Member.2301", %"class.blink::Member.2301", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2299" = type <{ %"class.blink::Member.2301"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2301" = type { %"class.blink::MemberBase.2302" }
%"class.blink::MemberBase.2302" = type { %"class.blink::HeapListHashSetNode.2303"* }
%"class.blink::HeapListHashSetNode.2303" = type { %"class.blink::Member.2659", %"class.blink::Member.2301", %"class.blink::Member.2301" }
%"class.blink::Member.2659" = type { %"class.blink::MemberBase.2660" }
%"class.blink::MemberBase.2660" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2305" = type { %"class.WTF::ListHashSet.base.2315", [7 x i8] }
%"class.WTF::ListHashSet.base.2315" = type <{ %"class.WTF::HashTable.2310", %"class.blink::Member.2312", %"class.blink::Member.2312", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2310" = type <{ %"class.blink::Member.2312"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2312" = type { %"class.blink::MemberBase.2313" }
%"class.blink::MemberBase.2313" = type { %"class.blink::HeapListHashSetNode.2314"* }
%"class.blink::HeapListHashSetNode.2314" = type { %"class.blink::Member.2655", %"class.blink::Member.2312", %"class.blink::Member.2312" }
%"class.blink::Member.2655" = type { %"class.blink::MemberBase.2656" }
%"class.blink::MemberBase.2656" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2316" = type { %"class.WTF::ListHashSet.base.2326", [7 x i8] }
%"class.WTF::ListHashSet.base.2326" = type <{ %"class.WTF::HashTable.2321", %"class.blink::Member.2323", %"class.blink::Member.2323", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2321" = type <{ %"class.blink::Member.2323"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2323" = type { %"class.blink::MemberBase.2324" }
%"class.blink::MemberBase.2324" = type { %"class.blink::HeapListHashSetNode.2325"* }
%"class.blink::HeapListHashSetNode.2325" = type { %"class.blink::Member.2651", %"class.blink::Member.2323", %"class.blink::Member.2323" }
%"class.blink::Member.2651" = type { %"class.blink::MemberBase.2652" }
%"class.blink::MemberBase.2652" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2327" = type { %"class.WTF::ListHashSet.base.2337", [7 x i8] }
%"class.WTF::ListHashSet.base.2337" = type <{ %"class.WTF::HashTable.2332", %"class.blink::Member.2334", %"class.blink::Member.2334", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2332" = type <{ %"class.blink::Member.2334"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2334" = type { %"class.blink::MemberBase.2335" }
%"class.blink::MemberBase.2335" = type { %"class.blink::HeapListHashSetNode.2336"* }
%"class.blink::HeapListHashSetNode.2336" = type { %"class.blink::Member.2647", %"class.blink::Member.2334", %"class.blink::Member.2334" }
%"class.blink::Member.2647" = type { %"class.blink::MemberBase.2648" }
%"class.blink::MemberBase.2648" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2338" = type { %"class.WTF::ListHashSet.base.2348", [7 x i8] }
%"class.WTF::ListHashSet.base.2348" = type <{ %"class.WTF::HashTable.2343", %"class.blink::Member.2345", %"class.blink::Member.2345", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2343" = type <{ %"class.blink::Member.2345"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2345" = type { %"class.blink::MemberBase.2346" }
%"class.blink::MemberBase.2346" = type { %"class.blink::HeapListHashSetNode.2347"* }
%"class.blink::HeapListHashSetNode.2347" = type { %"class.blink::Member.2643", %"class.blink::Member.2345", %"class.blink::Member.2345" }
%"class.blink::Member.2643" = type { %"class.blink::MemberBase.2644" }
%"class.blink::MemberBase.2644" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2349" = type { %"class.WTF::ListHashSet.base.2359", [7 x i8] }
%"class.WTF::ListHashSet.base.2359" = type <{ %"class.WTF::HashTable.2354", %"class.blink::Member.2356", %"class.blink::Member.2356", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2354" = type <{ %"class.blink::Member.2356"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2356" = type { %"class.blink::MemberBase.2357" }
%"class.blink::MemberBase.2357" = type { %"class.blink::HeapListHashSetNode.2358"* }
%"class.blink::HeapListHashSetNode.2358" = type { %"class.blink::Member.2466", %"class.blink::Member.2356", %"class.blink::Member.2356" }
%"class.blink::HeapListHashSet.2360" = type { %"class.WTF::ListHashSet.base.2370", [7 x i8] }
%"class.WTF::ListHashSet.base.2370" = type <{ %"class.WTF::HashTable.2365", %"class.blink::Member.2367", %"class.blink::Member.2367", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2365" = type <{ %"class.blink::Member.2367"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2367" = type { %"class.blink::MemberBase.2368" }
%"class.blink::MemberBase.2368" = type { %"class.blink::HeapListHashSetNode.2369"* }
%"class.blink::HeapListHashSetNode.2369" = type { %"class.blink::Member.2637", %"class.blink::Member.2367", %"class.blink::Member.2367" }
%"class.blink::Member.2637" = type { %"class.blink::MemberBase.2638" }
%"class.blink::MemberBase.2638" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2371" = type { %"class.WTF::ListHashSet.base.2381", [7 x i8] }
%"class.WTF::ListHashSet.base.2381" = type <{ %"class.WTF::HashTable.2376", %"class.blink::Member.2378", %"class.blink::Member.2378", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2376" = type <{ %"class.blink::Member.2378"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2378" = type { %"class.blink::MemberBase.2379" }
%"class.blink::MemberBase.2379" = type { %"class.blink::HeapListHashSetNode.2380"* }
%"class.blink::HeapListHashSetNode.2380" = type { %"class.blink::Member.2633", %"class.blink::Member.2378", %"class.blink::Member.2378" }
%"class.blink::Member.2633" = type { %"class.blink::MemberBase.2634" }
%"class.blink::MemberBase.2634" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2382" = type { %"class.WTF::ListHashSet.base.2392", [7 x i8] }
%"class.WTF::ListHashSet.base.2392" = type <{ %"class.WTF::HashTable.2387", %"class.blink::Member.2389", %"class.blink::Member.2389", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2387" = type <{ %"class.blink::Member.2389"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2389" = type { %"class.blink::MemberBase.2390" }
%"class.blink::MemberBase.2390" = type { %"class.blink::HeapListHashSetNode.2391"* }
%"class.blink::HeapListHashSetNode.2391" = type { %"class.blink::Member.2629", %"class.blink::Member.2389", %"class.blink::Member.2389" }
%"class.blink::Member.2629" = type { %"class.blink::MemberBase.2630" }
%"class.blink::MemberBase.2630" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2393" = type { %"class.WTF::ListHashSet.base.2403", [7 x i8] }
%"class.WTF::ListHashSet.base.2403" = type <{ %"class.WTF::HashTable.2398", %"class.blink::Member.2400", %"class.blink::Member.2400", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2398" = type <{ %"class.blink::Member.2400"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2400" = type { %"class.blink::MemberBase.2401" }
%"class.blink::MemberBase.2401" = type { %"class.blink::HeapListHashSetNode.2402"* }
%"class.blink::HeapListHashSetNode.2402" = type { %"class.blink::Member.2625", %"class.blink::Member.2400", %"class.blink::Member.2400" }
%"class.blink::Member.2625" = type { %"class.blink::MemberBase.2626" }
%"class.blink::MemberBase.2626" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2404" = type { %"class.WTF::ListHashSet.base.2414", [7 x i8] }
%"class.WTF::ListHashSet.base.2414" = type <{ %"class.WTF::HashTable.2409", %"class.blink::Member.2411", %"class.blink::Member.2411", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2409" = type <{ %"class.blink::Member.2411"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2411" = type { %"class.blink::MemberBase.2412" }
%"class.blink::MemberBase.2412" = type { %"class.blink::HeapListHashSetNode.2413"* }
%"class.blink::HeapListHashSetNode.2413" = type { %"class.blink::Member.2621", %"class.blink::Member.2411", %"class.blink::Member.2411" }
%"class.blink::Member.2621" = type { %"class.blink::MemberBase.2622" }
%"class.blink::MemberBase.2622" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2415" = type { %"class.WTF::ListHashSet.base.2425", [7 x i8] }
%"class.WTF::ListHashSet.base.2425" = type <{ %"class.WTF::HashTable.2420", %"class.blink::Member.2422", %"class.blink::Member.2422", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2420" = type <{ %"class.blink::Member.2422"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2422" = type { %"class.blink::MemberBase.2423" }
%"class.blink::MemberBase.2423" = type { %"class.blink::HeapListHashSetNode.2424"* }
%"class.blink::HeapListHashSetNode.2424" = type { %"class.blink::Member.2617", %"class.blink::Member.2422", %"class.blink::Member.2422" }
%"class.blink::Member.2617" = type { %"class.blink::MemberBase.2618" }
%"class.blink::MemberBase.2618" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2426" = type { %"class.WTF::ListHashSet.base.2436", [7 x i8] }
%"class.WTF::ListHashSet.base.2436" = type <{ %"class.WTF::HashTable.2431", %"class.blink::Member.2433", %"class.blink::Member.2433", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2431" = type <{ %"class.blink::Member.2433"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2433" = type { %"class.blink::MemberBase.2434" }
%"class.blink::MemberBase.2434" = type { %"class.blink::HeapListHashSetNode.2435"* }
%"class.blink::HeapListHashSetNode.2435" = type { %"class.blink::Member.2613", %"class.blink::Member.2433", %"class.blink::Member.2433" }
%"class.blink::Member.2613" = type { %"class.blink::MemberBase.2614" }
%"class.blink::MemberBase.2614" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2437" = type { %"class.WTF::ListHashSet.base.2447", [7 x i8] }
%"class.WTF::ListHashSet.base.2447" = type <{ %"class.WTF::HashTable.2442", %"class.blink::Member.2444", %"class.blink::Member.2444", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2442" = type <{ %"class.blink::Member.2444"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2444" = type { %"class.blink::MemberBase.2445" }
%"class.blink::MemberBase.2445" = type { %"class.blink::HeapListHashSetNode.2446"* }
%"class.blink::HeapListHashSetNode.2446" = type { %"class.blink::Member.2468", %"class.blink::Member.2444", %"class.blink::Member.2444" }
%"class.blink::HeapListHashSet.2448" = type { %"class.WTF::ListHashSet.base.2458", [7 x i8] }
%"class.WTF::ListHashSet.base.2458" = type <{ %"class.WTF::HashTable.2453", %"class.blink::Member.2455", %"class.blink::Member.2455", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2453" = type <{ %"class.blink::Member.2455"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2455" = type { %"class.blink::MemberBase.2456" }
%"class.blink::MemberBase.2456" = type { %"class.blink::HeapListHashSetNode.2457"* }
%"class.blink::HeapListHashSetNode.2457" = type { %"class.blink::Member.2460", %"class.blink::Member.2455", %"class.blink::Member.2455" }
%class.scoped_refptr.2459 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2460" = type { %"class.blink::MemberBase.2461" }
%"class.blink::MemberBase.2461" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2462" = type { %"class.blink::MemberBase.2463" }
%"class.blink::MemberBase.2463" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2464" = type { %"class.blink::MemberBase.2465" }
%"class.blink::MemberBase.2465" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2466" = type { %"class.blink::MemberBase.2467" }
%"class.blink::MemberBase.2467" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2468" = type { %"class.blink::MemberBase.2469" }
%"class.blink::MemberBase.2469" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2472" = type { %"class.blink::MemberBase.2473" }
%"class.blink::MemberBase.2473" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2474" = type { %"class.blink::MemberBase.2475" }
%"class.blink::MemberBase.2475" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type { i32 (...)**, %"class.blink::Member.2478", %"class.blink::Member.1969", i8, %"class.blink::Member.2480", %"class.blink::Member.2492" }
%"class.blink::Member.2478" = type { %"class.blink::MemberBase.2479" }
%"class.blink::MemberBase.2479" = type { %"class.blink::ContentCaptureTask"* }
%"class.blink::ContentCaptureTask" = type { i32 (...)**, i8, %"class.blink::Member.1969", %"class.blink::Member.2480", %"class.blink::HeapTaskRunnerTimer.2576", i32, %"class.std::__1::unique_ptr.2578", %class.scoped_refptr.2584, %"class.absl::optional.2592", %"class.absl::optional.2597" }
%"class.blink::HeapTaskRunnerTimer.2576" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2577", { i64, i64 } }
%"class.blink::WeakMember.2577" = type { %"class.blink::MemberBase.2479" }
%"class.std::__1::unique_ptr.2578" = type { %"class.std::__1::__compressed_pair.2579" }
%"class.std::__1::__compressed_pair.2579" = type { %"struct.std::__1::__compressed_pair_elem.2580" }
%"struct.std::__1::__compressed_pair_elem.2580" = type { %"class.blink::ContentCaptureTask::TaskDelay"* }
%"class.blink::ContentCaptureTask::TaskDelay" = type <{ %"class.base::TimeDelta", i32, [4 x i8] }>
%class.scoped_refptr.2584 = type { %"class.blink::ContentCaptureTaskHistogramReporter"* }
%"class.blink::ContentCaptureTaskHistogramReporter" = type { %"class.WTF::RefCounted.2585", %"class.absl::optional.2587", %"class.absl::optional.2587", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i64, %"class.blink::CustomCountHistogram", %"class.blink::CustomCountHistogram", %"class.blink::CustomCountHistogram" }
%"class.WTF::RefCounted.2585" = type { %"class.base::RefCounted.2586" }
%"class.base::RefCounted.2586" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.2587" = type { %"class.absl::optional_internal::optional_data.2588" }
%"class.absl::optional_internal::optional_data.2588" = type { %"class.absl::optional_internal::optional_data_base.2589" }
%"class.absl::optional_internal::optional_data_base.2589" = type { %"class.absl::optional_internal::optional_data_dtor_base.2590" }
%"class.absl::optional_internal::optional_data_dtor_base.2590" = type { i8, %union.anon.2591 }
%union.anon.2591 = type { %"class.base::TimeTicks" }
%"class.blink::CustomCountHistogram" = type { %"class.base::HistogramBase"* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"class.absl::optional.2592" = type { %"class.absl::optional_internal::optional_data.2593" }
%"class.absl::optional_internal::optional_data.2593" = type { %"class.absl::optional_internal::optional_data_base.2594" }
%"class.absl::optional_internal::optional_data_base.2594" = type { %"class.absl::optional_internal::optional_data_dtor_base.2595" }
%"class.absl::optional_internal::optional_data_dtor_base.2595" = type { i8, %union.anon.2596 }
%union.anon.2596 = type { i32 }
%"class.absl::optional.2597" = type { %"class.absl::optional_internal::optional_data.2598" }
%"class.absl::optional_internal::optional_data.2598" = type { %"class.absl::optional_internal::optional_data_base.2599" }
%"class.absl::optional_internal::optional_data_base.2599" = type { %"class.absl::optional_internal::optional_data_dtor_base.2600" }
%"class.absl::optional_internal::optional_data_dtor_base.2600" = type { i8, %union.anon.2601 }
%union.anon.2601 = type { %"class.WTF::Vector.2602" }
%"class.WTF::Vector.2602" = type { %"class.WTF::VectorBuffer.2603" }
%"class.WTF::VectorBuffer.2603" = type { %"class.WTF::VectorBufferBase.2604" }
%"class.WTF::VectorBufferBase.2604" = type { %"struct.cc::NodeInfo"*, i32, i32 }
%"struct.cc::NodeInfo" = type { i32, %"class.gfx::Rect" }
%"class.blink::Member.2480" = type { %"class.blink::MemberBase.2481" }
%"class.blink::MemberBase.2481" = type { %"class.blink::TaskSession"* }
%"class.blink::TaskSession" = type { %"class.blink::HeapHashMap.2484", i8, %"class.base::RepeatingCallback.2491" }
%"class.blink::HeapHashMap.2484" = type { %"class.WTF::HashMap.2487" }
%"class.WTF::HashMap.2487" = type { %"class.WTF::HashTable.2488" }
%"class.WTF::HashTable.2488" = type <{ %"struct.WTF::KeyValuePair.2490"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2490" = type opaque
%"class.base::RepeatingCallback.2491" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::Member.2492" = type { %"class.blink::MemberBase.2493" }
%"class.blink::MemberBase.2493" = type { %"struct.blink::ContentCaptureManager::UserActivation"* }
%"struct.blink::ContentCaptureManager::UserActivation" = type { i32 (...)**, %"class.blink::WeakMember.2496", %"class.base::TimeTicks" }
%"class.blink::WeakMember.2496" = type { %"class.blink::MemberBase.2497" }
%"class.blink::MemberBase.2497" = type { %"class.blink::LocalFrame"* }
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2498" }
%"class.blink::Member.2498" = type { %"class.blink::MemberBase.2499" }
%"class.blink::MemberBase.2499" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3045" }
%"class.mojo::Remote.3045" = type { %"class.mojo::internal::InterfacePtrState.3046" }
%"class.mojo::internal::InterfacePtrState.3046" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3047" }
%"class.std::__1::unique_ptr.3047" = type { %"class.std::__1::__compressed_pair.3048" }
%"class.std::__1::__compressed_pair.3048" = type { %"struct.std::__1::__compressed_pair_elem.3049" }
%"struct.std::__1::__compressed_pair_elem.3049" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2500" = type { %"class.std::__1::__compressed_pair.2501" }
%"class.std::__1::__compressed_pair.2501" = type { %"struct.std::__1::__compressed_pair_elem.2502" }
%"struct.std::__1::__compressed_pair_elem.2502" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.2503, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.2503 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.2504", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.2504" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.2505" }
%"class.std::__1::vector.2505" = type { %"class.std::__1::__vector_base.2506" }
%"class.std::__1::__vector_base.2506" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.2507" }
%"class.std::__1::__compressed_pair.2507" = type { %"struct.std::__1::__compressed_pair_elem.2508" }
%"struct.std::__1::__compressed_pair_elem.2508" = type { %"class.blink::WebString"* }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.2512, i8, [7 x i8] }>
%class.scoped_refptr.2512 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.2513", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.2513" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2514" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2514" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2521" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2522" = type { %"class.std::__1::__compressed_pair.2523" }
%"class.std::__1::__compressed_pair.2523" = type { %"struct.std::__1::__compressed_pair_elem.2524" }
%"struct.std::__1::__compressed_pair_elem.2524" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2142" = type { %"class.absl::optional_internal::optional_data.2143" }
%"class.absl::optional_internal::optional_data.2143" = type { %"class.absl::optional_internal::optional_data_base.2144" }
%"class.absl::optional_internal::optional_data_base.2144" = type { %"class.absl::optional_internal::optional_data_dtor_base.2145" }
%"class.absl::optional_internal::optional_data_dtor_base.2145" = type { i8, %union.anon.2146 }
%union.anon.2146 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2528" = type { %"class.std::__1::__compressed_pair.2529" }
%"class.std::__1::__compressed_pair.2529" = type { %"struct.std::__1::__compressed_pair_elem.2530" }
%"struct.std::__1::__compressed_pair_elem.2530" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2534" }
%"class.blink::Member.2534" = type { %"class.blink::MemberBase.2535" }
%"class.blink::MemberBase.2535" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3055" }
%"class.mojo::AssociatedRemote.3055" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3056" }
%"class.mojo::internal::AssociatedInterfacePtrState.3056" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3057" }
%"class.std::__1::unique_ptr.3057" = type { %"class.std::__1::__compressed_pair.3058" }
%"class.std::__1::__compressed_pair.3058" = type { %"struct.std::__1::__compressed_pair_elem.3059" }
%"struct.std::__1::__compressed_pair_elem.3059" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2536" = type { %"class.blink::Member.2537" }
%"class.blink::Member.2537" = type { %"class.blink::MemberBase.2538" }
%"class.blink::MemberBase.2538" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3065" }
%"class.mojo::AssociatedRemote.3065" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3066" }
%"class.mojo::internal::AssociatedInterfacePtrState.3066" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3067" }
%"class.std::__1::unique_ptr.3067" = type { %"class.std::__1::__compressed_pair.3068" }
%"class.std::__1::__compressed_pair.3068" = type { %"struct.std::__1::__compressed_pair_elem.3069" }
%"struct.std::__1::__compressed_pair_elem.3069" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2539" }
%"class.blink::Member.2539" = type { %"class.blink::MemberBase.2540" }
%"class.blink::MemberBase.2540" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3075", %"class.blink::Member.1969", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3075" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3076" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1664" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3076" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2541" = type { %"class.blink::Member.2542" }
%"class.blink::Member.2542" = type { %"class.blink::MemberBase.2543" }
%"class.blink::MemberBase.2543" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3079", %"class.blink::Member.1969", %"class.mojo::AssociatedReceiver.3080" }
%"class.blink::ThreadState::PrefinalizerRegistration.3079" = type { i8 }
%"class.mojo::AssociatedReceiver.3080" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3081" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3081" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2544" }
%"class.blink::Member.2544" = type { %"class.blink::MemberBase.2545" }
%"class.blink::MemberBase.2545" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3084", %"class.blink::Member.1969", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3084" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2023, %"class.std::__1::unique_ptr.1664", %"class.base::WeakPtrFactory.3085" }
%"class.base::WeakPtrFactory.3085" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2546" = type { %"class.blink::Member.2547" }
%"class.blink::Member.2547" = type { %"class.blink::MemberBase.2548" }
%"class.blink::MemberBase.2548" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3088", %"class.blink::Member.1969", %"class.mojo::AssociatedReceiver.3089" }
%"class.blink::ThreadState::PrefinalizerRegistration.3088" = type { i8 }
%"class.mojo::AssociatedReceiver.3089" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3090" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3090" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2549" = type { %"class.blink::MemberBase.2550" }
%"class.blink::MemberBase.2550" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2551" = type { %"class.blink::MemberBase.2552" }
%"class.blink::MemberBase.2552" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2553" = type { %"class.blink::MemberBase.2554" }
%"class.blink::MemberBase.2554" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2555" = type { %"class.blink::MemberBase.2556" }
%"class.blink::MemberBase.2556" = type { %"class.blink::HeapHashMap.2557"* }
%"class.blink::HeapHashMap.2557" = type opaque
%"class.mojo::StructPtr.2558" = type { %"class.std::__1::unique_ptr.2559" }
%"class.std::__1::unique_ptr.2559" = type { %"class.std::__1::__compressed_pair.2560" }
%"class.std::__1::__compressed_pair.2560" = type { %"struct.std::__1::__compressed_pair_elem.2561" }
%"struct.std::__1::__compressed_pair_elem.2561" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2562", %"class.mojo::InlinedStructPtr.2563" }
%"class.mojo::InlinedStructPtr.2562" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2563" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2567" = type { %"class.blink::MemberBase.2568" }
%"class.blink::MemberBase.2568" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.2569" = type { %"class.absl::optional_internal::optional_data.2570" }
%"class.absl::optional_internal::optional_data.2570" = type { %"class.absl::optional_internal::optional_data_base.2571" }
%"class.absl::optional_internal::optional_data_base.2571" = type { %"class.absl::optional_internal::optional_data_dtor_base.2572" }
%"class.absl::optional_internal::optional_data_dtor_base.2572" = type { i8, %union.anon.2573 }
%union.anon.2573 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.2989 }
%class.scoped_refptr.2989 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.2990", %"class.WTF::String", %"class.std::__1::unique_ptr.2992" }
%"class.WTF::RefCounted.2990" = type { %"class.base::RefCounted.2991" }
%"class.base::RefCounted.2991" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2992" = type { %"class.std::__1::__compressed_pair.2993" }
%"class.std::__1::__compressed_pair.2993" = type { %"struct.std::__1::__compressed_pair_elem.2994" }
%"struct.std::__1::__compressed_pair_elem.2994" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.2995", %"class.std::__1::unique_ptr.3005", %"class.WTF::Vector.3011", i8, i32 }
%"class.std::__1::unique_ptr.2995" = type { %"class.std::__1::__compressed_pair.2996" }
%"class.std::__1::__compressed_pair.2996" = type { %"struct.std::__1::__compressed_pair_elem.2997" }
%"struct.std::__1::__compressed_pair_elem.2997" = type { %"class.WTF::Vector.2998"* }
%"class.WTF::Vector.2998" = type { %"class.WTF::VectorBuffer.2999" }
%"class.WTF::VectorBuffer.2999" = type { %"class.WTF::VectorBufferBase.2881" }
%"class.std::__1::unique_ptr.3005" = type { %"class.std::__1::__compressed_pair.3006" }
%"class.std::__1::__compressed_pair.3006" = type { %"struct.std::__1::__compressed_pair_elem.3007" }
%"struct.std::__1::__compressed_pair_elem.3007" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.3011" = type { %"class.WTF::VectorBuffer.3012" }
%"class.WTF::VectorBuffer.3012" = type { %"class.WTF::VectorBufferBase.2881", [32 x i8] }
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.2938, %"class.WTF::Vector.2939", %"class.std::__1::unique_ptr.2944", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.2965, %"class.blink::Persistent.2966" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.2938 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.2939" = type { %"class.WTF::VectorBuffer.2940" }
%"class.WTF::VectorBuffer.2940" = type { %"class.WTF::VectorBufferBase.2941", [8 x i8] }
%"class.WTF::VectorBufferBase.2941" = type { %class.scoped_refptr.2938*, i32, i32 }
%"class.std::__1::unique_ptr.2944" = type { %"class.std::__1::__compressed_pair.2945" }
%"class.std::__1::__compressed_pair.2945" = type { %"struct.std::__1::__compressed_pair_elem.2946" }
%"struct.std::__1::__compressed_pair_elem.2946" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.2947", %"class.absl::optional.2952", %"class.absl::optional.2957" }
%"class.absl::optional.2947" = type { %"class.absl::optional_internal::optional_data.2948" }
%"class.absl::optional_internal::optional_data.2948" = type { %"class.absl::optional_internal::optional_data_base.2949" }
%"class.absl::optional_internal::optional_data_base.2949" = type { %"class.absl::optional_internal::optional_data_dtor_base.2950" }
%"class.absl::optional_internal::optional_data_dtor_base.2950" = type { i8, %union.anon.2951 }
%union.anon.2951 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.2952" = type { %"class.absl::optional_internal::optional_data.2953" }
%"class.absl::optional_internal::optional_data.2953" = type { %"class.absl::optional_internal::optional_data_base.2954" }
%"class.absl::optional_internal::optional_data_base.2954" = type { %"class.absl::optional_internal::optional_data_dtor_base.2955" }
%"class.absl::optional_internal::optional_data_dtor_base.2955" = type { i8, [3 x i8], %union.anon.2956 }
%union.anon.2956 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.2957" = type { %"class.absl::optional_internal::optional_data.2958" }
%"class.absl::optional_internal::optional_data.2958" = type { %"class.absl::optional_internal::optional_data_base.2959" }
%"class.absl::optional_internal::optional_data_base.2959" = type { %"class.absl::optional_internal::optional_data_dtor_base.2960" }
%"class.absl::optional_internal::optional_data_dtor_base.2960" = type { i8, %union.anon.2961 }
%union.anon.2961 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.2965 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.2966" = type { %"class.blink::PersistentBase.2967" }
%"class.blink::PersistentBase.2967" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.2970", %"struct.blink::PhysicalRect", %"class.blink::Member.2980" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.std::__1::unique_ptr.2970" = type { %"class.std::__1::__compressed_pair.2971" }
%"class.std::__1::__compressed_pair.2971" = type { %"struct.std::__1::__compressed_pair_elem.2972" }
%"struct.std::__1::__compressed_pair_elem.2972" = type { %"class.WTF::HashSet.2973"* }
%"class.WTF::HashSet.2973" = type { %"class.WTF::HashTable.2974" }
%"class.WTF::HashTable.2974" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2980" = type { %"class.blink::MemberBase.2981" }
%"class.blink::MemberBase.2981" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.3122", %"class.blink::Member.3124", %"class.blink::Member.3126", %"class.blink::Member.3145", %"class.blink::Member.3147" }
%"class.blink::Member.3122" = type { %"class.blink::MemberBase.3123" }
%"class.blink::MemberBase.3123" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.3124" = type { %"class.blink::MemberBase.3125" }
%"class.blink::MemberBase.3125" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.3126" = type { %"class.blink::MemberBase.3127" }
%"class.blink::MemberBase.3127" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.3130", %"class.blink::HeapHashSet.3139" }
%"class.blink::HeapVector.3130" = type { %"class.WTF::Vector.3133" }
%"class.WTF::Vector.3133" = type { %"class.WTF::VectorBuffer.3134" }
%"class.WTF::VectorBuffer.3134" = type { %"class.WTF::VectorBufferBase.3135" }
%"class.WTF::VectorBufferBase.3135" = type { %"class.blink::Member.3136"*, i32, i32 }
%"class.blink::Member.3136" = type { %"class.blink::MemberBase.3137" }
%"class.blink::MemberBase.3137" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.3139" = type { %"class.WTF::HashSet.3142" }
%"class.WTF::HashSet.3142" = type { %"class.WTF::HashTable.3143" }
%"class.WTF::HashTable.3143" = type <{ %"class.blink::Member.3136"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3145" = type { %"class.blink::MemberBase.3146" }
%"class.blink::MemberBase.3146" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.3147" = type { %"class.blink::MemberBase.3148" }
%"class.blink::MemberBase.3148" = type { %"class.blink::HeapHashSet.3149"* }
%"class.blink::HeapHashSet.3149" = type opaque
%"class.WTF::HashSet.3150" = type opaque
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.2931, %"class.std::__1::unique_ptr.2932", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1756", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.2931 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2987", i16, %class.scoped_refptr.2931 }
%"class.WTF::ThreadSafeRefCounted.2987" = type { %"class.base::RefCountedThreadSafe.2988" }
%"class.base::RefCountedThreadSafe.2988" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2932" = type { %"class.std::__1::__compressed_pair.2933" }
%"class.std::__1::__compressed_pair.2933" = type { %"struct.std::__1::__compressed_pair_elem.2934" }
%"struct.std::__1::__compressed_pair_elem.2934" = type { %"class.WTF::Vector.2935"* }
%"class.WTF::Vector.2935" = type { %"class.WTF::VectorBuffer.2936" }
%"class.WTF::VectorBuffer.2936" = type { %"class.WTF::VectorBufferBase.2937" }
%"class.WTF::VectorBufferBase.2937" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.blink::TextMarkerBase" = type { %"class.blink::DocumentMarker" }
%"class.blink::StyleableMarker" = type <{ %"class.blink::DocumentMarker", %"class.blink::Color", %"class.blink::Color", i32, i32, %"class.blink::Color", [4 x i8] }>
%"struct.blink::InlineTextBoxPainter::PaintOffsets" = type { i32, i32 }
%"class.blink::LayoutTheme" = type <{ i32 (...)**, %"class.WTF::RefCounted.3019", %"class.blink::Color", i8, [7 x i8], %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.WTF::RefCounted.3019" = type { %"class.base::RefCounted.3020" }
%"class.base::RefCounted.3020" = type { %"class.base::subtle::RefCountedBase" }

$_ZNK5blink14LineLayoutItem8StyleRefEb = comdat any

$_ZNK5blink9PaintInfo18IntersectsCullRectERKNS_12PhysicalRectERKNS_14PhysicalOffsetE = comdat any

$_ZN5blink20InlineTextBoxPainter16GetSelectionRectILNS0_12PaintOptionsE0EEENS_12PhysicalRectERNS_15GraphicsContextERKS3_RKNS_13ComputedStyleERKNS_4FontEPNS_17LayoutTextCombineE = comdat any

$_ZN5blink14TextPaintStyleaSEOS0_ = comdat any

$_ZN5blink20InlineTextBoxPainter14PaintSelectionILNS0_12PaintOptionsE1EEENS_12PhysicalRectERNS_15GraphicsContextERKS3_RKNS_13ComputedStyleERKNS_4FontENS_5ColorEPNS_17LayoutTextCombineE = comdat any

$_ZN5blink20InlineTextBoxPainter14PaintSelectionILNS0_12PaintOptionsE0EEENS_12PhysicalRectERNS_15GraphicsContextERKS3_RKNS_13ComputedStyleERKNS_4FontENS_5ColorEPNS_17LayoutTextCombineE = comdat any

$_ZN5blink18TextDecorationInfoD2Ev = comdat any

$_ZN5blink20InlineTextBoxPainter16GetSelectionRectILNS0_12PaintOptionsE1EEENS_12PhysicalRectERNS_15GraphicsContextERKS3_RKNS_13ComputedStyleERKNS_4FontEPNS_17LayoutTextCombineE = comdat any

$_ZN4absl17optional_internal18optional_data_baseIN5blink18TextDecorationInfoEE9constructIJRNS2_14PhysicalOffsetES7_RNS2_10LayoutUnitENS2_12FontBaselineERKNS2_13ComputedStyleERNS_8optionalINS2_21AppliedTextDecorationEEERPSC_EEEvDpOT_ = comdat any

@.str = private unnamed_addr constant [64 x i8] c"inline_text_box_.Start() + length <= first_line_string.length()\00", align 1
@.str.1 = private unnamed_addr constant [71 x i8] c"../../third_party/blink/renderer/core/paint/inline_text_box_painter.cc\00", align 1
@.str.2 = private unnamed_addr constant [65 x i8] c"inline_text_box_.Start() + length <= layout_item_string.length()\00", align 1
@__const._ZN5blink20InlineTextBoxPainter25PaintTextMarkerForegroundERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_14TextMarkerBaseERKNS_13ComputedStyleERKNS_4FontE.text_style = private unnamed_addr constant { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", float, i32, %"class.blink::ShadowList"*, { { { { i8, [3 x i8], { { i8, [3 x i8], %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" } } } } } } } { %"class.blink::Color" { i32 -1431655766 }, %"class.blink::Color" { i32 -1431655766 }, %"class.blink::Color" { i32 -1431655766 }, %"class.blink::Color" { i32 -1431655766 }, float 0xFFFFFFFFE0000000, i32 -1431655766, %"class.blink::ShadowList"* inttoptr (i64 -6148914691236517206 to %"class.blink::ShadowList"*), { { { { i8, [3 x i8], { { i8, [3 x i8], %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" } } } } } } { { { { i8, [3 x i8], { { i8, [3 x i8], %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" } } } } } { { { i8, [3 x i8], { { i8, [3 x i8], %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" } } } } { { i8, [3 x i8], { { i8, [3 x i8], %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" } } } { i8 -86, [3 x i8] c"\AA\AA\AA", { { i8, [3 x i8], %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" } } { { i8, [3 x i8], %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" } { i8 -86, [3 x i8] c"\AA\AA\AA", %"class.blink::Color" { i32 -1431655766 }, %"class.blink::TextDecorationThickness" { %"class.blink::Length" <{ %union.anon.243 { i32 -1431655766 }, i8 -86, i8 -86, i8 -86, i8 -86 }>, i8 -86, [3 x i8] c"\AA\AA\AA" }, %"class.blink::Length" <{ %union.anon.243 { i32 -1431655766 }, i8 -86, i8 -86, i8 -86, i8 -86 }> } } } } } } }, align 8
@.str.4 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/css/css_global_rule_set.h\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"features_.IsAlive()\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZTVN5blink11TextPainterE = external unnamed_addr constant { [3 x i8*] }, align 8
@_ZN5blink10html_names8kFontTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names5kATagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZTVN5blink20TextDecorationOffsetE = external unnamed_addr constant { [3 x i8*] }, align 8
@_ZN5blink22IgnorePaintTimingScope30is_document_element_invisible_E = external local_unnamed_addr global i8, align 1
@_ZN5blink22IgnorePaintTimingScope13ignore_depth_E = external local_unnamed_addr global i32, align 4
@_ZN5blink39ScopedPaintTimingDetectorBlockPaintHook4top_E = external local_unnamed_addr global %"class.blink::ScopedPaintTimingDetectorBlockPaintHook"*, align 8

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(88) %"class.blink::LayoutObject"* @_ZNK5blink20InlineTextBoxPainter18InlineLayoutObjectEv(%"class.blink::InlineTextBoxPainter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %0, i64 0, i32 0
  %3 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %3, i64 0, i32 0, i32 4, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  ret %"class.blink::LayoutObject"* %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InlineTextBoxPainter5PaintERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::InlineTextBoxPainter"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.blink::LineLayoutItem", align 8
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca %"class.blink::LineLayoutText", align 8
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %"struct.blink::PhysicalRect"*
  %12 = alloca { i64, i64 }, align 8
  %13 = bitcast { i64, i64 }* %12 to %"class.blink::IntRect"*
  %14 = alloca i64, align 8
  %15 = bitcast i64* %14 to %"struct.blink::PhysicalOffset"*
  %16 = alloca %"struct.blink::PhysicalRect", align 8
  %17 = alloca %"class.absl::optional.1962", align 8
  %18 = alloca %"class.blink::AffineTransform", align 8
  %19 = alloca { <2 x float>, <2 x float> }, align 8
  %20 = bitcast { <2 x float>, <2 x float> }* %19 to %"class.blink::FloatRect"*
  %21 = alloca %"class.absl::optional.2868", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.blink::LineLayoutText", align 8
  %24 = alloca %"class.logging::CheckOpResult", align 8
  %25 = alloca %"class.logging::CheckError", align 8
  %26 = alloca %"class.logging::CheckOpResult", align 8
  %27 = alloca %"class.logging::CheckError", align 8
  %28 = alloca %"class.WTF::StringBuilder", align 8
  %29 = alloca %"class.blink::TextRun", align 8
  %30 = alloca %"class.WTF::StringView", align 8
  %31 = alloca %"class.absl::optional.2890", align 8
  %32 = alloca %"class.blink::AffineTransform", align 8
  %33 = alloca %"struct.blink::TextPaintStyle", align 8
  %34 = alloca %"struct.blink::TextPaintStyle", align 8
  %35 = alloca %"struct.blink::TextPaintStyle", align 8
  %36 = alloca %"struct.blink::PhysicalOffset", align 4
  %37 = alloca %"class.blink::HeapVector.2905", align 8
  %38 = alloca %"struct.blink::PhysicalRect", align 8
  %39 = alloca { i64, i64 }, align 8
  %40 = bitcast { i64, i64 }* %39 to %"class.blink::IntRect"*
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca %"class.blink::TextPainter", align 8
  %44 = alloca i32, align 4
  %45 = alloca %"class.absl::optional.2916", align 8
  %46 = alloca i8, align 1
  %47 = alloca i64, align 8
  %48 = bitcast i64* %47 to %"struct.blink::PhysicalOffset"*
  %49 = alloca %"class.blink::LayoutUnit", align 4
  %50 = alloca %"class.blink::ComputedStyle"*, align 8
  %51 = alloca %"class.absl::optional.2900", align 4
  %52 = alloca i32, align 4
  %53 = alloca %"class.blink::TextDecorationOffset", align 8
  %54 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %0, i64 0, i32 0
  %55 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %55, i64 0, i32 5
  %57 = load i16, i16* %56, align 2
  %58 = icmp eq i16 %57, -2
  br i1 %58, label %1799, label %59

59:                                               ; preds = %3
  %60 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %55, i64 0, i32 4
  %61 = load i16, i16* %60, align 4
  %62 = icmp eq i16 %61, 0
  br i1 %62, label %1799, label %63

63:                                               ; preds = %59
  %64 = bitcast %"class.blink::LineLayoutText"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  %65 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %55, i64 0, i32 0, i32 4, i32 0
  %66 = bitcast %"class.blink::LayoutObject"** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.blink::LineLayoutText"* %9 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.blink::LineLayoutText", %"class.blink::LineLayoutText"* %9, i64 0, i32 0
  %70 = bitcast %"class.blink::InlineTextBoxPainter"* %0 to %"class.blink::InlineBox"**
  %71 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %55, i64 0, i32 0, i32 7, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = and i32 %72, 1
  %74 = icmp ne i32 %73, 0
  %75 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem8StyleRefEb(%"class.blink::LineLayoutItem"* nonnull %69, i1 zeroext %74)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  %76 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %75, i64 0, i32 0, i32 9
  %77 = bitcast [20 x i8]* %76 to i160*
  %78 = load i160, i160* %77, align 8
  %79 = and i160 %78, 3802951800684688204490109616128
  %80 = icmp eq i160 %79, 1267650600228229401496703205376
  br i1 %80, label %81, label %1799

81:                                               ; preds = %63
  %82 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %83 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %82, i64 0, i32 0, i32 4, i32 0
  %84 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %84, i64 0, i32 6, i32 0, i32 0
  %86 = load %"class.blink::Node"*, %"class.blink::Node"** %85, align 8
  %87 = icmp eq %"class.blink::Node"* %86, null
  br i1 %87, label %88, label %95

88:                                               ; preds = %81, %88
  %89 = phi %"class.blink::LayoutObject"* [ %91, %88 ], [ %84, %81 ]
  %90 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %89, i64 0, i32 7
  %91 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %91, i64 0, i32 6, i32 0, i32 0
  %93 = load %"class.blink::Node"*, %"class.blink::Node"** %92, align 8
  %94 = icmp eq %"class.blink::Node"* %93, null
  br i1 %94, label %88, label %95

95:                                               ; preds = %88, %81
  %96 = phi %"class.blink::Node"* [ %86, %81 ], [ %93, %88 ]
  %97 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %96, i64 0, i32 3, i32 0, i32 0
  %98 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %98, i64 0, i32 2, i32 0, i32 0
  %100 = load %"class.blink::Document"*, %"class.blink::Document"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %100, i64 0, i32 31
  %102 = load i32, i32* %101, align 8
  %103 = icmp eq i32 %102, 2
  br i1 %103, label %110, label %104

104:                                              ; preds = %95
  %105 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 1
  %106 = load i32, i32* %105, align 8
  %107 = icmp eq i32 %106, 11
  br i1 %107, label %110, label %108

108:                                              ; preds = %104
  %109 = call zeroext i1 @_ZNK5blink13InlineTextBox10IsSelectedEv(%"class.blink::InlineTextBox"* %82) #11
  br i1 %109, label %114, label %110

110:                                              ; preds = %95, %104, %108
  %111 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 10
  br i1 %113, label %1799, label %114

114:                                              ; preds = %110, %108
  %115 = phi i1 [ false, %110 ], [ true, %108 ]
  %116 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %116) #11
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %118 = bitcast { i64, i64 }* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 -86, i64 16, i1 false)
  %119 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %120 = call { i64, i64 } @_ZNK5blink13InlineTextBox20PhysicalOverflowRectEv(%"class.blink::InlineTextBox"* %119) #11
  %121 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %122 = extractvalue { i64, i64 } %120, 0
  store i64 %122, i64* %121, align 8
  %123 = extractvalue { i64, i64 } %120, 1
  store i64 %123, i64* %117, align 8
  %124 = call zeroext i1 @_ZNK5blink9PaintInfo18IntersectsCullRectERKNS_12PhysicalRectERKNS_14PhysicalOffsetE(%"struct.blink::PaintInfo"* %1, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %11, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2)
  %125 = or i1 %115, %124
  br i1 %125, label %126, label %1798

126:                                              ; preds = %114
  %127 = bitcast { i64, i64 }* %10 to i32*
  %128 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %11, i64 0, i32 1, i32 1, i32 0
  %129 = bitcast i64* %117 to i32*
  %130 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %11, i64 0, i32 0, i32 1, i32 0
  %131 = load i32, i32* %127, align 8
  %132 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = icmp slt i32 %133, 0
  %135 = select i1 %134, i32 -2147483648, i32 2147483647
  %136 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %131, i32 %133) #11
  %137 = extractvalue { i32, i1 } %136, 1
  %138 = extractvalue { i32, i1 } %136, 0
  %139 = select i1 %137, i32 %135, i32 %138, !prof !2
  %140 = load i32, i32* %130, align 4
  %141 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = icmp slt i32 %142, 0
  %144 = select i1 %143, i32 -2147483648, i32 2147483647
  %145 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %140, i32 %142) #11
  %146 = extractvalue { i32, i1 } %145, 1
  %147 = extractvalue { i32, i1 } %145, 0
  %148 = select i1 %146, i32 %144, i32 %147, !prof !2
  %149 = zext i32 %148 to i64
  %150 = shl nuw i64 %149, 32
  %151 = zext i32 %139 to i64
  %152 = or i64 %150, %151
  store i64 %152, i64* %121, align 8
  %153 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %153) #11
  %154 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 1
  %155 = icmp slt i32 %139, -2147483584
  %156 = ashr i32 %139, 6
  %157 = select i1 %155, i32 -33554432, i32 %156, !prof !2
  %158 = icmp slt i32 %148, -2147483584
  %159 = ashr i32 %148, 6
  %160 = select i1 %158, i32 -33554432, i32 %159, !prof !2
  %161 = zext i32 %160 to i64
  %162 = shl nuw i64 %161, 32
  %163 = bitcast { i64, i64 }* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 -86, i64 16, i1 false)
  %164 = load i32, i32* %129, align 8
  %165 = icmp slt i32 %164, 0
  %166 = select i1 %165, i32 -2147483648, i32 2147483647
  %167 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %139, i32 %164) #11
  %168 = extractvalue { i32, i1 } %167, 1
  %169 = extractvalue { i32, i1 } %167, 0
  %170 = select i1 %168, i32 %166, i32 %169, !prof !2
  %171 = load i32, i32* %128, align 4
  %172 = icmp slt i32 %171, 0
  %173 = select i1 %172, i32 -2147483648, i32 2147483647
  %174 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %148, i32 %171) #11
  %175 = extractvalue { i32, i1 } %174, 1
  %176 = extractvalue { i32, i1 } %174, 0
  %177 = select i1 %175, i32 %173, i32 %176, !prof !2
  %178 = icmp sgt i32 %170, 2147483583
  br i1 %178, label %186, label %179, !prof !2

179:                                              ; preds = %126
  %180 = icmp sgt i32 %170, -1
  br i1 %180, label %181, label %184

181:                                              ; preds = %179
  %182 = add nuw nsw i32 %170, 63
  %183 = sdiv i32 %182, 64
  br label %186

184:                                              ; preds = %179
  %185 = sdiv i32 %170, 64
  br label %186

186:                                              ; preds = %184, %181, %126
  %187 = phi i32 [ %183, %181 ], [ %185, %184 ], [ 33554431, %126 ]
  %188 = icmp sgt i32 %177, 2147483583
  br i1 %188, label %196, label %189, !prof !2

189:                                              ; preds = %186
  %190 = icmp sgt i32 %177, -1
  br i1 %190, label %191, label %194

191:                                              ; preds = %189
  %192 = add nuw nsw i32 %177, 63
  %193 = sdiv i32 %192, 64
  br label %196

194:                                              ; preds = %189
  %195 = sdiv i32 %177, 64
  br label %196

196:                                              ; preds = %186, %191, %194
  %197 = phi i32 [ %193, %191 ], [ %195, %194 ], [ 33554431, %186 ]
  %198 = sub nsw i32 %187, %157
  %199 = sub nsw i32 %197, %160
  %200 = zext i32 %199 to i64
  %201 = shl nuw i64 %200, 32
  %202 = zext i32 %198 to i64
  %203 = or i64 %201, %202
  %204 = zext i32 %157 to i64
  %205 = or i64 %162, %204
  %206 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %12, i64 0, i32 0
  store i64 %205, i64* %206, align 8
  store i64 %203, i64* %154, align 8
  %207 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 0
  %208 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %207, align 8
  %209 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %209) #11
  %210 = bitcast i64* %14 to i32*
  store i32 -1431655766, i32* %210, align 8
  %211 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %15, i64 0, i32 1, i32 0
  store i32 -1431655766, i32* %211, align 4
  %212 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %70, align 8
  %213 = call i64 @_ZNK5blink9InlineBox16PhysicalLocationEv(%"class.blink::InlineBox"* %212) #11
  %214 = trunc i64 %213 to i32
  %215 = lshr i64 %213, 32
  %216 = trunc i64 %215 to i32
  %217 = load i32, i32* %132, align 4
  %218 = icmp slt i32 %217, 0
  %219 = select i1 %218, i32 -2147483648, i32 2147483647
  %220 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %214, i32 %217) #11
  %221 = extractvalue { i32, i1 } %220, 1
  %222 = extractvalue { i32, i1 } %220, 0
  %223 = select i1 %221, i32 %219, i32 %222, !prof !2
  %224 = load i32, i32* %141, align 4
  %225 = icmp slt i32 %224, 0
  %226 = select i1 %225, i32 -2147483648, i32 2147483647
  %227 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %216, i32 %224) #11
  %228 = extractvalue { i32, i1 } %227, 1
  %229 = extractvalue { i32, i1 } %227, 0
  %230 = select i1 %228, i32 %226, i32 %229, !prof !2
  %231 = zext i32 %230 to i64
  %232 = shl nuw i64 %231, 32
  %233 = zext i32 %223 to i64
  %234 = or i64 %232, %233
  store i64 %234, i64* %14, align 8
  %235 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %70, align 8
  %236 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %235, i64 0, i32 7, i32 0
  %237 = load i32, i32* %236, align 4
  %238 = and i32 %237, 2048
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %253, label %240

240:                                              ; preds = %196
  %241 = sdiv i32 %230, 64
  %242 = srem i32 %230, 64
  %243 = add nsw i32 %242, 32
  %244 = ashr i32 %243, 6
  %245 = add nsw i32 %244, %241
  %246 = icmp sgt i32 %245, 33554431
  br i1 %246, label %251, label %247

247:                                              ; preds = %240
  %248 = icmp slt i32 %245, -33554432
  %249 = shl i32 %245, 6
  %250 = select i1 %248, i32 -2147483648, i32 %249
  br label %251

251:                                              ; preds = %247, %240
  %252 = phi i32 [ 2147483647, %240 ], [ %250, %247 ]
  store i32 %252, i32* %211, align 4
  br label %266

253:                                              ; preds = %196
  %254 = sdiv i32 %223, 64
  %255 = srem i32 %223, 64
  %256 = add nsw i32 %255, 32
  %257 = ashr i32 %256, 6
  %258 = add nsw i32 %257, %254
  %259 = icmp sgt i32 %258, 33554431
  br i1 %259, label %264, label %260

260:                                              ; preds = %253
  %261 = icmp slt i32 %258, -33554432
  %262 = shl i32 %258, 6
  %263 = select i1 %261, i32 -2147483648, i32 %262
  br label %264

264:                                              ; preds = %260, %253
  %265 = phi i32 [ 2147483647, %253 ], [ %263, %260 ]
  store i32 %265, i32* %210, align 8
  br label %266

266:                                              ; preds = %264, %251
  %267 = bitcast %"struct.blink::PhysicalRect"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %267) #11
  %268 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %16, i64 0, i32 0, i32 0, i32 0
  %269 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %16, i64 0, i32 0, i32 1, i32 0
  %270 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %16, i64 0, i32 1, i32 0, i32 0
  %271 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %16, i64 0, i32 1, i32 1, i32 0
  %272 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %235, i64 0, i32 6, i32 0
  %273 = bitcast %"struct.blink::PhysicalRect"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %273, i8 -86, i64 16, i1 false)
  %274 = load i32, i32* %272, align 8
  %275 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %235) #11
  %276 = bitcast %"struct.blink::PhysicalRect"* %16 to i64*
  %277 = load i64, i64* %14, align 8
  store i64 %277, i64* %276, align 8
  %278 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %16, i64 0, i32 1
  %279 = bitcast %"struct.blink::PhysicalSize"* %278 to i64*
  %280 = zext i32 %275 to i64
  %281 = shl nuw i64 %280, 32
  %282 = zext i32 %274 to i64
  %283 = or i64 %281, %282
  store i64 %283, i64* %279, align 8
  %284 = getelementptr inbounds %"class.absl::optional.1962", %"class.absl::optional.1962"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %284) #11
  %285 = bitcast %"class.absl::optional.1962"* %17 to i64*
  store i64 -6148914691236517206, i64* %285, align 8
  store i8 0, i8* %284, align 8
  %286 = getelementptr inbounds %"class.absl::optional.1962", %"class.absl::optional.1962"* %17, i64 0, i32 0, i32 0, i32 0, i32 1
  %287 = bitcast %union.anon.1966* %286 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %287, i8 0, i64 48, i1 false) #11
  br i1 %115, label %288, label %474

288:                                              ; preds = %266
  %289 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 1
  %290 = load i32, i32* %289, align 8
  %291 = icmp ne i32 %290, 5
  %292 = or i1 %103, %291
  br i1 %292, label %474, label %293

293:                                              ; preds = %288
  %294 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %295 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %294, i64 0, i32 0, i32 4, i32 0
  %296 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %295, align 8
  %297 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %296, i64 0, i32 6, i32 0, i32 0
  %298 = load %"class.blink::Node"*, %"class.blink::Node"** %297, align 8
  %299 = icmp eq %"class.blink::Node"* %298, null
  br i1 %299, label %300, label %307

300:                                              ; preds = %293, %300
  %301 = phi %"class.blink::LayoutObject"* [ %303, %300 ], [ %296, %293 ]
  %302 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %301, i64 0, i32 7
  %303 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %302, align 8
  %304 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %303, i64 0, i32 6, i32 0, i32 0
  %305 = load %"class.blink::Node"*, %"class.blink::Node"** %304, align 8
  %306 = icmp eq %"class.blink::Node"* %305, null
  br i1 %306, label %300, label %307

307:                                              ; preds = %300, %293
  %308 = phi %"class.blink::Node"* [ %298, %293 ], [ %305, %300 ]
  %309 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %308, i64 0, i32 3, i32 0, i32 0
  %310 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %309, align 8
  %311 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %310, i64 0, i32 2, i32 0, i32 0
  %312 = load %"class.blink::Document"*, %"class.blink::Document"** %311, align 8
  %313 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %312) #11
  %314 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %313, i64 0, i32 14, i32 0, i32 0
  %315 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %314, align 8
  %316 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %317 = call i32 @_ZNK5blink14FrameSelection43ComputeLayoutSelectionStateForInlineTextBoxERKNS_13InlineTextBoxE(%"class.blink::FrameSelection"* %315, %"class.blink::InlineTextBox"* dereferenceable(88) %316) #11
  %318 = call zeroext i1 @_ZN5blink23SelectionBoundsRecorder21ShouldRecordSelectionERKNS_14FrameSelectionENS_14SelectionStateE(%"class.blink::FrameSelection"* dereferenceable(72) %315, i32 %317) #11
  br i1 %318, label %319, label %474

319:                                              ; preds = %307
  %320 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %321 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %320, align 8
  %322 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %321, i64 0, i32 1, i32 0, i32 0
  %323 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %322, align 8
  %324 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %323, i64 0, i32 1
  %325 = call { i64, i64 } @_ZN5blink20InlineTextBoxPainter16GetSelectionRectILNS0_12PaintOptionsE0EEENS_12PhysicalRectERNS_15GraphicsContextERKS3_RKNS_13ComputedStyleERKNS_4FontEPNS_17LayoutTextCombineE(%"class.blink::InlineTextBoxPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %208, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %16, %"class.blink::ComputedStyle"* dereferenceable(104) %75, %"class.blink::Font"* dereferenceable(88) %324, %"class.blink::LayoutTextCombine"* null)
  %326 = extractvalue { i64, i64 } %325, 0
  %327 = trunc i64 %326 to i32
  %328 = lshr i64 %326, 32
  %329 = trunc i64 %328 to i32
  %330 = extractvalue { i64, i64 } %325, 1
  %331 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %70, align 8
  %332 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %331, i64 0, i32 7, i32 0
  %333 = load i32, i32* %332, align 4
  %334 = lshr i32 %333, 2
  %335 = trunc i32 %334 to i8
  %336 = and i8 %335, 1
  %337 = load i160, i160* %77, align 8
  %338 = and i160 %337, 15211807202738752817960438464512
  %339 = icmp eq i160 %338, 0
  %340 = bitcast %"class.blink::InlineBox"* %331 to %"class.blink::InlineTextBox"*
  %341 = lshr i160 %337, 102
  %342 = trunc i160 %341 to i8
  br i1 %339, label %453, label %343

343:                                              ; preds = %319
  %344 = bitcast %"class.blink::AffineTransform"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %344) #11
  %345 = load i32, i32* %268, align 8, !noalias !3
  %346 = load i32, i32* %269, align 4, !noalias !3
  %347 = load i32, i32* %271, align 4, !noalias !3
  %348 = icmp slt i32 %347, 0
  %349 = select i1 %348, i32 -2147483648, i32 2147483647
  %350 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %346, i32 %347) #11
  %351 = extractvalue { i32, i1 } %350, 1
  %352 = extractvalue { i32, i1 } %350, 0
  %353 = select i1 %351, i32 %349, i32 %352, !prof !2
  %354 = icmp slt i32 %353, 0
  %355 = select i1 %354, i32 -2147483648, i32 2147483647
  %356 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %345, i32 %353) #11
  %357 = extractvalue { i32, i1 } %356, 1
  %358 = extractvalue { i32, i1 } %356, 0
  %359 = select i1 %357, i32 %355, i32 %358, !prof !2
  %360 = sitofp i32 %359 to double
  %361 = fmul double %360, 1.562500e-02
  %362 = icmp sgt i32 %345, -1
  %363 = select i1 %362, i32 -2147483648, i32 2147483647
  %364 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %346, i32 %345) #11
  %365 = extractvalue { i32, i1 } %364, 1
  %366 = extractvalue { i32, i1 } %364, 0
  %367 = select i1 %365, i32 %363, i32 %366, !prof !2
  %368 = sitofp i32 %367 to double
  %369 = fmul double %368, 1.562500e-02
  call void @_ZN5blink15AffineTransformC1Edddddd(%"class.blink::AffineTransform"* nonnull %18, double 0.000000e+00, double 1.000000e+00, double -1.000000e+00, double 0.000000e+00, double %361, double %369) #11
  %370 = bitcast { <2 x float>, <2 x float> }* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %370) #11
  %371 = sitofp i32 %327 to float
  %372 = fmul float %371, 1.562500e-02
  %373 = sitofp i32 %329 to float
  %374 = fmul float %373, 1.562500e-02
  %375 = trunc i64 %330 to i32
  %376 = sitofp i32 %375 to float
  %377 = fmul float %376, 1.562500e-02
  %378 = lshr i64 %330, 32
  %379 = trunc i64 %378 to i32
  %380 = sitofp i32 %379 to float
  %381 = fmul float %380, 1.562500e-02
  %382 = insertelement <2 x float> undef, float %372, i32 0
  %383 = insertelement <2 x float> %382, float %374, i32 1
  %384 = insertelement <2 x float> undef, float %377, i32 0
  %385 = insertelement <2 x float> %384, float %381, i32 1
  %386 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %19, i64 0, i32 0
  store <2 x float> %383, <2 x float>* %386, align 8
  %387 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %19, i64 0, i32 1
  store <2 x float> %385, <2 x float>* %387, align 8
  %388 = call { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"* nonnull %18, %"class.blink::FloatRect"* nonnull dereferenceable(16) %20) #11
  %389 = extractvalue { <2 x float>, <2 x float> } %388, 0
  %390 = extractvalue { <2 x float>, <2 x float> } %388, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %370) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %344) #11
  %391 = extractelement <2 x float> %389, i32 0
  %392 = fmul float %391, 6.400000e+01
  %393 = call float @llvm.floor.f32(float %392) #11
  %394 = fcmp ult float %393, 0xC1E0000000000000
  %395 = fcmp ugt float %393, 0x41DFFFFFE0000000
  %396 = fcmp ogt float %393, 0xC1E0000000000000
  %397 = select i1 %396, float %393, float 0xC1E0000000000000
  %398 = fptosi float %397 to i32
  %399 = select i1 %394, i32 0, i32 2147483647
  %400 = select i1 %395, i32 %399, i32 %398
  %401 = extractelement <2 x float> %389, i32 1
  %402 = fmul float %401, 6.400000e+01
  %403 = call float @llvm.floor.f32(float %402) #11
  %404 = fcmp ult float %403, 0xC1E0000000000000
  %405 = fcmp ugt float %403, 0x41DFFFFFE0000000
  %406 = fcmp ogt float %403, 0xC1E0000000000000
  %407 = select i1 %406, float %403, float 0xC1E0000000000000
  %408 = fptosi float %407 to i32
  %409 = select i1 %404, i32 0, i32 2147483647
  %410 = select i1 %405, i32 %409, i32 %408
  %411 = extractelement <2 x float> %390, i32 0
  %412 = fadd float %391, %411
  %413 = fmul float %412, 6.400000e+01
  %414 = call float @llvm.ceil.f32(float %413) #11
  %415 = fcmp ult float %414, 0xC1E0000000000000
  %416 = fcmp ugt float %414, 0x41DFFFFFE0000000
  %417 = fcmp ogt float %414, 0xC1E0000000000000
  %418 = select i1 %417, float %414, float 0xC1E0000000000000
  %419 = fptosi float %418 to i32
  %420 = select i1 %415, i32 0, i32 2147483647
  %421 = select i1 %416, i32 %420, i32 %419
  %422 = icmp sgt i32 %400, -1
  %423 = select i1 %422, i32 -2147483648, i32 2147483647
  %424 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %421, i32 %400) #11
  %425 = extractvalue { i32, i1 } %424, 1
  %426 = extractvalue { i32, i1 } %424, 0
  %427 = select i1 %425, i32 %423, i32 %426, !prof !2
  %428 = extractelement <2 x float> %390, i32 1
  %429 = fadd float %401, %428
  %430 = fmul float %429, 6.400000e+01
  %431 = call float @llvm.ceil.f32(float %430) #11
  %432 = fcmp ult float %431, 0xC1E0000000000000
  %433 = fcmp ugt float %431, 0x41DFFFFFE0000000
  %434 = fcmp ogt float %431, 0xC1E0000000000000
  %435 = select i1 %434, float %431, float 0xC1E0000000000000
  %436 = fptosi float %435 to i32
  %437 = select i1 %432, i32 0, i32 2147483647
  %438 = select i1 %433, i32 %437, i32 %436
  %439 = icmp sgt i32 %410, -1
  %440 = select i1 %439, i32 -2147483648, i32 2147483647
  %441 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %438, i32 %410) #11
  %442 = extractvalue { i32, i1 } %441, 1
  %443 = extractvalue { i32, i1 } %441, 0
  %444 = select i1 %442, i32 %440, i32 %443, !prof !2
  %445 = zext i32 %444 to i64
  %446 = shl nuw i64 %445, 32
  %447 = zext i32 %427 to i64
  %448 = or i64 %446, %447
  %449 = load i160, i160* %77, align 8
  %450 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %451 = lshr i160 %449, 102
  %452 = trunc i160 %451 to i8
  br label %453

453:                                              ; preds = %343, %319
  %454 = phi %"class.blink::InlineTextBox"* [ %340, %319 ], [ %450, %343 ]
  %455 = phi i8 [ %342, %319 ], [ %452, %343 ]
  %456 = phi i64 [ %330, %319 ], [ %448, %343 ]
  %457 = phi i32 [ %327, %319 ], [ %400, %343 ]
  %458 = phi i32 [ %329, %319 ], [ %410, %343 ]
  %459 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %208, i64 0, i32 1
  %460 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %459, align 8
  %461 = and i8 %455, 3
  %462 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %454, i64 0, i32 0, i32 4, i32 0
  %463 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %462, align 8
  %464 = load i8, i8* %284, align 8, !range !6
  %465 = icmp eq i8 %464, 0
  br i1 %465, label %468, label %466

466:                                              ; preds = %453
  %467 = getelementptr inbounds %"class.absl::optional.1962", %"class.absl::optional.1962"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink23SelectionBoundsRecorderD1Ev(%"class.blink::SelectionBoundsRecorder"* %467) #11
  store i8 0, i8* %284, align 8
  br label %468

468:                                              ; preds = %453, %466
  %469 = getelementptr inbounds %"class.absl::optional.1962", %"class.absl::optional.1962"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %470 = zext i32 %458 to i64
  %471 = shl nuw i64 %470, 32
  %472 = zext i32 %457 to i64
  %473 = or i64 %471, %472
  call void @_ZN5blink23SelectionBoundsRecorderC1ENS_14SelectionStateENS_12PhysicalRectERNS_15PaintControllerENS_13TextDirectionENS_11WritingModeERKNS_12LayoutObjectE(%"class.blink::SelectionBoundsRecorder"* %469, i32 %317, i64 %473, i64 %456, %"class.blink::PaintController"* dereferenceable(584) %460, i8 zeroext %336, i8 zeroext %461, %"class.blink::LayoutObject"* dereferenceable(88) %463) #11
  store i8 1, i8* %284, align 8
  br label %474

474:                                              ; preds = %307, %468, %288, %266
  %475 = getelementptr inbounds %"class.absl::optional.2868", %"class.absl::optional.2868"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %475) #11
  %476 = bitcast %"class.absl::optional.2868"* %21 to i64*
  store i64 -6148914691236517206, i64* %476, align 8
  store i8 0, i8* %475, align 8
  %477 = getelementptr inbounds %"class.absl::optional.2868", %"class.absl::optional.2868"* %21, i64 0, i32 0, i32 0, i32 0, i32 2
  %478 = bitcast %union.anon.2872* %477 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %478, i8 0, i64 48, i1 false) #11
  %479 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 1
  %480 = load i32, i32* %479, align 8
  %481 = icmp eq i32 %480, 11
  br i1 %481, label %499, label %482

482:                                              ; preds = %474
  %483 = bitcast %"class.blink::InlineTextBoxPainter"* %0 to %"class.blink::DisplayItemClient"**
  %484 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %483, align 8
  %485 = add nsw i32 %480, 1
  %486 = getelementptr inbounds %"class.blink::GraphicsContext", %"class.blink::GraphicsContext"* %208, i64 0, i32 1
  %487 = load %"class.blink::PaintController"*, %"class.blink::PaintController"** %486, align 8
  %488 = call zeroext i1 @_ZN5blink15PaintController23UseCachedItemIfPossibleERKNS_17DisplayItemClientENS_11DisplayItem4TypeE(%"class.blink::PaintController"* %487, %"class.blink::DisplayItemClient"* dereferenceable(16) %484, i32 %485) #11
  br i1 %488, label %1787, label %489

489:                                              ; preds = %482
  %490 = load %"class.blink::DisplayItemClient"*, %"class.blink::DisplayItemClient"** %483, align 8
  %491 = load i8, i8* %475, align 8, !range !6
  %492 = icmp eq i8 %491, 0
  br i1 %492, label %495, label %493

493:                                              ; preds = %489
  %494 = getelementptr inbounds %"class.absl::optional.2868", %"class.absl::optional.2868"* %21, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink15DrawingRecorderD1Ev(%"class.blink::DrawingRecorder"* %494) #11
  store i8 0, i8* %475, align 8
  br label %495

495:                                              ; preds = %489, %493
  %496 = getelementptr inbounds %"class.absl::optional.2868", %"class.absl::optional.2868"* %21, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %497 = load i32, i32* %479, align 4
  %498 = add nsw i32 %497, 1
  call void @_ZN5blink15DrawingRecorderC2ERNS_15GraphicsContextERKNS_17DisplayItemClientENS_11DisplayItem4TypeERKNS_7IntRectE(%"class.blink::DrawingRecorder"* %496, %"class.blink::GraphicsContext"* dereferenceable(112) %208, %"class.blink::DisplayItemClient"* dereferenceable(16) %490, i32 %498, %"class.blink::IntRect"* nonnull dereferenceable(16) %13) #11
  store i8 1, i8* %475, align 8
  br label %499

499:                                              ; preds = %474, %495
  %500 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %501 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %500, i64 0, i32 4
  %502 = load i16, i16* %501, align 4
  %503 = zext i16 %502 to i32
  %504 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %500, i64 0, i32 0, i32 4, i32 0
  %505 = bitcast %"class.blink::LayoutObject"** %504 to %"class.blink::LayoutText"**
  %506 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %505, align 8
  %507 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %506, i64 0, i32 7
  %508 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %508) #11
  %509 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %509, align 8
  %510 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %500, i64 0, i32 0, i32 7, i32 0
  %511 = load i32, i32* %510, align 4
  %512 = and i32 %511, 1
  %513 = icmp eq i32 %512, 0
  br i1 %513, label %606, label %514

514:                                              ; preds = %499
  %515 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %507, i64 0, i32 0, i32 0
  %516 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %515, align 8
  %517 = icmp eq %"class.WTF::StringImpl"* %516, null
  br i1 %517, label %533, label %518

518:                                              ; preds = %514
  %519 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %516, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %520 = load atomic i32, i32* %519 monotonic, align 4
  %521 = and i32 %520, 2
  %522 = icmp eq i32 %521, 0
  br i1 %522, label %523, label %533

523:                                              ; preds = %518
  %524 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %516, i64 0, i32 0
  %525 = load i32, i32* %524, align 4
  %526 = zext i32 %525 to i33
  %527 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %526, i33 1) #11
  %528 = extractvalue { i33, i1 } %527, 1
  %529 = extractvalue { i33, i1 } %527, 0
  %530 = icmp slt i33 %529, 0
  %531 = or i1 %528, %530
  br i1 %531, label %532, label %536, !prof !2

532:                                              ; preds = %523
  call void @llvm.trap() #11
  unreachable

533:                                              ; preds = %518, %514
  %534 = ptrtoint %"class.WTF::StringImpl"* %516 to i64
  %535 = bitcast %"class.WTF::String"* %22 to i64*
  store i64 %534, i64* %535, align 8
  br label %555

536:                                              ; preds = %523
  %537 = trunc i33 %529 to i32
  store i32 %537, i32* %524, align 4
  %538 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %509, align 8
  %539 = ptrtoint %"class.WTF::StringImpl"* %516 to i64
  %540 = bitcast %"class.WTF::String"* %22 to i64*
  store i64 %539, i64* %540, align 8
  %541 = icmp eq %"class.WTF::StringImpl"* %538, null
  br i1 %541, label %555, label %542

542:                                              ; preds = %536
  %543 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %538, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %544 = load atomic i32, i32* %543 monotonic, align 4
  %545 = and i32 %544, 2
  %546 = icmp eq i32 %545, 0
  %547 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %538, i64 0, i32 0
  %548 = load i32, i32* %547, align 4
  br i1 %546, label %549, label %551

549:                                              ; preds = %542
  %550 = add i32 %548, -1
  store i32 %550, i32* %547, align 4
  br label %551

551:                                              ; preds = %549, %542
  %552 = phi i32 [ %550, %549 ], [ %548, %542 ]
  %553 = icmp eq i32 %552, 0
  br i1 %553, label %554, label %555

554:                                              ; preds = %551
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %538) #11
  br label %555

555:                                              ; preds = %533, %536, %551, %554
  %556 = bitcast %"class.blink::LineLayoutText"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %556) #11
  %557 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %558 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %557, i64 0, i32 0, i32 4, i32 0
  %559 = bitcast %"class.blink::LayoutObject"** %558 to i64*
  %560 = load i64, i64* %559, align 8
  %561 = bitcast %"class.blink::LineLayoutText"* %23 to i64*
  store i64 %560, i64* %561, align 8
  %562 = getelementptr inbounds %"class.blink::LineLayoutText", %"class.blink::LineLayoutText"* %23, i64 0, i32 0
  %563 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %557, i64 0, i32 0, i32 7, i32 0
  %564 = load i32, i32* %563, align 4
  %565 = and i32 %564, 1
  %566 = icmp ne i32 %565, 0
  %567 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem8StyleRefEb(%"class.blink::LineLayoutItem"* nonnull %562, i1 zeroext %566)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %556) #11
  %568 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %569 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %568, i64 0, i32 0, i32 4, i32 0
  %570 = bitcast %"class.blink::LayoutObject"** %569 to %"class.blink::LayoutText"**
  %571 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %570, align 8
  %572 = bitcast %"class.blink::LayoutText"* %571 to i16 (%"class.blink::LayoutText"*)***
  %573 = load i16 (%"class.blink::LayoutText"*)**, i16 (%"class.blink::LayoutText"*)*** %572, align 8
  %574 = getelementptr inbounds i16 (%"class.blink::LayoutText"*)*, i16 (%"class.blink::LayoutText"*)** %573, i64 119
  %575 = load i16 (%"class.blink::LayoutText"*)*, i16 (%"class.blink::LayoutText"*)** %574, align 8
  %576 = call zeroext i16 %575(%"class.blink::LayoutText"* %571) #11
  call void @_ZNK5blink13ComputedStyle18ApplyTextTransformEPN3WTF6StringEDs(%"class.blink::ComputedStyle"* %567, %"class.WTF::String"* nonnull %22, i16 zeroext %576) #11
  %577 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %578 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %577, i64 0, i32 3
  %579 = load i32, i32* %578, align 8
  %580 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %509, align 8
  %581 = icmp eq %"class.WTF::StringImpl"* %580, null
  br i1 %581, label %1786, label %582

582:                                              ; preds = %555
  %583 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %580, i64 0, i32 1
  %584 = load i32, i32* %583, align 4
  %585 = icmp ugt i32 %584, %579
  br i1 %585, label %586, label %1772

586:                                              ; preds = %582
  %587 = sub i32 %584, %579
  %588 = icmp ult i32 %587, %503
  %589 = select i1 %588, i32 %587, i32 %503
  %590 = bitcast %"class.logging::CheckOpResult"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %590) #11
  %591 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %24, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %591, align 8
  %592 = add i32 %579, %589
  %593 = load i32, i32* %583, align 4
  %594 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %594)
  %595 = icmp ugt i32 %592, %593
  br i1 %595, label %597, label %596

596:                                              ; preds = %586
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %594)
  store i8* null, i8** %591, align 8
  br label %632

597:                                              ; preds = %586
  %598 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %592) #11
  %599 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %593) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i8* %598, i8* %599) #11
  %600 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %601 = load i8*, i8** %600, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %594)
  store i8* %601, i8** %591, align 8
  %602 = icmp eq i8* %601, null
  br i1 %602, label %632, label %603

603:                                              ; preds = %597
  %604 = bitcast %"class.logging::CheckError"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %604) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %25, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i32 239, %"class.logging::CheckOpResult"* nonnull %24) #11
  %605 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %25) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %604) #11
  br label %632

606:                                              ; preds = %499
  %607 = bitcast %"class.logging::CheckOpResult"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %607) #11
  %608 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %26, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %608, align 8
  %609 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %500, i64 0, i32 3
  %610 = load i32, i32* %609, align 8
  %611 = add i32 %610, %503
  %612 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %507, i64 0, i32 0, i32 0
  %613 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %612, align 8
  %614 = icmp eq %"class.WTF::StringImpl"* %613, null
  br i1 %614, label %618, label %615

615:                                              ; preds = %606
  %616 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 1
  %617 = load i32, i32* %616, align 4
  br label %618

618:                                              ; preds = %606, %615
  %619 = phi i32 [ %617, %615 ], [ 0, %606 ]
  %620 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %620)
  %621 = icmp ugt i32 %611, %619
  br i1 %621, label %623, label %622

622:                                              ; preds = %618
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %620)
  store i8* null, i8** %608, align 8
  br label %632

623:                                              ; preds = %618
  %624 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %611) #11
  %625 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %619) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.2, i64 0, i64 0), i8* %624, i8* %625) #11
  %626 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %627 = load i8*, i8** %626, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %620)
  store i8* %627, i8** %608, align 8
  %628 = icmp eq i8* %627, null
  br i1 %628, label %632, label %629

629:                                              ; preds = %623
  %630 = bitcast %"class.logging::CheckError"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %630) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %27, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0), i32 242, %"class.logging::CheckOpResult"* nonnull %26) #11
  %631 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %27) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %630) #11
  br label %632

632:                                              ; preds = %629, %623, %622, %603, %597, %596
  %633 = phi i8* [ %590, %596 ], [ %590, %597 ], [ %590, %603 ], [ %607, %622 ], [ %607, %623 ], [ %607, %629 ]
  %634 = phi i32 [ %589, %596 ], [ %589, %597 ], [ %589, %603 ], [ %503, %622 ], [ %503, %623 ], [ %503, %629 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %633) #11
  %635 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %70, align 8
  %636 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %635, i64 0, i32 7, i32 0
  %637 = load i32, i32* %636, align 4
  %638 = and i32 %637, 1
  %639 = icmp eq i32 %638, 0
  %640 = select i1 %639, %"class.WTF::String"* %507, %"class.WTF::String"* %22
  %641 = bitcast %"class.blink::InlineBox"* %635 to %"class.blink::InlineTextBox"*
  %642 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %635, i64 1, i32 1
  %643 = bitcast %"class.blink::InlineBox"** %642 to i32*
  %644 = load i32, i32* %643, align 8
  %645 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %640, i64 0, i32 0, i32 0
  %646 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %645, align 8
  %647 = icmp eq %"class.WTF::StringImpl"* %646, null
  br i1 %647, label %664, label %648

648:                                              ; preds = %632
  %649 = ptrtoint %"class.WTF::StringImpl"* %646 to i64
  %650 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %646, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %651 = load atomic i32, i32* %650 monotonic, align 4
  %652 = and i32 %651, 1
  %653 = icmp eq i32 %652, 0
  %654 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %646, i64 1
  br i1 %653, label %659, label %655

655:                                              ; preds = %648
  %656 = bitcast %"class.WTF::StringImpl"* %654 to i8*
  %657 = zext i32 %644 to i64
  %658 = getelementptr inbounds i8, i8* %656, i64 %657
  br label %666

659:                                              ; preds = %648
  %660 = bitcast %"class.WTF::StringImpl"* %654 to i16*
  %661 = zext i32 %644 to i64
  %662 = getelementptr inbounds i16, i16* %660, i64 %661
  %663 = bitcast i16* %662 to i8*
  br label %666

664:                                              ; preds = %632
  %665 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %666

666:                                              ; preds = %655, %659, %664
  %667 = phi i64 [ %665, %664 ], [ %649, %659 ], [ %649, %655 ]
  %668 = phi i8* [ null, %664 ], [ %663, %659 ], [ %658, %655 ]
  %669 = phi i32 [ 0, %664 ], [ %634, %659 ], [ %634, %655 ]
  %670 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %635, i64 0, i32 4, i32 0
  %671 = bitcast %"class.blink::LayoutObject"** %670 to %"class.blink::LayoutText"**
  %672 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %671, align 8
  %673 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %672, i64 0, i32 7, i32 0, i32 0
  %674 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %673, align 8
  %675 = icmp eq %"class.WTF::StringImpl"* %674, null
  br i1 %675, label %679, label %676

676:                                              ; preds = %666
  %677 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 1
  %678 = load i32, i32* %677, align 4
  br label %679

679:                                              ; preds = %666, %676
  %680 = phi i32 [ %678, %676 ], [ 0, %666 ]
  %681 = sub i32 %680, %644
  %682 = bitcast %"class.WTF::StringBuilder"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %682) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %682, i8 -86, i64 48, i1 false)
  %683 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %28, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %683, align 8
  %684 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %28, i64 0, i32 1
  %685 = bitcast %union.anon.2878* %684 to i8*
  store i8 0, i8* %685, align 8
  %686 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %28, i64 0, i32 2
  store i32 0, i32* %686, align 8
  %687 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %28, i64 0, i32 3
  store i8 1, i8* %687, align 4
  %688 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %28, i64 0, i32 4
  store i8 0, i8* %688, align 1
  %689 = bitcast %"class.blink::TextRun"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %689) #11
  %690 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %29, i64 0, i32 2
  %691 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %29, i64 0, i32 3
  %692 = bitcast %"class.blink::TextRun"* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %692, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %691, align 8
  %693 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %29, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %693, align 4
  %694 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %29, i64 0, i32 5
  store i16 -21846, i16* %694, align 8
  %695 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %29, i64 0, i32 6, i64 0
  store i8 -86, i8* %695, align 2
  %696 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %29, i64 0, i32 6, i64 1
  store i8 -86, i8* %696, align 1
  %697 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %29, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %697, align 4
  %698 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %29, i64 0, i32 7, i32 1
  %699 = bitcast %"class.WTF::StringView"* %30 to i64*
  %700 = bitcast i8* %698 to i64*
  store i64 -6148914691236517206, i64* %700, align 4
  store i64 %667, i64* %699, align 8
  %701 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 1
  store i8* %668, i8** %701, align 8
  %702 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 2
  store i32 %669, i32* %702, align 8
  %703 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 3, i64 0
  %704 = trunc i32 %637 to i16
  %705 = icmp slt i16 %704, 0
  %706 = select i1 %705, %"class.WTF::StringBuilder"* %28, %"class.WTF::StringBuilder"* null
  %707 = bitcast i8* %703 to i32*
  store i32 -1431655766, i32* %707, align 4
  call void @_ZNK5blink13InlineTextBox16ConstructTextRunERKNS_13ComputedStyleEN3WTF10StringViewEiPNS4_13StringBuilderE(%"class.blink::TextRun"* nonnull sret %29, %"class.blink::InlineTextBox"* %641, %"class.blink::ComputedStyle"* dereferenceable(104) %75, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %30, i32 %681, %"class.WTF::StringBuilder"* %706) #11
  %708 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %70, align 8
  %709 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %708, i64 0, i32 7, i32 0
  %710 = load i32, i32* %709, align 4
  %711 = trunc i32 %710 to i16
  %712 = icmp slt i16 %711, 0
  %713 = load i32, i32* %690, align 4
  %714 = select i1 %712, i32 %713, i32 %634
  %715 = getelementptr inbounds %"class.absl::optional.2890", %"class.absl::optional.2890"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %715) #11
  %716 = bitcast %"class.absl::optional.2890"* %31 to i64*
  store i64 -6148914691236517206, i64* %716, align 8
  store i8 0, i8* %715, align 8
  %717 = getelementptr inbounds %"class.absl::optional.2890", %"class.absl::optional.2890"* %31, i64 0, i32 0, i32 0, i32 0, i32 1
  %718 = bitcast %union.anon.2894* %717 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %718, i8 0, i64 48, i1 false) #11
  %719 = and i32 %710, 2048
  %720 = icmp eq i32 %719, 0
  %721 = bitcast %"class.blink::InlineBox"* %708 to %"class.blink::InlineTextBox"*
  br i1 %720, label %722, label %836

722:                                              ; preds = %679
  %723 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %75, i64 0, i32 0, i32 1, i32 0, i32 0
  %724 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %723, align 8
  %725 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %724, i64 0, i32 23
  %726 = bitcast [5 x i8]* %725 to i40*
  %727 = load i40, i40* %726, align 8
  %728 = and i40 %727, 4294967296
  %729 = icmp eq i40 %728, 0
  br i1 %729, label %803, label %730

730:                                              ; preds = %722
  %731 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %708, i64 0, i32 4, i32 0
  %732 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %731, align 8
  %733 = bitcast %"class.blink::LayoutObject"* %732 to i1 (%"class.blink::LayoutObject"*)***
  %734 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %733, align 8
  %735 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %734, i64 81
  %736 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %735, align 8
  %737 = call zeroext i1 %736(%"class.blink::LayoutObject"* %732) #11
  br i1 %737, label %738, label %803

738:                                              ; preds = %730
  %739 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %740 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %739, i64 0, i32 0, i32 4, i32 0
  %741 = bitcast %"class.blink::LayoutObject"** %740 to %"class.blink::LayoutTextCombine"**
  %742 = load %"class.blink::LayoutTextCombine"*, %"class.blink::LayoutTextCombine"** %741, align 8
  %743 = getelementptr inbounds %"class.blink::LayoutTextCombine", %"class.blink::LayoutTextCombine"* %742, i64 0, i32 3
  %744 = load i8, i8* %743, align 8
  %745 = and i8 %744, 1
  %746 = icmp eq i8 %745, 0
  %747 = icmp eq %"class.blink::LayoutTextCombine"* %742, null
  %748 = or i1 %747, %746
  br i1 %748, label %803, label %749

749:                                              ; preds = %738
  %750 = getelementptr inbounds %"class.blink::LayoutTextCombine", %"class.blink::LayoutTextCombine"* %742, i64 0, i32 1
  %751 = load float, float* %750, align 8
  %752 = fmul float %751, 6.400000e+01
  %753 = call float @llvm.ceil.f32(float %752) #11
  %754 = fcmp ult float %753, 0xC1E0000000000000
  %755 = fcmp ugt float %753, 0x41DFFFFFE0000000
  %756 = fcmp ogt float %753, 0xC1E0000000000000
  %757 = select i1 %756, float %753, float 0xC1E0000000000000
  %758 = fptosi float %757 to i32
  %759 = select i1 %754, i32 0, i32 2147483647
  %760 = select i1 %755, i32 %759, i32 %758
  store i32 %760, i32* %270, align 8
  %761 = load float, float* %693, align 4
  %762 = fcmp une float %761, 0.000000e+00
  br i1 %762, label %763, label %836

763:                                              ; preds = %749
  store float 0.000000e+00, float* %693, align 4
  %764 = load i16, i16* %694, align 8
  %765 = and i16 %764, 2
  %766 = icmp eq i16 %765, 0
  br i1 %766, label %836, label %767

767:                                              ; preds = %763
  %768 = and i16 %764, 1
  %769 = icmp eq i16 %768, 0
  %770 = fmul float %761, 5.000000e-01
  %771 = select i1 %769, float %761, float %770
  %772 = fmul float %771, 6.400000e+01
  %773 = call float @llvm.round.f32(float %772) #11
  %774 = fcmp ult float %773, 0xC1E0000000000000
  %775 = fcmp ugt float %773, 0x41DFFFFFE0000000
  %776 = fcmp ogt float %773, 0xC1E0000000000000
  %777 = select i1 %776, float %773, float 0xC1E0000000000000
  %778 = fptosi float %777 to i32
  %779 = select i1 %774, i32 0, i32 2147483647
  %780 = select i1 %775, i32 %779, i32 %778
  %781 = load i32, i32* %210, align 8
  %782 = load i32, i32* %211, align 4
  %783 = icmp slt i32 %780, 0
  %784 = select i1 %783, i32 -2147483648, i32 2147483647
  %785 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %782, i32 %780) #11
  %786 = extractvalue { i32, i1 } %785, 1
  %787 = extractvalue { i32, i1 } %785, 0
  %788 = select i1 %786, i32 %784, i32 %787, !prof !2
  %789 = zext i32 %788 to i64
  %790 = shl nuw i64 %789, 32
  %791 = zext i32 %781 to i64
  %792 = or i64 %790, %791
  store i64 %792, i64* %14, align 8
  %793 = load i32, i32* %268, align 8
  %794 = load i32, i32* %269, align 4
  %795 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %794, i32 %780) #11
  %796 = extractvalue { i32, i1 } %795, 1
  %797 = extractvalue { i32, i1 } %795, 0
  %798 = select i1 %796, i32 %784, i32 %797, !prof !2
  %799 = zext i32 %798 to i64
  %800 = shl nuw i64 %799, 32
  %801 = zext i32 %793 to i64
  %802 = or i64 %800, %801
  store i64 %802, i64* %276, align 8
  br label %836

803:                                              ; preds = %722, %738, %730
  %804 = bitcast %"class.blink::AffineTransform"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %804) #11
  %805 = load i32, i32* %268, align 8, !noalias !7
  %806 = load i32, i32* %269, align 4, !noalias !7
  %807 = load i32, i32* %271, align 4, !noalias !7
  %808 = icmp slt i32 %807, 0
  %809 = select i1 %808, i32 -2147483648, i32 2147483647
  %810 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %806, i32 %807) #11
  %811 = extractvalue { i32, i1 } %810, 1
  %812 = extractvalue { i32, i1 } %810, 0
  %813 = select i1 %811, i32 %809, i32 %812, !prof !2
  %814 = icmp slt i32 %813, 0
  %815 = select i1 %814, i32 -2147483648, i32 2147483647
  %816 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %805, i32 %813) #11
  %817 = extractvalue { i32, i1 } %816, 1
  %818 = extractvalue { i32, i1 } %816, 0
  %819 = select i1 %817, i32 %815, i32 %818, !prof !2
  %820 = sitofp i32 %819 to double
  %821 = fmul double %820, 1.562500e-02
  %822 = icmp sgt i32 %805, -1
  %823 = select i1 %822, i32 -2147483648, i32 2147483647
  %824 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %806, i32 %805) #11
  %825 = extractvalue { i32, i1 } %824, 1
  %826 = extractvalue { i32, i1 } %824, 0
  %827 = select i1 %825, i32 %823, i32 %826, !prof !2
  %828 = sitofp i32 %827 to double
  %829 = fmul double %828, 1.562500e-02
  call void @_ZN5blink15AffineTransformC1Edddddd(%"class.blink::AffineTransform"* nonnull %32, double 0.000000e+00, double 1.000000e+00, double -1.000000e+00, double 0.000000e+00, double %821, double %829) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %718, i8* nonnull align 8 %804, i64 48, i1 false) #11
  store i8 1, i8* %715, align 8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %804) #11
  call void @_ZN5blink15GraphicsContext4SaveEv(%"class.blink::GraphicsContext"* %208) #11
  %830 = load i8, i8* %715, align 8, !range !6
  %831 = icmp eq i8 %830, 0
  br i1 %831, label %832, label %833, !prof !2

832:                                              ; preds = %803
  call void @llvm.trap() #11
  unreachable

833:                                              ; preds = %803
  %834 = getelementptr inbounds %"class.absl::optional.2890", %"class.absl::optional.2890"* %31, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink15GraphicsContext9ConcatCTMERKNS_15AffineTransformE(%"class.blink::GraphicsContext"* %208, %"class.blink::AffineTransform"* dereferenceable(48) %834) #11
  %835 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  br label %836

836:                                              ; preds = %763, %679, %749, %767, %833
  %837 = phi %"class.blink::InlineTextBox"* [ %721, %679 ], [ %835, %833 ], [ %739, %767 ], [ %739, %763 ], [ %739, %749 ]
  %838 = phi i8 [ 0, %679 ], [ 1, %833 ], [ 0, %767 ], [ 0, %763 ], [ 0, %749 ]
  %839 = phi %"class.blink::GraphicsContext"* [ inttoptr (i64 -6148914691236517206 to %"class.blink::GraphicsContext"*), %679 ], [ %208, %833 ], [ inttoptr (i64 -6148914691236517206 to %"class.blink::GraphicsContext"*), %767 ], [ inttoptr (i64 -6148914691236517206 to %"class.blink::GraphicsContext"*), %763 ], [ inttoptr (i64 -6148914691236517206 to %"class.blink::GraphicsContext"*), %749 ]
  %840 = phi %"class.blink::LayoutTextCombine"* [ null, %679 ], [ null, %833 ], [ %742, %767 ], [ %742, %763 ], [ %742, %749 ]
  %841 = bitcast %"struct.blink::TextPaintStyle"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %841) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %841, i8* align 8 bitcast ({ %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", float, i32, %"class.blink::ShadowList"*, { { { { i8, [3 x i8], { { i8, [3 x i8], %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" } } } } } } }* @__const._ZN5blink20InlineTextBoxPainter25PaintTextMarkerForegroundERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_14TextMarkerBaseERKNS_13ComputedStyleERKNS_4FontE.text_style to i8*), i64 64, i1 false)
  %842 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %837, i64 0, i32 0, i32 4, i32 0
  %843 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %842, align 8
  %844 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %843, i64 0, i32 6, i32 0, i32 0
  %845 = load %"class.blink::Node"*, %"class.blink::Node"** %844, align 8
  %846 = icmp eq %"class.blink::Node"* %845, null
  br i1 %846, label %847, label %854

847:                                              ; preds = %836, %847
  %848 = phi %"class.blink::LayoutObject"* [ %850, %847 ], [ %843, %836 ]
  %849 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %848, i64 0, i32 7
  %850 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %849, align 8
  %851 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %850, i64 0, i32 6, i32 0, i32 0
  %852 = load %"class.blink::Node"*, %"class.blink::Node"** %851, align 8
  %853 = icmp eq %"class.blink::Node"* %852, null
  br i1 %853, label %847, label %854

854:                                              ; preds = %847, %836
  %855 = phi %"class.blink::Node"* [ %845, %836 ], [ %852, %847 ]
  %856 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %855, i64 0, i32 3, i32 0, i32 0
  %857 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %856, align 8
  %858 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %857, i64 0, i32 2, i32 0, i32 0
  %859 = load %"class.blink::Document"*, %"class.blink::Document"** %858, align 8
  call void @_ZN5blink15TextPainterBase17TextPaintingStyleERKNS_8DocumentERKNS_13ComputedStyleERKNS_9PaintInfoE(%"struct.blink::TextPaintStyle"* nonnull sret %33, %"class.blink::Document"* dereferenceable(2848) %859, %"class.blink::ComputedStyle"* dereferenceable(104) %75, %"struct.blink::PaintInfo"* dereferenceable(56) %1) #11
  %860 = bitcast %"struct.blink::TextPaintStyle"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %860) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %860, i8* nonnull align 8 %841, i64 32, i1 false) #11
  %861 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %34, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %862 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %34, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %863 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %33, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %861, i8 0, i64 32, i1 false) #11
  %864 = load i8, i8* %863, align 8, !range !6
  %865 = icmp eq i8 %864, 0
  br i1 %865, label %891, label %866

866:                                              ; preds = %854
  %867 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %33, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %868 = bitcast %"class.blink::AppliedTextDecoration"* %867 to <2 x i64>*
  %869 = load <2 x i64>, <2 x i64>* %868, align 4
  %870 = bitcast i8* %862 to <2 x i64>*
  store <2 x i64> %869, <2 x i64>* %870, align 4
  %871 = extractelement <2 x i64> %869, i32 1
  %872 = and i64 %871, 280375465082880
  %873 = icmp eq i64 %872, 8796093022208
  br i1 %873, label %874, label %877

874:                                              ; preds = %866
  %875 = getelementptr inbounds i8, i8* %862, i64 8
  %876 = bitcast i8* %875 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %876) #11
  br label %877

877:                                              ; preds = %874, %866
  %878 = getelementptr inbounds i8, i8* %862, i64 16
  %879 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %33, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %880 = load i8, i8* %879, align 4, !range !6
  store i8 %880, i8* %878, align 4
  %881 = getelementptr inbounds i8, i8* %862, i64 20
  %882 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %33, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %883 = bitcast %"class.blink::Length"* %882 to i64*
  %884 = bitcast i8* %881 to i64*
  %885 = load i64, i64* %883, align 4
  store i64 %885, i64* %884, align 4
  %886 = and i64 %885, 280375465082880
  %887 = icmp eq i64 %886, 8796093022208
  br i1 %887, label %888, label %890

888:                                              ; preds = %877
  %889 = bitcast i8* %881 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %889) #11
  br label %890

890:                                              ; preds = %888, %877
  store i8 1, i8* %861, align 8
  br label %891

891:                                              ; preds = %854, %890
  br i1 %115, label %892, label %937

892:                                              ; preds = %891
  %893 = bitcast %"struct.blink::TextPaintStyle"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %893) #11
  %894 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %895 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %894, i64 0, i32 0, i32 4, i32 0
  %896 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %895, align 8
  %897 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %896, i64 0, i32 6, i32 0, i32 0
  %898 = load %"class.blink::Node"*, %"class.blink::Node"** %897, align 8
  %899 = icmp eq %"class.blink::Node"* %898, null
  br i1 %899, label %900, label %907

900:                                              ; preds = %892, %900
  %901 = phi %"class.blink::LayoutObject"* [ %903, %900 ], [ %896, %892 ]
  %902 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %901, i64 0, i32 7
  %903 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %902, align 8
  %904 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %903, i64 0, i32 6, i32 0, i32 0
  %905 = load %"class.blink::Node"*, %"class.blink::Node"** %904, align 8
  %906 = icmp eq %"class.blink::Node"* %905, null
  br i1 %906, label %900, label %907

907:                                              ; preds = %900, %892
  %908 = phi %"class.blink::Node"* [ %898, %892 ], [ %905, %900 ]
  %909 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %908, i64 0, i32 3, i32 0, i32 0
  %910 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %909, align 8
  %911 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %910, i64 0, i32 2, i32 0, i32 0
  %912 = load %"class.blink::Document"*, %"class.blink::Document"** %911, align 8
  %913 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %896, i64 0, i32 4
  %914 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %913 to i96*
  %915 = load i96, i96* %914, align 4
  %916 = and i96 %915, 16777216
  %917 = icmp eq i96 %916, 0
  %918 = select i1 %917, %"class.blink::Node"* %898, %"class.blink::Node"* null
  call void @_ZN5blink15TextPainterBase22SelectionPaintingStyleERKNS_8DocumentERKNS_13ComputedStyleEPNS_4NodeERKNS_9PaintInfoERKNS_14TextPaintStyleE(%"struct.blink::TextPaintStyle"* nonnull sret %35, %"class.blink::Document"* dereferenceable(2848) %912, %"class.blink::ComputedStyle"* dereferenceable(104) %75, %"class.blink::Node"* %918, %"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::TextPaintStyle"* nonnull dereferenceable(64) %33) #11
  %919 = call dereferenceable(64) %"struct.blink::TextPaintStyle"* @_ZN5blink14TextPaintStyleaSEOS0_(%"struct.blink::TextPaintStyle"* nonnull %34, %"struct.blink::TextPaintStyle"* nonnull dereferenceable(64) %35)
  %920 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %35, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %921 = load i8, i8* %920, align 8, !range !6
  %922 = icmp eq i8 %921, 0
  br i1 %922, label %936, label %923

923:                                              ; preds = %907
  %924 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %35, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 2
  %925 = load i8, i8* %924, align 1
  %926 = icmp eq i8 %925, 8
  br i1 %926, label %927, label %929

927:                                              ; preds = %923
  %928 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %35, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %928) #11
  br label %929

929:                                              ; preds = %927, %923
  %930 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %35, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 2
  %931 = load i8, i8* %930, align 1
  %932 = icmp eq i8 %931, 8
  br i1 %932, label %933, label %935

933:                                              ; preds = %929
  %934 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %35, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %934) #11
  br label %935

935:                                              ; preds = %933, %929
  store i8 0, i8* %920, align 8
  br label %936

936:                                              ; preds = %907, %935
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %893) #11
  br label %937

937:                                              ; preds = %936, %891
  %938 = load i32, i32* %479, align 8
  %939 = icmp eq i32 %938, 10
  br i1 %939, label %1001, label %940

940:                                              ; preds = %937
  %941 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %33, i64 0, i32 0, i32 0
  %942 = load i32, i32* %941, align 8
  %943 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %34, i64 0, i32 0, i32 0
  %944 = load i32, i32* %943, align 8
  %945 = icmp eq i32 %942, %944
  br i1 %945, label %946, label %998

946:                                              ; preds = %940
  %947 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %33, i64 0, i32 1, i32 0
  %948 = load i32, i32* %947, align 4
  %949 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %34, i64 0, i32 1, i32 0
  %950 = load i32, i32* %949, align 4
  %951 = icmp eq i32 %948, %950
  br i1 %951, label %952, label %998

952:                                              ; preds = %946
  %953 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %33, i64 0, i32 2, i32 0
  %954 = load i32, i32* %953, align 8
  %955 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %34, i64 0, i32 2, i32 0
  %956 = load i32, i32* %955, align 8
  %957 = icmp eq i32 %954, %956
  br i1 %957, label %958, label %998

958:                                              ; preds = %952
  %959 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %33, i64 0, i32 3, i32 0
  %960 = load i32, i32* %959, align 4
  %961 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %34, i64 0, i32 3, i32 0
  %962 = load i32, i32* %961, align 4
  %963 = icmp eq i32 %960, %962
  br i1 %963, label %964, label %998

964:                                              ; preds = %958
  %965 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %33, i64 0, i32 4
  %966 = load float, float* %965, align 8
  %967 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %34, i64 0, i32 4
  %968 = load float, float* %967, align 8
  %969 = fcmp oeq float %966, %968
  br i1 %969, label %970, label %998

970:                                              ; preds = %964
  %971 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %33, i64 0, i32 5
  %972 = load i32, i32* %971, align 4
  %973 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %34, i64 0, i32 5
  %974 = load i32, i32* %973, align 4
  %975 = icmp eq i32 %972, %974
  br i1 %975, label %976, label %998

976:                                              ; preds = %970
  %977 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %33, i64 0, i32 6
  %978 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %977, align 8
  %979 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %34, i64 0, i32 6
  %980 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %979, align 8
  %981 = icmp eq %"class.blink::ShadowList"* %978, %980
  br i1 %981, label %982, label %998

982:                                              ; preds = %976
  %983 = load i8, i8* %863, align 8, !range !6
  %984 = icmp ne i8 %983, 0
  %985 = load i8, i8* %861, align 8, !range !6
  %986 = icmp ne i8 %985, 0
  %987 = xor i1 %984, %986
  %988 = xor i1 %984, true
  %989 = or i1 %987, %988
  %990 = xor i1 %987, true
  br i1 %989, label %998, label %991

991:                                              ; preds = %982
  %992 = icmp eq i8 %985, 0
  br i1 %992, label %993, label %994, !prof !2

993:                                              ; preds = %991
  call void @llvm.trap() #11
  unreachable

994:                                              ; preds = %991
  %995 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %33, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %996 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %34, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %997 = call zeroext i1 @_ZNK5blink21AppliedTextDecorationeqERKS0_(%"class.blink::AppliedTextDecoration"* %995, %"class.blink::AppliedTextDecoration"* dereferenceable(28) %996) #11
  br label %998

998:                                              ; preds = %940, %946, %952, %958, %964, %970, %976, %982, %994
  %999 = phi i1 [ false, %976 ], [ false, %970 ], [ false, %964 ], [ false, %958 ], [ false, %952 ], [ false, %946 ], [ false, %940 ], [ %990, %982 ], [ %997, %994 ]
  %1000 = xor i1 %999, true
  br label %1001

1001:                                             ; preds = %998, %937
  %1002 = phi i1 [ false, %937 ], [ %1000, %998 ]
  %1003 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %75, i64 0, i32 0, i32 0, i32 0, i32 0
  %1004 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %1003, align 8
  %1005 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %1004, i64 0, i32 1, i32 0, i32 0
  %1006 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %1005, align 8
  %1007 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %1006, i64 0, i32 1
  %1008 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %1007) #11
  %1009 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %1008, i64 0, i32 2
  %1010 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %1009, align 8
  %1011 = icmp eq %"class.blink::SimpleFontData"* %1010, null
  br i1 %1011, label %1012, label %1016

1012:                                             ; preds = %1001
  %1013 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %1007, i64 0, i32 0
  %1014 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %1008, %"class.blink::FontDescription"* dereferenceable(80) %1013) #11
  store %"class.blink::SimpleFontData"* %1014, %"class.blink::SimpleFontData"** %1009, align 8
  %1015 = icmp eq %"class.blink::SimpleFontData"* %1014, null
  br i1 %1015, label %1020, label %1016

1016:                                             ; preds = %1001, %1012
  %1017 = phi %"class.blink::SimpleFontData"* [ %1014, %1012 ], [ %1010, %1001 ]
  %1018 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %1017, i64 0, i32 1, i32 9
  %1019 = load i32, i32* %1018, align 4
  br label %1020

1020:                                             ; preds = %1012, %1016
  %1021 = phi i32 [ %1019, %1016 ], [ 0, %1012 ]
  %1022 = bitcast %"struct.blink::PhysicalOffset"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1022) #11
  %1023 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %36, i64 0, i32 0, i32 0
  store i32 -1431655766, i32* %1023, align 4
  %1024 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %36, i64 0, i32 1, i32 0
  store i32 -1431655766, i32* %1024, align 4
  %1025 = load i32, i32* %210, align 8
  %1026 = icmp sgt i32 %1021, 33554431
  br i1 %1026, label %1027, label %1029

1027:                                             ; preds = %1020
  %1028 = load i32, i32* %211, align 4
  br label %1040

1029:                                             ; preds = %1020
  %1030 = icmp slt i32 %1021, -33554432
  br i1 %1030, label %1031, label %1033

1031:                                             ; preds = %1029
  %1032 = load i32, i32* %211, align 4
  br label %1037

1033:                                             ; preds = %1029
  %1034 = shl i32 %1021, 6
  %1035 = load i32, i32* %211, align 4
  %1036 = icmp slt i32 %1034, 0
  br i1 %1036, label %1037, label %1040

1037:                                             ; preds = %1033, %1031
  %1038 = phi i32 [ %1032, %1031 ], [ %1035, %1033 ]
  %1039 = phi i32 [ -2147483648, %1031 ], [ %1034, %1033 ]
  br label %1040

1040:                                             ; preds = %1027, %1033, %1037
  %1041 = phi i32 [ %1038, %1037 ], [ %1035, %1033 ], [ %1028, %1027 ]
  %1042 = phi i32 [ %1039, %1037 ], [ %1034, %1033 ], [ 2147483647, %1027 ]
  %1043 = phi i32 [ -2147483648, %1037 ], [ 2147483647, %1033 ], [ 2147483647, %1027 ]
  %1044 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1041, i32 %1042) #11
  %1045 = extractvalue { i32, i1 } %1044, 1
  %1046 = extractvalue { i32, i1 } %1044, 0
  %1047 = select i1 %1045, i32 %1043, i32 %1046, !prof !2
  store i32 %1025, i32* %1023, align 4
  store i32 %1047, i32* %1024, align 4
  %1048 = bitcast %"class.blink::HeapVector.2905"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1048) #11
  %1049 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8, !noalias !10
  %1050 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1049, i64 0, i32 0, i32 4, i32 0
  %1051 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1050, align 8, !noalias !10
  %1052 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1051, i64 0, i32 4
  %1053 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %1052 to i96*
  %1054 = load i96, i96* %1053, align 4, !noalias !10
  %1055 = and i96 %1054, 16777216
  %1056 = icmp eq i96 %1055, 0
  br i1 %1056, label %1057, label %1066

1057:                                             ; preds = %1040
  %1058 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1051, i64 0, i32 6, i32 0, i32 0
  %1059 = load %"class.blink::Node"*, %"class.blink::Node"** %1058, align 8, !noalias !10
  %1060 = icmp eq %"class.blink::Node"* %1059, null
  br i1 %1060, label %1066, label %1061

1061:                                             ; preds = %1057
  %1062 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1059, i64 0, i32 1
  %1063 = load i32, i32* %1062, align 8, !noalias !10
  %1064 = and i32 %1063, 12
  %1065 = icmp eq i32 %1064, 4
  br i1 %1065, label %1067, label %1066

1066:                                             ; preds = %1061, %1057, %1040
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1048, i8 0, i64 16, i1 false) #11, !alias.scope !10
  br label %1075

1067:                                             ; preds = %1061
  %1068 = bitcast %"class.blink::Node"* %1059 to %"class.blink::Text"*
  %1069 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1059, i64 0, i32 3, i32 0, i32 0
  %1070 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1069, align 8, !noalias !10
  %1071 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1070, i64 0, i32 2, i32 0, i32 0
  %1072 = load %"class.blink::Document"*, %"class.blink::Document"** %1071, align 8, !noalias !10
  %1073 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1072, i64 0, i32 81, i32 0, i32 0
  %1074 = load %"class.blink::DocumentMarkerController"*, %"class.blink::DocumentMarkerController"** %1073, align 8, !noalias !10
  call void @_ZNK5blink24DocumentMarkerController21ComputeMarkersToPaintERKNS_4TextE(%"class.blink::HeapVector.2905"* nonnull sret %37, %"class.blink::DocumentMarkerController"* %1074, %"class.blink::Text"* nonnull dereferenceable(88) %1068) #11
  br label %1075

1075:                                             ; preds = %1066, %1067
  %1076 = load i32, i32* %479, align 8
  %1077 = and i32 %1076, -2
  %1078 = icmp eq i32 %1077, 10
  %1079 = or i1 %103, %1078
  br i1 %1079, label %1176, label %1080

1080:                                             ; preds = %1075
  call void @_ZN5blink20InlineTextBoxPainter20PaintDocumentMarkersERKNS_10HeapVectorINS_6MemberINS_14DocumentMarkerEEELj0EEERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_13ComputedStyleERKNS_4FontENS_24DocumentMarkerPaintPhaseE(%"class.blink::InlineTextBoxPainter"* %0, %"class.blink::HeapVector.2905"* nonnull dereferenceable(16) %37, %"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %15, %"class.blink::ComputedStyle"* dereferenceable(104) %75, %"class.blink::Font"* dereferenceable(88) %1007, i32 1)
  br i1 %115, label %1081, label %1176

1081:                                             ; preds = %1080
  %1082 = bitcast %"struct.blink::PhysicalRect"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1082) #11
  %1083 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %38, i64 0, i32 0, i32 0, i32 0
  %1084 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %38, i64 0, i32 0, i32 1, i32 0
  %1085 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %38, i64 0, i32 1, i32 0, i32 0
  %1086 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %38, i64 0, i32 1, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1082, i8 0, i64 16, i1 false) #11
  %1087 = icmp eq %"class.blink::LayoutTextCombine"* %840, null
  %1088 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %34, i64 0, i32 1, i32 0
  %1089 = load i32, i32* %1088, align 4
  br i1 %1087, label %1092, label %1090

1090:                                             ; preds = %1081
  %1091 = call { i64, i64 } @_ZN5blink20InlineTextBoxPainter14PaintSelectionILNS0_12PaintOptionsE1EEENS_12PhysicalRectERNS_15GraphicsContextERKS3_RKNS_13ComputedStyleERKNS_4FontENS_5ColorEPNS_17LayoutTextCombineE(%"class.blink::InlineTextBoxPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %208, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %16, %"class.blink::ComputedStyle"* dereferenceable(104) %75, %"class.blink::Font"* dereferenceable(88) %1007, i32 %1089, %"class.blink::LayoutTextCombine"* nonnull %840)
  br label %1094

1092:                                             ; preds = %1081
  %1093 = call { i64, i64 } @_ZN5blink20InlineTextBoxPainter14PaintSelectionILNS0_12PaintOptionsE0EEENS_12PhysicalRectERNS_15GraphicsContextERKS3_RKNS_13ComputedStyleERKNS_4FontENS_5ColorEPNS_17LayoutTextCombineE(%"class.blink::InlineTextBoxPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %208, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %16, %"class.blink::ComputedStyle"* dereferenceable(104) %75, %"class.blink::Font"* dereferenceable(88) %1007, i32 %1089, %"class.blink::LayoutTextCombine"* null)
  br label %1094

1094:                                             ; preds = %1092, %1090
  %1095 = phi { i64, i64 } [ %1093, %1092 ], [ %1091, %1090 ]
  %1096 = extractvalue { i64, i64 } %1095, 0
  %1097 = extractvalue { i64, i64 } %1095, 1
  %1098 = bitcast %"struct.blink::PhysicalRect"* %38 to i64*
  store i64 %1096, i64* %1098, align 8
  %1099 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %38, i64 0, i32 1
  %1100 = bitcast %"struct.blink::PhysicalSize"* %1099 to i64*
  store i64 %1097, i64* %1100, align 8
  %1101 = load i8, i8* %475, align 8, !range !6
  %1102 = icmp eq i8 %1101, 0
  br i1 %1102, label %1175, label %1103

1103:                                             ; preds = %1094
  %1104 = call zeroext i1 @_ZNK5blink12PhysicalRect8ContainsERKS0_(%"struct.blink::PhysicalRect"* nonnull %16, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %38) #11
  br i1 %1104, label %1175, label %1105

1105:                                             ; preds = %1103
  %1106 = bitcast { i64, i64 }* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1106) #11
  %1107 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %39, i64 0, i32 1
  %1108 = bitcast { i64, i64 }* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1108, i8 -86, i64 16, i1 false)
  %1109 = load i32, i32* %1083, align 8
  %1110 = icmp slt i32 %1109, -2147483584
  %1111 = ashr i32 %1109, 6
  %1112 = select i1 %1110, i32 -33554432, i32 %1111, !prof !2
  %1113 = load i32, i32* %1084, align 4
  %1114 = icmp slt i32 %1113, -2147483584
  %1115 = ashr i32 %1113, 6
  %1116 = select i1 %1114, i32 -33554432, i32 %1115, !prof !2
  %1117 = zext i32 %1116 to i64
  %1118 = shl nuw i64 %1117, 32
  %1119 = load i32, i32* %1085, align 8
  %1120 = icmp slt i32 %1119, 0
  %1121 = select i1 %1120, i32 -2147483648, i32 2147483647
  %1122 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1109, i32 %1119) #11
  %1123 = extractvalue { i32, i1 } %1122, 1
  %1124 = extractvalue { i32, i1 } %1122, 0
  %1125 = select i1 %1123, i32 %1121, i32 %1124, !prof !2
  %1126 = load i32, i32* %1086, align 4
  %1127 = icmp slt i32 %1126, 0
  %1128 = select i1 %1127, i32 -2147483648, i32 2147483647
  %1129 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1113, i32 %1126) #11
  %1130 = extractvalue { i32, i1 } %1129, 1
  %1131 = extractvalue { i32, i1 } %1129, 0
  %1132 = select i1 %1130, i32 %1128, i32 %1131, !prof !2
  %1133 = icmp sgt i32 %1125, 2147483583
  br i1 %1133, label %1141, label %1134, !prof !2

1134:                                             ; preds = %1105
  %1135 = icmp sgt i32 %1125, -1
  br i1 %1135, label %1136, label %1139

1136:                                             ; preds = %1134
  %1137 = add nuw nsw i32 %1125, 63
  %1138 = sdiv i32 %1137, 64
  br label %1141

1139:                                             ; preds = %1134
  %1140 = sdiv i32 %1125, 64
  br label %1141

1141:                                             ; preds = %1139, %1136, %1105
  %1142 = phi i32 [ %1138, %1136 ], [ %1140, %1139 ], [ 33554431, %1105 ]
  %1143 = icmp sgt i32 %1132, 2147483583
  br i1 %1143, label %1151, label %1144, !prof !2

1144:                                             ; preds = %1141
  %1145 = icmp sgt i32 %1132, -1
  br i1 %1145, label %1146, label %1149

1146:                                             ; preds = %1144
  %1147 = add nuw nsw i32 %1132, 63
  %1148 = sdiv i32 %1147, 64
  br label %1151

1149:                                             ; preds = %1144
  %1150 = sdiv i32 %1132, 64
  br label %1151

1151:                                             ; preds = %1141, %1146, %1149
  %1152 = phi i32 [ %1148, %1146 ], [ %1150, %1149 ], [ 33554431, %1141 ]
  %1153 = sub nsw i32 %1142, %1112
  %1154 = sub nsw i32 %1152, %1116
  %1155 = zext i32 %1154 to i64
  %1156 = shl nuw i64 %1155, 32
  %1157 = zext i32 %1153 to i64
  %1158 = or i64 %1156, %1157
  %1159 = zext i32 %1112 to i64
  %1160 = or i64 %1118, %1159
  %1161 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %39, i64 0, i32 0
  store i64 %1160, i64* %1161, align 8
  store i64 %1158, i64* %1107, align 8
  %1162 = load i8, i8* %715, align 8, !range !6
  %1163 = icmp eq i8 %1162, 0
  br i1 %1163, label %1169, label %1164

1164:                                             ; preds = %1151
  %1165 = getelementptr inbounds %"class.absl::optional.2890", %"class.absl::optional.2890"* %31, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1166 = call { i64, i64 } @_ZNK5blink15AffineTransform7MapRectERKNS_7IntRectE(%"class.blink::AffineTransform"* %1165, %"class.blink::IntRect"* nonnull dereferenceable(16) %40) #11
  %1167 = extractvalue { i64, i64 } %1166, 0
  %1168 = extractvalue { i64, i64 } %1166, 1
  store i64 %1167, i64* %1161, align 8
  store i64 %1168, i64* %1107, align 8
  br label %1169

1169:                                             ; preds = %1151, %1164
  %1170 = load i8, i8* %475, align 8, !range !6
  %1171 = icmp eq i8 %1170, 0
  br i1 %1171, label %1172, label %1173, !prof !2

1172:                                             ; preds = %1169
  call void @llvm.trap() #11
  unreachable

1173:                                             ; preds = %1169
  %1174 = getelementptr inbounds %"class.absl::optional.2868", %"class.absl::optional.2868"* %21, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 3
  call void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"* %1174, %"class.blink::IntRect"* nonnull dereferenceable(16) %40) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1106) #11
  br label %1175

1175:                                             ; preds = %1094, %1173, %1103
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1082) #11
  br label %1176

1176:                                             ; preds = %1075, %1080, %1175
  %1177 = bitcast i32* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1177) #11
  store i32 0, i32* %41, align 4
  %1178 = bitcast i32* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1178) #11
  store i32 0, i32* %42, align 4
  %1179 = or i1 %939, %1002
  br i1 %1179, label %1180, label %1183

1180:                                             ; preds = %1176
  %1181 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  call void @_ZNK5blink13InlineTextBox17SelectionStartEndERiS1_(%"class.blink::InlineTextBox"* %1181, i32* nonnull dereferenceable(4) %41, i32* nonnull dereferenceable(4) %42) #11
  %1182 = load i32, i32* %42, align 4
  br label %1183

1183:                                             ; preds = %1176, %1180
  %1184 = phi i32 [ 0, %1176 ], [ %1182, %1180 ]
  %1185 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %1186 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1185, i64 0, i32 4
  %1187 = load i16, i16* %1186, align 4
  %1188 = zext i16 %1187 to i32
  %1189 = icmp eq i32 %1184, %1188
  %1190 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1185, i64 0, i32 0, i32 7, i32 0
  %1191 = load i32, i32* %1190, align 4
  %1192 = trunc i32 %1191 to i16
  %1193 = icmp slt i16 %1192, 0
  %1194 = and i1 %1189, %1193
  br i1 %1194, label %1195, label %1197

1195:                                             ; preds = %1183
  %1196 = load i32, i32* %690, align 4
  store i32 %1196, i32* %42, align 4
  br label %1197

1197:                                             ; preds = %1183, %1195
  %1198 = and i32 %1191, 4
  %1199 = icmp eq i32 %1198, 0
  %1200 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1185, i64 0, i32 0, i32 4, i32 0
  %1201 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1200, align 8
  %1202 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %1201, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #11
  %1203 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1202, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %1204 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1203, align 8
  %1205 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1204, i64 0, i32 0, i32 9
  %1206 = bitcast [20 x i8]* %1205 to i160*
  %1207 = load i160, i160* %1206, align 8
  %1208 = and i160 %1207, 41538374868278621028243970633760768
  %1209 = icmp eq i160 %1208, 0
  %1210 = load i32, i32* %41, align 4
  %1211 = load i32, i32* %42, align 4
  %1212 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %1213 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1212, i64 0, i32 5
  %1214 = load i16, i16* %1213, align 2
  %1215 = zext i16 %1214 to i32
  %1216 = icmp eq i16 %1214, -1
  br i1 %1216, label %1243, label %1217

1217:                                             ; preds = %1197
  %1218 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1212, i64 0, i32 0, i32 7, i32 0
  %1219 = load i32, i32* %1218, align 4
  %1220 = and i32 %1219, 4
  %1221 = icmp eq i32 %1220, 0
  %1222 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1212, i64 0, i32 0, i32 4, i32 0
  %1223 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1222, align 8
  %1224 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %1223, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #11
  %1225 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1224, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %1226 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1225, align 8
  %1227 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1226, i64 0, i32 0, i32 9
  %1228 = bitcast [20 x i8]* %1227 to i160*
  %1229 = load i160, i160* %1228, align 8
  %1230 = and i160 %1229, 41538374868278621028243970633760768
  %1231 = icmp eq i160 %1230, 0
  %1232 = xor i1 %1221, %1231
  br i1 %1232, label %1238, label %1233

1233:                                             ; preds = %1217
  %1234 = icmp ugt i32 %1210, %1215
  %1235 = select i1 %1234, i32 %1215, i32 %1210
  %1236 = icmp ugt i32 %1211, %1215
  %1237 = select i1 %1236, i32 %1215, i32 %1211
  br label %1243

1238:                                             ; preds = %1217
  %1239 = icmp ult i32 %1210, %1215
  %1240 = select i1 %1239, i32 %1215, i32 %1210
  %1241 = icmp ult i32 %1211, %1215
  %1242 = select i1 %1241, i32 %1215, i32 %1211
  br label %1243

1243:                                             ; preds = %1197, %1233, %1238
  %1244 = phi i32 [ %1235, %1233 ], [ %1240, %1238 ], [ %1210, %1197 ]
  %1245 = phi i32 [ %1237, %1233 ], [ %1242, %1238 ], [ %1211, %1197 ]
  store i32 %1244, i32* %41, align 4
  store i32 %1245, i32* %42, align 4
  br i1 %115, label %1246, label %1247

1246:                                             ; preds = %1243
  call void @_ZNK5blink4Font33ExpandRangeToIncludePartialGlyphsERKNS_7TextRunEPiS4_(%"class.blink::Font"* %1007, %"class.blink::TextRun"* nonnull dereferenceable(40) %29, i32* nonnull %41, i32* nonnull %42) #11
  br label %1247

1247:                                             ; preds = %1246, %1243
  %1248 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %1249 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1248, i64 0, i32 5
  %1250 = load i16, i16* %1249, align 2
  %1251 = icmp eq i16 %1250, -1
  br i1 %1251, label %1258, label %1252

1252:                                             ; preds = %1247
  %1253 = xor i1 %1199, %1209
  br i1 %1253, label %1256, label %1254

1254:                                             ; preds = %1252
  %1255 = zext i16 %1250 to i32
  br label %1258

1256:                                             ; preds = %1252
  %1257 = load i32, i32* %690, align 4
  br label %1258

1258:                                             ; preds = %1254, %1256, %1247
  %1259 = phi i32 [ %714, %1247 ], [ %1255, %1254 ], [ %1257, %1256 ]
  %1260 = bitcast %"class.blink::TextPainter"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %1260) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1260, i8 -86, i64 88, i1 false)
  %1261 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1248, i64 0, i32 0, i32 7, i32 0
  %1262 = load i32, i32* %1261, align 4
  %1263 = and i32 %1262, 2048
  %1264 = icmp ne i32 %1263, 0
  %1265 = getelementptr inbounds %"class.blink::TextPainter", %"class.blink::TextPainter"* %43, i64 0, i32 0
  call void @_ZN5blink15TextPainterBaseC2ERNS_15GraphicsContextERKNS_4FontERKNS_14PhysicalOffsetERKNS_12PhysicalRectEb(%"class.blink::TextPainterBase"* nonnull %1265, %"class.blink::GraphicsContext"* dereferenceable(112) %208, %"class.blink::Font"* dereferenceable(88) %1007, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %36, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %16, i1 zeroext %1264) #11
  %1266 = getelementptr inbounds %"class.blink::TextPainter", %"class.blink::TextPainter"* %43, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink11TextPainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1266, align 8
  %1267 = getelementptr inbounds %"class.blink::TextPainter", %"class.blink::TextPainter"* %43, i64 0, i32 1
  store %"class.blink::TextRun"* %29, %"class.blink::TextRun"** %1267, align 8
  %1268 = getelementptr inbounds %"class.blink::TextPainter", %"class.blink::TextPainter"* %43, i64 0, i32 2
  store %"class.blink::LayoutTextCombine"* null, %"class.blink::LayoutTextCombine"** %1268, align 8
  %1269 = bitcast i32* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1269) #11
  store i32 -1431655766, i32* %44, align 4
  %1270 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %1271 = call zeroext i1 @_ZNK5blink13InlineTextBox23GetEmphasisMarkPositionERKNS_13ComputedStyleERNS_20TextEmphasisPositionE(%"class.blink::InlineTextBox"* %1270, %"class.blink::ComputedStyle"* dereferenceable(104) %75, i32* nonnull dereferenceable(4) %44) #11
  br i1 %1271, label %1272, label %1275

1272:                                             ; preds = %1258
  %1273 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ComputedStyle22TextEmphasisMarkStringEv(%"class.blink::ComputedStyle"* %75) #11
  %1274 = load i32, i32* %44, align 4
  call void @_ZN5blink15TextPainterBase15SetEmphasisMarkERKN3WTF12AtomicStringENS_20TextEmphasisPositionE(%"class.blink::TextPainterBase"* nonnull %1265, %"class.WTF::AtomicString"* dereferenceable(8) %1273, i32 %1274) #11
  br label %1275

1275:                                             ; preds = %1272, %1258
  %1276 = icmp eq %"class.blink::LayoutTextCombine"* %840, null
  br i1 %1276, label %1279, label %1277

1277:                                             ; preds = %1275
  store %"class.blink::LayoutTextCombine"* %840, %"class.blink::LayoutTextCombine"** %1268, align 8
  %1278 = getelementptr inbounds %"class.blink::TextPainter", %"class.blink::TextPainter"* %43, i64 0, i32 0, i32 6
  store i8 1, i8* %1278, align 1
  br label %1279

1279:                                             ; preds = %1275, %1277
  %1280 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %1281 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1280, i64 0, i32 5
  %1282 = load i16, i16* %1281, align 2
  %1283 = icmp ne i16 %1282, -1
  %1284 = xor i1 %1199, %1209
  %1285 = and i1 %1284, %1283
  br i1 %1285, label %1286, label %1289

1286:                                             ; preds = %1279
  %1287 = zext i16 %1282 to i32
  %1288 = getelementptr inbounds %"class.blink::TextPainter", %"class.blink::TextPainter"* %43, i64 0, i32 0, i32 9
  store i32 %1287, i32* %1288, align 4
  br label %1289

1289:                                             ; preds = %1279, %1286
  %1290 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1280, i64 0, i32 0, i32 4, i32 0
  %1291 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1290, align 8
  %1292 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1291, i64 0, i32 4
  %1293 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %1292 to i96*
  %1294 = load i96, i96* %1293, align 4
  %1295 = and i96 %1294, 16777216
  %1296 = icmp eq i96 %1295, 0
  br i1 %1296, label %1297, label %1333

1297:                                             ; preds = %1289
  %1298 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1291, i64 0, i32 6, i32 0, i32 0
  %1299 = load %"class.blink::Node"*, %"class.blink::Node"** %1298, align 8
  %1300 = icmp eq %"class.blink::Node"* %1299, null
  br i1 %1300, label %1333, label %1301

1301:                                             ; preds = %1297
  %1302 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1299, i64 0, i32 1
  %1303 = load i32, i32* %1302, align 8
  %1304 = and i32 %1303, 1
  %1305 = icmp eq i32 %1304, 0
  %1306 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1299, i64 0, i32 6, i32 0, i32 0
  br i1 %1305, label %1311, label %1307

1307:                                             ; preds = %1301
  %1308 = bitcast %"class.blink::NodeData"** %1306 to %"class.blink::NodeRareData"**
  %1309 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %1308, align 8
  %1310 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %1309, i64 0, i32 1, i32 0, i32 0
  br label %1313

1311:                                             ; preds = %1301
  %1312 = bitcast %"class.blink::NodeData"** %1306 to %"class.blink::NodeRenderingData"**
  br label %1313

1313:                                             ; preds = %1311, %1307
  %1314 = phi %"class.blink::NodeRenderingData"** [ %1310, %1307 ], [ %1312, %1311 ]
  %1315 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %1314, align 8
  %1316 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %1315, i64 0, i32 1
  %1317 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1316, align 8
  %1318 = icmp eq %"class.blink::LayoutObject"* %1317, null
  br i1 %1318, label %1333, label %1319

1319:                                             ; preds = %1313
  br i1 %1305, label %1324, label %1320

1320:                                             ; preds = %1319
  %1321 = bitcast %"class.blink::NodeData"** %1306 to %"class.blink::NodeRareData"**
  %1322 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %1321, align 8
  %1323 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %1322, i64 0, i32 1, i32 0, i32 0
  br label %1326

1324:                                             ; preds = %1319
  %1325 = bitcast %"class.blink::NodeData"** %1306 to %"class.blink::NodeRenderingData"**
  br label %1326

1326:                                             ; preds = %1324, %1320
  %1327 = phi %"class.blink::NodeRenderingData"** [ %1323, %1320 ], [ %1325, %1324 ]
  %1328 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %1327, align 8
  %1329 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %1328, i64 0, i32 1
  %1330 = bitcast %"class.blink::LayoutObject"** %1329 to %"class.blink::LayoutText"**
  %1331 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %1330, align 8
  %1332 = call i32 @_ZN5blink10LayoutText12EnsureNodeIdEv(%"class.blink::LayoutText"* %1331) #11
  br label %1333

1333:                                             ; preds = %1289, %1297, %1313, %1326
  %1334 = phi i32 [ %1332, %1326 ], [ 0, %1313 ], [ 0, %1297 ], [ 0, %1289 ]
  br i1 %939, label %1650, label %1335

1335:                                             ; preds = %1333
  %1336 = getelementptr inbounds %"class.absl::optional.2916", %"class.absl::optional.2916"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %1336) #11
  %1337 = bitcast %"class.absl::optional.2916"* %45 to i64*
  store i64 -6148914691236517206, i64* %1337, align 8
  store i8 0, i8* %1336, align 8
  %1338 = getelementptr inbounds %"class.absl::optional.2916", %"class.absl::optional.2916"* %45, i64 0, i32 0, i32 0, i32 0, i32 1
  %1339 = bitcast %union.anon.2920* %1338 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1339, i8 0, i64 224, i1 false) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %46) #11
  store i8 0, i8* %46, align 1
  %1340 = call i32 @_ZNK5blink13ComputedStyle23TextDecorationsInEffectEv(%"class.blink::ComputedStyle"* %75) #11
  %1341 = icmp eq i32 %1340, 0
  br i1 %1341, label %1616, label %1342

1342:                                             ; preds = %1335
  %1343 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %1344 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1343, i64 0, i32 5
  %1345 = load i16, i16* %1344, align 2
  %1346 = icmp eq i16 %1345, -2
  br i1 %1346, label %1616, label %1347

1347:                                             ; preds = %1342
  %1348 = bitcast i64* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1348) #11
  %1349 = bitcast i64* %47 to i32*
  %1350 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %48, i64 0, i32 1, i32 0
  %1351 = load i64, i64* %14, align 8
  store i64 %1351, i64* %47, align 8
  %1352 = bitcast %"class.blink::LayoutUnit"* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1352) #11
  %1353 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %49, i64 0, i32 0
  %1354 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1343, i64 0, i32 0, i32 6, i32 0
  %1355 = load i32, i32* %1354, align 8
  store i32 %1355, i32* %1353, align 4
  %1356 = icmp eq i16 %1345, -1
  br i1 %1356, label %1425, label %1357

1357:                                             ; preds = %1347
  %1358 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1343, i64 0, i32 0, i32 7, i32 0
  %1359 = load i32, i32* %1358, align 4
  %1360 = and i32 %1359, 4
  %1361 = icmp eq i32 %1360, 0
  %1362 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1343, i64 0, i32 0, i32 4, i32 0
  %1363 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1362, align 8
  %1364 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1363, i64 0, i32 5, i32 0
  %1365 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1364, align 8
  %1366 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1365, i64 0, i32 0, i32 9
  %1367 = bitcast [20 x i8]* %1366 to i160*
  %1368 = load i160, i160* %1367, align 8
  %1369 = and i160 %1368, 41538374868278621028243970633760768
  %1370 = icmp eq i160 %1369, 0
  %1371 = xor i1 %1361, %1370
  %1372 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1343, i64 0, i32 3
  %1373 = load i32, i32* %1372, align 8
  %1374 = zext i16 %1345 to i32
  br i1 %1371, label %1375, label %1381

1375:                                             ; preds = %1357
  %1376 = add i32 %1373, %1374
  %1377 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1343, i64 0, i32 4
  %1378 = load i16, i16* %1377, align 4
  %1379 = zext i16 %1378 to i32
  %1380 = sub nsw i32 %1379, %1374
  br label %1381

1381:                                             ; preds = %1375, %1357
  %1382 = phi i32 [ %1376, %1375 ], [ %1373, %1357 ]
  %1383 = phi i32 [ %1380, %1375 ], [ %1374, %1357 ]
  %1384 = call i32 @_ZNK5blink13InlineTextBox7TextPosEv(%"class.blink::InlineTextBox"* %1343) #11
  %1385 = xor i1 %1370, true
  %1386 = zext i1 %1385 to i8
  %1387 = load i32, i32* %1358, align 4
  %1388 = and i32 %1387, 1
  %1389 = icmp ne i32 %1388, 0
  %1390 = bitcast %"class.blink::LayoutObject"* %1363 to %"class.blink::LayoutText"*
  %1391 = bitcast %"class.blink::LayoutObject"* %1363 to float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.3150"*, %"class.blink::FloatRect"*, float)***
  %1392 = load float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.3150"*, %"class.blink::FloatRect"*, float)**, float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.3150"*, %"class.blink::FloatRect"*, float)*** %1391, align 8
  %1393 = getelementptr inbounds float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.3150"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.3150"*, %"class.blink::FloatRect"*, float)** %1392, i64 112
  %1394 = load float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.3150"*, %"class.blink::FloatRect"*, float)*, float (%"class.blink::LayoutText"*, i32, i32, i32, i8, i1, %"class.WTF::HashSet.3150"*, %"class.blink::FloatRect"*, float)** %1393, align 8
  %1395 = call float %1394(%"class.blink::LayoutText"* %1390, i32 %1382, i32 %1383, i32 %1384, i8 zeroext %1386, i1 zeroext %1389, %"class.WTF::HashSet.3150"* null, %"class.blink::FloatRect"* null, float 0.000000e+00) #11
  %1396 = fmul float %1395, 6.400000e+01
  %1397 = fcmp ult float %1396, 0xC1E0000000000000
  %1398 = fcmp ugt float %1396, 0x41DFFFFFE0000000
  %1399 = fcmp ogt float %1396, 0xC1E0000000000000
  %1400 = select i1 %1399, float %1396, float 0xC1E0000000000000
  %1401 = fptosi float %1400 to i32
  %1402 = select i1 %1397, i32 0, i32 2147483647
  %1403 = select i1 %1398, i32 %1402, i32 %1401
  store i32 %1403, i32* %1353, align 4
  br i1 %1370, label %1425, label %1404

1404:                                             ; preds = %1381
  %1405 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1343, i64 0, i32 0, i32 6, i32 0
  %1406 = load i32, i32* %1405, align 8
  %1407 = icmp sgt i32 %1403, -1
  %1408 = select i1 %1407, i32 -2147483648, i32 2147483647
  %1409 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1406, i32 %1403) #11
  %1410 = extractvalue { i32, i1 } %1409, 1
  %1411 = extractvalue { i32, i1 } %1409, 0
  %1412 = select i1 %1410, i32 %1408, i32 %1411, !prof !2
  %1413 = load i32, i32* %1349, align 8
  %1414 = icmp slt i32 %1412, 0
  %1415 = select i1 %1414, i32 -2147483648, i32 2147483647
  %1416 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1413, i32 %1412) #11
  %1417 = extractvalue { i32, i1 } %1416, 1
  %1418 = extractvalue { i32, i1 } %1416, 0
  %1419 = select i1 %1417, i32 %1415, i32 %1418, !prof !2
  %1420 = load i32, i32* %1350, align 4
  %1421 = zext i32 %1420 to i64
  %1422 = shl nuw i64 %1421, 32
  %1423 = zext i32 %1419 to i64
  %1424 = or i64 %1422, %1423
  store i64 %1424, i64* %47, align 8
  br label %1425

1425:                                             ; preds = %1347, %1381, %1404
  %1426 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %1427 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1426, i64 0, i32 0, i32 7, i32 0
  %1428 = load i32, i32* %1427, align 4
  %1429 = and i32 %1428, 1
  %1430 = icmp ne i32 %1429, 0
  %1431 = bitcast %"class.blink::LineLayoutItem"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1431) #11
  %1432 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %6, i64 0, i32 0
  %1433 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1426, i64 0, i32 0, i32 3
  %1434 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %1433, align 8
  %1435 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %1434, i64 0, i32 0, i32 4, i32 0
  %1436 = bitcast %"class.blink::LayoutObject"** %1435 to i64*
  %1437 = load i64, i64* %1436, align 8
  %1438 = bitcast %"class.blink::LineLayoutItem"* %6 to i64*
  store i64 %1437, i64* %1438, align 8
  %1439 = inttoptr i64 %1437 to %"class.blink::LayoutObject"*
  %1440 = inttoptr i64 %1437 to i1 (%"class.blink::LayoutObject"*)***
  %1441 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %1440, align 8
  %1442 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %1441, i64 23
  %1443 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %1442, align 8
  %1444 = call zeroext i1 %1443(%"class.blink::LayoutObject"* %1439) #11
  br i1 %1444, label %1525, label %1445

1445:                                             ; preds = %1425
  %1446 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE, align 8
  %1447 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1446, i64 0, i32 0, i32 0, i32 0
  %1448 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFontTagE, align 8
  %1449 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %1448, i64 0, i32 0, i32 0, i32 0
  %1450 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %1440, align 8
  %1451 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %1450, i64 26
  %1452 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %1451, align 8
  %1453 = call zeroext i1 %1452(%"class.blink::LayoutObject"* %1439) #11
  br i1 %1453, label %1456, label %1525

1454:                                             ; preds = %1508
  %1455 = load i64, i64* %1438, align 8
  br label %1525

1456:                                             ; preds = %1445, %1514
  %1457 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1432, align 8
  %1458 = bitcast %"class.blink::LayoutObject"* %1457 to i1 (%"class.blink::LayoutObject"*, i32)***
  %1459 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %1458, align 8
  %1460 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %1459, i64 92
  %1461 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %1460, align 8
  %1462 = call zeroext i1 %1461(%"class.blink::LayoutObject"* %1457, i32 43) #11
  br i1 %1462, label %1525, label %1463

1463:                                             ; preds = %1456
  %1464 = call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem8StyleRefEb(%"class.blink::LineLayoutItem"* nonnull %6, i1 zeroext %1430) #11
  %1465 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1464, i64 0, i32 0, i32 2, i32 0, i32 0
  %1466 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %1465, align 8
  %1467 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %1466, i64 0, i32 3
  %1468 = load i8, i8* %1467, align 4
  %1469 = and i8 %1468, 1
  %1470 = icmp eq i8 %1469, 0
  br i1 %1470, label %1473, label %1471

1471:                                             ; preds = %1463
  %1472 = load i64, i64* %1438, align 8
  br label %1525

1473:                                             ; preds = %1463
  %1474 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1432, align 8
  %1475 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1474, i64 0, i32 7
  %1476 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1475, align 8
  store %"class.blink::LayoutObject"* %1476, %"class.blink::LayoutObject"** %1432, align 8
  %1477 = icmp eq %"class.blink::LayoutObject"* %1476, null
  br i1 %1477, label %1525, label %1478

1478:                                             ; preds = %1473
  %1479 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1476, i64 0, i32 4
  %1480 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %1479 to i96*
  %1481 = load i96, i96* %1480, align 4
  %1482 = and i96 %1481, 16777216
  %1483 = icmp eq i96 %1482, 0
  br i1 %1483, label %1484, label %1508

1484:                                             ; preds = %1478
  %1485 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1476, i64 0, i32 6, i32 0, i32 0
  %1486 = load %"class.blink::Node"*, %"class.blink::Node"** %1485, align 8
  %1487 = icmp eq %"class.blink::Node"* %1486, null
  br i1 %1487, label %1508, label %1488

1488:                                             ; preds = %1484
  %1489 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1486, i64 0, i32 1
  %1490 = load i32, i32* %1489, align 8
  %1491 = and i32 %1490, 48
  %1492 = icmp eq i32 %1491, 0
  br i1 %1492, label %1493, label %1508

1493:                                             ; preds = %1488
  %1494 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1447, align 8
  %1495 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1486, i64 1, i32 2
  %1496 = bitcast %"class.blink::Member.318"* %1495 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %1497 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1496, align 8
  %1498 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1497, i64 0, i32 3, i32 0, i32 0, i32 0
  %1499 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1498, align 8
  %1500 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1494, i64 0, i32 3, i32 0, i32 0, i32 0
  %1501 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1500, align 8
  %1502 = icmp eq %"class.WTF::StringImpl"* %1499, %1501
  br i1 %1502, label %1521, label %1503

1503:                                             ; preds = %1493
  %1504 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1449, align 8
  %1505 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1504, i64 0, i32 3, i32 0, i32 0, i32 0
  %1506 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1505, align 8
  %1507 = icmp eq %"class.WTF::StringImpl"* %1499, %1506
  br i1 %1507, label %1523, label %1508

1508:                                             ; preds = %1503, %1488, %1484, %1478
  %1509 = bitcast %"class.blink::LayoutObject"* %1476 to i1 (%"class.blink::LayoutObject"*)***
  %1510 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %1509, align 8
  %1511 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %1510, i64 23
  %1512 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %1511, align 8
  %1513 = call zeroext i1 %1512(%"class.blink::LayoutObject"* nonnull %1476) #11
  br i1 %1513, label %1454, label %1514

1514:                                             ; preds = %1508
  %1515 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %1432, align 8
  %1516 = bitcast %"class.blink::LayoutObject"* %1515 to i1 (%"class.blink::LayoutObject"*)***
  %1517 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %1516, align 8
  %1518 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %1517, i64 26
  %1519 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %1518, align 8
  %1520 = call zeroext i1 %1519(%"class.blink::LayoutObject"* %1515) #11
  br i1 %1520, label %1456, label %1525

1521:                                             ; preds = %1493
  %1522 = ptrtoint %"class.blink::LayoutObject"* %1476 to i64
  br label %1525

1523:                                             ; preds = %1503
  %1524 = ptrtoint %"class.blink::LayoutObject"* %1476 to i64
  br label %1525

1525:                                             ; preds = %1456, %1514, %1473, %1445, %1425, %1454, %1471, %1521, %1523
  %1526 = phi i64 [ %1472, %1471 ], [ %1455, %1454 ], [ %1437, %1425 ], [ %1522, %1521 ], [ %1524, %1523 ], [ 0, %1445 ], [ 0, %1473 ], [ 0, %1514 ], [ 0, %1456 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1431) #11
  %1527 = inttoptr i64 %1526 to %"class.blink::LayoutObject"*
  %1528 = bitcast %"class.blink::ComputedStyle"** %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1528) #11
  store %"class.blink::ComputedStyle"* inttoptr (i64 -6148914691236517206 to %"class.blink::ComputedStyle"*), %"class.blink::ComputedStyle"** %50, align 8
  %1529 = icmp eq i64 %1526, 0
  br i1 %1529, label %1533, label %1530

1530:                                             ; preds = %1525
  %1531 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1527, i64 0, i32 5, i32 0
  %1532 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1531, align 8
  br label %1533

1533:                                             ; preds = %1525, %1530
  %1534 = phi %"class.blink::ComputedStyle"* [ %1532, %1530 ], [ null, %1525 ]
  store %"class.blink::ComputedStyle"* %1534, %"class.blink::ComputedStyle"** %50, align 8
  %1535 = getelementptr inbounds %"class.absl::optional.2900", %"class.absl::optional.2900"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1535) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1535, i8 -86, i64 32, i1 false)
  br i1 %115, label %1536, label %1565, !prof !2

1536:                                             ; preds = %1533
  %1537 = getelementptr inbounds %"class.absl::optional.2900", %"class.absl::optional.2900"* %51, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1535, i8 0, i64 32, i1 false) #11
  %1538 = load i8, i8* %861, align 8, !range !6
  %1539 = icmp eq i8 %1538, 0
  br i1 %1539, label %1567, label %1540

1540:                                             ; preds = %1536
  %1541 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %34, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %1542 = bitcast %"class.blink::AppliedTextDecoration"* %1541 to <2 x i64>*
  %1543 = load <2 x i64>, <2 x i64>* %1542, align 4
  %1544 = bitcast i8* %1537 to <2 x i64>*
  store <2 x i64> %1543, <2 x i64>* %1544, align 4
  %1545 = extractelement <2 x i64> %1543, i32 1
  %1546 = and i64 %1545, 280375465082880
  %1547 = icmp eq i64 %1546, 8796093022208
  br i1 %1547, label %1548, label %1551

1548:                                             ; preds = %1540
  %1549 = getelementptr inbounds i8, i8* %1537, i64 8
  %1550 = bitcast i8* %1549 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %1550) #11
  br label %1551

1551:                                             ; preds = %1548, %1540
  %1552 = getelementptr inbounds i8, i8* %1537, i64 16
  %1553 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %34, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %1554 = load i8, i8* %1553, align 4, !range !6
  store i8 %1554, i8* %1552, align 4
  %1555 = getelementptr inbounds i8, i8* %1537, i64 20
  %1556 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %34, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %1557 = bitcast %"class.blink::Length"* %1556 to i64*
  %1558 = bitcast i8* %1555 to i64*
  %1559 = load i64, i64* %1557, align 4
  store i64 %1559, i64* %1558, align 4
  %1560 = and i64 %1559, 280375465082880
  %1561 = icmp eq i64 %1560, 8796093022208
  br i1 %1561, label %1562, label %1564

1562:                                             ; preds = %1551
  %1563 = bitcast i8* %1555 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %1563) #11
  br label %1564

1564:                                             ; preds = %1562, %1551
  store i8 1, i8* %1535, align 4
  br label %1567

1565:                                             ; preds = %1533
  store i8 0, i8* %1535, align 4
  %1566 = getelementptr inbounds %"class.absl::optional.2900", %"class.absl::optional.2900"* %51, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %1566, i8 0, i64 28, i1 false) #11
  br label %1567

1567:                                             ; preds = %1564, %1536, %1565
  %1568 = bitcast i32* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1568) #11
  %1569 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %70, align 8
  %1570 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %1569) #11
  %1571 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %1570, i64 0, i32 0, i32 6
  %1572 = load i32, i32* %1571, align 8
  %1573 = lshr i32 %1572, 5
  %1574 = and i32 %1573, 7
  store i32 %1574, i32* %52, align 4
  %1575 = load i8, i8* %1336, align 8, !range !6
  %1576 = icmp eq i8 %1575, 0
  br i1 %1576, label %1579, label %1577

1577:                                             ; preds = %1567
  %1578 = getelementptr inbounds %"class.absl::optional.2916", %"class.absl::optional.2916"* %45, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink18TextDecorationInfoD2Ev(%"class.blink::TextDecorationInfo"* %1578) #11
  store i8 0, i8* %1336, align 8
  br label %1579

1579:                                             ; preds = %1567, %1577
  %1580 = getelementptr inbounds %"class.absl::optional.2916", %"class.absl::optional.2916"* %45, i64 0, i32 0, i32 0
  call void @_ZN4absl17optional_internal18optional_data_baseIN5blink18TextDecorationInfoEE9constructIJRNS2_14PhysicalOffsetES7_RNS2_10LayoutUnitENS2_12FontBaselineERKNS2_13ComputedStyleERNS_8optionalINS2_21AppliedTextDecorationEEERPSC_EEEvDpOT_(%"class.absl::optional_internal::optional_data_base.2918"* nonnull %1580, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %15, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %48, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %49, i32* nonnull dereferenceable(4) %52, %"class.blink::ComputedStyle"* dereferenceable(104) %75, %"class.absl::optional.2900"* nonnull dereferenceable(32) %51, %"class.blink::ComputedStyle"** nonnull dereferenceable(8) %50) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1568) #11
  %1581 = bitcast %"class.blink::TextDecorationOffset"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1581) #11
  %1582 = bitcast %"class.blink::TextDecorationOffset"* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1582, i8 -86, i64 32, i1 false)
  %1583 = load i8, i8* %1336, align 8, !range !6
  %1584 = icmp eq i8 %1583, 0
  br i1 %1584, label %1585, label %1586, !prof !2

1585:                                             ; preds = %1579
  call void @llvm.trap() #11
  unreachable

1586:                                             ; preds = %1579
  %1587 = getelementptr inbounds %"class.blink::TextDecorationOffset", %"class.blink::TextDecorationOffset"* %53, i64 0, i32 0, i32 0
  %1588 = getelementptr inbounds %"class.blink::TextDecorationOffset", %"class.blink::TextDecorationOffset"* %53, i64 0, i32 2, i32 0
  %1589 = getelementptr inbounds %"class.blink::TextDecorationOffset", %"class.blink::TextDecorationOffset"* %53, i64 0, i32 1
  %1590 = getelementptr inbounds %"class.blink::TextDecorationOffset", %"class.blink::TextDecorationOffset"* %53, i64 0, i32 0, i32 1
  %1591 = getelementptr inbounds %"class.absl::optional.2916", %"class.absl::optional.2916"* %45, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1592 = bitcast %"class.blink::TextDecorationInfo"* %1591 to i64*
  %1593 = load i64, i64* %1592, align 8
  %1594 = bitcast %"class.blink::InlineTextBoxPainter"* %0 to i64*
  %1595 = load i64, i64* %1594, align 8
  %1596 = bitcast %"class.blink::ComputedStyle"** %1590 to i64*
  store i64 %1593, i64* %1596, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink20TextDecorationOffsetE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1587, align 8
  %1597 = bitcast %"class.blink::InlineTextBox"** %1589 to i64*
  store i64 %1595, i64* %1597, align 8
  store %"class.blink::LayoutObject"* %1527, %"class.blink::LayoutObject"** %1588, align 8
  %1598 = getelementptr inbounds %"class.blink::TextDecorationOffset", %"class.blink::TextDecorationOffset"* %53, i64 0, i32 0
  %1599 = call dereferenceable(16) %"class.WTF::Vector.254"* @_ZNK5blink13ComputedStyle22AppliedTextDecorationsEv(%"class.blink::ComputedStyle"* %75) #11
  call void @_ZN5blink11TextPainter33PaintDecorationsExceptLineThroughERKNS_24TextDecorationOffsetBaseERNS_18TextDecorationInfoERKNS_9PaintInfoERKN3WTF6VectorINS_21AppliedTextDecorationELj0ENS9_18PartitionAllocatorEEERKNS_14TextPaintStyleEPb(%"class.blink::TextPainter"* nonnull %43, %"class.blink::TextDecorationOffsetBase"* nonnull dereferenceable(16) %1598, %"class.blink::TextDecorationInfo"* dereferenceable(224) %1591, %"struct.blink::PaintInfo"* dereferenceable(56) %1, %"class.WTF::Vector.254"* dereferenceable(16) %1599, %"struct.blink::TextPaintStyle"* nonnull dereferenceable(64) %33, i8* nonnull %46) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1581) #11
  %1600 = load i8, i8* %1535, align 4, !range !6
  %1601 = icmp eq i8 %1600, 0
  br i1 %1601, label %1615, label %1602

1602:                                             ; preds = %1586
  %1603 = getelementptr inbounds %"class.absl::optional.2900", %"class.absl::optional.2900"* %51, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 2
  %1604 = load i8, i8* %1603, align 1
  %1605 = icmp eq i8 %1604, 8
  br i1 %1605, label %1606, label %1608

1606:                                             ; preds = %1602
  %1607 = getelementptr inbounds %"class.absl::optional.2900", %"class.absl::optional.2900"* %51, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %1607) #11
  br label %1608

1608:                                             ; preds = %1606, %1602
  %1609 = getelementptr inbounds %"class.absl::optional.2900", %"class.absl::optional.2900"* %51, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 2
  %1610 = load i8, i8* %1609, align 1
  %1611 = icmp eq i8 %1610, 8
  br i1 %1611, label %1612, label %1614

1612:                                             ; preds = %1608
  %1613 = getelementptr inbounds %"class.absl::optional.2900", %"class.absl::optional.2900"* %51, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %1613) #11
  br label %1614

1614:                                             ; preds = %1612, %1608
  store i8 0, i8* %1535, align 4
  br label %1615

1615:                                             ; preds = %1586, %1614
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1535) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1528) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1352) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1348) #11
  br label %1616

1616:                                             ; preds = %1342, %1335, %1615
  %1617 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %54, align 8
  %1618 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %1617, i64 0, i32 5
  %1619 = load i16, i16* %1618, align 2
  %1620 = icmp ne i16 %1619, -1
  %1621 = and i1 %1284, %1620
  %1622 = zext i16 %1619 to i32
  %1623 = load i32, i32* %690, align 4
  %1624 = select i1 %1621, i32 %1622, i32 0
  %1625 = select i1 %1621, i32 %1623, i32 %1259
  br i1 %1002, label %1626, label %1632

1626:                                             ; preds = %1616
  %1627 = load i32, i32* %41, align 4
  %1628 = load i32, i32* %42, align 4
  %1629 = icmp slt i32 %1627, %1628
  %1630 = select i1 %1629, i32 %1628, i32 %1624
  %1631 = select i1 %1629, i32 %1627, i32 %1625
  br label %1632

1632:                                             ; preds = %1626, %1616
  %1633 = phi i32 [ %1624, %1616 ], [ %1630, %1626 ]
  %1634 = phi i32 [ %1625, %1616 ], [ %1631, %1626 ]
  call void @_ZN5blink11TextPainter5PaintEjjjRKNS_14TextPaintStyleEi(%"class.blink::TextPainter"* nonnull %43, i32 %1633, i32 %1634, i32 %1259, %"struct.blink::TextPaintStyle"* nonnull dereferenceable(64) %33, i32 %1334) #11
  %1635 = load i8, i8* %46, align 1, !range !6
  %1636 = icmp eq i8 %1635, 0
  br i1 %1636, label %1644, label %1637

1637:                                             ; preds = %1632
  %1638 = load i8, i8* %1336, align 8, !range !6
  %1639 = icmp eq i8 %1638, 0
  br i1 %1639, label %1640, label %1641

1640:                                             ; preds = %1637
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #12
  unreachable

1641:                                             ; preds = %1637
  %1642 = getelementptr inbounds %"class.absl::optional.2916", %"class.absl::optional.2916"* %45, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %1643 = call dereferenceable(16) %"class.WTF::Vector.254"* @_ZNK5blink13ComputedStyle22AppliedTextDecorationsEv(%"class.blink::ComputedStyle"* %75) #11
  call void @_ZN5blink11TextPainter31PaintDecorationsOnlyLineThroughERNS_18TextDecorationInfoERKNS_9PaintInfoERKN3WTF6VectorINS_21AppliedTextDecorationELj0ENS6_18PartitionAllocatorEEERKNS_14TextPaintStyleE(%"class.blink::TextPainter"* nonnull %43, %"class.blink::TextDecorationInfo"* dereferenceable(224) %1642, %"struct.blink::PaintInfo"* dereferenceable(56) %1, %"class.WTF::Vector.254"* dereferenceable(16) %1643, %"struct.blink::TextPaintStyle"* nonnull dereferenceable(64) %33) #11
  br label %1644

1644:                                             ; preds = %1632, %1641
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %46) #11
  %1645 = load i8, i8* %1336, align 8, !range !6
  %1646 = icmp eq i8 %1645, 0
  br i1 %1646, label %1649, label %1647

1647:                                             ; preds = %1644
  %1648 = getelementptr inbounds %"class.absl::optional.2916", %"class.absl::optional.2916"* %45, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink18TextDecorationInfoD2Ev(%"class.blink::TextDecorationInfo"* %1648) #11
  store i8 0, i8* %1336, align 8
  br label %1649

1649:                                             ; preds = %1644, %1647
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %1336) #11
  br i1 %1002, label %1650, label %1690

1650:                                             ; preds = %1333, %1649
  %1651 = load i32, i32* %41, align 4
  %1652 = load i32, i32* %42, align 4
  %1653 = icmp slt i32 %1651, %1652
  br i1 %1653, label %1654, label %1690

1654:                                             ; preds = %1650
  %1655 = call { i64, i64 } @_ZN5blink20InlineTextBoxPainter16GetSelectionRectILNS0_12PaintOptionsE0EEENS_12PhysicalRectERNS_15GraphicsContextERKS3_RKNS_13ComputedStyleERKNS_4FontEPNS_17LayoutTextCombineE(%"class.blink::InlineTextBoxPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %208, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %16, %"class.blink::ComputedStyle"* dereferenceable(104) %75, %"class.blink::Font"* dereferenceable(88) %1007, %"class.blink::LayoutTextCombine"* null)
  %1656 = extractvalue { i64, i64 } %1655, 0
  %1657 = trunc i64 %1656 to i32
  %1658 = lshr i64 %1656, 32
  %1659 = trunc i64 %1658 to i32
  %1660 = extractvalue { i64, i64 } %1655, 1
  call void @_ZN5blink15GraphicsContext4SaveEv(%"class.blink::GraphicsContext"* %208) #11
  %1661 = sitofp i32 %1657 to float
  %1662 = fmul float %1661, 1.562500e-02
  %1663 = sitofp i32 %1659 to float
  %1664 = fmul float %1663, 1.562500e-02
  %1665 = trunc i64 %1660 to i32
  %1666 = sitofp i32 %1665 to float
  %1667 = fmul float %1666, 1.562500e-02
  %1668 = lshr i64 %1660, 32
  %1669 = trunc i64 %1668 to i32
  %1670 = sitofp i32 %1669 to float
  %1671 = fmul float %1670, 1.562500e-02
  %1672 = insertelement <2 x float> undef, float %1662, i32 0
  %1673 = insertelement <2 x float> %1672, float %1664, i32 1
  %1674 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %1675 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1675) #11
  %1676 = fadd float %1662, %1667
  %1677 = insertelement <2 x float> undef, float %1676, i32 0
  %1678 = fadd float %1664, %1671
  %1679 = insertelement <2 x float> %1677, float %1678, i32 1
  %1680 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %1673, <2 x float>* %1680, align 8
  %1681 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %1679, <2 x float>* %1681, align 8
  call void @_ZN5blink15GraphicsContext8ClipRectERK6SkRectNS_16AntiAliasingModeE8SkClipOp(%"class.blink::GraphicsContext"* %208, %struct.SkRect* nonnull dereferenceable(16) %1674, i32 0, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1675) #11
  %1682 = load i32, i32* %41, align 4
  %1683 = load i32, i32* %42, align 4
  call void @_ZN5blink11TextPainter5PaintEjjjRKNS_14TextPaintStyleEi(%"class.blink::TextPainter"* nonnull %43, i32 %1682, i32 %1683, i32 %1259, %"struct.blink::TextPaintStyle"* nonnull dereferenceable(64) %33, i32 %1334) #11
  call void @_ZN5blink15GraphicsContext7RestoreEv(%"class.blink::GraphicsContext"* %208) #11
  call void @_ZN5blink15GraphicsContext4SaveEv(%"class.blink::GraphicsContext"* %208) #11
  %1684 = bitcast { <2 x float>, <2 x float> }* %8 to %struct.SkRect*
  %1685 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1685) #11
  %1686 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  store <2 x float> %1673, <2 x float>* %1686, align 8
  %1687 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  store <2 x float> %1679, <2 x float>* %1687, align 8
  call void @_ZN5blink15GraphicsContext8ClipRectERK6SkRectNS_16AntiAliasingModeE8SkClipOp(%"class.blink::GraphicsContext"* %208, %struct.SkRect* nonnull dereferenceable(16) %1684, i32 0, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1685) #11
  %1688 = load i32, i32* %41, align 4
  %1689 = load i32, i32* %42, align 4
  call void @_ZN5blink11TextPainter5PaintEjjjRKNS_14TextPaintStyleEi(%"class.blink::TextPainter"* nonnull %43, i32 %1688, i32 %1689, i32 %1259, %"struct.blink::TextPaintStyle"* nonnull dereferenceable(64) %34, i32 %1334) #11
  call void @_ZN5blink15GraphicsContext7RestoreEv(%"class.blink::GraphicsContext"* %208) #11
  br label %1690

1690:                                             ; preds = %1649, %1654, %1650
  %1691 = load i32, i32* %479, align 8
  %1692 = icmp eq i32 %1691, 5
  br i1 %1692, label %1693, label %1694

1693:                                             ; preds = %1690
  call void @_ZN5blink20InlineTextBoxPainter20PaintDocumentMarkersERKNS_10HeapVectorINS_6MemberINS_14DocumentMarkerEEELj0EEERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_13ComputedStyleERKNS_4FontENS_24DocumentMarkerPaintPhaseE(%"class.blink::InlineTextBoxPainter"* %0, %"class.blink::HeapVector.2905"* nonnull dereferenceable(16) %37, %"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %15, %"class.blink::ComputedStyle"* dereferenceable(104) %75, %"class.blink::Font"* dereferenceable(88) %1007, i32 0)
  br label %1694

1694:                                             ; preds = %1693, %1690
  %1695 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %1006, i64 0, i32 1, i32 1, i32 0
  %1696 = load %"class.blink::FontFallbackList"*, %"class.blink::FontFallbackList"** %1695, align 8
  %1697 = icmp eq %"class.blink::FontFallbackList"* %1696, null
  br i1 %1697, label %1701, label %1698

1698:                                             ; preds = %1694
  %1699 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %1007) #11
  %1700 = call zeroext i1 @_ZNK5blink16FontFallbackList17ShouldSkipDrawingEv(%"class.blink::FontFallbackList"* %1699) #11
  br i1 %1700, label %1718, label %1701

1701:                                             ; preds = %1694, %1698
  %1702 = load i8, i8* @_ZN5blink22IgnorePaintTimingScope30is_document_element_invisible_E, align 1, !range !6
  %1703 = icmp eq i8 %1702, 0
  %1704 = load i32, i32* @_ZN5blink22IgnorePaintTimingScope13ignore_depth_E, align 4
  %1705 = icmp ne i32 %1704, 0
  %1706 = and i1 %1703, %1705
  %1707 = icmp sgt i32 %1704, 1
  %1708 = or i1 %1707, %1706
  br i1 %1708, label %1718, label %1709

1709:                                             ; preds = %1701
  %1710 = load %"class.blink::ScopedPaintTimingDetectorBlockPaintHook"*, %"class.blink::ScopedPaintTimingDetectorBlockPaintHook"** @_ZN5blink39ScopedPaintTimingDetectorBlockPaintHook4top_E, align 8
  %1711 = icmp eq %"class.blink::ScopedPaintTimingDetectorBlockPaintHook"* %1710, null
  br i1 %1711, label %1718, label %1712

1712:                                             ; preds = %1709
  %1713 = getelementptr inbounds %"class.blink::ScopedPaintTimingDetectorBlockPaintHook", %"class.blink::ScopedPaintTimingDetectorBlockPaintHook"* %1710, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1714 = load i8, i8* %1713, align 8, !range !6
  %1715 = icmp eq i8 %1714, 0
  br i1 %1715, label %1718, label %1716

1716:                                             ; preds = %1712
  %1717 = getelementptr inbounds %"class.blink::ScopedPaintTimingDetectorBlockPaintHook", %"class.blink::ScopedPaintTimingDetectorBlockPaintHook"* %1710, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  call void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"* %1717, %"class.blink::IntRect"* nonnull dereferenceable(16) %13) #11
  br label %1718

1718:                                             ; preds = %1716, %1712, %1709, %1701, %1698
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1269) #11
  call void @_ZN5blink15TextPainterBaseD2Ev(%"class.blink::TextPainterBase"* nonnull %1265) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %1260) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1178) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1177) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1048) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1022) #11
  %1719 = load i8, i8* %861, align 8, !range !6
  %1720 = icmp eq i8 %1719, 0
  br i1 %1720, label %1734, label %1721

1721:                                             ; preds = %1718
  %1722 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %34, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 2
  %1723 = load i8, i8* %1722, align 1
  %1724 = icmp eq i8 %1723, 8
  br i1 %1724, label %1725, label %1727

1725:                                             ; preds = %1721
  %1726 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %34, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %1726) #11
  br label %1727

1727:                                             ; preds = %1725, %1721
  %1728 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %34, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 2
  %1729 = load i8, i8* %1728, align 1
  %1730 = icmp eq i8 %1729, 8
  br i1 %1730, label %1731, label %1733

1731:                                             ; preds = %1727
  %1732 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %34, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %1732) #11
  br label %1733

1733:                                             ; preds = %1731, %1727
  store i8 0, i8* %861, align 8
  br label %1734

1734:                                             ; preds = %1718, %1733
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %860) #11
  %1735 = load i8, i8* %863, align 8, !range !6
  %1736 = icmp eq i8 %1735, 0
  br i1 %1736, label %1750, label %1737

1737:                                             ; preds = %1734
  %1738 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %33, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 2
  %1739 = load i8, i8* %1738, align 1
  %1740 = icmp eq i8 %1739, 8
  br i1 %1740, label %1741, label %1743

1741:                                             ; preds = %1737
  %1742 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %33, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %1742) #11
  br label %1743

1743:                                             ; preds = %1741, %1737
  %1744 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %33, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 2
  %1745 = load i8, i8* %1744, align 1
  %1746 = icmp eq i8 %1745, 8
  br i1 %1746, label %1747, label %1749

1747:                                             ; preds = %1743
  %1748 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %33, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %1748) #11
  br label %1749

1749:                                             ; preds = %1747, %1743
  store i8 0, i8* %863, align 8
  br label %1750

1750:                                             ; preds = %1734, %1749
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %841) #11
  %1751 = icmp eq i8 %838, 0
  br i1 %1751, label %1753, label %1752

1752:                                             ; preds = %1750
  call void @_ZN5blink15GraphicsContext7RestoreEv(%"class.blink::GraphicsContext"* %839) #11
  br label %1753

1753:                                             ; preds = %1750, %1752
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %715) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %689) #11
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %28) #11
  %1754 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %683, align 8
  %1755 = icmp eq %"class.WTF::StringImpl"* %1754, null
  br i1 %1755, label %1769, label %1756

1756:                                             ; preds = %1753
  %1757 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1754, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1758 = load atomic i32, i32* %1757 monotonic, align 4
  %1759 = and i32 %1758, 2
  %1760 = icmp eq i32 %1759, 0
  %1761 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1754, i64 0, i32 0
  %1762 = load i32, i32* %1761, align 4
  br i1 %1760, label %1763, label %1765

1763:                                             ; preds = %1756
  %1764 = add i32 %1762, -1
  store i32 %1764, i32* %1761, align 4
  br label %1765

1765:                                             ; preds = %1763, %1756
  %1766 = phi i32 [ %1764, %1763 ], [ %1762, %1756 ]
  %1767 = icmp eq i32 %1766, 0
  br i1 %1767, label %1768, label %1769

1768:                                             ; preds = %1765
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1754) #11
  br label %1769

1769:                                             ; preds = %1768, %1765, %1753
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %682) #11
  %1770 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %509, align 8
  %1771 = icmp eq %"class.WTF::StringImpl"* %1770, null
  br i1 %1771, label %1786, label %1772

1772:                                             ; preds = %582, %1769
  %1773 = phi %"class.WTF::StringImpl"* [ %1770, %1769 ], [ %580, %582 ]
  %1774 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1773, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1775 = load atomic i32, i32* %1774 monotonic, align 4
  %1776 = and i32 %1775, 2
  %1777 = icmp eq i32 %1776, 0
  %1778 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1773, i64 0, i32 0
  %1779 = load i32, i32* %1778, align 4
  br i1 %1777, label %1780, label %1782

1780:                                             ; preds = %1772
  %1781 = add i32 %1779, -1
  store i32 %1781, i32* %1778, align 4
  br label %1782

1782:                                             ; preds = %1780, %1772
  %1783 = phi i32 [ %1781, %1780 ], [ %1779, %1772 ]
  %1784 = icmp eq i32 %1783, 0
  br i1 %1784, label %1785, label %1786

1785:                                             ; preds = %1782
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1773) #11
  br label %1786

1786:                                             ; preds = %555, %1769, %1782, %1785
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %508) #11
  br label %1787

1787:                                             ; preds = %482, %1786
  %1788 = load i8, i8* %475, align 8, !range !6
  %1789 = icmp eq i8 %1788, 0
  br i1 %1789, label %1792, label %1790

1790:                                             ; preds = %1787
  %1791 = getelementptr inbounds %"class.absl::optional.2868", %"class.absl::optional.2868"* %21, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  call void @_ZN5blink15DrawingRecorderD1Ev(%"class.blink::DrawingRecorder"* %1791) #11
  store i8 0, i8* %475, align 8
  br label %1792

1792:                                             ; preds = %1787, %1790
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %475) #11
  %1793 = load i8, i8* %284, align 8, !range !6
  %1794 = icmp eq i8 %1793, 0
  br i1 %1794, label %1797, label %1795

1795:                                             ; preds = %1792
  %1796 = getelementptr inbounds %"class.absl::optional.1962", %"class.absl::optional.1962"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink23SelectionBoundsRecorderD1Ev(%"class.blink::SelectionBoundsRecorder"* %1796) #11
  store i8 0, i8* %284, align 8
  br label %1797

1797:                                             ; preds = %1792, %1795
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %284) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %267) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %209) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %153) #11
  br label %1798

1798:                                             ; preds = %114, %1797
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %116) #11
  br label %1799

1799:                                             ; preds = %63, %110, %1798, %59, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink14LineLayoutItem8StyleRefEb(%"class.blink::LineLayoutItem"*, i1 zeroext) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LineLayoutItem", %"class.blink::LineLayoutItem"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %4, align 8
  br i1 %1, label %6, label %41

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 6, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %6, %10
  %11 = phi %"class.blink::LayoutObject"* [ %13, %10 ], [ %5, %6 ]
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 7
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %10, label %17

17:                                               ; preds = %10, %6
  %18 = phi %"class.blink::Node"* [ %8, %6 ], [ %15, %10 ]
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %22, i64 0, i32 59, i32 0, i32 0
  %24 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %24, i64 0, i32 31, i32 0, i32 0
  %26 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 11
  %28 = load i8, i8* %27, align 8
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %17
  %32 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.4, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0)) #11
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  br label %34

34:                                               ; preds = %31, %17
  %35 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %26, i64 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !6
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %5) #11
  %40 = icmp eq %"class.blink::ComputedStyle"* %39, null
  br i1 %40, label %41, label %44

41:                                               ; preds = %2, %34, %38
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %5, i64 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  br label %44

44:                                               ; preds = %41, %38
  %45 = phi %"class.blink::ComputedStyle"* [ %39, %38 ], [ %43, %41 ]
  ret %"class.blink::ComputedStyle"* %45
}

declare zeroext i1 @_ZNK5blink13InlineTextBox10IsSelectedEv(%"class.blink::InlineTextBox"*) unnamed_addr #3

declare { i64, i64 } @_ZNK5blink13InlineTextBox20PhysicalOverflowRectEv(%"class.blink::InlineTextBox"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9PaintInfo18IntersectsCullRectERKNS_12PhysicalRectERKNS_14PhysicalOffsetE(%"struct.blink::PaintInfo"*, %"struct.blink::PhysicalRect"* dereferenceable(16), %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.blink::IntRect"*
  %6 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %0, i64 0, i32 2
  %7 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, 0
  %13 = select i1 %12, i32 -2147483648, i32 2147483647
  %14 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %9, i32 %11) #11
  %15 = extractvalue { i32, i1 } %14, 1
  %16 = extractvalue { i32, i1 } %14, 0
  %17 = select i1 %15, i32 %13, i32 %16, !prof !2
  %18 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, 0
  %23 = select i1 %22, i32 -2147483648, i32 2147483647
  %24 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %19, i32 %21) #11
  %25 = extractvalue { i32, i1 } %24, 1
  %26 = extractvalue { i32, i1 } %24, 0
  %27 = select i1 %25, i32 %23, i32 %26, !prof !2
  %28 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1
  %29 = bitcast %"struct.blink::PhysicalSize"* %28 to i64*
  %30 = load i64, i64* %29, align 4
  %31 = icmp slt i32 %17, -2147483584
  %32 = ashr i32 %17, 6
  %33 = select i1 %31, i32 -33554432, i32 %32, !prof !2
  %34 = icmp slt i32 %27, -2147483584
  %35 = ashr i32 %27, 6
  %36 = select i1 %34, i32 -33554432, i32 %35, !prof !2
  %37 = zext i32 %36 to i64
  %38 = shl nuw i64 %37, 32
  %39 = trunc i64 %30 to i32
  %40 = icmp slt i32 %39, 0
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 %39) #11
  %43 = extractvalue { i32, i1 } %42, 1
  %44 = extractvalue { i32, i1 } %42, 0
  %45 = select i1 %43, i32 %41, i32 %44, !prof !2
  %46 = lshr i64 %30, 32
  %47 = trunc i64 %46 to i32
  %48 = icmp slt i32 %47, 0
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %27, i32 %47) #11
  %51 = extractvalue { i32, i1 } %50, 1
  %52 = extractvalue { i32, i1 } %50, 0
  %53 = select i1 %51, i32 %49, i32 %52, !prof !2
  %54 = icmp sgt i32 %45, 2147483583
  br i1 %54, label %62, label %55, !prof !2

55:                                               ; preds = %3
  %56 = icmp sgt i32 %45, -1
  br i1 %56, label %57, label %60

57:                                               ; preds = %55
  %58 = add nuw nsw i32 %45, 63
  %59 = sdiv i32 %58, 64
  br label %62

60:                                               ; preds = %55
  %61 = sdiv i32 %45, 64
  br label %62

62:                                               ; preds = %60, %57, %3
  %63 = phi i32 [ %59, %57 ], [ %61, %60 ], [ 33554431, %3 ]
  %64 = icmp sgt i32 %53, 2147483583
  br i1 %64, label %72, label %65, !prof !2

65:                                               ; preds = %62
  %66 = icmp sgt i32 %53, -1
  br i1 %66, label %67, label %70

67:                                               ; preds = %65
  %68 = add nuw nsw i32 %53, 63
  %69 = sdiv i32 %68, 64
  br label %72

70:                                               ; preds = %65
  %71 = sdiv i32 %53, 64
  br label %72

72:                                               ; preds = %62, %67, %70
  %73 = phi i32 [ %69, %67 ], [ %71, %70 ], [ 33554431, %62 ]
  %74 = sub nsw i32 %63, %33
  %75 = sub nsw i32 %73, %36
  %76 = zext i32 %75 to i64
  %77 = shl nuw i64 %76, 32
  %78 = zext i32 %74 to i64
  %79 = or i64 %77, %78
  %80 = zext i32 %33 to i64
  %81 = or i64 %38, %80
  %82 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %81, i64* %82, align 8
  %83 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  store i64 %79, i64* %83, align 8
  %84 = call zeroext i1 @_ZNK5blink8CullRect10IntersectsERKNS_7IntRectE(%"class.blink::CullRect"* %6, %"class.blink::IntRect"* nonnull dereferenceable(16) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret i1 %84
}

declare i64 @_ZNK5blink9InlineBox16PhysicalLocationEv(%"class.blink::InlineBox"*) local_unnamed_addr #3

declare i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @_ZNK5blink14FrameSelection43ComputeLayoutSelectionStateForInlineTextBoxERKNS_13InlineTextBoxE(%"class.blink::FrameSelection"*, %"class.blink::InlineTextBox"* dereferenceable(88)) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink23SelectionBoundsRecorder21ShouldRecordSelectionERKNS_14FrameSelectionENS_14SelectionStateE(%"class.blink::FrameSelection"* dereferenceable(72), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZN5blink20InlineTextBoxPainter16GetSelectionRectILNS0_12PaintOptionsE0EEENS_12PhysicalRectERNS_15GraphicsContextERKS3_RKNS_13ComputedStyleERKNS_4FontEPNS_17LayoutTextCombineE(%"class.blink::InlineTextBoxPainter"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Font"* dereferenceable(88), %"class.blink::LayoutTextCombine"*) local_unnamed_addr #2 comdat align 2 {
  %7 = alloca %"class.blink::LayoutRectOutsets", align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.WTF::StringBuilder", align 8
  %11 = alloca %"class.blink::TextRun", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.blink::FloatPoint", align 4
  %14 = alloca { i64, i64 }, align 8
  %15 = bitcast { i64, i64 }* %14 to %"struct.blink::PhysicalRect"*
  %16 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #11
  store i32 -1431655766, i32* %8, align 4
  %17 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #11
  store i32 -1431655766, i32* %9, align 4
  %18 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %0, i64 0, i32 0
  %19 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %18, align 8
  call void @_ZNK5blink13InlineTextBox17SelectionStartEndERiS1_(%"class.blink::InlineTextBox"* %19, i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %9) #11
  %20 = load i32, i32* %8, align 4
  %21 = load i32, i32* %9, align 4
  %22 = icmp slt i32 %20, %21
  br i1 %22, label %23, label %420

23:                                               ; preds = %6
  %24 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %18, align 8
  %25 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %24, i64 0, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %24, i64 0, i32 4
  %28 = load i16, i16* %27, align 4
  %29 = zext i16 %28 to i32
  %30 = bitcast %"class.blink::InlineTextBoxPainter"* %0 to %"class.blink::InlineBox"**
  %31 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %24, i64 0, i32 0, i32 7, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, 4
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %24, i64 0, i32 0, i32 4, i32 0
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %36, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #11
  %38 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %37, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %39 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %39, i64 0, i32 0, i32 9
  %41 = bitcast [20 x i8]* %40 to i160*
  %42 = load i160, i160* %41, align 8
  %43 = and i160 %42, 41538374868278621028243970633760768
  %44 = icmp eq i160 %43, 0
  %45 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %18, align 8
  %46 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %45, i64 0, i32 5
  %47 = load i16, i16* %46, align 2
  %48 = icmp eq i16 %47, -1
  br i1 %48, label %56, label %49

49:                                               ; preds = %23
  %50 = xor i1 %34, %44
  %51 = zext i16 %47 to i32
  br i1 %50, label %52, label %56

52:                                               ; preds = %49
  %53 = load i32, i32* %8, align 4
  %54 = icmp slt i32 %53, %51
  %55 = select i1 %54, i32 %51, i32 %53
  store i32 %55, i32* %8, align 4
  br label %56

56:                                               ; preds = %49, %23, %52
  %57 = phi i32 [ %29, %52 ], [ %29, %23 ], [ %51, %49 ]
  %58 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %45, i64 0, i32 0, i32 4, i32 0
  %59 = bitcast %"class.blink::LayoutObject"** %58 to %"class.blink::LayoutText"**
  %60 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %60, i64 0, i32 7, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %80, label %64

64:                                               ; preds = %56
  %65 = ptrtoint %"class.WTF::StringImpl"* %62 to i64
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 1
  br i1 %69, label %75, label %71

71:                                               ; preds = %64
  %72 = bitcast %"class.WTF::StringImpl"* %70 to i8*
  %73 = zext i32 %26 to i64
  %74 = getelementptr inbounds i8, i8* %72, i64 %73
  br label %82

75:                                               ; preds = %64
  %76 = bitcast %"class.WTF::StringImpl"* %70 to i16*
  %77 = zext i32 %26 to i64
  %78 = getelementptr inbounds i16, i16* %76, i64 %77
  %79 = bitcast i16* %78 to i8*
  br label %82

80:                                               ; preds = %56
  %81 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %82

82:                                               ; preds = %71, %75, %80
  %83 = phi i64 [ %81, %80 ], [ %65, %75 ], [ %65, %71 ]
  %84 = phi i8* [ null, %80 ], [ %79, %75 ], [ %74, %71 ]
  %85 = phi i32 [ 0, %80 ], [ %57, %75 ], [ %57, %71 ]
  %86 = bitcast %"class.WTF::StringBuilder"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %86) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 48, i1 false)
  %87 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %87, align 8
  %88 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 1
  %89 = bitcast %union.anon.2878* %88 to i8*
  store i8 0, i8* %89, align 8
  %90 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 2
  store i32 0, i32* %90, align 8
  %91 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 3
  store i8 1, i8* %91, align 4
  %92 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 4
  store i8 0, i8* %92, align 1
  %93 = load i32, i32* %9, align 4
  %94 = icmp eq i32 %93, %57
  br i1 %94, label %95, label %100

95:                                               ; preds = %82
  %96 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %45, i64 0, i32 0, i32 7, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = trunc i32 %97 to i16
  %99 = icmp slt i16 %98, 0
  br label %100

100:                                              ; preds = %95, %82
  %101 = phi i1 [ false, %82 ], [ %99, %95 ]
  %102 = bitcast %"class.blink::TextRun"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %102) #11
  %103 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 2
  %104 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 3
  %105 = bitcast %"class.blink::TextRun"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %104, align 8
  %106 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %106, align 4
  %107 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 5
  store i16 -21846, i16* %107, align 8
  %108 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 6, i64 0
  store i8 -86, i8* %108, align 2
  %109 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 6, i64 1
  store i8 -86, i8* %109, align 1
  %110 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %110, align 4
  %111 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 7, i32 1
  %112 = bitcast %"class.WTF::StringView"* %12 to i64*
  %113 = bitcast i8* %111 to i64*
  store i64 -6148914691236517206, i64* %113, align 4
  store i64 %83, i64* %112, align 8
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* %84, i8** %114, align 8
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %85, i32* %115, align 8
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 3, i64 0
  %117 = bitcast i8* %116 to i32*
  store i32 -1431655766, i32* %117, align 4
  %118 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %59, align 8
  %119 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %118, i64 0, i32 7, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %125, label %122

122:                                              ; preds = %100
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  br label %125

125:                                              ; preds = %100, %122
  %126 = phi i32 [ %124, %122 ], [ 0, %100 ]
  %127 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %45, i64 0, i32 3
  %128 = load i32, i32* %127, align 8
  %129 = sub i32 %126, %128
  %130 = select i1 %101, %"class.WTF::StringBuilder"* %10, %"class.WTF::StringBuilder"* null
  call void @_ZNK5blink13InlineTextBox16ConstructTextRunERKNS_13ComputedStyleEN3WTF10StringViewEiPNS4_13StringBuilderE(%"class.blink::TextRun"* nonnull sret %11, %"class.blink::InlineTextBox"* %45, %"class.blink::ComputedStyle"* dereferenceable(104) %3, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %12, i32 %129, %"class.WTF::StringBuilder"* %130) #11
  br i1 %101, label %131, label %133

131:                                              ; preds = %125
  %132 = load i32, i32* %103, align 4
  store i32 %132, i32* %9, align 4
  br label %133

133:                                              ; preds = %131, %125
  %134 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %30, align 8
  %135 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %134) #11
  %136 = call i32 @_ZNK5blink13RootInlineBox15SelectionBottomEv(%"class.blink::RootInlineBox"* %135) #11
  %137 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %30, align 8
  %138 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %137) #11
  %139 = call i32 @_ZNK5blink13RootInlineBox12SelectionTopEv(%"class.blink::RootInlineBox"* %138) #11
  %140 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %18, align 8
  %141 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %140, i64 0, i32 0, i32 4, i32 0
  %142 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %142, i64 0, i32 5, i32 0
  %144 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %144, i64 0, i32 0, i32 9
  %146 = bitcast [20 x i8]* %145 to i160*
  %147 = load i160, i160* %146, align 8
  %148 = and i160 %147, 15211807202738752817960438464512
  %149 = icmp eq i160 %148, 10141204801825835211973625643008
  %150 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %140, i64 0, i32 0, i32 7, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = and i32 %151, 2048
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %140, i64 0, i32 0, i32 5, i32 1, i32 0
  %155 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %140, i64 0, i32 0, i32 5, i32 0, i32 0
  %156 = select i1 %153, i32* %155, i32* %154
  %157 = load i32, i32* %156, align 4
  br i1 %149, label %158, label %170

158:                                              ; preds = %133
  %159 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %140, i64 0, i32 0
  %160 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %159) #11
  %161 = icmp slt i32 %160, 0
  %162 = select i1 %161, i32 -2147483648, i32 2147483647
  %163 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %157, i32 %160) #11
  %164 = extractvalue { i32, i1 } %163, 1
  %165 = extractvalue { i32, i1 } %163, 0
  %166 = select i1 %164, i32 %162, i32 %165, !prof !2
  %167 = icmp sgt i32 %166, -1
  %168 = select i1 %167, i32 -2147483648, i32 2147483647
  %169 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %136, i32 %166) #11
  br label %174

170:                                              ; preds = %133
  %171 = icmp sgt i32 %139, -1
  %172 = select i1 %171, i32 -2147483648, i32 2147483647
  %173 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %157, i32 %139) #11
  br label %174

174:                                              ; preds = %170, %158
  %175 = phi { i32, i1 } [ %173, %170 ], [ %169, %158 ]
  %176 = phi i32 [ %172, %170 ], [ %168, %158 ]
  %177 = extractvalue { i32, i1 } %175, 1
  %178 = extractvalue { i32, i1 } %175, 0
  %179 = select i1 %177, i32 %176, i32 %178
  %180 = sdiv i32 %179, 64
  %181 = srem i32 %179, 64
  %182 = add nsw i32 %181, 32
  %183 = ashr i32 %182, 6
  %184 = add nsw i32 %183, %180
  %185 = icmp sgt i32 %139, -1
  %186 = select i1 %185, i32 -2147483648, i32 2147483647
  %187 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %136, i32 %139) #11
  %188 = extractvalue { i32, i1 } %187, 1
  %189 = extractvalue { i32, i1 } %187, 0
  %190 = select i1 %188, i32 %186, i32 %189, !prof !2
  %191 = sdiv i32 %190, 64
  %192 = srem i32 %190, 64
  %193 = add nsw i32 %192, 32
  %194 = ashr i32 %193, 6
  %195 = add nsw i32 %194, %191
  %196 = icmp sgt i32 %195, 0
  %197 = select i1 %196, i32 %195, i32 0
  %198 = bitcast %"class.blink::FloatPoint"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #11
  %199 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %13, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %199, align 4
  %200 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %13, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %200, align 4
  %201 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 0, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = sitofp i32 %202 to float
  %204 = fmul float %203, 1.562500e-02
  %205 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 1, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp sgt i32 %184, 33554431
  br i1 %207, label %213, label %208

208:                                              ; preds = %174
  %209 = icmp slt i32 %184, -33554432
  br i1 %209, label %215, label %210

210:                                              ; preds = %208
  %211 = shl i32 %184, 6
  %212 = icmp sgt i32 %211, -1
  br i1 %212, label %213, label %215

213:                                              ; preds = %174, %210
  %214 = phi i32 [ %211, %210 ], [ 2147483647, %174 ]
  br label %215

215:                                              ; preds = %208, %210, %213
  %216 = phi i32 [ %214, %213 ], [ %211, %210 ], [ -2147483648, %208 ]
  %217 = phi i32 [ -2147483648, %213 ], [ 2147483647, %210 ], [ 2147483647, %208 ]
  %218 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %206, i32 %216) #11
  %219 = extractvalue { i32, i1 } %218, 1
  %220 = extractvalue { i32, i1 } %218, 0
  %221 = select i1 %219, i32 %217, i32 %220, !prof !2
  %222 = sitofp i32 %221 to float
  %223 = fmul float %222, 1.562500e-02
  store float %204, float* %199, align 4
  store float %223, float* %200, align 4
  %224 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %224) #11
  %225 = bitcast { i64, i64 }* %14 to i32*
  %226 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %15, i64 0, i32 0, i32 1, i32 0
  %227 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  %228 = bitcast i64* %227 to i32*
  %229 = sitofp i32 %197 to float
  %230 = load i32, i32* %8, align 4
  %231 = load i32, i32* %9, align 4
  %232 = call { <2 x float>, <2 x float> } @_ZNK5blink4Font20SelectionRectForTextERKNS_7TextRunERKNS_10FloatPointEfii(%"class.blink::Font"* %4, %"class.blink::TextRun"* nonnull dereferenceable(40) %11, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %13, float %229, i32 %230, i32 %231) #11
  %233 = extractvalue { <2 x float>, <2 x float> } %232, 0
  %234 = extractvalue { <2 x float>, <2 x float> } %232, 1
  %235 = extractelement <2 x float> %233, i32 0
  %236 = fmul float %235, 6.400000e+01
  %237 = call float @llvm.floor.f32(float %236) #11
  %238 = fcmp ult float %237, 0xC1E0000000000000
  %239 = fcmp ugt float %237, 0x41DFFFFFE0000000
  %240 = fcmp ogt float %237, 0xC1E0000000000000
  %241 = select i1 %240, float %237, float 0xC1E0000000000000
  %242 = fptosi float %241 to i32
  %243 = select i1 %238, i32 0, i32 2147483647
  %244 = select i1 %239, i32 %243, i32 %242
  %245 = extractelement <2 x float> %233, i32 1
  %246 = fmul float %245, 6.400000e+01
  %247 = call float @llvm.floor.f32(float %246) #11
  %248 = fcmp ult float %247, 0xC1E0000000000000
  %249 = fcmp ugt float %247, 0x41DFFFFFE0000000
  %250 = fcmp ogt float %247, 0xC1E0000000000000
  %251 = select i1 %250, float %247, float 0xC1E0000000000000
  %252 = fptosi float %251 to i32
  %253 = select i1 %248, i32 0, i32 2147483647
  %254 = select i1 %249, i32 %253, i32 %252
  %255 = extractelement <2 x float> %234, i32 0
  %256 = fadd float %235, %255
  %257 = fmul float %256, 6.400000e+01
  %258 = call float @llvm.ceil.f32(float %257) #11
  %259 = fcmp ult float %258, 0xC1E0000000000000
  %260 = fcmp ugt float %258, 0x41DFFFFFE0000000
  %261 = fcmp ogt float %258, 0xC1E0000000000000
  %262 = select i1 %261, float %258, float 0xC1E0000000000000
  %263 = fptosi float %262 to i32
  %264 = select i1 %259, i32 0, i32 2147483647
  %265 = select i1 %260, i32 %264, i32 %263
  %266 = icmp sgt i32 %244, -1
  %267 = select i1 %266, i32 -2147483648, i32 2147483647
  %268 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %265, i32 %244) #11
  %269 = extractvalue { i32, i1 } %268, 1
  %270 = extractvalue { i32, i1 } %268, 0
  %271 = select i1 %269, i32 %267, i32 %270, !prof !2
  %272 = extractelement <2 x float> %234, i32 1
  %273 = fadd float %245, %272
  %274 = fmul float %273, 6.400000e+01
  %275 = call float @llvm.ceil.f32(float %274) #11
  %276 = fcmp ult float %275, 0xC1E0000000000000
  %277 = fcmp ugt float %275, 0x41DFFFFFE0000000
  %278 = fcmp ogt float %275, 0xC1E0000000000000
  %279 = select i1 %278, float %275, float 0xC1E0000000000000
  %280 = fptosi float %279 to i32
  %281 = select i1 %276, i32 0, i32 2147483647
  %282 = select i1 %277, i32 %281, i32 %280
  %283 = icmp sgt i32 %254, -1
  %284 = select i1 %283, i32 -2147483648, i32 2147483647
  %285 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %282, i32 %254) #11
  %286 = extractvalue { i32, i1 } %285, 1
  %287 = extractvalue { i32, i1 } %285, 0
  %288 = select i1 %286, i32 %284, i32 %287, !prof !2
  %289 = zext i32 %254 to i64
  %290 = shl nuw i64 %289, 32
  %291 = zext i32 %244 to i64
  %292 = or i64 %290, %291
  %293 = zext i32 %288 to i64
  %294 = shl nuw i64 %293, 32
  %295 = zext i32 %271 to i64
  %296 = or i64 %294, %295
  %297 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  store i64 %292, i64* %297, align 8
  store i64 %296, i64* %227, align 8
  %298 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %18, align 8
  %299 = call zeroext i1 @_ZNK5blink13InlineTextBox26HasWrappedSelectionNewlineEv(%"class.blink::InlineTextBox"* %298) #11
  br i1 %299, label %300, label %337

300:                                              ; preds = %215
  %301 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %18, align 8
  %302 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %301, i64 0, i32 5
  %303 = load i16, i16* %302, align 2
  %304 = icmp eq i16 %303, -1
  br i1 %304, label %305, label %337

305:                                              ; preds = %300
  %306 = call zeroext i1 @_ZNK5blink13InlineTextBox11IsLineBreakEv(%"class.blink::InlineTextBox"* %301) #11
  br i1 %306, label %337, label %307

307:                                              ; preds = %305
  %308 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %18, align 8
  %309 = call float @_ZNK5blink13InlineTextBox17NewlineSpaceWidthEv(%"class.blink::InlineTextBox"* %308) #11
  %310 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %30, align 8
  %311 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %310, i64 0, i32 7, i32 0
  %312 = load i32, i32* %311, align 4
  %313 = and i32 %312, 4
  %314 = icmp eq i32 %313, 0
  %315 = bitcast %"class.blink::LayoutRectOutsets"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %315) #11
  %316 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %7, i64 0, i32 0, i32 0
  store i32 0, i32* %316, align 4
  %317 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %7, i64 0, i32 1, i32 0
  %318 = fmul float %309, 6.400000e+01
  %319 = select i1 %314, float %318, float 0.000000e+00
  %320 = fcmp ult float %319, 0xC1E0000000000000
  %321 = fcmp ugt float %319, 0x41DFFFFFE0000000
  %322 = fcmp ogt float %319, 0xC1E0000000000000
  %323 = select i1 %322, float %319, float 0xC1E0000000000000
  %324 = fptosi float %323 to i32
  %325 = select i1 %320, i32 0, i32 2147483647
  %326 = select i1 %321, i32 %325, i32 %324
  store i32 %326, i32* %317, align 4
  %327 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %7, i64 0, i32 2, i32 0
  store i32 0, i32* %327, align 4
  %328 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %7, i64 0, i32 3, i32 0
  %329 = select i1 %314, float 0.000000e+00, float %318
  %330 = fcmp ult float %329, 0xC1E0000000000000
  %331 = fcmp ugt float %329, 0x41DFFFFFE0000000
  %332 = fcmp ogt float %329, 0xC1E0000000000000
  %333 = select i1 %332, float %329, float 0xC1E0000000000000
  %334 = fptosi float %333 to i32
  %335 = select i1 %330, i32 0, i32 2147483647
  %336 = select i1 %331, i32 %335, i32 %334
  store i32 %336, i32* %328, align 4
  call void @_ZN5blink12PhysicalRect6ExpandERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"* nonnull %15, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %315) #11
  br label %337

337:                                              ; preds = %307, %305, %300, %215
  %338 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %30, align 8
  %339 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %338, i64 0, i32 7, i32 0
  %340 = load i32, i32* %339, align 4
  %341 = and i32 %340, 4
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %372, label %343

343:                                              ; preds = %337
  %344 = bitcast %"class.blink::InlineBox"* %338 to %"class.blink::InlineTextBox"*
  %345 = call zeroext i1 @_ZNK5blink13InlineTextBox11IsLineBreakEv(%"class.blink::InlineTextBox"* %344) #11
  br i1 %345, label %346, label %372

346:                                              ; preds = %343
  %347 = load i32, i32* %228, align 8
  %348 = call i1 @llvm.is.constant.i32(i32 %347) #11
  br i1 %348, label %349, label %353

349:                                              ; preds = %346
  %350 = sub i32 0, %347
  %351 = icmp eq i32 %350, -2147483648
  %352 = select i1 %351, i32 2147483647, i32 %350
  br label %358

353:                                              ; preds = %346
  %354 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %347) #11
  %355 = extractvalue { i32, i1 } %354, 1
  %356 = extractvalue { i32, i1 } %354, 0
  %357 = select i1 %355, i32 2147483647, i32 %356
  br label %358

358:                                              ; preds = %349, %353
  %359 = phi i32 [ %352, %349 ], [ %357, %353 ]
  %360 = load i32, i32* %225, align 8
  %361 = icmp slt i32 %359, 0
  %362 = select i1 %361, i32 -2147483648, i32 2147483647
  %363 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %360, i32 %359) #11
  %364 = extractvalue { i32, i1 } %363, 1
  %365 = extractvalue { i32, i1 } %363, 0
  %366 = select i1 %364, i32 %362, i32 %365, !prof !2
  %367 = load i32, i32* %226, align 4
  %368 = zext i32 %367 to i64
  %369 = shl nuw i64 %368, 32
  %370 = zext i32 %366 to i64
  %371 = or i64 %369, %370
  store i64 %371, i64* %297, align 8
  br label %372

372:                                              ; preds = %358, %343, %337
  %373 = or i1 %34, %44
  br i1 %373, label %401, label %374

374:                                              ; preds = %372
  %375 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %18, align 8
  %376 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %375, i64 0, i32 5
  %377 = load i16, i16* %376, align 2
  %378 = icmp eq i16 %377, -1
  br i1 %378, label %401, label %379

379:                                              ; preds = %374
  %380 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %375, i64 0, i32 0, i32 6, i32 0
  %381 = load i32, i32* %380, align 8
  %382 = load i32, i32* %228, align 8
  %383 = icmp sgt i32 %382, -1
  %384 = select i1 %383, i32 -2147483648, i32 2147483647
  %385 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %381, i32 %382) #11
  %386 = extractvalue { i32, i1 } %385, 1
  %387 = extractvalue { i32, i1 } %385, 0
  %388 = select i1 %386, i32 %384, i32 %387, !prof !2
  %389 = load i32, i32* %225, align 8
  %390 = icmp slt i32 %388, 0
  %391 = select i1 %390, i32 -2147483648, i32 2147483647
  %392 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %389, i32 %388) #11
  %393 = extractvalue { i32, i1 } %392, 1
  %394 = extractvalue { i32, i1 } %392, 0
  %395 = select i1 %393, i32 %391, i32 %394, !prof !2
  %396 = load i32, i32* %226, align 4
  %397 = zext i32 %396 to i64
  %398 = shl nuw i64 %397, 32
  %399 = zext i32 %395 to i64
  %400 = or i64 %398, %399
  store i64 %400, i64* %297, align 8
  br label %401

401:                                              ; preds = %372, %374, %379
  %402 = load i64, i64* %297, align 8
  %403 = load i64, i64* %227, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %224) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %102) #11
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %10) #11
  %404 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %405 = icmp eq %"class.WTF::StringImpl"* %404, null
  br i1 %405, label %419, label %406

406:                                              ; preds = %401
  %407 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %404, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %408 = load atomic i32, i32* %407 monotonic, align 4
  %409 = and i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %404, i64 0, i32 0
  %412 = load i32, i32* %411, align 4
  br i1 %410, label %413, label %415

413:                                              ; preds = %406
  %414 = add i32 %412, -1
  store i32 %414, i32* %411, align 4
  br label %415

415:                                              ; preds = %413, %406
  %416 = phi i32 [ %414, %413 ], [ %412, %406 ]
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %418, label %419

418:                                              ; preds = %415
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %404) #11
  br label %419

419:                                              ; preds = %401, %415, %418
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %86) #11
  br label %420

420:                                              ; preds = %6, %419
  %421 = phi i64 [ %403, %419 ], [ 0, %6 ]
  %422 = phi i64 [ %402, %419 ], [ 0, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #11
  %423 = insertvalue { i64, i64 } undef, i64 %422, 0
  %424 = insertvalue { i64, i64 } %423, i64 %421, 1
  ret { i64, i64 } %424
}

declare { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNK5blink13ComputedStyle18ApplyTextTransformEPN3WTF6StringEDs(%"class.blink::ComputedStyle"*, %"class.WTF::String"*, i16 zeroext) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare void @_ZNK5blink13InlineTextBox16ConstructTextRunERKNS_13ComputedStyleEN3WTF10StringViewEiPNS4_13StringBuilderE(%"class.blink::TextRun"* sret, %"class.blink::InlineTextBox"*, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8, i32, %"class.WTF::StringBuilder"*) local_unnamed_addr #3

declare void @_ZN5blink15GraphicsContext9ConcatCTMERKNS_15AffineTransformE(%"class.blink::GraphicsContext"*, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #3

declare void @_ZN5blink15TextPainterBase17TextPaintingStyleERKNS_8DocumentERKNS_13ComputedStyleERKNS_9PaintInfoE(%"struct.blink::TextPaintStyle"* sret, %"class.blink::Document"* dereferenceable(2848), %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::PaintInfo"* dereferenceable(56)) local_unnamed_addr #3

declare void @_ZN5blink15TextPainterBase22SelectionPaintingStyleERKNS_8DocumentERKNS_13ComputedStyleEPNS_4NodeERKNS_9PaintInfoERKNS_14TextPaintStyleE(%"struct.blink::TextPaintStyle"* sret, %"class.blink::Document"* dereferenceable(2848), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Node"*, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::TextPaintStyle"* dereferenceable(64)) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"struct.blink::TextPaintStyle"* @_ZN5blink14TextPaintStyleaSEOS0_(%"struct.blink::TextPaintStyle"*, %"struct.blink::TextPaintStyle"* dereferenceable(64)) local_unnamed_addr #5 comdat align 2 {
  %3 = bitcast %"struct.blink::TextPaintStyle"* %0 to i8*
  %4 = bitcast %"struct.blink::TextPaintStyle"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 32, i1 false)
  %5 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %0, i64 0, i32 7
  %6 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 4, !range !6
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %82, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.absl::optional.2900", %"class.absl::optional.2900"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 4, !range !6
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %54, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %16 = bitcast %"class.blink::AppliedTextDecoration"* %10 to i64*
  %17 = bitcast %"class.blink::AppliedTextDecoration"* %15 to i64*
  %18 = load i64, i64* %16, align 4
  store i64 %18, i64* %17, align 4
  %19 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %20 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %21 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %19, i64 0, i32 0
  %22 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 8
  br i1 %24, label %25, label %27

25:                                               ; preds = %14
  %26 = getelementptr inbounds %"class.blink::TextDecorationThickness", %"class.blink::TextDecorationThickness"* %20, i64 0, i32 0
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %26) #11
  br label %27

27:                                               ; preds = %25, %14
  %28 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %32

31:                                               ; preds = %27
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %21) #11
  br label %32

32:                                               ; preds = %31, %27
  %33 = bitcast %"class.blink::TextDecorationThickness"* %20 to i64*
  %34 = bitcast %"class.blink::TextDecorationThickness"* %19 to i64*
  %35 = load i64, i64* %33, align 4
  store i64 %35, i64* %34, align 4
  %36 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %37 = load i8, i8* %36, align 4, !range !6
  %38 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  store i8 %37, i8* %38, align 4
  %39 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %40 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %41 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 2
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 8
  br i1 %43, label %44, label %45

44:                                               ; preds = %32
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %40) #11
  br label %45

45:                                               ; preds = %44, %32
  %46 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 2
  %47 = load i8, i8* %46, align 1
  %48 = icmp eq i8 %47, 8
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %39) #11
  br label %50

50:                                               ; preds = %45, %49
  %51 = bitcast %"class.blink::Length"* %40 to i64*
  %52 = bitcast %"class.blink::Length"* %39 to i64*
  %53 = load i64, i64* %51, align 4
  store i64 %53, i64* %52, align 4
  br label %99

54:                                               ; preds = %9
  %55 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %56 = bitcast %"class.blink::AppliedTextDecoration"* %10 to i64*
  %57 = bitcast i8* %55 to i64*
  %58 = load i64, i64* %56, align 4
  store i64 %58, i64* %57, align 4
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %61 = bitcast %"class.blink::TextDecorationThickness"* %60 to i64*
  %62 = bitcast i8* %59 to i64*
  %63 = load i64, i64* %61, align 4
  store i64 %63, i64* %62, align 4
  %64 = and i64 %63, 280375465082880
  %65 = icmp eq i64 %64, 8796093022208
  br i1 %65, label %66, label %68

66:                                               ; preds = %54
  %67 = bitcast i8* %59 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %67) #11
  br label %68

68:                                               ; preds = %66, %54
  %69 = getelementptr inbounds i8, i8* %55, i64 16
  %70 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %71 = load i8, i8* %70, align 4, !range !6
  store i8 %71, i8* %69, align 4
  %72 = getelementptr inbounds i8, i8* %55, i64 20
  %73 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %74 = bitcast %"class.blink::Length"* %73 to i64*
  %75 = bitcast i8* %72 to i64*
  %76 = load i64, i64* %74, align 4
  store i64 %76, i64* %75, align 4
  %77 = and i64 %76, 280375465082880
  %78 = icmp eq i64 %77, 8796093022208
  br i1 %78, label %79, label %81

79:                                               ; preds = %68
  %80 = bitcast i8* %72 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %80) #11
  br label %81

81:                                               ; preds = %79, %68
  store i8 1, i8* %11, align 4
  br label %99

82:                                               ; preds = %2
  %83 = getelementptr inbounds %"class.absl::optional.2900", %"class.absl::optional.2900"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8, i8* %83, align 4, !range !6
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 2
  %88 = load i8, i8* %87, align 1
  %89 = icmp eq i8 %88, 8
  br i1 %89, label %90, label %92

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %91) #11
  br label %92

92:                                               ; preds = %90, %86
  %93 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 2
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 8
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %97) #11
  br label %98

98:                                               ; preds = %96, %92
  store i8 0, i8* %83, align 4
  br label %99

99:                                               ; preds = %81, %50, %82, %98
  ret %"struct.blink::TextPaintStyle"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20InlineTextBoxPainter21ComputeMarkersToPaintEv(%"class.blink::HeapVector.2905"* noalias sret, %"class.blink::InlineTextBoxPainter"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %1, i64 0, i32 0
  %4 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %4, i64 0, i32 0, i32 4, i32 0
  %6 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = and i96 %9, 16777216
  %11 = icmp eq i96 %10, 0
  br i1 %11, label %12, label %21

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 12
  %20 = icmp eq i32 %19, 4
  br i1 %20, label %23, label %21

21:                                               ; preds = %16, %2, %12
  %22 = bitcast %"class.blink::HeapVector.2905"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  br label %31

23:                                               ; preds = %16
  %24 = bitcast %"class.blink::Node"* %14 to %"class.blink::Text"*
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %28, i64 0, i32 81, i32 0, i32 0
  %30 = load %"class.blink::DocumentMarkerController"*, %"class.blink::DocumentMarkerController"** %29, align 8
  tail call void @_ZNK5blink24DocumentMarkerController21ComputeMarkersToPaintERKNS_4TextE(%"class.blink::HeapVector.2905"* sret %0, %"class.blink::DocumentMarkerController"* %30, %"class.blink::Text"* nonnull dereferenceable(88) %24) #11
  br label %31

31:                                               ; preds = %23, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InlineTextBoxPainter20PaintDocumentMarkersERKNS_10HeapVectorINS_6MemberINS_14DocumentMarkerEEELj0EEERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_13ComputedStyleERKNS_4FontENS_24DocumentMarkerPaintPhaseE(%"class.blink::InlineTextBoxPainter"* nocapture readonly, %"class.blink::HeapVector.2905"* nocapture readonly dereferenceable(16), %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Font"* dereferenceable(88), i32) local_unnamed_addr #2 align 2 {
  %8 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %0, i64 0, i32 0
  %9 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %9, i64 0, i32 0, i32 4, i32 0
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 4
  %13 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %12 to i96*
  %14 = load i96, i96* %13, align 4
  %15 = and i96 %14, 16777216
  %16 = icmp eq i96 %15, 0
  br i1 %16, label %17, label %104

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 6, i32 0, i32 0
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %20, label %104, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::HeapVector.2905", %"class.blink::HeapVector.2905"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::HeapVector.2905", %"class.blink::HeapVector.2905"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %104, label %26

26:                                               ; preds = %21
  %27 = load %"class.blink::Member.2911"*, %"class.blink::Member.2911"** %22, align 8
  %28 = icmp eq i32 %6, 1
  %29 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %2, i64 0, i32 0
  br label %30

30:                                               ; preds = %102, %26
  %31 = phi %"class.blink::InlineTextBox"* [ %9, %26 ], [ %103, %102 ]
  %32 = phi %"class.blink::Member.2911"* [ %27, %26 ], [ %96, %102 ]
  %33 = getelementptr inbounds %"class.blink::Member.2911", %"class.blink::Member.2911"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.blink::DocumentMarker"*, %"class.blink::DocumentMarker"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::DocumentMarker", %"class.blink::DocumentMarker"* %34, i64 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %31, i64 0, i32 3
  %38 = load i32, i32* %37, align 8
  %39 = icmp ugt i32 %36, %38
  br i1 %39, label %40, label %95

40:                                               ; preds = %30
  %41 = getelementptr inbounds %"class.blink::DocumentMarker", %"class.blink::DocumentMarker"* %34, i64 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %31, i64 0, i32 4
  %44 = load i16, i16* %43, align 4
  %45 = icmp eq i16 %44, 0
  %46 = zext i16 %44 to i32
  %47 = add nsw i32 %46, -1
  %48 = select i1 %45, i32 0, i32 %47
  %49 = add i32 %48, %38
  %50 = icmp ugt i32 %42, %49
  br i1 %50, label %95, label %51

51:                                               ; preds = %40
  %52 = bitcast %"class.blink::DocumentMarker"* %34 to i32 (%"class.blink::DocumentMarker"*)***
  %53 = load i32 (%"class.blink::DocumentMarker"*)**, i32 (%"class.blink::DocumentMarker"*)*** %52, align 8
  %54 = getelementptr inbounds i32 (%"class.blink::DocumentMarker"*)*, i32 (%"class.blink::DocumentMarker"*)** %53, i64 2
  %55 = load i32 (%"class.blink::DocumentMarker"*)*, i32 (%"class.blink::DocumentMarker"*)** %54, align 8
  %56 = tail call i32 %55(%"class.blink::DocumentMarker"* %34) #11
  switch i32 %56, label %95 [
    i32 1, label %57
    i32 2, label %64
    i32 64, label %71
    i32 4, label %71
    i32 8, label %82
    i32 16, label %82
    i32 32, label %82
  ]

57:                                               ; preds = %51
  br i1 %28, label %95, label %58

58:                                               ; preds = %57
  %59 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %8, align 8
  %60 = bitcast %"class.blink::InlineTextBox"* %59 to void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::DocumentMarker"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*, i1)***
  %61 = load void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::DocumentMarker"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*, i1)**, void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::DocumentMarker"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*, i1)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::DocumentMarker"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*, i1)*, void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::DocumentMarker"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*, i1)** %61, i64 34
  %63 = load void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::DocumentMarker"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*, i1)*, void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::DocumentMarker"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*, i1)** %62, align 8
  tail call void %63(%"class.blink::InlineTextBox"* %59, %"struct.blink::PaintInfo"* dereferenceable(56) %2, %"struct.blink::PhysicalOffset"* dereferenceable(8) %3, %"class.blink::DocumentMarker"* dereferenceable(16) %34, %"class.blink::ComputedStyle"* dereferenceable(104) %4, %"class.blink::Font"* dereferenceable(88) %5, i1 zeroext false) #11
  br label %95

64:                                               ; preds = %51
  br i1 %28, label %95, label %65

65:                                               ; preds = %64
  %66 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %8, align 8
  %67 = bitcast %"class.blink::InlineTextBox"* %66 to void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::DocumentMarker"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*, i1)***
  %68 = load void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::DocumentMarker"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*, i1)**, void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::DocumentMarker"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*, i1)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::DocumentMarker"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*, i1)*, void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::DocumentMarker"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*, i1)** %68, i64 34
  %70 = load void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::DocumentMarker"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*, i1)*, void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::DocumentMarker"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*, i1)** %69, align 8
  tail call void %70(%"class.blink::InlineTextBox"* %66, %"struct.blink::PaintInfo"* dereferenceable(56) %2, %"struct.blink::PhysicalOffset"* dereferenceable(8) %3, %"class.blink::DocumentMarker"* dereferenceable(16) %34, %"class.blink::ComputedStyle"* dereferenceable(104) %4, %"class.blink::Font"* dereferenceable(88) %5, i1 zeroext true) #11
  br label %95

71:                                               ; preds = %51, %51
  %72 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %8, align 8
  %73 = bitcast %"class.blink::DocumentMarker"* %34 to %"class.blink::TextMarkerBase"*
  %74 = bitcast %"class.blink::InlineTextBox"* %72 to void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::TextMarkerBase"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*)***
  %75 = load void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::TextMarkerBase"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*)**, void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::TextMarkerBase"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*)*** %74, align 8
  br i1 %28, label %76, label %79

76:                                               ; preds = %71
  %77 = getelementptr inbounds void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::TextMarkerBase"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*)*, void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::TextMarkerBase"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*)** %75, i64 36
  %78 = load void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::TextMarkerBase"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*)*, void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::TextMarkerBase"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*)** %77, align 8
  tail call void %78(%"class.blink::InlineTextBox"* %72, %"struct.blink::PaintInfo"* dereferenceable(56) %2, %"struct.blink::PhysicalOffset"* dereferenceable(8) %3, %"class.blink::TextMarkerBase"* dereferenceable(16) %73, %"class.blink::ComputedStyle"* dereferenceable(104) %4, %"class.blink::Font"* dereferenceable(88) %5) #11
  br label %95

79:                                               ; preds = %71
  %80 = getelementptr inbounds void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::TextMarkerBase"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*)*, void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::TextMarkerBase"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*)** %75, i64 35
  %81 = load void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::TextMarkerBase"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*)*, void (%"class.blink::InlineTextBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*, %"class.blink::TextMarkerBase"*, %"class.blink::ComputedStyle"*, %"class.blink::Font"*)** %80, align 8
  tail call void %81(%"class.blink::InlineTextBox"* %72, %"struct.blink::PaintInfo"* dereferenceable(56) %2, %"struct.blink::PhysicalOffset"* dereferenceable(8) %3, %"class.blink::TextMarkerBase"* dereferenceable(16) %73, %"class.blink::ComputedStyle"* dereferenceable(104) %4, %"class.blink::Font"* dereferenceable(88) %5) #11
  br label %95

82:                                               ; preds = %51, %51, %51
  %83 = bitcast %"class.blink::DocumentMarker"* %34 to %"class.blink::StyleableMarker"*
  br i1 %28, label %84, label %91

84:                                               ; preds = %82
  %85 = tail call i64 @_ZN5blink20InlineTextBoxPainter22MarkerPaintStartAndEndERKNS_14DocumentMarkerE(%"class.blink::InlineTextBoxPainter"* %0, %"class.blink::DocumentMarker"* dereferenceable(16) %34)
  %86 = trunc i64 %85 to i32
  %87 = lshr i64 %85, 32
  %88 = trunc i64 %87 to i32
  %89 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %29, align 8
  %90 = tail call i32 @_ZNK5blink15StyleableMarker15BackgroundColorEv(%"class.blink::StyleableMarker"* %83) #11
  tail call void @_ZN5blink20InlineTextBoxPainter30PaintSingleMarkerBackgroundRunERNS_15GraphicsContextERKNS_14PhysicalOffsetERKNS_13ComputedStyleERKNS_4FontENS_5ColorEii(%"class.blink::InlineTextBoxPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %89, %"struct.blink::PhysicalOffset"* dereferenceable(8) %3, %"class.blink::ComputedStyle"* dereferenceable(104) %4, %"class.blink::Font"* dereferenceable(88) %5, i32 %90, i32 %86, i32 %88)
  br label %95

91:                                               ; preds = %82
  %92 = tail call zeroext i1 @_ZN5blink21DocumentMarkerPainter26ShouldPaintMarkerUnderlineERKNS_15StyleableMarkerE(%"class.blink::StyleableMarker"* dereferenceable(40) %83) #11
  br i1 %92, label %93, label %95

93:                                               ; preds = %91
  %94 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %29, align 8
  tail call void @_ZN5blink20InlineTextBoxPainter29PaintStyleableMarkerUnderlineERNS_15GraphicsContextERKNS_14PhysicalOffsetERKNS_15StyleableMarkerERKNS_13ComputedStyleERKNS_4FontE(%"class.blink::InlineTextBoxPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %94, %"struct.blink::PhysicalOffset"* dereferenceable(8) %3, %"class.blink::StyleableMarker"* dereferenceable(40) %83, %"class.blink::ComputedStyle"* dereferenceable(104) %4, %"class.blink::Font"* dereferenceable(88) %5)
  br label %95

95:                                               ; preds = %58, %65, %79, %76, %51, %91, %93, %84, %64, %57, %40, %30
  %96 = getelementptr inbounds %"class.blink::Member.2911", %"class.blink::Member.2911"* %32, i64 1
  %97 = load %"class.blink::Member.2911"*, %"class.blink::Member.2911"** %22, align 8
  %98 = load i32, i32* %23, align 4
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds %"class.blink::Member.2911", %"class.blink::Member.2911"* %97, i64 %99
  %101 = icmp eq %"class.blink::Member.2911"* %96, %100
  br i1 %101, label %104, label %102

102:                                              ; preds = %95
  %103 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %8, align 8
  br label %30

104:                                              ; preds = %95, %21, %7, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZN5blink20InlineTextBoxPainter14PaintSelectionILNS0_12PaintOptionsE1EEENS_12PhysicalRectERNS_15GraphicsContextERKS3_RKNS_13ComputedStyleERKNS_4FontENS_5ColorEPNS_17LayoutTextCombineE(%"class.blink::InlineTextBoxPainter"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Font"* dereferenceable(88), i32, %"class.blink::LayoutTextCombine"*) local_unnamed_addr #2 comdat align 2 {
  %8 = alloca %"class.blink::Color", align 4
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %"class.blink::FloatRect"*
  %11 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %0, i64 0, i32 0
  %12 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %12, i64 0, i32 0, i32 4, i32 0
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = bitcast %"class.blink::Color"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %8, i64 0, i32 0
  store i32 -1431655766, i32* %16, align 4
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 6, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %20, label %27

20:                                               ; preds = %7, %20
  %21 = phi %"class.blink::LayoutObject"* [ %23, %20 ], [ %14, %7 ]
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 0, i32 7
  %23 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 6, i32 0, i32 0
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %24, align 8
  %26 = icmp eq %"class.blink::Node"* %25, null
  br i1 %26, label %20, label %27

27:                                               ; preds = %20, %7
  %28 = phi %"class.blink::Node"* [ %18, %7 ], [ %25, %20 ]
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %30, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::Document"*, %"class.blink::Document"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 5, i32 0
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 4
  %36 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %35 to i96*
  %37 = load i96, i96* %36, align 4
  %38 = and i96 %37, 16777216
  %39 = icmp eq i96 %38, 0
  %40 = select i1 %39, %"class.blink::Node"* %18, %"class.blink::Node"* null
  %41 = tail call i32 @_ZN5blink22HighlightPaintingUtils24HighlightBackgroundColorERKNS_8DocumentERKNS_13ComputedStyleEPNS_4NodeENS_8PseudoIdE(%"class.blink::Document"* dereferenceable(2848) %32, %"class.blink::ComputedStyle"* dereferenceable(104) %34, %"class.blink::Node"* %40, i8 zeroext 7) #11
  store i32 %41, i32* %16, align 4
  %42 = icmp ult i32 %41, 16777216
  br i1 %42, label %80, label %43

43:                                               ; preds = %27
  %44 = tail call { i64, i64 } @_ZN5blink20InlineTextBoxPainter16GetSelectionRectILNS0_12PaintOptionsE1EEENS_12PhysicalRectERNS_15GraphicsContextERKS3_RKNS_13ComputedStyleERKNS_4FontEPNS_17LayoutTextCombineE(%"class.blink::InlineTextBoxPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %1, %"struct.blink::PhysicalRect"* dereferenceable(16) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %3, %"class.blink::Font"* dereferenceable(88) %4, %"class.blink::LayoutTextCombine"* %6)
  %45 = extractvalue { i64, i64 } %44, 0
  %46 = trunc i64 %45 to i32
  %47 = lshr i64 %45, 32
  %48 = trunc i64 %47 to i32
  %49 = extractvalue { i64, i64 } %44, 1
  %50 = icmp eq i32 %41, %5
  br i1 %50, label %51, label %61

51:                                               ; preds = %43
  %52 = lshr i32 %5, 16
  %53 = and i32 %52, 255
  %54 = xor i32 %53, 255
  %55 = lshr i32 %5, 8
  %56 = and i32 %55, 255
  %57 = xor i32 %56, 255
  %58 = and i32 %5, 255
  %59 = xor i32 %58, 255
  %60 = tail call i32 @_ZN5blink7MakeRGBEiii(i32 %54, i32 %57, i32 %59) #11
  store i32 %60, i32* %16, align 4
  br label %61

61:                                               ; preds = %51, %43
  tail call void @_ZN5blink15GraphicsContext4SaveEv(%"class.blink::GraphicsContext"* %1) #11
  %62 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #11
  %63 = sitofp i32 %46 to float
  %64 = fmul float %63, 1.562500e-02
  %65 = sitofp i32 %48 to float
  %66 = fmul float %65, 1.562500e-02
  %67 = trunc i64 %49 to i32
  %68 = sitofp i32 %67 to float
  %69 = fmul float %68, 1.562500e-02
  %70 = lshr i64 %49, 32
  %71 = trunc i64 %70 to i32
  %72 = sitofp i32 %71 to float
  %73 = fmul float %72, 1.562500e-02
  %74 = insertelement <2 x float> undef, float %64, i32 0
  %75 = insertelement <2 x float> %74, float %66, i32 1
  %76 = insertelement <2 x float> undef, float %69, i32 0
  %77 = insertelement <2 x float> %76, float %73, i32 1
  %78 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  store <2 x float> %75, <2 x float>* %78, align 8
  %79 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  store <2 x float> %77, <2 x float>* %79, align 8
  call void @_ZN5blink15GraphicsContext8FillRectERKNS_9FloatRectERKNS_5ColorE11SkBlendModeNS_14DarkModeFilter11ElementRoleE(%"class.blink::GraphicsContext"* %1, %"class.blink::FloatRect"* nonnull dereferenceable(16) %10, %"class.blink::Color"* nonnull dereferenceable(4) %8, i32 3, i32 2) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #11
  call void @_ZN5blink15GraphicsContext7RestoreEv(%"class.blink::GraphicsContext"* %1) #11
  br label %80

80:                                               ; preds = %27, %61
  %81 = phi i64 [ %49, %61 ], [ 0, %27 ]
  %82 = phi i64 [ %45, %61 ], [ 0, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #11
  %83 = insertvalue { i64, i64 } undef, i64 %82, 0
  %84 = insertvalue { i64, i64 } %83, i64 %81, 1
  ret { i64, i64 } %84
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZN5blink20InlineTextBoxPainter14PaintSelectionILNS0_12PaintOptionsE0EEENS_12PhysicalRectERNS_15GraphicsContextERKS3_RKNS_13ComputedStyleERKNS_4FontENS_5ColorEPNS_17LayoutTextCombineE(%"class.blink::InlineTextBoxPainter"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Font"* dereferenceable(88), i32, %"class.blink::LayoutTextCombine"*) local_unnamed_addr #2 comdat align 2 {
  %8 = alloca %"class.blink::Color", align 4
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast { <2 x float>, <2 x float> }* %9 to %"class.blink::FloatRect"*
  %11 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %0, i64 0, i32 0
  %12 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %12, i64 0, i32 0, i32 4, i32 0
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = bitcast %"class.blink::Color"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %8, i64 0, i32 0
  store i32 -1431655766, i32* %16, align 4
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 6, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %20, label %27

20:                                               ; preds = %7, %20
  %21 = phi %"class.blink::LayoutObject"* [ %23, %20 ], [ %14, %7 ]
  %22 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 0, i32 7
  %23 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 6, i32 0, i32 0
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %24, align 8
  %26 = icmp eq %"class.blink::Node"* %25, null
  br i1 %26, label %20, label %27

27:                                               ; preds = %20, %7
  %28 = phi %"class.blink::Node"* [ %18, %7 ], [ %25, %20 ]
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %30, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::Document"*, %"class.blink::Document"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 5, i32 0
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 4
  %36 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %35 to i96*
  %37 = load i96, i96* %36, align 4
  %38 = and i96 %37, 16777216
  %39 = icmp eq i96 %38, 0
  %40 = select i1 %39, %"class.blink::Node"* %18, %"class.blink::Node"* null
  %41 = tail call i32 @_ZN5blink22HighlightPaintingUtils24HighlightBackgroundColorERKNS_8DocumentERKNS_13ComputedStyleEPNS_4NodeENS_8PseudoIdE(%"class.blink::Document"* dereferenceable(2848) %32, %"class.blink::ComputedStyle"* dereferenceable(104) %34, %"class.blink::Node"* %40, i8 zeroext 7) #11
  store i32 %41, i32* %16, align 4
  %42 = icmp ult i32 %41, 16777216
  br i1 %42, label %80, label %43

43:                                               ; preds = %27
  %44 = tail call { i64, i64 } @_ZN5blink20InlineTextBoxPainter16GetSelectionRectILNS0_12PaintOptionsE0EEENS_12PhysicalRectERNS_15GraphicsContextERKS3_RKNS_13ComputedStyleERKNS_4FontEPNS_17LayoutTextCombineE(%"class.blink::InlineTextBoxPainter"* %0, %"class.blink::GraphicsContext"* dereferenceable(112) %1, %"struct.blink::PhysicalRect"* dereferenceable(16) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %3, %"class.blink::Font"* dereferenceable(88) %4, %"class.blink::LayoutTextCombine"* %6)
  %45 = extractvalue { i64, i64 } %44, 0
  %46 = trunc i64 %45 to i32
  %47 = lshr i64 %45, 32
  %48 = trunc i64 %47 to i32
  %49 = extractvalue { i64, i64 } %44, 1
  %50 = icmp eq i32 %41, %5
  br i1 %50, label %51, label %61

51:                                               ; preds = %43
  %52 = lshr i32 %5, 16
  %53 = and i32 %52, 255
  %54 = xor i32 %53, 255
  %55 = lshr i32 %5, 8
  %56 = and i32 %55, 255
  %57 = xor i32 %56, 255
  %58 = and i32 %5, 255
  %59 = xor i32 %58, 255
  %60 = tail call i32 @_ZN5blink7MakeRGBEiii(i32 %54, i32 %57, i32 %59) #11
  store i32 %60, i32* %16, align 4
  br label %61

61:                                               ; preds = %51, %43
  tail call void @_ZN5blink15GraphicsContext4SaveEv(%"class.blink::GraphicsContext"* %1) #11
  %62 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %62) #11
  %63 = sitofp i32 %46 to float
  %64 = fmul float %63, 1.562500e-02
  %65 = sitofp i32 %48 to float
  %66 = fmul float %65, 1.562500e-02
  %67 = trunc i64 %49 to i32
  %68 = sitofp i32 %67 to float
  %69 = fmul float %68, 1.562500e-02
  %70 = lshr i64 %49, 32
  %71 = trunc i64 %70 to i32
  %72 = sitofp i32 %71 to float
  %73 = fmul float %72, 1.562500e-02
  %74 = insertelement <2 x float> undef, float %64, i32 0
  %75 = insertelement <2 x float> %74, float %66, i32 1
  %76 = insertelement <2 x float> undef, float %69, i32 0
  %77 = insertelement <2 x float> %76, float %73, i32 1
  %78 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  store <2 x float> %75, <2 x float>* %78, align 8
  %79 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  store <2 x float> %77, <2 x float>* %79, align 8
  call void @_ZN5blink15GraphicsContext8FillRectERKNS_9FloatRectERKNS_5ColorE11SkBlendModeNS_14DarkModeFilter11ElementRoleE(%"class.blink::GraphicsContext"* %1, %"class.blink::FloatRect"* nonnull dereferenceable(16) %10, %"class.blink::Color"* nonnull dereferenceable(4) %8, i32 3, i32 2) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %62) #11
  call void @_ZN5blink15GraphicsContext7RestoreEv(%"class.blink::GraphicsContext"* %1) #11
  br label %80

80:                                               ; preds = %27, %61
  %81 = phi i64 [ %49, %61 ], [ 0, %27 ]
  %82 = phi i64 [ %45, %61 ], [ 0, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #11
  %83 = insertvalue { i64, i64 } undef, i64 %82, 0
  %84 = insertvalue { i64, i64 } %83, i64 %81, 1
  ret { i64, i64 } %84
}

declare zeroext i1 @_ZNK5blink12PhysicalRect8ContainsERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #3

declare { i64, i64 } @_ZNK5blink15AffineTransform7MapRectERKNS_7IntRectE(%"class.blink::AffineTransform"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZNK5blink13InlineTextBox17SelectionStartEndERiS1_(%"class.blink::InlineTextBox"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink20InlineTextBoxPainter29ApplyTruncationToPaintOffsetsERKNS0_12PaintOffsetsE(%"class.blink::InlineTextBoxPainter"* nocapture readonly, %"struct.blink::InlineTextBoxPainter::PaintOffsets"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %0, i64 0, i32 0
  %4 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %4, i64 0, i32 5
  %6 = load i16, i16* %5, align 2
  %7 = zext i16 %6 to i32
  %8 = icmp eq i16 %6, -1
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.blink::InlineTextBoxPainter::PaintOffsets", %"struct.blink::InlineTextBoxPainter::PaintOffsets"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.blink::InlineTextBoxPainter::PaintOffsets", %"struct.blink::InlineTextBoxPainter::PaintOffsets"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %46

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %4, i64 0, i32 0, i32 7, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = and i32 %16, 4
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %4, i64 0, i32 0, i32 4, i32 0
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %20, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #11
  %22 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %21, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %23 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 9
  %25 = bitcast [20 x i8]* %24 to i160*
  %26 = load i160, i160* %25, align 8
  %27 = and i160 %26, 41538374868278621028243970633760768
  %28 = icmp eq i160 %27, 0
  %29 = xor i1 %18, %28
  %30 = getelementptr inbounds %"struct.blink::InlineTextBoxPainter::PaintOffsets", %"struct.blink::InlineTextBoxPainter::PaintOffsets"* %1, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %39, label %32

32:                                               ; preds = %14
  %33 = icmp ugt i32 %31, %7
  %34 = select i1 %33, i32 %7, i32 %31
  %35 = getelementptr inbounds %"struct.blink::InlineTextBoxPainter::PaintOffsets", %"struct.blink::InlineTextBoxPainter::PaintOffsets"* %1, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp ugt i32 %36, %7
  %38 = select i1 %37, i32 %7, i32 %36
  br label %46

39:                                               ; preds = %14
  %40 = icmp ult i32 %31, %7
  %41 = select i1 %40, i32 %7, i32 %31
  %42 = getelementptr inbounds %"struct.blink::InlineTextBoxPainter::PaintOffsets", %"struct.blink::InlineTextBoxPainter::PaintOffsets"* %1, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp ult i32 %43, %7
  %45 = select i1 %44, i32 %7, i32 %43
  br label %46

46:                                               ; preds = %32, %39, %9
  %47 = phi i32 [ %11, %9 ], [ %34, %32 ], [ %41, %39 ]
  %48 = phi i32 [ %13, %9 ], [ %38, %32 ], [ %45, %39 ]
  %49 = zext i32 %48 to i64
  %50 = shl nuw i64 %49, 32
  %51 = zext i32 %47 to i64
  %52 = or i64 %50, %51
  ret i64 %52
}

declare void @_ZNK5blink4Font33ExpandRangeToIncludePartialGlyphsERKNS_7TextRunEPiS4_(%"class.blink::Font"*, %"class.blink::TextRun"* dereferenceable(40), i32*, i32*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink13InlineTextBox23GetEmphasisMarkPositionERKNS_13ComputedStyleERNS_20TextEmphasisPositionE(%"class.blink::InlineTextBox"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32* dereferenceable(4)) local_unnamed_addr #3

declare void @_ZN5blink15TextPainterBase15SetEmphasisMarkERKN3WTF12AtomicStringENS_20TextEmphasisPositionE(%"class.blink::TextPainterBase"*, %"class.WTF::AtomicString"* dereferenceable(8), i32) local_unnamed_addr #3

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ComputedStyle22TextEmphasisMarkStringEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #3

declare i32 @_ZNK5blink13ComputedStyle23TextDecorationsInEffectEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"*) local_unnamed_addr #3

declare void @_ZN5blink11TextPainter33PaintDecorationsExceptLineThroughERKNS_24TextDecorationOffsetBaseERNS_18TextDecorationInfoERKNS_9PaintInfoERKN3WTF6VectorINS_21AppliedTextDecorationELj0ENS9_18PartitionAllocatorEEERKNS_14TextPaintStyleEPb(%"class.blink::TextPainter"*, %"class.blink::TextDecorationOffsetBase"* dereferenceable(16), %"class.blink::TextDecorationInfo"* dereferenceable(224), %"struct.blink::PaintInfo"* dereferenceable(56), %"class.WTF::Vector.254"* dereferenceable(16), %"struct.blink::TextPaintStyle"* dereferenceable(64), i8*) local_unnamed_addr #3

declare dereferenceable(16) %"class.WTF::Vector.254"* @_ZNK5blink13ComputedStyle22AppliedTextDecorationsEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #3

declare void @_ZN5blink11TextPainter5PaintEjjjRKNS_14TextPaintStyleEi(%"class.blink::TextPainter"*, i32, i32, i32, %"struct.blink::TextPaintStyle"* dereferenceable(64), i32) local_unnamed_addr #3

declare void @_ZN5blink11TextPainter31PaintDecorationsOnlyLineThroughERNS_18TextDecorationInfoERKNS_9PaintInfoERKN3WTF6VectorINS_21AppliedTextDecorationELj0ENS6_18PartitionAllocatorEEERKNS_14TextPaintStyleE(%"class.blink::TextPainter"*, %"class.blink::TextDecorationInfo"* dereferenceable(224), %"struct.blink::PaintInfo"* dereferenceable(56), %"class.WTF::Vector.254"* dereferenceable(16), %"struct.blink::TextPaintStyle"* dereferenceable(64)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink15TextPainterBaseD2Ev(%"class.blink::TextPainterBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink20InlineTextBoxPainter22MarkerPaintStartAndEndERKNS_14DocumentMarkerE(%"class.blink::InlineTextBoxPainter"* nocapture readonly, %"class.blink::DocumentMarker"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %0, i64 0, i32 0
  %4 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %4, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %4, i64 0, i32 0, i32 4, i32 0
  %8 = bitcast %"class.blink::LayoutObject"** %7 to %"class.blink::LayoutText"**
  %9 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %8, align 8
  %10 = bitcast %"class.blink::LayoutText"* %9 to i32 (%"class.blink::LayoutText"*)***
  %11 = load i32 (%"class.blink::LayoutText"*)**, i32 (%"class.blink::LayoutText"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %11, i64 109
  %13 = load i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::LayoutText"* %9) #11
  %15 = add i32 %14, %6
  %16 = getelementptr inbounds %"class.blink::DocumentMarker", %"class.blink::DocumentMarker"* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %15, %17
  %19 = select i1 %18, i32 %17, i32 %15
  %20 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %3, align 8
  %21 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %20, i64 0, i32 4
  %22 = load i16, i16* %21, align 4
  %23 = icmp eq i16 %22, 0
  %24 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %20, i64 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = zext i16 %22 to i32
  %27 = add nsw i32 %26, -1
  %28 = select i1 %23, i32 0, i32 %27
  %29 = add i32 %28, %25
  %30 = icmp ult i32 %29, %19
  %31 = select i1 %30, i32 %29, i32 %19
  %32 = add i32 %29, 1
  %33 = getelementptr inbounds %"class.blink::DocumentMarker", %"class.blink::DocumentMarker"* %1, i64 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp ult i32 %34, %32
  %36 = select i1 %35, i32 %34, i32 %32
  %37 = sub i32 %31, %15
  %38 = sub i32 %36, %15
  %39 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %20, i64 0, i32 5
  %40 = load i16, i16* %39, align 2
  %41 = zext i16 %40 to i32
  %42 = icmp eq i16 %40, -1
  br i1 %42, label %69, label %43

43:                                               ; preds = %2
  %44 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %20, i64 0, i32 0, i32 7, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 4
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %20, i64 0, i32 0, i32 4, i32 0
  %49 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %48, align 8
  %50 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %49, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #11
  %51 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %50, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 9
  %54 = bitcast [20 x i8]* %53 to i160*
  %55 = load i160, i160* %54, align 8
  %56 = and i160 %55, 41538374868278621028243970633760768
  %57 = icmp eq i160 %56, 0
  %58 = xor i1 %47, %57
  br i1 %58, label %64, label %59

59:                                               ; preds = %43
  %60 = icmp ugt i32 %37, %41
  %61 = select i1 %60, i32 %41, i32 %37
  %62 = icmp ugt i32 %38, %41
  %63 = select i1 %62, i32 %41, i32 %38
  br label %69

64:                                               ; preds = %43
  %65 = icmp ult i32 %37, %41
  %66 = select i1 %65, i32 %41, i32 %37
  %67 = icmp ult i32 %38, %41
  %68 = select i1 %67, i32 %41, i32 %38
  br label %69

69:                                               ; preds = %2, %59, %64
  %70 = phi i32 [ %61, %59 ], [ %66, %64 ], [ %37, %2 ]
  %71 = phi i32 [ %63, %59 ], [ %68, %64 ], [ %38, %2 ]
  %72 = zext i32 %71 to i64
  %73 = shl nuw i64 %72, 32
  %74 = zext i32 %70 to i64
  %75 = or i64 %73, %74
  ret i64 %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InlineTextBoxPainter30PaintSingleMarkerBackgroundRunERNS_15GraphicsContextERKNS_14PhysicalOffsetERKNS_13ComputedStyleERKNS_4FontENS_5ColorEii(%"class.blink::InlineTextBoxPainter"* nocapture readonly, %"class.blink::GraphicsContext"* dereferenceable(112), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Font"* dereferenceable(88), i32, i32, i32) local_unnamed_addr #2 align 2 {
  %9 = alloca %"class.blink::Color", align 4
  %10 = alloca %"class.blink::FloatPoint", align 4
  %11 = alloca %"class.blink::TextRun", align 8
  %12 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %9, i64 0, i32 0
  store i32 %5, i32* %12, align 4
  %13 = icmp eq i32 %5, 0
  br i1 %13, label %99, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %0, i64 0, i32 0
  %16 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %16, i64 0, i32 0, i32 4, i32 0
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 5, i32 0
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8
  %24 = and i160 %23, 15211807202738752817960438464512
  %25 = icmp eq i160 %24, 10141204801825835211973625643008
  %26 = bitcast %"class.blink::InlineTextBoxPainter"* %0 to %"class.blink::InlineBox"**
  %27 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %16, i64 0, i32 0
  br i1 %25, label %28, label %50

28:                                               ; preds = %14
  %29 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %27) #11
  %30 = tail call i32 @_ZNK5blink13RootInlineBox15SelectionBottomEv(%"class.blink::RootInlineBox"* %29) #11
  %31 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %26, align 8
  %32 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %31, i64 0, i32 7, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 2048
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %31, i64 0, i32 5, i32 1, i32 0
  %37 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %31, i64 0, i32 5, i32 0, i32 0
  %38 = select i1 %35, i32* %37, i32* %36
  %39 = load i32, i32* %38, align 4
  %40 = tail call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %31) #11
  %41 = icmp slt i32 %40, 0
  %42 = select i1 %41, i32 -2147483648, i32 2147483647
  %43 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %39, i32 %40) #11
  %44 = extractvalue { i32, i1 } %43, 1
  %45 = extractvalue { i32, i1 } %43, 0
  %46 = select i1 %44, i32 %42, i32 %45, !prof !2
  %47 = icmp sgt i32 %46, -1
  %48 = select i1 %47, i32 -2147483648, i32 2147483647
  %49 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %30, i32 %46) #11
  br label %64

50:                                               ; preds = %14
  %51 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %16, i64 0, i32 0, i32 7, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = and i32 %52, 2048
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %16, i64 0, i32 0, i32 5, i32 1, i32 0
  %56 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %16, i64 0, i32 0, i32 5, i32 0, i32 0
  %57 = select i1 %54, i32* %56, i32* %55
  %58 = load i32, i32* %57, align 4
  %59 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %27) #11
  %60 = tail call i32 @_ZNK5blink13RootInlineBox12SelectionTopEv(%"class.blink::RootInlineBox"* %59) #11
  %61 = icmp sgt i32 %60, -1
  %62 = select i1 %61, i32 -2147483648, i32 2147483647
  %63 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %58, i32 %60) #11
  br label %64

64:                                               ; preds = %50, %28
  %65 = phi { i32, i1 } [ %63, %50 ], [ %49, %28 ]
  %66 = phi i32 [ %62, %50 ], [ %48, %28 ]
  %67 = extractvalue { i32, i1 } %65, 1
  %68 = extractvalue { i32, i1 } %65, 0
  %69 = select i1 %67, i32 %66, i32 %68
  %70 = sdiv i32 %69, 64
  %71 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %26, align 8
  %72 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %71) #11
  %73 = tail call i32 @_ZNK5blink13RootInlineBox15SelectionBottomEv(%"class.blink::RootInlineBox"* %72) #11
  %74 = tail call i32 @_ZNK5blink13RootInlineBox12SelectionTopEv(%"class.blink::RootInlineBox"* %72) #11
  %75 = icmp sgt i32 %74, -1
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %73, i32 %74) #11
  %78 = extractvalue { i32, i1 } %77, 1
  %79 = extractvalue { i32, i1 } %77, 0
  %80 = select i1 %78, i32 %76, i32 %79, !prof !2
  %81 = icmp sgt i32 %80, 0
  %82 = select i1 %81, i32 %80, i32 0
  %83 = lshr i32 %82, 6
  %84 = bitcast %"class.blink::FloatPoint"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #11
  %85 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %10, i64 0, i32 0
  %86 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %10, i64 0, i32 1
  %87 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = sitofp i32 %88 to float
  %90 = fmul float %89, 1.562500e-02
  %91 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = sitofp i32 %92 to float
  %94 = fmul float %93, 1.562500e-02
  %95 = sitofp i32 %70 to float
  %96 = fsub float %94, %95
  store float %90, float* %85, align 4
  store float %96, float* %86, align 4
  %97 = bitcast %"class.blink::TextRun"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %97) #11
  %98 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %15, align 8
  call void @_ZNK5blink13InlineTextBox16ConstructTextRunERKNS_13ComputedStyleEPN3WTF13StringBuilderE(%"class.blink::TextRun"* nonnull sret %11, %"class.blink::InlineTextBox"* %98, %"class.blink::ComputedStyle"* dereferenceable(104) %3, %"class.WTF::StringBuilder"* null) #11
  call void @_ZN5blink15GraphicsContext20DrawHighlightForTextERKNS_4FontERKNS_7TextRunERKNS_10FloatPointEiRKNS_5ColorEii(%"class.blink::GraphicsContext"* %1, %"class.blink::Font"* dereferenceable(88) %4, %"class.blink::TextRun"* nonnull dereferenceable(40) %11, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %10, i32 %83, %"class.blink::Color"* nonnull dereferenceable(4) %9, i32 %6, i32 %7) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %97) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #11
  br label %99

99:                                               ; preds = %8, %64
  ret void
}

declare i32 @_ZNK5blink13RootInlineBox15SelectionBottomEv(%"class.blink::RootInlineBox"*) local_unnamed_addr #3

declare i32 @_ZNK5blink13RootInlineBox12SelectionTopEv(%"class.blink::RootInlineBox"*) local_unnamed_addr #3

declare void @_ZN5blink15GraphicsContext20DrawHighlightForTextERKNS_4FontERKNS_7TextRunERKNS_10FloatPointEiRKNS_5ColorEii(%"class.blink::GraphicsContext"*, %"class.blink::Font"* dereferenceable(88), %"class.blink::TextRun"* dereferenceable(40), %"class.blink::FloatPoint"* dereferenceable(8), i32, %"class.blink::Color"* dereferenceable(4), i32, i32) local_unnamed_addr #3

declare void @_ZNK5blink13InlineTextBox16ConstructTextRunERKNS_13ComputedStyleEPN3WTF13StringBuilderE(%"class.blink::TextRun"* sret, %"class.blink::InlineTextBox"*, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.WTF::StringBuilder"*) local_unnamed_addr #3

declare void @_ZNK5blink24DocumentMarkerController21ComputeMarkersToPaintERKNS_4TextE(%"class.blink::HeapVector.2905"* sret, %"class.blink::DocumentMarkerController"*, %"class.blink::Text"* dereferenceable(88)) local_unnamed_addr #3

declare i32 @_ZNK5blink15StyleableMarker15BackgroundColorEv(%"class.blink::StyleableMarker"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink21DocumentMarkerPainter26ShouldPaintMarkerUnderlineERKNS_15StyleableMarkerE(%"class.blink::StyleableMarker"* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InlineTextBoxPainter29PaintStyleableMarkerUnderlineERNS_15GraphicsContextERKNS_14PhysicalOffsetERKNS_15StyleableMarkerERKNS_13ComputedStyleERKNS_4FontE(%"class.blink::InlineTextBoxPainter"* nocapture readonly, %"class.blink::GraphicsContext"* dereferenceable(112), %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.blink::StyleableMarker"* dereferenceable(40), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Font"* dereferenceable(88)) local_unnamed_addr #2 align 2 {
  %7 = alloca %"class.blink::TextRun", align 8
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = alloca %"class.blink::FloatPoint", align 4
  %10 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %0, i64 0, i32 0
  %11 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %11, i64 0, i32 5
  %13 = load i16, i16* %12, align 2
  %14 = icmp eq i16 %13, -2
  br i1 %14, label %56, label %15

15:                                               ; preds = %6
  %16 = bitcast { <2 x float>, <2 x float> }* %8 to %"class.blink::FloatRect"*
  %17 = getelementptr inbounds %"class.blink::StyleableMarker", %"class.blink::StyleableMarker"* %3, i64 0, i32 0
  %18 = tail call i64 @_ZN5blink20InlineTextBoxPainter22MarkerPaintStartAndEndERKNS_14DocumentMarkerE(%"class.blink::InlineTextBoxPainter"* %0, %"class.blink::DocumentMarker"* dereferenceable(16) %17)
  %19 = trunc i64 %18 to i32
  %20 = lshr i64 %18, 32
  %21 = trunc i64 %20 to i32
  %22 = bitcast %"class.blink::TextRun"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #11
  %23 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %10, align 8
  call void @_ZNK5blink13InlineTextBox16ConstructTextRunERKNS_13ComputedStyleEPN3WTF13StringBuilderE(%"class.blink::TextRun"* nonnull sret %7, %"class.blink::InlineTextBox"* %23, %"class.blink::ComputedStyle"* dereferenceable(104) %4, %"class.WTF::StringBuilder"* null) #11
  %24 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #11
  %25 = bitcast %"class.blink::FloatPoint"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %9, i64 0, i32 0
  store float 0.000000e+00, float* %26, align 4
  %27 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %9, i64 0, i32 1
  store float 0.000000e+00, float* %27, align 4
  %28 = call { <2 x float>, <2 x float> } @_ZNK5blink4Font20SelectionRectForTextERKNS_7TextRunERKNS_10FloatPointEfii(%"class.blink::Font"* %5, %"class.blink::TextRun"* nonnull dereferenceable(40) %7, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %9, float 0.000000e+00, i32 %19, i32 %21) #11
  %29 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %30 = extractvalue { <2 x float>, <2 x float> } %28, 0
  store <2 x float> %30, <2 x float>* %29, align 8
  %31 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %32 = extractvalue { <2 x float>, <2 x float> } %28, 1
  store <2 x float> %32, <2 x float>* %31, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #11
  %33 = bitcast %"class.blink::InlineTextBoxPainter"* %0 to %"class.blink::InlineBox"**
  %34 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %33, align 8
  %35 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %34) #11
  %36 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %10, align 8
  %37 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %36, i64 0, i32 0, i32 4, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %38, i64 0, i32 6, i32 0, i32 0
  %40 = load %"class.blink::Node"*, %"class.blink::Node"** %39, align 8
  %41 = icmp eq %"class.blink::Node"* %40, null
  br i1 %41, label %42, label %49

42:                                               ; preds = %15, %42
  %43 = phi %"class.blink::LayoutObject"* [ %45, %42 ], [ %38, %15 ]
  %44 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %43, i64 0, i32 7
  %45 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %45, i64 0, i32 6, i32 0, i32 0
  %47 = load %"class.blink::Node"*, %"class.blink::Node"** %46, align 8
  %48 = icmp eq %"class.blink::Node"* %47, null
  br i1 %48, label %42, label %49

49:                                               ; preds = %42, %15
  %50 = phi %"class.blink::Node"* [ %40, %15 ], [ %47, %42 ]
  %51 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %50, i64 0, i32 3, i32 0, i32 0
  %52 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %52, i64 0, i32 2, i32 0, i32 0
  %54 = load %"class.blink::Document"*, %"class.blink::Document"** %53, align 8
  %55 = call zeroext i1 @_ZN5blink8Document10InDarkModeEv(%"class.blink::Document"* %54) #11
  call void @_ZN5blink21DocumentMarkerPainter29PaintStyleableMarkerUnderlineERNS_15GraphicsContextERKNS_14PhysicalOffsetERKNS_15StyleableMarkerERKNS_13ComputedStyleERKNS_9FloatRectENS_10LayoutUnitEb(%"class.blink::GraphicsContext"* dereferenceable(112) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2, %"class.blink::StyleableMarker"* dereferenceable(40) %3, %"class.blink::ComputedStyle"* dereferenceable(104) %4, %"class.blink::FloatRect"* nonnull dereferenceable(16) %16, i32 %35, i1 zeroext %55) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #11
  br label %56

56:                                               ; preds = %6, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InlineTextBoxPainter19PaintDocumentMarkerERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_14DocumentMarkerERKNS_13ComputedStyleERKNS_4FontEb(%"class.blink::InlineTextBoxPainter"* nocapture readonly, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.blink::DocumentMarker"* dereferenceable(16), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Font"* dereferenceable(88), i1 zeroext) local_unnamed_addr #6 align 2 {
  %8 = alloca %"class.blink::TextRun", align 8
  %9 = alloca <2 x float>, align 8
  %10 = bitcast <2 x float>* %9 to %"class.blink::FloatPoint"*
  %11 = alloca %"struct.blink::PhysicalRect", align 4
  %12 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %0, i64 0, i32 0
  %13 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %13, i64 0, i32 0, i32 4, i32 0
  %15 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 6, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %19, label %26

19:                                               ; preds = %7, %19
  %20 = phi %"class.blink::LayoutObject"* [ %22, %19 ], [ %15, %7 ]
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 7
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %22, i64 0, i32 6, i32 0, i32 0
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %23, align 8
  %25 = icmp eq %"class.blink::Node"* %24, null
  br i1 %25, label %19, label %26

26:                                               ; preds = %19, %7
  %27 = phi %"class.blink::Node"* [ %17, %7 ], [ %24, %19 ]
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %27, i64 0, i32 3, i32 0, i32 0
  %29 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %29, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::Document"*, %"class.blink::Document"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %31, i64 0, i32 31
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 2
  br i1 %34, label %231, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %13, i64 0, i32 5
  %37 = load i16, i16* %36, align 2
  %38 = icmp eq i16 %37, -2
  br i1 %38, label %231, label %39

39:                                               ; preds = %35
  %40 = bitcast %"class.blink::InlineTextBoxPainter"* %0 to %"class.blink::InlineBox"**
  %41 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %13, i64 0, i32 0, i32 6, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %13, i64 0, i32 3
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %"class.blink::DocumentMarker", %"class.blink::DocumentMarker"* %3, i64 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp ugt i32 %44, %46
  %48 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %13, i64 0, i32 4
  %49 = load i16, i16* %48, align 4
  %50 = icmp eq i16 %49, 0
  %51 = zext i16 %49 to i32
  %52 = add nsw i32 %51, -1
  %53 = select i1 %50, i32 0, i32 %52
  %54 = add i32 %44, 1
  %55 = add i32 %54, %53
  %56 = getelementptr inbounds %"class.blink::DocumentMarker", %"class.blink::DocumentMarker"* %3, i64 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %55, %57
  %59 = and i1 %47, %58
  %60 = icmp eq i16 %37, -1
  %61 = and i1 %60, %59
  %62 = xor i1 %61, true
  %63 = or i1 %62, %6
  br i1 %63, label %64, label %216

64:                                               ; preds = %39
  %65 = tail call i64 @_ZN5blink20InlineTextBoxPainter22MarkerPaintStartAndEndERKNS_14DocumentMarkerE(%"class.blink::InlineTextBoxPainter"* %0, %"class.blink::DocumentMarker"* dereferenceable(16) %3)
  %66 = trunc i64 %65 to i32
  %67 = lshr i64 %65, 32
  %68 = trunc i64 %67 to i32
  %69 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %12, align 8
  %70 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %69, i64 0, i32 0, i32 4, i32 0
  %71 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %71, i64 0, i32 5, i32 0
  %73 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %73, i64 0, i32 0, i32 9
  %75 = bitcast [20 x i8]* %74 to i160*
  %76 = load i160, i160* %75, align 8
  %77 = and i160 %76, 15211807202738752817960438464512
  %78 = icmp eq i160 %77, 10141204801825835211973625643008
  %79 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %69, i64 0, i32 0
  br i1 %78, label %80, label %102

80:                                               ; preds = %64
  %81 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %79) #11
  %82 = tail call i32 @_ZNK5blink13RootInlineBox15SelectionBottomEv(%"class.blink::RootInlineBox"* %81) #11
  %83 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %40, align 8
  %84 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %83, i64 0, i32 7, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = and i32 %85, 2048
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %83, i64 0, i32 5, i32 1, i32 0
  %89 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %83, i64 0, i32 5, i32 0, i32 0
  %90 = select i1 %87, i32* %89, i32* %88
  %91 = load i32, i32* %90, align 4
  %92 = tail call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %83) #11
  %93 = icmp slt i32 %92, 0
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %91, i32 %92) #11
  %96 = extractvalue { i32, i1 } %95, 1
  %97 = extractvalue { i32, i1 } %95, 0
  %98 = select i1 %96, i32 %94, i32 %97, !prof !2
  %99 = icmp sgt i32 %98, -1
  %100 = select i1 %99, i32 -2147483648, i32 2147483647
  %101 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %82, i32 %98) #11
  br label %116

102:                                              ; preds = %64
  %103 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %69, i64 0, i32 0, i32 7, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = and i32 %104, 2048
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %69, i64 0, i32 0, i32 5, i32 1, i32 0
  %108 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %69, i64 0, i32 0, i32 5, i32 0, i32 0
  %109 = select i1 %106, i32* %108, i32* %107
  %110 = load i32, i32* %109, align 4
  %111 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %79) #11
  %112 = tail call i32 @_ZNK5blink13RootInlineBox12SelectionTopEv(%"class.blink::RootInlineBox"* %111) #11
  %113 = icmp sgt i32 %112, -1
  %114 = select i1 %113, i32 -2147483648, i32 2147483647
  %115 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %110, i32 %112) #11
  br label %116

116:                                              ; preds = %102, %80
  %117 = phi { i32, i1 } [ %115, %102 ], [ %101, %80 ]
  %118 = phi i32 [ %114, %102 ], [ %100, %80 ]
  %119 = extractvalue { i32, i1 } %117, 1
  %120 = extractvalue { i32, i1 } %117, 0
  %121 = select i1 %119, i32 %118, i32 %120
  %122 = sdiv i32 %121, 64
  %123 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %40, align 8
  %124 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %123) #11
  %125 = tail call i32 @_ZNK5blink13RootInlineBox15SelectionBottomEv(%"class.blink::RootInlineBox"* %124) #11
  %126 = tail call i32 @_ZNK5blink13RootInlineBox12SelectionTopEv(%"class.blink::RootInlineBox"* %124) #11
  %127 = icmp sgt i32 %126, -1
  %128 = select i1 %127, i32 -2147483648, i32 2147483647
  %129 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %125, i32 %126) #11
  %130 = extractvalue { i32, i1 } %129, 1
  %131 = extractvalue { i32, i1 } %129, 0
  %132 = select i1 %130, i32 %128, i32 %131, !prof !2
  %133 = icmp sgt i32 %132, 0
  %134 = select i1 %133, i32 %132, i32 0
  %135 = lshr i32 %134, 6
  %136 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = shl nsw i32 %122, 6
  %139 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = icmp sgt i32 %121, -64
  %142 = select i1 %141, i32 -2147483648, i32 2147483647
  %143 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %140, i32 %138) #11
  %144 = extractvalue { i32, i1 } %143, 1
  %145 = extractvalue { i32, i1 } %143, 0
  %146 = select i1 %144, i32 %142, i32 %145, !prof !2
  %147 = bitcast %"class.blink::TextRun"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %147) #11
  %148 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 3
  %149 = bitcast %"class.blink::TextRun"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %149, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %148, align 8
  %150 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %150, align 4
  %151 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 5
  store i16 -21846, i16* %151, align 8
  %152 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 6, i64 0
  store i8 -86, i8* %152, align 2
  %153 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 6, i64 1
  store i8 -86, i8* %153, align 1
  %154 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %154, align 4
  %155 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 7, i32 1
  %156 = bitcast i8* %155 to i64*
  store i64 -6148914691236517206, i64* %156, align 4
  %157 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %12, align 8
  call void @_ZNK5blink13InlineTextBox16ConstructTextRunERKNS_13ComputedStyleEPN3WTF13StringBuilderE(%"class.blink::TextRun"* nonnull sret %8, %"class.blink::InlineTextBox"* %157, %"class.blink::ComputedStyle"* dereferenceable(104) %4, %"class.WTF::StringBuilder"* null) #11
  %158 = bitcast <2 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #11
  %159 = sitofp i32 %137 to float
  %160 = fmul float %159, 1.562500e-02
  %161 = sitofp i32 %146 to float
  %162 = fmul float %161, 1.562500e-02
  %163 = insertelement <2 x float> undef, float %160, i32 0
  %164 = insertelement <2 x float> %163, float %162, i32 1
  store <2 x float> %164, <2 x float>* %9, align 8
  %165 = sitofp i32 %135 to float
  %166 = call { <2 x float>, <2 x float> } @_ZNK5blink4Font20SelectionRectForTextERKNS_7TextRunERKNS_10FloatPointEfii(%"class.blink::Font"* %5, %"class.blink::TextRun"* nonnull dereferenceable(40) %8, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %10, float %165, i32 %66, i32 %68) #11
  %167 = extractvalue { <2 x float>, <2 x float> } %166, 0
  %168 = extractvalue { <2 x float>, <2 x float> } %166, 1
  %169 = extractelement <2 x float> %167, i32 0
  %170 = call float @llvm.floor.f32(float %169) #11
  %171 = fpext float %170 to double
  %172 = fcmp ult double %171, 0x41DFFFFFFFC00000
  br i1 %172, label %173, label %177

173:                                              ; preds = %116
  %174 = fcmp ugt float %170, 0xC1E0000000000000
  br i1 %174, label %175, label %177

175:                                              ; preds = %173
  %176 = fptosi float %170 to i32
  br label %177

177:                                              ; preds = %175, %173, %116
  %178 = phi i32 [ %176, %175 ], [ 2147483647, %116 ], [ -2147483648, %173 ]
  %179 = extractelement <2 x float> %168, i32 0
  %180 = fadd float %169, %179
  %181 = call float @llvm.ceil.f32(float %180) #11
  %182 = fpext float %181 to double
  %183 = fcmp ult double %182, 0x41DFFFFFFFC00000
  br i1 %183, label %184, label %188

184:                                              ; preds = %177
  %185 = fcmp ugt float %181, 0xC1E0000000000000
  br i1 %185, label %186, label %188

186:                                              ; preds = %184
  %187 = fptosi float %181 to i32
  br label %188

188:                                              ; preds = %186, %184, %177
  %189 = phi i32 [ %187, %186 ], [ 2147483647, %177 ], [ -2147483648, %184 ]
  %190 = icmp sgt i32 %178, -1
  %191 = select i1 %190, i32 -2147483648, i32 2147483647
  %192 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %189, i32 %178) #11
  %193 = extractvalue { i32, i1 } %192, 1
  %194 = extractvalue { i32, i1 } %192, 0
  %195 = select i1 %193, i32 %191, i32 %194, !prof !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #11
  %196 = icmp sgt i32 %178, 33554431
  br i1 %196, label %201, label %197

197:                                              ; preds = %188
  %198 = icmp slt i32 %178, -33554432
  %199 = shl i32 %178, 6
  %200 = select i1 %198, i32 -2147483648, i32 %199
  br label %201

201:                                              ; preds = %188, %197
  %202 = phi i32 [ 2147483647, %188 ], [ %200, %197 ]
  %203 = icmp sgt i32 %137, -1
  %204 = select i1 %203, i32 -2147483648, i32 2147483647
  %205 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %202, i32 %137) #11
  %206 = extractvalue { i32, i1 } %205, 1
  %207 = extractvalue { i32, i1 } %205, 0
  %208 = select i1 %206, i32 %204, i32 %207, !prof !2
  %209 = icmp sgt i32 %195, 33554431
  br i1 %209, label %214, label %210

210:                                              ; preds = %201
  %211 = icmp slt i32 %195, -33554432
  %212 = shl i32 %195, 6
  %213 = select i1 %211, i32 -2147483648, i32 %212
  br label %214

214:                                              ; preds = %210, %201
  %215 = phi i32 [ 2147483647, %201 ], [ %213, %210 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %147) #11
  br label %216

216:                                              ; preds = %39, %214
  %217 = phi i32 [ %208, %214 ], [ 0, %39 ]
  %218 = phi i32 [ %215, %214 ], [ %42, %39 ]
  %219 = bitcast %"class.blink::DocumentMarker"* %3 to i32 (%"class.blink::DocumentMarker"*)***
  %220 = load i32 (%"class.blink::DocumentMarker"*)**, i32 (%"class.blink::DocumentMarker"*)*** %219, align 8
  %221 = getelementptr inbounds i32 (%"class.blink::DocumentMarker"*)*, i32 (%"class.blink::DocumentMarker"*)** %220, i64 2
  %222 = load i32 (%"class.blink::DocumentMarker"*)*, i32 (%"class.blink::DocumentMarker"*)** %221, align 8
  %223 = call i32 %222(%"class.blink::DocumentMarker"* %3) #11
  %224 = bitcast %"struct.blink::PhysicalRect"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %224) #11
  %225 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %40, align 8
  %226 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %225) #11
  %227 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %11, i64 0, i32 0, i32 0, i32 0
  store i32 %217, i32* %227, align 4
  %228 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %11, i64 0, i32 0, i32 1, i32 0
  store i32 0, i32* %228, align 4
  %229 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %11, i64 0, i32 1, i32 0, i32 0
  store i32 %218, i32* %229, align 4
  %230 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %11, i64 0, i32 1, i32 1, i32 0
  store i32 %226, i32* %230, align 4
  call void @_ZN5blink21DocumentMarkerPainter19PaintDocumentMarkerERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_13ComputedStyleENS_14DocumentMarker10MarkerTypeERKNS_12PhysicalRectE(%"struct.blink::PaintInfo"* dereferenceable(56) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %4, i32 %223, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %11) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %224) #11
  br label %231

231:                                              ; preds = %35, %26, %216
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink4Font20SelectionRectForTextERKNS_7TextRunERKNS_10FloatPointEfii(%"class.blink::Font"*, %"class.blink::TextRun"* dereferenceable(40), %"class.blink::FloatPoint"* dereferenceable(8), float, i32, i32) local_unnamed_addr #3

declare void @_ZN5blink21DocumentMarkerPainter19PaintDocumentMarkerERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_13ComputedStyleENS_14DocumentMarker10MarkerTypeERKNS_12PhysicalRectE(%"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.blink::ComputedStyle"* dereferenceable(104), i32, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InlineTextBoxPainter34ExpandToIncludeNewlineForSelectionERNS_12PhysicalRectE(%"class.blink::InlineTextBoxPainter"* nocapture readonly, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.blink::LayoutRectOutsets", align 4
  %4 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %0, i64 0, i32 0
  %5 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %4, align 8
  %6 = tail call float @_ZNK5blink13InlineTextBox17NewlineSpaceWidthEv(%"class.blink::InlineTextBox"* %5) #11
  %7 = bitcast %"class.blink::InlineTextBoxPainter"* %0 to %"class.blink::InlineBox"**
  %8 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %8, i64 0, i32 7, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 4
  %12 = icmp eq i32 %11, 0
  %13 = bitcast %"class.blink::LayoutRectOutsets"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %3, i64 0, i32 1, i32 0
  %16 = fmul float %6, 6.400000e+01
  %17 = select i1 %12, float %16, float 0.000000e+00
  %18 = fcmp ult float %17, 0xC1E0000000000000
  %19 = fcmp ugt float %17, 0x41DFFFFFE0000000
  %20 = fcmp ogt float %17, 0xC1E0000000000000
  %21 = select i1 %20, float %17, float 0xC1E0000000000000
  %22 = fptosi float %21 to i32
  %23 = select i1 %18, i32 0, i32 2147483647
  %24 = select i1 %19, i32 %23, i32 %22
  store i32 %24, i32* %15, align 4
  %25 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %3, i64 0, i32 2, i32 0
  store i32 0, i32* %25, align 4
  %26 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %3, i64 0, i32 3, i32 0
  %27 = select i1 %12, float 0.000000e+00, float %16
  %28 = fcmp ult float %27, 0xC1E0000000000000
  %29 = fcmp ugt float %27, 0x41DFFFFFE0000000
  %30 = fcmp ogt float %27, 0xC1E0000000000000
  %31 = select i1 %30, float %27, float 0xC1E0000000000000
  %32 = fptosi float %31 to i32
  %33 = select i1 %28, i32 0, i32 2147483647
  %34 = select i1 %29, i32 %33, i32 %32
  store i32 %34, i32* %26, align 4
  call void @_ZN5blink12PhysicalRect6ExpandERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"* %1, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #11
  ret void
}

declare float @_ZNK5blink13InlineTextBox17NewlineSpaceWidthEv(%"class.blink::InlineTextBox"*) local_unnamed_addr #3

declare void @_ZN5blink12PhysicalRect6ExpandERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"*, %"class.blink::LayoutRectOutsets"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN5blink21DocumentMarkerPainter29PaintStyleableMarkerUnderlineERNS_15GraphicsContextERKNS_14PhysicalOffsetERKNS_15StyleableMarkerERKNS_13ComputedStyleERKNS_9FloatRectENS_10LayoutUnitEb(%"class.blink::GraphicsContext"* dereferenceable(112), %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.blink::StyleableMarker"* dereferenceable(40), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::FloatRect"* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink8Document10InDarkModeEv(%"class.blink::Document"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InlineTextBoxPainter25PaintTextMarkerForegroundERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_14TextMarkerBaseERKNS_13ComputedStyleERKNS_4FontE(%"class.blink::InlineTextBoxPainter"* nocapture readonly, %"struct.blink::PaintInfo"* dereferenceable(56), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8), %"class.blink::TextMarkerBase"* dereferenceable(16), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Font"* dereferenceable(88)) local_unnamed_addr #2 align 2 {
  %7 = alloca %"class.blink::TextRun", align 8
  %8 = alloca %"struct.blink::TextPaintStyle", align 8
  %9 = alloca %"struct.blink::PhysicalRect", align 8
  %10 = alloca %"struct.blink::PhysicalOffset", align 4
  %11 = alloca %"class.blink::TextPainter", align 8
  %12 = getelementptr inbounds %"class.blink::TextMarkerBase", %"class.blink::TextMarkerBase"* %3, i64 0, i32 0
  %13 = bitcast %"class.blink::TextMarkerBase"* %3 to i32 (%"class.blink::DocumentMarker"*)***
  %14 = load i32 (%"class.blink::DocumentMarker"*)**, i32 (%"class.blink::DocumentMarker"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.blink::DocumentMarker"*)*, i32 (%"class.blink::DocumentMarker"*)** %14, i64 2
  %16 = load i32 (%"class.blink::DocumentMarker"*)*, i32 (%"class.blink::DocumentMarker"*)** %15, align 8
  %17 = tail call i32 %16(%"class.blink::DocumentMarker"* %12) #11
  %18 = icmp eq i32 %17, 4
  br i1 %18, label %19, label %46

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %0, i64 0, i32 0
  %21 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %21, i64 0, i32 0, i32 4, i32 0
  %23 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 6, i32 0, i32 0
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %24, align 8
  %26 = icmp eq %"class.blink::Node"* %25, null
  br i1 %26, label %27, label %34

27:                                               ; preds = %19, %27
  %28 = phi %"class.blink::LayoutObject"* [ %30, %27 ], [ %23, %19 ]
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 7
  %30 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %30, i64 0, i32 6, i32 0, i32 0
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = icmp eq %"class.blink::Node"* %32, null
  br i1 %33, label %27, label %34

34:                                               ; preds = %27, %19
  %35 = phi %"class.blink::Node"* [ %25, %19 ], [ %32, %27 ]
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 0, i32 3, i32 0, i32 0
  %37 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::Document"*, %"class.blink::Document"** %38, align 8
  %40 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %39) #11
  %41 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %40, i64 0, i32 13, i32 0, i32 0
  %42 = load %"class.blink::Editor"*, %"class.blink::Editor"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::Editor", %"class.blink::Editor"* %42, i64 0, i32 9
  %44 = load i8, i8* %43, align 8, !range !6
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %204, label %46

46:                                               ; preds = %34, %6
  %47 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %0, i64 0, i32 0
  %48 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %48, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %48, i64 0, i32 0, i32 4, i32 0
  %52 = bitcast %"class.blink::LayoutObject"** %51 to %"class.blink::LayoutText"**
  %53 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %52, align 8
  %54 = bitcast %"class.blink::LayoutText"* %53 to i32 (%"class.blink::LayoutText"*)***
  %55 = load i32 (%"class.blink::LayoutText"*)**, i32 (%"class.blink::LayoutText"*)*** %54, align 8
  %56 = getelementptr inbounds i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %55, i64 109
  %57 = load i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %56, align 8
  %58 = tail call i32 %57(%"class.blink::LayoutText"* %53) #11
  %59 = add i32 %58, %50
  %60 = getelementptr inbounds %"class.blink::TextMarkerBase", %"class.blink::TextMarkerBase"* %3, i64 0, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = tail call i32 @llvm.usub.sat.i32(i32 %61, i32 %59) #11
  %63 = getelementptr inbounds %"class.blink::TextMarkerBase", %"class.blink::TextMarkerBase"* %3, i64 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = sub i32 %64, %59
  %66 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %48, i64 0, i32 4
  %67 = load i16, i16* %66, align 4
  %68 = zext i16 %67 to i32
  %69 = icmp ugt i32 %65, %68
  %70 = select i1 %69, i32 %68, i32 %65
  %71 = bitcast %"class.blink::TextRun"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %71) #11
  %72 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 3
  %73 = bitcast %"class.blink::TextRun"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %72, align 8
  %74 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %74, align 4
  %75 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 5
  store i16 -21846, i16* %75, align 8
  %76 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 6, i64 0
  store i8 -86, i8* %76, align 2
  %77 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 6, i64 1
  store i8 -86, i8* %77, align 1
  %78 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %78, align 4
  %79 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %7, i64 0, i32 7, i32 1
  %80 = bitcast i8* %79 to i64*
  store i64 -6148914691236517206, i64* %80, align 4
  %81 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %47, align 8
  call void @_ZNK5blink13InlineTextBox16ConstructTextRunERKNS_13ComputedStyleEPN3WTF13StringBuilderE(%"class.blink::TextRun"* nonnull sret %7, %"class.blink::InlineTextBox"* %81, %"class.blink::ComputedStyle"* dereferenceable(104) %4, %"class.WTF::StringBuilder"* null) #11
  %82 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %5) #11
  %83 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %82, i64 0, i32 2
  %84 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %83, align 8
  %85 = icmp eq %"class.blink::SimpleFontData"* %84, null
  br i1 %85, label %86, label %90

86:                                               ; preds = %46
  %87 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %5, i64 0, i32 0
  %88 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %82, %"class.blink::FontDescription"* dereferenceable(80) %87) #11
  store %"class.blink::SimpleFontData"* %88, %"class.blink::SimpleFontData"** %83, align 8
  %89 = icmp eq %"class.blink::SimpleFontData"* %88, null
  br i1 %89, label %203, label %90

90:                                               ; preds = %46, %86
  %91 = phi %"class.blink::SimpleFontData"* [ %88, %86 ], [ %84, %46 ]
  %92 = bitcast %"struct.blink::TextPaintStyle"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %92) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %92, i8* align 8 bitcast ({ %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", float, i32, %"class.blink::ShadowList"*, { { { { i8, [3 x i8], { { i8, [3 x i8], %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" } } } } } } }* @__const._ZN5blink20InlineTextBoxPainter25PaintTextMarkerForegroundERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_14TextMarkerBaseERKNS_13ComputedStyleERKNS_4FontE.text_style to i8*), i64 64, i1 false)
  %93 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %47, align 8
  %94 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %93, i64 0, i32 0, i32 4, i32 0
  %95 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %95, i64 0, i32 6, i32 0, i32 0
  %97 = load %"class.blink::Node"*, %"class.blink::Node"** %96, align 8
  %98 = icmp eq %"class.blink::Node"* %97, null
  br i1 %98, label %99, label %106

99:                                               ; preds = %90, %99
  %100 = phi %"class.blink::LayoutObject"* [ %102, %99 ], [ %95, %90 ]
  %101 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %100, i64 0, i32 7
  %102 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %102, i64 0, i32 6, i32 0, i32 0
  %104 = load %"class.blink::Node"*, %"class.blink::Node"** %103, align 8
  %105 = icmp eq %"class.blink::Node"* %104, null
  br i1 %105, label %99, label %106

106:                                              ; preds = %99, %90
  %107 = phi %"class.blink::Node"* [ %97, %90 ], [ %104, %99 ]
  %108 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %107, i64 0, i32 3, i32 0, i32 0
  %109 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %109, i64 0, i32 2, i32 0, i32 0
  %111 = load %"class.blink::Document"*, %"class.blink::Document"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %95, i64 0, i32 4
  %113 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %112 to i96*
  %114 = load i96, i96* %113, align 4
  %115 = and i96 %114, 16777216
  %116 = icmp eq i96 %115, 0
  %117 = select i1 %116, %"class.blink::Node"* %97, %"class.blink::Node"* null
  call void @_ZN5blink21DocumentMarkerPainter25ComputeTextPaintStyleFromERKNS_8DocumentEPNS_4NodeERKNS_13ComputedStyleERKNS_14TextMarkerBaseERKNS_9PaintInfoE(%"struct.blink::TextPaintStyle"* nonnull sret %8, %"class.blink::Document"* dereferenceable(2848) %111, %"class.blink::Node"* %117, %"class.blink::ComputedStyle"* dereferenceable(104) %4, %"class.blink::TextMarkerBase"* dereferenceable(16) %3, %"struct.blink::PaintInfo"* dereferenceable(56) %1) #11
  %118 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %8, i64 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %185, label %121

121:                                              ; preds = %106
  %122 = bitcast %"struct.blink::PhysicalRect"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %122) #11
  %123 = bitcast %"class.blink::InlineTextBoxPainter"* %0 to %"class.blink::InlineBox"**
  %124 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %124, i64 0, i32 6, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %124) #11
  %128 = bitcast %"struct.blink::PhysicalOffset"* %2 to i64*
  %129 = bitcast %"struct.blink::PhysicalRect"* %9 to i64*
  %130 = load i64, i64* %128, align 4
  store i64 %130, i64* %129, align 8
  %131 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %9, i64 0, i32 1
  %132 = bitcast %"struct.blink::PhysicalSize"* %131 to i64*
  %133 = zext i32 %127 to i64
  %134 = shl nuw i64 %133, 32
  %135 = zext i32 %126 to i64
  %136 = or i64 %134, %135
  store i64 %136, i64* %132, align 8
  %137 = bitcast %"struct.blink::PhysicalOffset"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #11
  %138 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %10, i64 0, i32 0, i32 0
  store i32 -1431655766, i32* %138, align 4
  %139 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %10, i64 0, i32 1, i32 0
  store i32 -1431655766, i32* %139, align 4
  %140 = trunc i64 %130 to i32
  %141 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1
  %142 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %91, i64 0, i32 1, i32 9
  %143 = load i32, i32* %142, align 4
  %144 = icmp sgt i32 %143, 33554431
  br i1 %144, label %145, label %148

145:                                              ; preds = %121
  %146 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %141, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br label %161

148:                                              ; preds = %121
  %149 = icmp slt i32 %143, -33554432
  br i1 %149, label %150, label %153

150:                                              ; preds = %148
  %151 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %141, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  br label %158

153:                                              ; preds = %148
  %154 = shl i32 %143, 6
  %155 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %141, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = icmp slt i32 %154, 0
  br i1 %157, label %158, label %161

158:                                              ; preds = %153, %150
  %159 = phi i32 [ %152, %150 ], [ %156, %153 ]
  %160 = phi i32 [ -2147483648, %150 ], [ %154, %153 ]
  br label %161

161:                                              ; preds = %145, %153, %158
  %162 = phi i32 [ %159, %158 ], [ %156, %153 ], [ %147, %145 ]
  %163 = phi i32 [ %160, %158 ], [ %154, %153 ], [ 2147483647, %145 ]
  %164 = phi i32 [ -2147483648, %158 ], [ 2147483647, %153 ], [ 2147483647, %145 ]
  %165 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %162, i32 %163) #11
  %166 = extractvalue { i32, i1 } %165, 1
  %167 = extractvalue { i32, i1 } %165, 0
  %168 = select i1 %166, i32 %164, i32 %167, !prof !2
  store i32 %140, i32* %138, align 4
  store i32 %168, i32* %139, align 4
  %169 = bitcast %"class.blink::TextPainter"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %169) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %169, i8 -86, i64 88, i1 false)
  %170 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 0
  %171 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %170, align 8
  %172 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %123, align 8
  %173 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %172, i64 0, i32 7, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = and i32 %174, 2048
  %176 = icmp ne i32 %175, 0
  %177 = getelementptr inbounds %"class.blink::TextPainter", %"class.blink::TextPainter"* %11, i64 0, i32 0
  call void @_ZN5blink15TextPainterBaseC2ERNS_15GraphicsContextERKNS_4FontERKNS_14PhysicalOffsetERKNS_12PhysicalRectEb(%"class.blink::TextPainterBase"* nonnull %177, %"class.blink::GraphicsContext"* dereferenceable(112) %171, %"class.blink::Font"* dereferenceable(88) %5, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %10, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %9, i1 zeroext %176) #11
  %178 = getelementptr inbounds %"class.blink::TextPainter", %"class.blink::TextPainter"* %11, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [3 x i8*] }, { [3 x i8*] }* @_ZTVN5blink11TextPainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %178, align 8
  %179 = getelementptr inbounds %"class.blink::TextPainter", %"class.blink::TextPainter"* %11, i64 0, i32 1
  store %"class.blink::TextRun"* %7, %"class.blink::TextRun"** %179, align 8
  %180 = getelementptr inbounds %"class.blink::TextPainter", %"class.blink::TextPainter"* %11, i64 0, i32 2
  store %"class.blink::LayoutTextCombine"* null, %"class.blink::LayoutTextCombine"** %180, align 8
  %181 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %47, align 8
  %182 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %181, i64 0, i32 4
  %183 = load i16, i16* %182, align 4
  %184 = zext i16 %183 to i32
  call void @_ZN5blink11TextPainter5PaintEjjjRKNS_14TextPaintStyleEi(%"class.blink::TextPainter"* nonnull %11, i32 %62, i32 %70, i32 %184, %"struct.blink::TextPaintStyle"* nonnull dereferenceable(64) %8, i32 0) #11
  call void @_ZN5blink15TextPainterBaseD2Ev(%"class.blink::TextPainterBase"* nonnull %177) #11
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %169) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %122) #11
  br label %185

185:                                              ; preds = %106, %161
  %186 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %187 = load i8, i8* %186, align 8, !range !6
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %202, label %189

189:                                              ; preds = %185
  %190 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 2
  %191 = load i8, i8* %190, align 1
  %192 = icmp eq i8 %191, 8
  br i1 %192, label %193, label %195

193:                                              ; preds = %189
  %194 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %194) #11
  br label %195

195:                                              ; preds = %193, %189
  %196 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 2
  %197 = load i8, i8* %196, align 1
  %198 = icmp eq i8 %197, 8
  br i1 %198, label %199, label %201

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"struct.blink::TextPaintStyle", %"struct.blink::TextPaintStyle"* %8, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %200) #11
  br label %201

201:                                              ; preds = %199, %195
  store i8 0, i8* %186, align 8
  br label %202

202:                                              ; preds = %185, %201
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %92) #11
  br label %203

203:                                              ; preds = %86, %202
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %71) #11
  br label %204

204:                                              ; preds = %34, %203
  ret void
}

declare void @_ZN5blink21DocumentMarkerPainter25ComputeTextPaintStyleFromERKNS_8DocumentEPNS_4NodeERKNS_13ComputedStyleERKNS_14TextMarkerBaseERKNS_9PaintInfoE(%"struct.blink::TextPaintStyle"* sret, %"class.blink::Document"* dereferenceable(2848), %"class.blink::Node"*, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::TextMarkerBase"* dereferenceable(16), %"struct.blink::PaintInfo"* dereferenceable(56)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20InlineTextBoxPainter25PaintTextMarkerBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetERKNS_14TextMarkerBaseERKNS_13ComputedStyleERKNS_4FontE(%"class.blink::InlineTextBoxPainter"* nocapture readonly, %"struct.blink::PaintInfo"* nocapture readonly dereferenceable(56), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8), %"class.blink::TextMarkerBase"* dereferenceable(16), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Font"* dereferenceable(88)) local_unnamed_addr #6 align 2 {
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca %"class.blink::TextRun", align 8
  %9 = alloca %"class.blink::Color", align 4
  %10 = alloca <2 x float>, align 8
  %11 = bitcast <2 x float>* %10 to %"class.blink::FloatPoint"*
  %12 = getelementptr inbounds %"class.blink::TextMarkerBase", %"class.blink::TextMarkerBase"* %3, i64 0, i32 0
  %13 = bitcast %"class.blink::TextMarkerBase"* %3 to i32 (%"class.blink::DocumentMarker"*)***
  %14 = load i32 (%"class.blink::DocumentMarker"*)**, i32 (%"class.blink::DocumentMarker"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.blink::DocumentMarker"*)*, i32 (%"class.blink::DocumentMarker"*)** %14, i64 2
  %16 = load i32 (%"class.blink::DocumentMarker"*)*, i32 (%"class.blink::DocumentMarker"*)** %15, align 8
  %17 = tail call i32 %16(%"class.blink::DocumentMarker"* %12) #11
  %18 = icmp eq i32 %17, 4
  br i1 %18, label %19, label %46

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %0, i64 0, i32 0
  %21 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %21, i64 0, i32 0, i32 4, i32 0
  %23 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %23, i64 0, i32 6, i32 0, i32 0
  %25 = load %"class.blink::Node"*, %"class.blink::Node"** %24, align 8
  %26 = icmp eq %"class.blink::Node"* %25, null
  br i1 %26, label %27, label %34

27:                                               ; preds = %19, %27
  %28 = phi %"class.blink::LayoutObject"* [ %30, %27 ], [ %23, %19 ]
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 7
  %30 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %30, i64 0, i32 6, i32 0, i32 0
  %32 = load %"class.blink::Node"*, %"class.blink::Node"** %31, align 8
  %33 = icmp eq %"class.blink::Node"* %32, null
  br i1 %33, label %27, label %34

34:                                               ; preds = %27, %19
  %35 = phi %"class.blink::Node"* [ %25, %19 ], [ %32, %27 ]
  %36 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 0, i32 3, i32 0, i32 0
  %37 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::Document"*, %"class.blink::Document"** %38, align 8
  %40 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %39) #11
  %41 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %40, i64 0, i32 13, i32 0, i32 0
  %42 = load %"class.blink::Editor"*, %"class.blink::Editor"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::Editor", %"class.blink::Editor"* %42, i64 0, i32 9
  %44 = load i8, i8* %43, align 8, !range !6
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %159, label %46

46:                                               ; preds = %34, %6
  %47 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %0, i64 0, i32 0
  %48 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %48, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %48, i64 0, i32 0, i32 4, i32 0
  %52 = bitcast %"class.blink::LayoutObject"** %51 to %"class.blink::LayoutText"**
  %53 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %52, align 8
  %54 = bitcast %"class.blink::LayoutText"* %53 to i32 (%"class.blink::LayoutText"*)***
  %55 = load i32 (%"class.blink::LayoutText"*)**, i32 (%"class.blink::LayoutText"*)*** %54, align 8
  %56 = getelementptr inbounds i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %55, i64 109
  %57 = load i32 (%"class.blink::LayoutText"*)*, i32 (%"class.blink::LayoutText"*)** %56, align 8
  %58 = tail call i32 %57(%"class.blink::LayoutText"* %53) #11
  %59 = add i32 %58, %50
  %60 = getelementptr inbounds %"class.blink::TextMarkerBase", %"class.blink::TextMarkerBase"* %3, i64 0, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = tail call i32 @llvm.usub.sat.i32(i32 %61, i32 %59) #11
  %63 = getelementptr inbounds %"class.blink::TextMarkerBase", %"class.blink::TextMarkerBase"* %3, i64 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = sub i32 %64, %59
  %66 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %48, i64 0, i32 4
  %67 = load i16, i16* %66, align 4
  %68 = zext i16 %67 to i32
  %69 = icmp ugt i32 %65, %68
  %70 = select i1 %69, i32 %68, i32 %65
  %71 = bitcast %"class.blink::TextRun"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %71) #11
  %72 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 3
  %73 = bitcast %"class.blink::TextRun"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %72, align 8
  %74 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %74, align 4
  %75 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 5
  store i16 -21846, i16* %75, align 8
  %76 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 6, i64 0
  store i8 -86, i8* %76, align 2
  %77 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 6, i64 1
  store i8 -86, i8* %77, align 1
  %78 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %78, align 4
  %79 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 7, i32 1
  %80 = bitcast i8* %79 to i64*
  store i64 -6148914691236517206, i64* %80, align 4
  %81 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %47, align 8
  call void @_ZNK5blink13InlineTextBox16ConstructTextRunERKNS_13ComputedStyleEPN3WTF13StringBuilderE(%"class.blink::TextRun"* nonnull sret %8, %"class.blink::InlineTextBox"* %81, %"class.blink::ComputedStyle"* dereferenceable(104) %4, %"class.WTF::StringBuilder"* null) #11
  %82 = bitcast %"class.blink::Color"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #11
  %83 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %9, i64 0, i32 0
  store i32 -1431655766, i32* %83, align 4
  %84 = call dereferenceable(40) %"class.blink::LayoutTheme"* @_ZN5blink11LayoutTheme8GetThemeEv() #11
  %85 = bitcast %"class.blink::TextMarkerBase"* %3 to i1 (%"class.blink::TextMarkerBase"*)***
  %86 = load i1 (%"class.blink::TextMarkerBase"*)**, i1 (%"class.blink::TextMarkerBase"*)*** %85, align 8
  %87 = getelementptr inbounds i1 (%"class.blink::TextMarkerBase"*)*, i1 (%"class.blink::TextMarkerBase"*)** %86, i64 4
  %88 = load i1 (%"class.blink::TextMarkerBase"*)*, i1 (%"class.blink::TextMarkerBase"*)** %87, align 8
  %89 = call zeroext i1 %88(%"class.blink::TextMarkerBase"* %3) #11
  %90 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %47, align 8
  %91 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %90, i64 0, i32 0, i32 4, i32 0
  %92 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %92, i64 0, i32 6, i32 0, i32 0
  %94 = load %"class.blink::Node"*, %"class.blink::Node"** %93, align 8
  %95 = icmp eq %"class.blink::Node"* %94, null
  br i1 %95, label %96, label %103

96:                                               ; preds = %46, %96
  %97 = phi %"class.blink::LayoutObject"* [ %99, %96 ], [ %92, %46 ]
  %98 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %97, i64 0, i32 7
  %99 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %98, align 8
  %100 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %99, i64 0, i32 6, i32 0, i32 0
  %101 = load %"class.blink::Node"*, %"class.blink::Node"** %100, align 8
  %102 = icmp eq %"class.blink::Node"* %101, null
  br i1 %102, label %96, label %103

103:                                              ; preds = %96, %46
  %104 = phi %"class.blink::Node"* [ %94, %46 ], [ %101, %96 ]
  %105 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %104, i64 0, i32 3, i32 0, i32 0
  %106 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %106, i64 0, i32 2, i32 0, i32 0
  %108 = load %"class.blink::Document"*, %"class.blink::Document"** %107, align 8
  %109 = call zeroext i1 @_ZNK5blink8Document18InForcedColorsModeEv(%"class.blink::Document"* %108) #11
  %110 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %111 = bitcast [20 x i8]* %110 to i160*
  %112 = load i160, i160* %111, align 8
  %113 = lshr i160 %112, 114
  %114 = trunc i160 %113 to i32
  %115 = and i32 %114, 1
  %116 = call i32 @_ZNK5blink11LayoutTheme32PlatformTextSearchHighlightColorEbbNS_5mojom11ColorSchemeE(%"class.blink::LayoutTheme"* %84, i1 zeroext %89, i1 zeroext %109, i32 %115) #11
  store i32 %116, i32* %83, align 4
  %117 = getelementptr inbounds %"struct.blink::PaintInfo", %"struct.blink::PaintInfo"* %1, i64 0, i32 0
  %118 = load %"class.blink::GraphicsContext"*, %"class.blink::GraphicsContext"** %117, align 8
  call void @_ZN5blink15GraphicsContext4SaveEv(%"class.blink::GraphicsContext"* %118) #11
  %119 = bitcast %"class.blink::InlineTextBoxPainter"* %0 to %"class.blink::InlineBox"**
  %120 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %120, i64 0, i32 6, i32 0
  %122 = load i32, i32* %121, align 8
  %123 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %120) #11
  %124 = bitcast %"struct.blink::PhysicalOffset"* %2 to i64*
  %125 = load i64, i64* %124, align 4
  %126 = trunc i64 %125 to i32
  %127 = lshr i64 %125, 32
  %128 = trunc i64 %127 to i32
  %129 = sitofp i32 %126 to float
  %130 = fmul float %129, 1.562500e-02
  %131 = sitofp i32 %128 to float
  %132 = fmul float %131, 1.562500e-02
  %133 = sitofp i32 %122 to float
  %134 = fmul float %133, 1.562500e-02
  %135 = sitofp i32 %123 to float
  %136 = fmul float %135, 1.562500e-02
  %137 = insertelement <2 x float> undef, float %130, i32 0
  %138 = insertelement <2 x float> %137, float %132, i32 1
  %139 = bitcast { <2 x float>, <2 x float> }* %7 to %struct.SkRect*
  %140 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %140) #11
  %141 = fadd float %134, %130
  %142 = insertelement <2 x float> undef, float %141, i32 0
  %143 = fadd float %136, %132
  %144 = insertelement <2 x float> %142, float %143, i32 1
  %145 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  store <2 x float> %138, <2 x float>* %145, align 8
  %146 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  store <2 x float> %144, <2 x float>* %146, align 8
  call void @_ZN5blink15GraphicsContext8ClipRectERK6SkRectNS_16AntiAliasingModeE8SkClipOp(%"class.blink::GraphicsContext"* %118, %struct.SkRect* nonnull dereferenceable(16) %139, i32 0, i32 1) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %140) #11
  %147 = bitcast <2 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #11
  %148 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = sitofp i32 %149 to float
  %151 = fmul float %150, 1.562500e-02
  %152 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %153 = load i32, i32* %152, align 4
  %154 = sitofp i32 %153 to float
  %155 = fmul float %154, 1.562500e-02
  %156 = insertelement <2 x float> undef, float %151, i32 0
  %157 = insertelement <2 x float> %156, float %155, i32 1
  store <2 x float> %157, <2 x float>* %10, align 8
  %158 = sdiv i32 %123, 64
  call void @_ZN5blink15GraphicsContext20DrawHighlightForTextERKNS_4FontERKNS_7TextRunERKNS_10FloatPointEiRKNS_5ColorEii(%"class.blink::GraphicsContext"* %118, %"class.blink::Font"* dereferenceable(88) %5, %"class.blink::TextRun"* nonnull dereferenceable(40) %8, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %11, i32 %158, %"class.blink::Color"* nonnull dereferenceable(4) %9, i32 %62, i32 %70) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #11
  call void @_ZN5blink15GraphicsContext7RestoreEv(%"class.blink::GraphicsContext"* %118) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %82) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %71) #11
  br label %159

159:                                              ; preds = %34, %103
  ret void
}

declare dereferenceable(40) %"class.blink::LayoutTheme"* @_ZN5blink11LayoutTheme8GetThemeEv() local_unnamed_addr #3

declare i32 @_ZNK5blink11LayoutTheme32PlatformTextSearchHighlightColorEbbNS_5mojom11ColorSchemeE(%"class.blink::LayoutTheme"*, i1 zeroext, i1 zeroext, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink8Document18InForcedColorsModeEv(%"class.blink::Document"*) local_unnamed_addr #3

declare %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink8CullRect10IntersectsERKNS_7IntRectE(%"class.blink::CullRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #7

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #8

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #3

declare void @_ZN5blink15AffineTransformC1Edddddd(%"class.blink::AffineTransform"*, double, double, double, double, double, double) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

declare zeroext i1 @_ZN5blink15PaintController23UseCachedItemIfPossibleERKNS_17DisplayItemClientENS_11DisplayItem4TypeE(%"class.blink::PaintController"*, %"class.blink::DisplayItemClient"* dereferenceable(16), i32) local_unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #7

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #3

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink21AppliedTextDecorationeqERKS0_(%"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"* dereferenceable(28)) local_unnamed_addr #3

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #3

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #3

declare void @_ZN5blink7IntRect5UniteERKS0_(%"class.blink::IntRect"*, %"class.blink::IntRect"* dereferenceable(16)) local_unnamed_addr #3

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #3

declare void @_ZN5blink15TextPainterBaseC2ERNS_15GraphicsContextERKNS_4FontERKNS_14PhysicalOffsetERKNS_12PhysicalRectEb(%"class.blink::TextPainterBase"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"class.blink::Font"* dereferenceable(88), %"struct.blink::PhysicalOffset"* dereferenceable(8), %"struct.blink::PhysicalRect"* dereferenceable(16), i1 zeroext) unnamed_addr #3

declare i32 @_ZN5blink10LayoutText12EnsureNodeIdEv(%"class.blink::LayoutText"*) local_unnamed_addr #3

declare i32 @_ZNK5blink13InlineTextBox7TextPosEv(%"class.blink::InlineTextBox"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18TextDecorationInfoD2Ev(%"class.blink::TextDecorationInfo"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 2, i32 4, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !6
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 2, i32 4, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* %6) #11
  store i8 0, i8* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 1, i32 4, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !6
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %37, label %35

11:                                               ; preds = %43
  %12 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15, !prof !2

15:                                               ; preds = %11
  store i32 0, i32* %12, align 4
  br label %16

16:                                               ; preds = %15, %11
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %47) #11
  store float* null, float** %44, align 8
  br label %17

17:                                               ; preds = %43, %16
  %18 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 4, !range !6
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %34, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 8
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %26) #11
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %32) #11
  br label %33

33:                                               ; preds = %31, %27
  store i8 0, i8* %18, align 4
  br label %34

34:                                               ; preds = %17, %33
  ret void

35:                                               ; preds = %7
  %36 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 1, i32 4, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* %36) #11
  store i8 0, i8* %8, align 8
  br label %37

37:                                               ; preds = %35, %7
  %38 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !6
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 12, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZN5blink4PathD1Ev(%"class.blink::Path"* %42) #11
  store i8 0, i8* %38, align 8
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::TextDecorationInfo", %"class.blink::TextDecorationInfo"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %45 = load float*, float** %44, align 8
  %46 = icmp eq float* %45, null
  %47 = bitcast float* %45 to i8*
  br i1 %46, label %17, label %11, !prof !13
}

; Function Attrs: nounwind
declare void @_ZN5blink4PathD1Ev(%"class.blink::Path"*) unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare void @_ZN5blink15GraphicsContext4SaveEv(%"class.blink::GraphicsContext"*) local_unnamed_addr #3

declare void @_ZN5blink15GraphicsContext8ClipRectERK6SkRectNS_16AntiAliasingModeE8SkClipOp(%"class.blink::GraphicsContext"*, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #3

declare void @_ZN5blink15GraphicsContext7RestoreEv(%"class.blink::GraphicsContext"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink16FontFallbackList17ShouldSkipDrawingEv(%"class.blink::FontFallbackList"*) local_unnamed_addr #3

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink15DrawingRecorderD1Ev(%"class.blink::DrawingRecorder"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink23SelectionBoundsRecorderD1Ev(%"class.blink::SelectionBoundsRecorder"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #7

declare zeroext i1 @_ZNK5blink13InlineTextBox26HasWrappedSelectionNewlineEv(%"class.blink::InlineTextBox"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink13InlineTextBox11IsLineBreakEv(%"class.blink::InlineTextBox"*) unnamed_addr #3

declare void @_ZN5blink23SelectionBoundsRecorderC1ENS_14SelectionStateENS_12PhysicalRectERNS_15PaintControllerENS_13TextDirectionENS_11WritingModeERKNS_12LayoutObjectE(%"class.blink::SelectionBoundsRecorder"*, i32, i64, i64, %"class.blink::PaintController"* dereferenceable(584), i8 zeroext, i8 zeroext, %"class.blink::LayoutObject"* dereferenceable(88)) unnamed_addr #3

declare void @_ZN5blink15DrawingRecorderC2ERNS_15GraphicsContextERKNS_17DisplayItemClientENS_11DisplayItem4TypeERKNS_7IntRectE(%"class.blink::DrawingRecorder"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"class.blink::DisplayItemClient"* dereferenceable(16), i32, %"class.blink::IntRect"* dereferenceable(16)) unnamed_addr #3

declare i32 @_ZN5blink22HighlightPaintingUtils24HighlightBackgroundColorERKNS_8DocumentERKNS_13ComputedStyleEPNS_4NodeENS_8PseudoIdE(%"class.blink::Document"* dereferenceable(2848), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Node"*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZN5blink20InlineTextBoxPainter16GetSelectionRectILNS0_12PaintOptionsE1EEENS_12PhysicalRectERNS_15GraphicsContextERKS3_RKNS_13ComputedStyleERKNS_4FontEPNS_17LayoutTextCombineE(%"class.blink::InlineTextBoxPainter"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"struct.blink::PhysicalRect"* dereferenceable(16), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::Font"* dereferenceable(88), %"class.blink::LayoutTextCombine"*) local_unnamed_addr #2 comdat align 2 {
  %7 = alloca %"class.blink::LayoutRectOutsets", align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %"class.WTF::StringBuilder", align 8
  %11 = alloca %"class.blink::TextRun", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.blink::FloatPoint", align 4
  %14 = alloca { i64, i64 }, align 8
  %15 = bitcast { i64, i64 }* %14 to %"struct.blink::PhysicalRect"*
  %16 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #11
  store i32 -1431655766, i32* %8, align 4
  %17 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #11
  store i32 -1431655766, i32* %9, align 4
  %18 = getelementptr inbounds %"class.blink::InlineTextBoxPainter", %"class.blink::InlineTextBoxPainter"* %0, i64 0, i32 0
  %19 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %18, align 8
  call void @_ZNK5blink13InlineTextBox17SelectionStartEndERiS1_(%"class.blink::InlineTextBox"* %19, i32* nonnull dereferenceable(4) %8, i32* nonnull dereferenceable(4) %9) #11
  %20 = load i32, i32* %8, align 4
  %21 = load i32, i32* %9, align 4
  %22 = icmp slt i32 %20, %21
  br i1 %22, label %23, label %420

23:                                               ; preds = %6
  %24 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %18, align 8
  %25 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %24, i64 0, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %24, i64 0, i32 4
  %28 = load i16, i16* %27, align 4
  %29 = zext i16 %28 to i32
  %30 = bitcast %"class.blink::InlineTextBoxPainter"* %0 to %"class.blink::InlineBox"**
  %31 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %24, i64 0, i32 0, i32 7, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, 4
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %24, i64 0, i32 0, i32 4, i32 0
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %36, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #11
  %38 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %37, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %39 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %39, i64 0, i32 0, i32 9
  %41 = bitcast [20 x i8]* %40 to i160*
  %42 = load i160, i160* %41, align 8
  %43 = and i160 %42, 41538374868278621028243970633760768
  %44 = icmp eq i160 %43, 0
  %45 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %18, align 8
  %46 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %45, i64 0, i32 5
  %47 = load i16, i16* %46, align 2
  %48 = icmp eq i16 %47, -1
  br i1 %48, label %56, label %49

49:                                               ; preds = %23
  %50 = xor i1 %34, %44
  %51 = zext i16 %47 to i32
  br i1 %50, label %52, label %56

52:                                               ; preds = %49
  %53 = load i32, i32* %8, align 4
  %54 = icmp slt i32 %53, %51
  %55 = select i1 %54, i32 %51, i32 %53
  store i32 %55, i32* %8, align 4
  br label %56

56:                                               ; preds = %49, %23, %52
  %57 = phi i32 [ %29, %52 ], [ %29, %23 ], [ %51, %49 ]
  %58 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %45, i64 0, i32 0, i32 4, i32 0
  %59 = bitcast %"class.blink::LayoutObject"** %58 to %"class.blink::LayoutText"**
  %60 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %60, i64 0, i32 7, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %80, label %64

64:                                               ; preds = %56
  %65 = ptrtoint %"class.WTF::StringImpl"* %62 to i64
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 1
  br i1 %69, label %75, label %71

71:                                               ; preds = %64
  %72 = bitcast %"class.WTF::StringImpl"* %70 to i8*
  %73 = zext i32 %26 to i64
  %74 = getelementptr inbounds i8, i8* %72, i64 %73
  br label %82

75:                                               ; preds = %64
  %76 = bitcast %"class.WTF::StringImpl"* %70 to i16*
  %77 = zext i32 %26 to i64
  %78 = getelementptr inbounds i16, i16* %76, i64 %77
  %79 = bitcast i16* %78 to i8*
  br label %82

80:                                               ; preds = %56
  %81 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %82

82:                                               ; preds = %71, %75, %80
  %83 = phi i64 [ %81, %80 ], [ %65, %75 ], [ %65, %71 ]
  %84 = phi i8* [ null, %80 ], [ %79, %75 ], [ %74, %71 ]
  %85 = phi i32 [ 0, %80 ], [ %57, %75 ], [ %57, %71 ]
  %86 = bitcast %"class.WTF::StringBuilder"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %86) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 48, i1 false)
  %87 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %87, align 8
  %88 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 1
  %89 = bitcast %union.anon.2878* %88 to i8*
  store i8 0, i8* %89, align 8
  %90 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 2
  store i32 0, i32* %90, align 8
  %91 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 3
  store i8 1, i8* %91, align 4
  %92 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %10, i64 0, i32 4
  store i8 0, i8* %92, align 1
  %93 = load i32, i32* %9, align 4
  %94 = icmp eq i32 %93, %57
  br i1 %94, label %95, label %100

95:                                               ; preds = %82
  %96 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %45, i64 0, i32 0, i32 7, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = trunc i32 %97 to i16
  %99 = icmp slt i16 %98, 0
  br label %100

100:                                              ; preds = %95, %82
  %101 = phi i1 [ false, %82 ], [ %99, %95 ]
  %102 = bitcast %"class.blink::TextRun"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %102) #11
  %103 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 2
  %104 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 3
  %105 = bitcast %"class.blink::TextRun"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %104, align 8
  %106 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 4
  store float 0xFFFFFFFFE0000000, float* %106, align 4
  %107 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 5
  store i16 -21846, i16* %107, align 8
  %108 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 6, i64 0
  store i8 -86, i8* %108, align 2
  %109 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 6, i64 1
  store i8 -86, i8* %109, align 1
  %110 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 7, i32 0
  store float 0xFFFFFFFFE0000000, float* %110, align 4
  %111 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %11, i64 0, i32 7, i32 1
  %112 = bitcast %"class.WTF::StringView"* %12 to i64*
  %113 = bitcast i8* %111 to i64*
  store i64 -6148914691236517206, i64* %113, align 4
  store i64 %83, i64* %112, align 8
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* %84, i8** %114, align 8
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %85, i32* %115, align 8
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 3, i64 0
  %117 = bitcast i8* %116 to i32*
  store i32 -1431655766, i32* %117, align 4
  %118 = load %"class.blink::LayoutText"*, %"class.blink::LayoutText"** %59, align 8
  %119 = getelementptr inbounds %"class.blink::LayoutText", %"class.blink::LayoutText"* %118, i64 0, i32 7, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %125, label %122

122:                                              ; preds = %100
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 1
  %124 = load i32, i32* %123, align 4
  br label %125

125:                                              ; preds = %100, %122
  %126 = phi i32 [ %124, %122 ], [ 0, %100 ]
  %127 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %45, i64 0, i32 3
  %128 = load i32, i32* %127, align 8
  %129 = sub i32 %126, %128
  %130 = select i1 %101, %"class.WTF::StringBuilder"* %10, %"class.WTF::StringBuilder"* null
  call void @_ZNK5blink13InlineTextBox16ConstructTextRunERKNS_13ComputedStyleEN3WTF10StringViewEiPNS4_13StringBuilderE(%"class.blink::TextRun"* nonnull sret %11, %"class.blink::InlineTextBox"* %45, %"class.blink::ComputedStyle"* dereferenceable(104) %3, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %12, i32 %129, %"class.WTF::StringBuilder"* %130) #11
  br i1 %101, label %131, label %133

131:                                              ; preds = %125
  %132 = load i32, i32* %103, align 4
  store i32 %132, i32* %9, align 4
  br label %133

133:                                              ; preds = %131, %125
  call void @_ZNK5blink17LayoutTextCombine28TransformToInlineCoordinatesERNS_15GraphicsContextERKNS_12PhysicalRectEb(%"class.blink::LayoutTextCombine"* %5, %"class.blink::GraphicsContext"* dereferenceable(112) %1, %"struct.blink::PhysicalRect"* dereferenceable(16) %2, i1 zeroext true) #11
  %134 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %30, align 8
  %135 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %134) #11
  %136 = call i32 @_ZNK5blink13RootInlineBox15SelectionBottomEv(%"class.blink::RootInlineBox"* %135) #11
  %137 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %30, align 8
  %138 = call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZNK5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %137) #11
  %139 = call i32 @_ZNK5blink13RootInlineBox12SelectionTopEv(%"class.blink::RootInlineBox"* %138) #11
  %140 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %18, align 8
  %141 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %140, i64 0, i32 0, i32 4, i32 0
  %142 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %142, i64 0, i32 5, i32 0
  %144 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %144, i64 0, i32 0, i32 9
  %146 = bitcast [20 x i8]* %145 to i160*
  %147 = load i160, i160* %146, align 8
  %148 = and i160 %147, 15211807202738752817960438464512
  %149 = icmp eq i160 %148, 10141204801825835211973625643008
  %150 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %140, i64 0, i32 0, i32 7, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = and i32 %151, 2048
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %140, i64 0, i32 0, i32 5, i32 1, i32 0
  %155 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %140, i64 0, i32 0, i32 5, i32 0, i32 0
  %156 = select i1 %153, i32* %155, i32* %154
  %157 = load i32, i32* %156, align 4
  br i1 %149, label %158, label %170

158:                                              ; preds = %133
  %159 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %140, i64 0, i32 0
  %160 = call i32 @_ZNK5blink9InlineBox13LogicalHeightEv(%"class.blink::InlineBox"* %159) #11
  %161 = icmp slt i32 %160, 0
  %162 = select i1 %161, i32 -2147483648, i32 2147483647
  %163 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %157, i32 %160) #11
  %164 = extractvalue { i32, i1 } %163, 1
  %165 = extractvalue { i32, i1 } %163, 0
  %166 = select i1 %164, i32 %162, i32 %165, !prof !2
  %167 = icmp sgt i32 %166, -1
  %168 = select i1 %167, i32 -2147483648, i32 2147483647
  %169 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %136, i32 %166) #11
  br label %174

170:                                              ; preds = %133
  %171 = icmp sgt i32 %139, -1
  %172 = select i1 %171, i32 -2147483648, i32 2147483647
  %173 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %157, i32 %139) #11
  br label %174

174:                                              ; preds = %170, %158
  %175 = phi { i32, i1 } [ %173, %170 ], [ %169, %158 ]
  %176 = phi i32 [ %172, %170 ], [ %168, %158 ]
  %177 = extractvalue { i32, i1 } %175, 1
  %178 = extractvalue { i32, i1 } %175, 0
  %179 = select i1 %177, i32 %176, i32 %178
  %180 = sdiv i32 %179, 64
  %181 = srem i32 %179, 64
  %182 = add nsw i32 %181, 32
  %183 = ashr i32 %182, 6
  %184 = add nsw i32 %183, %180
  %185 = icmp sgt i32 %139, -1
  %186 = select i1 %185, i32 -2147483648, i32 2147483647
  %187 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %136, i32 %139) #11
  %188 = extractvalue { i32, i1 } %187, 1
  %189 = extractvalue { i32, i1 } %187, 0
  %190 = select i1 %188, i32 %186, i32 %189, !prof !2
  %191 = sdiv i32 %190, 64
  %192 = srem i32 %190, 64
  %193 = add nsw i32 %192, 32
  %194 = ashr i32 %193, 6
  %195 = add nsw i32 %194, %191
  %196 = icmp sgt i32 %195, 0
  %197 = select i1 %196, i32 %195, i32 0
  %198 = bitcast %"class.blink::FloatPoint"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #11
  %199 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %13, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %199, align 4
  %200 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %13, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %200, align 4
  %201 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 0, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = sitofp i32 %202 to float
  %204 = fmul float %203, 1.562500e-02
  %205 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 1, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp sgt i32 %184, 33554431
  br i1 %207, label %213, label %208

208:                                              ; preds = %174
  %209 = icmp slt i32 %184, -33554432
  br i1 %209, label %215, label %210

210:                                              ; preds = %208
  %211 = shl i32 %184, 6
  %212 = icmp sgt i32 %211, -1
  br i1 %212, label %213, label %215

213:                                              ; preds = %174, %210
  %214 = phi i32 [ %211, %210 ], [ 2147483647, %174 ]
  br label %215

215:                                              ; preds = %208, %210, %213
  %216 = phi i32 [ %214, %213 ], [ %211, %210 ], [ -2147483648, %208 ]
  %217 = phi i32 [ -2147483648, %213 ], [ 2147483647, %210 ], [ 2147483647, %208 ]
  %218 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %206, i32 %216) #11
  %219 = extractvalue { i32, i1 } %218, 1
  %220 = extractvalue { i32, i1 } %218, 0
  %221 = select i1 %219, i32 %217, i32 %220, !prof !2
  %222 = sitofp i32 %221 to float
  %223 = fmul float %222, 1.562500e-02
  store float %204, float* %199, align 4
  store float %223, float* %200, align 4
  %224 = bitcast { i64, i64 }* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %224) #11
  %225 = bitcast { i64, i64 }* %14 to i32*
  %226 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %15, i64 0, i32 0, i32 1, i32 0
  %227 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 1
  %228 = bitcast i64* %227 to i32*
  %229 = sitofp i32 %197 to float
  %230 = load i32, i32* %8, align 4
  %231 = load i32, i32* %9, align 4
  %232 = call { <2 x float>, <2 x float> } @_ZNK5blink4Font20SelectionRectForTextERKNS_7TextRunERKNS_10FloatPointEfii(%"class.blink::Font"* %4, %"class.blink::TextRun"* nonnull dereferenceable(40) %11, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %13, float %229, i32 %230, i32 %231) #11
  %233 = extractvalue { <2 x float>, <2 x float> } %232, 0
  %234 = extractvalue { <2 x float>, <2 x float> } %232, 1
  %235 = extractelement <2 x float> %233, i32 0
  %236 = fmul float %235, 6.400000e+01
  %237 = call float @llvm.floor.f32(float %236) #11
  %238 = fcmp ult float %237, 0xC1E0000000000000
  %239 = fcmp ugt float %237, 0x41DFFFFFE0000000
  %240 = fcmp ogt float %237, 0xC1E0000000000000
  %241 = select i1 %240, float %237, float 0xC1E0000000000000
  %242 = fptosi float %241 to i32
  %243 = select i1 %238, i32 0, i32 2147483647
  %244 = select i1 %239, i32 %243, i32 %242
  %245 = extractelement <2 x float> %233, i32 1
  %246 = fmul float %245, 6.400000e+01
  %247 = call float @llvm.floor.f32(float %246) #11
  %248 = fcmp ult float %247, 0xC1E0000000000000
  %249 = fcmp ugt float %247, 0x41DFFFFFE0000000
  %250 = fcmp ogt float %247, 0xC1E0000000000000
  %251 = select i1 %250, float %247, float 0xC1E0000000000000
  %252 = fptosi float %251 to i32
  %253 = select i1 %248, i32 0, i32 2147483647
  %254 = select i1 %249, i32 %253, i32 %252
  %255 = extractelement <2 x float> %234, i32 0
  %256 = fadd float %235, %255
  %257 = fmul float %256, 6.400000e+01
  %258 = call float @llvm.ceil.f32(float %257) #11
  %259 = fcmp ult float %258, 0xC1E0000000000000
  %260 = fcmp ugt float %258, 0x41DFFFFFE0000000
  %261 = fcmp ogt float %258, 0xC1E0000000000000
  %262 = select i1 %261, float %258, float 0xC1E0000000000000
  %263 = fptosi float %262 to i32
  %264 = select i1 %259, i32 0, i32 2147483647
  %265 = select i1 %260, i32 %264, i32 %263
  %266 = icmp sgt i32 %244, -1
  %267 = select i1 %266, i32 -2147483648, i32 2147483647
  %268 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %265, i32 %244) #11
  %269 = extractvalue { i32, i1 } %268, 1
  %270 = extractvalue { i32, i1 } %268, 0
  %271 = select i1 %269, i32 %267, i32 %270, !prof !2
  %272 = extractelement <2 x float> %234, i32 1
  %273 = fadd float %245, %272
  %274 = fmul float %273, 6.400000e+01
  %275 = call float @llvm.ceil.f32(float %274) #11
  %276 = fcmp ult float %275, 0xC1E0000000000000
  %277 = fcmp ugt float %275, 0x41DFFFFFE0000000
  %278 = fcmp ogt float %275, 0xC1E0000000000000
  %279 = select i1 %278, float %275, float 0xC1E0000000000000
  %280 = fptosi float %279 to i32
  %281 = select i1 %276, i32 0, i32 2147483647
  %282 = select i1 %277, i32 %281, i32 %280
  %283 = icmp sgt i32 %254, -1
  %284 = select i1 %283, i32 -2147483648, i32 2147483647
  %285 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %282, i32 %254) #11
  %286 = extractvalue { i32, i1 } %285, 1
  %287 = extractvalue { i32, i1 } %285, 0
  %288 = select i1 %286, i32 %284, i32 %287, !prof !2
  %289 = zext i32 %254 to i64
  %290 = shl nuw i64 %289, 32
  %291 = zext i32 %244 to i64
  %292 = or i64 %290, %291
  %293 = zext i32 %288 to i64
  %294 = shl nuw i64 %293, 32
  %295 = zext i32 %271 to i64
  %296 = or i64 %294, %295
  %297 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %14, i64 0, i32 0
  store i64 %292, i64* %297, align 8
  store i64 %296, i64* %227, align 8
  %298 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %18, align 8
  %299 = call zeroext i1 @_ZNK5blink13InlineTextBox26HasWrappedSelectionNewlineEv(%"class.blink::InlineTextBox"* %298) #11
  br i1 %299, label %300, label %337

300:                                              ; preds = %215
  %301 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %18, align 8
  %302 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %301, i64 0, i32 5
  %303 = load i16, i16* %302, align 2
  %304 = icmp eq i16 %303, -1
  br i1 %304, label %305, label %337

305:                                              ; preds = %300
  %306 = call zeroext i1 @_ZNK5blink13InlineTextBox11IsLineBreakEv(%"class.blink::InlineTextBox"* %301) #11
  br i1 %306, label %337, label %307

307:                                              ; preds = %305
  %308 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %18, align 8
  %309 = call float @_ZNK5blink13InlineTextBox17NewlineSpaceWidthEv(%"class.blink::InlineTextBox"* %308) #11
  %310 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %30, align 8
  %311 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %310, i64 0, i32 7, i32 0
  %312 = load i32, i32* %311, align 4
  %313 = and i32 %312, 4
  %314 = icmp eq i32 %313, 0
  %315 = bitcast %"class.blink::LayoutRectOutsets"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %315) #11
  %316 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %7, i64 0, i32 0, i32 0
  store i32 0, i32* %316, align 4
  %317 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %7, i64 0, i32 1, i32 0
  %318 = fmul float %309, 6.400000e+01
  %319 = select i1 %314, float %318, float 0.000000e+00
  %320 = fcmp ult float %319, 0xC1E0000000000000
  %321 = fcmp ugt float %319, 0x41DFFFFFE0000000
  %322 = fcmp ogt float %319, 0xC1E0000000000000
  %323 = select i1 %322, float %319, float 0xC1E0000000000000
  %324 = fptosi float %323 to i32
  %325 = select i1 %320, i32 0, i32 2147483647
  %326 = select i1 %321, i32 %325, i32 %324
  store i32 %326, i32* %317, align 4
  %327 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %7, i64 0, i32 2, i32 0
  store i32 0, i32* %327, align 4
  %328 = getelementptr inbounds %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRectOutsets"* %7, i64 0, i32 3, i32 0
  %329 = select i1 %314, float 0.000000e+00, float %318
  %330 = fcmp ult float %329, 0xC1E0000000000000
  %331 = fcmp ugt float %329, 0x41DFFFFFE0000000
  %332 = fcmp ogt float %329, 0xC1E0000000000000
  %333 = select i1 %332, float %329, float 0xC1E0000000000000
  %334 = fptosi float %333 to i32
  %335 = select i1 %330, i32 0, i32 2147483647
  %336 = select i1 %331, i32 %335, i32 %334
  store i32 %336, i32* %328, align 4
  call void @_ZN5blink12PhysicalRect6ExpandERKNS_17LayoutRectOutsetsE(%"struct.blink::PhysicalRect"* nonnull %15, %"class.blink::LayoutRectOutsets"* nonnull dereferenceable(16) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %315) #11
  br label %337

337:                                              ; preds = %307, %305, %300, %215
  %338 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %30, align 8
  %339 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %338, i64 0, i32 7, i32 0
  %340 = load i32, i32* %339, align 4
  %341 = and i32 %340, 4
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %372, label %343

343:                                              ; preds = %337
  %344 = bitcast %"class.blink::InlineBox"* %338 to %"class.blink::InlineTextBox"*
  %345 = call zeroext i1 @_ZNK5blink13InlineTextBox11IsLineBreakEv(%"class.blink::InlineTextBox"* %344) #11
  br i1 %345, label %346, label %372

346:                                              ; preds = %343
  %347 = load i32, i32* %228, align 8
  %348 = call i1 @llvm.is.constant.i32(i32 %347) #11
  br i1 %348, label %349, label %353

349:                                              ; preds = %346
  %350 = sub i32 0, %347
  %351 = icmp eq i32 %350, -2147483648
  %352 = select i1 %351, i32 2147483647, i32 %350
  br label %358

353:                                              ; preds = %346
  %354 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %347) #11
  %355 = extractvalue { i32, i1 } %354, 1
  %356 = extractvalue { i32, i1 } %354, 0
  %357 = select i1 %355, i32 2147483647, i32 %356
  br label %358

358:                                              ; preds = %349, %353
  %359 = phi i32 [ %352, %349 ], [ %357, %353 ]
  %360 = load i32, i32* %225, align 8
  %361 = icmp slt i32 %359, 0
  %362 = select i1 %361, i32 -2147483648, i32 2147483647
  %363 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %360, i32 %359) #11
  %364 = extractvalue { i32, i1 } %363, 1
  %365 = extractvalue { i32, i1 } %363, 0
  %366 = select i1 %364, i32 %362, i32 %365, !prof !2
  %367 = load i32, i32* %226, align 4
  %368 = zext i32 %367 to i64
  %369 = shl nuw i64 %368, 32
  %370 = zext i32 %366 to i64
  %371 = or i64 %369, %370
  store i64 %371, i64* %297, align 8
  br label %372

372:                                              ; preds = %358, %343, %337
  %373 = or i1 %34, %44
  br i1 %373, label %401, label %374

374:                                              ; preds = %372
  %375 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %18, align 8
  %376 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %375, i64 0, i32 5
  %377 = load i16, i16* %376, align 2
  %378 = icmp eq i16 %377, -1
  br i1 %378, label %401, label %379

379:                                              ; preds = %374
  %380 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %375, i64 0, i32 0, i32 6, i32 0
  %381 = load i32, i32* %380, align 8
  %382 = load i32, i32* %228, align 8
  %383 = icmp sgt i32 %382, -1
  %384 = select i1 %383, i32 -2147483648, i32 2147483647
  %385 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %381, i32 %382) #11
  %386 = extractvalue { i32, i1 } %385, 1
  %387 = extractvalue { i32, i1 } %385, 0
  %388 = select i1 %386, i32 %384, i32 %387, !prof !2
  %389 = load i32, i32* %225, align 8
  %390 = icmp slt i32 %388, 0
  %391 = select i1 %390, i32 -2147483648, i32 2147483647
  %392 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %389, i32 %388) #11
  %393 = extractvalue { i32, i1 } %392, 1
  %394 = extractvalue { i32, i1 } %392, 0
  %395 = select i1 %393, i32 %391, i32 %394, !prof !2
  %396 = load i32, i32* %226, align 4
  %397 = zext i32 %396 to i64
  %398 = shl nuw i64 %397, 32
  %399 = zext i32 %395 to i64
  %400 = or i64 %398, %399
  store i64 %400, i64* %297, align 8
  br label %401

401:                                              ; preds = %372, %374, %379
  %402 = load i64, i64* %297, align 8
  %403 = load i64, i64* %227, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %224) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %102) #11
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %10) #11
  %404 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %405 = icmp eq %"class.WTF::StringImpl"* %404, null
  br i1 %405, label %419, label %406

406:                                              ; preds = %401
  %407 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %404, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %408 = load atomic i32, i32* %407 monotonic, align 4
  %409 = and i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %404, i64 0, i32 0
  %412 = load i32, i32* %411, align 4
  br i1 %410, label %413, label %415

413:                                              ; preds = %406
  %414 = add i32 %412, -1
  store i32 %414, i32* %411, align 4
  br label %415

415:                                              ; preds = %413, %406
  %416 = phi i32 [ %414, %413 ], [ %412, %406 ]
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %418, label %419

418:                                              ; preds = %415
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %404) #11
  br label %419

419:                                              ; preds = %401, %415, %418
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %86) #11
  br label %420

420:                                              ; preds = %6, %419
  %421 = phi i64 [ %403, %419 ], [ 0, %6 ]
  %422 = phi i64 [ %402, %419 ], [ 0, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #11
  %423 = insertvalue { i64, i64 } undef, i64 %422, 0
  %424 = insertvalue { i64, i64 } %423, i64 %421, 1
  ret { i64, i64 } %424
}

declare void @_ZN5blink15GraphicsContext8FillRectERKNS_9FloatRectERKNS_5ColorE11SkBlendModeNS_14DarkModeFilter11ElementRoleE(%"class.blink::GraphicsContext"*, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::Color"* dereferenceable(4), i32, i32) local_unnamed_addr #3

declare void @_ZNK5blink17LayoutTextCombine28TransformToInlineCoordinatesERNS_15GraphicsContextERKNS_12PhysicalRectEb(%"class.blink::LayoutTextCombine"*, %"class.blink::GraphicsContext"* dereferenceable(112), %"struct.blink::PhysicalRect"* dereferenceable(16), i1 zeroext) local_unnamed_addr #3

declare i32 @_ZN5blink7MakeRGBEiii(i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4absl17optional_internal18optional_data_baseIN5blink18TextDecorationInfoEE9constructIJRNS2_14PhysicalOffsetES7_RNS2_10LayoutUnitENS2_12FontBaselineERKNS2_13ComputedStyleERNS_8optionalINS2_21AppliedTextDecorationEEERPSC_EEEvDpOT_(%"class.absl::optional_internal::optional_data_base.2918"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.blink::LayoutUnit"* dereferenceable(4), i32* dereferenceable(4), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.absl::optional.2900"* dereferenceable(32), %"class.blink::ComputedStyle"** dereferenceable(8)) local_unnamed_addr #2 comdat align 2 {
  %9 = alloca %"class.absl::optional.2900", align 4
  %10 = getelementptr inbounds %"class.absl::optional_internal::optional_data_base.2918", %"class.absl::optional_internal::optional_data_base.2918"* %0, i64 0, i32 0, i32 1, i32 0
  %11 = bitcast %"struct.blink::PhysicalOffset"* %2 to i64*
  %12 = load i64, i64* %11, align 4
  %13 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = load i32, i32* %4, align 4
  %16 = getelementptr inbounds %"class.absl::optional.2900", %"class.absl::optional.2900"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.absl::optional.2900", %"class.absl::optional.2900"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = getelementptr inbounds %"class.absl::optional.2900", %"class.absl::optional.2900"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %16, i8 0, i64 32, i1 false) #11
  %19 = load i8, i8* %18, align 4, !range !6
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %46, label %21

21:                                               ; preds = %8
  %22 = getelementptr inbounds %"class.absl::optional.2900", %"class.absl::optional.2900"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = bitcast %"class.blink::AppliedTextDecoration"* %22 to <2 x i64>*
  %24 = load <2 x i64>, <2 x i64>* %23, align 4
  %25 = bitcast i8* %17 to <2 x i64>*
  store <2 x i64> %24, <2 x i64>* %25, align 4
  %26 = extractelement <2 x i64> %24, i32 1
  %27 = and i64 %26, 280375465082880
  %28 = icmp eq i64 %27, 8796093022208
  br i1 %28, label %29, label %32

29:                                               ; preds = %21
  %30 = getelementptr inbounds i8, i8* %17, i64 8
  %31 = bitcast i8* %30 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %31) #11
  br label %32

32:                                               ; preds = %29, %21
  %33 = getelementptr inbounds i8, i8* %17, i64 16
  %34 = getelementptr inbounds %"class.absl::optional.2900", %"class.absl::optional.2900"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 1
  %35 = load i8, i8* %34, align 4, !range !6
  store i8 %35, i8* %33, align 4
  %36 = getelementptr inbounds i8, i8* %17, i64 20
  %37 = getelementptr inbounds %"class.absl::optional.2900", %"class.absl::optional.2900"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  %38 = bitcast %"class.blink::Length"* %37 to i64*
  %39 = bitcast i8* %36 to i64*
  %40 = load i64, i64* %38, align 4
  store i64 %40, i64* %39, align 4
  %41 = and i64 %40, 280375465082880
  %42 = icmp eq i64 %41, 8796093022208
  br i1 %42, label %43, label %45

43:                                               ; preds = %32
  %44 = bitcast i8* %36 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %44) #11
  br label %45

45:                                               ; preds = %43, %32
  store i8 1, i8* %16, align 4
  br label %46

46:                                               ; preds = %8, %45
  %47 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  call void @_ZN5blink18TextDecorationInfoC1ERKNS_14PhysicalOffsetES1_NS_10LayoutUnitENS_12FontBaselineERKNS_13ComputedStyleEN4absl8optionalINS_21AppliedTextDecorationEEEPS7_(%"class.blink::TextDecorationInfo"* %10, %"struct.blink::PhysicalOffset"* dereferenceable(8) %1, i64 %12, i32 %14, i32 %15, %"class.blink::ComputedStyle"* dereferenceable(104) %5, %"class.absl::optional.2900"* nonnull %9, %"class.blink::ComputedStyle"* %47) #11
  %48 = load i8, i8* %16, align 4, !range !6
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.absl::optional.2900", %"class.absl::optional.2900"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3, i32 2
  %52 = load i8, i8* %51, align 1
  %53 = icmp eq i8 %52, 8
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.absl::optional.2900", %"class.absl::optional.2900"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 3
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %55) #11
  br label %56

56:                                               ; preds = %54, %50
  %57 = getelementptr inbounds %"class.absl::optional.2900", %"class.absl::optional.2900"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0, i32 2
  %58 = load i8, i8* %57, align 1
  %59 = icmp eq i8 %58, 8
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.absl::optional.2900", %"class.absl::optional.2900"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2, i32 0
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %61) #11
  br label %62

62:                                               ; preds = %60, %56
  store i8 0, i8* %16, align 4
  br label %63

63:                                               ; preds = %46, %62
  %64 = getelementptr inbounds %"class.absl::optional_internal::optional_data_base.2918", %"class.absl::optional_internal::optional_data_base.2918"* %0, i64 0, i32 0, i32 0
  store i8 1, i8* %64, align 8
  ret void
}

declare void @_ZN5blink18TextDecorationInfoC1ERKNS_14PhysicalOffsetES1_NS_10LayoutUnitENS_12FontBaselineERKNS_13ComputedStyleEN4absl8optionalINS_21AppliedTextDecorationEEEPS7_(%"class.blink::TextDecorationInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i64, i32, i32, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.absl::optional.2900"*, %"class.blink::ComputedStyle"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #7

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind readnone }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink15TextPainterBase8RotationERKNS_12PhysicalRectENS0_17RotationDirectionE: argument 0"}
!5 = distinct !{!5, !"_ZN5blink15TextPainterBase8RotationERKNS_12PhysicalRectENS0_17RotationDirectionE"}
!6 = !{i8 0, i8 2}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN5blink15TextPainterBase8RotationERKNS_12PhysicalRectENS0_17RotationDirectionE: argument 0"}
!9 = distinct !{!9, !"_ZN5blink15TextPainterBase8RotationERKNS_12PhysicalRectENS0_17RotationDirectionE"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK5blink20InlineTextBoxPainter21ComputeMarkersToPaintEv: argument 0"}
!12 = distinct !{!12, !"_ZNK5blink20InlineTextBoxPainter21ComputeMarkersToPaintEv"}
!13 = !{!"branch_weights", i32 2000, i32 1}
