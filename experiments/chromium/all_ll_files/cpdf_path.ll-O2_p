; ModuleID = '../../third_party/pdfium/core/fpdfapi/page/cpdf_path.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/page/cpdf_path.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_Path = type { %"class.fxcrt::SharedCopyOnWrite" }
%"class.fxcrt::SharedCopyOnWrite" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFX_RetainablePathData* }
%class.CFX_RetainablePathData = type { %"class.fxcrt::Retainable", %class.CFX_PathData }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%class.CFX_PathData = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.0" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %class.FX_PATHPOINT* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFX_FloatRect = type { float, float, float, float }

$_ZN5fxcrt17SharedCopyOnWriteI22CFX_RetainablePathDataE14GetPrivateCopyIJEEEPS1_DpT_ = comdat any

@_ZN9CPDF_PathC1Ev = hidden unnamed_addr alias void (%class.CPDF_Path*), void (%class.CPDF_Path*)* @_ZN9CPDF_PathC2Ev
@_ZN9CPDF_PathC1ERKS_ = hidden unnamed_addr alias void (%class.CPDF_Path*, %class.CPDF_Path*), void (%class.CPDF_Path*, %class.CPDF_Path*)* @_ZN9CPDF_PathC2ERKS_
@_ZN9CPDF_PathD1Ev = hidden unnamed_addr alias void (%class.CPDF_Path*), void (%class.CPDF_Path*)* @_ZN9CPDF_PathD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN9CPDF_PathC2Ev(%class.CPDF_Path* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPDF_Path* %0 to i64*
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9CPDF_PathC2ERKS_(%class.CPDF_Path* nocapture, %class.CPDF_Path* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CPDF_Path, %class.CPDF_Path* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFX_RetainablePathData*, %class.CFX_RetainablePathData** %3, align 8
  %5 = ptrtoint %class.CFX_RetainablePathData* %4 to i64
  %6 = bitcast %class.CPDF_Path* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = icmp eq %class.CFX_RetainablePathData* %4, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %4, i64 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %10, 1
  store i64 %11, i64* %9, align 8
  br label %12

12:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_PathD2Ev(%class.CPDF_Path* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Path, %class.CPDF_Path* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_RetainablePathData*, %class.CFX_RetainablePathData** %2, align 8
  store %class.CFX_RetainablePathData* null, %class.CFX_RetainablePathData** %2, align 8
  %4 = icmp eq %class.CFX_RetainablePathData* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %3, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %3, i64 0, i32 0
  %12 = bitcast %class.CFX_RetainablePathData* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #8
  br label %16

16:                                               ; preds = %1, %5, %10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZNK9CPDF_Path9GetPointsEv(%class.CPDF_Path* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Path, %class.CPDF_Path* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_RetainablePathData*, %class.CFX_RetainablePathData** %2, align 8
  %4 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %3, i64 0, i32 1, i32 0
  ret %"class.std::__1::vector"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_Path9ClosePathEv(%class.CPDF_Path*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Path, %class.CPDF_Path* %0, i64 0, i32 0
  %3 = tail call %class.CFX_RetainablePathData* @_ZN5fxcrt17SharedCopyOnWriteI22CFX_RetainablePathDataE14GetPrivateCopyIJEEEPS1_DpT_(%"class.fxcrt::SharedCopyOnWrite"* %2)
  %4 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %3, i64 0, i32 1
  tail call void @_ZN12CFX_PathData9ClosePathEv(%class.CFX_PathData* %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.CFX_RetainablePathData* @_ZN5fxcrt17SharedCopyOnWriteI22CFX_RetainablePathDataE14GetPrivateCopyIJEEEPS1_DpT_(%"class.fxcrt::SharedCopyOnWrite"*) local_unnamed_addr #2 comdat align 2 {
  %2 = alloca %"class.fxcrt::RetainPtr", align 8
  %3 = getelementptr inbounds %"class.fxcrt::SharedCopyOnWrite", %"class.fxcrt::SharedCopyOnWrite"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CFX_RetainablePathData*, %class.CFX_RetainablePathData** %3, align 8
  %5 = icmp eq %class.CFX_RetainablePathData* %4, null
  br i1 %5, label %6, label %28

6:                                                ; preds = %1
  %7 = tail call i8* @_Znwm(i64 40) #9, !noalias !2
  %8 = bitcast i8* %7 to %class.CFX_RetainablePathData*
  tail call void @_ZN22CFX_RetainablePathDataC1Ev(%class.CFX_RetainablePathData* nonnull %8) #8, !noalias !2
  %9 = ptrtoint i8* %7 to i64
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8, !noalias !2
  %13 = add nsw i64 %12, 1
  store i64 %13, i64* %11, align 8, !noalias !2
  %14 = load %class.CFX_RetainablePathData*, %class.CFX_RetainablePathData** %3, align 8
  %15 = bitcast %"class.fxcrt::SharedCopyOnWrite"* %0 to i64*
  store i64 %9, i64* %15, align 8
  %16 = icmp eq %class.CFX_RetainablePathData* %14, null
  br i1 %16, label %67, label %17

17:                                               ; preds = %6
  %18 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %14, i64 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add nsw i64 %19, -1
  store i64 %20, i64* %18, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %67

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %14, i64 0, i32 0
  %24 = bitcast %class.CFX_RetainablePathData* %14 to void (%"class.fxcrt::Retainable"*)***
  %25 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %25, i64 1
  %27 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %26, align 8
  tail call void %27(%"class.fxcrt::Retainable"* nonnull %23) #8
  br label %67

28:                                               ; preds = %1
  %29 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %4, i64 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 1
  br i1 %31, label %67, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.fxcrt::RetainPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  call void @_ZNK22CFX_RetainablePathData5CloneEv(%"class.fxcrt::RetainPtr"* nonnull sret %2, %class.CFX_RetainablePathData* nonnull %4) #8
  %34 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.fxcrt::RetainPtr"* %2 to i64*
  %36 = load i64, i64* %35, align 8
  store %class.CFX_RetainablePathData* null, %class.CFX_RetainablePathData** %34, align 8
  %37 = load %class.CFX_RetainablePathData*, %class.CFX_RetainablePathData** %3, align 8
  %38 = bitcast %"class.fxcrt::SharedCopyOnWrite"* %0 to i64*
  store i64 %36, i64* %38, align 8
  %39 = icmp eq %class.CFX_RetainablePathData* %37, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %32
  store %class.CFX_RetainablePathData* null, %class.CFX_RetainablePathData** %34, align 8
  br label %66

41:                                               ; preds = %32
  %42 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %37, i64 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = add nsw i64 %43, -1
  store i64 %44, i64* %42, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %47, label %46

46:                                               ; preds = %41
  store %class.CFX_RetainablePathData* null, %class.CFX_RetainablePathData** %34, align 8
  br label %66

47:                                               ; preds = %41
  %48 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %37, i64 0, i32 0
  %49 = bitcast %class.CFX_RetainablePathData* %37 to void (%"class.fxcrt::Retainable"*)***
  %50 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, i64 1
  %52 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %51, align 8
  call void %52(%"class.fxcrt::Retainable"* nonnull %48) #8
  %53 = load %class.CFX_RetainablePathData*, %class.CFX_RetainablePathData** %34, align 8
  %54 = bitcast %class.CFX_RetainablePathData* %53 to void (%"class.fxcrt::Retainable"*)***
  store %class.CFX_RetainablePathData* null, %class.CFX_RetainablePathData** %34, align 8
  %55 = icmp eq %class.CFX_RetainablePathData* %53, null
  br i1 %55, label %66, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %53, i64 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = add nsw i64 %58, -1
  store i64 %59, i64* %57, align 8
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %66

61:                                               ; preds = %56
  %62 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %53, i64 0, i32 0
  %63 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %54, align 8
  %64 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %63, i64 1
  %65 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %64, align 8
  call void %65(%"class.fxcrt::Retainable"* nonnull %62) #8
  br label %66

66:                                               ; preds = %46, %40, %47, %56, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  br label %67

67:                                               ; preds = %28, %66, %22, %17, %6
  %68 = load %class.CFX_RetainablePathData*, %class.CFX_RetainablePathData** %3, align 8
  ret %class.CFX_RetainablePathData* %68
}

declare void @_ZN12CFX_PathData9ClosePathEv(%class.CFX_PathData*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK9CPDF_Path8GetPointEi(%class.CFX_PTemplate* noalias nocapture sret, %class.CPDF_Path* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.CPDF_Path, %class.CPDF_Path* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CFX_RetainablePathData*, %class.CFX_RetainablePathData** %4, align 8
  %6 = sext i32 %2 to i64
  %7 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %class.FX_PATHPOINT*, %class.FX_PATHPOINT** %7, align 8, !noalias !5
  %9 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %8, i64 %6, i32 0
  %10 = bitcast %class.CFX_PTemplate* %9 to i32*
  %11 = load i32, i32* %10, align 4, !noalias !5
  %12 = bitcast %class.CFX_PTemplate* %0 to i32*
  store i32 %11, i32* %12, align 4, !alias.scope !5
  %13 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 1
  %14 = getelementptr inbounds %class.FX_PATHPOINT, %class.FX_PATHPOINT* %8, i64 %6, i32 0, i32 1
  %15 = bitcast float* %14 to i32*
  %16 = load i32, i32* %15, align 4, !noalias !5
  %17 = bitcast float* %13 to i32*
  store i32 %16, i32* %17, align 4, !alias.scope !5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK9CPDF_Path14GetBoundingBoxEv(%class.CPDF_Path* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Path, %class.CPDF_Path* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_RetainablePathData*, %class.CFX_RetainablePathData** %2, align 8
  %4 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %3, i64 0, i32 1
  %5 = tail call { <2 x float>, <2 x float> } @_ZNK12CFX_PathData14GetBoundingBoxEv(%class.CFX_PathData* %4) #8
  ret { <2 x float>, <2 x float> } %5
}

declare { <2 x float>, <2 x float> } @_ZNK12CFX_PathData14GetBoundingBoxEv(%class.CFX_PathData*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK9CPDF_Path27GetBoundingBoxForStrokePathEff(%class.CPDF_Path* nocapture readonly, float, float) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPDF_Path, %class.CPDF_Path* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CFX_RetainablePathData*, %class.CFX_RetainablePathData** %4, align 8
  %6 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %5, i64 0, i32 1
  %7 = tail call { <2 x float>, <2 x float> } @_ZNK12CFX_PathData27GetBoundingBoxForStrokePathEff(%class.CFX_PathData* %6, float %1, float %2) #8
  ret { <2 x float>, <2 x float> } %7
}

declare { <2 x float>, <2 x float> } @_ZNK12CFX_PathData27GetBoundingBoxForStrokePathEff(%class.CFX_PathData*, float, float) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK9CPDF_Path6IsRectEv(%class.CPDF_Path* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Path, %class.CPDF_Path* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CFX_RetainablePathData*, %class.CFX_RetainablePathData** %2, align 8
  %4 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %3, i64 0, i32 1
  %5 = tail call zeroext i1 @_ZNK12CFX_PathData6IsRectEv(%class.CFX_PathData* %4) #8
  ret i1 %5
}

declare zeroext i1 @_ZNK12CFX_PathData6IsRectEv(%class.CFX_PathData*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_Path9TransformERK10CFX_Matrix(%class.CPDF_Path*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CPDF_Path, %class.CPDF_Path* %0, i64 0, i32 0
  %4 = tail call %class.CFX_RetainablePathData* @_ZN5fxcrt17SharedCopyOnWriteI22CFX_RetainablePathDataE14GetPrivateCopyIJEEEPS1_DpT_(%"class.fxcrt::SharedCopyOnWrite"* %3)
  %5 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %4, i64 0, i32 1
  tail call void @_ZN12CFX_PathData9TransformERK10CFX_Matrix(%class.CFX_PathData* %5, %class.CFX_Matrix* dereferenceable(24) %1) #8
  ret void
}

declare void @_ZN12CFX_PathData9TransformERK10CFX_Matrix(%class.CFX_PathData*, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_Path6AppendERK12CFX_PathDataPK10CFX_Matrix(%class.CPDF_Path*, %class.CFX_PathData* dereferenceable(24), %class.CFX_Matrix*) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.CPDF_Path, %class.CPDF_Path* %0, i64 0, i32 0
  %5 = tail call %class.CFX_RetainablePathData* @_ZN5fxcrt17SharedCopyOnWriteI22CFX_RetainablePathDataE14GetPrivateCopyIJEEEPS1_DpT_(%"class.fxcrt::SharedCopyOnWrite"* %4)
  %6 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %5, i64 0, i32 1
  tail call void @_ZN12CFX_PathData6AppendERKS_PK10CFX_Matrix(%class.CFX_PathData* %6, %class.CFX_PathData* dereferenceable(24) %1, %class.CFX_Matrix* %2) #8
  ret void
}

declare void @_ZN12CFX_PathData6AppendERKS_PK10CFX_Matrix(%class.CFX_PathData*, %class.CFX_PathData* dereferenceable(24), %class.CFX_Matrix*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_Path15AppendFloatRectERK13CFX_FloatRect(%class.CPDF_Path*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.CPDF_Path, %class.CPDF_Path* %0, i64 0, i32 0
  %4 = tail call %class.CFX_RetainablePathData* @_ZN5fxcrt17SharedCopyOnWriteI22CFX_RetainablePathDataE14GetPrivateCopyIJEEEPS1_DpT_(%"class.fxcrt::SharedCopyOnWrite"* %3)
  %5 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %4, i64 0, i32 1
  tail call void @_ZN12CFX_PathData15AppendFloatRectERK13CFX_FloatRect(%class.CFX_PathData* %5, %class.CFX_FloatRect* dereferenceable(16) %1) #8
  ret void
}

declare void @_ZN12CFX_PathData15AppendFloatRectERK13CFX_FloatRect(%class.CFX_PathData*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_Path10AppendRectEffff(%class.CPDF_Path*, float, float, float, float) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %class.CPDF_Path, %class.CPDF_Path* %0, i64 0, i32 0
  %7 = tail call %class.CFX_RetainablePathData* @_ZN5fxcrt17SharedCopyOnWriteI22CFX_RetainablePathDataE14GetPrivateCopyIJEEEPS1_DpT_(%"class.fxcrt::SharedCopyOnWrite"* %6)
  %8 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %7, i64 0, i32 1
  tail call void @_ZN12CFX_PathData10AppendRectEffff(%class.CFX_PathData* %8, float %1, float %2, float %3, float %4) #8
  ret void
}

declare void @_ZN12CFX_PathData10AppendRectEffff(%class.CFX_PathData*, float, float, float, float) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_Path11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CPDF_Path*, %class.CFX_PTemplate* dereferenceable(8), i8 zeroext) local_unnamed_addr #2 align 2 {
  %4 = alloca %class.CFX_PathData, align 8
  %5 = bitcast %class.CFX_PathData* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8
  %6 = bitcast %class.CFX_PathData* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %4) #8
  call void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %4, %class.CFX_PTemplate* dereferenceable(8) %1, i8 zeroext %2) #8
  %7 = getelementptr inbounds %class.CPDF_Path, %class.CPDF_Path* %0, i64 0, i32 0
  %8 = call %class.CFX_RetainablePathData* @_ZN5fxcrt17SharedCopyOnWriteI22CFX_RetainablePathDataE14GetPrivateCopyIJEEEPS1_DpT_(%"class.fxcrt::SharedCopyOnWrite"* %7) #8
  %9 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %8, i64 0, i32 1
  call void @_ZN12CFX_PathData6AppendERKS_PK10CFX_Matrix(%class.CFX_PathData* %9, %class.CFX_PathData* nonnull dereferenceable(24) %4, %class.CFX_Matrix* null) #8
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData*) unnamed_addr #4

declare void @_ZN12CFX_PathData11AppendPointERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData*, %class.CFX_PTemplate* dereferenceable(8), i8 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_Path19AppendPointAndCloseERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CPDF_Path*, %class.CFX_PTemplate* dereferenceable(8), i8 zeroext) local_unnamed_addr #2 align 2 {
  %4 = alloca %class.CFX_PathData, align 8
  %5 = bitcast %class.CFX_PathData* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8
  %6 = bitcast %class.CFX_PathData* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 24, i1 false)
  call void @_ZN12CFX_PathDataC1Ev(%class.CFX_PathData* nonnull %4) #8
  call void @_ZN12CFX_PathData19AppendPointAndCloseERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData* nonnull %4, %class.CFX_PTemplate* dereferenceable(8) %1, i8 zeroext %2) #8
  %7 = getelementptr inbounds %class.CPDF_Path, %class.CPDF_Path* %0, i64 0, i32 0
  %8 = call %class.CFX_RetainablePathData* @_ZN5fxcrt17SharedCopyOnWriteI22CFX_RetainablePathDataE14GetPrivateCopyIJEEEPS1_DpT_(%"class.fxcrt::SharedCopyOnWrite"* %7) #8
  %9 = getelementptr inbounds %class.CFX_RetainablePathData, %class.CFX_RetainablePathData* %8, i64 0, i32 1
  call void @_ZN12CFX_PathData6AppendERKS_PK10CFX_Matrix(%class.CFX_PathData* %9, %class.CFX_PathData* nonnull dereferenceable(24) %4, %class.CFX_Matrix* null) #8
  call void @_ZN12CFX_PathDataD1Ev(%class.CFX_PathData* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8
  ret void
}

declare void @_ZN12CFX_PathData19AppendPointAndCloseERK13CFX_PTemplateIfE9FXPT_TYPE(%class.CFX_PathData*, %class.CFX_PTemplate* dereferenceable(8), i8 zeroext) local_unnamed_addr #4

declare void @_ZNK22CFX_RetainablePathData5CloneEv(%"class.fxcrt::RetainPtr"* sret, %class.CFX_RetainablePathData*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN22CFX_RetainablePathDataC1Ev(%class.CFX_RetainablePathData*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6pdfium10MakeRetainI22CFX_RetainablePathDataJEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!4 = distinct !{!4, !"_ZN6pdfium10MakeRetainI22CFX_RetainablePathDataJEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK12CFX_PathData8GetPointEi: argument 0"}
!7 = distinct !{!7, !"_ZNK12CFX_PathData8GetPointEi"}
