; ModuleID = '../../third_party/blink/renderer/platform/heap/impl/heap_stats_collector.cc'
source_filename = "../../third_party/blink/renderer/platform/heap/impl/heap_stats_collector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::ThreadHeapStatsCollector::Event" = type <{ i64, i64, i64, i64, i8, [7 x i8], [31 x %"class.base::TimeDelta"], [3 x i32], i32, i32, [4 x i8], i64, i64, i64, double, %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"class.blink::ThreadHeapStatsCollector" = type { %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event", i64, i64, i64, i64, i8, i8, %"class.base::TimeDelta", %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::ThreadHeapStatsObserver"**, i32, i32 }
%"class.blink::ThreadHeapStatsObserver" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF6VectorIPN5blink23ThreadHeapStatsObserverELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink23ThreadHeapStatsObserverEEEmm = comdat any

@_ZZN5blink24ThreadHeapStatsCollector5EventC1EvE7counter = internal global { { i64 } } zeroinitializer, align 8
@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink23ThreadHeapStatsObserverEEEPKcv = private unnamed_addr constant [80 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadHeapStatsObserver *]\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1

@_ZN5blink24ThreadHeapStatsCollector5EventC1Ev = hidden unnamed_addr alias void (%"struct.blink::ThreadHeapStatsCollector::Event"*), void (%"struct.blink::ThreadHeapStatsCollector::Event"*)* @_ZN5blink24ThreadHeapStatsCollector5EventC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink24ThreadHeapStatsCollector27IncreaseCompactionFreedSizeEm(%"class.blink::ThreadHeapStatsCollector"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 4
  store i8 1, i8* %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink24ThreadHeapStatsCollector28IncreaseCompactionFreedPagesEm(%"class.blink::ThreadHeapStatsCollector"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 4
  store i8 1, i8* %6, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink24ThreadHeapStatsCollector27IncreaseAllocatedObjectSizeEm(%"class.blink::ThreadHeapStatsCollector"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24ThreadHeapStatsCollector37IncreaseAllocatedObjectSizeForTestingEm(%"class.blink::ThreadHeapStatsCollector"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %8, %10
  store i64 %11, i64* %9, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeapStatsObserver"**, %"class.blink::ThreadHeapStatsObserver"*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %13, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %43, label %19

19:                                               ; preds = %2, %40
  %20 = phi i64 [ %42, %40 ], [ %7, %2 ]
  %21 = phi i64 [ %41, %40 ], [ %5, %2 ]
  %22 = phi %"class.blink::ThreadHeapStatsObserver"** [ %38, %40 ], [ %13, %2 ]
  %23 = load %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %22, align 8
  %24 = sub nsw i64 %21, %20
  %25 = icmp slt i64 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %19
  %27 = sub nsw i64 0, %24
  %28 = bitcast %"class.blink::ThreadHeapStatsObserver"* %23 to void (%"class.blink::ThreadHeapStatsObserver"*, i64)***
  %29 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)**, void (%"class.blink::ThreadHeapStatsObserver"*, i64)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %29, i64 4
  %31 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %30, align 8
  tail call void %31(%"class.blink::ThreadHeapStatsObserver"* %23, i64 %27) #9
  br label %37

32:                                               ; preds = %19
  %33 = bitcast %"class.blink::ThreadHeapStatsObserver"* %23 to void (%"class.blink::ThreadHeapStatsObserver"*, i64)***
  %34 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)**, void (%"class.blink::ThreadHeapStatsObserver"*, i64)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %34, i64 3
  %36 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %35, align 8
  tail call void %36(%"class.blink::ThreadHeapStatsObserver"* %23, i64 %24) #9
  br label %37

37:                                               ; preds = %32, %26
  %38 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %22, i64 1
  %39 = icmp eq %"class.blink::ThreadHeapStatsObserver"** %38, %17
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = load i64, i64* %3, align 8
  %42 = load i64, i64* %6, align 8
  br label %19

43:                                               ; preds = %37, %2
  %44 = bitcast i64* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24ThreadHeapStatsCollector32AllocatedObjectSizeSafepointImplEv(%"class.blink::ThreadHeapStatsCollector"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = sub i64 %3, %5
  %7 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = add nsw i64 %6, %8
  store i64 %9, i64* %7, align 8
  %10 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %11 = load %"class.blink::ThreadHeapStatsObserver"**, %"class.blink::ThreadHeapStatsObserver"*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %41, label %17

17:                                               ; preds = %1, %38
  %18 = phi i64 [ %40, %38 ], [ %5, %1 ]
  %19 = phi i64 [ %39, %38 ], [ %3, %1 ]
  %20 = phi %"class.blink::ThreadHeapStatsObserver"** [ %36, %38 ], [ %11, %1 ]
  %21 = load %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %20, align 8
  %22 = sub nsw i64 %19, %18
  %23 = icmp slt i64 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %17
  %25 = sub nsw i64 0, %22
  %26 = bitcast %"class.blink::ThreadHeapStatsObserver"* %21 to void (%"class.blink::ThreadHeapStatsObserver"*, i64)***
  %27 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)**, void (%"class.blink::ThreadHeapStatsObserver"*, i64)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %27, i64 4
  %29 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %28, align 8
  tail call void %29(%"class.blink::ThreadHeapStatsObserver"* %21, i64 %25) #9
  br label %35

30:                                               ; preds = %17
  %31 = bitcast %"class.blink::ThreadHeapStatsObserver"* %21 to void (%"class.blink::ThreadHeapStatsObserver"*, i64)***
  %32 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)**, void (%"class.blink::ThreadHeapStatsObserver"*, i64)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %32, i64 3
  %34 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %33, align 8
  tail call void %34(%"class.blink::ThreadHeapStatsObserver"* %21, i64 %22) #9
  br label %35

35:                                               ; preds = %30, %24
  %36 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %20, i64 1
  %37 = icmp eq %"class.blink::ThreadHeapStatsObserver"** %36, %15
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = load i64, i64* %2, align 8
  %40 = load i64, i64* %4, align 8
  br label %17

41:                                               ; preds = %35, %1
  %42 = bitcast i64* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink24ThreadHeapStatsCollector27DecreaseAllocatedObjectSizeEm(%"class.blink::ThreadHeapStatsCollector"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24ThreadHeapStatsCollector37DecreaseAllocatedObjectSizeForTestingEm(%"class.blink::ThreadHeapStatsCollector"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %7, %5
  %9 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = add nsw i64 %8, %10
  store i64 %11, i64* %9, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeapStatsObserver"**, %"class.blink::ThreadHeapStatsObserver"*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %13, i64 %16
  %18 = icmp eq i32 %15, 0
  br i1 %18, label %43, label %19

19:                                               ; preds = %2, %40
  %20 = phi i64 [ %42, %40 ], [ %5, %2 ]
  %21 = phi i64 [ %41, %40 ], [ %7, %2 ]
  %22 = phi %"class.blink::ThreadHeapStatsObserver"** [ %38, %40 ], [ %13, %2 ]
  %23 = load %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %22, align 8
  %24 = sub nsw i64 %21, %20
  %25 = icmp slt i64 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %19
  %27 = sub nsw i64 0, %24
  %28 = bitcast %"class.blink::ThreadHeapStatsObserver"* %23 to void (%"class.blink::ThreadHeapStatsObserver"*, i64)***
  %29 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)**, void (%"class.blink::ThreadHeapStatsObserver"*, i64)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %29, i64 4
  %31 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %30, align 8
  tail call void %31(%"class.blink::ThreadHeapStatsObserver"* %23, i64 %27) #9
  br label %37

32:                                               ; preds = %19
  %33 = bitcast %"class.blink::ThreadHeapStatsObserver"* %23 to void (%"class.blink::ThreadHeapStatsObserver"*, i64)***
  %34 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)**, void (%"class.blink::ThreadHeapStatsObserver"*, i64)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %34, i64 3
  %36 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %35, align 8
  tail call void %36(%"class.blink::ThreadHeapStatsObserver"* %23, i64 %24) #9
  br label %37

37:                                               ; preds = %32, %26
  %38 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %22, i64 1
  %39 = icmp eq %"class.blink::ThreadHeapStatsObserver"** %38, %17
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = load i64, i64* %6, align 8
  %42 = load i64, i64* %3, align 8
  br label %19

43:                                               ; preds = %37, %2
  %44 = bitcast i64* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24ThreadHeapStatsCollector28AllocatedObjectSizeSafepointEv(%"class.blink::ThreadHeapStatsCollector"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = sub i64 %3, %5
  %7 = sub nsw i64 0, %6
  %8 = icmp slt i64 %6, 0
  %9 = select i1 %8, i64 %7, i64 %6
  %10 = icmp sgt i64 %9, 1024
  br i1 %10, label %11, label %48

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = add nsw i64 %13, %6
  store i64 %14, i64* %12, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeapStatsObserver"**, %"class.blink::ThreadHeapStatsObserver"*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %16, i64 %19
  %21 = icmp eq i32 %18, 0
  br i1 %21, label %46, label %22

22:                                               ; preds = %11, %43
  %23 = phi i64 [ %45, %43 ], [ %5, %11 ]
  %24 = phi i64 [ %44, %43 ], [ %3, %11 ]
  %25 = phi %"class.blink::ThreadHeapStatsObserver"** [ %41, %43 ], [ %16, %11 ]
  %26 = load %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %25, align 8
  %27 = sub nsw i64 %24, %23
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %22
  %30 = sub nsw i64 0, %27
  %31 = bitcast %"class.blink::ThreadHeapStatsObserver"* %26 to void (%"class.blink::ThreadHeapStatsObserver"*, i64)***
  %32 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)**, void (%"class.blink::ThreadHeapStatsObserver"*, i64)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %32, i64 4
  %34 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %33, align 8
  tail call void %34(%"class.blink::ThreadHeapStatsObserver"* %26, i64 %30) #9
  br label %40

35:                                               ; preds = %22
  %36 = bitcast %"class.blink::ThreadHeapStatsObserver"* %26 to void (%"class.blink::ThreadHeapStatsObserver"*, i64)***
  %37 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)**, void (%"class.blink::ThreadHeapStatsObserver"*, i64)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %37, i64 3
  %39 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %38, align 8
  tail call void %39(%"class.blink::ThreadHeapStatsObserver"* %26, i64 %27) #9
  br label %40

40:                                               ; preds = %35, %29
  %41 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %25, i64 1
  %42 = icmp eq %"class.blink::ThreadHeapStatsObserver"** %41, %20
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  %44 = load i64, i64* %2, align 8
  %45 = load i64, i64* %4, align 8
  br label %22

46:                                               ; preds = %40, %11
  %47 = bitcast i64* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #9
  br label %48

48:                                               ; preds = %46, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24ThreadHeapStatsCollector22IncreaseAllocatedSpaceEm(%"class.blink::ThreadHeapStatsCollector"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ThreadHeapStatsObserver"**, %"class.blink::ThreadHeapStatsObserver"*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %2, %13
  %14 = phi %"class.blink::ThreadHeapStatsObserver"** [ %19, %13 ], [ %7, %2 ]
  %15 = load %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %14, align 8
  %16 = bitcast %"class.blink::ThreadHeapStatsObserver"* %15 to void (%"class.blink::ThreadHeapStatsObserver"*, i64)***
  %17 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)**, void (%"class.blink::ThreadHeapStatsObserver"*, i64)*** %16, align 8
  %18 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %17, align 8
  tail call void %18(%"class.blink::ThreadHeapStatsObserver"* %15, i64 %1) #9
  %19 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %14, i64 1
  %20 = icmp eq %"class.blink::ThreadHeapStatsObserver"** %19, %11
  br i1 %20, label %21, label %13

21:                                               ; preds = %13, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24ThreadHeapStatsCollector22DecreaseAllocatedSpaceEm(%"class.blink::ThreadHeapStatsCollector"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = sub i64 %4, %1
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ThreadHeapStatsObserver"**, %"class.blink::ThreadHeapStatsObserver"*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %22, label %13

13:                                               ; preds = %2, %13
  %14 = phi %"class.blink::ThreadHeapStatsObserver"** [ %20, %13 ], [ %7, %2 ]
  %15 = load %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %14, align 8
  %16 = bitcast %"class.blink::ThreadHeapStatsObserver"* %15 to void (%"class.blink::ThreadHeapStatsObserver"*, i64)***
  %17 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)**, void (%"class.blink::ThreadHeapStatsObserver"*, i64)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %17, i64 1
  %19 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %18, align 8
  tail call void %19(%"class.blink::ThreadHeapStatsObserver"* %15, i64 %1) #9
  %20 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %14, i64 1
  %21 = icmp eq %"class.blink::ThreadHeapStatsObserver"** %20, %11
  br i1 %21, label %22, label %13

22:                                               ; preds = %13, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink24ThreadHeapStatsCollector5EventC2Ev(%"struct.blink::ThreadHeapStatsCollector::Event"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 0
  store i64 -1, i64* %2, align 8
  %3 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 1
  %4 = getelementptr %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 6, i64 0
  %5 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 9
  %6 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 25, i1 false)
  %7 = bitcast %"class.base::TimeDelta"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 264, i1 false)
  store i32 1, i32* %5, align 8
  %8 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 11
  %9 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 16
  %10 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 40, i1 false)
  store i8 1, i8* %9, align 8
  %11 = atomicrmw add i64* getelementptr inbounds ({ { i64 } }, { { i64 } }* @_ZZN5blink24ThreadHeapStatsCollector5EventC1EvE7counter, i64 0, i32 0, i32 0), i64 1 seq_cst
  store i64 %11, i64* %2, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink24ThreadHeapStatsCollector20NotifyMarkingStartedENS_7BlinkGC14CollectionTypeENS1_8GCReasonEb(%"class.blink::ThreadHeapStatsCollector"* nocapture, i32, i32, i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = zext i1 %3 to i8
  %6 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 6
  store i8 1, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 8
  store i32 %2, i32* %7, align 4
  %8 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 9
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 16
  store i8 %5, i8* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24ThreadHeapStatsCollector22NotifyMarkingCompletedEm(%"class.blink::ThreadHeapStatsCollector"* nocapture, i64) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = sub nsw i64 %4, %6
  %8 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = add nsw i64 %9, %7
  store i64 %10, i64* %8, align 8
  %11 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 1
  store i64 %1, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 7
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0
  %16 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 1
  %17 = select i1 %14, %"struct.blink::ThreadHeapStatsCollector::Event"* %16, %"struct.blink::ThreadHeapStatsCollector::Event"* %15
  %18 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %17, i64 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add nsw i64 %19, %10
  %21 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 11
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 5
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 12
  store i64 %23, i64* %24, align 8
  %25 = tail call i64 @_ZN3WTF10Partitions25TotalSizeOfCommittedPagesEv() #9
  %26 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 13
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %28 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false)
  %29 = load %"class.blink::ThreadHeapStatsObserver"**, %"class.blink::ThreadHeapStatsObserver"*** %27, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %29, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %2, %35
  %36 = phi %"class.blink::ThreadHeapStatsObserver"** [ %42, %35 ], [ %29, %2 ]
  %37 = load %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %36, align 8
  %38 = bitcast %"class.blink::ThreadHeapStatsObserver"* %37 to void (%"class.blink::ThreadHeapStatsObserver"*, i64)***
  %39 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)**, void (%"class.blink::ThreadHeapStatsObserver"*, i64)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %39, i64 2
  %41 = load void (%"class.blink::ThreadHeapStatsObserver"*, i64)*, void (%"class.blink::ThreadHeapStatsObserver"*, i64)** %40, align 8
  tail call void %41(%"class.blink::ThreadHeapStatsObserver"* %37, i64 %1) #9
  %42 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %36, i64 1
  %43 = icmp eq %"class.blink::ThreadHeapStatsObserver"** %42, %33
  br i1 %43, label %44, label %35

44:                                               ; preds = %35, %2
  store i8 1, i8* %12, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector20object_size_in_bytesEv(%"class.blink::ThreadHeapStatsCollector"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 1
  %7 = select i1 %4, %"struct.blink::ThreadHeapStatsCollector::Event"* %6, %"struct.blink::ThreadHeapStatsCollector::Event"* %5
  %8 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %7, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = add nsw i64 %11, %9
  ret i64 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector21allocated_space_bytesEv(%"class.blink::ThreadHeapStatsCollector"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 5
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

declare i64 @_ZN3WTF10Partitions25TotalSizeOfCommittedPagesEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24ThreadHeapStatsCollector23NotifySweepingCompletedEv(%"class.blink::ThreadHeapStatsCollector"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = alloca [25 x i8], align 8
  %3 = alloca <{ [7 x i8], [31 x %"class.base::TimeDelta"], [3 x i32], i32 }>, align 8
  %4 = alloca <{ [4 x i8], i64, i64, i64, double, %"class.base::TimeDelta" }>, align 4
  %5 = getelementptr inbounds [25 x i8], [25 x i8]* %2, i64 0, i64 0
  %6 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 6
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 11
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = uitofp i64 %12 to double
  %14 = uitofp i64 %8 to double
  %15 = fdiv double %13, %14
  br label %16

16:                                               ; preds = %1, %10
  %17 = phi double [ %15, %10 ], [ 0.000000e+00, %1 ]
  %18 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 14
  store double %17, double* %18, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 8, i32 0
  %20 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 15, i32 0
  %21 = load i64, i64* %19, align 8
  store i64 %21, i64* %20, align 8
  store i64 0, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 1
  %23 = bitcast %"struct.blink::ThreadHeapStatsCollector::Event"* %22 to i8*
  %24 = bitcast %"class.blink::ThreadHeapStatsCollector"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 353, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 25, i8* nonnull %5)
  %25 = getelementptr inbounds <{ [7 x i8], [31 x %"class.base::TimeDelta"], [3 x i32], i32 }>, <{ [7 x i8], [31 x %"class.base::TimeDelta"], [3 x i32], i32 }>* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 271, i8* nonnull %25)
  %26 = getelementptr inbounds <{ [4 x i8], i64, i64, i64, double, %"class.base::TimeDelta" }>, <{ [4 x i8], i64, i64, i64, double, %"class.base::TimeDelta" }>* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %26)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 25, i1 false)
  %27 = getelementptr inbounds <{ [7 x i8], [31 x %"class.base::TimeDelta"], [3 x i32], i32 }>, <{ [7 x i8], [31 x %"class.base::TimeDelta"], [3 x i32], i32 }>* %3, i64 0, i32 1
  %28 = bitcast [31 x %"class.base::TimeDelta"]* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %28, i8 0, i64 264, i1 false)
  %29 = getelementptr inbounds <{ [4 x i8], i64, i64, i64, double, %"class.base::TimeDelta" }>, <{ [4 x i8], i64, i64, i64, double, %"class.base::TimeDelta" }>* %4, i64 0, i32 1
  %30 = bitcast i64* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 40, i1 false)
  %31 = atomicrmw add i64* getelementptr inbounds ({ { i64 } }, { { i64 } }* @_ZZN5blink24ThreadHeapStatsCollector5EventC1EvE7counter, i64 0, i32 0, i32 0), i64 1 seq_cst
  %32 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 0
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 1
  %34 = bitcast i64* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* nonnull align 8 %5, i64 25, i1 false)
  %35 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 5, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %35, i8* nonnull align 8 %25, i64 271, i1 false)
  %36 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 9
  store i32 1, i32* %36, align 8
  %37 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 10, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* nonnull align 4 %26, i64 44, i1 false)
  %38 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 16
  store i8 1, i8* %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 25, i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 271, i8* nonnull %25)
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %26)
  %39 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 7
  store i8 0, i8* %39, align 1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink24ThreadHeapStatsCollector12UpdateReasonENS_7BlinkGC8GCReasonE(%"class.blink::ThreadHeapStatsCollector"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 8
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector5Event18roots_marking_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 6, i64 28, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector5Event24incremental_marking_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 6, i64 9, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  %8 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 6, i64 8, i32 0
  %9 = load i64, i64* %8, align 8
  br i1 %7, label %17, label %10

10:                                               ; preds = %1
  %11 = icmp slt i64 %5, 0
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %9, i64 %5) #9
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !3
  br label %25

17:                                               ; preds = %1
  %18 = add i64 %9, -9223372036854775807
  %19 = icmp ugt i64 %18, 1
  %20 = icmp eq i64 %9, %5
  %21 = or i1 %20, %19
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  br label %25

25:                                               ; preds = %10, %17, %22
  %26 = phi i64 [ %16, %10 ], [ %5, %17 ], [ %5, %22 ]
  %27 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 6, i64 24, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, -9223372036854775807
  %30 = icmp ult i64 %29, 2
  br i1 %30, label %38, label %31

31:                                               ; preds = %25
  %32 = icmp slt i64 %28, 0
  %33 = select i1 %32, i64 -9223372036854775808, i64 9223372036854775807
  %34 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %26, i64 %28) #9
  %35 = extractvalue { i64, i1 } %34, 1
  %36 = extractvalue { i64, i1 } %34, 0
  %37 = select i1 %35, i64 %33, i64 %36, !prof !3
  br label %46

38:                                               ; preds = %25
  %39 = add i64 %26, -9223372036854775807
  %40 = icmp ugt i64 %39, 1
  %41 = icmp eq i64 %26, %28
  %42 = or i1 %41, %40
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #9
  br label %46

46:                                               ; preds = %31, %38, %43
  %47 = phi i64 [ %37, %31 ], [ %28, %38 ], [ %28, %43 ]
  ret i64 %47
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector5Event35worklist_processing_time_foregroundEv(%"struct.blink::ThreadHeapStatsCollector::Event"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 6, i64 18, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector5Event27flushing_v8_references_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 6, i64 16, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector5Event19atomic_marking_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 6, i64 3, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, -9223372036854775807
  %8 = icmp ult i64 %7, 2
  %9 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 6, i64 2, i32 0
  %10 = load i64, i64* %9, align 8
  br i1 %8, label %18, label %11

11:                                               ; preds = %1
  %12 = icmp slt i64 %6, 0
  %13 = select i1 %12, i64 -9223372036854775808, i64 9223372036854775807
  %14 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %10, i64 %6) #9
  %15 = extractvalue { i64, i1 } %14, 1
  %16 = extractvalue { i64, i1 } %14, 0
  %17 = select i1 %15, i64 %13, i64 %16, !prof !3
  br label %26

18:                                               ; preds = %1
  %19 = add i64 %10, -9223372036854775807
  %20 = icmp ugt i64 %19, 1
  %21 = icmp eq i64 %10, %6
  %22 = or i1 %21, %20
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #9
  br label %26

26:                                               ; preds = %11, %18, %23
  %27 = phi i64 [ %17, %11 ], [ %6, %18 ], [ %6, %23 ]
  %28 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 6, i64 4, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, -9223372036854775807
  %31 = icmp ult i64 %30, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %26
  %33 = icmp slt i64 %29, 0
  %34 = select i1 %33, i64 -9223372036854775808, i64 9223372036854775807
  %35 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %27, i64 %29) #9
  %36 = extractvalue { i64, i1 } %35, 1
  %37 = extractvalue { i64, i1 } %35, 0
  %38 = select i1 %36, i64 %34, i64 %37, !prof !3
  br label %47

39:                                               ; preds = %26
  %40 = add i64 %27, -9223372036854775807
  %41 = icmp ugt i64 %40, 1
  %42 = icmp eq i64 %27, %29
  %43 = or i1 %42, %41
  br i1 %43, label %47, label %44

44:                                               ; preds = %39
  %45 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #9
  br label %47

47:                                               ; preds = %32, %39, %44
  %48 = phi i64 [ %38, %32 ], [ %29, %39 ], [ %29, %44 ]
  %49 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 6, i64 1, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, -9223372036854775807
  %52 = icmp ult i64 %51, 2
  br i1 %52, label %60, label %53

53:                                               ; preds = %47
  %54 = icmp slt i64 %50, 0
  %55 = select i1 %54, i64 -9223372036854775808, i64 9223372036854775807
  %56 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %48, i64 %50) #9
  %57 = extractvalue { i64, i1 } %56, 1
  %58 = extractvalue { i64, i1 } %56, 0
  %59 = select i1 %57, i64 %55, i64 %58, !prof !3
  br label %68

60:                                               ; preds = %47
  %61 = add i64 %48, -9223372036854775807
  %62 = icmp ugt i64 %61, 1
  %63 = icmp eq i64 %48, %50
  %64 = or i1 %63, %62
  br i1 %64, label %68, label %65

65:                                               ; preds = %60
  %66 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %67 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #9
  br label %68

68:                                               ; preds = %53, %60, %65
  %69 = phi i64 [ %59, %53 ], [ %50, %60 ], [ %50, %65 ]
  ret i64 %69
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector5Event29atomic_sweep_and_compact_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 6, i64 5, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector5Event23foreground_marking_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = tail call i64 @_ZNK5blink24ThreadHeapStatsCollector5Event24incremental_marking_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* %0)
  %4 = tail call i64 @_ZNK5blink24ThreadHeapStatsCollector5Event19atomic_marking_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* %0)
  %5 = add i64 %4, -9223372036854775807
  %6 = icmp ult i64 %5, 2
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = icmp slt i64 %4, 0
  %9 = select i1 %8, i64 -9223372036854775808, i64 9223372036854775807
  %10 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %3, i64 %4) #9
  %11 = extractvalue { i64, i1 } %10, 1
  %12 = extractvalue { i64, i1 } %10, 0
  %13 = select i1 %11, i64 %9, i64 %12, !prof !3
  br label %22

14:                                               ; preds = %1
  %15 = add i64 %3, -9223372036854775807
  %16 = icmp ugt i64 %15, 1
  %17 = icmp eq i64 %3, %4
  %18 = or i1 %17, %16
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %7, %14, %19
  %23 = phi i64 [ %13, %7 ], [ %4, %14 ], [ %4, %19 ]
  ret i64 %23
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector5Event23background_marking_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 7, i64 1
  %3 = load atomic i32, i32* %2 monotonic, align 4
  %4 = sext i32 %3 to i64
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector5Event12marking_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = tail call i64 @_ZNK5blink24ThreadHeapStatsCollector5Event23foreground_marking_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* %0)
  %4 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 7, i64 1
  %5 = load atomic i32, i32* %4 monotonic, align 4
  %6 = sext i32 %5 to i64
  %7 = add i64 %6, -9223372036854775807
  %8 = icmp ult i64 %7, 2
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = icmp slt i32 %5, 0
  %11 = select i1 %10, i64 -9223372036854775808, i64 9223372036854775807
  %12 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %3, i64 %6) #9
  %13 = extractvalue { i64, i1 } %12, 1
  %14 = extractvalue { i64, i1 } %12, 0
  %15 = select i1 %13, i64 %11, i64 %14, !prof !3
  br label %24

16:                                               ; preds = %1
  %17 = add i64 %3, -9223372036854775807
  %18 = icmp ugt i64 %17, 1
  %19 = icmp eq i64 %3, %6
  %20 = or i1 %18, %19
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  br label %24

24:                                               ; preds = %9, %16, %21
  %25 = phi i64 [ %15, %9 ], [ %6, %16 ], [ %6, %21 ]
  ret i64 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector5Event13gc_cycle_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = tail call i64 @_ZNK5blink24ThreadHeapStatsCollector5Event24incremental_marking_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* %0)
  %6 = tail call i64 @_ZNK5blink24ThreadHeapStatsCollector5Event19atomic_marking_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* %0)
  %7 = add i64 %6, -9223372036854775807
  %8 = icmp ult i64 %7, 2
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = icmp slt i64 %6, 0
  %11 = select i1 %10, i64 -9223372036854775808, i64 9223372036854775807
  %12 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %5, i64 %6) #9
  %13 = extractvalue { i64, i1 } %12, 1
  %14 = extractvalue { i64, i1 } %12, 0
  %15 = select i1 %13, i64 %11, i64 %14, !prof !3
  br label %24

16:                                               ; preds = %1
  %17 = add i64 %5, -9223372036854775807
  %18 = icmp ugt i64 %17, 1
  %19 = icmp eq i64 %5, %6
  %20 = or i1 %19, %18
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  br label %24

24:                                               ; preds = %9, %16, %21
  %25 = phi i64 [ %15, %9 ], [ %6, %16 ], [ %6, %21 ]
  %26 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 6, i64 5, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -9223372036854775807
  %29 = icmp ult i64 %28, 2
  br i1 %29, label %37, label %30

30:                                               ; preds = %24
  %31 = icmp slt i64 %27, 0
  %32 = select i1 %31, i64 -9223372036854775808, i64 9223372036854775807
  %33 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %25, i64 %27) #9
  %34 = extractvalue { i64, i1 } %33, 1
  %35 = extractvalue { i64, i1 } %33, 0
  %36 = select i1 %34, i64 %32, i64 %35, !prof !3
  br label %45

37:                                               ; preds = %24
  %38 = add i64 %25, -9223372036854775807
  %39 = icmp ugt i64 %38, 1
  %40 = icmp eq i64 %25, %27
  %41 = or i1 %40, %39
  br i1 %41, label %45, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #9
  br label %45

45:                                               ; preds = %30, %37, %42
  %46 = phi i64 [ %36, %30 ], [ %27, %37 ], [ %27, %42 ]
  %47 = call i64 @_ZNK5blink24ThreadHeapStatsCollector5Event24foreground_sweeping_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* %0)
  %48 = add i64 %47, -9223372036854775807
  %49 = icmp ult i64 %48, 2
  br i1 %49, label %57, label %50

50:                                               ; preds = %45
  %51 = icmp slt i64 %47, 0
  %52 = select i1 %51, i64 -9223372036854775808, i64 9223372036854775807
  %53 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %46, i64 %47) #9
  %54 = extractvalue { i64, i1 } %53, 1
  %55 = extractvalue { i64, i1 } %53, 0
  %56 = select i1 %54, i64 %52, i64 %55, !prof !3
  br label %65

57:                                               ; preds = %45
  %58 = add i64 %46, -9223372036854775807
  %59 = icmp ugt i64 %58, 1
  %60 = icmp eq i64 %46, %47
  %61 = or i1 %60, %59
  br i1 %61, label %65, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #9
  br label %65

65:                                               ; preds = %50, %57, %62
  %66 = phi i64 [ %56, %50 ], [ %47, %57 ], [ %47, %62 ]
  ret i64 %66
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector5Event24foreground_sweeping_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 6, i64 12, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  %8 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 6, i64 6, i32 0
  %9 = load i64, i64* %8, align 8
  br i1 %7, label %17, label %10

10:                                               ; preds = %1
  %11 = icmp slt i64 %5, 0
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %9, i64 %5) #9
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !3
  br label %25

17:                                               ; preds = %1
  %18 = add i64 %9, -9223372036854775807
  %19 = icmp ugt i64 %18, 1
  %20 = icmp eq i64 %9, %5
  %21 = or i1 %20, %19
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  br label %25

25:                                               ; preds = %10, %17, %22
  %26 = phi i64 [ %16, %10 ], [ %5, %17 ], [ %5, %22 ]
  %27 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 6, i64 13, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, -9223372036854775807
  %30 = icmp ult i64 %29, 2
  br i1 %30, label %38, label %31

31:                                               ; preds = %25
  %32 = icmp slt i64 %28, 0
  %33 = select i1 %32, i64 -9223372036854775808, i64 9223372036854775807
  %34 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %26, i64 %28) #9
  %35 = extractvalue { i64, i1 } %34, 1
  %36 = extractvalue { i64, i1 } %34, 0
  %37 = select i1 %35, i64 %33, i64 %36, !prof !3
  br label %46

38:                                               ; preds = %25
  %39 = add i64 %26, -9223372036854775807
  %40 = icmp ugt i64 %39, 1
  %41 = icmp eq i64 %26, %28
  %42 = or i1 %41, %40
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #9
  br label %46

46:                                               ; preds = %31, %38, %43
  %47 = phi i64 [ %37, %31 ], [ %28, %38 ], [ %28, %43 ]
  ret i64 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector5Event17atomic_pause_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = tail call i64 @_ZNK5blink24ThreadHeapStatsCollector5Event19atomic_marking_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* %0)
  %4 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 6, i64 5, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -9223372036854775807
  %7 = icmp ult i64 %6, 2
  br i1 %7, label %15, label %8

8:                                                ; preds = %1
  %9 = icmp slt i64 %5, 0
  %10 = select i1 %9, i64 -9223372036854775808, i64 9223372036854775807
  %11 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %3, i64 %5) #9
  %12 = extractvalue { i64, i1 } %11, 1
  %13 = extractvalue { i64, i1 } %11, 0
  %14 = select i1 %12, i64 %10, i64 %13, !prof !3
  br label %23

15:                                               ; preds = %1
  %16 = add i64 %3, -9223372036854775807
  %17 = icmp ugt i64 %16, 1
  %18 = icmp eq i64 %3, %5
  %19 = or i1 %18, %17
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %8, %15, %20
  %24 = phi i64 [ %14, %8 ], [ %5, %15 ], [ %5, %20 ]
  ret i64 %24
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector5Event24background_sweeping_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 7, i64 2
  %3 = load i32, i32* %2, align 8
  %4 = sext i32 %3 to i64
  ret i64 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector5Event13sweeping_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = tail call i64 @_ZNK5blink24ThreadHeapStatsCollector5Event24foreground_sweeping_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* %0)
  %4 = getelementptr inbounds %"struct.blink::ThreadHeapStatsCollector::Event", %"struct.blink::ThreadHeapStatsCollector::Event"* %0, i64 0, i32 7, i64 2
  %5 = load i32, i32* %4, align 8
  %6 = sext i32 %5 to i64
  %7 = add i64 %6, -9223372036854775807
  %8 = icmp ult i64 %7, 2
  br i1 %8, label %16, label %9

9:                                                ; preds = %1
  %10 = icmp slt i32 %5, 0
  %11 = select i1 %10, i64 -9223372036854775808, i64 9223372036854775807
  %12 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %3, i64 %6) #9
  %13 = extractvalue { i64, i1 } %12, 1
  %14 = extractvalue { i64, i1 } %12, 0
  %15 = select i1 %13, i64 %11, i64 %14, !prof !3
  br label %24

16:                                               ; preds = %1
  %17 = add i64 %3, -9223372036854775807
  %18 = icmp ugt i64 %17, 1
  %19 = icmp eq i64 %3, %6
  %20 = or i1 %18, %19
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  br label %24

24:                                               ; preds = %9, %16, %21
  %25 = phi i64 [ %15, %9 ], [ %6, %16 ], [ %6, %21 ]
  ret i64 %25
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector29allocated_bytes_since_prev_gcEv(%"class.blink::ThreadHeapStatsCollector"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector12marked_bytesEv(%"class.blink::ThreadHeapStatsCollector"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 1
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector19marking_time_so_farEv(%"class.blink::ThreadHeapStatsCollector"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0
  %4 = tail call i64 @_ZNK5blink24ThreadHeapStatsCollector5Event23foreground_marking_timeEv(%"struct.blink::ThreadHeapStatsCollector::Event"* %3) #9
  %5 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 7, i64 1
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = sext i32 %6 to i64
  %8 = add i64 %7, -9223372036854775807
  %9 = icmp ult i64 %8, 2
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = icmp slt i32 %6, 0
  %12 = select i1 %11, i64 -9223372036854775808, i64 9223372036854775807
  %13 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %4, i64 %7) #9
  %14 = extractvalue { i64, i1 } %13, 1
  %15 = extractvalue { i64, i1 } %13, 0
  %16 = select i1 %14, i64 %12, i64 %15, !prof !3
  br label %25

17:                                               ; preds = %1
  %18 = add i64 %4, -9223372036854775807
  %19 = icmp ugt i64 %18, 1
  %20 = icmp eq i64 %4, %7
  %21 = or i1 %19, %20
  br i1 %21, label %25, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #9
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  br label %25

25:                                               ; preds = %10, %17, %22
  %26 = phi i64 [ %16, %10 ], [ %7, %17 ], [ %7, %22 ]
  ret i64 %26
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector35worklist_processing_time_foregroundEv(%"class.blink::ThreadHeapStatsCollector"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 6, i64 18, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK5blink24ThreadHeapStatsCollector27flushing_v8_references_timeEv(%"class.blink::ThreadHeapStatsCollector"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 0, i32 6, i64 16, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24ThreadHeapStatsCollector16RegisterObserverEPNS_23ThreadHeapStatsObserverE(%"class.blink::ThreadHeapStatsCollector"*, %"class.blink::ThreadHeapStatsObserver"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::ThreadHeapStatsObserver"*, align 8
  store %"class.blink::ThreadHeapStatsObserver"* %1, %"class.blink::ThreadHeapStatsObserver"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 9
  %5 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %19, label %10, !prof !3

10:                                               ; preds = %2
  %11 = ptrtoint %"class.blink::ThreadHeapStatsObserver"* %1 to i64
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %4, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeapStatsObserver"**, %"class.blink::ThreadHeapStatsObserver"*** %12, align 8
  %14 = zext i32 %6 to i64
  %15 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %13, i64 %14
  %16 = bitcast %"class.blink::ThreadHeapStatsObserver"** %15 to i64*
  store i64 %11, i64* %16, align 8
  %17 = load i32, i32* %5, align 4
  %18 = add i32 %17, 1
  store i32 %18, i32* %5, align 4
  br label %20

19:                                               ; preds = %2
  call void @_ZN3WTF6VectorIPN5blink23ThreadHeapStatsObserverELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector"* %4, %"class.blink::ThreadHeapStatsObserver"** nonnull dereferenceable(8) %3) #9
  br label %20

20:                                               ; preds = %10, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24ThreadHeapStatsCollector18UnregisterObserverEPNS_23ThreadHeapStatsObserverE(%"class.blink::ThreadHeapStatsCollector"* nocapture, %"class.blink::ThreadHeapStatsObserver"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ThreadHeapStatsObserver"**, %"class.blink::ThreadHeapStatsObserver"*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ThreadHeapStatsCollector", %"class.blink::ThreadHeapStatsCollector"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %26, label %13

13:                                               ; preds = %2, %17
  %14 = phi %"class.blink::ThreadHeapStatsObserver"** [ %18, %17 ], [ %7, %2 ]
  %15 = load %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %14, align 8
  %16 = icmp eq %"class.blink::ThreadHeapStatsObserver"* %15, %1
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %14, i64 1
  %19 = icmp ult %"class.blink::ThreadHeapStatsObserver"** %18, %11
  br i1 %19, label %13, label %26

20:                                               ; preds = %13
  %21 = ptrtoint %"class.blink::ThreadHeapStatsObserver"** %14 to i64
  %22 = ptrtoint %"class.blink::ThreadHeapStatsObserver"** %7 to i64
  %23 = sub i64 %21, %22
  %24 = lshr exact i64 %23, 3
  %25 = trunc i64 %24 to i32
  br label %26

26:                                               ; preds = %17, %2, %20
  %27 = phi i32 [ %25, %20 ], [ -1, %2 ], [ -1, %17 ]
  %28 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %29, align 8
  %30 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #9
  %31 = icmp ugt i32 %9, %27
  br i1 %31, label %32, label %33

32:                                               ; preds = %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  store i8* null, i8** %29, align 8
  br label %42

33:                                               ; preds = %26
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %27) #9
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* %34, i8* %35) #9
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #9
  store i8* %37, i8** %29, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %33
  %40 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #9
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #9
  br label %42

42:                                               ; preds = %39, %33, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #9
  %43 = load %"class.blink::ThreadHeapStatsObserver"**, %"class.blink::ThreadHeapStatsObserver"*** %6, align 8
  %44 = zext i32 %27 to i64
  %45 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %43, i64 %44
  %46 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %45, i64 1
  %47 = icmp eq %"class.blink::ThreadHeapStatsObserver"** %45, null
  br i1 %47, label %57, label %48, !prof !3

48:                                               ; preds = %42
  %49 = load i32, i32* %8, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %43, i64 %50
  %52 = bitcast %"class.blink::ThreadHeapStatsObserver"** %45 to i8*
  %53 = bitcast %"class.blink::ThreadHeapStatsObserver"** %46 to i8*
  %54 = ptrtoint %"class.blink::ThreadHeapStatsObserver"** %51 to i64
  %55 = ptrtoint %"class.blink::ThreadHeapStatsObserver"** %46 to i64
  %56 = sub i64 %54, %55
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* nonnull align 8 %53, i64 %56, i1 false) #9
  br label %57

57:                                               ; preds = %42, %48
  %58 = load i32, i32* %8, align 4
  %59 = add i32 %58, -1
  store i32 %59, i32* %8, align 4
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink23ThreadHeapStatsObserverELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector"*, %"class.blink::ThreadHeapStatsObserver"** dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ThreadHeapStatsObserver"**, %"class.blink::ThreadHeapStatsObserver"*** %6, align 8
  %8 = icmp ugt %"class.blink::ThreadHeapStatsObserver"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %7, i64 %10
  %12 = icmp ugt %"class.blink::ThreadHeapStatsObserver"** %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.blink::ThreadHeapStatsObserver"** %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink23ThreadHeapStatsObserverEEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink23ThreadHeapStatsObserverEEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.blink::ThreadHeapStatsObserver"**
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.blink::ThreadHeapStatsObserver"**, %"class.blink::ThreadHeapStatsObserver"*** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.blink::ThreadHeapStatsObserver"** %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.blink::ThreadHeapStatsObserver"** %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.blink::ThreadHeapStatsObserver"**
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.blink::ThreadHeapStatsObserver"** %1 to i64
  %56 = ptrtoint %"class.blink::ThreadHeapStatsObserver"** %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"class.blink::ThreadHeapStatsObserver"** %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink23ThreadHeapStatsObserverEEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink23ThreadHeapStatsObserverEEEPKcv, i64 0, i64 0)) #9
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.blink::ThreadHeapStatsObserver"**, %"class.blink::ThreadHeapStatsObserver"*** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.blink::ThreadHeapStatsObserver"** %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.blink::ThreadHeapStatsObserver"** %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #9
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #9
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.blink::ThreadHeapStatsObserver"**
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.blink::ThreadHeapStatsObserver"** [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.blink::ThreadHeapStatsObserver"** [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.blink::ThreadHeapStatsObserver"** [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.blink::ThreadHeapStatsObserver"*, %"class.blink::ThreadHeapStatsObserver"** %100, i64 %103
  %105 = bitcast %"class.blink::ThreadHeapStatsObserver"** %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"class.blink::ThreadHeapStatsObserver"** %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink23ThreadHeapStatsObserverEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
