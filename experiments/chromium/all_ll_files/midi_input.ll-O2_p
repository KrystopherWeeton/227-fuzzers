; ModuleID = '../../third_party/blink/renderer/modules/webmidi/midi_input.cc'
source_filename = "../../third_party/blink/renderer/modules/webmidi/midi_input.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.311" }
%"class.blink::HeapHashMap.311" = type { %"class.WTF::HashMap.314" }
%"class.WTF::HashMap.314" = type { %"class.WTF::HashTable.315" }
%"class.WTF::HashTable.315" = type <{ %"struct.WTF::KeyValuePair.317"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.317" = type { %"class.blink::WeakMember.318", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.122", i32, [4 x i8], %"class.std::__1::unique_ptr.258", %"class.std::__1::unique_ptr.258", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.269", %"class.std::__1::unique_ptr.275", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.293", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.300", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.238", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.158" = type { %"struct.std::__1::__atomic_base.159" }
%"struct.std::__1::__atomic_base.159" = type { %"struct.std::__1::__atomic_base.160" }
%"struct.std::__1::__atomic_base.160" = type { %"struct.std::__1::__cxx_atomic_impl.161" }
%"struct.std::__1::__cxx_atomic_impl.161" = type { %"struct.std::__1::__cxx_atomic_base_impl.162" }
%"struct.std::__1::__cxx_atomic_base_impl.162" = type { i64 }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::Worklist.169"* }
%"class.blink::Worklist.169" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::Worklist.176"* }
%"class.blink::Worklist.176" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::Worklist.183"* }
%"class.blink::Worklist.183" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::Worklist.190"* }
%"class.blink::Worklist.190" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::Worklist.197"* }
%"class.blink::Worklist.197" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::Worklist.204"* }
%"class.blink::Worklist.204" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::Worklist.211"* }
%"class.blink::Worklist.211" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.158" }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.218", %"class.std::__1::__compressed_pair.225", %"class.std::__1::__compressed_pair.230", %"class.std::__1::__compressed_pair.232", [4 x i8] }>
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220", %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { i64 }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { float }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.241", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.250" }
%"class.WTF::Vector.250" = type { %"class.WTF::VectorBuffer.251" }
%"class.WTF::VectorBuffer.251" = type { %"class.WTF::VectorBufferBase.252" }
%"class.WTF::VectorBufferBase.252" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.266" }
%"class.WTF::VectorBuffer.266" = type { %"class.WTF::VectorBufferBase.267" }
%"class.WTF::VectorBufferBase.267" = type { %"struct.std::__1::pair.268"*, i32, i32 }
%"struct.std::__1::pair.268" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.281" }
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.169"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.176"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.183"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.190"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.197"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.304" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.299 }
%class.scoped_refptr.299 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.300" = type { %"struct.std::__1::__atomic_base.301" }
%"struct.std::__1::__atomic_base.301" = type { %"struct.std::__1::__cxx_atomic_impl.302" }
%"struct.std::__1::__cxx_atomic_impl.302" = type { %"struct.std::__1::__cxx_atomic_base_impl.303" }
%"struct.std::__1::__cxx_atomic_base_impl.303" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::MIDIInput" = type { %"class.blink::MIDIPort.base", [4 x i8] }
%"class.blink::MIDIPort.base" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", %"class.blink::Member.13", i32, i32, i32 }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.5"* }
%"class.blink::HeapVector.5" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.6"* }
%"class.WTF::Vector.6" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.12"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.12" = type opaque
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::MIDIAccess"* }
%"class.blink::MIDIAccess" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable.15", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::MIDIDispatcher::Client", %"class.blink::Member.16", i8, i8, %"class.blink::HeapVector.32", %"class.blink::HeapVector.40" }
%"class.blink::ActiveScriptWrappable.15" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::MIDIDispatcher::Client" = type { i32 (...)** }
%"class.blink::Member.16" = type { %"class.blink::MemberBase.17" }
%"class.blink::MemberBase.17" = type { %"class.blink::MIDIDispatcher"* }
%"class.blink::MIDIDispatcher" = type { %"class.midi::mojom::blink::MidiSessionClient", %"class.blink::MIDIDispatcher::Client"*, i8, %"class.WTF::Vector.20", %"class.WTF::Vector.20", i64, %"class.blink::HeapMojoRemote", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoRemote.29" }
%"class.midi::mojom::blink::MidiSessionClient" = type { i32 (...)** }
%"class.WTF::Vector.20" = type { %"class.WTF::VectorBuffer.21" }
%"class.WTF::VectorBuffer.21" = type { %"class.WTF::VectorBufferBase.22" }
%"class.WTF::VectorBufferBase.22" = type { %"class.midi::mojom::blink::PortInfo"*, i32, i32 }
%"class.midi::mojom::blink::PortInfo" = type <{ %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8] }>
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.25" }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::HeapMojoRemote<midi::mojom::blink::MidiSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<midi::mojom::blink::MidiSession, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.27" }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::HeapMojoReceiver<midi::mojom::blink::MidiSessionClient, blink::MIDIDispatcher, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<midi::mojom::blink::MidiSessionClient, blink::MIDIDispatcher, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoRemote.29" = type { %"class.blink::Member.30" }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::HeapMojoRemote<midi::mojom::blink::MidiSessionProvider, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<midi::mojom::blink::MidiSessionProvider, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapVector.32" = type { %"class.WTF::Vector.35" }
%"class.WTF::Vector.35" = type { %"class.WTF::VectorBuffer.36" }
%"class.WTF::VectorBuffer.36" = type { %"class.WTF::VectorBufferBase.37" }
%"class.WTF::VectorBufferBase.37" = type { %"class.blink::Member.38"*, i32, i32 }
%"class.blink::Member.38" = type opaque
%"class.blink::HeapVector.40" = type { %"class.WTF::Vector.43" }
%"class.WTF::Vector.43" = type { %"class.WTF::VectorBuffer.44" }
%"class.WTF::VectorBuffer.44" = type { %"class.WTF::VectorBufferBase.45" }
%"class.WTF::VectorBufferBase.45" = type { %"class.blink::Member.46"*, i32, i32 }
%"class.blink::Member.46" = type opaque
%"class.blink::MIDIPort" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", %"class.blink::Member.13", i32, i32, i32, [4 x i8] }>
%"class.blink::EventListener" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.48", i8, [7 x i8] }>
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::EventListener"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::DOMTypedArray" = type { %"class.blink::DOMArrayBufferView", i64 }
%"class.blink::DOMArrayBufferView" = type { %"class.blink::ScriptWrappable", i8*, i64, %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.52", %"class.blink::Member.52", %"class.blink::Member.54", %"class.blink::Member.56", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::Event"* }
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.91", i32, i8, [3 x i8], %"class.blink::HeapVector.93", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.101", %"class.blink::Member.103", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.112", %"class.blink::Member.118", %"class.blink::Member.120", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.62" }
%"class.WTF::HashTable.62" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.64" }
%"class.blink::Supplementable.64" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.65" }
%"class.blink::HeapHashMap.65" = type { %"class.WTF::HashMap.68" }
%"class.WTF::HashMap.68" = type { %"class.WTF::HashTable.69" }
%"class.WTF::HashTable.69" = type <{ %"struct.WTF::KeyValuePair.71"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.71" = type { i8*, %"class.blink::Member.384" }
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.386" }
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.72, %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.blink::Member.85", i32, [4 x i8], %"class.WTF::HashSet.87", i32, i32 }
%class.scoped_refptr.72 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.85" = type { %"class.blink::MemberBase.86" }
%"class.blink::MemberBase.86" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.87" = type { %"class.WTF::HashTable.88" }
%"class.WTF::HashTable.88" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.91" = type { %"class.blink::MemberBase.92" }
%"class.blink::MemberBase.92" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.93" = type { %"class.WTF::Vector.96" }
%"class.WTF::Vector.96" = type { %"class.WTF::VectorBuffer.97" }
%"class.WTF::VectorBuffer.97" = type { %"class.WTF::VectorBufferBase.98" }
%"class.WTF::VectorBufferBase.98" = type { %"class.blink::Member.99"*, i32, i32 }
%"class.blink::Member.99" = type opaque
%"class.blink::Member.101" = type { %"class.blink::MemberBase.102" }
%"class.blink::MemberBase.102" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.103" = type { %"class.blink::MemberBase.104" }
%"class.blink::MemberBase.104" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.105", i32, i32 }
%"class.blink::HeapHashMap.105" = type { %"class.WTF::HashMap.108" }
%"class.WTF::HashMap.108" = type { %"class.WTF::HashTable.109" }
%"class.WTF::HashTable.109" = type <{ %"struct.WTF::KeyValuePair.111"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.111" = type opaque
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.118" = type { %"class.blink::MemberBase.119" }
%"class.blink::MemberBase.119" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.120" = type { %"class.blink::MemberBase.121" }
%"class.blink::MemberBase.121" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.324, %"class.blink::Member.325", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.324 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.325" = type { %"class.blink::MemberBase.326" }
%"class.blink::MemberBase.326" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.327" }
%"class.blink::Persistent.327" = type { %"class.blink::PersistentBase.328" }
%"class.blink::PersistentBase.328" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.329", %"class.blink::Member.331", %"class.blink::Member.329", %"class.blink::Member.329", %"class.blink::Member.333" }
%"class.blink::Member.331" = type { %"class.blink::MemberBase.332" }
%"class.blink::MemberBase.332" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.337", %"class.blink::Member.339", %"class.blink::Member.331", %"class.blink::Member.341", %"class.blink::Member.341", %"class.blink::Member.365", %"class.blink::Member.367", %"class.blink::Member.369", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.374", %"class.blink::HeapVector.376" }
%"class.blink::Member.337" = type { %"class.blink::MemberBase.338" }
%"class.blink::MemberBase.338" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type opaque
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.341" = type { %"class.blink::MemberBase.342" }
%"class.blink::MemberBase.342" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.345" }
%"class.blink::HeapHashMap.345" = type { %"class.WTF::HashMap.348" }
%"class.WTF::HashMap.348" = type { %"class.WTF::HashTable.349" }
%"class.WTF::HashTable.349" = type <{ %"struct.WTF::KeyValuePair.351"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.351" = type { %"class.WTF::AtomicString", %"class.blink::Member.352" }
%"class.blink::Member.352" = type { %"class.blink::MemberBase.353" }
%"class.blink::MemberBase.353" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.356", i32, %"class.blink::HeapVector.358" }
%"class.blink::Member.356" = type { %"class.blink::MemberBase.357" }
%"class.blink::MemberBase.357" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.blink::HeapVector.358" = type { %"class.WTF::Vector.361" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.363" }
%"class.WTF::VectorBufferBase.363" = type { %"class.blink::Member.356"*, i32, i32 }
%"class.blink::Member.365" = type { %"class.blink::MemberBase.366" }
%"class.blink::MemberBase.366" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.367" = type { %"class.blink::MemberBase.368" }
%"class.blink::MemberBase.368" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.369" = type { %"class.blink::MemberBase.370" }
%"class.blink::MemberBase.370" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.371" }
%"class.blink::Member.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::HeapHashMap.373"* }
%"class.blink::HeapHashMap.373" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.376" = type { %"class.WTF::Vector.379" }
%"class.WTF::Vector.379" = type { %"class.WTF::VectorBuffer.380" }
%"class.WTF::VectorBuffer.380" = type { %"class.WTF::VectorBufferBase.381" }
%"class.WTF::VectorBufferBase.381" = type { %"class.blink::Member.382"*, i32, i32 }
%"class.blink::Member.382" = type opaque
%"class.blink::Member.329" = type { %"class.blink::MemberBase.330" }
%"class.blink::MemberBase.330" = type { %"class.blink::Node"* }
%"class.blink::Member.333" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::DOMWindow" = type opaque
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.410 }
%union.anon.410 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::MIDIMessageEvent" = type { %"class.blink::Event", %"class.blink::Member.58" }
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::DOMTypedArray"* }
%"class.blink::EventDispatcher" = type opaque

$_ZN5blink8MIDIPortD2Ev = comdat any

$_ZN5blink9MIDIInputD0Ev = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink9MIDIInput18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink9MIDIInput13InterfaceNameEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv = comdat any

$_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv = comdat any

$_ZN5blink8MIDIPort7DidOpenEb = comdat any

$_ZThn72_N5blink9MIDIInputD1Ev = comdat any

$_ZThn72_N5blink9MIDIInputD0Ev = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_8MIDIPortEE18IsContextDestroyedEv = comdat any

$_ZNK5blink21ActiveScriptWrappableINS_8MIDIPortEE26DispatchHasPendingActivityEv = comdat any

$_ZThn80_N5blink9MIDIInputD1Ev = comdat any

$_ZThn80_N5blink9MIDIInputD0Ev = comdat any

$_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv = comdat any

$_ZN5blink25EventTargetWithInlineDataD2Ev = comdat any

$_ZN5blink25EventTargetWithInlineDataD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink11EventTarget18GetWrapperTypeInfoEv = comdat any

$_ZN5blink14DOMArrayBuffer6CreateEPKvm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink18DOMArrayBufferBaseD2Ev = comdat any

$_ZN5blink18DOMArrayBufferBaseD0Ev = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE = comdat any

$_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink16MIDIMessageEventD0Ev = comdat any

$_ZNK5blink16MIDIMessageEvent5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink16MIDIMessageEvent18GetWrapperTypeInfoEv = comdat any

$_ZN5blink5Event35DoneDispatchingEventAtCurrentTargetEv = comdat any

$_ZNK5blink16MIDIMessageEvent13InterfaceNameEv = comdat any

$_ZNK5blink5Event22CanBeDispatchedInWorldERKNS_15DOMWrapperWorldE = comdat any

$_ZNK5blink5Event46ShouldDispatchEvenWhenExecutionContextIsPausedEv = comdat any

$_ZN5blink10TraceTraitINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink25EventTargetWithInlineDataE = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink18DOMArrayBufferBaseE = comdat any

$_ZTVN5blink16MIDIMessageEventE = comdat any

@_ZTVN5blink9MIDIInputE = hidden unnamed_addr constant { [31 x i8*], [7 x i8*], [8 x i8*] } { [31 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::MIDIPort"*)* @_ZN5blink8MIDIPortD2Ev to i8*), i8* bitcast (void (%"class.blink::MIDIInput"*)* @_ZN5blink9MIDIInputD0Ev to i8*), i8* bitcast (i1 (%"class.blink::MIDIPort"*)* @_ZNK5blink8MIDIPort18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::MIDIInput"*, %"class.blink::Visitor"*)* @_ZNK5blink9MIDIInput5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::MIDIInput"*)* @_ZNK5blink9MIDIInput18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::MIDIInput"*)* @_ZNK5blink9MIDIInput13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::MIDIPort"*)* @_ZNK5blink8MIDIPort19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::MIDIInput"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink9MIDIInput18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*), i8* bitcast (void (%"class.blink::MIDIPort"*)* @_ZN5blink8MIDIPort16ContextDestroyedEv to i8*), i8* bitcast (void (%"class.blink::MIDIPort"*, i1)* @_ZN5blink8MIDIPort7DidOpenEb to i8*)], [7 x i8*] [i8* inttoptr (i64 -72 to i8*), i8* null, i8* bitcast (void (%"class.blink::MIDIInput"*, %"class.blink::Visitor"*)* @_ZThn72_NK5blink9MIDIInput5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::MIDIInput"*)* @_ZThn72_N5blink9MIDIInputD1Ev to i8*), i8* bitcast (void (%"class.blink::MIDIInput"*)* @_ZThn72_N5blink9MIDIInputD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_8MIDIPortEE18IsContextDestroyedEv to i8*), i8* bitcast (i1 (%"class.blink::ActiveScriptWrappable"*)* @_ZNK5blink21ActiveScriptWrappableINS_8MIDIPortEE26DispatchHasPendingActivityEv to i8*)], [8 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.blink::MIDIInput"*, %"class.blink::Visitor"*)* @_ZThn80_NK5blink9MIDIInput5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::MIDIInput"*)* @_ZThn80_N5blink9MIDIInputD1Ev to i8*), i8* bitcast (void (%"class.blink::MIDIInput"*)* @_ZThn80_N5blink9MIDIInputD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ExecutionContextLifecycleObserver"*)* @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv to i8*), i8* bitcast (void (%"class.blink::MIDIPort"*)* @_ZThn80_N5blink8MIDIPort16ContextDestroyedEv to i8*), i8* bitcast (void (%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*)* @_ZN5blink33ExecutionContextLifecycleObserver19SetExecutionContextEPNS_16ExecutionContextE to i8*)] }, align 8
@_ZN5blink16event_type_names12kMidimessageE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZTVN5blink8MIDIPortE = external unnamed_addr constant { [31 x i8*], [7 x i8*], [8 x i8*] }, align 8
@_ZTVN5blink25EventTargetWithInlineDataE = linkonce_odr hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD2Ev to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineDataD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*)* @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::EventTargetWithInlineData"*)* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [23 x i8] c"blink_gc_plugin_ignore\00", section "llvm.metadata"
@.str.1 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/dom/events/event_target.h\00", section "llvm.metadata"
@_ZN5blink11EventTarget18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink9MIDIInput18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink18event_target_names10kMIDIInputE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.3 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink14DOMArrayBufferE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZTVN5blink18DOMArrayBufferBaseE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::DOMArrayBufferBase"*)* @_ZN5blink18DOMArrayBufferBaseD2Ev to i8*), i8* bitcast (void (%"class.blink::DOMArrayBufferBase"*)* @_ZN5blink18DOMArrayBufferBaseD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)* @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::DOMArrayBufferBase"*, %"class.blink::ScriptState"*)* @_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@_ZTVN5blink16MIDIMessageEventE = linkonce_odr hidden unnamed_addr constant { [34 x i8*] } { [34 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::Event"*)* @_ZN5blink5EventD2Ev to i8*), i8* bitcast (void (%"class.blink::MIDIMessageEvent"*)* @_ZN5blink16MIDIMessageEventD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::MIDIMessageEvent"*, %"class.blink::Visitor"*)* @_ZNK5blink16MIDIMessageEvent5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::MIDIMessageEvent"*)* @_ZNK5blink16MIDIMessageEvent18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void (%"class.blink::Event"*)* @_ZN5blink5Event35DoneDispatchingEventAtCurrentTargetEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::MIDIMessageEvent"*)* @_ZNK5blink16MIDIMessageEvent13InterfaceNameEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event9IsUIEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsMouseEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsFocusEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event15IsKeyboardEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsTouchEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event14IsGestureEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsWheelEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event14IsPointerEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsInputEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event18IsCompositionEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event11IsDragEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event16IsClipboardEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event25IsBeforeTextInsertedEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event25IsBeforeCreatePolicyEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event19IsBeforeUnloadEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsErrorEventEv to i8*), i8* bitcast (void (%"class.blink::Event"*)* @_ZN5blink5Event14preventDefaultEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*, %"class.blink::DOMWrapperWorld"*)* @_ZNK5blink5Event22CanBeDispatchedInWorldERKNS_15DOMWrapperWorldE to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event46ShouldDispatchEvenWhenExecutionContextIsPausedEv to i8*), i8* bitcast (i32 (%"class.blink::Event"*, %"class.blink::EventDispatcher"*)* @_ZN5blink5Event13DispatchEventERNS_15EventDispatcherE to i8*), i8* bitcast (void (%"class.blink::Event"*)* @_ZN5blink5Event14ReceivedTargetEv to i8*)] }, comdat, align 8
@_ZN5blink16MIDIMessageEvent18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink21event_interface_names17kMIDIMessageEventE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8

@_ZN5blink9MIDIInputC1EPNS_10MIDIAccessERKN3WTF6StringES6_S6_S6_N4midi5mojom9PortStateE = hidden unnamed_addr alias void (%"class.blink::MIDIInput"*, %"class.blink::MIDIAccess"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32), void (%"class.blink::MIDIInput"*, %"class.blink::MIDIAccess"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, i32)* @_ZN5blink9MIDIInputC2EPNS_10MIDIAccessERKN3WTF6StringES6_S6_S6_N4midi5mojom9PortStateE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9MIDIInputC2EPNS_10MIDIAccessERKN3WTF6StringES6_S6_S6_N4midi5mojom9PortStateE(%"class.blink::MIDIInput"*, %"class.blink::MIDIAccess"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %8 = bitcast %"class.blink::MIDIInput"* %0 to %"class.blink::MIDIPort"*
  tail call void @_ZN5blink8MIDIPortC2EPNS_10MIDIAccessERKN3WTF6StringES6_S6_NS0_8TypeCodeES6_N4midi5mojom9PortStateE(%"class.blink::MIDIPort"* %8, %"class.blink::MIDIAccess"* %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %4, i32 0, %"class.WTF::String"* dereferenceable(8) %5, i32 %6) #5
  %9 = getelementptr inbounds %"class.blink::MIDIInput", %"class.blink::MIDIInput"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [7 x i8*], [8 x i8*] }, { [31 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink9MIDIInputE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::MIDIInput", %"class.blink::MIDIInput"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %11 = bitcast i32 (...)*** %10 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [7 x i8*], [8 x i8*] }, { [31 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink9MIDIInputE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [7 x i8*], [8 x i8*] }, { [31 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink9MIDIInputE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %11, align 8
  ret void
}

declare void @_ZN5blink8MIDIPortC2EPNS_10MIDIAccessERKN3WTF6StringES6_S6_NS0_8TypeCodeES6_N4midi5mojom9PortStateE(%"class.blink::MIDIPort"*, %"class.blink::MIDIAccess"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::EventListener"* @_ZN5blink9MIDIInput13onmidimessageEv(%"class.blink::MIDIInput"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MIDIInput", %"class.blink::MIDIInput"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kMidimessageE, align 8
  %4 = tail call %"class.blink::EventListener"* @_ZN5blink11EventTarget25GetAttributeEventListenerERKN3WTF12AtomicStringE(%"class.blink::EventTarget"* %2, %"class.WTF::AtomicString"* dereferenceable(8) %3) #5
  ret %"class.blink::EventListener"* %4
}

declare %"class.blink::EventListener"* @_ZN5blink11EventTarget25GetAttributeEventListenerERKN3WTF12AtomicStringE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9MIDIInput16setOnmidimessageEPNS_13EventListenerE(%"class.blink::MIDIInput"*, %"class.blink::EventListener"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::MIDIInput"* %0 to %"class.blink::MIDIPort"*
  tail call void @_ZN5blink8MIDIPort4openEv(%"class.blink::MIDIPort"* %3) #5
  %4 = getelementptr inbounds %"class.blink::MIDIInput", %"class.blink::MIDIInput"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kMidimessageE, align 8
  %6 = tail call zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %5, %"class.blink::EventListener"* %1) #5
  ret void
}

declare void @_ZN5blink8MIDIPort4openEv(%"class.blink::MIDIPort"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink11EventTarget25SetAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9MIDIInput18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::MIDIInput"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::MIDIInput", %"class.blink::MIDIInput"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"* %4, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::RegisteredEventListener"* dereferenceable(16) %2) #5
  %5 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kMidimessageE, align 8
  %6 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %7, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = bitcast %"class.blink::MIDIInput"* %0 to %"class.blink::MIDIPort"*
  tail call void @_ZN5blink8MIDIPort4openEv(%"class.blink::MIDIPort"* %12) #5
  br label %13

13:                                               ; preds = %11, %3
  ret void
}

declare void @_ZN5blink11EventTarget18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9MIDIInput18DidReceiveMIDIDataEjPKhmN4base9TimeTicksE(%"class.blink::MIDIInput"*, i32, i8*, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = icmp eq i64 %3, 0
  br i1 %6, label %52, label %7

7:                                                ; preds = %5
  %8 = bitcast %"class.blink::MIDIInput"* %0 to %"class.blink::MIDIPort"*
  %9 = getelementptr inbounds %"class.blink::MIDIInput", %"class.blink::MIDIInput"* %0, i64 0, i32 0, i32 12
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %52

12:                                               ; preds = %7
  %13 = load i8, i8* %2, align 1
  %14 = icmp eq i8 %13, -16
  br i1 %14, label %15, label %21

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.blink::MIDIInput", %"class.blink::MIDIInput"* %0, i64 0, i32 0, i32 10, i32 0, i32 0
  %17 = load %"class.blink::MIDIAccess"*, %"class.blink::MIDIAccess"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::MIDIAccess", %"class.blink::MIDIAccess"* %17, i64 0, i32 5
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %52, label %21

21:                                               ; preds = %15, %12
  %22 = icmp ult i64 %3, 4294967296
  br i1 %22, label %24, label %23, !prof !3

23:                                               ; preds = %21
  tail call void @llvm.trap() #5
  unreachable

24:                                               ; preds = %21
  %25 = and i64 %3, 4294967295
  %26 = tail call %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer6CreateEPKvm(i8* %2, i64 %25) #5
  %27 = bitcast %"class.blink::DOMArrayBuffer"* %26 to %"class.blink::DOMArrayBufferBase"*
  %28 = tail call %"class.blink::DOMTypedArray"* @_ZN5blink13DOMTypedArrayIhN2v810Uint8ArrayELb0EE6CreateEPNS_18DOMArrayBufferBaseEmm(%"class.blink::DOMArrayBufferBase"* %27, i64 0, i64 %25) #5
  %29 = ptrtoint %"class.blink::DOMTypedArray"* %28 to i64
  %30 = getelementptr inbounds %"class.blink::MIDIInput", %"class.blink::MIDIInput"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 112) #5
  %32 = bitcast i8* %31 to %"class.blink::Event"*
  %33 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names12kMidimessageE, align 8
  tail call void @_ZN5blink5EventC2ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableEN4base9TimeTicksE(%"class.blink::Event"* %32, %"class.WTF::AtomicString"* dereferenceable(8) %33, i32 0, i32 1, i64 %4) #5
  %34 = bitcast i8* %31 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN5blink16MIDIMessageEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds i8, i8* %31, i64 104
  %36 = bitcast i8* %35 to i64*
  store i64 %29, i64* %36, align 8
  %37 = getelementptr inbounds i8, i8* %31, i64 -4
  %38 = bitcast i8* %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = or i16 %39, 1
  store atomic i16 %40, i16* %38 release, align 2
  %41 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %30, %"class.blink::Event"* dereferenceable(104) %32) #5
  %42 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8MIDIPort19GetExecutionContextEv(%"class.blink::MIDIPort"* %8) #5
  %43 = icmp eq %"class.blink::ExecutionContext"* %42, null
  %44 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %42, i64 0, i32 3
  %45 = icmp eq %"class.blink::UseCounter"* %44, null
  %46 = or i1 %43, %45
  br i1 %46, label %52, label %47

47:                                               ; preds = %24
  %48 = bitcast %"class.blink::UseCounter"* %44 to void (%"class.blink::UseCounter"*, i32)***
  %49 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %49, i64 3
  %51 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %50, align 8
  tail call void %51(%"class.blink::UseCounter"* nonnull %44, i32 2031) #5
  br label %52

52:                                               ; preds = %15, %47, %24, %7, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink8MIDIPort19GetExecutionContextEv(%"class.blink::MIDIPort"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink9MIDIInput5TraceEPNS_7VisitorE(%"class.blink::MIDIInput"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::MIDIInput"* %0 to %"class.blink::MIDIPort"*
  tail call void @_ZNK5blink8MIDIPort5TraceEPNS_7VisitorE(%"class.blink::MIDIPort"* %3, %"class.blink::Visitor"* %1) #5
  ret void
}

declare void @_ZNK5blink8MIDIPort5TraceEPNS_7VisitorE(%"class.blink::MIDIPort"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn72_NK5blink9MIDIInput5TraceEPNS_7VisitorE(%"class.blink::MIDIInput"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MIDIInput", %"class.blink::MIDIInput"* %0, i64 -1, i32 0, i32 2, i32 1
  %4 = bitcast i32* %3 to %"class.blink::MIDIPort"*
  tail call void @_ZNK5blink8MIDIPort5TraceEPNS_7VisitorE(%"class.blink::MIDIPort"* %4, %"class.blink::Visitor"* %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn80_NK5blink9MIDIInput5TraceEPNS_7VisitorE(%"class.blink::MIDIInput"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MIDIInput", %"class.blink::MIDIInput"* %0, i64 -1, i32 0, i32 2, i32 0, i32 1
  %4 = bitcast %"class.blink::WeakMember"* %3 to %"class.blink::MIDIPort"*
  tail call void @_ZNK5blink8MIDIPort5TraceEPNS_7VisitorE(%"class.blink::MIDIPort"* %4, %"class.blink::Visitor"* %1) #5
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8MIDIPortD2Ev(%"class.blink::MIDIPort"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MIDIPort", %"class.blink::MIDIPort"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [7 x i8*], [8 x i8*] }, { [31 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink8MIDIPortE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::MIDIPort", %"class.blink::MIDIPort"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [7 x i8*], [8 x i8*] }, { [31 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink8MIDIPortE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [31 x i8*], [7 x i8*], [8 x i8*] }, { [31 x i8*], [7 x i8*], [8 x i8*] }* @_ZTVN5blink8MIDIPortE, i64 0, inrange i32 2, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::MIDIPort", %"class.blink::MIDIPort"* %0, i64 0, i32 9, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #5
  br label %21

21:                                               ; preds = %1, %17, %20
  %22 = getelementptr inbounds %"class.blink::MIDIPort", %"class.blink::MIDIPort"* %0, i64 0, i32 6, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #5
  br label %38

38:                                               ; preds = %21, %34, %37
  %39 = getelementptr inbounds %"class.blink::MIDIPort", %"class.blink::MIDIPort"* %0, i64 0, i32 5, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #5
  br label %55

55:                                               ; preds = %38, %51, %54
  %56 = getelementptr inbounds %"class.blink::MIDIPort", %"class.blink::MIDIPort"* %0, i64 0, i32 4, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #5
  br label %72

72:                                               ; preds = %55, %68, %71
  %73 = getelementptr inbounds %"class.blink::MIDIPort", %"class.blink::MIDIPort"* %0, i64 0, i32 2, i32 0
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %73) #5
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %74 = getelementptr inbounds %"class.blink::MIDIPort", %"class.blink::MIDIPort"* %0, i64 0, i32 0, i32 1
  %75 = bitcast %"class.blink::EventTargetData"* %74 to i8*
  %76 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %75, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 261) #5
  %77 = bitcast i8* %76 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %77) #5
  %78 = getelementptr inbounds %"class.blink::MIDIPort", %"class.blink::MIDIPort"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %78) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9MIDIInputD0Ev(%"class.blink::MIDIInput"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::MIDIInput"* %0 to %"class.blink::MIDIPort"*
  tail call void @_ZN5blink8MIDIPortD2Ev(%"class.blink::MIDIPort"* %2) #5
  ret void
}

declare zeroext i1 @_ZNK5blink8MIDIPort18HasPendingActivityEv(%"class.blink::MIDIPort"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #5
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink9MIDIInput18GetWrapperTypeInfoEv(%"class.blink::MIDIInput"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink9MIDIInput18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink9MIDIInput13InterfaceNameEv(%"class.blink::MIDIInput"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink18event_target_names10kMIDIInputE, align 8
  ret %"class.WTF::AtomicString"* %2
}

declare %"class.blink::Node"* @_ZN5blink11EventTarget6ToNodeEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget23RemoveAllEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink11EventTarget20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink11EventTarget21DispatchEventInternalERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData18GetEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink25EventTargetWithInlineData21EnsureEventTargetDataEv(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::EventTargetData"* %2 to i8*
  %4 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 261)
  %5 = bitcast i8* %4 to %"class.blink::EventTargetData"*
  ret %"class.blink::EventTargetData"* %5
}

declare void @_ZN5blink8MIDIPort16ContextDestroyedEv(%"class.blink::MIDIPort"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8MIDIPort7DidOpenEb(%"class.blink::MIDIPort"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn72_N5blink9MIDIInputD1Ev(%"class.blink::MIDIInput"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MIDIInput", %"class.blink::MIDIInput"* %0, i64 -1, i32 0, i32 2, i32 1
  %3 = bitcast i32* %2 to %"class.blink::MIDIPort"*
  tail call void @_ZN5blink8MIDIPortD2Ev(%"class.blink::MIDIPort"* %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn72_N5blink9MIDIInputD0Ev(%"class.blink::MIDIInput"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MIDIInput", %"class.blink::MIDIInput"* %0, i64 -1, i32 0, i32 2, i32 1
  %3 = bitcast i32* %2 to %"class.blink::MIDIPort"*
  tail call void @_ZN5blink8MIDIPortD2Ev(%"class.blink::MIDIPort"* %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_8MIDIPortEE18IsContextDestroyedEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -9
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::MIDIPort"*
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8MIDIPort19GetExecutionContextEv(%"class.blink::MIDIPort"* %3) #5
  %5 = tail call zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %4) #5
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink21ActiveScriptWrappableINS_8MIDIPortEE26DispatchHasPendingActivityEv(%"class.blink::ActiveScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ActiveScriptWrappable", %"class.blink::ActiveScriptWrappable"* %0, i64 -9
  %3 = bitcast %"class.blink::ActiveScriptWrappable"* %2 to %"class.blink::MIDIPort"*
  %4 = tail call zeroext i1 @_ZNK5blink8MIDIPort18HasPendingActivityEv(%"class.blink::MIDIPort"* %3) #5
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn80_N5blink9MIDIInputD1Ev(%"class.blink::MIDIInput"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MIDIInput", %"class.blink::MIDIInput"* %0, i64 -1, i32 0, i32 2, i32 0, i32 1
  %3 = bitcast %"class.blink::WeakMember"* %2 to %"class.blink::MIDIPort"*
  tail call void @_ZN5blink8MIDIPortD2Ev(%"class.blink::MIDIPort"* %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn80_N5blink9MIDIInputD0Ev(%"class.blink::MIDIInput"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MIDIInput", %"class.blink::MIDIInput"* %0, i64 -1, i32 0, i32 2, i32 0, i32 1
  %3 = bitcast %"class.blink::WeakMember"* %2 to %"class.blink::MIDIPort"*
  tail call void @_ZN5blink8MIDIPortD2Ev(%"class.blink::MIDIPort"* %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink33ExecutionContextLifecycleObserver35IsExecutionContextLifecycleObserverEv(%"class.blink::ExecutionContextLifecycleObserver"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
declare void @_ZThn80_N5blink8MIDIPort16ContextDestroyedEv(%"class.blink::MIDIPort"*) unnamed_addr #0 align 2

declare void @_ZN5blink33ExecutionContextLifecycleObserver19SetExecutionContextEPNS_16ExecutionContextE(%"class.blink::ExecutionContextLifecycleObserver"*, %"class.blink::ExecutionContext"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"*) unnamed_addr #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i8* @llvm.ptr.annotation.p0i8(i8*, i8*, i8*, i32) #5

; Function Attrs: nounwind
declare void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD2Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTVN5blink25EventTargetWithInlineDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZN5blink15EventTargetDataD1Ev(%"class.blink::EventTargetData"* %6) #5
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0
  tail call void @_ZN5blink11EventTargetD2Ev(%"class.blink::EventTarget"* %7) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25EventTargetWithInlineDataD0Ev(%"class.blink::EventTargetWithInlineData"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink25EventTargetWithInlineData5TraceEPNS_7VisitorE(%"class.blink::EventTargetWithInlineData"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::EventTargetData"* %3 to i8*
  %5 = tail call i8* @llvm.ptr.annotation.p0i8(i8* %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 261)
  %6 = bitcast i8* %5 to %"class.blink::EventTargetData"*
  tail call void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"* %6, %"class.blink::Visitor"* %1) #5
  %7 = getelementptr inbounds %"class.blink::EventTargetWithInlineData", %"class.blink::EventTargetWithInlineData"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %7, %"class.blink::Visitor"* %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink11EventTarget18GetWrapperTypeInfoEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink11EventTarget18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZNK5blink15EventTargetData5TraceEPNS_7VisitorE(%"class.blink::EventTargetData"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMArrayBuffer"* @_ZN5blink14DOMArrayBuffer6CreateEPKvm(i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::ArrayBufferContents", align 8
  %4 = alloca %"class.blink::ArrayBufferContents", align 8
  %5 = alloca %"class.blink::ArrayBufferContents", align 8
  %6 = alloca %"class.blink::ArrayBufferContents", align 8
  %7 = bitcast %"class.blink::ArrayBufferContents"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #5
  %8 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %5, i64 0, i32 0, i32 1
  %10 = bitcast %"class.blink::ArrayBufferContents"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  call void @_ZN5blink19ArrayBufferContentsC1EmmNS0_11SharingTypeENS0_20InitializationPolicyE(%"class.blink::ArrayBufferContents"* nonnull %5, i64 %1, i64 1, i32 0, i32 1) #5
  %11 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %8, align 8
  %12 = icmp eq %"class.v8::BackingStore"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %11) #5
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %17, !prof !4

16:                                               ; preds = %2, %13
  notail call fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm(i64 %1) #9
  unreachable

17:                                               ; preds = %13
  %18 = load %"class.v8::BackingStore"*, %"class.v8::BackingStore"** %8, align 8
  %19 = icmp eq %"class.v8::BackingStore"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %17
  %21 = call i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"* nonnull %18) #5
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i8* [ %21, %20 ], [ null, %17 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %0, i64 %1, i1 false)
  %24 = bitcast %"class.blink::ArrayBufferContents"* %5 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.blink::ArrayBufferContents"* %6 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ArrayBufferContents", %"class.blink::ArrayBufferContents"* %6, i64 0, i32 0, i32 1
  %28 = bitcast %"class.std::__1::__shared_weak_count"** %9 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::__shared_weak_count"** %27 to i64*
  store i64 %29, i64* %30, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #5
  %31 = bitcast %"class.blink::ArrayBufferContents"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #5
  %32 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 40) #5
  %33 = bitcast i8* %32 to %"class.blink::DOMArrayBuffer"*
  %34 = bitcast %"class.blink::ArrayBufferContents"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 16, i1 false) #5
  %35 = bitcast %"class.blink::ArrayBufferContents"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 16, i1 false) #5
  %36 = bitcast i8* %32 to i32 (...)***
  %37 = getelementptr inbounds i8, i8* %32, i64 8
  %38 = bitcast i8* %37 to i64**
  store i64* null, i64** %38, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink18DOMArrayBufferBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %39 = getelementptr inbounds i8, i8* %32, i64 16
  %40 = bitcast i8* %39 to i64*
  store i64 %25, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %32, i64 24
  %42 = bitcast i8* %41 to i64*
  store i64 %29, i64* %42, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 0, i64 16, i1 false) #5
  %43 = getelementptr inbounds i8, i8* %32, i64 32
  store i8 0, i8* %43, align 8
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %3) #5
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink14DOMArrayBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #5
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %4) #5
  %44 = getelementptr inbounds i8, i8* %32, i64 -4
  %45 = bitcast i8* %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = or i16 %46, 1
  store atomic i16 %47, i16* %45 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #5
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %6) #5
  call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #5
  ret %"class.blink::DOMArrayBuffer"* %33
}

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::DOMTypedArray"* @_ZN5blink13DOMTypedArrayIhN2v810Uint8ArrayELb0EE6CreateEPNS_18DOMArrayBufferBaseEmm(%"class.blink::DOMArrayBufferBase"*, i64, i64) local_unnamed_addr #0 align 2

declare void @_ZN5blink19ArrayBufferContentsC1EmmNS0_11SharingTypeENS0_20InitializationPolicyE(%"class.blink::ArrayBufferContents"*, i64, i64, i32, i32) unnamed_addr #1

; Function Attrs: noinline noreturn nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm(i64) unnamed_addr #7 {
  tail call void @_ZN4base8internal28RunPartitionAllocOomCallbackEv() #5
  tail call void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64 %0) #5
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !5
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #5, !srcloc !6
  unreachable
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"*) unnamed_addr #4

declare i8* @_ZNK2v812BackingStore4DataEv(%"class.v8::BackingStore"*) local_unnamed_addr #1

declare void @_ZN4base8internal28RunPartitionAllocOomCallbackEv() local_unnamed_addr #1

declare void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #5
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !4

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #5
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #5
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #5
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #5
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #5
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #5
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #5
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #5
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %40, i8* %41) #5
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #5
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #5
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.3, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #5
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #5
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #5
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #5
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !4

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #5
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #5
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18DOMArrayBufferBaseD2Ev(%"class.blink::DOMArrayBufferBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink18DOMArrayBufferBaseE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DOMArrayBufferBase", %"class.blink::DOMArrayBufferBase"* %0, i64 0, i32 1
  tail call void @_ZN5blink19ArrayBufferContentsD1Ev(%"class.blink::ArrayBufferContents"* %3) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18DOMArrayBufferBaseD0Ev(%"class.blink::DOMArrayBufferBase"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Value"* @_ZN5blink18DOMArrayBufferBase4WrapEPNS_11ScriptStateE(%"class.blink::DOMArrayBufferBase"*, %"class.blink::ScriptState"*) unnamed_addr #0 comdat align 2 {
  ret %"class.v8::Value"* null
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

declare void @_ZN5blink5EventC2ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableEN4base9TimeTicksE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink5EventD2Ev(%"class.blink::Event"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16MIDIMessageEventD0Ev(%"class.blink::MIDIMessageEvent"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::MIDIMessageEvent", %"class.blink::MIDIMessageEvent"* %0, i64 0, i32 0
  tail call void @_ZN5blink5EventD2Ev(%"class.blink::Event"* %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink16MIDIMessageEvent5TraceEPNS_7VisitorE(%"class.blink::MIDIMessageEvent"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::MIDIMessageEvent", %"class.blink::MIDIMessageEvent"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.58"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEE5TraceEPNS_7VisitorEPKv) #5
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::MIDIMessageEvent", %"class.blink::MIDIMessageEvent"* %0, i64 0, i32 0
  tail call void @_ZNK5blink5Event5TraceEPNS_7VisitorE(%"class.blink::Event"* %14, %"class.blink::Visitor"* %1) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink16MIDIMessageEvent18GetWrapperTypeInfoEv(%"class.blink::MIDIMessageEvent"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink16MIDIMessageEvent18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5Event35DoneDispatchingEventAtCurrentTargetEv(%"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink16MIDIMessageEvent13InterfaceNameEv(%"class.blink::MIDIMessageEvent"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink21event_interface_names17kMIDIMessageEventE, align 8
  ret %"class.WTF::AtomicString"* %2
}

declare zeroext i1 @_ZNK5blink5Event9IsUIEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event12IsMouseEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event12IsFocusEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event15IsKeyboardEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event12IsTouchEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event14IsGestureEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event12IsWheelEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event14IsPointerEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event12IsInputEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event18IsCompositionEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event11IsDragEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event16IsClipboardEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event25IsBeforeTextInsertedEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event25IsBeforeCreatePolicyEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event19IsBeforeUnloadEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event12IsErrorEventEv(%"class.blink::Event"*) unnamed_addr #1

declare void @_ZN5blink5Event14preventDefaultEv(%"class.blink::Event"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Event22CanBeDispatchedInWorldERKNS_15DOMWrapperWorldE(%"class.blink::Event"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Event46ShouldDispatchEvenWhenExecutionContextIsPausedEv(%"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZN5blink5Event13DispatchEventERNS_15EventDispatcherE(%"class.blink::Event"*, %"class.blink::EventDispatcher"*) unnamed_addr #1

declare void @_ZN5blink5Event14ReceivedTargetEv(%"class.blink::Event"*) unnamed_addr #1

declare void @_ZNK5blink5Event5TraceEPNS_7VisitorE(%"class.blink::Event"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13DOMTypedArrayIhN2v810Uint8ArrayELb0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 32
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_18DOMArrayBufferBaseEE5TraceEPNS_7VisitorEPKv) #5
  br label %13

13:                                               ; preds = %2, %7
  %14 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %14, %"class.blink::Visitor"* %0) #5
  ret void
}

declare zeroext i1 @_ZN5blink42IsContextDestroyedForActiveScriptWrappableEPKNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { noreturn }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{i32 -2136985407}
!6 = !{i32 -2136985386}
