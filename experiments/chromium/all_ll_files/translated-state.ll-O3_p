; ModuleID = '../../v8/src/deoptimizer/translated-state.cc'
source_filename = "../../v8/src/deoptimizer/translated-state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::TranslatedState" = type <{ i32, [4 x i8], %"class.std::__1::vector.7", %"class.v8::internal::Isolate"*, i64, i32, i32, %"class.std::__1::deque.1163", %"class.v8::internal::Handle.1175", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"*, %"class.std::__1::__compressed_pair.21" }
%"class.v8::internal::TranslatedFrame" = type <{ i32, %"class.v8::internal::BytecodeOffset", %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::Handle", i32, i32, i32, [4 x i8], %"class.std::__1::deque", %"class.v8::base::Optional", [6 x i8] }>
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::SharedFunctionInfo" = type { %"class.v8::internal::TorqueGeneratedSharedFunctionInfo" }
%"class.v8::internal::TorqueGeneratedSharedFunctionInfo" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.15" }
%"struct.std::__1::__split_buffer" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"**, %"class.std::__1::__compressed_pair.10" }
%"class.v8::internal::TranslatedValue" = type { i8, i8, %"class.v8::internal::TranslatedState"*, %"class.v8::internal::Handle.9", %union.anon }
%"class.v8::internal::Handle.9" = type { %"class.v8::internal::HandleBase" }
%union.anon = type { %"class.v8::internal::Object" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.v8::internal::TranslatedValue"** }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { i64 }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.20 }
%union.anon.20 = type { i8 }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.v8::internal::TranslatedFrame"* }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.28", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.680", %"class.std::__1::unique_ptr.701", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.711", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.861", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.871", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.882", %"struct.std::__1::atomic.187", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.957", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.1003"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1010", i32, i8, i8, i32, i32, %"class.std::__1::vector.1016", %"class.std::__1::vector.1016", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1023", i64, %"class.std::__1::unordered_map.1024", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.576", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.195", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1080", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1118", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1152", %"class.std::__1::vector.1156", %"class.std::__1::vector.1156", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.26", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.26" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.52", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.52", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.52", i64, i64, %"struct.std::__1::atomic.52", %"struct.std::__1::atomic.62", %"class.std::__1::vector.66", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.181", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.196", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.52", i64, i8, %"struct.std::__1::atomic.52", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.200", %"class.std::__1::vector.200", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.343", %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.355", %"class.std::__1::unique_ptr.394", %"class.std::__1::unique_ptr.433", %"class.std::__1::unique_ptr.463", %"class.std::__1::unique_ptr.469", %"class.std::__1::unique_ptr.479", %"class.std::__1::unique_ptr.485", %"class.std::__1::unique_ptr.485", %"class.std::__1::unique_ptr.491", %"class.std::__1::unique_ptr.497", %"class.std::__1::unique_ptr.497", %"class.std::__1::unique_ptr.503", %"class.std::__1::unique_ptr.509", %"class.std::__1::shared_ptr.515", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.538", %"class.std::__1::unique_ptr.564", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.570", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.583", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.365", i8, [7 x i8], %"class.std::__1::unordered_map.589", %"class.std::__1::unordered_map.615", %"class.std::__1::unordered_map.589", %"class.std::__1::unordered_map.639", %"class.std::__1::vector.667", i8, %"class.std::__1::unique_ptr.674", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.34", %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.49", [4 x i8] }>
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36", %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.57", %"struct.std::__1::atomic.57", %"struct.std::__1::atomic.57" }
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i64 }
%"struct.std::__1::atomic.62" = type { %"struct.std::__1::__atomic_base.63" }
%"struct.std::__1::__atomic_base.63" = type { %"struct.std::__1::__cxx_atomic_impl.64" }
%"struct.std::__1::__cxx_atomic_impl.64" = type { %"struct.std::__1::__cxx_atomic_base_impl.65" }
%"struct.std::__1::__cxx_atomic_base_impl.65" = type { i32 }
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.68" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.52", %"struct.std::__1::atomic.52", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.138" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.52"*, %"class.std::__1::unique_ptr.132" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.52", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.73", %"class.std::__1::vector.73", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.75" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.80" }
%"class.std::__1::__hash_table.80" = type <{ %"class.std::__1::unique_ptr.81", %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.96", %"class.std::__1::__compressed_pair.98", [4 x i8] }>
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83", %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"struct.std::__1::__hash_node_base.84"** }
%"struct.std::__1::__hash_node_base.84" = type { %"struct.std::__1::__hash_node_base.84"* }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__bucket_list_deallocator.86" }
%"class.std::__1::__bucket_list_deallocator.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.std::__1::__hash_node_base.84" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.52", %"struct.std::__1::atomic.57", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.121", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.52"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.57", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.57", %"struct.std::__1::atomic.103", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.103" = type { %"struct.std::__1::__atomic_base.104" }
%"struct.std::__1::__atomic_base.104" = type { %"struct.std::__1::__cxx_atomic_impl.105" }
%"struct.std::__1::__cxx_atomic_impl.105" = type { %"struct.std::__1::__cxx_atomic_base_impl.106" }
%"struct.std::__1::__cxx_atomic_base_impl.106" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.107" }
%"class.std::__1::vector.107" = type { %"class.std::__1::__vector_base.108" }
%"class.std::__1::__vector_base.108" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.109" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::atomic.121" = type { %"struct.std::__1::__atomic_base.122" }
%"struct.std::__1::__atomic_base.122" = type { %"struct.std::__1::__cxx_atomic_impl.123" }
%"struct.std::__1::__cxx_atomic_impl.123" = type { %"struct.std::__1::__cxx_atomic_base_impl.124" }
%"struct.std::__1::__cxx_atomic_base_impl.124" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.125", i8, [7 x i8] }>
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { i64*, i64*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.52", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.138" = type { %"class.std::__1::__vector_base.139" }
%"class.std::__1::__vector_base.139" = type { %"struct.std::__1::pair.140"*, %"struct.std::__1::pair.140"*, %"class.std::__1::__compressed_pair.141" }
%"struct.std::__1::pair.140" = type { i32, i64 }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.std::__1::pair.140"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.52", i64, %"struct.std::__1::atomic.52" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.52", i32, %"struct.std::__1::atomic.52", %"class.v8::base::Mutex", %"struct.std::__1::atomic.52" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.146" }
%"class.std::__1::unordered_map.146" = type { %"class.std::__1::__hash_table.147" }
%"class.std::__1::__hash_table.147" = type <{ %"class.std::__1::unique_ptr.148", %"class.std::__1::__compressed_pair.158", %"class.std::__1::__compressed_pair.163", %"class.std::__1::__compressed_pair.168", [4 x i8] }>
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150", %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"struct.std::__1::__hash_node_base.151"** }
%"struct.std::__1::__hash_node_base.151" = type { %"struct.std::__1::__hash_node_base.151"* }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.std::__1::__bucket_list_deallocator.153" }
%"class.std::__1::__bucket_list_deallocator.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.std::__1::__hash_node_base.151" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.174", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.174" = type { %"class.std::__1::__vector_base.175" }
%"class.std::__1::__vector_base.175" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.176" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1085", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1089", %"class.std::__1::unique_ptr.1095", %"class.std::__1::unique_ptr.509", %"class.std::__1::vector.1101", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1085" = type { %"struct.std::__1::__atomic_base.1086" }
%"struct.std::__1::__atomic_base.1086" = type { %"struct.std::__1::__cxx_atomic_impl.1087" }
%"struct.std::__1::__cxx_atomic_impl.1087" = type { %"struct.std::__1::__cxx_atomic_base_impl.1088" }
%"struct.std::__1::__cxx_atomic_base_impl.1088" = type { i32 }
%"class.std::__1::unique_ptr.1089" = type { %"class.std::__1::__compressed_pair.1090" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.1091" }
%"struct.std::__1::__compressed_pair_elem.1091" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.848" }
%"class.std::__1::vector.848" = type { %"class.std::__1::__vector_base.849" }
%"class.std::__1::__vector_base.849" = type { i64**, i64**, %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.851" }
%"struct.std::__1::__compressed_pair_elem.851" = type { i64** }
%"class.std::__1::unique_ptr.1095" = type { %"class.std::__1::__compressed_pair.1096" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.848", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1101" = type { %"class.std::__1::__vector_base.1102" }
%"class.std::__1::__vector_base.1102" = type { %"struct.std::__1::pair.1103"*, %"struct.std::__1::pair.1103"*, %"class.std::__1::__compressed_pair.1104" }
%"struct.std::__1::pair.1103" = type opaque
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.1105" }
%"struct.std::__1::__compressed_pair_elem.1105" = type { %"struct.std::__1::pair.1103"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.187", %"struct.std::__1::atomic.191", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.52" }
%"struct.std::__1::atomic.191" = type { %"struct.std::__1::__atomic_base.192" }
%"struct.std::__1::__atomic_base.192" = type { %"struct.std::__1::__cxx_atomic_impl.193" }
%"struct.std::__1::__cxx_atomic_impl.193" = type { %"struct.std::__1::__cxx_atomic_base_impl.194" }
%"struct.std::__1::__cxx_atomic_base_impl.194" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.52", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.195" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__cxx_atomic_impl.198" }
%"struct.std::__1::__cxx_atomic_impl.198" = type { %"struct.std::__1::__cxx_atomic_base_impl.199" }
%"struct.std::__1::__cxx_atomic_base_impl.199" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__cxx_atomic_impl.55" }
%"struct.std::__1::__cxx_atomic_impl.55" = type { %"struct.std::__1::__cxx_atomic_base_impl.56" }
%"struct.std::__1::__cxx_atomic_base_impl.56" = type { i64 }
%"class.std::__1::vector.200" = type { %"class.std::__1::__vector_base.201" }
%"class.std::__1::__vector_base.201" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.202" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.261", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.315", %"class.std::__1::vector.315", %"class.std::__1::vector.315", %"class.std::__1::vector.322", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.216", %"class.std::__1::vector.217", %"class.std::__1::vector.224", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.216" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.217" = type { %"class.std::__1::__vector_base.218" }
%"class.std::__1::__vector_base.218" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.219" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.224" = type { %"class.std::__1::__vector_base.225" }
%"class.std::__1::__vector_base.225" = type { %"class.std::__1::unique_ptr.226"*, %"class.std::__1::unique_ptr.226"*, %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::unique_ptr.226" = type opaque
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.std::__1::unique_ptr.226"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.232", %"class.v8::internal::Worklist.234", %"class.v8::internal::Worklist.234", %"class.v8::internal::Worklist.234", %"class.v8::internal::Worklist.236", %"class.v8::internal::Worklist.238", %"class.v8::internal::Worklist.240", %"class.v8::internal::Worklist.242", %"class.v8::internal::Worklist.244", %"class.v8::internal::Worklist.246" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.v8::internal::Worklist.232" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.v8::internal::Worklist.234" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.v8::internal::Worklist.236" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.v8::internal::Worklist.238" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.v8::internal::Worklist.240" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.v8::internal::Worklist.242" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.v8::internal::Worklist.244" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.52" }
%"class.v8::internal::Worklist.246" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.52" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.248", i8, i64 }
%"class.std::__1::vector.248" = type { %"class.std::__1::__vector_base.249" }
%"class.std::__1::__vector_base.249" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.264" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.216"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.264" = type { %"class.std::__1::__hash_table.265" }
%"class.std::__1::__hash_table.265" = type <{ %"class.std::__1::unique_ptr.266", %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.281", %"class.std::__1::__compressed_pair.284", [4 x i8] }>
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268", %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.std::__1::__hash_node_base.269"** }
%"struct.std::__1::__hash_node_base.269" = type { %"struct.std::__1::__hash_node_base.269"* }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.std::__1::__bucket_list_deallocator.271" }
%"class.std::__1::__bucket_list_deallocator.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"struct.std::__1::__hash_node_base.269" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.291" }
%"class.std::__1::unordered_map.291" = type { %"class.std::__1::__hash_table.292" }
%"class.std::__1::__hash_table.292" = type <{ %"class.std::__1::unique_ptr.293", %"class.std::__1::__compressed_pair.303", %"class.std::__1::__compressed_pair.308", %"class.std::__1::__compressed_pair.311", [4 x i8] }>
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295", %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"struct.std::__1::__hash_node_base.296"** }
%"struct.std::__1::__hash_node_base.296" = type { %"struct.std::__1::__hash_node_base.296"* }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.std::__1::__bucket_list_deallocator.298" }
%"class.std::__1::__bucket_list_deallocator.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"struct.std::__1::__hash_node_base.296" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::vector.315" = type { %"class.std::__1::__vector_base.316" }
%"class.std::__1::__vector_base.316" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.322" = type { %"class.std::__1::__vector_base.323" }
%"class.std::__1::__vector_base.323" = type { %"struct.std::__1::pair.324"*, %"struct.std::__1::pair.324"*, %"class.std::__1::__compressed_pair.325" }
%"struct.std::__1::pair.324" = type opaque
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"struct.std::__1::pair.324"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.330", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.315"], [3 x %"class.std::__1::vector.315"], i8, %"struct.std::__1::atomic.187", [6 x i8], %"class.std::__1::vector.315", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.340"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.315", %"class.std::__1::vector.315", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.340" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.52", %"struct.std::__1::atomic.52", %"struct.std::__1::atomic.52", %"struct.std::__1::atomic.52", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.365", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.358"], %"class.std::__1::unique_ptr.330" }
%"class.std::__1::vector.358" = type { %"class.std::__1::__vector_base.359" }
%"class.std::__1::__vector_base.359" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.397", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.401", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.406" }
%"struct.std::__1::atomic.397" = type { %"struct.std::__1::__atomic_base.398" }
%"struct.std::__1::__atomic_base.398" = type { %"struct.std::__1::__cxx_atomic_impl.399" }
%"struct.std::__1::__cxx_atomic_impl.399" = type { %"struct.std::__1::__cxx_atomic_base_impl.400" }
%"struct.std::__1::__cxx_atomic_base_impl.400" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.401" = type { %"struct.std::__1::__atomic_base.402" }
%"struct.std::__1::__atomic_base.402" = type { %"struct.std::__1::__cxx_atomic_impl.403" }
%"struct.std::__1::__cxx_atomic_impl.403" = type { %"struct.std::__1::__cxx_atomic_base_impl.404" }
%"struct.std::__1::__cxx_atomic_base_impl.404" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.406" = type { %"class.std::__1::__hash_table.407" }
%"class.std::__1::__hash_table.407" = type <{ %"class.std::__1::unique_ptr.408", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.423", %"class.std::__1::__compressed_pair.426", [4 x i8] }>
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410", %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"struct.std::__1::__hash_node_base.411"** }
%"struct.std::__1::__hash_node_base.411" = type { %"struct.std::__1::__hash_node_base.411"* }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"class.std::__1::__bucket_list_deallocator.413" }
%"class.std::__1::__bucket_list_deallocator.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"struct.std::__1::__hash_node_base.411" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.426" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.330", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.52", %"struct.std::__1::atomic.187", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.436", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.436" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.456", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::unique_ptr.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.472" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.479" = type { %"class.std::__1::__compressed_pair.480" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.491" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.497" = type { %"class.std::__1::__compressed_pair.498" }
%"class.std::__1::__compressed_pair.498" = type { %"struct.std::__1::__compressed_pair_elem.499" }
%"struct.std::__1::__compressed_pair_elem.499" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.515" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.534", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.516", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.519", %"class.std::__1::set.527" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.519" = type { %"class.std::__1::__tree.520" }
%"class.std::__1::__tree.520" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.521", %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::set.527" = type { %"class.std::__1::__tree.528" }
%"class.std::__1::__tree.528" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.521", %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::atomic.534" = type { %"struct.std::__1::__atomic_base.535" }
%"struct.std::__1::__atomic_base.535" = type { %"struct.std::__1::__cxx_atomic_impl.536" }
%"struct.std::__1::__cxx_atomic_impl.536" = type { %"struct.std::__1::__cxx_atomic_base_impl.537" }
%"struct.std::__1::__cxx_atomic_base_impl.537" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.538" = type { %"class.std::__1::__hash_table.539" }
%"class.std::__1::__hash_table.539" = type <{ %"class.std::__1::unique_ptr.540", %"class.std::__1::__compressed_pair.550", %"class.std::__1::__compressed_pair.555", %"class.std::__1::__compressed_pair.558", [4 x i8] }>
%"class.std::__1::unique_ptr.540" = type { %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542", %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"struct.std::__1::__hash_node_base.543"** }
%"struct.std::__1::__hash_node_base.543" = type { %"struct.std::__1::__hash_node_base.543"* }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.std::__1::__bucket_list_deallocator.545" }
%"class.std::__1::__bucket_list_deallocator.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"struct.std::__1::__hash_node_base.543" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.576", %"class.std::__1::vector.576" }
%"class.std::__1::unique_ptr.583" = type { %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.365" = type { %"class.std::__1::__hash_table.366" }
%"class.std::__1::__hash_table.366" = type <{ %"class.std::__1::unique_ptr.367", %"class.std::__1::__compressed_pair.377", %"class.std::__1::__compressed_pair.382", %"class.std::__1::__compressed_pair.386", [4 x i8] }>
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369", %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"struct.std::__1::__hash_node_base.370"** }
%"struct.std::__1::__hash_node_base.370" = type { %"struct.std::__1::__hash_node_base.370"* }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.std::__1::__bucket_list_deallocator.372" }
%"class.std::__1::__bucket_list_deallocator.372" = type { %"class.std::__1::__compressed_pair.373" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"struct.std::__1::__hash_node_base.370" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::unordered_map.615" = type { %"class.std::__1::__hash_table.616" }
%"class.std::__1::__hash_table.616" = type <{ %"class.std::__1::unique_ptr.617", %"class.std::__1::__compressed_pair.627", %"class.std::__1::__compressed_pair.632", %"class.std::__1::__compressed_pair.635", [4 x i8] }>
%"class.std::__1::unique_ptr.617" = type { %"class.std::__1::__compressed_pair.618" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619", %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"struct.std::__1::__hash_node_base.620"** }
%"struct.std::__1::__hash_node_base.620" = type { %"struct.std::__1::__hash_node_base.620"* }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"class.std::__1::__bucket_list_deallocator.622" }
%"class.std::__1::__bucket_list_deallocator.622" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.628" = type { %"struct.std::__1::__hash_node_base.620" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::unordered_map.589" = type { %"class.std::__1::__hash_table.590" }
%"class.std::__1::__hash_table.590" = type <{ %"class.std::__1::unique_ptr.591", %"class.std::__1::__compressed_pair.601", %"class.std::__1::__compressed_pair.606", %"class.std::__1::__compressed_pair.609", [4 x i8] }>
%"class.std::__1::unique_ptr.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593", %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.594"** }
%"struct.std::__1::__hash_node_base.594" = type { %"struct.std::__1::__hash_node_base.594"* }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.std::__1::__bucket_list_deallocator.596" }
%"class.std::__1::__bucket_list_deallocator.596" = type { %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"struct.std::__1::__hash_node_base.594" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::unordered_map.639" = type { %"class.std::__1::__hash_table.640" }
%"class.std::__1::__hash_table.640" = type <{ %"class.std::__1::unique_ptr.641", %"class.std::__1::__compressed_pair.651", %"class.std::__1::__compressed_pair.656", %"class.std::__1::__compressed_pair.661", [4 x i8] }>
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643", %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"struct.std::__1::__hash_node_base.644"** }
%"struct.std::__1::__hash_node_base.644" = type { %"struct.std::__1::__hash_node_base.644"* }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.std::__1::__bucket_list_deallocator.646" }
%"class.std::__1::__bucket_list_deallocator.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.652" }
%"struct.std::__1::__compressed_pair_elem.652" = type { %"struct.std::__1::__hash_node_base.644" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.std::__1::vector.667" = type { %"class.std::__1::__vector_base.668" }
%"class.std::__1::__vector_base.668" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.669" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.674" = type { %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.576" }
%"class.std::__1::shared_ptr.680" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.174", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.681", %"class.std::__1::unique_ptr.695" }
%"class.std::__1::unique_ptr.681" = type { %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.684" }
%"class.std::__1::vector.684" = type { %"class.std::__1::__vector_base.685" }
%"class.std::__1::__vector_base.685" = type { %"class.std::__1::unique_ptr.686"*, %"class.std::__1::unique_ptr.686"*, %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.1215" }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.1216" }
%"struct.std::__1::__compressed_pair_elem.1216" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.std::__1::unique_ptr.686"* }
%"class.std::__1::unique_ptr.695" = type { %"class.std::__1::__compressed_pair.696" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"struct.std::__1::__compressed_pair_elem.697" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.701" = type { %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.704", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.704" = type { %"struct.std::__1::__atomic_base.705" }
%"struct.std::__1::__atomic_base.705" = type { %"struct.std::__1::__cxx_atomic_impl.706" }
%"struct.std::__1::__cxx_atomic_impl.706" = type { %"struct.std::__1::__cxx_atomic_base_impl.707" }
%"struct.std::__1::__cxx_atomic_base_impl.707" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.711" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.712", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.712" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.713", %"class.v8::base::Optional.721", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.713" = type { %"class.std::__1::__vector_base.714" }
%"class.std::__1::__vector_base.714" = type { %"class.std::__1::unique_ptr.715"*, %"class.std::__1::unique_ptr.715"*, %"class.std::__1::__compressed_pair.716" }
%"class.std::__1::unique_ptr.715" = type opaque
%"class.std::__1::__compressed_pair.716" = type { %"struct.std::__1::__compressed_pair_elem.717" }
%"struct.std::__1::__compressed_pair_elem.717" = type { %"class.std::__1::unique_ptr.715"* }
%"class.v8::base::Optional.721" = type { %"class.v8::base::internal::OptionalBase.722" }
%"class.v8::base::internal::OptionalBase.722" = type { %"struct.v8::base::internal::OptionalStorage.723" }
%"struct.v8::base::internal::OptionalStorage.723" = type { %"struct.v8::base::internal::OptionalStorageBase.724" }
%"struct.v8::base::internal::OptionalStorageBase.724" = type { i8, %union.anon.725 }
%union.anon.725 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.726", %"class.std::__1::unique_ptr.732", %"struct.std::__1::atomic.187", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.744", %"class.std::__1::unique_ptr.750", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.762", %"class.std::__1::set.768", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.726" = type { %"class.std::__1::__compressed_pair.727" }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.732" = type { %"class.std::__1::__compressed_pair.733" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.768" = type { %"class.std::__1::__tree.769" }
%"class.std::__1::__tree.769" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.770", %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.770" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.777" }
%"class.v8::internal::TaggedImpl.777" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.776" }
%"class.v8::internal::TaggedImpl.776" = type { i32 }
%"class.v8::internal::Deoptimizer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::JSFunction", %"class.v8::internal::Code", i32, i8, i64, i32, i8, i32, i32, %"class.v8::internal::FrameDescription"*, i32, %"class.v8::internal::FrameDescription"**, i64, i64, i64, i64, i32, i64, %"class.v8::internal::TranslatedState", %"class.std::__1::vector.1176", %"class.std::__1::unique_ptr.1183" }
%"class.v8::internal::JSFunction" = type { %"class.v8::internal::JSFunctionOrBoundFunction" }
%"class.v8::internal::JSFunctionOrBoundFunction" = type { %"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" }
%"class.v8::internal::TorqueGeneratedJSFunctionOrBoundFunction" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FrameDescription" = type { i64, i32, %"class.v8::internal::RegisterValues", i64, i64, i64, i64, i64, i64, [1 x i64] }
%"class.v8::internal::RegisterValues" = type { [16 x i64], [16 x %"class.v8::internal::Float64"] }
%"class.v8::internal::Float64" = type { i64 }
%"class.std::__1::vector.1176" = type { %"class.std::__1::__vector_base.1177" }
%"class.std::__1::__vector_base.1177" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"struct.v8::internal::Deoptimizer::ValueToMaterialize"*, %"class.std::__1::__compressed_pair.1178" }
%"struct.v8::internal::Deoptimizer::ValueToMaterialize" = type { i64, %"class.v8::internal::TranslatedFrame::iterator" }
%"class.v8::internal::TranslatedFrame::iterator" = type <{ %"class.std::__1::__deque_iterator", i32, [4 x i8] }>
%"class.std::__1::__deque_iterator" = type { %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"* }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"struct.v8::internal::Deoptimizer::ValueToMaterialize"* }
%"class.std::__1::unique_ptr.1183" = type { %"class.std::__1::__compressed_pair.1184" }
%"class.std::__1::__compressed_pair.1184" = type { %"struct.std::__1::__compressed_pair_elem.1185" }
%"struct.std::__1::__compressed_pair_elem.1185" = type { %"class.v8::internal::CodeTracer::Scope"* }
%"class.v8::internal::CodeTracer::Scope" = type { %"class.v8::internal::CodeTracer"* }
%"class.v8::internal::MaterializedObjectStore" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.125" }
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.784", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.784" = type { %"class.std::__1::__compressed_pair.785" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.790", %"class.v8::internal::DetachableVector.791", %"class.v8::internal::DetachableVector.790", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.791" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.790" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.52", %"struct.std::__1::atomic.52", %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.516" }
%"class.std::__1::unique_ptr.778" = type { %"class.std::__1::__compressed_pair.779" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.780" }
%"struct.std::__1::__compressed_pair_elem.780" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.792", %"class.std::__1::vector.798", %"class.std::__1::unique_ptr.805", %"class.std::__1::vector.812", %"class.std::__1::unique_ptr.819", i64, %"class.std::__1::vector.825", %"class.std::__1::vector.833", %"class.std::__1::vector.841", i8, i8, i32 }
%"class.std::__1::unique_ptr.792" = type { %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.794" }
%"struct.std::__1::__compressed_pair_elem.794" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.798" = type { %"class.std::__1::__vector_base.799" }
%"class.std::__1::__vector_base.799" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.800" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.805" = type { %"class.std::__1::__compressed_pair.806" }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"class.v8::internal::GlobalHandles::NodeSpace.808"* }
%"class.v8::internal::GlobalHandles::NodeSpace.808" = type opaque
%"class.std::__1::vector.812" = type { %"class.std::__1::__vector_base.813" }
%"class.std::__1::__vector_base.813" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.814" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.815" }
%"struct.std::__1::__compressed_pair_elem.815" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.819" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.825" = type { %"class.std::__1::__vector_base.826" }
%"class.std::__1::__vector_base.826" = type { %"struct.std::__1::pair.827"*, %"struct.std::__1::pair.827"*, %"class.std::__1::__compressed_pair.828" }
%"struct.std::__1::pair.827" = type opaque
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"struct.std::__1::pair.827"* }
%"class.std::__1::vector.833" = type { %"class.std::__1::__vector_base.834" }
%"class.std::__1::__vector_base.834" = type { %"struct.std::__1::pair.835"*, %"struct.std::__1::pair.835"*, %"class.std::__1::__compressed_pair.836" }
%"struct.std::__1::pair.835" = type opaque
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"struct.std::__1::pair.835"* }
%"class.std::__1::vector.841" = type { %"class.std::__1::__vector_base.842" }
%"class.std::__1::__vector_base.842" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.843" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.848", %"class.std::__1::vector" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.855" }
%"class.std::__1::unique_ptr.855" = type { %"class.std::__1::__compressed_pair.856" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.857" }
%"struct.std::__1::__compressed_pair_elem.857" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.861" = type { %"struct.std::__1::__atomic_base.862" }
%"struct.std::__1::__atomic_base.862" = type { %"struct.std::__1::__cxx_atomic_impl.863" }
%"struct.std::__1::__cxx_atomic_impl.863" = type { %"struct.std::__1::__cxx_atomic_base_impl.864" }
%"struct.std::__1::__cxx_atomic_base_impl.864" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.871" = type { %"struct.std::__1::__atomic_base.872" }
%"struct.std::__1::__atomic_base.872" = type { %"struct.std::__1::__cxx_atomic_impl.873" }
%"struct.std::__1::__cxx_atomic_impl.873" = type { %"struct.std::__1::__cxx_atomic_base_impl.874" }
%"struct.std::__1::__cxx_atomic_base_impl.874" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.878 }
%union.anon.878 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.882" = type { %"class.std::__1::__hash_table.883" }
%"class.std::__1::__hash_table.883" = type <{ %"class.std::__1::unique_ptr.884", %"class.std::__1::__compressed_pair.894", %"class.std::__1::__compressed_pair.899", %"class.std::__1::__compressed_pair.902", [4 x i8] }>
%"class.std::__1::unique_ptr.884" = type { %"class.std::__1::__compressed_pair.885" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886", %"struct.std::__1::__compressed_pair_elem.888" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"struct.std::__1::__hash_node_base.887"** }
%"struct.std::__1::__hash_node_base.887" = type { %"struct.std::__1::__hash_node_base.887"* }
%"struct.std::__1::__compressed_pair_elem.888" = type { %"class.std::__1::__bucket_list_deallocator.889" }
%"class.std::__1::__bucket_list_deallocator.889" = type { %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.895" }
%"struct.std::__1::__compressed_pair_elem.895" = type { %"struct.std::__1::__hash_node_base.887" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::atomic.187" = type { %"struct.std::__1::__atomic_base.188" }
%"struct.std::__1::__atomic_base.188" = type { %"struct.std::__1::__cxx_atomic_impl.189" }
%"struct.std::__1::__cxx_atomic_impl.189" = type { %"struct.std::__1::__cxx_atomic_base_impl.190" }
%"struct.std::__1::__cxx_atomic_base_impl.190" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.908", %"class.v8::internal::Handle.914", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.915", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.908" = type { %"class.std::__1::__compressed_pair.909" }
%"class.std::__1::__compressed_pair.909" = type { %"struct.std::__1::__compressed_pair_elem.910" }
%"struct.std::__1::__compressed_pair_elem.910" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.914" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.915" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.916", %"class.std::__1::vector.922", %"class.std::__1::unique_ptr.930", %"class.std::__1::unique_ptr.936", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.942", %"class.std::__1::vector.948", %"struct.std::__1::pair.956" }
%"class.std::__1::unique_ptr.916" = type { %"class.std::__1::__compressed_pair.917" }
%"class.std::__1::__compressed_pair.917" = type { %"struct.std::__1::__compressed_pair_elem.918" }
%"struct.std::__1::__compressed_pair_elem.918" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.922" = type { %"class.std::__1::__vector_base.923" }
%"class.std::__1::__vector_base.923" = type { %"class.std::__1::unique_ptr.924"*, %"class.std::__1::unique_ptr.924"*, %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::unique_ptr.924" = type opaque
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.std::__1::unique_ptr.924"* }
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.936" = type { %"class.std::__1::__compressed_pair.937" }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.938" }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.942" = type { %"class.std::__1::__compressed_pair.943" }
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.944" }
%"struct.std::__1::__compressed_pair_elem.944" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.948" = type { %"class.std::__1::__vector_base.949" }
%"class.std::__1::__vector_base.949" = type { %"struct.std::__1::pair.950"*, %"struct.std::__1::pair.950"*, %"class.std::__1::__compressed_pair.951" }
%"struct.std::__1::pair.950" = type opaque
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"struct.std::__1::pair.950"* }
%"struct.std::__1::pair.956" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.27"*, i16, i8*)*, i8* }
%"class.v8::Local.27" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.957" = type { %"class.std::__1::__compressed_pair.958" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.960", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.960" = type { %"class.std::__1::__hash_table.961" }
%"class.std::__1::__hash_table.961" = type <{ %"class.std::__1::unique_ptr.962", %"class.std::__1::__compressed_pair.972", %"class.std::__1::__compressed_pair.977", %"class.std::__1::__compressed_pair.981", [4 x i8] }>
%"class.std::__1::unique_ptr.962" = type { %"class.std::__1::__compressed_pair.963" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.964", %"struct.std::__1::__compressed_pair_elem.966" }
%"struct.std::__1::__compressed_pair_elem.964" = type { %"struct.std::__1::__hash_node_base.965"** }
%"struct.std::__1::__hash_node_base.965" = type { %"struct.std::__1::__hash_node_base.965"* }
%"struct.std::__1::__compressed_pair_elem.966" = type { %"class.std::__1::__bucket_list_deallocator.967" }
%"class.std::__1::__bucket_list_deallocator.967" = type { %"class.std::__1::__compressed_pair.968" }
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"struct.std::__1::__hash_node_base.965" }
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.989" }
%"class.std::__1::deque.989" = type { %"class.std::__1::__deque_base.990" }
%"class.std::__1::__deque_base.990" = type { %"struct.std::__1::__split_buffer.991", i64, %"class.std::__1::__compressed_pair.998" }
%"struct.std::__1::__split_buffer.991" = type { %"struct.std::__1::pair.992"**, %"struct.std::__1::pair.992"**, %"struct.std::__1::pair.992"**, %"class.std::__1::__compressed_pair.993" }
%"struct.std::__1::pair.992" = type opaque
%"class.std::__1::__compressed_pair.993" = type { %"struct.std::__1::__compressed_pair_elem.994" }
%"struct.std::__1::__compressed_pair_elem.994" = type { %"struct.std::__1::pair.992"** }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.1003" = type { %"class.std::__1::__vector_base.1004" }
%"class.std::__1::__vector_base.1004" = type { %"class.v8::internal::Handle.9"*, %"class.v8::internal::Handle.9"*, %"class.std::__1::__compressed_pair.1005" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"class.v8::internal::Handle.9"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.866", i32, %"class.v8::Local.27" }
%"class.v8::Local.866" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1010" = type { %"class.std::__1::__compressed_pair.1011" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.1012" }
%"struct.std::__1::__compressed_pair_elem.1012" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1016" = type { %"class.std::__1::__vector_base.1017" }
%"class.std::__1::__vector_base.1017" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1023" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1024" = type { %"class.std::__1::__hash_table.1025" }
%"class.std::__1::__hash_table.1025" = type <{ %"class.std::__1::unique_ptr.1026", %"class.std::__1::__compressed_pair.1036", %"class.std::__1::__compressed_pair.1041", %"class.std::__1::__compressed_pair.1044", [4 x i8] }>
%"class.std::__1::unique_ptr.1026" = type { %"class.std::__1::__compressed_pair.1027" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.1028", %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1028" = type { %"struct.std::__1::__hash_node_base.1029"** }
%"struct.std::__1::__hash_node_base.1029" = type { %"struct.std::__1::__hash_node_base.1029"* }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"class.std::__1::__bucket_list_deallocator.1031" }
%"class.std::__1::__bucket_list_deallocator.1031" = type { %"class.std::__1::__compressed_pair.1032" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.1037" }
%"struct.std::__1::__compressed_pair_elem.1037" = type { %"struct.std::__1::__hash_node_base.1029" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.576" = type { %"class.std::__1::__vector_base.577" }
%"class.std::__1::__vector_base.577" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.195" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1048", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1077", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1078", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1048" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1073, %union.anon.1075, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1073 = type { i64 }
%union.anon.1075 = type { i64 }
%"class.std::__1::weak_ptr.1077" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1078" = type { %"class.v8::PersistentBase.1079" }
%"class.v8::PersistentBase.1079" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1049", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1049" = type { %"class.std::__1::__hash_table.1050" }
%"class.std::__1::__hash_table.1050" = type <{ %"class.std::__1::unique_ptr.1051", %"class.std::__1::__compressed_pair.1061", %"class.std::__1::__compressed_pair.1066", %"class.std::__1::__compressed_pair.1069", [4 x i8] }>
%"class.std::__1::unique_ptr.1051" = type { %"class.std::__1::__compressed_pair.1052" }
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.1053", %"struct.std::__1::__compressed_pair_elem.1055" }
%"struct.std::__1::__compressed_pair_elem.1053" = type { %"struct.std::__1::__hash_node_base.1054"** }
%"struct.std::__1::__hash_node_base.1054" = type { %"struct.std::__1::__hash_node_base.1054"* }
%"struct.std::__1::__compressed_pair_elem.1055" = type { %"class.std::__1::__bucket_list_deallocator.1056" }
%"class.std::__1::__bucket_list_deallocator.1056" = type { %"class.std::__1::__compressed_pair.1057" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"struct.std::__1::__hash_node_base.1054" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1080" = type { %"class.std::__1::__compressed_pair.1081" }
%"class.std::__1::__compressed_pair.1081" = type { %"struct.std::__1::__compressed_pair_elem.1082" }
%"struct.std::__1::__compressed_pair_elem.1082" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1109", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1109" = type { %"class.std::__1::__compressed_pair.1110" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.1111" }
%"struct.std::__1::__compressed_pair_elem.1111" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1118" = type { %"class.std::__1::__compressed_pair.1119" }
%"class.std::__1::__compressed_pair.1119" = type { %"struct.std::__1::__compressed_pair_elem.1120" }
%"struct.std::__1::__compressed_pair_elem.1120" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.867", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.867" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1126" }
%"class.std::__1::unordered_map.1126" = type { %"class.std::__1::__hash_table.1127" }
%"class.std::__1::__hash_table.1127" = type <{ %"class.std::__1::unique_ptr.1128", %"class.std::__1::__compressed_pair.1138", %"class.std::__1::__compressed_pair.1143", %"class.std::__1::__compressed_pair.1146", [4 x i8] }>
%"class.std::__1::unique_ptr.1128" = type { %"class.std::__1::__compressed_pair.1129" }
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.1130", %"struct.std::__1::__compressed_pair_elem.1132" }
%"struct.std::__1::__compressed_pair_elem.1130" = type { %"struct.std::__1::__hash_node_base.1131"** }
%"struct.std::__1::__hash_node_base.1131" = type { %"struct.std::__1::__hash_node_base.1131"* }
%"struct.std::__1::__compressed_pair_elem.1132" = type { %"class.std::__1::__bucket_list_deallocator.1133" }
%"class.std::__1::__bucket_list_deallocator.1133" = type { %"class.std::__1::__compressed_pair.1134" }
%"class.std::__1::__compressed_pair.1134" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.1138" = type { %"struct.std::__1::__compressed_pair_elem.1139" }
%"struct.std::__1::__compressed_pair_elem.1139" = type { %"struct.std::__1::__hash_node_base.1131" }
%"class.std::__1::__compressed_pair.1143" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1152" = type { %"struct.std::__1::__atomic_base.1153" }
%"struct.std::__1::__atomic_base.1153" = type { %"struct.std::__1::__cxx_atomic_impl.1154" }
%"struct.std::__1::__cxx_atomic_impl.1154" = type { %"struct.std::__1::__cxx_atomic_base_impl.1155" }
%"struct.std::__1::__cxx_atomic_base_impl.1155" = type { %"class.std::__1::vector.1156"* }
%"class.std::__1::vector.1156" = type { %"class.std::__1::__vector_base.1157" }
%"class.std::__1::__vector_base.1157" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1158" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1158" = type { %"struct.std::__1::__compressed_pair_elem.1159" }
%"struct.std::__1::__compressed_pair_elem.1159" = type { %"struct.v8::MemoryRange"* }
%"class.std::__1::deque.1163" = type { %"class.std::__1::__deque_base.1164" }
%"class.std::__1::__deque_base.1164" = type { %"struct.std::__1::__split_buffer.1165", i64, %"class.std::__1::__compressed_pair.1171" }
%"struct.std::__1::__split_buffer.1165" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"class.std::__1::__compressed_pair.1166" }
%"struct.v8::internal::TranslatedState::ObjectPosition" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"struct.v8::internal::TranslatedState::ObjectPosition"** }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.v8::internal::Handle.1175" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackVector" = type { %"class.v8::internal::TorqueGeneratedFeedbackVector" }
%"class.v8::internal::TorqueGeneratedFeedbackVector" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.v8::internal::JavaScriptFrame" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::CommonFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::CommonFrame" = type { %"class.v8::internal::StackFrame" }
%"class.v8::internal::StackFrame" = type { i32 (...)**, %"class.v8::internal::StackFrameIteratorBase"*, %"class.v8::internal::Isolate"*, %"struct.v8::internal::StackFrame::State" }
%"class.v8::internal::StackFrameIteratorBase" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::EntryFrame", %"class.v8::internal::ConstructEntryFrame", %"class.v8::internal::ExitFrame", %"class.v8::internal::WasmFrame", %"class.v8::internal::WasmToJsFrame", %"class.v8::internal::JsToWasmFrame", %"class.v8::internal::WasmDebugBreakFrame", %"class.v8::internal::CWasmEntryFrame", %"class.v8::internal::WasmExitFrame", %"class.v8::internal::WasmCompileLazyFrame", %"class.v8::internal::InterpretedFrame", %"class.v8::internal::BaselineFrame", %"class.v8::internal::OptimizedFrame", %"class.v8::internal::StubFrame", %"class.v8::internal::BuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame", %"class.v8::internal::InternalFrame", %"class.v8::internal::ConstructFrame", %"class.v8::internal::BuiltinFrame", %"class.v8::internal::BuiltinExitFrame", %"class.v8::internal::NativeFrame", %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackHandler"*, i8, [7 x i8] }>
%"class.v8::internal::EntryFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::TypedFrame" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::ConstructEntryFrame" = type { %"class.v8::internal::EntryFrame" }
%"class.v8::internal::ExitFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmToJsFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::JsToWasmFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmDebugBreakFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::CWasmEntryFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmExitFrame" = type { %"class.v8::internal::WasmFrame" }
%"class.v8::internal::WasmCompileLazyFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::InterpretedFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::UnoptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::BaselineFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::OptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::StubFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::BuiltinContinuationFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::JavaScriptBuiltinContinuationFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::TypedFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame" = type { %"class.v8::internal::JavaScriptBuiltinContinuationFrame" }
%"class.v8::internal::InternalFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::ConstructFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::BuiltinFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::BuiltinExitFrame" = type { %"class.v8::internal::ExitFrame" }
%"class.v8::internal::NativeFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::StackHandler" = type { i8 }
%"struct.v8::internal::StackFrame::State" = type { i64, i64, i64*, i64, i64*, i64* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.v8::internal::TranslationArrayIterator" = type <{ %"class.std::__1::vector", %"class.v8::internal::ByteArray", i32, [4 x i8] }>
%"class.v8::internal::ByteArray" = type { %"class.v8::internal::TorqueGeneratedByteArray" }
%"class.v8::internal::TorqueGeneratedByteArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.disasm::NameConverter" = type { i32 (...)**, %"class.v8::internal::EmbeddedVector" }
%"struct.v8::internal::Brief" = type { i64 }
%"struct.v8::internal::TranslatedValue::MaterializedObjectInfo" = type { i32, i32 }
%"class.v8::internal::FactoryBase" = type { i8 }
%"class.std::__1::stack" = type { %"class.std::__1::deque.1192" }
%"class.std::__1::deque.1192" = type { %"class.std::__1::__deque_base.1193" }
%"class.std::__1::__deque_base.1193" = type { %"struct.std::__1::__split_buffer.1194", i64, %"class.std::__1::__compressed_pair.1200" }
%"struct.std::__1::__split_buffer.1194" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.1195" }
%"class.std::__1::__compressed_pair.1195" = type { %"struct.std::__1::__compressed_pair_elem.1196" }
%"struct.std::__1::__compressed_pair_elem.1196" = type { i32** }
%"class.std::__1::__compressed_pair.1200" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.v8::internal::CombinationAssertScope" = type { i8 }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::Representation" = type { i8 }
%"class.v8::internal::Handle<v8::internal::FixedArrayBase>::ObjectRef" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FeedbackNexus" = type { %"class.v8::internal::Handle.1175", %"class.v8::internal::FeedbackVector", %"class.v8::internal::FeedbackSlot", i8, %"class.v8::base::Optional.1209", %"class.v8::internal::NexusConfig" }
%"class.v8::base::Optional.1209" = type { %"class.v8::base::internal::OptionalBase.1210" }
%"class.v8::base::internal::OptionalBase.1210" = type { %"struct.v8::base::internal::OptionalStorage.1211" }
%"struct.v8::base::internal::OptionalStorage.1211" = type { %"struct.v8::base::internal::OptionalStorageBase.1212" }
%"struct.v8::base::internal::OptionalStorageBase.1212" = type { i8, %union.anon.1213 }
%union.anon.1213 = type { %"struct.std::__1::pair.1214" }
%"struct.std::__1::pair.1214" = type { %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle" }
%"class.v8::internal::MaybeObjectHandle" = type { i32, %"class.v8::internal::MaybeHandle" }
%"class.v8::internal::MaybeHandle" = type { i64* }
%"class.v8::internal::NexusConfig" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::LocalHeap"* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN2v88internal15TranslatedFrameD2Ev = comdat any

$_ZNSt3__16vectorIN2v88internal15TranslatedFrameENS_9allocatorIS3_EEE7reserveEm = comdat any

$_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal15TranslatedValueENS_9allocatorIS4_EEE9push_backEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal15TranslatedValueENS_9allocatorIS4_EEE10push_frontEOS4_ = comdat any

$_ZNK2v88internal14Representation8MnemonicEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__15dequeIN2v88internal15TranslatedState14ObjectPositionENS_9allocatorIS4_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal15TranslatedState14ObjectPositionENS_9allocatorIS5_EEE9push_backEOS5_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal15TranslatedState14ObjectPositionENS_9allocatorIS5_EEE10push_frontEOS5_ = comdat any

$_ZNSt3__16vectorIN2v88internal15TranslatedFrameENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNSt3__15dequeIiNS_9allocatorIiEEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE9push_backEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE10push_frontEOS1_ = comdat any

$_ZZN2v88internal25TranslationOpcodeToStringENS0_17TranslationOpcodeEE5names = comdat any

$_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names = comdat any

@.str = private unnamed_addr constant [3 x i8] c"  \00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c" {frame count=\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c", js frame count=\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c", update_feedback_count=\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"    \00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"{bytecode_offset=\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c", function=\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c", height=\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c", retval=@\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"(#\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c")}\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"{bailout_id=\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c", wasm_return_type=\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"{function=\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"{input=\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c" (int32)}\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c" (int64)}\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c" (uint32)}\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c" (bool)}\00", align 1
@.str.23 = private unnamed_addr constant [13 x i8] c"{literal_id=\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"{object_index=\00", align 1
@.str.26 = private unnamed_addr constant [17 x i8] c"{arguments_type=\00", align 1
@.str.27 = private unnamed_addr constant [19 x i8] c"{arguments_length}\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"{length=\00", align 1
@.str.29 = private unnamed_addr constant [25 x i8] c"{feedback={vector_index=\00", align 1
@.str.30 = private unnamed_addr constant [8 x i8] c", slot=\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"}}\00", align 1
@.str.32 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.34 = private unnamed_addr constant [21 x i8] c"1U == uint32_value()\00", align 1
@.str.35 = private unnamed_addr constant [25 x i8] c"  reading input frame %s\00", align 1
@.str.36 = private unnamed_addr constant [69 x i8] c" => bytecode_offset=%d, args=%d, height=%d, retval=%i(#%i); inputs:\0A\00", align 1
@.str.37 = private unnamed_addr constant [37 x i8] c"  reading arguments adaptor frame %s\00", align 1
@.str.38 = private unnamed_addr constant [24 x i8] c" => height=%d; inputs:\0A\00", align 1
@.str.39 = private unnamed_addr constant [34 x i8] c"  reading construct stub frame %s\00", align 1
@.str.40 = private unnamed_addr constant [44 x i8] c" => bytecode_offset=%d, height=%d; inputs:\0A\00", align 1
@.str.41 = private unnamed_addr constant [40 x i8] c"  reading builtin continuation frame %s\00", align 1
@.str.42 = private unnamed_addr constant [51 x i8] c"  reading JS to Wasm builtin continuation frame %s\00", align 1
@.str.43 = private unnamed_addr constant [54 x i8] c" => bailout_id=%d, height=%d return_type=%d; inputs:\0A\00", align 1
@.str.44 = private unnamed_addr constant [51 x i8] c"  reading JavaScript builtin continuation frame %s\00", align 1
@.str.45 = private unnamed_addr constant [62 x i8] c"  reading JavaScript builtin continuation frame with catch %s\00", align 1
@.str.46 = private unnamed_addr constant [55 x i8] c"arguments elements object #%d (type = %d, length = %d)\00", align 1
@.str.47 = private unnamed_addr constant [22 x i8] c"duplicated object #%d\00", align 1
@.str.48 = private unnamed_addr constant [37 x i8] c"arguments length field (length = %d)\00", align 1
@.str.49 = private unnamed_addr constant [34 x i8] c"captured object #%d (length = %d)\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c"0x%012lx ; %s \00", align 1
@.str.51 = private unnamed_addr constant [17 x i8] c"%ld ; %s (int32)\00", align 1
@.str.52 = private unnamed_addr constant [17 x i8] c"%ld ; %s (int64)\00", align 1
@.str.53 = private unnamed_addr constant [18 x i8] c"%lu ; %s (uint32)\00", align 1
@.str.54 = private unnamed_addr constant [16 x i8] c"%ld ; %s (bool)\00", align 1
@.str.55 = private unnamed_addr constant [16 x i8] c"%e ; %s (float)\00", align 1
@.str.56 = private unnamed_addr constant [17 x i8] c"%e ; %s (double)\00", align 1
@.str.57 = private unnamed_addr constant [26 x i8] c"0x%012lx ;  [fp %c %3d]  \00", align 1
@.str.58 = private unnamed_addr constant [26 x i8] c"%d ; (int32) [fp %c %3d] \00", align 1
@.str.59 = private unnamed_addr constant [27 x i8] c"%ld ; (int64) [fp %c %3d] \00", align 1
@.str.60 = private unnamed_addr constant [27 x i8] c"%u ; (uint32) [fp %c %3d] \00", align 1
@.str.61 = private unnamed_addr constant [25 x i8] c"%u ; (bool) [fp %c %3d] \00", align 1
@.str.62 = private unnamed_addr constant [26 x i8] c"%e ; (float) [fp %c %3d] \00", align 1
@.str.63 = private unnamed_addr constant [26 x i8] c"%e ; (double) [fp %c %d] \00", align 1
@.str.64 = private unnamed_addr constant [26 x i8] c"0x%012lx ; (literal %2d) \00", align 1
@.str.65 = private unnamed_addr constant [50 x i8] c"We should never get here - unexpected deopt info.\00", align 1
@.str.66 = private unnamed_addr constant [35 x i8] c"opcode == TranslationOpcode::BEGIN\00", align 1
@.str.67 = private unnamed_addr constant [27 x i8] c"update_feedback_count >= 0\00", align 1
@.str.68 = private unnamed_addr constant [27 x i8] c"update_feedback_count <= 1\00", align 1
@.str.69 = private unnamed_addr constant [10 x i8] c"    %3i: \00", align 1
@.str.70 = private unnamed_addr constant [10 x i8] c"         \00", align 1
@.str.71 = private unnamed_addr constant [95 x i8] c"!iterator->HasNext() || TranslationOpcodeFromInt(iterator->Next()) == TranslationOpcode::BEGIN\00", align 1
@.str.72 = private unnamed_addr constant [61 x i8] c"static_cast<size_t>(object_index) < object_positions_.size()\00", align 1
@.str.73 = private unnamed_addr constant [60 x i8] c"TranslatedValue::kFinished == slot->materialization_state()\00", align 1
@.str.74 = private unnamed_addr constant [49 x i8] c"TranslatedValue::kCapturedObject == slot->kind()\00", align 1
@.str.75 = private unnamed_addr constant [63 x i8] c"frame->values_[value_index].kind() == TranslatedValue::kTagged\00", align 1
@.str.76 = private unnamed_addr constant [13 x i8] c"map->IsMap()\00", align 1
@.str.77 = private unnamed_addr constant [21 x i8] c"map->IsJSObjectMap()\00", align 1
@.str.78 = private unnamed_addr constant [35 x i8] c"value_index == children_init_index\00", align 1
@.str.79 = private unnamed_addr constant [14 x i8] c"value.IsSmi()\00", align 1
@.str.80 = private unnamed_addr constant [11 x i8] c"length > 0\00", align 1
@.str.81 = private unnamed_addr constant [72 x i8] c"TranslatedValue::kCapturedObject != frame->values_[*value_index].kind()\00", align 1
@.str.82 = private unnamed_addr constant [62 x i8] c"value.is_identical_to(isolate()->factory()->the_hole_value())\00", align 1
@.str.83 = private unnamed_addr constant [18 x i8] c"value->IsNumber()\00", align 1
@.str.84 = private unnamed_addr constant [61 x i8] c"TranslatedValue::kAllocated == slot->materialization_state()\00", align 1
@.str.85 = private unnamed_addr constant [56 x i8] c"instance_size == slot->GetChildrenCount() * kTaggedSize\00", align 1
@.str.86 = private unnamed_addr constant [52 x i8] c"args_size == slot->GetChildrenCount() * kTaggedSize\00", align 1
@.str.87 = private unnamed_addr constant [52 x i8] c"properties_slot->kind() == TranslatedValue::kTagged\00", align 1
@.str.88 = private unnamed_addr constant [50 x i8] c"elements_slot->kind() == TranslatedValue::kTagged\00", align 1
@.str.89 = private unnamed_addr constant [76 x i8] c"TranslatedValue::kUninitialized == properties_slot->materialization_state()\00", align 1
@.str.90 = private unnamed_addr constant [63 x i8] c"map->instance_size() == slot->GetChildrenCount() * kTaggedSize\00", align 1
@.str.91 = private unnamed_addr constant [55 x i8] c"index.index() >= FixedArray::kHeaderSize / kTaggedSize\00", align 1
@.str.92 = private unnamed_addr constant [65 x i8] c"slot->materialization_state() != TranslatedValue::kUninitialized\00", align 1
@.str.93 = private unnamed_addr constant [30 x i8] c"slot->GetChildrenCount() >= 2\00", align 1
@.str.94 = private unnamed_addr constant [23 x i8] c"kStoreTagged == marker\00", align 1
@.str.95 = private unnamed_addr constant [30 x i8] c"2 == slot->GetChildrenCount()\00", align 1
@.str.96 = private unnamed_addr constant [33 x i8] c"*length_value == Smi::FromInt(0)\00", align 1
@.str.97 = private unnamed_addr constant [33 x i8] c"marker == kStoreTagged || i == 1\00", align 1
@.str.98 = private unnamed_addr constant [52 x i8] c"length == previously_materialized_objects->length()\00", align 1
@.str.99 = private unnamed_addr constant [35 x i8] c"value_info->IsMaterializedObject()\00", align 1
@.str.100 = private unnamed_addr constant [127 x i8] c"*previous_value == *value || (previous_value->IsHeapNumber() && value->IsSmi() && previous_value->Number() == value->Number())\00", align 1
@.str.101 = private unnamed_addr constant [59 x i8] c"frames_[0].kind() == TranslatedFrame::kUnoptimizedFunction\00", align 1
@.str.102 = private unnamed_addr constant [54 x i8] c"frame->function() == frames_[0].front().GetRawValue()\00", align 1
@.str.103 = private unnamed_addr constant [23 x i8] c"object->IsHeapObject()\00", align 1
@.str.104 = private unnamed_addr constant [28 x i8] c"!feedback_slot_.IsInvalid()\00", align 1
@.str.105 = private unnamed_addr constant [81 x i8] c"TranslationOpcode::UPDATE_FEEDBACK == TranslationOpcodeFromInt(iterator->Next())\00", align 1
@.str.106 = private unnamed_addr constant [36 x i8] c"  reading FeedbackVector (slot %d)\0A\00", align 1
@_ZTVN6disasm13NameConverterE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZZN2v88internal25TranslationOpcodeToStringENS0_17TranslationOpcodeEE5names = linkonce_odr hidden local_unnamed_addr constant [28 x i8*] [i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.123, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.134, i32 0, i32 0)], comdat, align 16
@.str.107 = private unnamed_addr constant [24 x i8] c"ARGUMENTS_ADAPTOR_FRAME\00", align 1
@.str.108 = private unnamed_addr constant [19 x i8] c"ARGUMENTS_ELEMENTS\00", align 1
@.str.109 = private unnamed_addr constant [17 x i8] c"ARGUMENTS_LENGTH\00", align 1
@.str.110 = private unnamed_addr constant [6 x i8] c"BEGIN\00", align 1
@.str.111 = private unnamed_addr constant [14 x i8] c"BOOL_REGISTER\00", align 1
@.str.112 = private unnamed_addr constant [16 x i8] c"BOOL_STACK_SLOT\00", align 1
@.str.113 = private unnamed_addr constant [27 x i8] c"BUILTIN_CONTINUATION_FRAME\00", align 1
@.str.114 = private unnamed_addr constant [16 x i8] c"CAPTURED_OBJECT\00", align 1
@.str.115 = private unnamed_addr constant [21 x i8] c"CONSTRUCT_STUB_FRAME\00", align 1
@.str.116 = private unnamed_addr constant [16 x i8] c"DOUBLE_REGISTER\00", align 1
@.str.117 = private unnamed_addr constant [18 x i8] c"DOUBLE_STACK_SLOT\00", align 1
@.str.118 = private unnamed_addr constant [18 x i8] c"DUPLICATED_OBJECT\00", align 1
@.str.119 = private unnamed_addr constant [15 x i8] c"FLOAT_REGISTER\00", align 1
@.str.120 = private unnamed_addr constant [17 x i8] c"FLOAT_STACK_SLOT\00", align 1
@.str.121 = private unnamed_addr constant [15 x i8] c"INT32_REGISTER\00", align 1
@.str.122 = private unnamed_addr constant [17 x i8] c"INT32_STACK_SLOT\00", align 1
@.str.123 = private unnamed_addr constant [15 x i8] c"INT64_REGISTER\00", align 1
@.str.124 = private unnamed_addr constant [17 x i8] c"INT64_STACK_SLOT\00", align 1
@.str.125 = private unnamed_addr constant [18 x i8] c"INTERPRETED_FRAME\00", align 1
@.str.126 = private unnamed_addr constant [39 x i8] c"JAVA_SCRIPT_BUILTIN_CONTINUATION_FRAME\00", align 1
@.str.127 = private unnamed_addr constant [50 x i8] c"JAVA_SCRIPT_BUILTIN_CONTINUATION_WITH_CATCH_FRAME\00", align 1
@.str.128 = private unnamed_addr constant [38 x i8] c"JS_TO_WASM_BUILTIN_CONTINUATION_FRAME\00", align 1
@.str.129 = private unnamed_addr constant [8 x i8] c"LITERAL\00", align 1
@.str.130 = private unnamed_addr constant [9 x i8] c"REGISTER\00", align 1
@.str.131 = private unnamed_addr constant [11 x i8] c"STACK_SLOT\00", align 1
@.str.132 = private unnamed_addr constant [16 x i8] c"UINT32_REGISTER\00", align 1
@.str.133 = private unnamed_addr constant [18 x i8] c"UINT32_STACK_SLOT\00", align 1
@.str.134 = private unnamed_addr constant [16 x i8] c"UPDATE_FEEDBACK\00", align 1
@.str.135 = private unnamed_addr constant [17 x i8] c"MAPPED_ARGUMENTS\00", align 1
@.str.136 = private unnamed_addr constant [19 x i8] c"UNMAPPED_ARGUMENTS\00", align 1
@.str.137 = private unnamed_addr constant [15 x i8] c"REST_PARAMETER\00", align 1
@_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names = linkonce_odr hidden local_unnamed_addr constant [16 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.154, i32 0, i32 0)], comdat, align 16
@.str.139 = private unnamed_addr constant [5 x i8] c"xmm0\00", align 1
@.str.140 = private unnamed_addr constant [5 x i8] c"xmm1\00", align 1
@.str.141 = private unnamed_addr constant [5 x i8] c"xmm2\00", align 1
@.str.142 = private unnamed_addr constant [5 x i8] c"xmm3\00", align 1
@.str.143 = private unnamed_addr constant [5 x i8] c"xmm4\00", align 1
@.str.144 = private unnamed_addr constant [5 x i8] c"xmm5\00", align 1
@.str.145 = private unnamed_addr constant [5 x i8] c"xmm6\00", align 1
@.str.146 = private unnamed_addr constant [5 x i8] c"xmm7\00", align 1
@.str.147 = private unnamed_addr constant [5 x i8] c"xmm8\00", align 1
@.str.148 = private unnamed_addr constant [5 x i8] c"xmm9\00", align 1
@.str.149 = private unnamed_addr constant [6 x i8] c"xmm10\00", align 1
@.str.150 = private unnamed_addr constant [6 x i8] c"xmm11\00", align 1
@.str.151 = private unnamed_addr constant [6 x i8] c"xmm12\00", align 1
@.str.152 = private unnamed_addr constant [6 x i8] c"xmm13\00", align 1
@.str.153 = private unnamed_addr constant [6 x i8] c"xmm14\00", align 1
@.str.154 = private unnamed_addr constant [6 x i8] c"xmm15\00", align 1
@.str.155 = private unnamed_addr constant [8 x i8] c"invalid\00", align 1
@.str.156 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.157 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str.158 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.159 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.160 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.161 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str.162 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@switch.table._ZNK2v88internal14Representation8MnemonicEv = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.157, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.159, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.160, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.161, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.158, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.162, i64 0, i64 0)], align 8

@_ZN2v88internal15TranslatedStateC1EPKNS0_15JavaScriptFrameE = hidden unnamed_addr alias void (%"class.v8::internal::TranslatedState"*, %"class.v8::internal::JavaScriptFrame"*), void (%"class.v8::internal::TranslatedState"*, %"class.v8::internal::JavaScriptFrame"*)* @_ZN2v88internal15TranslatedStateC2EPKNS0_15JavaScriptFrameE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal32TranslationArrayPrintSingleFrameERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_9ByteArrayEiNS0_10FixedArrayE(%"class.std::__1::basic_ostream"* dereferenceable(160), i64, i32, i64) local_unnamed_addr #0 {
  %5 = alloca %"class.v8::internal::TranslationArrayIterator", align 8
  %6 = alloca %"class.disasm::NameConverter", align 8
  %7 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %8 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %9 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %10 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %11 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %12 = alloca %"struct.v8::internal::Brief", align 8
  %13 = bitcast %"class.v8::internal::TranslationArrayIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #9
  call void @_ZN2v88internal24TranslationArrayIteratorC1ENS0_9ByteArrayEi(%"class.v8::internal::TranslationArrayIterator"* nonnull %5, i64 %1, i32 %2) #9
  %14 = bitcast %"class.disasm::NameConverter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.disasm::NameConverter", %"class.disasm::NameConverter"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN6disasm13NameConverterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.disasm::NameConverter", %"class.disasm::NameConverter"* %6, i64 0, i32 1, i32 1, i64 0
  %17 = getelementptr inbounds %"class.disasm::NameConverter", %"class.disasm::NameConverter"* %6, i64 0, i32 1, i32 0, i32 0
  store i8* %16, i8** %17, align 8
  %18 = getelementptr inbounds %"class.disasm::NameConverter", %"class.disasm::NameConverter"* %6, i64 0, i32 1, i32 0, i32 1
  store i64 128, i64* %18, align 8
  %19 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %20 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %21 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %22 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i64 2) #9
  %24 = sext i32 %19 to i64
  %25 = getelementptr inbounds [28 x i8*], [28 x i8*]* @_ZZN2v88internal25TranslationOpcodeToStringENS0_17TranslationOpcodeEE5names, i64 0, i64 %24
  %26 = load i8*, i8** %25, align 8
  %27 = call i64 @strlen(i8* %26) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %23, i8* %26, i64 %27) #9
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %28, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i64 14) #9
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %29, i32 %20) #9
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %30, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i64 17) #9
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %31, i32 %21) #9
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %32, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i64 24) #9
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %33, i32 %22) #9
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %34, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i64 2) #9
  %36 = call zeroext i1 @_ZNK2v88internal24TranslationArrayIterator7HasNextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  br i1 %36, label %37, label %335

37:                                               ; preds = %4
  %38 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %39 = getelementptr inbounds %"class.std::__1::basic_ostream", %"class.std::__1::basic_ostream"* %0, i64 0, i32 1, i32 0, i32 2
  %40 = bitcast i64* %39 to i8*
  %41 = and i64 %3, -4294967296
  %42 = add i64 %3, 7
  %43 = bitcast %"struct.v8::internal::Brief"* %12 to i8*
  %44 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %12, i64 0, i32 0
  %45 = bitcast %"class.v8::internal::SharedFunctionInfo"* %11 to i8*
  %46 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.v8::internal::SharedFunctionInfo"* %10 to i8*
  %48 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = bitcast %"class.v8::internal::SharedFunctionInfo"* %9 to i8*
  %50 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.v8::internal::SharedFunctionInfo"* %8 to i8*
  %52 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = bitcast %"class.v8::internal::SharedFunctionInfo"* %7 to i8*
  %54 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %55

55:                                               ; preds = %37, %332
  %56 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %57 = icmp eq i32 %56, 3
  br i1 %57, label %335, label %58

58:                                               ; preds = %55
  %59 = load i8*, i8** %38, align 8
  %60 = getelementptr i8, i8* %59, i64 -24
  %61 = bitcast i8* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds i8, i8* %40, i64 %62
  %64 = bitcast i8* %63 to i64*
  store i64 31, i64* %64, align 8
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 4) #9
  %66 = sext i32 %56 to i64
  %67 = getelementptr inbounds [28 x i8*], [28 x i8*]* @_ZZN2v88internal25TranslationOpcodeToStringENS0_17TranslationOpcodeEE5names, i64 0, i64 %66
  %68 = load i8*, i8** %67, align 8
  %69 = call i64 @strlen(i8* %68) #9
  %70 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %65, i8* %68, i64 %69) #9
  %71 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %70, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i64 1) #9
  switch i32 %56, label %332 [
    i32 27, label %324
    i32 18, label %72
    i32 8, label %101
    i32 6, label %124
    i32 19, label %124
    i32 20, label %124
    i32 21, label %147
    i32 0, label %173
    i32 23, label %193
    i32 14, label %200
    i32 16, label %207
    i32 25, label %214
    i32 4, label %221
    i32 12, label %228
    i32 9, label %241
    i32 24, label %254
    i32 15, label %259
    i32 17, label %264
    i32 26, label %269
    i32 5, label %274
    i32 13, label %279
    i32 10, label %279
    i32 22, label %284
    i32 11, label %298
    i32 1, label %303
    i32 2, label %317
    i32 7, label %319
  ]

72:                                               ; preds = %58
  %73 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %74 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %75 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %76 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %77 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %78 = shl i32 %74, 2
  %79 = sext i32 %78 to i64
  %80 = add i64 %42, %79
  %81 = inttoptr i64 %80 to i32*
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %41, %83
  %85 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i64 17) #9
  %86 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %85, i32 %73) #9
  %87 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %86, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i64 11) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #9
  store i64 %84, i64* %54, align 8
  %88 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %7) #9
  %89 = call i64 @strlen(i8* %88) #9
  %90 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %87, i8* %88, i64 %89) #9
  %91 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %90, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i64 9) #9
  %92 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %91, i32 %75) #9
  %93 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %92, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i64 10) #9
  %94 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %93, i32 %76) #9
  %95 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %94, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i64 2) #9
  %96 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %95, i32 %77) #9
  %97 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %96, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i64 2) #9
  %98 = icmp eq i8* %88, null
  br i1 %98, label %100, label %99

99:                                               ; preds = %72
  call void @_ZdaPv(i8* nonnull %88) #15
  br label %100

100:                                              ; preds = %72, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #9
  br label %332

101:                                              ; preds = %58
  %102 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %103 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %104 = shl i32 %103, 2
  %105 = sext i32 %104 to i64
  %106 = add i64 %42, %105
  %107 = inttoptr i64 %106 to i32*
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = zext i32 %108 to i64
  %110 = or i64 %41, %109
  %111 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %112 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i64 12) #9
  %113 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %112, i32 %102) #9
  %114 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %113, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i64 11) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #9
  store i64 %110, i64* %52, align 8
  %115 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %8) #9
  %116 = call i64 @strlen(i8* %115) #9
  %117 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %114, i8* %115, i64 %116) #9
  %118 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %117, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i64 9) #9
  %119 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %118, i32 %111) #9
  %120 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %119, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #9
  %121 = icmp eq i8* %115, null
  br i1 %121, label %123, label %122

122:                                              ; preds = %101
  call void @_ZdaPv(i8* nonnull %115) #15
  br label %123

123:                                              ; preds = %101, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #9
  br label %332

124:                                              ; preds = %58, %58, %58
  %125 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %126 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %127 = shl i32 %126, 2
  %128 = sext i32 %127 to i64
  %129 = add i64 %42, %128
  %130 = inttoptr i64 %129 to i32*
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = zext i32 %131 to i64
  %133 = or i64 %41, %132
  %134 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %135 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i64 12) #9
  %136 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %135, i32 %125) #9
  %137 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %136, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i64 11) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #9
  store i64 %133, i64* %50, align 8
  %138 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %9) #9
  %139 = call i64 @strlen(i8* %138) #9
  %140 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %137, i8* %138, i64 %139) #9
  %141 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %140, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i64 9) #9
  %142 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %141, i32 %134) #9
  %143 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %142, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #9
  %144 = icmp eq i8* %138, null
  br i1 %144, label %146, label %145

145:                                              ; preds = %124
  call void @_ZdaPv(i8* nonnull %138) #15
  br label %146

146:                                              ; preds = %124, %145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #9
  br label %332

147:                                              ; preds = %58
  %148 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %149 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %150 = shl i32 %149, 2
  %151 = sext i32 %150 to i64
  %152 = add i64 %42, %151
  %153 = inttoptr i64 %152 to i32*
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = zext i32 %154 to i64
  %156 = or i64 %41, %155
  %157 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %158 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %159 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i64 12) #9
  %160 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %159, i32 %148) #9
  %161 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %160, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i64 11) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #9
  store i64 %156, i64* %48, align 8
  %162 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %10) #9
  %163 = call i64 @strlen(i8* %162) #9
  %164 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %161, i8* %162, i64 %163) #9
  %165 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %164, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i64 9) #9
  %166 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %165, i32 %157) #9
  %167 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %166, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0), i64 19) #9
  %168 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %167, i32 %158) #9
  %169 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %168, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #9
  %170 = icmp eq i8* %162, null
  br i1 %170, label %172, label %171

171:                                              ; preds = %147
  call void @_ZdaPv(i8* nonnull %162) #15
  br label %172

172:                                              ; preds = %147, %171
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #9
  br label %332

173:                                              ; preds = %58
  %174 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %175 = shl i32 %174, 2
  %176 = sext i32 %175 to i64
  %177 = add i64 %42, %176
  %178 = inttoptr i64 %177 to i32*
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = zext i32 %179 to i64
  %181 = or i64 %41, %180
  %182 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %183 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i64 10) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #9
  store i64 %181, i64* %46, align 8
  %184 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %11) #9
  %185 = call i64 @strlen(i8* %184) #9
  %186 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %183, i8* %184, i64 %185) #9
  %187 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %186, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i64 9) #9
  %188 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %187, i32 %182) #9
  %189 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %188, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #9
  %190 = icmp eq i8* %184, null
  br i1 %190, label %192, label %191

191:                                              ; preds = %173
  call void @_ZdaPv(i8* nonnull %184) #15
  br label %192

192:                                              ; preds = %173, %191
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #9
  br label %332

193:                                              ; preds = %58
  %194 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %195 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i64 7) #9
  %196 = call i8* @_ZNK6disasm13NameConverter17NameOfCPURegisterEi(%"class.disasm::NameConverter"* nonnull %6, i32 %194) #9
  %197 = call i64 @strlen(i8* %196) #9
  %198 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %195, i8* %196, i64 %197) #9
  %199 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %198, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #9
  br label %332

200:                                              ; preds = %58
  %201 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %202 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i64 7) #9
  %203 = call i8* @_ZNK6disasm13NameConverter17NameOfCPURegisterEi(%"class.disasm::NameConverter"* nonnull %6, i32 %201) #9
  %204 = call i64 @strlen(i8* %203) #9
  %205 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %202, i8* %203, i64 %204) #9
  %206 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %205, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0), i64 9) #9
  br label %332

207:                                              ; preds = %58
  %208 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %209 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i64 7) #9
  %210 = call i8* @_ZNK6disasm13NameConverter17NameOfCPURegisterEi(%"class.disasm::NameConverter"* nonnull %6, i32 %208) #9
  %211 = call i64 @strlen(i8* %210) #9
  %212 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %209, i8* %210, i64 %211) #9
  %213 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %212, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0), i64 9) #9
  br label %332

214:                                              ; preds = %58
  %215 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %216 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i64 7) #9
  %217 = call i8* @_ZNK6disasm13NameConverter17NameOfCPURegisterEi(%"class.disasm::NameConverter"* nonnull %6, i32 %215) #9
  %218 = call i64 @strlen(i8* %217) #9
  %219 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %216, i8* %217, i64 %218) #9
  %220 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %219, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i64 10) #9
  br label %332

221:                                              ; preds = %58
  %222 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %223 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i64 7) #9
  %224 = call i8* @_ZNK6disasm13NameConverter17NameOfCPURegisterEi(%"class.disasm::NameConverter"* nonnull %6, i32 %222) #9
  %225 = call i64 @strlen(i8* %224) #9
  %226 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %223, i8* %224, i64 %225) #9
  %227 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %226, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i64 0, i64 0), i64 8) #9
  br label %332

228:                                              ; preds = %58
  %229 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %230 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i64 7) #9
  %231 = icmp eq i32 %229, -1
  br i1 %231, label %236, label %232

232:                                              ; preds = %228
  %233 = sext i32 %229 to i64
  %234 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names, i64 0, i64 %233
  %235 = load i8*, i8** %234, align 8
  br label %236

236:                                              ; preds = %228, %232
  %237 = phi i8* [ %235, %232 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.155, i64 0, i64 0), %228 ]
  %238 = call i64 @strlen(i8* %237) #9
  %239 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %230, i8* %237, i64 %238) #9
  %240 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %239, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #9
  br label %332

241:                                              ; preds = %58
  %242 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %243 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i64 7) #9
  %244 = icmp eq i32 %242, -1
  br i1 %244, label %249, label %245

245:                                              ; preds = %241
  %246 = sext i32 %242 to i64
  %247 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names, i64 0, i64 %246
  %248 = load i8*, i8** %247, align 8
  br label %249

249:                                              ; preds = %241, %245
  %250 = phi i8* [ %248, %245 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.155, i64 0, i64 0), %241 ]
  %251 = call i64 @strlen(i8* %250) #9
  %252 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %243, i8* %250, i64 %251) #9
  %253 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %252, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #9
  br label %332

254:                                              ; preds = %58
  %255 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %256 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i64 7) #9
  %257 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %256, i32 %255) #9
  %258 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %257, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #9
  br label %332

259:                                              ; preds = %58
  %260 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %261 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i64 7) #9
  %262 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %261, i32 %260) #9
  %263 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %262, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0), i64 9) #9
  br label %332

264:                                              ; preds = %58
  %265 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %266 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i64 7) #9
  %267 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %266, i32 %265) #9
  %268 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %267, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0), i64 9) #9
  br label %332

269:                                              ; preds = %58
  %270 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %271 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i64 7) #9
  %272 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %271, i32 %270) #9
  %273 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %272, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i64 10) #9
  br label %332

274:                                              ; preds = %58
  %275 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %276 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i64 7) #9
  %277 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %276, i32 %275) #9
  %278 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %277, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i64 0, i64 0), i64 8) #9
  br label %332

279:                                              ; preds = %58, %58
  %280 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %281 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i64 7) #9
  %282 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %281, i32 %280) #9
  %283 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %282, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #9
  br label %332

284:                                              ; preds = %58
  %285 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %286 = shl i32 %285, 2
  %287 = sext i32 %286 to i64
  %288 = add i64 %42, %287
  %289 = inttoptr i64 %288 to i32*
  %290 = load atomic i32, i32* %289 monotonic, align 4
  %291 = zext i32 %290 to i64
  %292 = or i64 %41, %291
  %293 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i64 12) #9
  %294 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %293, i32 %285) #9
  %295 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %294, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0), i64 2) #9
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #9
  store i64 %292, i64* %44, align 8
  %296 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160) %295, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %12) #9
  %297 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %296, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i64 2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #9
  br label %332

298:                                              ; preds = %58
  %299 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %300 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0), i64 14) #9
  %301 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %300, i32 %299) #9
  %302 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %301, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #9
  br label %332

303:                                              ; preds = %58
  %304 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %305 = trunc i32 %304 to i8
  %306 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.26, i64 0, i64 0), i64 16) #9
  switch i8 %305, label %313 [
    i8 0, label %307
    i8 1, label %309
    i8 2, label %311
  ]

307:                                              ; preds = %303
  %308 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %306, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.135, i64 0, i64 0), i64 16) #9
  br label %314

309:                                              ; preds = %303
  %310 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %306, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.136, i64 0, i64 0), i64 18) #9
  br label %314

311:                                              ; preds = %303
  %312 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %306, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.137, i64 0, i64 0), i64 14) #9
  br label %314

313:                                              ; preds = %303
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

314:                                              ; preds = %307, %309, %311
  %315 = phi %"class.std::__1::basic_ostream"* [ %312, %311 ], [ %310, %309 ], [ %308, %307 ]
  %316 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %315, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #9
  br label %332

317:                                              ; preds = %58
  %318 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.27, i64 0, i64 0), i64 18) #9
  br label %332

319:                                              ; preds = %58
  %320 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %321 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i64 8) #9
  %322 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %321, i32 %320) #9
  %323 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %322, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i64 1) #9
  br label %332

324:                                              ; preds = %58
  %325 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %326 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  %327 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.29, i64 0, i64 0), i64 24) #9
  %328 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %327, i32 %325) #9
  %329 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %328, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), i64 7) #9
  %330 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_12FeedbackSlotE(%"class.std::__1::basic_ostream"* dereferenceable(160) %329, i32 %326) #9
  %331 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %330, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i64 2) #9
  br label %332

332:                                              ; preds = %58, %324, %319, %317, %314, %298, %284, %279, %274, %269, %264, %259, %254, %249, %236, %221, %214, %207, %200, %193, %192, %172, %146, %123, %100
  %333 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0), i64 1) #9
  %334 = call zeroext i1 @_ZNK2v88internal24TranslationArrayIterator7HasNextEv(%"class.v8::internal::TranslationArrayIterator"* nonnull %5) #9
  br i1 %334, label %55, label %335

335:                                              ; preds = %332, %55, %4
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %14) #9
  %336 = getelementptr inbounds %"class.v8::internal::TranslationArrayIterator", %"class.v8::internal::TranslationArrayIterator"* %5, i64 0, i32 0, i32 0, i32 0
  %337 = load i32*, i32** %336, align 8
  %338 = icmp eq i32* %337, null
  br i1 %338, label %344, label %339

339:                                              ; preds = %335
  %340 = ptrtoint i32* %337 to i64
  %341 = getelementptr inbounds %"class.v8::internal::TranslationArrayIterator", %"class.v8::internal::TranslationArrayIterator"* %5, i64 0, i32 0, i32 0, i32 1
  %342 = bitcast i32** %341 to i64*
  store i64 %340, i64* %342, align 8
  %343 = bitcast i32* %337 to i8*
  call void @_ZdlPv(i8* %343) #15
  br label %344

344:                                              ; preds = %335, %339
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN2v88internal24TranslationArrayIteratorC1ENS0_9ByteArrayEi(%"class.v8::internal::TranslationArrayIterator"*, i64, i32) unnamed_addr #2

declare i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal24TranslationArrayIterator7HasNextEv(%"class.v8::internal::TranslationArrayIterator"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

declare i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

declare i8* @_ZNK6disasm13NameConverter17NameOfCPURegisterEi(%"class.disasm::NameConverter"*, i32) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"struct.v8::internal::Brief"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_12FeedbackSlotE(%"class.std::__1::basic_ostream"* dereferenceable(160), i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal15TranslatedValue17NewDeferredObjectEPNS0_15TranslatedStateEii(%"class.v8::internal::TranslatedValue"* noalias nocapture sret, %"class.v8::internal::TranslatedState"*, i32, i32) local_unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 0
  store i8 9, i8* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 1
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %1, %"class.v8::internal::TranslatedState"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4
  %10 = bitcast %union.anon* %9 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %11 = bitcast %union.anon* %9 to i32*
  store i32 %3, i32* %11, align 8
  %12 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %10, i64 0, i32 1
  store i32 %2, i32* %12, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal15TranslatedValue18NewDuplicateObjectEPNS0_15TranslatedStateEi(%"class.v8::internal::TranslatedValue"* noalias nocapture sret, %"class.v8::internal::TranslatedState"*, i32) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 0
  store i8 10, i8* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %1, %"class.v8::internal::TranslatedState"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4
  %9 = bitcast %union.anon* %8 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %10 = bitcast %union.anon* %8 to i32*
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %9, i64 0, i32 1
  store i32 -1, i32* %11, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal15TranslatedValue8NewFloatEPNS0_15TranslatedStateENS0_7Float32E(%"class.v8::internal::TranslatedValue"* noalias nocapture sret, %"class.v8::internal::TranslatedState"*, i32) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 0
  store i8 7, i8* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %1, %"class.v8::internal::TranslatedState"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4
  %9 = bitcast %union.anon* %8 to i32*
  store i32 %2, i32* %9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal15TranslatedValue9NewDoubleEPNS0_15TranslatedStateENS0_7Float64E(%"class.v8::internal::TranslatedValue"* noalias nocapture sret, %"class.v8::internal::TranslatedState"*, i64) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 0
  store i8 8, i8* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %1, %"class.v8::internal::TranslatedState"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal15TranslatedValue8NewInt32EPNS0_15TranslatedStateEi(%"class.v8::internal::TranslatedValue"* noalias nocapture sret, %"class.v8::internal::TranslatedState"*, i32) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 0
  store i8 2, i8* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %1, %"class.v8::internal::TranslatedState"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4
  %9 = bitcast %union.anon* %8 to i32*
  store i32 %2, i32* %9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal15TranslatedValue8NewInt64EPNS0_15TranslatedStateEl(%"class.v8::internal::TranslatedValue"* noalias nocapture sret, %"class.v8::internal::TranslatedState"*, i64) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 0
  store i8 3, i8* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %1, %"class.v8::internal::TranslatedState"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal15TranslatedValue16NewInt64ToBigIntEPNS0_15TranslatedStateEl(%"class.v8::internal::TranslatedValue"* noalias nocapture sret, %"class.v8::internal::TranslatedState"*, i64) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 0
  store i8 4, i8* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %1, %"class.v8::internal::TranslatedState"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal15TranslatedValue9NewUInt32EPNS0_15TranslatedStateEj(%"class.v8::internal::TranslatedValue"* noalias nocapture sret, %"class.v8::internal::TranslatedState"*, i32) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 0
  store i8 5, i8* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %1, %"class.v8::internal::TranslatedState"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4
  %9 = bitcast %union.anon* %8 to i32*
  store i32 %2, i32* %9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal15TranslatedValue7NewBoolEPNS0_15TranslatedStateEj(%"class.v8::internal::TranslatedValue"* noalias nocapture sret, %"class.v8::internal::TranslatedState"*, i32) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 0
  store i8 6, i8* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %1, %"class.v8::internal::TranslatedState"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4
  %9 = bitcast %union.anon* %8 to i32*
  store i32 %2, i32* %9, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal15TranslatedValue9NewTaggedEPNS0_15TranslatedStateENS0_6ObjectE(%"class.v8::internal::TranslatedValue"* noalias nocapture sret, %"class.v8::internal::TranslatedState"*, i64) local_unnamed_addr #4 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 0
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %1, %"class.v8::internal::TranslatedState"** %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %2, i64* %8, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal15TranslatedValue10NewInvalidEPNS0_15TranslatedStateE(%"class.v8::internal::TranslatedValue"* noalias nocapture sret, %"class.v8::internal::TranslatedState"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %1, %"class.v8::internal::TranslatedState"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %6, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::Isolate"* @_ZNK2v88internal15TranslatedValue7isolateEv(%"class.v8::internal::TranslatedValue"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 2
  %3 = load %"class.v8::internal::TranslatedState"*, %"class.v8::internal::TranslatedState"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %3, i64 0, i32 3
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  ret %"class.v8::internal::Isolate"* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal15TranslatedValue11raw_literalEv(%"class.v8::internal::TranslatedValue"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal15TranslatedValue11int32_valueEv(%"class.v8::internal::TranslatedValue"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4
  %3 = bitcast %union.anon* %2 to i32*
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal15TranslatedValue11int64_valueEv(%"class.v8::internal::TranslatedValue"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal15TranslatedValue12uint32_valueEv(%"class.v8::internal::TranslatedValue"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4
  %3 = bitcast %union.anon* %2 to i32*
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal15TranslatedValue11float_valueEv(%"class.v8::internal::TranslatedValue"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4
  %3 = bitcast %union.anon* %2 to i32*
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK2v88internal15TranslatedValue12double_valueEv(%"class.v8::internal::TranslatedValue"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal15TranslatedValue13object_lengthEv(%"class.v8::internal::TranslatedValue"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4
  %3 = bitcast %union.anon* %2 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %4 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %3, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal15TranslatedValue12object_indexEv(%"class.v8::internal::TranslatedValue"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4
  %3 = bitcast %union.anon* %2 to i32*
  %4 = load i32, i32* %3, align 8
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal15TranslatedValue11GetRawValueEv(%"class.v8::internal::TranslatedValue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 2
  br i1 %4, label %5, label %45

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = load i64, i64* %7, align 8
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = icmp eq i16 %17, 66
  br i1 %18, label %19, label %135

19:                                               ; preds = %5
  %20 = and i64 %8, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %19
  %23 = trunc i64 %8 to i32
  %24 = ashr i32 %23, 1
  %25 = sitofp i32 %24 to double
  br label %30

26:                                               ; preds = %19
  %27 = add i64 %8, 3
  %28 = inttoptr i64 %27 to double*
  %29 = load double, double* %28, align 1
  br label %30

30:                                               ; preds = %22, %26
  %31 = phi double [ %25, %22 ], [ %29, %26 ]
  %32 = fcmp ult double %31, 0xC1D0000000000000
  %33 = fcmp ugt double %31, 0x41CFFFFFFF800000
  %34 = or i1 %33, %32
  %35 = bitcast double %31 to i64
  %36 = icmp eq i64 %35, -9223372036854775808
  %37 = or i1 %34, %36
  br i1 %37, label %135, label %38

38:                                               ; preds = %30
  %39 = fptosi double %31 to i32
  %40 = sitofp i32 %39 to double
  %41 = fcmp oeq double %31, %40
  br i1 %41, label %42, label %135

42:                                               ; preds = %38
  %43 = sext i32 %39 to i64
  %44 = shl nsw i64 %43, 1
  br label %135

45:                                               ; preds = %1
  %46 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 0
  %47 = load i8, i8* %46, align 8
  switch i8 %47, label %128 [
    i8 1, label %48
    i8 2, label %51
    i8 3, label %60
    i8 8, label %112
    i8 5, label %67
    i8 6, label %75
    i8 7, label %94
  ]

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  br label %135

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4
  %53 = bitcast %union.anon* %52 to i32*
  %54 = load i32, i32* %53, align 8
  %55 = sext i32 %54 to i64
  %56 = add nsw i64 %55, 1073741824
  %57 = icmp ult i64 %56, 2147483648
  br i1 %57, label %58, label %128

58:                                               ; preds = %51
  %59 = shl nsw i64 %55, 1
  br label %135

60:                                               ; preds = %45
  %61 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 1073741824
  %64 = icmp ult i64 %63, 2147483648
  br i1 %64, label %65, label %128

65:                                               ; preds = %60
  %66 = shl i64 %62, 1
  br label %135

67:                                               ; preds = %45
  %68 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4
  %69 = bitcast %union.anon* %68 to i32*
  %70 = load i32, i32* %69, align 8
  %71 = icmp ult i32 %70, 1073741824
  br i1 %71, label %72, label %128

72:                                               ; preds = %67
  %73 = sext i32 %70 to i64
  %74 = shl nsw i64 %73, 1
  br label %135

75:                                               ; preds = %45
  %76 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4
  %77 = bitcast %union.anon* %76 to i32*
  %78 = load i32, i32* %77, align 8
  switch i32 %78, label %86 [
    i32 0, label %79
    i32 1, label %87
  ], !prof !2

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 2
  %81 = load %"class.v8::internal::TranslatedState"*, %"class.v8::internal::TranslatedState"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %81, i64 0, i32 3
  %83 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %83, i64 0, i32 0, i32 7, i32 0, i64 8
  %85 = load i64, i64* %84, align 8
  br label %135

86:                                               ; preds = %75
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34, i64 0, i64 0)) #16
  unreachable

87:                                               ; preds = %75
  %88 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 2
  %89 = load %"class.v8::internal::TranslatedState"*, %"class.v8::internal::TranslatedState"** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %89, i64 0, i32 3
  %91 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %91, i64 0, i32 0, i32 7, i32 0, i64 7
  %93 = load i64, i64* %92, align 8
  br label %135

94:                                               ; preds = %45
  %95 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4
  %96 = bitcast %union.anon* %95 to float*
  %97 = load float, float* %96, align 8
  %98 = fpext float %97 to double
  %99 = fcmp ult float %97, 0xC1D0000000000000
  %100 = fcmp ugt double %98, 0x41CFFFFFFF800000
  %101 = or i1 %99, %100
  %102 = bitcast double %98 to i64
  %103 = icmp eq i64 %102, -9223372036854775808
  %104 = or i1 %101, %103
  br i1 %104, label %128, label %105

105:                                              ; preds = %94
  %106 = fptosi float %97 to i32
  %107 = sitofp i32 %106 to double
  %108 = fcmp oeq double %107, %98
  br i1 %108, label %109, label %128

109:                                              ; preds = %105
  %110 = sext i32 %106 to i64
  %111 = shl nsw i64 %110, 1
  br label %135

112:                                              ; preds = %45
  %113 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i64 %114 to double
  %116 = fcmp ult double %115, 0xC1D0000000000000
  %117 = fcmp ugt double %115, 0x41CFFFFFFF800000
  %118 = or i1 %117, %116
  %119 = icmp eq i64 %114, -9223372036854775808
  %120 = or i1 %119, %118
  br i1 %120, label %128, label %121

121:                                              ; preds = %112
  %122 = fptosi double %115 to i32
  %123 = sitofp i32 %122 to double
  %124 = fcmp oeq double %123, %115
  br i1 %124, label %125, label %128

125:                                              ; preds = %121
  %126 = sext i32 %122 to i64
  %127 = shl nsw i64 %126, 1
  br label %135

128:                                              ; preds = %60, %112, %121, %94, %105, %67, %51, %45
  %129 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 2
  %130 = load %"class.v8::internal::TranslatedState"*, %"class.v8::internal::TranslatedState"** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %130, i64 0, i32 3
  %132 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %132, i64 0, i32 0, i32 7, i32 0, i64 31
  %134 = load i64, i64* %133, align 8
  br label %135

135:                                              ; preds = %30, %38, %125, %109, %72, %65, %58, %42, %5, %128, %87, %79, %48
  %136 = phi i64 [ %134, %128 ], [ %85, %79 ], [ %93, %87 ], [ %66, %65 ], [ %50, %48 ], [ %44, %42 ], [ %8, %5 ], [ %59, %58 ], [ %74, %72 ], [ %111, %109 ], [ %127, %125 ], [ %8, %38 ], [ %8, %30 ]
  ret i64 %136
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal15TranslatedValue23set_initialized_storageENS0_6HandleINS0_10HeapObjectEEE(%"class.v8::internal::TranslatedValue"* nocapture, i64*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* %1, i64** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 1
  store i8 2, i8* %4, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal15TranslatedValue8GetValueEv(%"class.v8::internal::TranslatedValue"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZNK2v88internal15TranslatedValue11GetRawValueEv(%"class.v8::internal::TranslatedValue"* %0)
  %3 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::TranslatedState"*, %"class.v8::internal::TranslatedState"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %4, i64 0, i32 3
  %6 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 4
  %8 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %7, align 8
  %9 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %8, i64 %2) #9
  %12 = ptrtoint i64* %11 to i64
  br label %26

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 0
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %6, i64 0, i32 31, i32 1
  %17 = load i64*, i64** %16, align 8
  %18 = icmp eq i64* %15, %17
  br i1 %18, label %19, label %21

19:                                               ; preds = %13
  %20 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %6) #9
  br label %21

21:                                               ; preds = %19, %13
  %22 = phi i64* [ %20, %19 ], [ %15, %13 ]
  %23 = ptrtoint i64* %22 to i64
  %24 = add i64 %23, 8
  %25 = inttoptr i64 %24 to i64*
  store i64* %25, i64** %14, align 8
  store i64 %2, i64* %22, align 8
  br label %26

26:                                               ; preds = %10, %21
  %27 = phi i64 [ %12, %10 ], [ %23, %21 ]
  %28 = phi i64* [ %11, %10 ], [ %22, %21 ]
  %29 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %120, label %32

32:                                               ; preds = %26
  %33 = load i64, i64* %28, align 8
  %34 = and i64 %33, 1
  %35 = icmp eq i64 %34, 0
  %36 = load %"class.v8::internal::TranslatedState"*, %"class.v8::internal::TranslatedState"** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %36, i64 0, i32 3
  %38 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %37, align 8
  br i1 %35, label %39, label %49

39:                                               ; preds = %32
  %40 = bitcast %"class.v8::internal::Isolate"* %38 to %"class.v8::internal::FactoryBase"*
  %41 = trunc i64 %33 to i32
  %42 = ashr i32 %41, 1
  %43 = sitofp i32 %42 to double
  %44 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %40) #9
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 3
  %47 = inttoptr i64 %46 to double*
  store double %43, double* %47, align 1
  %48 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* %44, i64** %48, align 8
  store i8 2, i8* %29, align 1
  br label %120

49:                                               ; preds = %32
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %38, i64 0, i32 0, i32 7, i32 0, i64 31
  %51 = load i64, i64* %50, align 8
  %52 = trunc i64 %33 to i32
  %53 = trunc i64 %51 to i32
  %54 = icmp eq i32 %52, %53
  br i1 %54, label %57, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* %28, i64** %56, align 8
  store i8 2, i8* %29, align 1
  br label %120

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 0
  %59 = load i8, i8* %58, align 8
  switch i8 %59, label %115 [
    i8 9, label %60
    i8 10, label %60
    i8 2, label %64
    i8 3, label %74
    i8 4, label %83
    i8 5, label %87
    i8 7, label %97
    i8 8, label %107
  ]

60:                                               ; preds = %57, %57
  tail call void @_ZN2v88internal15TranslatedState23EnsureObjectAllocatedAtEPNS0_15TranslatedValueE(%"class.v8::internal::TranslatedState"* %36, %"class.v8::internal::TranslatedValue"* %0)
  %61 = load %"class.v8::internal::TranslatedState"*, %"class.v8::internal::TranslatedState"** %3, align 8
  %62 = tail call i64* @_ZN2v88internal15TranslatedState18InitializeObjectAtEPNS0_15TranslatedValueE(%"class.v8::internal::TranslatedState"* %61, %"class.v8::internal::TranslatedValue"* %0)
  %63 = ptrtoint i64* %62 to i64
  br label %120

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4
  %66 = bitcast %union.anon* %65 to i32*
  %67 = load i32, i32* %66, align 8
  %68 = sitofp i32 %67 to double
  %69 = bitcast %"class.v8::internal::Isolate"* %38 to %"class.v8::internal::FactoryBase"*
  %70 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %69) #9
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 3
  %73 = inttoptr i64 %72 to double*
  store double %68, double* %73, align 1
  br label %116

74:                                               ; preds = %57
  %75 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = sitofp i64 %76 to double
  %78 = bitcast %"class.v8::internal::Isolate"* %38 to %"class.v8::internal::FactoryBase"*
  %79 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %78) #9
  %80 = load i64, i64* %79, align 8
  %81 = add i64 %80, 3
  %82 = inttoptr i64 %81 to double*
  store double %77, double* %82, align 1
  br label %116

83:                                               ; preds = %57
  %84 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = tail call i64* @_ZN2v88internal6BigInt9FromInt64EPNS0_7IsolateEl(%"class.v8::internal::Isolate"* %38, i64 %85) #9
  br label %116

87:                                               ; preds = %57
  %88 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4
  %89 = bitcast %union.anon* %88 to i32*
  %90 = load i32, i32* %89, align 8
  %91 = uitofp i32 %90 to double
  %92 = bitcast %"class.v8::internal::Isolate"* %38 to %"class.v8::internal::FactoryBase"*
  %93 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %92) #9
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, 3
  %96 = inttoptr i64 %95 to double*
  store double %91, double* %96, align 1
  br label %116

97:                                               ; preds = %57
  %98 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4
  %99 = bitcast %union.anon* %98 to float*
  %100 = load float, float* %99, align 8
  %101 = fpext float %100 to double
  %102 = bitcast %"class.v8::internal::Isolate"* %38 to %"class.v8::internal::FactoryBase"*
  %103 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %102) #9
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, 3
  %106 = inttoptr i64 %105 to double*
  store double %101, double* %106, align 1
  br label %116

107:                                              ; preds = %57
  %108 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::Isolate"* %38 to %"class.v8::internal::FactoryBase"*
  %111 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %110) #9
  %112 = load i64, i64* %111, align 8
  %113 = add i64 %112, 3
  %114 = inttoptr i64 %113 to i64*
  store i64 %109, i64* %114, align 1
  br label %116

115:                                              ; preds = %57
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

116:                                              ; preds = %107, %97, %87, %83, %74, %64
  %117 = phi i64* [ %111, %107 ], [ %103, %97 ], [ %93, %87 ], [ %86, %83 ], [ %79, %74 ], [ %70, %64 ]
  %118 = ptrtoint i64* %117 to i64
  %119 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* %117, i64** %119, align 8
  store i8 2, i8* %29, align 1
  br label %120

120:                                              ; preds = %26, %116, %60, %55, %39
  %121 = phi i64 [ %27, %39 ], [ %27, %55 ], [ %63, %60 ], [ %118, %116 ], [ %27, %26 ]
  %122 = inttoptr i64 %121 to i64*
  ret i64* %122
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedState23EnsureObjectAllocatedAtEPNS0_15TranslatedValueE(%"class.v8::internal::TranslatedState"* nocapture readonly, %"class.v8::internal::TranslatedValue"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::stack", align 8
  %4 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 1
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2, i32 0, i32 0
  br label %8

8:                                                ; preds = %20, %2
  %9 = phi %"class.v8::internal::TranslatedValue"* [ %1, %2 ], [ %44, %20 ]
  %10 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %9, i64 0, i32 0
  %11 = load i8, i8* %10, align 8
  switch i8 %11, label %45 [
    i8 10, label %12
    i8 9, label %46
  ], !prof !2

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %9, i64 0, i32 4
  %14 = bitcast %union.anon* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  %17 = load i64, i64* %4, align 8
  %18 = icmp ugt i64 %17, %16
  br i1 %18, label %20, label %19, !prof !3

19:                                               ; preds = %12
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.72, i64 0, i64 0)) #16
  unreachable

20:                                               ; preds = %12
  %21 = load i64, i64* %5, align 8
  %22 = add i64 %21, %16
  %23 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %6, align 8
  %24 = lshr i64 %22, 9
  %25 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %23, i64 %24
  %26 = load %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %25, align 8
  %27 = and i64 %22, 511
  %28 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %26, i64 %27, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %26, i64 %27, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %29 to i64
  %33 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %7, align 8
  %34 = sext i32 %31 to i64
  %35 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %33, i64 %32, i32 8, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, %34
  %38 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %33, i64 %32, i32 8, i32 0, i32 0, i32 1
  %39 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %38, align 8
  %40 = lshr i64 %37, 7
  %41 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %39, i64 %40
  %42 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %41, align 8
  %43 = and i64 %37, 127
  %44 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %42, i64 %43
  br label %8

45:                                               ; preds = %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.74, i64 0, i64 0)) #16
  unreachable

46:                                               ; preds = %8
  %47 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %9, i64 0, i32 1
  %48 = load i8, i8* %47, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %167

50:                                               ; preds = %46
  %51 = bitcast %"class.std::__1::stack"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %51) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 48, i1 false) #9
  %52 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %9, i64 0, i32 4
  %53 = bitcast %union.anon* %52 to i32*
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %56 = bitcast i32*** %55 to i64*
  %57 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0, i32 0, i32 1
  %59 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0
  call void @_ZNSt3__15dequeIiNS_9allocatorIiEEE19__add_back_capacityEv(%"class.std::__1::deque.1192"* nonnull %60) #9
  %61 = load i64, i64* %59, align 8
  %62 = load i64, i64* %58, align 8
  %63 = load i32**, i32*** %57, align 8
  %64 = load i32**, i32*** %55, align 8
  %65 = add i64 %62, %61
  %66 = icmp eq i32** %64, %63
  br i1 %66, label %73, label %67

67:                                               ; preds = %50
  %68 = lshr i64 %65, 10
  %69 = getelementptr inbounds i32*, i32** %63, i64 %68
  %70 = load i32*, i32** %69, align 8
  %71 = and i64 %65, 1023
  %72 = getelementptr inbounds i32, i32* %70, i64 %71
  br label %73

73:                                               ; preds = %50, %67
  %74 = phi i32* [ %72, %67 ], [ null, %50 ]
  store i32 %54, i32* %74, align 4
  %75 = load i64, i64* %59, align 8
  %76 = add i64 %75, 1
  store i64 %76, i64* %59, align 8
  store i8 1, i8* %47, align 1
  %77 = load i64, i64* %59, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %112, label %79

79:                                               ; preds = %73, %109
  %80 = phi i64 [ %110, %109 ], [ %77, %73 ]
  %81 = load i64, i64* %58, align 8
  %82 = add i64 %80, -1
  %83 = add i64 %81, %82
  %84 = load i32**, i32*** %57, align 8
  %85 = lshr i64 %83, 10
  %86 = getelementptr inbounds i32*, i32** %84, i64 %85
  %87 = load i32*, i32** %86, align 8
  %88 = and i64 %83, 1023
  %89 = getelementptr inbounds i32, i32* %87, i64 %88
  %90 = load i32, i32* %89, align 4
  store i64 %82, i64* %59, align 8
  %91 = load i64, i64* %56, align 8
  %92 = ptrtoint i32** %84 to i64
  %93 = sub i64 %91, %92
  %94 = icmp eq i64 %93, 0
  %95 = shl i64 %93, 7
  %96 = add i64 %95, -1
  %97 = select i1 %94, i64 0, i64 %96
  %98 = sub i64 1, %80
  %99 = sub i64 %98, %81
  %100 = add i64 %99, %97
  %101 = icmp ult i64 %100, 2048
  br i1 %101, label %109, label %102

102:                                              ; preds = %79
  %103 = inttoptr i64 %91 to i32**
  %104 = getelementptr inbounds i32*, i32** %103, i64 -1
  %105 = bitcast i32** %104 to i8**
  %106 = load i8*, i8** %105, align 8
  call void @_ZdlPv(i8* %106) #15
  %107 = load i32**, i32*** %55, align 8
  %108 = getelementptr i32*, i32** %107, i64 -1
  store i32** %108, i32*** %55, align 8
  br label %109

109:                                              ; preds = %79, %102
  call void @_ZN2v88internal15TranslatedState31EnsureCapturedObjectAllocatedAtEiPNSt3__15stackIiNS2_5dequeIiNS2_9allocatorIiEEEEEE(%"class.v8::internal::TranslatedState"* %0, i32 %90, %"class.std::__1::stack"* nonnull %3)
  %110 = load i64, i64* %59, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %79

112:                                              ; preds = %109, %73
  %113 = load i32**, i32*** %57, align 8
  %114 = load i32**, i32*** %55, align 8
  %115 = ptrtoint i32** %114 to i64
  %116 = ptrtoint i32** %113 to i64
  store i64 0, i64* %59, align 8
  %117 = sub i64 %115, %116
  %118 = ashr exact i64 %117, 3
  %119 = icmp ugt i64 %118, 2
  br i1 %119, label %120, label %133

120:                                              ; preds = %112, %120
  %121 = phi i32** [ %125, %120 ], [ %113, %112 ]
  %122 = bitcast i32** %121 to i8**
  %123 = load i8*, i8** %122, align 8
  call void @_ZdlPv(i8* %123) #15
  %124 = load i32**, i32*** %57, align 8
  %125 = getelementptr inbounds i32*, i32** %124, i64 1
  store i32** %125, i32*** %57, align 8
  %126 = load i64, i64* %56, align 8
  %127 = ptrtoint i32** %125 to i64
  %128 = sub i64 %126, %127
  %129 = ashr exact i64 %128, 3
  %130 = icmp ugt i64 %129, 2
  br i1 %130, label %120, label %131

131:                                              ; preds = %120
  %132 = inttoptr i64 %126 to i32**
  br label %133

133:                                              ; preds = %131, %112
  %134 = phi i32** [ %114, %112 ], [ %132, %131 ]
  %135 = phi i32** [ %113, %112 ], [ %125, %131 ]
  %136 = phi i64 [ %118, %112 ], [ %129, %131 ]
  switch i64 %136, label %140 [
    i64 1, label %138
    i64 2, label %137
  ]

137:                                              ; preds = %133
  br label %138

138:                                              ; preds = %133, %137
  %139 = phi i64 [ 1024, %137 ], [ 512, %133 ]
  store i64 %139, i64* %58, align 8
  br label %140

140:                                              ; preds = %138, %133
  %141 = icmp eq i32** %135, %134
  br i1 %141, label %160, label %142

142:                                              ; preds = %140, %142
  %143 = phi i32** [ %146, %142 ], [ %135, %140 ]
  %144 = bitcast i32** %143 to i8**
  %145 = load i8*, i8** %144, align 8
  call void @_ZdlPv(i8* %145) #15
  %146 = getelementptr inbounds i32*, i32** %143, i64 1
  %147 = icmp eq i32** %146, %134
  br i1 %147, label %148, label %142

148:                                              ; preds = %142
  %149 = load i32**, i32*** %57, align 8
  %150 = load i32**, i32*** %55, align 8
  %151 = icmp eq i32** %150, %149
  br i1 %151, label %160, label %152

152:                                              ; preds = %148
  %153 = ptrtoint i32** %149 to i64
  %154 = getelementptr i32*, i32** %150, i64 -1
  %155 = ptrtoint i32** %154 to i64
  %156 = sub i64 %155, %153
  %157 = lshr i64 %156, 3
  %158 = xor i64 %157, -1
  %159 = getelementptr i32*, i32** %150, i64 %158
  store i32** %159, i32*** %55, align 8
  br label %160

160:                                              ; preds = %152, %148, %140
  %161 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %162 = load i32**, i32*** %161, align 8
  %163 = icmp eq i32** %162, null
  br i1 %163, label %166, label %164

164:                                              ; preds = %160
  %165 = bitcast i32** %162 to i8*
  call void @_ZdlPv(i8* %165) #15
  br label %166

166:                                              ; preds = %160, %164
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %51) #9
  br label %167

167:                                              ; preds = %166, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal15TranslatedState18InitializeObjectAtEPNS0_15TranslatedValueE(%"class.v8::internal::TranslatedState"* nocapture readonly, %"class.v8::internal::TranslatedValue"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::CombinationAssertScope", align 1
  %4 = alloca %"class.std::__1::stack", align 8
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2, i32 0, i32 0
  br label %9

9:                                                ; preds = %21, %2
  %10 = phi %"class.v8::internal::TranslatedValue"* [ %1, %2 ], [ %45, %21 ]
  %11 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %10, i64 0, i32 0
  %12 = load i8, i8* %11, align 8
  switch i8 %12, label %46 [
    i8 10, label %13
    i8 9, label %47
  ], !prof !2

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %10, i64 0, i32 4
  %15 = bitcast %union.anon* %14 to i32*
  %16 = load i32, i32* %15, align 8
  %17 = sext i32 %16 to i64
  %18 = load i64, i64* %5, align 8
  %19 = icmp ugt i64 %18, %17
  br i1 %19, label %21, label %20, !prof !3

20:                                               ; preds = %13
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.72, i64 0, i64 0)) #16
  unreachable

21:                                               ; preds = %13
  %22 = load i64, i64* %6, align 8
  %23 = add i64 %22, %17
  %24 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %7, align 8
  %25 = lshr i64 %23, 9
  %26 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %24, i64 %25
  %27 = load %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %26, align 8
  %28 = and i64 %23, 511
  %29 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %27, i64 %28, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %27, i64 %28, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = sext i32 %30 to i64
  %34 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %8, align 8
  %35 = sext i32 %32 to i64
  %36 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %34, i64 %33, i32 8, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %37, %35
  %39 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %34, i64 %33, i32 8, i32 0, i32 0, i32 1
  %40 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %39, align 8
  %41 = lshr i64 %38, 7
  %42 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %40, i64 %41
  %43 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %42, align 8
  %44 = and i64 %38, 127
  %45 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %43, i64 %44
  br label %9

46:                                               ; preds = %9
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.74, i64 0, i64 0)) #16
  unreachable

47:                                               ; preds = %9
  %48 = getelementptr inbounds %"class.v8::internal::CombinationAssertScope", %"class.v8::internal::CombinationAssertScope"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %48) #9
  %49 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %10, i64 0, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 2
  br i1 %51, label %169, label %52

52:                                               ; preds = %47
  %53 = bitcast %"class.std::__1::stack"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %53) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 48, i1 false) #9
  %54 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %10, i64 0, i32 4
  %55 = bitcast %union.anon* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %58 = bitcast i32*** %57 to i64*
  %59 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %60 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %62 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0
  call void @_ZNSt3__15dequeIiNS_9allocatorIiEEE19__add_back_capacityEv(%"class.std::__1::deque.1192"* nonnull %62) #9
  %63 = load i64, i64* %61, align 8
  %64 = load i64, i64* %60, align 8
  %65 = load i32**, i32*** %59, align 8
  %66 = load i32**, i32*** %57, align 8
  %67 = add i64 %64, %63
  %68 = icmp eq i32** %66, %65
  br i1 %68, label %75, label %69

69:                                               ; preds = %52
  %70 = lshr i64 %67, 10
  %71 = getelementptr inbounds i32*, i32** %65, i64 %70
  %72 = load i32*, i32** %71, align 8
  %73 = and i64 %67, 1023
  %74 = getelementptr inbounds i32, i32* %72, i64 %73
  br label %75

75:                                               ; preds = %52, %69
  %76 = phi i32* [ %74, %69 ], [ null, %52 ]
  store i32 %56, i32* %76, align 4
  %77 = load i64, i64* %61, align 8
  %78 = add i64 %77, 1
  store i64 %78, i64* %61, align 8
  store i8 2, i8* %49, align 1
  %79 = load i64, i64* %61, align 8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %114, label %81

81:                                               ; preds = %75, %111
  %82 = phi i64 [ %112, %111 ], [ %79, %75 ]
  %83 = load i64, i64* %60, align 8
  %84 = add i64 %82, -1
  %85 = add i64 %83, %84
  %86 = load i32**, i32*** %59, align 8
  %87 = lshr i64 %85, 10
  %88 = getelementptr inbounds i32*, i32** %86, i64 %87
  %89 = load i32*, i32** %88, align 8
  %90 = and i64 %85, 1023
  %91 = getelementptr inbounds i32, i32* %89, i64 %90
  %92 = load i32, i32* %91, align 4
  store i64 %84, i64* %61, align 8
  %93 = load i64, i64* %58, align 8
  %94 = ptrtoint i32** %86 to i64
  %95 = sub i64 %93, %94
  %96 = icmp eq i64 %95, 0
  %97 = shl i64 %95, 7
  %98 = add i64 %97, -1
  %99 = select i1 %96, i64 0, i64 %98
  %100 = sub i64 1, %82
  %101 = sub i64 %100, %83
  %102 = add i64 %101, %99
  %103 = icmp ult i64 %102, 2048
  br i1 %103, label %111, label %104

104:                                              ; preds = %81
  %105 = inttoptr i64 %93 to i32**
  %106 = getelementptr inbounds i32*, i32** %105, i64 -1
  %107 = bitcast i32** %106 to i8**
  %108 = load i8*, i8** %107, align 8
  call void @_ZdlPv(i8* %108) #15
  %109 = load i32**, i32*** %57, align 8
  %110 = getelementptr i32*, i32** %109, i64 -1
  store i32** %110, i32*** %57, align 8
  br label %111

111:                                              ; preds = %81, %104
  call void @_ZN2v88internal15TranslatedState26InitializeCapturedObjectAtEiPNSt3__15stackIiNS2_5dequeIiNS2_9allocatorIiEEEEEERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENSB_ILSC_1ELb0EEEEEE(%"class.v8::internal::TranslatedState"* %0, i32 %92, %"class.std::__1::stack"* nonnull %4, %"class.v8::internal::CombinationAssertScope"* nonnull dereferenceable(1) %3)
  %112 = load i64, i64* %61, align 8
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %81

114:                                              ; preds = %111, %75
  %115 = load i32**, i32*** %59, align 8
  %116 = load i32**, i32*** %57, align 8
  %117 = ptrtoint i32** %116 to i64
  %118 = ptrtoint i32** %115 to i64
  store i64 0, i64* %61, align 8
  %119 = sub i64 %117, %118
  %120 = ashr exact i64 %119, 3
  %121 = icmp ugt i64 %120, 2
  br i1 %121, label %122, label %135

122:                                              ; preds = %114, %122
  %123 = phi i32** [ %127, %122 ], [ %115, %114 ]
  %124 = bitcast i32** %123 to i8**
  %125 = load i8*, i8** %124, align 8
  call void @_ZdlPv(i8* %125) #15
  %126 = load i32**, i32*** %59, align 8
  %127 = getelementptr inbounds i32*, i32** %126, i64 1
  store i32** %127, i32*** %59, align 8
  %128 = load i64, i64* %58, align 8
  %129 = ptrtoint i32** %127 to i64
  %130 = sub i64 %128, %129
  %131 = ashr exact i64 %130, 3
  %132 = icmp ugt i64 %131, 2
  br i1 %132, label %122, label %133

133:                                              ; preds = %122
  %134 = inttoptr i64 %128 to i32**
  br label %135

135:                                              ; preds = %133, %114
  %136 = phi i32** [ %116, %114 ], [ %134, %133 ]
  %137 = phi i32** [ %115, %114 ], [ %127, %133 ]
  %138 = phi i64 [ %120, %114 ], [ %131, %133 ]
  switch i64 %138, label %142 [
    i64 1, label %140
    i64 2, label %139
  ]

139:                                              ; preds = %135
  br label %140

140:                                              ; preds = %135, %139
  %141 = phi i64 [ 1024, %139 ], [ 512, %135 ]
  store i64 %141, i64* %60, align 8
  br label %142

142:                                              ; preds = %140, %135
  %143 = icmp eq i32** %137, %136
  br i1 %143, label %162, label %144

144:                                              ; preds = %142, %144
  %145 = phi i32** [ %148, %144 ], [ %137, %142 ]
  %146 = bitcast i32** %145 to i8**
  %147 = load i8*, i8** %146, align 8
  call void @_ZdlPv(i8* %147) #15
  %148 = getelementptr inbounds i32*, i32** %145, i64 1
  %149 = icmp eq i32** %148, %136
  br i1 %149, label %150, label %144

150:                                              ; preds = %144
  %151 = load i32**, i32*** %59, align 8
  %152 = load i32**, i32*** %57, align 8
  %153 = icmp eq i32** %152, %151
  br i1 %153, label %162, label %154

154:                                              ; preds = %150
  %155 = ptrtoint i32** %151 to i64
  %156 = getelementptr i32*, i32** %152, i64 -1
  %157 = ptrtoint i32** %156 to i64
  %158 = sub i64 %157, %155
  %159 = lshr i64 %158, 3
  %160 = xor i64 %159, -1
  %161 = getelementptr i32*, i32** %152, i64 %160
  store i32** %161, i32*** %57, align 8
  br label %162

162:                                              ; preds = %154, %150, %142
  %163 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %164 = load i32**, i32*** %163, align 8
  %165 = icmp eq i32** %164, null
  br i1 %165, label %168, label %166

166:                                              ; preds = %162
  %167 = bitcast i32** %164 to i8*
  call void @_ZdlPv(i8* %167) #15
  br label %168

168:                                              ; preds = %162, %166
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %53) #9
  br label %169

169:                                              ; preds = %47, %168
  %170 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %10, i64 0, i32 3, i32 0, i32 0
  %171 = load i64*, i64** %170, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %48) #9
  ret i64* %171
}

declare i64* @_ZN2v88internal6BigInt9FromInt64EPNS0_7IsolateEl(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal15TranslatedValue20IsMaterializedObjectEv(%"class.v8::internal::TranslatedValue"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8
  %4 = zext i8 %3 to i32
  %5 = add nsw i32 %4, -9
  %6 = icmp ult i32 %5, 2
  ret i1 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal15TranslatedValue26IsMaterializableByDebuggerEv(%"class.v8::internal::TranslatedValue"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 8
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal15TranslatedValue16GetChildrenCountEv(%"class.v8::internal::TranslatedValue"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 9
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4
  %7 = bitcast %union.anon* %6 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %8 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %7, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi i32 [ %9, %5 ], [ 0, %1 ]
  ret i32 %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal15TranslatedState13GetUInt64SlotEmi(i64, i32) local_unnamed_addr #5 align 2 {
  %3 = sext i32 %1 to i64
  %4 = add i64 %3, %0
  %5 = inttoptr i64 %4 to i64*
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal15TranslatedState13GetUInt32SlotEmi(i64, i32) local_unnamed_addr #5 align 2 {
  %3 = sext i32 %1 to i64
  %4 = add i64 %3, %0
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal15TranslatedState12GetFloatSlotEmi(i64, i32) local_unnamed_addr #5 align 2 {
  %3 = sext i32 %1 to i64
  %4 = add i64 %3, %0
  %5 = inttoptr i64 %4 to i32*
  %6 = load i32, i32* %5, align 4
  ret i32 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN2v88internal15TranslatedState13GetDoubleSlotEmi(i64, i32) local_unnamed_addr #5 align 2 {
  %3 = sext i32 %1 to i64
  %4 = add i64 %3, %0
  %5 = inttoptr i64 %4 to i64*
  %6 = load i64, i64* %5, align 8
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedValue8HandlifyEv(%"class.v8::internal::TranslatedValue"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 1
  br i1 %4, label %5, label %37

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %37, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 2
  %12 = load %"class.v8::internal::TranslatedState"*, %"class.v8::internal::TranslatedState"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %12, i64 0, i32 3
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 31, i32 4
  %16 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %15, align 8
  %17 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %10
  %19 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %16, i64 %7) #9
  br label %33

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 31, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 31, i32 1
  %24 = load i64*, i64** %23, align 8
  %25 = icmp eq i64* %22, %24
  br i1 %25, label %26, label %28

26:                                               ; preds = %20
  %27 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %14) #9
  br label %28

28:                                               ; preds = %26, %20
  %29 = phi i64* [ %27, %26 ], [ %22, %20 ]
  %30 = ptrtoint i64* %29 to i64
  %31 = add i64 %30, 8
  %32 = inttoptr i64 %31 to i64*
  store i64* %32, i64** %21, align 8
  store i64 %7, i64* %29, align 8
  br label %33

33:                                               ; preds = %18, %28
  %34 = phi i64* [ %19, %18 ], [ %29, %28 ]
  %35 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* %34, i64** %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 1
  store i8 2, i8* %36, align 1
  store i64 0, i64* %6, align 8
  br label %37

37:                                               ; preds = %5, %1, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedFrame16UnoptimizedFrameENS0_14BytecodeOffsetENS0_18SharedFunctionInfoEiii(%"class.v8::internal::TranslatedFrame"* noalias nocapture sret, i32, i64, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 0
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 4
  store i32 %3, i32* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 5
  store i32 %4, i32* %12, align 4
  %13 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 6
  store i32 %5, i32* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8
  %15 = bitcast %"class.std::__1::deque"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 50, i1 false) #9
  store i32 %1, i32* %8, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15TranslatedFrameD2Ev(%"class.v8::internal::TranslatedFrame"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %3 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 7
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %3, i64 %6
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %9 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %8, align 8
  %10 = icmp eq %"class.v8::internal::TranslatedValue"** %9, %3
  %11 = ptrtoint %"class.v8::internal::TranslatedValue"** %9 to i64
  %12 = ptrtoint %"class.v8::internal::TranslatedValue"** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %7, align 8
  %17 = and i64 %5, 127
  %18 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %16, i64 %17
  %19 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 7
  %23 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %3, i64 %22
  %24 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %23, align 8
  %25 = and i64 %21, 127
  %26 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %24, i64 %25
  %27 = icmp eq %"class.v8::internal::TranslatedValue"* %26, %18
  br i1 %27, label %28, label %34

28:                                               ; preds = %47, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %47 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast %"class.v8::internal::TranslatedValue"*** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %52, label %65

34:                                               ; preds = %15, %47
  %35 = phi %"class.v8::internal::TranslatedValue"* [ %50, %47 ], [ %18, %15 ]
  %36 = phi %"class.v8::internal::TranslatedValue"** [ %48, %47 ], [ %7, %15 ]
  %37 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %35, i64 1
  %38 = ptrtoint %"class.v8::internal::TranslatedValue"* %37 to i64
  %39 = bitcast %"class.v8::internal::TranslatedValue"** %36 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %41, 4096
  br i1 %42, label %43, label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %36, i64 1
  %45 = bitcast %"class.v8::internal::TranslatedValue"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %43, %34
  %48 = phi %"class.v8::internal::TranslatedValue"** [ %44, %43 ], [ %36, %34 ]
  %49 = phi i64 [ %46, %43 ], [ %38, %34 ]
  %50 = inttoptr i64 %49 to %"class.v8::internal::TranslatedValue"*
  %51 = icmp eq %"class.v8::internal::TranslatedValue"* %26, %50
  br i1 %51, label %28, label %34

52:                                               ; preds = %28, %52
  %53 = phi %"class.v8::internal::TranslatedValue"** [ %57, %52 ], [ %3, %28 ]
  %54 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %54, i64 0, i32 0
  tail call void @_ZdlPv(i8* %55) #15
  %56 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %2, align 8
  %57 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %56, i64 1
  store %"class.v8::internal::TranslatedValue"** %57, %"class.v8::internal::TranslatedValue"*** %2, align 8
  %58 = load i64, i64* %30, align 8
  %59 = ptrtoint %"class.v8::internal::TranslatedValue"** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, 2
  br i1 %62, label %52, label %63

63:                                               ; preds = %52
  %64 = inttoptr i64 %58 to %"class.v8::internal::TranslatedValue"**
  br label %65

65:                                               ; preds = %63, %28
  %66 = phi %"class.v8::internal::TranslatedValue"** [ %9, %28 ], [ %64, %63 ]
  %67 = phi %"class.v8::internal::TranslatedValue"** [ %3, %28 ], [ %57, %63 ]
  %68 = phi i64 [ %32, %28 ], [ %61, %63 ]
  switch i64 %68, label %72 [
    i64 1, label %70
    i64 2, label %69
  ]

69:                                               ; preds = %65
  br label %70

70:                                               ; preds = %65, %69
  %71 = phi i64 [ 128, %69 ], [ 64, %65 ]
  store i64 %71, i64* %4, align 8
  br label %72

72:                                               ; preds = %70, %65
  %73 = icmp eq %"class.v8::internal::TranslatedValue"** %67, %66
  br i1 %73, label %92, label %74

74:                                               ; preds = %72, %74
  %75 = phi %"class.v8::internal::TranslatedValue"** [ %78, %74 ], [ %67, %72 ]
  %76 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %75, align 8
  %77 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %76, i64 0, i32 0
  tail call void @_ZdlPv(i8* %77) #15
  %78 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %75, i64 1
  %79 = icmp eq %"class.v8::internal::TranslatedValue"** %78, %66
  br i1 %79, label %80, label %74

80:                                               ; preds = %74
  %81 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %2, align 8
  %82 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %8, align 8
  %83 = icmp eq %"class.v8::internal::TranslatedValue"** %82, %81
  br i1 %83, label %92, label %84

84:                                               ; preds = %80
  %85 = ptrtoint %"class.v8::internal::TranslatedValue"** %81 to i64
  %86 = getelementptr %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %82, i64 -1
  %87 = ptrtoint %"class.v8::internal::TranslatedValue"** %86 to i64
  %88 = sub i64 %87, %85
  %89 = lshr i64 %88, 3
  %90 = xor i64 %89, -1
  %91 = getelementptr %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %82, i64 %90
  store %"class.v8::internal::TranslatedValue"** %91, %"class.v8::internal::TranslatedValue"*** %8, align 8
  br label %92

92:                                               ; preds = %84, %80, %72
  %93 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %94 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %93, align 8
  %95 = icmp eq %"class.v8::internal::TranslatedValue"** %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  %97 = bitcast %"class.v8::internal::TranslatedValue"** %94 to i8*
  tail call void @_ZdlPv(i8* %97) #15
  br label %98

98:                                               ; preds = %92, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedFrame21ArgumentsAdaptorFrameENS0_18SharedFunctionInfoEi(%"class.v8::internal::TranslatedFrame"* noalias nocapture sret, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 0
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 1, i32 0
  store i32 -1, i32* %5, align 4
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 4
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 5
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 6
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8
  %12 = bitcast %"class.std::__1::deque"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 50, i1 false) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedFrame18ConstructStubFrameENS0_14BytecodeOffsetENS0_18SharedFunctionInfoEi(%"class.v8::internal::TranslatedFrame"* noalias nocapture sret, i32, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 0
  store i32 2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 4
  store i32 %3, i32* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 5
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 6
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8
  %13 = bitcast %"class.std::__1::deque"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 50, i1 false) #9
  store i32 %1, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedFrame24BuiltinContinuationFrameENS0_14BytecodeOffsetENS0_18SharedFunctionInfoEi(%"class.v8::internal::TranslatedFrame"* noalias nocapture sret, i32, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 0
  store i32 3, i32* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 4
  store i32 %3, i32* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 5
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 6
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8
  %13 = bitcast %"class.std::__1::deque"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 50, i1 false) #9
  store i32 %1, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedFrame32JSToWasmBuiltinContinuationFrameENS0_14BytecodeOffsetENS0_18SharedFunctionInfoEiNS_4base8OptionalINS0_4wasm9ValueKindEEE(%"class.v8::internal::TranslatedFrame"* noalias nocapture sret, i32, i64, i32, i16) local_unnamed_addr #0 align 2 {
  %6 = trunc i16 %4 to i8
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 0
  store i32 4, i32* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 1, i32 0
  %9 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 4
  store i32 %3, i32* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 5
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 6
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8
  %15 = bitcast %"class.std::__1::deque"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 50, i1 false) #9
  store i32 %1, i32* %8, align 4
  %16 = icmp eq i8 %6, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %19 = lshr i16 %4, 8
  %20 = trunc i16 %19 to i8
  store i8 1, i8* %18, align 1
  %21 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  store i8 %20, i8* %21, align 1
  br label %22

22:                                               ; preds = %5, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedFrame34JavaScriptBuiltinContinuationFrameENS0_14BytecodeOffsetENS0_18SharedFunctionInfoEi(%"class.v8::internal::TranslatedFrame"* noalias nocapture sret, i32, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 0
  store i32 5, i32* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 4
  store i32 %3, i32* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 5
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 6
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8
  %13 = bitcast %"class.std::__1::deque"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 50, i1 false) #9
  store i32 %1, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedFrame43JavaScriptBuiltinContinuationWithCatchFrameENS0_14BytecodeOffsetENS0_18SharedFunctionInfoEi(%"class.v8::internal::TranslatedFrame"* noalias nocapture sret, i32, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 0
  store i32 6, i32* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 4
  store i32 %3, i32* %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 5
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 6
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8
  %13 = bitcast %"class.std::__1::deque"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 50, i1 false) #9
  store i32 %1, i32* %6, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal15TranslatedFrame13GetValueCountEv(%"class.v8::internal::TranslatedFrame"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %25 [
    i32 0, label %4
    i32 1, label %16
    i32 2, label %20
    i32 3, label %20
    i32 4, label %20
    i32 5, label %20
    i32 6, label %20
    i32 7, label %24
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 21
  %8 = inttoptr i64 %7 to i16*
  %9 = load i16, i16* %8, align 2
  %10 = add i16 %9, 1
  %11 = zext i16 %10 to i32
  %12 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, 3
  %15 = add i32 %14, %11
  br label %26

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 4
  %18 = load i32, i32* %17, align 8
  %19 = add nsw i32 %18, 1
  br label %26

20:                                               ; preds = %1, %1, %1, %1, %1
  %21 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = add nsw i32 %22, 2
  br label %26

24:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

25:                                               ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

26:                                               ; preds = %20, %16, %4
  %27 = phi i32 [ %23, %20 ], [ %19, %16 ], [ %15, %4 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedFrame8HandlifyEv(%"class.v8::internal::TranslatedFrame"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = trunc i64 %3 to i32
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %36, label %6

6:                                                ; preds = %1
  %7 = and i64 %3, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 4
  %14 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %13, align 8
  %15 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %6
  %17 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %14, i64 %3) #9
  %18 = ptrtoint i64* %17 to i64
  br label %32

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 1
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %21, %23
  br i1 %24, label %25, label %27

25:                                               ; preds = %19
  %26 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %12) #9
  br label %27

27:                                               ; preds = %25, %19
  %28 = phi i64* [ %26, %25 ], [ %21, %19 ]
  %29 = ptrtoint i64* %28 to i64
  %30 = add i64 %29, 8
  %31 = inttoptr i64 %30 to i64*
  store i64* %31, i64** %20, align 8
  store i64 %3, i64* %28, align 8
  br label %32

32:                                               ; preds = %16, %27
  %33 = phi i64 [ %18, %16 ], [ %29, %27 ]
  %34 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 3
  %35 = bitcast %"class.v8::internal::Handle"* %34 to i64*
  store i64 %33, i64* %35, align 8
  store i64 0, i64* %2, align 8
  br label %36

36:                                               ; preds = %32, %1
  %37 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %38 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = lshr i64 %40, 7
  %42 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %38, i64 %41
  %43 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %44 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %43, align 8
  %45 = icmp eq %"class.v8::internal::TranslatedValue"** %44, %38
  br i1 %45, label %59, label %46

46:                                               ; preds = %36
  %47 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %42, align 8
  %48 = and i64 %40, 127
  %49 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %47, i64 %48
  %50 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, %40
  %53 = lshr i64 %52, 7
  %54 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %38, i64 %53
  %55 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %54, align 8
  %56 = and i64 %52, 127
  %57 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %55, i64 %56
  %58 = icmp eq %"class.v8::internal::TranslatedValue"* %57, %49
  br i1 %58, label %59, label %60

59:                                               ; preds = %109, %36, %46
  ret void

60:                                               ; preds = %46, %109
  %61 = phi %"class.v8::internal::TranslatedValue"* [ %112, %109 ], [ %49, %46 ]
  %62 = phi %"class.v8::internal::TranslatedValue"** [ %110, %109 ], [ %42, %46 ]
  %63 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %61, i64 0, i32 0
  %64 = load i8, i8* %63, align 8
  %65 = icmp eq i8 %64, 1
  br i1 %65, label %66, label %98

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %61, i64 0, i32 4, i32 0, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %98, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %61, i64 0, i32 2
  %73 = load %"class.v8::internal::TranslatedState"*, %"class.v8::internal::TranslatedState"** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %73, i64 0, i32 3
  %75 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %75, i64 0, i32 31, i32 4
  %77 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %76, align 8
  %78 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %71
  %80 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %77, i64 %68) #9
  br label %94

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %75, i64 0, i32 31, i32 0
  %83 = load i64*, i64** %82, align 8
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %75, i64 0, i32 31, i32 1
  %85 = load i64*, i64** %84, align 8
  %86 = icmp eq i64* %83, %85
  br i1 %86, label %87, label %89

87:                                               ; preds = %81
  %88 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %75) #9
  br label %89

89:                                               ; preds = %87, %81
  %90 = phi i64* [ %88, %87 ], [ %83, %81 ]
  %91 = ptrtoint i64* %90 to i64
  %92 = add i64 %91, 8
  %93 = inttoptr i64 %92 to i64*
  store i64* %93, i64** %82, align 8
  store i64 %68, i64* %90, align 8
  br label %94

94:                                               ; preds = %89, %79
  %95 = phi i64* [ %80, %79 ], [ %90, %89 ]
  %96 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %61, i64 0, i32 3, i32 0, i32 0
  store i64* %95, i64** %96, align 8
  %97 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %61, i64 0, i32 1
  store i8 2, i8* %97, align 1
  store i64 0, i64* %67, align 8
  br label %98

98:                                               ; preds = %60, %66, %94
  %99 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %61, i64 1
  %100 = ptrtoint %"class.v8::internal::TranslatedValue"* %99 to i64
  %101 = bitcast %"class.v8::internal::TranslatedValue"** %62 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = sub i64 %100, %102
  %104 = icmp eq i64 %103, 4096
  br i1 %104, label %105, label %109

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %62, i64 1
  %107 = bitcast %"class.v8::internal::TranslatedValue"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  br label %109

109:                                              ; preds = %98, %105
  %110 = phi %"class.v8::internal::TranslatedValue"** [ %106, %105 ], [ %62, %98 ]
  %111 = phi i64 [ %108, %105 ], [ %100, %98 ]
  %112 = inttoptr i64 %111 to %"class.v8::internal::TranslatedValue"*
  %113 = icmp eq %"class.v8::internal::TranslatedValue"* %57, %112
  br i1 %113, label %59, label %60
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedState25CreateNextTranslatedFrameEPNS0_24TranslationArrayIteratorENS0_10FixedArrayEmP8_IO_FILE(%"class.v8::internal::TranslatedFrame"* noalias sret, %"class.v8::internal::TranslatedState"* nocapture readnone, %"class.v8::internal::TranslationArrayIterator"*, i64, i64, %struct._IO_FILE*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %8 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %9 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %10 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %11 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %12 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %13 = alloca %"class.v8::internal::SharedFunctionInfo", align 8
  %14 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  switch i32 %14, label %248 [
    i32 18, label %15
    i32 0, label %54
    i32 8, label %84
    i32 6, label %115
    i32 21, label %146
    i32 19, label %186
    i32 20, label %217
  ]

15:                                               ; preds = %6
  %16 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %17 = bitcast %"class.v8::internal::SharedFunctionInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  %18 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %19 = and i64 %3, -4294967296
  %20 = shl i32 %18, 2
  %21 = sext i32 %20 to i64
  %22 = add i64 %3, 7
  %23 = add i64 %22, %21
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %19, %26
  %28 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %27, i64* %28, align 8
  %29 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %30 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %31 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %32 = icmp eq %struct._IO_FILE* %5, null
  br i1 %32, label %43, label %33

33:                                               ; preds = %15
  %34 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %7) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35, i64 0, i64 0), i8* %34) #9
  %35 = load i64, i64* %28, align 8
  %36 = add i64 %35, 21
  %37 = inttoptr i64 %36 to i16*
  %38 = load i16, i16* %37, align 2
  %39 = add i16 %38, 1
  %40 = zext i16 %39 to i32
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.36, i64 0, i64 0), i32 %16, i32 %40, i32 %29, i32 %30, i32 %31) #9
  %41 = icmp eq i8* %34, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %33
  call void @_ZdaPv(i8* nonnull %34) #15
  br label %43

43:                                               ; preds = %42, %33, %15
  %44 = load i64, i64* %28, align 8
  %45 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 0
  store i32 0, i32* %45, align 8, !alias.scope !4
  %46 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %44, i64* %47, align 8, !alias.scope !4
  %48 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %48, align 8, !alias.scope !4
  %49 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 4
  store i32 %29, i32* %49, align 8, !alias.scope !4
  %50 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 5
  store i32 %30, i32* %50, align 4, !alias.scope !4
  %51 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 6
  store i32 %31, i32* %51, align 8, !alias.scope !4
  %52 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8
  %53 = bitcast %"class.std::__1::deque"* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 50, i1 false) #9, !alias.scope !4
  store i32 %16, i32* %46, align 4, !alias.scope !4
  br label %249

54:                                               ; preds = %6
  %55 = bitcast %"class.v8::internal::SharedFunctionInfo"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #9
  %56 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %57 = and i64 %3, -4294967296
  %58 = shl i32 %56, 2
  %59 = sext i32 %58 to i64
  %60 = add i64 %3, 7
  %61 = add i64 %60, %59
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %57, %64
  %66 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %65, i64* %66, align 8
  %67 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %68 = icmp eq %struct._IO_FILE* %5, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %54
  %70 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %8) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.37, i64 0, i64 0), i8* %70) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.38, i64 0, i64 0), i32 %67) #9
  %71 = icmp eq i8* %70, null
  br i1 %71, label %73, label %72

72:                                               ; preds = %69
  call void @_ZdaPv(i8* nonnull %70) #15
  br label %73

73:                                               ; preds = %72, %69, %54
  %74 = load i64, i64* %66, align 8
  %75 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 0
  store i32 1, i32* %75, align 8, !alias.scope !7
  %76 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 1, i32 0
  store i32 -1, i32* %76, align 4, !alias.scope !7
  %77 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %74, i64* %77, align 8, !alias.scope !7
  %78 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %78, align 8, !alias.scope !7
  %79 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 4
  store i32 %67, i32* %79, align 8, !alias.scope !7
  %80 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 5
  store i32 0, i32* %80, align 4, !alias.scope !7
  %81 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 6
  store i32 0, i32* %81, align 8, !alias.scope !7
  %82 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8
  %83 = bitcast %"class.std::__1::deque"* %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 50, i1 false) #9, !alias.scope !7
  br label %249

84:                                               ; preds = %6
  %85 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %86 = bitcast %"class.v8::internal::SharedFunctionInfo"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #9
  %87 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %88 = and i64 %3, -4294967296
  %89 = shl i32 %87, 2
  %90 = sext i32 %89 to i64
  %91 = add i64 %3, 7
  %92 = add i64 %91, %90
  %93 = inttoptr i64 %92 to i32*
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %88, %95
  %97 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %96, i64* %97, align 8
  %98 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %99 = icmp eq %struct._IO_FILE* %5, null
  br i1 %99, label %104, label %100

100:                                              ; preds = %84
  %101 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %9) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.39, i64 0, i64 0), i8* %101) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.40, i64 0, i64 0), i32 %85, i32 %98) #9
  %102 = icmp eq i8* %101, null
  br i1 %102, label %104, label %103

103:                                              ; preds = %100
  call void @_ZdaPv(i8* nonnull %101) #15
  br label %104

104:                                              ; preds = %103, %100, %84
  %105 = load i64, i64* %97, align 8
  %106 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 0
  store i32 2, i32* %106, align 8, !alias.scope !10
  %107 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 1, i32 0
  %108 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %105, i64* %108, align 8, !alias.scope !10
  %109 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %109, align 8, !alias.scope !10
  %110 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 4
  store i32 %98, i32* %110, align 8, !alias.scope !10
  %111 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 5
  store i32 0, i32* %111, align 4, !alias.scope !10
  %112 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 6
  store i32 0, i32* %112, align 8, !alias.scope !10
  %113 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8
  %114 = bitcast %"class.std::__1::deque"* %113 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 50, i1 false) #9, !alias.scope !10
  store i32 %85, i32* %107, align 4, !alias.scope !10
  br label %249

115:                                              ; preds = %6
  %116 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %117 = bitcast %"class.v8::internal::SharedFunctionInfo"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #9
  %118 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %119 = and i64 %3, -4294967296
  %120 = shl i32 %118, 2
  %121 = sext i32 %120 to i64
  %122 = add i64 %3, 7
  %123 = add i64 %122, %121
  %124 = inttoptr i64 %123 to i32*
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = zext i32 %125 to i64
  %127 = or i64 %119, %126
  %128 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %127, i64* %128, align 8
  %129 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %130 = icmp eq %struct._IO_FILE* %5, null
  br i1 %130, label %135, label %131

131:                                              ; preds = %115
  %132 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %10) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.41, i64 0, i64 0), i8* %132) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.40, i64 0, i64 0), i32 %116, i32 %129) #9
  %133 = icmp eq i8* %132, null
  br i1 %133, label %135, label %134

134:                                              ; preds = %131
  call void @_ZdaPv(i8* nonnull %132) #15
  br label %135

135:                                              ; preds = %134, %131, %115
  %136 = load i64, i64* %128, align 8
  %137 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 0
  store i32 3, i32* %137, align 8, !alias.scope !13
  %138 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 1, i32 0
  %139 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %136, i64* %139, align 8, !alias.scope !13
  %140 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %140, align 8, !alias.scope !13
  %141 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 4
  store i32 %129, i32* %141, align 8, !alias.scope !13
  %142 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 5
  store i32 0, i32* %142, align 4, !alias.scope !13
  %143 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 6
  store i32 0, i32* %143, align 8, !alias.scope !13
  %144 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8
  %145 = bitcast %"class.std::__1::deque"* %144 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 50, i1 false) #9, !alias.scope !13
  store i32 %116, i32* %138, align 4, !alias.scope !13
  br label %249

146:                                              ; preds = %6
  %147 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %148 = bitcast %"class.v8::internal::SharedFunctionInfo"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #9
  %149 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %150 = and i64 %3, -4294967296
  %151 = shl i32 %149, 2
  %152 = sext i32 %151 to i64
  %153 = add i64 %3, 7
  %154 = add i64 %153, %152
  %155 = inttoptr i64 %154 to i32*
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = zext i32 %156 to i64
  %158 = or i64 %150, %157
  %159 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %158, i64* %159, align 8
  %160 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %161 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %162 = icmp eq i32 %161, -1
  %163 = trunc i32 %161 to i8
  %164 = select i1 %162, i8 0, i8 %163
  %165 = icmp eq %struct._IO_FILE* %5, null
  br i1 %165, label %172, label %166

166:                                              ; preds = %146
  %167 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %11) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.42, i64 0, i64 0), i8* %167) #9
  %168 = zext i8 %164 to i32
  %169 = select i1 %162, i32 -1, i32 %168
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.43, i64 0, i64 0), i32 %147, i32 %160, i32 %169) #9
  %170 = icmp eq i8* %167, null
  br i1 %170, label %172, label %171

171:                                              ; preds = %166
  call void @_ZdaPv(i8* nonnull %167) #15
  br label %172

172:                                              ; preds = %171, %166, %146
  %173 = load i64, i64* %159, align 8
  %174 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 0
  store i32 4, i32* %174, align 8, !alias.scope !16
  %175 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 1, i32 0
  %176 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %173, i64* %176, align 8, !alias.scope !16
  %177 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %177, align 8, !alias.scope !16
  %178 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 4
  store i32 %160, i32* %178, align 8, !alias.scope !16
  %179 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 5
  store i32 0, i32* %179, align 4, !alias.scope !16
  %180 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 6
  store i32 0, i32* %180, align 8, !alias.scope !16
  %181 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8
  %182 = bitcast %"class.std::__1::deque"* %181 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %182, i8 0, i64 50, i1 false) #9, !alias.scope !16
  store i32 %147, i32* %175, align 4, !alias.scope !16
  br i1 %162, label %249, label %183

183:                                              ; preds = %172
  %184 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %184, align 1, !alias.scope !16
  %185 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  store i8 %164, i8* %185, align 1, !alias.scope !16
  br label %249

186:                                              ; preds = %6
  %187 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %188 = bitcast %"class.v8::internal::SharedFunctionInfo"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #9
  %189 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %190 = and i64 %3, -4294967296
  %191 = shl i32 %189, 2
  %192 = sext i32 %191 to i64
  %193 = add i64 %3, 7
  %194 = add i64 %193, %192
  %195 = inttoptr i64 %194 to i32*
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = zext i32 %196 to i64
  %198 = or i64 %190, %197
  %199 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %198, i64* %199, align 8
  %200 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %201 = icmp eq %struct._IO_FILE* %5, null
  br i1 %201, label %206, label %202

202:                                              ; preds = %186
  %203 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %12) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.44, i64 0, i64 0), i8* %203) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.40, i64 0, i64 0), i32 %187, i32 %200) #9
  %204 = icmp eq i8* %203, null
  br i1 %204, label %206, label %205

205:                                              ; preds = %202
  call void @_ZdaPv(i8* nonnull %203) #15
  br label %206

206:                                              ; preds = %205, %202, %186
  %207 = load i64, i64* %199, align 8
  %208 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 0
  store i32 5, i32* %208, align 8, !alias.scope !19
  %209 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 1, i32 0
  %210 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %207, i64* %210, align 8, !alias.scope !19
  %211 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %211, align 8, !alias.scope !19
  %212 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 4
  store i32 %200, i32* %212, align 8, !alias.scope !19
  %213 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 5
  store i32 0, i32* %213, align 4, !alias.scope !19
  %214 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 6
  store i32 0, i32* %214, align 8, !alias.scope !19
  %215 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8
  %216 = bitcast %"class.std::__1::deque"* %215 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %216, i8 0, i64 50, i1 false) #9, !alias.scope !19
  store i32 %187, i32* %209, align 4, !alias.scope !19
  br label %249

217:                                              ; preds = %6
  %218 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %219 = bitcast %"class.v8::internal::SharedFunctionInfo"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %219) #9
  %220 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %221 = and i64 %3, -4294967296
  %222 = shl i32 %220, 2
  %223 = sext i32 %222 to i64
  %224 = add i64 %3, 7
  %225 = add i64 %224, %223
  %226 = inttoptr i64 %225 to i32*
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = zext i32 %227 to i64
  %229 = or i64 %221, %228
  %230 = getelementptr inbounds %"class.v8::internal::SharedFunctionInfo", %"class.v8::internal::SharedFunctionInfo"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %229, i64* %230, align 8
  %231 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %232 = icmp eq %struct._IO_FILE* %5, null
  br i1 %232, label %237, label %233

233:                                              ; preds = %217
  %234 = call i8* @_ZN2v88internal18SharedFunctionInfo13DebugNameCStrEv(%"class.v8::internal::SharedFunctionInfo"* nonnull %13) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.45, i64 0, i64 0), i8* %234) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.40, i64 0, i64 0), i32 %218, i32 %231) #9
  %235 = icmp eq i8* %234, null
  br i1 %235, label %237, label %236

236:                                              ; preds = %233
  call void @_ZdaPv(i8* nonnull %234) #15
  br label %237

237:                                              ; preds = %236, %233, %217
  %238 = load i64, i64* %230, align 8
  %239 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 0
  store i32 6, i32* %239, align 8, !alias.scope !22
  %240 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 1, i32 0
  %241 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %238, i64* %241, align 8, !alias.scope !22
  %242 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %242, align 8, !alias.scope !22
  %243 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 4
  store i32 %231, i32* %243, align 8, !alias.scope !22
  %244 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 5
  store i32 0, i32* %244, align 4, !alias.scope !22
  %245 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 6
  store i32 0, i32* %245, align 8, !alias.scope !22
  %246 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %0, i64 0, i32 8
  %247 = bitcast %"class.std::__1::deque"* %246 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %247, i8 0, i64 50, i1 false) #9, !alias.scope !22
  store i32 %218, i32* %240, align 4, !alias.scope !22
  br label %249

248:                                              ; preds = %6
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

249:                                              ; preds = %183, %172, %237, %206, %135, %104, %73, %43
  %250 = phi i8* [ %219, %237 ], [ %188, %206 ], [ %117, %135 ], [ %86, %104 ], [ %55, %73 ], [ %17, %43 ], [ %148, %172 ], [ %148, %183 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %250) #9
  ret void
}

declare void @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedFrame15AdvanceIteratorEPNSt3__116__deque_iteratorINS0_15TranslatedValueEPS4_RS4_PS5_lLl0EEE(%"class.std::__1::__deque_iterator"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::__deque_iterator", %"class.std::__1::__deque_iterator"* %0, i64 0, i32 0
  %4 = bitcast %"class.v8::internal::TranslatedValue"** %2 to i64*
  %5 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %2, align 8
  br label %6

6:                                                ; preds = %1, %33
  %7 = phi %"class.v8::internal::TranslatedValue"* [ %5, %1 ], [ %34, %33 ]
  %8 = phi i32 [ 1, %1 ], [ %20, %33 ]
  %9 = add nsw i32 %8, -1
  %10 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %7, i64 0, i32 0
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 9
  br i1 %12, label %13, label %18

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %7, i64 0, i32 4
  %15 = bitcast %union.anon* %14 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %16 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %6, %13
  %19 = phi i32 [ %17, %13 ], [ 0, %6 ]
  %20 = add nsw i32 %9, %19
  %21 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %3, align 8
  %22 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %7, i64 1
  store %"class.v8::internal::TranslatedValue"* %22, %"class.v8::internal::TranslatedValue"** %2, align 8
  %23 = bitcast %"class.v8::internal::TranslatedValue"** %21 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = ptrtoint %"class.v8::internal::TranslatedValue"* %22 to i64
  %26 = sub i64 %25, %24
  %27 = icmp eq i64 %26, 4096
  br i1 %27, label %28, label %33

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %21, i64 1
  store %"class.v8::internal::TranslatedValue"** %29, %"class.v8::internal::TranslatedValue"*** %3, align 8
  %30 = bitcast %"class.v8::internal::TranslatedValue"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %4, align 8
  %32 = inttoptr i64 %31 to %"class.v8::internal::TranslatedValue"*
  br label %33

33:                                               ; preds = %18, %28
  %34 = phi %"class.v8::internal::TranslatedValue"* [ %22, %18 ], [ %32, %28 ]
  %35 = icmp sgt i32 %20, 0
  br i1 %35, label %6, label %36

36:                                               ; preds = %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedState39CreateArgumentsElementsTranslatedValuesEimNS0_19CreateArgumentsTypeEP8_IO_FILE(%"class.v8::internal::TranslatedState"*, i32, i64, i8 zeroext, %struct._IO_FILE*) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [6 x i8], align 2
  %9 = alloca [6 x i8], align 2
  %10 = alloca [6 x i8], align 2
  %11 = alloca [6 x i8], align 2
  %12 = alloca [6 x i8], align 2
  %13 = sext i32 %1 to i64
  %14 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %14, align 8
  %16 = icmp eq i8 %3, 2
  %17 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17)
  %18 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18)
  br i1 %16, label %19, label %27

19:                                               ; preds = %5
  store i32 0, i32* %6, align 4
  %20 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 6
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 5
  %23 = load i32, i32* %22, align 8
  %24 = sub nsw i32 %21, %23
  store i32 %24, i32* %7, align 4
  %25 = icmp sgt i32 %24, 0
  %26 = select i1 %25, i32* %7, i32* %6
  br label %29

27:                                               ; preds = %5
  %28 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 6
  br label %29

29:                                               ; preds = %27, %19
  %30 = phi i32* [ %26, %19 ], [ %28, %27 ]
  %31 = load i32, i32* %30, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17)
  %32 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7
  %33 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i32
  %36 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %15, i64 %13, i32 8
  %37 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %15, i64 %13, i32 8, i32 0, i32 2, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq %struct._IO_FILE* %4, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %29
  %41 = zext i8 %3 to i32
  tail call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.46, i64 0, i64 0), i32 %35, i32 %41, i32 %31) #9
  %42 = load i64, i64* %33, align 8
  br label %43

43:                                               ; preds = %29, %40
  %44 = phi i64 [ %34, %29 ], [ %42, %40 ]
  %45 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %46 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %49 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %47, %50
  %52 = icmp eq i64 %51, 0
  %53 = shl i64 %51, 6
  %54 = add i64 %53, -1
  %55 = select i1 %52, i64 0, i64 %54
  %56 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = add i64 %44, %57
  %59 = icmp eq i64 %55, %58
  %60 = inttoptr i64 %50 to %"struct.v8::internal::TranslatedState::ObjectPosition"**
  %61 = inttoptr i64 %47 to %"struct.v8::internal::TranslatedState::ObjectPosition"**
  br i1 %59, label %62, label %68

62:                                               ; preds = %43
  tail call void @_ZNSt3__15dequeIN2v88internal15TranslatedState14ObjectPositionENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque.1163"* %32) #9
  %63 = load i64, i64* %33, align 8
  %64 = load i64, i64* %56, align 8
  %65 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %48, align 8
  %66 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %45, align 8
  %67 = add i64 %64, %63
  br label %68

68:                                               ; preds = %62, %43
  %69 = phi i64 [ %67, %62 ], [ %58, %43 ]
  %70 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %66, %62 ], [ %61, %43 ]
  %71 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %65, %62 ], [ %60, %43 ]
  %72 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %70, %71
  br i1 %72, label %80, label %73

73:                                               ; preds = %68
  %74 = lshr i64 %69, 9
  %75 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %71, i64 %74
  %76 = load %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %75, align 8
  %77 = and i64 %69, 511
  %78 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %76, i64 %77
  %79 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"* %78 to i64*
  br label %80

80:                                               ; preds = %68, %73
  %81 = phi i64* [ %79, %73 ], [ null, %68 ]
  %82 = shl i64 %38, 32
  %83 = zext i32 %1 to i64
  %84 = or i64 %82, %83
  store i64 %84, i64* %81, align 4
  %85 = load i64, i64* %33, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* %33, align 8
  %87 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %87)
  %88 = add nsw i32 %31, 2
  %89 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %15, i64 %13, i32 8, i32 0, i32 0, i32 2
  %90 = bitcast %"class.v8::internal::TranslatedValue"*** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %15, i64 %13, i32 8, i32 0, i32 0, i32 1
  %93 = bitcast %"class.v8::internal::TranslatedValue"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %91, %94
  %96 = icmp eq i64 %95, 0
  %97 = shl i64 %95, 4
  %98 = add i64 %97, -1
  %99 = select i1 %96, i64 0, i64 %98
  %100 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %15, i64 %13, i32 8, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = load i64, i64* %37, align 8
  %103 = add i64 %102, %101
  %104 = icmp eq i64 %99, %103
  %105 = inttoptr i64 %94 to %"class.v8::internal::TranslatedValue"**
  %106 = inttoptr i64 %91 to %"class.v8::internal::TranslatedValue"**
  br i1 %104, label %107, label %113

107:                                              ; preds = %80
  tail call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %36) #9
  %108 = load i64, i64* %37, align 8
  %109 = load i64, i64* %100, align 8
  %110 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %92, align 8
  %111 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %89, align 8
  %112 = add i64 %109, %108
  br label %113

113:                                              ; preds = %107, %80
  %114 = phi i64 [ %112, %107 ], [ %103, %80 ]
  %115 = phi %"class.v8::internal::TranslatedValue"** [ %111, %107 ], [ %106, %80 ]
  %116 = phi %"class.v8::internal::TranslatedValue"** [ %110, %107 ], [ %105, %80 ]
  %117 = icmp eq %"class.v8::internal::TranslatedValue"** %115, %116
  br i1 %117, label %124, label %118

118:                                              ; preds = %113
  %119 = lshr i64 %114, 7
  %120 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %116, i64 %119
  %121 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %120, align 8
  %122 = and i64 %114, 127
  %123 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %121, i64 %122
  br label %124

124:                                              ; preds = %113, %118
  %125 = phi %"class.v8::internal::TranslatedValue"* [ %123, %118 ], [ null, %113 ]
  %126 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %125, i64 0, i32 0
  store i8 9, i8* %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %125, i64 0, i32 1
  store i8 0, i8* %127, align 1
  %128 = getelementptr inbounds i8, i8* %126, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %128, i8* nonnull align 2 %87, i64 6, i1 false)
  %129 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %125, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %125, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %125, i64 0, i32 4
  %132 = bitcast %union.anon* %131 to i32*
  store i32 %35, i32* %132, align 8
  %133 = getelementptr inbounds i8, i8* %126, i64 28
  %134 = bitcast i8* %133 to i32*
  store i32 %88, i32* %134, align 4
  %135 = load i64, i64* %37, align 8
  %136 = add i64 %135, 1
  store i64 %136, i64* %37, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %87)
  %137 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 3
  %138 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %137, align 8
  %139 = getelementptr inbounds [6 x i8], [6 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %139)
  %140 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %138, i64 0, i32 0, i32 7, i32 0, i64 12
  %141 = load i64, i64* %140, align 8
  %142 = load i64, i64* %90, align 8
  %143 = load i64, i64* %93, align 8
  %144 = sub i64 %142, %143
  %145 = icmp eq i64 %144, 0
  %146 = shl i64 %144, 4
  %147 = add i64 %146, -1
  %148 = select i1 %145, i64 0, i64 %147
  %149 = load i64, i64* %100, align 8
  %150 = add i64 %149, %136
  %151 = icmp eq i64 %148, %150
  %152 = inttoptr i64 %143 to %"class.v8::internal::TranslatedValue"**
  %153 = inttoptr i64 %142 to %"class.v8::internal::TranslatedValue"**
  br i1 %151, label %154, label %160

154:                                              ; preds = %124
  tail call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %36) #9
  %155 = load i64, i64* %37, align 8
  %156 = load i64, i64* %100, align 8
  %157 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %92, align 8
  %158 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %89, align 8
  %159 = add i64 %156, %155
  br label %160

160:                                              ; preds = %154, %124
  %161 = phi i64 [ %159, %154 ], [ %150, %124 ]
  %162 = phi %"class.v8::internal::TranslatedValue"** [ %158, %154 ], [ %153, %124 ]
  %163 = phi %"class.v8::internal::TranslatedValue"** [ %157, %154 ], [ %152, %124 ]
  %164 = icmp eq %"class.v8::internal::TranslatedValue"** %162, %163
  br i1 %164, label %171, label %165

165:                                              ; preds = %160
  %166 = lshr i64 %161, 7
  %167 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %163, i64 %166
  %168 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %167, align 8
  %169 = and i64 %161, 127
  %170 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %168, i64 %169
  br label %171

171:                                              ; preds = %160, %165
  %172 = phi %"class.v8::internal::TranslatedValue"* [ %170, %165 ], [ null, %160 ]
  %173 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %172, i64 0, i32 0
  store i8 1, i8* %173, align 8
  %174 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %172, i64 0, i32 1
  store i8 0, i8* %174, align 1
  %175 = getelementptr inbounds i8, i8* %173, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %175, i8* nonnull align 2 %139, i64 6, i1 false)
  %176 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %172, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %176, align 8
  %177 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %172, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %177, align 8
  %178 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %172, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %141, i64* %178, align 8
  %179 = load i64, i64* %37, align 8
  %180 = add i64 %179, 1
  store i64 %180, i64* %37, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %139)
  %181 = getelementptr inbounds [6 x i8], [6 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %181)
  %182 = load i64, i64* %90, align 8
  %183 = load i64, i64* %93, align 8
  %184 = sub i64 %182, %183
  %185 = icmp eq i64 %184, 0
  %186 = shl i64 %184, 4
  %187 = add i64 %186, -1
  %188 = select i1 %185, i64 0, i64 %187
  %189 = load i64, i64* %100, align 8
  %190 = add i64 %189, %180
  %191 = icmp eq i64 %188, %190
  %192 = inttoptr i64 %183 to %"class.v8::internal::TranslatedValue"**
  %193 = inttoptr i64 %182 to %"class.v8::internal::TranslatedValue"**
  br i1 %191, label %194, label %200

194:                                              ; preds = %171
  tail call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %36) #9
  %195 = load i64, i64* %37, align 8
  %196 = load i64, i64* %100, align 8
  %197 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %92, align 8
  %198 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %89, align 8
  %199 = add i64 %196, %195
  br label %200

200:                                              ; preds = %194, %171
  %201 = phi i64 [ %199, %194 ], [ %190, %171 ]
  %202 = phi %"class.v8::internal::TranslatedValue"** [ %198, %194 ], [ %193, %171 ]
  %203 = phi %"class.v8::internal::TranslatedValue"** [ %197, %194 ], [ %192, %171 ]
  %204 = icmp eq %"class.v8::internal::TranslatedValue"** %202, %203
  br i1 %204, label %211, label %205

205:                                              ; preds = %200
  %206 = lshr i64 %201, 7
  %207 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %203, i64 %206
  %208 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %207, align 8
  %209 = and i64 %201, 127
  %210 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %208, i64 %209
  br label %211

211:                                              ; preds = %200, %205
  %212 = phi %"class.v8::internal::TranslatedValue"* [ %210, %205 ], [ null, %200 ]
  %213 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %212, i64 0, i32 0
  store i8 2, i8* %213, align 8
  %214 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %212, i64 0, i32 1
  store i8 0, i8* %214, align 1
  %215 = getelementptr inbounds i8, i8* %213, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %215, i8* nonnull align 2 %181, i64 6, i1 false)
  %216 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %212, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %216, align 8
  %217 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %212, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %217, align 8
  %218 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %212, i64 0, i32 4
  %219 = bitcast %union.anon* %218 to i32*
  store i32 %31, i32* %219, align 8
  %220 = load i64, i64* %37, align 8
  %221 = add i64 %220, 1
  store i64 %221, i64* %37, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %181)
  %222 = icmp eq i8 %3, 0
  br i1 %222, label %223, label %232

223:                                              ; preds = %211
  %224 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 5
  %225 = load i32, i32* %224, align 4
  %226 = icmp slt i32 %31, %225
  %227 = select i1 %226, i32 %31, i32 %225
  %228 = icmp sgt i32 %227, 0
  br i1 %228, label %229, label %232

229:                                              ; preds = %223
  %230 = getelementptr inbounds [6 x i8], [6 x i8]* %11, i64 0, i64 0
  %231 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %138, i64 0, i32 0, i32 7, i32 0, i64 5
  br label %236

232:                                              ; preds = %269, %211, %223
  %233 = phi i32 [ %227, %223 ], [ 0, %211 ], [ %227, %269 ]
  %234 = phi i64 [ %221, %223 ], [ %221, %211 ], [ %278, %269 ]
  %235 = sub i32 %31, %233
  br i1 %16, label %281, label %286

236:                                              ; preds = %269, %229
  %237 = phi i64 [ %221, %229 ], [ %278, %269 ]
  %238 = phi i32 [ 0, %229 ], [ %279, %269 ]
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %230)
  %239 = load i64, i64* %231, align 8
  %240 = load i64, i64* %90, align 8
  %241 = load i64, i64* %93, align 8
  %242 = sub i64 %240, %241
  %243 = icmp eq i64 %242, 0
  %244 = shl i64 %242, 4
  %245 = add i64 %244, -1
  %246 = select i1 %243, i64 0, i64 %245
  %247 = load i64, i64* %100, align 8
  %248 = add i64 %237, %247
  %249 = icmp eq i64 %246, %248
  %250 = inttoptr i64 %241 to %"class.v8::internal::TranslatedValue"**
  %251 = inttoptr i64 %240 to %"class.v8::internal::TranslatedValue"**
  br i1 %249, label %252, label %258

252:                                              ; preds = %236
  tail call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %36) #9
  %253 = load i64, i64* %37, align 8
  %254 = load i64, i64* %100, align 8
  %255 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %92, align 8
  %256 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %89, align 8
  %257 = add i64 %254, %253
  br label %258

258:                                              ; preds = %252, %236
  %259 = phi i64 [ %257, %252 ], [ %248, %236 ]
  %260 = phi %"class.v8::internal::TranslatedValue"** [ %256, %252 ], [ %251, %236 ]
  %261 = phi %"class.v8::internal::TranslatedValue"** [ %255, %252 ], [ %250, %236 ]
  %262 = icmp eq %"class.v8::internal::TranslatedValue"** %260, %261
  br i1 %262, label %269, label %263

263:                                              ; preds = %258
  %264 = lshr i64 %259, 7
  %265 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %261, i64 %264
  %266 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %265, align 8
  %267 = and i64 %259, 127
  %268 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %266, i64 %267
  br label %269

269:                                              ; preds = %258, %263
  %270 = phi %"class.v8::internal::TranslatedValue"* [ %268, %263 ], [ null, %258 ]
  %271 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %270, i64 0, i32 0
  store i8 1, i8* %271, align 8
  %272 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %270, i64 0, i32 1
  store i8 0, i8* %272, align 1
  %273 = getelementptr inbounds i8, i8* %271, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %273, i8* nonnull align 2 %230, i64 6, i1 false)
  %274 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %270, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %274, align 8
  %275 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %270, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %275, align 8
  %276 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %270, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %239, i64* %276, align 8
  %277 = load i64, i64* %37, align 8
  %278 = add i64 %277, 1
  store i64 %278, i64* %37, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %230)
  %279 = add nuw nsw i32 %238, 1
  %280 = icmp eq i32 %279, %227
  br i1 %280, label %232, label %236

281:                                              ; preds = %232
  %282 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 5
  %283 = load i32, i32* %282, align 4
  %284 = icmp sgt i32 %283, 0
  %285 = select i1 %284, i32 %283, i32 0
  br label %286

286:                                              ; preds = %281, %232
  %287 = phi i32 [ %285, %281 ], [ %233, %232 ]
  %288 = icmp sgt i32 %235, 0
  br i1 %288, label %289, label %295

289:                                              ; preds = %286
  %290 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 5
  %291 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 4
  %292 = getelementptr inbounds [6 x i8], [6 x i8]* %12, i64 0, i64 0
  %293 = sext i32 %287 to i64
  %294 = zext i32 %235 to i64
  br label %296

295:                                              ; preds = %344, %286
  ret void

296:                                              ; preds = %344, %289
  %297 = phi i64 [ %234, %289 ], [ %353, %344 ]
  %298 = phi i64 [ 0, %289 ], [ %354, %344 ]
  %299 = add nsw i64 %298, %293
  %300 = load i32, i32* %290, align 8
  %301 = sext i32 %300 to i64
  %302 = icmp slt i64 %299, %301
  br i1 %302, label %305, label %303

303:                                              ; preds = %296
  %304 = load i64, i64* %291, align 8
  br label %305

305:                                              ; preds = %296, %303
  %306 = phi i64 [ %304, %303 ], [ %2, %296 ]
  %307 = trunc i64 %299 to i32
  %308 = shl i32 %307, 3
  %309 = add i32 %308, 8
  %310 = sext i32 %309 to i64
  %311 = add nsw i64 %310, 16
  %312 = add i64 %311, %306
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %292)
  %313 = inttoptr i64 %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = load i64, i64* %90, align 8
  %316 = load i64, i64* %93, align 8
  %317 = sub i64 %315, %316
  %318 = icmp eq i64 %317, 0
  %319 = shl i64 %317, 4
  %320 = add i64 %319, -1
  %321 = select i1 %318, i64 0, i64 %320
  %322 = load i64, i64* %100, align 8
  %323 = add i64 %297, %322
  %324 = icmp eq i64 %321, %323
  %325 = inttoptr i64 %316 to %"class.v8::internal::TranslatedValue"**
  %326 = inttoptr i64 %315 to %"class.v8::internal::TranslatedValue"**
  br i1 %324, label %327, label %333

327:                                              ; preds = %305
  tail call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %36) #9
  %328 = load i64, i64* %37, align 8
  %329 = load i64, i64* %100, align 8
  %330 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %92, align 8
  %331 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %89, align 8
  %332 = add i64 %329, %328
  br label %333

333:                                              ; preds = %327, %305
  %334 = phi i64 [ %332, %327 ], [ %323, %305 ]
  %335 = phi %"class.v8::internal::TranslatedValue"** [ %331, %327 ], [ %326, %305 ]
  %336 = phi %"class.v8::internal::TranslatedValue"** [ %330, %327 ], [ %325, %305 ]
  %337 = icmp eq %"class.v8::internal::TranslatedValue"** %335, %336
  br i1 %337, label %344, label %338

338:                                              ; preds = %333
  %339 = lshr i64 %334, 7
  %340 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %336, i64 %339
  %341 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %340, align 8
  %342 = and i64 %334, 127
  %343 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %341, i64 %342
  br label %344

344:                                              ; preds = %333, %338
  %345 = phi %"class.v8::internal::TranslatedValue"* [ %343, %338 ], [ null, %333 ]
  %346 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %345, i64 0, i32 0
  store i8 1, i8* %346, align 8
  %347 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %345, i64 0, i32 1
  store i8 0, i8* %347, align 1
  %348 = getelementptr inbounds i8, i8* %346, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %348, i8* nonnull align 2 %292, i64 6, i1 false)
  %349 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %345, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %349, align 8
  %350 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %345, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %350, align 8
  %351 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %345, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %314, i64* %351, align 8
  %352 = load i64, i64* %37, align 8
  %353 = add i64 %352, 1
  store i64 %353, i64* %37, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %292)
  %354 = add nuw nsw i64 %298, 1
  %355 = icmp eq i64 %354, %294
  br i1 %355, label %295, label %296
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal15TranslatedState25CreateNextTranslatedValueEiPNS0_24TranslationArrayIteratorENS0_10FixedArrayEmPNS0_14RegisterValuesEP8_IO_FILE(%"class.v8::internal::TranslatedState"*, i32, %"class.v8::internal::TranslationArrayIterator"*, i64, i64, %"class.v8::internal::RegisterValues"*, %struct._IO_FILE*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.disasm::NameConverter", align 8
  %9 = alloca [6 x i8], align 2
  %10 = alloca [6 x i8], align 2
  %11 = alloca [6 x i8], align 2
  %12 = alloca [6 x i8], align 2
  %13 = alloca %"class.v8::internal::Object", align 8
  %14 = alloca [6 x i8], align 2
  %15 = alloca [6 x i8], align 2
  %16 = alloca [6 x i8], align 2
  %17 = alloca [6 x i8], align 2
  %18 = alloca [6 x i8], align 2
  %19 = alloca [6 x i8], align 2
  %20 = alloca [6 x i8], align 2
  %21 = alloca [6 x i8], align 2
  %22 = alloca [6 x i8], align 2
  %23 = alloca [6 x i8], align 2
  %24 = alloca [6 x i8], align 2
  %25 = alloca [6 x i8], align 2
  %26 = alloca [6 x i8], align 2
  %27 = alloca %"class.v8::internal::Object", align 8
  %28 = alloca [6 x i8], align 2
  %29 = alloca [6 x i8], align 2
  %30 = alloca [6 x i8], align 2
  %31 = alloca [6 x i8], align 2
  %32 = alloca [6 x i8], align 2
  %33 = alloca [6 x i8], align 2
  %34 = alloca [6 x i8], align 2
  %35 = alloca %"class.v8::internal::Object", align 8
  %36 = alloca [6 x i8], align 2
  %37 = bitcast %"class.disasm::NameConverter"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %37) #9
  %38 = getelementptr inbounds %"class.disasm::NameConverter", %"class.disasm::NameConverter"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN6disasm13NameConverterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"class.disasm::NameConverter", %"class.disasm::NameConverter"* %8, i64 0, i32 1, i32 1, i64 0
  %40 = getelementptr inbounds %"class.disasm::NameConverter", %"class.disasm::NameConverter"* %8, i64 0, i32 1, i32 0, i32 0
  store i8* %39, i8** %40, align 8
  %41 = getelementptr inbounds %"class.disasm::NameConverter", %"class.disasm::NameConverter"* %8, i64 0, i32 1, i32 0, i32 1
  store i64 128, i64* %41, align 8
  %42 = sext i32 %1 to i64
  %43 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8
  %46 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  switch i32 %48, label %1565 [
    i32 22, label %1501
    i32 10, label %1440
    i32 13, label %1377
    i32 5, label %1316
    i32 26, label %1255
    i32 17, label %1195
    i32 15, label %1134
    i32 24, label %1064
    i32 9, label %954
    i32 11, label %49
    i32 1, label %153
    i32 2, label %156
    i32 7, label %211
    i32 23, label %313
    i32 14, label %426
    i32 16, label %531
    i32 25, label %634
    i32 4, label %739
    i32 12, label %844
  ]

49:                                               ; preds = %7
  %50 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %51 = icmp eq %struct._IO_FILE* %6, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %49
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.47, i64 0, i64 0), i32 %50) #9
  br label %53

53:                                               ; preds = %49, %52
  %54 = sext i32 %50 to i64
  %55 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, %54
  %58 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %59 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %58, align 8
  %60 = lshr i64 %57, 9
  %61 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %59, i64 %60
  %62 = load %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %61, align 8
  %63 = and i64 %57, 511
  %64 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %62, i64 %63
  %65 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %66 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %59 to i64
  %69 = sub i64 %67, %68
  %70 = icmp eq i64 %69, 0
  %71 = shl i64 %69, 6
  %72 = add i64 %71, -1
  %73 = select i1 %70, i64 0, i64 %72
  %74 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, %56
  %77 = icmp eq i64 %73, %76
  %78 = inttoptr i64 %67 to %"struct.v8::internal::TranslatedState::ObjectPosition"**
  br i1 %77, label %79, label %86

79:                                               ; preds = %53
  %80 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedState14ObjectPositionENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque.1163"* %80) #9
  %81 = load i64, i64* %74, align 8
  %82 = load i64, i64* %55, align 8
  %83 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %58, align 8
  %84 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %65, align 8
  %85 = add i64 %82, %81
  br label %86

86:                                               ; preds = %79, %53
  %87 = phi i64 [ %85, %79 ], [ %76, %53 ]
  %88 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %84, %79 ], [ %78, %53 ]
  %89 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %83, %79 ], [ %59, %53 ]
  %90 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %88, %89
  br i1 %90, label %98, label %91

91:                                               ; preds = %86
  %92 = lshr i64 %87, 9
  %93 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %89, i64 %92
  %94 = load %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %93, align 8
  %95 = and i64 %87, 511
  %96 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %94, i64 %95
  %97 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"* %96 to i64*
  br label %98

98:                                               ; preds = %86, %91
  %99 = phi i64* [ %97, %91 ], [ null, %86 ]
  %100 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"* %64 to i64*
  %101 = load i64, i64* %100, align 4
  store i64 %101, i64* %99, align 4
  %102 = load i64, i64* %74, align 8
  %103 = add i64 %102, 1
  store i64 %103, i64* %74, align 8
  %104 = getelementptr inbounds [6 x i8], [6 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %104)
  %105 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %106 = bitcast %"class.v8::internal::TranslatedValue"*** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %109 = bitcast %"class.v8::internal::TranslatedValue"*** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = sub i64 %107, %110
  %112 = icmp eq i64 %111, 0
  %113 = shl i64 %111, 4
  %114 = add i64 %113, -1
  %115 = select i1 %112, i64 0, i64 %114
  %116 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = load i64, i64* %46, align 8
  %119 = add i64 %118, %117
  %120 = icmp eq i64 %115, %119
  %121 = inttoptr i64 %110 to %"class.v8::internal::TranslatedValue"**
  %122 = inttoptr i64 %107 to %"class.v8::internal::TranslatedValue"**
  br i1 %120, label %123, label %129

123:                                              ; preds = %98
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %124 = load i64, i64* %46, align 8
  %125 = load i64, i64* %116, align 8
  %126 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %108, align 8
  %127 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %105, align 8
  %128 = add i64 %125, %124
  br label %129

129:                                              ; preds = %123, %98
  %130 = phi i64 [ %128, %123 ], [ %119, %98 ]
  %131 = phi %"class.v8::internal::TranslatedValue"** [ %127, %123 ], [ %122, %98 ]
  %132 = phi %"class.v8::internal::TranslatedValue"** [ %126, %123 ], [ %121, %98 ]
  %133 = icmp eq %"class.v8::internal::TranslatedValue"** %131, %132
  br i1 %133, label %140, label %134

134:                                              ; preds = %129
  %135 = lshr i64 %130, 7
  %136 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %132, i64 %135
  %137 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %136, align 8
  %138 = and i64 %130, 127
  %139 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %137, i64 %138
  br label %140

140:                                              ; preds = %134, %129
  %141 = phi %"class.v8::internal::TranslatedValue"* [ %139, %134 ], [ null, %129 ]
  %142 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %141, i64 0, i32 0
  store i8 10, i8* %142, align 8
  %143 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %141, i64 0, i32 1
  store i8 0, i8* %143, align 1
  %144 = getelementptr inbounds i8, i8* %142, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %144, i8* nonnull align 2 %104, i64 6, i1 false)
  %145 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %141, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %141, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %141, i64 0, i32 4
  %148 = bitcast %union.anon* %147 to i32*
  store i32 %50, i32* %148, align 8
  %149 = getelementptr inbounds i8, i8* %142, i64 28
  %150 = bitcast i8* %149 to i32*
  store i32 -1, i32* %150, align 4
  %151 = load i64, i64* %46, align 8
  %152 = add i64 %151, 1
  store i64 %152, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %104)
  br label %1566

153:                                              ; preds = %7
  %154 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %155 = trunc i32 %154 to i8
  call void @_ZN2v88internal15TranslatedState39CreateArgumentsElementsTranslatedValuesEimNS0_19CreateArgumentsTypeEP8_IO_FILE(%"class.v8::internal::TranslatedState"* %0, i32 %1, i64 %4, i8 zeroext %155, %struct._IO_FILE* %6)
  br label %1566

156:                                              ; preds = %7
  %157 = icmp eq %struct._IO_FILE* %6, null
  br i1 %157, label %161, label %158

158:                                              ; preds = %156
  %159 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 6
  %160 = load i32, i32* %159, align 4
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.48, i64 0, i64 0), i32 %160) #9
  br label %161

161:                                              ; preds = %156, %158
  %162 = getelementptr inbounds [6 x i8], [6 x i8]* %10, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %162)
  %163 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 6
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %166 = bitcast %"class.v8::internal::TranslatedValue"*** %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %169 = bitcast %"class.v8::internal::TranslatedValue"*** %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = sub i64 %167, %170
  %172 = icmp eq i64 %171, 0
  %173 = shl i64 %171, 4
  %174 = add i64 %173, -1
  %175 = select i1 %172, i64 0, i64 %174
  %176 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %177 = load i64, i64* %176, align 8
  %178 = load i64, i64* %46, align 8
  %179 = add i64 %178, %177
  %180 = icmp eq i64 %175, %179
  %181 = inttoptr i64 %170 to %"class.v8::internal::TranslatedValue"**
  %182 = inttoptr i64 %167 to %"class.v8::internal::TranslatedValue"**
  br i1 %180, label %183, label %189

183:                                              ; preds = %161
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %184 = load i64, i64* %46, align 8
  %185 = load i64, i64* %176, align 8
  %186 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %168, align 8
  %187 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %165, align 8
  %188 = add i64 %185, %184
  br label %189

189:                                              ; preds = %183, %161
  %190 = phi i64 [ %188, %183 ], [ %179, %161 ]
  %191 = phi %"class.v8::internal::TranslatedValue"** [ %187, %183 ], [ %182, %161 ]
  %192 = phi %"class.v8::internal::TranslatedValue"** [ %186, %183 ], [ %181, %161 ]
  %193 = icmp eq %"class.v8::internal::TranslatedValue"** %191, %192
  br i1 %193, label %200, label %194

194:                                              ; preds = %189
  %195 = lshr i64 %190, 7
  %196 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %192, i64 %195
  %197 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %196, align 8
  %198 = and i64 %190, 127
  %199 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %197, i64 %198
  br label %200

200:                                              ; preds = %189, %194
  %201 = phi %"class.v8::internal::TranslatedValue"* [ %199, %194 ], [ null, %189 ]
  %202 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %201, i64 0, i32 0
  store i8 2, i8* %202, align 8
  %203 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %201, i64 0, i32 1
  store i8 0, i8* %203, align 1
  %204 = getelementptr inbounds i8, i8* %202, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %204, i8* nonnull align 2 %162, i64 6, i1 false)
  %205 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %201, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %205, align 8
  %206 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %201, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %201, i64 0, i32 4
  %208 = bitcast %union.anon* %207 to i32*
  store i32 %164, i32* %208, align 8
  %209 = load i64, i64* %46, align 8
  %210 = add i64 %209, 1
  store i64 %210, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %162)
  br label %1566

211:                                              ; preds = %7
  %212 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %213 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7
  %214 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %215 = load i64, i64* %214, align 8
  %216 = trunc i64 %215 to i32
  %217 = icmp eq %struct._IO_FILE* %6, null
  br i1 %217, label %220, label %218

218:                                              ; preds = %211
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.49, i64 0, i64 0), i32 %216, i32 %212) #9
  %219 = load i64, i64* %214, align 8
  br label %220

220:                                              ; preds = %211, %218
  %221 = phi i64 [ %215, %211 ], [ %219, %218 ]
  %222 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %223 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %222 to i64*
  %224 = load i64, i64* %223, align 8
  %225 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %226 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %225 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = sub i64 %224, %227
  %229 = icmp eq i64 %228, 0
  %230 = shl i64 %228, 6
  %231 = add i64 %230, -1
  %232 = select i1 %229, i64 0, i64 %231
  %233 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 1
  %234 = load i64, i64* %233, align 8
  %235 = add i64 %221, %234
  %236 = icmp eq i64 %232, %235
  %237 = inttoptr i64 %227 to %"struct.v8::internal::TranslatedState::ObjectPosition"**
  %238 = inttoptr i64 %224 to %"struct.v8::internal::TranslatedState::ObjectPosition"**
  br i1 %236, label %239, label %245

239:                                              ; preds = %220
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedState14ObjectPositionENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque.1163"* %213) #9
  %240 = load i64, i64* %214, align 8
  %241 = load i64, i64* %233, align 8
  %242 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %225, align 8
  %243 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %222, align 8
  %244 = add i64 %241, %240
  br label %245

245:                                              ; preds = %239, %220
  %246 = phi i64 [ %244, %239 ], [ %235, %220 ]
  %247 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %243, %239 ], [ %238, %220 ]
  %248 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %242, %239 ], [ %237, %220 ]
  %249 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %247, %248
  br i1 %249, label %257, label %250

250:                                              ; preds = %245
  %251 = lshr i64 %246, 9
  %252 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %248, i64 %251
  %253 = load %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %252, align 8
  %254 = and i64 %246, 511
  %255 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %253, i64 %254
  %256 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"* %255 to i64*
  br label %257

257:                                              ; preds = %245, %250
  %258 = phi i64* [ %256, %250 ], [ null, %245 ]
  %259 = shl i64 %47, 32
  %260 = zext i32 %1 to i64
  %261 = or i64 %259, %260
  store i64 %261, i64* %258, align 4
  %262 = load i64, i64* %214, align 8
  %263 = add i64 %262, 1
  store i64 %263, i64* %214, align 8
  %264 = getelementptr inbounds [6 x i8], [6 x i8]* %11, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %264)
  %265 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %266 = bitcast %"class.v8::internal::TranslatedValue"*** %265 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %269 = bitcast %"class.v8::internal::TranslatedValue"*** %268 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = sub i64 %267, %270
  %272 = icmp eq i64 %271, 0
  %273 = shl i64 %271, 4
  %274 = add i64 %273, -1
  %275 = select i1 %272, i64 0, i64 %274
  %276 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %277 = load i64, i64* %276, align 8
  %278 = load i64, i64* %46, align 8
  %279 = add i64 %278, %277
  %280 = icmp eq i64 %275, %279
  %281 = inttoptr i64 %270 to %"class.v8::internal::TranslatedValue"**
  %282 = inttoptr i64 %267 to %"class.v8::internal::TranslatedValue"**
  br i1 %280, label %283, label %289

283:                                              ; preds = %257
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %284 = load i64, i64* %46, align 8
  %285 = load i64, i64* %276, align 8
  %286 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %268, align 8
  %287 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %265, align 8
  %288 = add i64 %285, %284
  br label %289

289:                                              ; preds = %283, %257
  %290 = phi i64 [ %288, %283 ], [ %279, %257 ]
  %291 = phi %"class.v8::internal::TranslatedValue"** [ %287, %283 ], [ %282, %257 ]
  %292 = phi %"class.v8::internal::TranslatedValue"** [ %286, %283 ], [ %281, %257 ]
  %293 = icmp eq %"class.v8::internal::TranslatedValue"** %291, %292
  br i1 %293, label %300, label %294

294:                                              ; preds = %289
  %295 = lshr i64 %290, 7
  %296 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %292, i64 %295
  %297 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %296, align 8
  %298 = and i64 %290, 127
  %299 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %297, i64 %298
  br label %300

300:                                              ; preds = %289, %294
  %301 = phi %"class.v8::internal::TranslatedValue"* [ %299, %294 ], [ null, %289 ]
  %302 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %301, i64 0, i32 0
  store i8 9, i8* %302, align 8
  %303 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %301, i64 0, i32 1
  store i8 0, i8* %303, align 1
  %304 = getelementptr inbounds i8, i8* %302, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %304, i8* nonnull align 2 %264, i64 6, i1 false)
  %305 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %301, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %305, align 8
  %306 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %301, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %306, align 8
  %307 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %301, i64 0, i32 4
  %308 = bitcast %union.anon* %307 to i32*
  store i32 %216, i32* %308, align 8
  %309 = getelementptr inbounds i8, i8* %302, i64 28
  %310 = bitcast i8* %309 to i32*
  store i32 %212, i32* %310, align 4
  %311 = load i64, i64* %46, align 8
  %312 = add i64 %311, 1
  store i64 %312, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %264)
  br label %1566

313:                                              ; preds = %7
  %314 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %315 = icmp eq %"class.v8::internal::RegisterValues"* %5, null
  br i1 %315, label %316, label %362

316:                                              ; preds = %313
  %317 = getelementptr inbounds [6 x i8], [6 x i8]* %12, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %317)
  %318 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %319 = bitcast %"class.v8::internal::TranslatedValue"*** %318 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %322 = bitcast %"class.v8::internal::TranslatedValue"*** %321 to i64*
  %323 = load i64, i64* %322, align 8
  %324 = sub i64 %320, %323
  %325 = icmp eq i64 %324, 0
  %326 = shl i64 %324, 4
  %327 = add i64 %326, -1
  %328 = select i1 %325, i64 0, i64 %327
  %329 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %330 = load i64, i64* %329, align 8
  %331 = load i64, i64* %46, align 8
  %332 = add i64 %331, %330
  %333 = icmp eq i64 %328, %332
  %334 = inttoptr i64 %323 to %"class.v8::internal::TranslatedValue"**
  %335 = inttoptr i64 %320 to %"class.v8::internal::TranslatedValue"**
  br i1 %333, label %336, label %342

336:                                              ; preds = %316
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %337 = load i64, i64* %46, align 8
  %338 = load i64, i64* %329, align 8
  %339 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %321, align 8
  %340 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %318, align 8
  %341 = add i64 %338, %337
  br label %342

342:                                              ; preds = %336, %316
  %343 = phi i64 [ %341, %336 ], [ %332, %316 ]
  %344 = phi %"class.v8::internal::TranslatedValue"** [ %340, %336 ], [ %335, %316 ]
  %345 = phi %"class.v8::internal::TranslatedValue"** [ %339, %336 ], [ %334, %316 ]
  %346 = icmp eq %"class.v8::internal::TranslatedValue"** %344, %345
  br i1 %346, label %353, label %347

347:                                              ; preds = %342
  %348 = lshr i64 %343, 7
  %349 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %345, i64 %348
  %350 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %349, align 8
  %351 = and i64 %343, 127
  %352 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %350, i64 %351
  br label %353

353:                                              ; preds = %347, %342
  %354 = phi %"class.v8::internal::TranslatedValue"* [ %352, %347 ], [ null, %342 ]
  %355 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %354, i64 0, i32 0
  store i8 0, i8* %355, align 8
  %356 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %354, i64 0, i32 1
  store i8 0, i8* %356, align 1
  %357 = getelementptr inbounds i8, i8* %355, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %357, i8* nonnull align 2 %317, i64 6, i1 false)
  %358 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %354, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %358, align 8
  %359 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %354, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %359, align 8
  %360 = load i64, i64* %46, align 8
  %361 = add i64 %360, 1
  store i64 %361, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %317)
  br label %1566

362:                                              ; preds = %313
  %363 = zext i32 %314 to i64
  %364 = getelementptr inbounds %"class.v8::internal::RegisterValues", %"class.v8::internal::RegisterValues"* %5, i64 0, i32 0, i64 %363
  %365 = load i64, i64* %364, align 8
  %366 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 3
  %367 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %366, align 8
  %368 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %367, i64 0, i32 0, i32 4
  %369 = load i64, i64* %368, align 8
  %370 = and i64 %369, 4294967295
  %371 = icmp eq i64 %370, 0
  call void @llvm.assume(i1 %371) #9
  %372 = and i64 %365, 4294967295
  %373 = or i64 %369, %372
  %374 = icmp eq %struct._IO_FILE* %6, null
  br i1 %374, label %379, label %375

375:                                              ; preds = %362
  %376 = call i8* @_ZNK6disasm13NameConverter17NameOfCPURegisterEi(%"class.disasm::NameConverter"* nonnull %8, i32 %314) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i64 0, i64 0), i64 %373, i8* %376) #9
  %377 = bitcast %"class.v8::internal::Object"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %377) #9
  %378 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %13, i64 0, i32 0, i32 0
  store i64 %373, i64* %378, align 8
  call void @_ZNK2v88internal6Object10ShortPrintEP8_IO_FILE(%"class.v8::internal::Object"* nonnull %13, %struct._IO_FILE* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %377) #9
  br label %379

379:                                              ; preds = %362, %375
  %380 = getelementptr inbounds [6 x i8], [6 x i8]* %14, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %380)
  %381 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %382 = bitcast %"class.v8::internal::TranslatedValue"*** %381 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %385 = bitcast %"class.v8::internal::TranslatedValue"*** %384 to i64*
  %386 = load i64, i64* %385, align 8
  %387 = sub i64 %383, %386
  %388 = icmp eq i64 %387, 0
  %389 = shl i64 %387, 4
  %390 = add i64 %389, -1
  %391 = select i1 %388, i64 0, i64 %390
  %392 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %393 = load i64, i64* %392, align 8
  %394 = load i64, i64* %46, align 8
  %395 = add i64 %394, %393
  %396 = icmp eq i64 %391, %395
  %397 = inttoptr i64 %386 to %"class.v8::internal::TranslatedValue"**
  %398 = inttoptr i64 %383 to %"class.v8::internal::TranslatedValue"**
  br i1 %396, label %399, label %405

399:                                              ; preds = %379
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %400 = load i64, i64* %46, align 8
  %401 = load i64, i64* %392, align 8
  %402 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %384, align 8
  %403 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %381, align 8
  %404 = add i64 %401, %400
  br label %405

405:                                              ; preds = %399, %379
  %406 = phi i64 [ %404, %399 ], [ %395, %379 ]
  %407 = phi %"class.v8::internal::TranslatedValue"** [ %403, %399 ], [ %398, %379 ]
  %408 = phi %"class.v8::internal::TranslatedValue"** [ %402, %399 ], [ %397, %379 ]
  %409 = icmp eq %"class.v8::internal::TranslatedValue"** %407, %408
  br i1 %409, label %416, label %410

410:                                              ; preds = %405
  %411 = lshr i64 %406, 7
  %412 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %408, i64 %411
  %413 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %412, align 8
  %414 = and i64 %406, 127
  %415 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %413, i64 %414
  br label %416

416:                                              ; preds = %410, %405
  %417 = phi %"class.v8::internal::TranslatedValue"* [ %415, %410 ], [ null, %405 ]
  %418 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %417, i64 0, i32 0
  store i8 1, i8* %418, align 8
  %419 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %417, i64 0, i32 1
  store i8 0, i8* %419, align 1
  %420 = getelementptr inbounds i8, i8* %418, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %420, i8* nonnull align 2 %380, i64 6, i1 false)
  %421 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %417, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %421, align 8
  %422 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %417, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %422, align 8
  %423 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %417, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %373, i64* %423, align 8
  %424 = load i64, i64* %46, align 8
  %425 = add i64 %424, 1
  store i64 %425, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %380)
  br label %1566

426:                                              ; preds = %7
  %427 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %428 = icmp eq %"class.v8::internal::RegisterValues"* %5, null
  br i1 %428, label %429, label %475

429:                                              ; preds = %426
  %430 = getelementptr inbounds [6 x i8], [6 x i8]* %15, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %430)
  %431 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %432 = bitcast %"class.v8::internal::TranslatedValue"*** %431 to i64*
  %433 = load i64, i64* %432, align 8
  %434 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %435 = bitcast %"class.v8::internal::TranslatedValue"*** %434 to i64*
  %436 = load i64, i64* %435, align 8
  %437 = sub i64 %433, %436
  %438 = icmp eq i64 %437, 0
  %439 = shl i64 %437, 4
  %440 = add i64 %439, -1
  %441 = select i1 %438, i64 0, i64 %440
  %442 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %443 = load i64, i64* %442, align 8
  %444 = load i64, i64* %46, align 8
  %445 = add i64 %444, %443
  %446 = icmp eq i64 %441, %445
  %447 = inttoptr i64 %436 to %"class.v8::internal::TranslatedValue"**
  %448 = inttoptr i64 %433 to %"class.v8::internal::TranslatedValue"**
  br i1 %446, label %449, label %455

449:                                              ; preds = %429
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %450 = load i64, i64* %46, align 8
  %451 = load i64, i64* %442, align 8
  %452 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %434, align 8
  %453 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %431, align 8
  %454 = add i64 %451, %450
  br label %455

455:                                              ; preds = %449, %429
  %456 = phi i64 [ %454, %449 ], [ %445, %429 ]
  %457 = phi %"class.v8::internal::TranslatedValue"** [ %453, %449 ], [ %448, %429 ]
  %458 = phi %"class.v8::internal::TranslatedValue"** [ %452, %449 ], [ %447, %429 ]
  %459 = icmp eq %"class.v8::internal::TranslatedValue"** %457, %458
  br i1 %459, label %466, label %460

460:                                              ; preds = %455
  %461 = lshr i64 %456, 7
  %462 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %458, i64 %461
  %463 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %462, align 8
  %464 = and i64 %456, 127
  %465 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %463, i64 %464
  br label %466

466:                                              ; preds = %460, %455
  %467 = phi %"class.v8::internal::TranslatedValue"* [ %465, %460 ], [ null, %455 ]
  %468 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %467, i64 0, i32 0
  store i8 0, i8* %468, align 8
  %469 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %467, i64 0, i32 1
  store i8 0, i8* %469, align 1
  %470 = getelementptr inbounds i8, i8* %468, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %470, i8* nonnull align 2 %430, i64 6, i1 false)
  %471 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %467, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %471, align 8
  %472 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %467, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %472, align 8
  %473 = load i64, i64* %46, align 8
  %474 = add i64 %473, 1
  store i64 %474, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %430)
  br label %1566

475:                                              ; preds = %426
  %476 = zext i32 %427 to i64
  %477 = getelementptr inbounds %"class.v8::internal::RegisterValues", %"class.v8::internal::RegisterValues"* %5, i64 0, i32 0, i64 %476
  %478 = load i64, i64* %477, align 8
  %479 = icmp eq %struct._IO_FILE* %6, null
  br i1 %479, label %482, label %480

480:                                              ; preds = %475
  %481 = call i8* @_ZNK6disasm13NameConverter17NameOfCPURegisterEi(%"class.disasm::NameConverter"* nonnull %8, i32 %427) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.51, i64 0, i64 0), i64 %478, i8* %481) #9
  br label %482

482:                                              ; preds = %475, %480
  %483 = getelementptr inbounds [6 x i8], [6 x i8]* %16, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %483)
  %484 = trunc i64 %478 to i32
  %485 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %486 = bitcast %"class.v8::internal::TranslatedValue"*** %485 to i64*
  %487 = load i64, i64* %486, align 8
  %488 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %489 = bitcast %"class.v8::internal::TranslatedValue"*** %488 to i64*
  %490 = load i64, i64* %489, align 8
  %491 = sub i64 %487, %490
  %492 = icmp eq i64 %491, 0
  %493 = shl i64 %491, 4
  %494 = add i64 %493, -1
  %495 = select i1 %492, i64 0, i64 %494
  %496 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %497 = load i64, i64* %496, align 8
  %498 = load i64, i64* %46, align 8
  %499 = add i64 %498, %497
  %500 = icmp eq i64 %495, %499
  %501 = inttoptr i64 %490 to %"class.v8::internal::TranslatedValue"**
  %502 = inttoptr i64 %487 to %"class.v8::internal::TranslatedValue"**
  br i1 %500, label %503, label %509

503:                                              ; preds = %482
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %504 = load i64, i64* %46, align 8
  %505 = load i64, i64* %496, align 8
  %506 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %488, align 8
  %507 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %485, align 8
  %508 = add i64 %505, %504
  br label %509

509:                                              ; preds = %503, %482
  %510 = phi i64 [ %508, %503 ], [ %499, %482 ]
  %511 = phi %"class.v8::internal::TranslatedValue"** [ %507, %503 ], [ %502, %482 ]
  %512 = phi %"class.v8::internal::TranslatedValue"** [ %506, %503 ], [ %501, %482 ]
  %513 = icmp eq %"class.v8::internal::TranslatedValue"** %511, %512
  br i1 %513, label %520, label %514

514:                                              ; preds = %509
  %515 = lshr i64 %510, 7
  %516 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %512, i64 %515
  %517 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %516, align 8
  %518 = and i64 %510, 127
  %519 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %517, i64 %518
  br label %520

520:                                              ; preds = %514, %509
  %521 = phi %"class.v8::internal::TranslatedValue"* [ %519, %514 ], [ null, %509 ]
  %522 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %521, i64 0, i32 0
  store i8 2, i8* %522, align 8
  %523 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %521, i64 0, i32 1
  store i8 0, i8* %523, align 1
  %524 = getelementptr inbounds i8, i8* %522, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %524, i8* nonnull align 2 %483, i64 6, i1 false)
  %525 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %521, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %525, align 8
  %526 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %521, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %526, align 8
  %527 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %521, i64 0, i32 4
  %528 = bitcast %union.anon* %527 to i32*
  store i32 %484, i32* %528, align 8
  %529 = load i64, i64* %46, align 8
  %530 = add i64 %529, 1
  store i64 %530, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %483)
  br label %1566

531:                                              ; preds = %7
  %532 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %533 = icmp eq %"class.v8::internal::RegisterValues"* %5, null
  br i1 %533, label %534, label %580

534:                                              ; preds = %531
  %535 = getelementptr inbounds [6 x i8], [6 x i8]* %17, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %535)
  %536 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %537 = bitcast %"class.v8::internal::TranslatedValue"*** %536 to i64*
  %538 = load i64, i64* %537, align 8
  %539 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %540 = bitcast %"class.v8::internal::TranslatedValue"*** %539 to i64*
  %541 = load i64, i64* %540, align 8
  %542 = sub i64 %538, %541
  %543 = icmp eq i64 %542, 0
  %544 = shl i64 %542, 4
  %545 = add i64 %544, -1
  %546 = select i1 %543, i64 0, i64 %545
  %547 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %548 = load i64, i64* %547, align 8
  %549 = load i64, i64* %46, align 8
  %550 = add i64 %549, %548
  %551 = icmp eq i64 %546, %550
  %552 = inttoptr i64 %541 to %"class.v8::internal::TranslatedValue"**
  %553 = inttoptr i64 %538 to %"class.v8::internal::TranslatedValue"**
  br i1 %551, label %554, label %560

554:                                              ; preds = %534
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %555 = load i64, i64* %46, align 8
  %556 = load i64, i64* %547, align 8
  %557 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %539, align 8
  %558 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %536, align 8
  %559 = add i64 %556, %555
  br label %560

560:                                              ; preds = %554, %534
  %561 = phi i64 [ %559, %554 ], [ %550, %534 ]
  %562 = phi %"class.v8::internal::TranslatedValue"** [ %558, %554 ], [ %553, %534 ]
  %563 = phi %"class.v8::internal::TranslatedValue"** [ %557, %554 ], [ %552, %534 ]
  %564 = icmp eq %"class.v8::internal::TranslatedValue"** %562, %563
  br i1 %564, label %571, label %565

565:                                              ; preds = %560
  %566 = lshr i64 %561, 7
  %567 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %563, i64 %566
  %568 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %567, align 8
  %569 = and i64 %561, 127
  %570 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %568, i64 %569
  br label %571

571:                                              ; preds = %565, %560
  %572 = phi %"class.v8::internal::TranslatedValue"* [ %570, %565 ], [ null, %560 ]
  %573 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %572, i64 0, i32 0
  store i8 0, i8* %573, align 8
  %574 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %572, i64 0, i32 1
  store i8 0, i8* %574, align 1
  %575 = getelementptr inbounds i8, i8* %573, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %575, i8* nonnull align 2 %535, i64 6, i1 false)
  %576 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %572, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %576, align 8
  %577 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %572, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %577, align 8
  %578 = load i64, i64* %46, align 8
  %579 = add i64 %578, 1
  store i64 %579, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %535)
  br label %1566

580:                                              ; preds = %531
  %581 = zext i32 %532 to i64
  %582 = getelementptr inbounds %"class.v8::internal::RegisterValues", %"class.v8::internal::RegisterValues"* %5, i64 0, i32 0, i64 %581
  %583 = load i64, i64* %582, align 8
  %584 = icmp eq %struct._IO_FILE* %6, null
  br i1 %584, label %587, label %585

585:                                              ; preds = %580
  %586 = call i8* @_ZNK6disasm13NameConverter17NameOfCPURegisterEi(%"class.disasm::NameConverter"* nonnull %8, i32 %532) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.52, i64 0, i64 0), i64 %583, i8* %586) #9
  br label %587

587:                                              ; preds = %580, %585
  %588 = getelementptr inbounds [6 x i8], [6 x i8]* %18, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %588)
  %589 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %590 = bitcast %"class.v8::internal::TranslatedValue"*** %589 to i64*
  %591 = load i64, i64* %590, align 8
  %592 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %593 = bitcast %"class.v8::internal::TranslatedValue"*** %592 to i64*
  %594 = load i64, i64* %593, align 8
  %595 = sub i64 %591, %594
  %596 = icmp eq i64 %595, 0
  %597 = shl i64 %595, 4
  %598 = add i64 %597, -1
  %599 = select i1 %596, i64 0, i64 %598
  %600 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %601 = load i64, i64* %600, align 8
  %602 = load i64, i64* %46, align 8
  %603 = add i64 %602, %601
  %604 = icmp eq i64 %599, %603
  %605 = inttoptr i64 %594 to %"class.v8::internal::TranslatedValue"**
  %606 = inttoptr i64 %591 to %"class.v8::internal::TranslatedValue"**
  br i1 %604, label %607, label %613

607:                                              ; preds = %587
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %608 = load i64, i64* %46, align 8
  %609 = load i64, i64* %600, align 8
  %610 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %592, align 8
  %611 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %589, align 8
  %612 = add i64 %609, %608
  br label %613

613:                                              ; preds = %607, %587
  %614 = phi i64 [ %612, %607 ], [ %603, %587 ]
  %615 = phi %"class.v8::internal::TranslatedValue"** [ %611, %607 ], [ %606, %587 ]
  %616 = phi %"class.v8::internal::TranslatedValue"** [ %610, %607 ], [ %605, %587 ]
  %617 = icmp eq %"class.v8::internal::TranslatedValue"** %615, %616
  br i1 %617, label %624, label %618

618:                                              ; preds = %613
  %619 = lshr i64 %614, 7
  %620 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %616, i64 %619
  %621 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %620, align 8
  %622 = and i64 %614, 127
  %623 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %621, i64 %622
  br label %624

624:                                              ; preds = %618, %613
  %625 = phi %"class.v8::internal::TranslatedValue"* [ %623, %618 ], [ null, %613 ]
  %626 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %625, i64 0, i32 0
  store i8 3, i8* %626, align 8
  %627 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %625, i64 0, i32 1
  store i8 0, i8* %627, align 1
  %628 = getelementptr inbounds i8, i8* %626, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %628, i8* nonnull align 2 %588, i64 6, i1 false)
  %629 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %625, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %629, align 8
  %630 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %625, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %630, align 8
  %631 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %625, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %583, i64* %631, align 8
  %632 = load i64, i64* %46, align 8
  %633 = add i64 %632, 1
  store i64 %633, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %588)
  br label %1566

634:                                              ; preds = %7
  %635 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %636 = icmp eq %"class.v8::internal::RegisterValues"* %5, null
  br i1 %636, label %637, label %683

637:                                              ; preds = %634
  %638 = getelementptr inbounds [6 x i8], [6 x i8]* %19, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %638)
  %639 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %640 = bitcast %"class.v8::internal::TranslatedValue"*** %639 to i64*
  %641 = load i64, i64* %640, align 8
  %642 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %643 = bitcast %"class.v8::internal::TranslatedValue"*** %642 to i64*
  %644 = load i64, i64* %643, align 8
  %645 = sub i64 %641, %644
  %646 = icmp eq i64 %645, 0
  %647 = shl i64 %645, 4
  %648 = add i64 %647, -1
  %649 = select i1 %646, i64 0, i64 %648
  %650 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %651 = load i64, i64* %650, align 8
  %652 = load i64, i64* %46, align 8
  %653 = add i64 %652, %651
  %654 = icmp eq i64 %649, %653
  %655 = inttoptr i64 %644 to %"class.v8::internal::TranslatedValue"**
  %656 = inttoptr i64 %641 to %"class.v8::internal::TranslatedValue"**
  br i1 %654, label %657, label %663

657:                                              ; preds = %637
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %658 = load i64, i64* %46, align 8
  %659 = load i64, i64* %650, align 8
  %660 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %642, align 8
  %661 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %639, align 8
  %662 = add i64 %659, %658
  br label %663

663:                                              ; preds = %657, %637
  %664 = phi i64 [ %662, %657 ], [ %653, %637 ]
  %665 = phi %"class.v8::internal::TranslatedValue"** [ %661, %657 ], [ %656, %637 ]
  %666 = phi %"class.v8::internal::TranslatedValue"** [ %660, %657 ], [ %655, %637 ]
  %667 = icmp eq %"class.v8::internal::TranslatedValue"** %665, %666
  br i1 %667, label %674, label %668

668:                                              ; preds = %663
  %669 = lshr i64 %664, 7
  %670 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %666, i64 %669
  %671 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %670, align 8
  %672 = and i64 %664, 127
  %673 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %671, i64 %672
  br label %674

674:                                              ; preds = %668, %663
  %675 = phi %"class.v8::internal::TranslatedValue"* [ %673, %668 ], [ null, %663 ]
  %676 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %675, i64 0, i32 0
  store i8 0, i8* %676, align 8
  %677 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %675, i64 0, i32 1
  store i8 0, i8* %677, align 1
  %678 = getelementptr inbounds i8, i8* %676, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %678, i8* nonnull align 2 %638, i64 6, i1 false)
  %679 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %675, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %679, align 8
  %680 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %675, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %680, align 8
  %681 = load i64, i64* %46, align 8
  %682 = add i64 %681, 1
  store i64 %682, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %638)
  br label %1566

683:                                              ; preds = %634
  %684 = zext i32 %635 to i64
  %685 = getelementptr inbounds %"class.v8::internal::RegisterValues", %"class.v8::internal::RegisterValues"* %5, i64 0, i32 0, i64 %684
  %686 = load i64, i64* %685, align 8
  %687 = icmp eq %struct._IO_FILE* %6, null
  br i1 %687, label %690, label %688

688:                                              ; preds = %683
  %689 = call i8* @_ZNK6disasm13NameConverter17NameOfCPURegisterEi(%"class.disasm::NameConverter"* nonnull %8, i32 %635) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53, i64 0, i64 0), i64 %686, i8* %689) #9
  br label %690

690:                                              ; preds = %683, %688
  %691 = getelementptr inbounds [6 x i8], [6 x i8]* %20, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %691)
  %692 = trunc i64 %686 to i32
  %693 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %694 = bitcast %"class.v8::internal::TranslatedValue"*** %693 to i64*
  %695 = load i64, i64* %694, align 8
  %696 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %697 = bitcast %"class.v8::internal::TranslatedValue"*** %696 to i64*
  %698 = load i64, i64* %697, align 8
  %699 = sub i64 %695, %698
  %700 = icmp eq i64 %699, 0
  %701 = shl i64 %699, 4
  %702 = add i64 %701, -1
  %703 = select i1 %700, i64 0, i64 %702
  %704 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %705 = load i64, i64* %704, align 8
  %706 = load i64, i64* %46, align 8
  %707 = add i64 %706, %705
  %708 = icmp eq i64 %703, %707
  %709 = inttoptr i64 %698 to %"class.v8::internal::TranslatedValue"**
  %710 = inttoptr i64 %695 to %"class.v8::internal::TranslatedValue"**
  br i1 %708, label %711, label %717

711:                                              ; preds = %690
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %712 = load i64, i64* %46, align 8
  %713 = load i64, i64* %704, align 8
  %714 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %696, align 8
  %715 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %693, align 8
  %716 = add i64 %713, %712
  br label %717

717:                                              ; preds = %711, %690
  %718 = phi i64 [ %716, %711 ], [ %707, %690 ]
  %719 = phi %"class.v8::internal::TranslatedValue"** [ %715, %711 ], [ %710, %690 ]
  %720 = phi %"class.v8::internal::TranslatedValue"** [ %714, %711 ], [ %709, %690 ]
  %721 = icmp eq %"class.v8::internal::TranslatedValue"** %719, %720
  br i1 %721, label %728, label %722

722:                                              ; preds = %717
  %723 = lshr i64 %718, 7
  %724 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %720, i64 %723
  %725 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %724, align 8
  %726 = and i64 %718, 127
  %727 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %725, i64 %726
  br label %728

728:                                              ; preds = %722, %717
  %729 = phi %"class.v8::internal::TranslatedValue"* [ %727, %722 ], [ null, %717 ]
  %730 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %729, i64 0, i32 0
  store i8 5, i8* %730, align 8
  %731 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %729, i64 0, i32 1
  store i8 0, i8* %731, align 1
  %732 = getelementptr inbounds i8, i8* %730, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %732, i8* nonnull align 2 %691, i64 6, i1 false)
  %733 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %729, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %733, align 8
  %734 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %729, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %734, align 8
  %735 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %729, i64 0, i32 4
  %736 = bitcast %union.anon* %735 to i32*
  store i32 %692, i32* %736, align 8
  %737 = load i64, i64* %46, align 8
  %738 = add i64 %737, 1
  store i64 %738, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %691)
  br label %1566

739:                                              ; preds = %7
  %740 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %741 = icmp eq %"class.v8::internal::RegisterValues"* %5, null
  br i1 %741, label %742, label %788

742:                                              ; preds = %739
  %743 = getelementptr inbounds [6 x i8], [6 x i8]* %21, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %743)
  %744 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %745 = bitcast %"class.v8::internal::TranslatedValue"*** %744 to i64*
  %746 = load i64, i64* %745, align 8
  %747 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %748 = bitcast %"class.v8::internal::TranslatedValue"*** %747 to i64*
  %749 = load i64, i64* %748, align 8
  %750 = sub i64 %746, %749
  %751 = icmp eq i64 %750, 0
  %752 = shl i64 %750, 4
  %753 = add i64 %752, -1
  %754 = select i1 %751, i64 0, i64 %753
  %755 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %756 = load i64, i64* %755, align 8
  %757 = load i64, i64* %46, align 8
  %758 = add i64 %757, %756
  %759 = icmp eq i64 %754, %758
  %760 = inttoptr i64 %749 to %"class.v8::internal::TranslatedValue"**
  %761 = inttoptr i64 %746 to %"class.v8::internal::TranslatedValue"**
  br i1 %759, label %762, label %768

762:                                              ; preds = %742
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %763 = load i64, i64* %46, align 8
  %764 = load i64, i64* %755, align 8
  %765 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %747, align 8
  %766 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %744, align 8
  %767 = add i64 %764, %763
  br label %768

768:                                              ; preds = %762, %742
  %769 = phi i64 [ %767, %762 ], [ %758, %742 ]
  %770 = phi %"class.v8::internal::TranslatedValue"** [ %766, %762 ], [ %761, %742 ]
  %771 = phi %"class.v8::internal::TranslatedValue"** [ %765, %762 ], [ %760, %742 ]
  %772 = icmp eq %"class.v8::internal::TranslatedValue"** %770, %771
  br i1 %772, label %779, label %773

773:                                              ; preds = %768
  %774 = lshr i64 %769, 7
  %775 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %771, i64 %774
  %776 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %775, align 8
  %777 = and i64 %769, 127
  %778 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %776, i64 %777
  br label %779

779:                                              ; preds = %773, %768
  %780 = phi %"class.v8::internal::TranslatedValue"* [ %778, %773 ], [ null, %768 ]
  %781 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %780, i64 0, i32 0
  store i8 0, i8* %781, align 8
  %782 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %780, i64 0, i32 1
  store i8 0, i8* %782, align 1
  %783 = getelementptr inbounds i8, i8* %781, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %783, i8* nonnull align 2 %743, i64 6, i1 false)
  %784 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %780, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %784, align 8
  %785 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %780, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %785, align 8
  %786 = load i64, i64* %46, align 8
  %787 = add i64 %786, 1
  store i64 %787, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %743)
  br label %1566

788:                                              ; preds = %739
  %789 = zext i32 %740 to i64
  %790 = getelementptr inbounds %"class.v8::internal::RegisterValues", %"class.v8::internal::RegisterValues"* %5, i64 0, i32 0, i64 %789
  %791 = load i64, i64* %790, align 8
  %792 = icmp eq %struct._IO_FILE* %6, null
  br i1 %792, label %795, label %793

793:                                              ; preds = %788
  %794 = call i8* @_ZNK6disasm13NameConverter17NameOfCPURegisterEi(%"class.disasm::NameConverter"* nonnull %8, i32 %740) #9
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.54, i64 0, i64 0), i64 %791, i8* %794) #9
  br label %795

795:                                              ; preds = %788, %793
  %796 = getelementptr inbounds [6 x i8], [6 x i8]* %22, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %796)
  %797 = trunc i64 %791 to i32
  %798 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %799 = bitcast %"class.v8::internal::TranslatedValue"*** %798 to i64*
  %800 = load i64, i64* %799, align 8
  %801 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %802 = bitcast %"class.v8::internal::TranslatedValue"*** %801 to i64*
  %803 = load i64, i64* %802, align 8
  %804 = sub i64 %800, %803
  %805 = icmp eq i64 %804, 0
  %806 = shl i64 %804, 4
  %807 = add i64 %806, -1
  %808 = select i1 %805, i64 0, i64 %807
  %809 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %810 = load i64, i64* %809, align 8
  %811 = load i64, i64* %46, align 8
  %812 = add i64 %811, %810
  %813 = icmp eq i64 %808, %812
  %814 = inttoptr i64 %803 to %"class.v8::internal::TranslatedValue"**
  %815 = inttoptr i64 %800 to %"class.v8::internal::TranslatedValue"**
  br i1 %813, label %816, label %822

816:                                              ; preds = %795
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %817 = load i64, i64* %46, align 8
  %818 = load i64, i64* %809, align 8
  %819 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %801, align 8
  %820 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %798, align 8
  %821 = add i64 %818, %817
  br label %822

822:                                              ; preds = %816, %795
  %823 = phi i64 [ %821, %816 ], [ %812, %795 ]
  %824 = phi %"class.v8::internal::TranslatedValue"** [ %820, %816 ], [ %815, %795 ]
  %825 = phi %"class.v8::internal::TranslatedValue"** [ %819, %816 ], [ %814, %795 ]
  %826 = icmp eq %"class.v8::internal::TranslatedValue"** %824, %825
  br i1 %826, label %833, label %827

827:                                              ; preds = %822
  %828 = lshr i64 %823, 7
  %829 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %825, i64 %828
  %830 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %829, align 8
  %831 = and i64 %823, 127
  %832 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %830, i64 %831
  br label %833

833:                                              ; preds = %827, %822
  %834 = phi %"class.v8::internal::TranslatedValue"* [ %832, %827 ], [ null, %822 ]
  %835 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %834, i64 0, i32 0
  store i8 6, i8* %835, align 8
  %836 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %834, i64 0, i32 1
  store i8 0, i8* %836, align 1
  %837 = getelementptr inbounds i8, i8* %835, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %837, i8* nonnull align 2 %796, i64 6, i1 false)
  %838 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %834, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %838, align 8
  %839 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %834, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %839, align 8
  %840 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %834, i64 0, i32 4
  %841 = bitcast %union.anon* %840 to i32*
  store i32 %797, i32* %841, align 8
  %842 = load i64, i64* %46, align 8
  %843 = add i64 %842, 1
  store i64 %843, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %796)
  br label %1566

844:                                              ; preds = %7
  %845 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %846 = icmp eq %"class.v8::internal::RegisterValues"* %5, null
  br i1 %846, label %847, label %893

847:                                              ; preds = %844
  %848 = getelementptr inbounds [6 x i8], [6 x i8]* %23, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %848)
  %849 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %850 = bitcast %"class.v8::internal::TranslatedValue"*** %849 to i64*
  %851 = load i64, i64* %850, align 8
  %852 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %853 = bitcast %"class.v8::internal::TranslatedValue"*** %852 to i64*
  %854 = load i64, i64* %853, align 8
  %855 = sub i64 %851, %854
  %856 = icmp eq i64 %855, 0
  %857 = shl i64 %855, 4
  %858 = add i64 %857, -1
  %859 = select i1 %856, i64 0, i64 %858
  %860 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %861 = load i64, i64* %860, align 8
  %862 = load i64, i64* %46, align 8
  %863 = add i64 %862, %861
  %864 = icmp eq i64 %859, %863
  %865 = inttoptr i64 %854 to %"class.v8::internal::TranslatedValue"**
  %866 = inttoptr i64 %851 to %"class.v8::internal::TranslatedValue"**
  br i1 %864, label %867, label %873

867:                                              ; preds = %847
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %868 = load i64, i64* %46, align 8
  %869 = load i64, i64* %860, align 8
  %870 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %852, align 8
  %871 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %849, align 8
  %872 = add i64 %869, %868
  br label %873

873:                                              ; preds = %867, %847
  %874 = phi i64 [ %872, %867 ], [ %863, %847 ]
  %875 = phi %"class.v8::internal::TranslatedValue"** [ %871, %867 ], [ %866, %847 ]
  %876 = phi %"class.v8::internal::TranslatedValue"** [ %870, %867 ], [ %865, %847 ]
  %877 = icmp eq %"class.v8::internal::TranslatedValue"** %875, %876
  br i1 %877, label %884, label %878

878:                                              ; preds = %873
  %879 = lshr i64 %874, 7
  %880 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %876, i64 %879
  %881 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %880, align 8
  %882 = and i64 %874, 127
  %883 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %881, i64 %882
  br label %884

884:                                              ; preds = %878, %873
  %885 = phi %"class.v8::internal::TranslatedValue"* [ %883, %878 ], [ null, %873 ]
  %886 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %885, i64 0, i32 0
  store i8 0, i8* %886, align 8
  %887 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %885, i64 0, i32 1
  store i8 0, i8* %887, align 1
  %888 = getelementptr inbounds i8, i8* %886, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %888, i8* nonnull align 2 %848, i64 6, i1 false)
  %889 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %885, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %889, align 8
  %890 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %885, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %890, align 8
  %891 = load i64, i64* %46, align 8
  %892 = add i64 %891, 1
  store i64 %892, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %848)
  br label %1566

893:                                              ; preds = %844
  %894 = call i32 @_ZNK2v88internal14RegisterValues16GetFloatRegisterEj(%"class.v8::internal::RegisterValues"* nonnull %5, i32 %845) #9
  %895 = icmp eq %struct._IO_FILE* %6, null
  br i1 %895, label %906, label %896

896:                                              ; preds = %893
  %897 = bitcast i32 %894 to float
  %898 = fpext float %897 to double
  %899 = icmp eq i32 %845, -1
  br i1 %899, label %904, label %900

900:                                              ; preds = %896
  %901 = sext i32 %845 to i64
  %902 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names, i64 0, i64 %901
  %903 = load i8*, i8** %902, align 8
  br label %904

904:                                              ; preds = %896, %900
  %905 = phi i8* [ %903, %900 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.155, i64 0, i64 0), %896 ]
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55, i64 0, i64 0), double %898, i8* %905) #9
  br label %906

906:                                              ; preds = %893, %904
  %907 = getelementptr inbounds [6 x i8], [6 x i8]* %24, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %907)
  %908 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %909 = bitcast %"class.v8::internal::TranslatedValue"*** %908 to i64*
  %910 = load i64, i64* %909, align 8
  %911 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %912 = bitcast %"class.v8::internal::TranslatedValue"*** %911 to i64*
  %913 = load i64, i64* %912, align 8
  %914 = sub i64 %910, %913
  %915 = icmp eq i64 %914, 0
  %916 = shl i64 %914, 4
  %917 = add i64 %916, -1
  %918 = select i1 %915, i64 0, i64 %917
  %919 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %920 = load i64, i64* %919, align 8
  %921 = load i64, i64* %46, align 8
  %922 = add i64 %921, %920
  %923 = icmp eq i64 %918, %922
  %924 = inttoptr i64 %913 to %"class.v8::internal::TranslatedValue"**
  %925 = inttoptr i64 %910 to %"class.v8::internal::TranslatedValue"**
  br i1 %923, label %926, label %932

926:                                              ; preds = %906
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %927 = load i64, i64* %46, align 8
  %928 = load i64, i64* %919, align 8
  %929 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %911, align 8
  %930 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %908, align 8
  %931 = add i64 %928, %927
  br label %932

932:                                              ; preds = %926, %906
  %933 = phi i64 [ %931, %926 ], [ %922, %906 ]
  %934 = phi %"class.v8::internal::TranslatedValue"** [ %930, %926 ], [ %925, %906 ]
  %935 = phi %"class.v8::internal::TranslatedValue"** [ %929, %926 ], [ %924, %906 ]
  %936 = icmp eq %"class.v8::internal::TranslatedValue"** %934, %935
  br i1 %936, label %943, label %937

937:                                              ; preds = %932
  %938 = lshr i64 %933, 7
  %939 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %935, i64 %938
  %940 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %939, align 8
  %941 = and i64 %933, 127
  %942 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %940, i64 %941
  br label %943

943:                                              ; preds = %937, %932
  %944 = phi %"class.v8::internal::TranslatedValue"* [ %942, %937 ], [ null, %932 ]
  %945 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %944, i64 0, i32 0
  store i8 7, i8* %945, align 8
  %946 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %944, i64 0, i32 1
  store i8 0, i8* %946, align 1
  %947 = getelementptr inbounds i8, i8* %945, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %947, i8* nonnull align 2 %907, i64 6, i1 false)
  %948 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %944, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %948, align 8
  %949 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %944, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %949, align 8
  %950 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %944, i64 0, i32 4
  %951 = bitcast %union.anon* %950 to i32*
  store i32 %894, i32* %951, align 8
  %952 = load i64, i64* %46, align 8
  %953 = add i64 %952, 1
  store i64 %953, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %907)
  br label %1566

954:                                              ; preds = %7
  %955 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %956 = icmp eq %"class.v8::internal::RegisterValues"* %5, null
  br i1 %956, label %957, label %1003

957:                                              ; preds = %954
  %958 = getelementptr inbounds [6 x i8], [6 x i8]* %25, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %958)
  %959 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %960 = bitcast %"class.v8::internal::TranslatedValue"*** %959 to i64*
  %961 = load i64, i64* %960, align 8
  %962 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %963 = bitcast %"class.v8::internal::TranslatedValue"*** %962 to i64*
  %964 = load i64, i64* %963, align 8
  %965 = sub i64 %961, %964
  %966 = icmp eq i64 %965, 0
  %967 = shl i64 %965, 4
  %968 = add i64 %967, -1
  %969 = select i1 %966, i64 0, i64 %968
  %970 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %971 = load i64, i64* %970, align 8
  %972 = load i64, i64* %46, align 8
  %973 = add i64 %972, %971
  %974 = icmp eq i64 %969, %973
  %975 = inttoptr i64 %964 to %"class.v8::internal::TranslatedValue"**
  %976 = inttoptr i64 %961 to %"class.v8::internal::TranslatedValue"**
  br i1 %974, label %977, label %983

977:                                              ; preds = %957
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %978 = load i64, i64* %46, align 8
  %979 = load i64, i64* %970, align 8
  %980 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %962, align 8
  %981 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %959, align 8
  %982 = add i64 %979, %978
  br label %983

983:                                              ; preds = %977, %957
  %984 = phi i64 [ %982, %977 ], [ %973, %957 ]
  %985 = phi %"class.v8::internal::TranslatedValue"** [ %981, %977 ], [ %976, %957 ]
  %986 = phi %"class.v8::internal::TranslatedValue"** [ %980, %977 ], [ %975, %957 ]
  %987 = icmp eq %"class.v8::internal::TranslatedValue"** %985, %986
  br i1 %987, label %994, label %988

988:                                              ; preds = %983
  %989 = lshr i64 %984, 7
  %990 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %986, i64 %989
  %991 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %990, align 8
  %992 = and i64 %984, 127
  %993 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %991, i64 %992
  br label %994

994:                                              ; preds = %988, %983
  %995 = phi %"class.v8::internal::TranslatedValue"* [ %993, %988 ], [ null, %983 ]
  %996 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %995, i64 0, i32 0
  store i8 0, i8* %996, align 8
  %997 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %995, i64 0, i32 1
  store i8 0, i8* %997, align 1
  %998 = getelementptr inbounds i8, i8* %996, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %998, i8* nonnull align 2 %958, i64 6, i1 false)
  %999 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %995, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %999, align 8
  %1000 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %995, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %1000, align 8
  %1001 = load i64, i64* %46, align 8
  %1002 = add i64 %1001, 1
  store i64 %1002, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %958)
  br label %1566

1003:                                             ; preds = %954
  %1004 = zext i32 %955 to i64
  %1005 = getelementptr inbounds %"class.v8::internal::RegisterValues", %"class.v8::internal::RegisterValues"* %5, i64 0, i32 1, i64 %1004, i32 0
  %1006 = load i64, i64* %1005, align 8
  %1007 = icmp eq %struct._IO_FILE* %6, null
  br i1 %1007, label %1017, label %1008

1008:                                             ; preds = %1003
  %1009 = bitcast i64 %1006 to double
  %1010 = icmp eq i32 %955, -1
  br i1 %1010, label %1015, label %1011

1011:                                             ; preds = %1008
  %1012 = sext i32 %955 to i64
  %1013 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names, i64 0, i64 %1012
  %1014 = load i8*, i8** %1013, align 8
  br label %1015

1015:                                             ; preds = %1008, %1011
  %1016 = phi i8* [ %1014, %1011 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.155, i64 0, i64 0), %1008 ]
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.56, i64 0, i64 0), double %1009, i8* %1016) #9
  br label %1017

1017:                                             ; preds = %1003, %1015
  %1018 = getelementptr inbounds [6 x i8], [6 x i8]* %26, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %1018)
  %1019 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %1020 = bitcast %"class.v8::internal::TranslatedValue"*** %1019 to i64*
  %1021 = load i64, i64* %1020, align 8
  %1022 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %1023 = bitcast %"class.v8::internal::TranslatedValue"*** %1022 to i64*
  %1024 = load i64, i64* %1023, align 8
  %1025 = sub i64 %1021, %1024
  %1026 = icmp eq i64 %1025, 0
  %1027 = shl i64 %1025, 4
  %1028 = add i64 %1027, -1
  %1029 = select i1 %1026, i64 0, i64 %1028
  %1030 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %1031 = load i64, i64* %1030, align 8
  %1032 = load i64, i64* %46, align 8
  %1033 = add i64 %1032, %1031
  %1034 = icmp eq i64 %1029, %1033
  %1035 = inttoptr i64 %1024 to %"class.v8::internal::TranslatedValue"**
  %1036 = inttoptr i64 %1021 to %"class.v8::internal::TranslatedValue"**
  br i1 %1034, label %1037, label %1043

1037:                                             ; preds = %1017
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %1038 = load i64, i64* %46, align 8
  %1039 = load i64, i64* %1030, align 8
  %1040 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %1022, align 8
  %1041 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %1019, align 8
  %1042 = add i64 %1039, %1038
  br label %1043

1043:                                             ; preds = %1037, %1017
  %1044 = phi i64 [ %1042, %1037 ], [ %1033, %1017 ]
  %1045 = phi %"class.v8::internal::TranslatedValue"** [ %1041, %1037 ], [ %1036, %1017 ]
  %1046 = phi %"class.v8::internal::TranslatedValue"** [ %1040, %1037 ], [ %1035, %1017 ]
  %1047 = icmp eq %"class.v8::internal::TranslatedValue"** %1045, %1046
  br i1 %1047, label %1054, label %1048

1048:                                             ; preds = %1043
  %1049 = lshr i64 %1044, 7
  %1050 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %1046, i64 %1049
  %1051 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %1050, align 8
  %1052 = and i64 %1044, 127
  %1053 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1051, i64 %1052
  br label %1054

1054:                                             ; preds = %1048, %1043
  %1055 = phi %"class.v8::internal::TranslatedValue"* [ %1053, %1048 ], [ null, %1043 ]
  %1056 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1055, i64 0, i32 0
  store i8 8, i8* %1056, align 8
  %1057 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1055, i64 0, i32 1
  store i8 0, i8* %1057, align 1
  %1058 = getelementptr inbounds i8, i8* %1056, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1058, i8* nonnull align 2 %1018, i64 6, i1 false)
  %1059 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1055, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %1059, align 8
  %1060 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1055, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %1060, align 8
  %1061 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1055, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %1006, i64* %1061, align 8
  %1062 = load i64, i64* %46, align 8
  %1063 = add i64 %1062, 1
  store i64 %1063, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %1018)
  br label %1566

1064:                                             ; preds = %7
  %1065 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %1066 = call i32 @_ZN2v88internal14OptimizedFrame27StackSlotOffsetRelativeToFpEi(i32 %1065) #9
  %1067 = sext i32 %1066 to i64
  %1068 = add i64 %1067, %4
  %1069 = inttoptr i64 %1068 to i64*
  %1070 = load i64, i64* %1069, align 8
  %1071 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 3
  %1072 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %1071, align 8
  %1073 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1072, i64 0, i32 0, i32 4
  %1074 = load i64, i64* %1073, align 8
  %1075 = and i64 %1074, 4294967295
  %1076 = icmp eq i64 %1075, 0
  call void @llvm.assume(i1 %1076) #9
  %1077 = and i64 %1070, 4294967295
  %1078 = or i64 %1074, %1077
  %1079 = icmp eq %struct._IO_FILE* %6, null
  br i1 %1079, label %1087, label %1080

1080:                                             ; preds = %1064
  %1081 = icmp slt i32 %1066, 0
  %1082 = select i1 %1081, i32 45, i32 43
  %1083 = sub nsw i32 0, %1066
  %1084 = select i1 %1081, i32 %1083, i32 %1066
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.57, i64 0, i64 0), i64 %1078, i32 %1082, i32 %1084) #9
  %1085 = bitcast %"class.v8::internal::Object"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1085) #9
  %1086 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %27, i64 0, i32 0, i32 0
  store i64 %1078, i64* %1086, align 8
  call void @_ZNK2v88internal6Object10ShortPrintEP8_IO_FILE(%"class.v8::internal::Object"* nonnull %27, %struct._IO_FILE* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1085) #9
  br label %1087

1087:                                             ; preds = %1064, %1080
  %1088 = getelementptr inbounds [6 x i8], [6 x i8]* %28, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %1088)
  %1089 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %1090 = bitcast %"class.v8::internal::TranslatedValue"*** %1089 to i64*
  %1091 = load i64, i64* %1090, align 8
  %1092 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %1093 = bitcast %"class.v8::internal::TranslatedValue"*** %1092 to i64*
  %1094 = load i64, i64* %1093, align 8
  %1095 = sub i64 %1091, %1094
  %1096 = icmp eq i64 %1095, 0
  %1097 = shl i64 %1095, 4
  %1098 = add i64 %1097, -1
  %1099 = select i1 %1096, i64 0, i64 %1098
  %1100 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %1101 = load i64, i64* %1100, align 8
  %1102 = load i64, i64* %46, align 8
  %1103 = add i64 %1102, %1101
  %1104 = icmp eq i64 %1099, %1103
  %1105 = inttoptr i64 %1094 to %"class.v8::internal::TranslatedValue"**
  %1106 = inttoptr i64 %1091 to %"class.v8::internal::TranslatedValue"**
  br i1 %1104, label %1107, label %1113

1107:                                             ; preds = %1087
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %1108 = load i64, i64* %46, align 8
  %1109 = load i64, i64* %1100, align 8
  %1110 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %1092, align 8
  %1111 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %1089, align 8
  %1112 = add i64 %1109, %1108
  br label %1113

1113:                                             ; preds = %1107, %1087
  %1114 = phi i64 [ %1112, %1107 ], [ %1103, %1087 ]
  %1115 = phi %"class.v8::internal::TranslatedValue"** [ %1111, %1107 ], [ %1106, %1087 ]
  %1116 = phi %"class.v8::internal::TranslatedValue"** [ %1110, %1107 ], [ %1105, %1087 ]
  %1117 = icmp eq %"class.v8::internal::TranslatedValue"** %1115, %1116
  br i1 %1117, label %1124, label %1118

1118:                                             ; preds = %1113
  %1119 = lshr i64 %1114, 7
  %1120 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %1116, i64 %1119
  %1121 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %1120, align 8
  %1122 = and i64 %1114, 127
  %1123 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1121, i64 %1122
  br label %1124

1124:                                             ; preds = %1118, %1113
  %1125 = phi %"class.v8::internal::TranslatedValue"* [ %1123, %1118 ], [ null, %1113 ]
  %1126 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1125, i64 0, i32 0
  store i8 1, i8* %1126, align 8
  %1127 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1125, i64 0, i32 1
  store i8 0, i8* %1127, align 1
  %1128 = getelementptr inbounds i8, i8* %1126, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1128, i8* nonnull align 2 %1088, i64 6, i1 false)
  %1129 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1125, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %1129, align 8
  %1130 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1125, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %1130, align 8
  %1131 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1125, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %1078, i64* %1131, align 8
  %1132 = load i64, i64* %46, align 8
  %1133 = add i64 %1132, 1
  store i64 %1133, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %1088)
  br label %1566

1134:                                             ; preds = %7
  %1135 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %1136 = call i32 @_ZN2v88internal14OptimizedFrame27StackSlotOffsetRelativeToFpEi(i32 %1135) #9
  %1137 = sext i32 %1136 to i64
  %1138 = add i64 %1137, %4
  %1139 = inttoptr i64 %1138 to i32*
  %1140 = load i32, i32* %1139, align 4
  %1141 = icmp eq %struct._IO_FILE* %6, null
  br i1 %1141, label %1147, label %1142

1142:                                             ; preds = %1134
  %1143 = icmp slt i32 %1136, 0
  %1144 = select i1 %1143, i32 45, i32 43
  %1145 = sub nsw i32 0, %1136
  %1146 = select i1 %1143, i32 %1145, i32 %1136
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.58, i64 0, i64 0), i32 %1140, i32 %1144, i32 %1146) #9
  br label %1147

1147:                                             ; preds = %1134, %1142
  %1148 = getelementptr inbounds [6 x i8], [6 x i8]* %29, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %1148)
  %1149 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %1150 = bitcast %"class.v8::internal::TranslatedValue"*** %1149 to i64*
  %1151 = load i64, i64* %1150, align 8
  %1152 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %1153 = bitcast %"class.v8::internal::TranslatedValue"*** %1152 to i64*
  %1154 = load i64, i64* %1153, align 8
  %1155 = sub i64 %1151, %1154
  %1156 = icmp eq i64 %1155, 0
  %1157 = shl i64 %1155, 4
  %1158 = add i64 %1157, -1
  %1159 = select i1 %1156, i64 0, i64 %1158
  %1160 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %1161 = load i64, i64* %1160, align 8
  %1162 = load i64, i64* %46, align 8
  %1163 = add i64 %1162, %1161
  %1164 = icmp eq i64 %1159, %1163
  %1165 = inttoptr i64 %1154 to %"class.v8::internal::TranslatedValue"**
  %1166 = inttoptr i64 %1151 to %"class.v8::internal::TranslatedValue"**
  br i1 %1164, label %1167, label %1173

1167:                                             ; preds = %1147
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %1168 = load i64, i64* %46, align 8
  %1169 = load i64, i64* %1160, align 8
  %1170 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %1152, align 8
  %1171 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %1149, align 8
  %1172 = add i64 %1169, %1168
  br label %1173

1173:                                             ; preds = %1167, %1147
  %1174 = phi i64 [ %1172, %1167 ], [ %1163, %1147 ]
  %1175 = phi %"class.v8::internal::TranslatedValue"** [ %1171, %1167 ], [ %1166, %1147 ]
  %1176 = phi %"class.v8::internal::TranslatedValue"** [ %1170, %1167 ], [ %1165, %1147 ]
  %1177 = icmp eq %"class.v8::internal::TranslatedValue"** %1175, %1176
  br i1 %1177, label %1184, label %1178

1178:                                             ; preds = %1173
  %1179 = lshr i64 %1174, 7
  %1180 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %1176, i64 %1179
  %1181 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %1180, align 8
  %1182 = and i64 %1174, 127
  %1183 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1181, i64 %1182
  br label %1184

1184:                                             ; preds = %1178, %1173
  %1185 = phi %"class.v8::internal::TranslatedValue"* [ %1183, %1178 ], [ null, %1173 ]
  %1186 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1185, i64 0, i32 0
  store i8 2, i8* %1186, align 8
  %1187 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1185, i64 0, i32 1
  store i8 0, i8* %1187, align 1
  %1188 = getelementptr inbounds i8, i8* %1186, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1188, i8* nonnull align 2 %1148, i64 6, i1 false)
  %1189 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1185, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %1189, align 8
  %1190 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1185, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %1190, align 8
  %1191 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1185, i64 0, i32 4
  %1192 = bitcast %union.anon* %1191 to i32*
  store i32 %1140, i32* %1192, align 8
  %1193 = load i64, i64* %46, align 8
  %1194 = add i64 %1193, 1
  store i64 %1194, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %1148)
  br label %1566

1195:                                             ; preds = %7
  %1196 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %1197 = call i32 @_ZN2v88internal14OptimizedFrame27StackSlotOffsetRelativeToFpEi(i32 %1196) #9
  %1198 = sext i32 %1197 to i64
  %1199 = add i64 %1198, %4
  %1200 = inttoptr i64 %1199 to i64*
  %1201 = load i64, i64* %1200, align 8
  %1202 = icmp eq %struct._IO_FILE* %6, null
  br i1 %1202, label %1208, label %1203

1203:                                             ; preds = %1195
  %1204 = icmp slt i32 %1197, 0
  %1205 = select i1 %1204, i32 45, i32 43
  %1206 = sub nsw i32 0, %1197
  %1207 = select i1 %1204, i32 %1206, i32 %1197
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.59, i64 0, i64 0), i64 %1201, i32 %1205, i32 %1207) #9
  br label %1208

1208:                                             ; preds = %1195, %1203
  %1209 = getelementptr inbounds [6 x i8], [6 x i8]* %30, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %1209)
  %1210 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %1211 = bitcast %"class.v8::internal::TranslatedValue"*** %1210 to i64*
  %1212 = load i64, i64* %1211, align 8
  %1213 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %1214 = bitcast %"class.v8::internal::TranslatedValue"*** %1213 to i64*
  %1215 = load i64, i64* %1214, align 8
  %1216 = sub i64 %1212, %1215
  %1217 = icmp eq i64 %1216, 0
  %1218 = shl i64 %1216, 4
  %1219 = add i64 %1218, -1
  %1220 = select i1 %1217, i64 0, i64 %1219
  %1221 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %1222 = load i64, i64* %1221, align 8
  %1223 = load i64, i64* %46, align 8
  %1224 = add i64 %1223, %1222
  %1225 = icmp eq i64 %1220, %1224
  %1226 = inttoptr i64 %1215 to %"class.v8::internal::TranslatedValue"**
  %1227 = inttoptr i64 %1212 to %"class.v8::internal::TranslatedValue"**
  br i1 %1225, label %1228, label %1234

1228:                                             ; preds = %1208
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %1229 = load i64, i64* %46, align 8
  %1230 = load i64, i64* %1221, align 8
  %1231 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %1213, align 8
  %1232 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %1210, align 8
  %1233 = add i64 %1230, %1229
  br label %1234

1234:                                             ; preds = %1228, %1208
  %1235 = phi i64 [ %1233, %1228 ], [ %1224, %1208 ]
  %1236 = phi %"class.v8::internal::TranslatedValue"** [ %1232, %1228 ], [ %1227, %1208 ]
  %1237 = phi %"class.v8::internal::TranslatedValue"** [ %1231, %1228 ], [ %1226, %1208 ]
  %1238 = icmp eq %"class.v8::internal::TranslatedValue"** %1236, %1237
  br i1 %1238, label %1245, label %1239

1239:                                             ; preds = %1234
  %1240 = lshr i64 %1235, 7
  %1241 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %1237, i64 %1240
  %1242 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %1241, align 8
  %1243 = and i64 %1235, 127
  %1244 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1242, i64 %1243
  br label %1245

1245:                                             ; preds = %1239, %1234
  %1246 = phi %"class.v8::internal::TranslatedValue"* [ %1244, %1239 ], [ null, %1234 ]
  %1247 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1246, i64 0, i32 0
  store i8 3, i8* %1247, align 8
  %1248 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1246, i64 0, i32 1
  store i8 0, i8* %1248, align 1
  %1249 = getelementptr inbounds i8, i8* %1247, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1249, i8* nonnull align 2 %1209, i64 6, i1 false)
  %1250 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1246, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %1250, align 8
  %1251 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1246, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %1251, align 8
  %1252 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1246, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %1201, i64* %1252, align 8
  %1253 = load i64, i64* %46, align 8
  %1254 = add i64 %1253, 1
  store i64 %1254, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %1209)
  br label %1566

1255:                                             ; preds = %7
  %1256 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %1257 = call i32 @_ZN2v88internal14OptimizedFrame27StackSlotOffsetRelativeToFpEi(i32 %1256) #9
  %1258 = sext i32 %1257 to i64
  %1259 = add i64 %1258, %4
  %1260 = inttoptr i64 %1259 to i32*
  %1261 = load i32, i32* %1260, align 4
  %1262 = icmp eq %struct._IO_FILE* %6, null
  br i1 %1262, label %1268, label %1263

1263:                                             ; preds = %1255
  %1264 = icmp slt i32 %1257, 0
  %1265 = select i1 %1264, i32 45, i32 43
  %1266 = sub nsw i32 0, %1257
  %1267 = select i1 %1264, i32 %1266, i32 %1257
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.60, i64 0, i64 0), i32 %1261, i32 %1265, i32 %1267) #9
  br label %1268

1268:                                             ; preds = %1255, %1263
  %1269 = getelementptr inbounds [6 x i8], [6 x i8]* %31, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %1269)
  %1270 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %1271 = bitcast %"class.v8::internal::TranslatedValue"*** %1270 to i64*
  %1272 = load i64, i64* %1271, align 8
  %1273 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %1274 = bitcast %"class.v8::internal::TranslatedValue"*** %1273 to i64*
  %1275 = load i64, i64* %1274, align 8
  %1276 = sub i64 %1272, %1275
  %1277 = icmp eq i64 %1276, 0
  %1278 = shl i64 %1276, 4
  %1279 = add i64 %1278, -1
  %1280 = select i1 %1277, i64 0, i64 %1279
  %1281 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %1282 = load i64, i64* %1281, align 8
  %1283 = load i64, i64* %46, align 8
  %1284 = add i64 %1283, %1282
  %1285 = icmp eq i64 %1280, %1284
  %1286 = inttoptr i64 %1275 to %"class.v8::internal::TranslatedValue"**
  %1287 = inttoptr i64 %1272 to %"class.v8::internal::TranslatedValue"**
  br i1 %1285, label %1288, label %1294

1288:                                             ; preds = %1268
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %1289 = load i64, i64* %46, align 8
  %1290 = load i64, i64* %1281, align 8
  %1291 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %1273, align 8
  %1292 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %1270, align 8
  %1293 = add i64 %1290, %1289
  br label %1294

1294:                                             ; preds = %1288, %1268
  %1295 = phi i64 [ %1293, %1288 ], [ %1284, %1268 ]
  %1296 = phi %"class.v8::internal::TranslatedValue"** [ %1292, %1288 ], [ %1287, %1268 ]
  %1297 = phi %"class.v8::internal::TranslatedValue"** [ %1291, %1288 ], [ %1286, %1268 ]
  %1298 = icmp eq %"class.v8::internal::TranslatedValue"** %1296, %1297
  br i1 %1298, label %1305, label %1299

1299:                                             ; preds = %1294
  %1300 = lshr i64 %1295, 7
  %1301 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %1297, i64 %1300
  %1302 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %1301, align 8
  %1303 = and i64 %1295, 127
  %1304 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1302, i64 %1303
  br label %1305

1305:                                             ; preds = %1299, %1294
  %1306 = phi %"class.v8::internal::TranslatedValue"* [ %1304, %1299 ], [ null, %1294 ]
  %1307 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1306, i64 0, i32 0
  store i8 5, i8* %1307, align 8
  %1308 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1306, i64 0, i32 1
  store i8 0, i8* %1308, align 1
  %1309 = getelementptr inbounds i8, i8* %1307, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1309, i8* nonnull align 2 %1269, i64 6, i1 false)
  %1310 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1306, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %1310, align 8
  %1311 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1306, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %1311, align 8
  %1312 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1306, i64 0, i32 4
  %1313 = bitcast %union.anon* %1312 to i32*
  store i32 %1261, i32* %1313, align 8
  %1314 = load i64, i64* %46, align 8
  %1315 = add i64 %1314, 1
  store i64 %1315, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %1269)
  br label %1566

1316:                                             ; preds = %7
  %1317 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %1318 = call i32 @_ZN2v88internal14OptimizedFrame27StackSlotOffsetRelativeToFpEi(i32 %1317) #9
  %1319 = sext i32 %1318 to i64
  %1320 = add i64 %1319, %4
  %1321 = inttoptr i64 %1320 to i32*
  %1322 = load i32, i32* %1321, align 4
  %1323 = icmp eq %struct._IO_FILE* %6, null
  br i1 %1323, label %1329, label %1324

1324:                                             ; preds = %1316
  %1325 = icmp slt i32 %1318, 0
  %1326 = select i1 %1325, i32 45, i32 43
  %1327 = sub nsw i32 0, %1318
  %1328 = select i1 %1325, i32 %1327, i32 %1318
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.61, i64 0, i64 0), i32 %1322, i32 %1326, i32 %1328) #9
  br label %1329

1329:                                             ; preds = %1316, %1324
  %1330 = getelementptr inbounds [6 x i8], [6 x i8]* %32, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %1330)
  %1331 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %1332 = bitcast %"class.v8::internal::TranslatedValue"*** %1331 to i64*
  %1333 = load i64, i64* %1332, align 8
  %1334 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %1335 = bitcast %"class.v8::internal::TranslatedValue"*** %1334 to i64*
  %1336 = load i64, i64* %1335, align 8
  %1337 = sub i64 %1333, %1336
  %1338 = icmp eq i64 %1337, 0
  %1339 = shl i64 %1337, 4
  %1340 = add i64 %1339, -1
  %1341 = select i1 %1338, i64 0, i64 %1340
  %1342 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %1343 = load i64, i64* %1342, align 8
  %1344 = load i64, i64* %46, align 8
  %1345 = add i64 %1344, %1343
  %1346 = icmp eq i64 %1341, %1345
  %1347 = inttoptr i64 %1336 to %"class.v8::internal::TranslatedValue"**
  %1348 = inttoptr i64 %1333 to %"class.v8::internal::TranslatedValue"**
  br i1 %1346, label %1349, label %1355

1349:                                             ; preds = %1329
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %1350 = load i64, i64* %46, align 8
  %1351 = load i64, i64* %1342, align 8
  %1352 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %1334, align 8
  %1353 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %1331, align 8
  %1354 = add i64 %1351, %1350
  br label %1355

1355:                                             ; preds = %1349, %1329
  %1356 = phi i64 [ %1354, %1349 ], [ %1345, %1329 ]
  %1357 = phi %"class.v8::internal::TranslatedValue"** [ %1353, %1349 ], [ %1348, %1329 ]
  %1358 = phi %"class.v8::internal::TranslatedValue"** [ %1352, %1349 ], [ %1347, %1329 ]
  %1359 = icmp eq %"class.v8::internal::TranslatedValue"** %1357, %1358
  br i1 %1359, label %1366, label %1360

1360:                                             ; preds = %1355
  %1361 = lshr i64 %1356, 7
  %1362 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %1358, i64 %1361
  %1363 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %1362, align 8
  %1364 = and i64 %1356, 127
  %1365 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1363, i64 %1364
  br label %1366

1366:                                             ; preds = %1360, %1355
  %1367 = phi %"class.v8::internal::TranslatedValue"* [ %1365, %1360 ], [ null, %1355 ]
  %1368 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1367, i64 0, i32 0
  store i8 6, i8* %1368, align 8
  %1369 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1367, i64 0, i32 1
  store i8 0, i8* %1369, align 1
  %1370 = getelementptr inbounds i8, i8* %1368, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1370, i8* nonnull align 2 %1330, i64 6, i1 false)
  %1371 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1367, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %1371, align 8
  %1372 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1367, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %1372, align 8
  %1373 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1367, i64 0, i32 4
  %1374 = bitcast %union.anon* %1373 to i32*
  store i32 %1322, i32* %1374, align 8
  %1375 = load i64, i64* %46, align 8
  %1376 = add i64 %1375, 1
  store i64 %1376, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %1330)
  br label %1566

1377:                                             ; preds = %7
  %1378 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %1379 = call i32 @_ZN2v88internal14OptimizedFrame27StackSlotOffsetRelativeToFpEi(i32 %1378) #9
  %1380 = sext i32 %1379 to i64
  %1381 = add i64 %1380, %4
  %1382 = inttoptr i64 %1381 to i32*
  %1383 = load i32, i32* %1382, align 4
  %1384 = icmp eq %struct._IO_FILE* %6, null
  br i1 %1384, label %1392, label %1385

1385:                                             ; preds = %1377
  %1386 = bitcast i32 %1383 to float
  %1387 = fpext float %1386 to double
  %1388 = icmp slt i32 %1379, 0
  %1389 = select i1 %1388, i32 45, i32 43
  %1390 = sub nsw i32 0, %1379
  %1391 = select i1 %1388, i32 %1390, i32 %1379
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.62, i64 0, i64 0), double %1387, i32 %1389, i32 %1391) #9
  br label %1392

1392:                                             ; preds = %1377, %1385
  %1393 = getelementptr inbounds [6 x i8], [6 x i8]* %33, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %1393)
  %1394 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %1395 = bitcast %"class.v8::internal::TranslatedValue"*** %1394 to i64*
  %1396 = load i64, i64* %1395, align 8
  %1397 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %1398 = bitcast %"class.v8::internal::TranslatedValue"*** %1397 to i64*
  %1399 = load i64, i64* %1398, align 8
  %1400 = sub i64 %1396, %1399
  %1401 = icmp eq i64 %1400, 0
  %1402 = shl i64 %1400, 4
  %1403 = add i64 %1402, -1
  %1404 = select i1 %1401, i64 0, i64 %1403
  %1405 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %1406 = load i64, i64* %1405, align 8
  %1407 = load i64, i64* %46, align 8
  %1408 = add i64 %1407, %1406
  %1409 = icmp eq i64 %1404, %1408
  %1410 = inttoptr i64 %1399 to %"class.v8::internal::TranslatedValue"**
  %1411 = inttoptr i64 %1396 to %"class.v8::internal::TranslatedValue"**
  br i1 %1409, label %1412, label %1418

1412:                                             ; preds = %1392
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %1413 = load i64, i64* %46, align 8
  %1414 = load i64, i64* %1405, align 8
  %1415 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %1397, align 8
  %1416 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %1394, align 8
  %1417 = add i64 %1414, %1413
  br label %1418

1418:                                             ; preds = %1412, %1392
  %1419 = phi i64 [ %1417, %1412 ], [ %1408, %1392 ]
  %1420 = phi %"class.v8::internal::TranslatedValue"** [ %1416, %1412 ], [ %1411, %1392 ]
  %1421 = phi %"class.v8::internal::TranslatedValue"** [ %1415, %1412 ], [ %1410, %1392 ]
  %1422 = icmp eq %"class.v8::internal::TranslatedValue"** %1420, %1421
  br i1 %1422, label %1429, label %1423

1423:                                             ; preds = %1418
  %1424 = lshr i64 %1419, 7
  %1425 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %1421, i64 %1424
  %1426 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %1425, align 8
  %1427 = and i64 %1419, 127
  %1428 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1426, i64 %1427
  br label %1429

1429:                                             ; preds = %1423, %1418
  %1430 = phi %"class.v8::internal::TranslatedValue"* [ %1428, %1423 ], [ null, %1418 ]
  %1431 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1430, i64 0, i32 0
  store i8 7, i8* %1431, align 8
  %1432 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1430, i64 0, i32 1
  store i8 0, i8* %1432, align 1
  %1433 = getelementptr inbounds i8, i8* %1431, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1433, i8* nonnull align 2 %1393, i64 6, i1 false)
  %1434 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1430, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %1434, align 8
  %1435 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1430, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %1435, align 8
  %1436 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1430, i64 0, i32 4
  %1437 = bitcast %union.anon* %1436 to i32*
  store i32 %1383, i32* %1437, align 8
  %1438 = load i64, i64* %46, align 8
  %1439 = add i64 %1438, 1
  store i64 %1439, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %1393)
  br label %1566

1440:                                             ; preds = %7
  %1441 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %1442 = call i32 @_ZN2v88internal14OptimizedFrame27StackSlotOffsetRelativeToFpEi(i32 %1441) #9
  %1443 = sext i32 %1442 to i64
  %1444 = add i64 %1443, %4
  %1445 = inttoptr i64 %1444 to i64*
  %1446 = load i64, i64* %1445, align 8
  %1447 = icmp eq %struct._IO_FILE* %6, null
  br i1 %1447, label %1454, label %1448

1448:                                             ; preds = %1440
  %1449 = bitcast i64 %1446 to double
  %1450 = icmp slt i32 %1442, 0
  %1451 = select i1 %1450, i32 45, i32 43
  %1452 = sub nsw i32 0, %1442
  %1453 = select i1 %1450, i32 %1452, i32 %1442
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.63, i64 0, i64 0), double %1449, i32 %1451, i32 %1453) #9
  br label %1454

1454:                                             ; preds = %1440, %1448
  %1455 = getelementptr inbounds [6 x i8], [6 x i8]* %34, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %1455)
  %1456 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %1457 = bitcast %"class.v8::internal::TranslatedValue"*** %1456 to i64*
  %1458 = load i64, i64* %1457, align 8
  %1459 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %1460 = bitcast %"class.v8::internal::TranslatedValue"*** %1459 to i64*
  %1461 = load i64, i64* %1460, align 8
  %1462 = sub i64 %1458, %1461
  %1463 = icmp eq i64 %1462, 0
  %1464 = shl i64 %1462, 4
  %1465 = add i64 %1464, -1
  %1466 = select i1 %1463, i64 0, i64 %1465
  %1467 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %1468 = load i64, i64* %1467, align 8
  %1469 = load i64, i64* %46, align 8
  %1470 = add i64 %1469, %1468
  %1471 = icmp eq i64 %1466, %1470
  %1472 = inttoptr i64 %1461 to %"class.v8::internal::TranslatedValue"**
  %1473 = inttoptr i64 %1458 to %"class.v8::internal::TranslatedValue"**
  br i1 %1471, label %1474, label %1480

1474:                                             ; preds = %1454
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %1475 = load i64, i64* %46, align 8
  %1476 = load i64, i64* %1467, align 8
  %1477 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %1459, align 8
  %1478 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %1456, align 8
  %1479 = add i64 %1476, %1475
  br label %1480

1480:                                             ; preds = %1474, %1454
  %1481 = phi i64 [ %1479, %1474 ], [ %1470, %1454 ]
  %1482 = phi %"class.v8::internal::TranslatedValue"** [ %1478, %1474 ], [ %1473, %1454 ]
  %1483 = phi %"class.v8::internal::TranslatedValue"** [ %1477, %1474 ], [ %1472, %1454 ]
  %1484 = icmp eq %"class.v8::internal::TranslatedValue"** %1482, %1483
  br i1 %1484, label %1491, label %1485

1485:                                             ; preds = %1480
  %1486 = lshr i64 %1481, 7
  %1487 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %1483, i64 %1486
  %1488 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %1487, align 8
  %1489 = and i64 %1481, 127
  %1490 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1488, i64 %1489
  br label %1491

1491:                                             ; preds = %1485, %1480
  %1492 = phi %"class.v8::internal::TranslatedValue"* [ %1490, %1485 ], [ null, %1480 ]
  %1493 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1492, i64 0, i32 0
  store i8 8, i8* %1493, align 8
  %1494 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1492, i64 0, i32 1
  store i8 0, i8* %1494, align 1
  %1495 = getelementptr inbounds i8, i8* %1493, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1495, i8* nonnull align 2 %1455, i64 6, i1 false)
  %1496 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1492, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %1496, align 8
  %1497 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1492, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %1497, align 8
  %1498 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1492, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %1446, i64* %1498, align 8
  %1499 = load i64, i64* %46, align 8
  %1500 = add i64 %1499, 1
  store i64 %1500, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %1455)
  br label %1566

1501:                                             ; preds = %7
  %1502 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %2) #9
  %1503 = bitcast %"class.v8::internal::Object"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1503) #9
  %1504 = and i64 %3, -4294967296
  %1505 = shl i32 %1502, 2
  %1506 = sext i32 %1505 to i64
  %1507 = add i64 %3, 7
  %1508 = add i64 %1507, %1506
  %1509 = inttoptr i64 %1508 to i32*
  %1510 = load atomic i32, i32* %1509 monotonic, align 4
  %1511 = zext i32 %1510 to i64
  %1512 = or i64 %1504, %1511
  %1513 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %35, i64 0, i32 0, i32 0
  store i64 %1512, i64* %1513, align 8
  %1514 = icmp eq %struct._IO_FILE* %6, null
  br i1 %1514, label %1517, label %1515

1515:                                             ; preds = %1501
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.64, i64 0, i64 0), i64 %1512, i32 %1502) #9
  call void @_ZNK2v88internal6Object10ShortPrintEP8_IO_FILE(%"class.v8::internal::Object"* nonnull %35, %struct._IO_FILE* nonnull %6) #9
  %1516 = load i64, i64* %1513, align 8
  br label %1517

1517:                                             ; preds = %1501, %1515
  %1518 = phi i64 [ %1512, %1501 ], [ %1516, %1515 ]
  %1519 = getelementptr inbounds [6 x i8], [6 x i8]* %36, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %1519)
  %1520 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 2
  %1521 = bitcast %"class.v8::internal::TranslatedValue"*** %1520 to i64*
  %1522 = load i64, i64* %1521, align 8
  %1523 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 0, i32 1
  %1524 = bitcast %"class.v8::internal::TranslatedValue"*** %1523 to i64*
  %1525 = load i64, i64* %1524, align 8
  %1526 = sub i64 %1522, %1525
  %1527 = icmp eq i64 %1526, 0
  %1528 = shl i64 %1526, 4
  %1529 = add i64 %1528, -1
  %1530 = select i1 %1527, i64 0, i64 %1529
  %1531 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %44, i64 %42, i32 8, i32 0, i32 1
  %1532 = load i64, i64* %1531, align 8
  %1533 = load i64, i64* %46, align 8
  %1534 = add i64 %1533, %1532
  %1535 = icmp eq i64 %1530, %1534
  %1536 = inttoptr i64 %1525 to %"class.v8::internal::TranslatedValue"**
  %1537 = inttoptr i64 %1522 to %"class.v8::internal::TranslatedValue"**
  br i1 %1535, label %1538, label %1544

1538:                                             ; preds = %1517
  call void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"* %45) #9
  %1539 = load i64, i64* %46, align 8
  %1540 = load i64, i64* %1531, align 8
  %1541 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %1523, align 8
  %1542 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %1520, align 8
  %1543 = add i64 %1540, %1539
  br label %1544

1544:                                             ; preds = %1538, %1517
  %1545 = phi i64 [ %1543, %1538 ], [ %1534, %1517 ]
  %1546 = phi %"class.v8::internal::TranslatedValue"** [ %1542, %1538 ], [ %1537, %1517 ]
  %1547 = phi %"class.v8::internal::TranslatedValue"** [ %1541, %1538 ], [ %1536, %1517 ]
  %1548 = icmp eq %"class.v8::internal::TranslatedValue"** %1546, %1547
  br i1 %1548, label %1555, label %1549

1549:                                             ; preds = %1544
  %1550 = lshr i64 %1545, 7
  %1551 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %1547, i64 %1550
  %1552 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %1551, align 8
  %1553 = and i64 %1545, 127
  %1554 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1552, i64 %1553
  br label %1555

1555:                                             ; preds = %1549, %1544
  %1556 = phi %"class.v8::internal::TranslatedValue"* [ %1554, %1549 ], [ null, %1544 ]
  %1557 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1556, i64 0, i32 0
  store i8 1, i8* %1557, align 8
  %1558 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1556, i64 0, i32 1
  store i8 0, i8* %1558, align 1
  %1559 = getelementptr inbounds i8, i8* %1557, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %1559, i8* nonnull align 2 %1519, i64 6, i1 false)
  %1560 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1556, i64 0, i32 2
  store %"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedState"** %1560, align 8
  %1561 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1556, i64 0, i32 3, i32 0, i32 0
  store i64* null, i64** %1561, align 8
  %1562 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1556, i64 0, i32 4, i32 0, i32 0, i32 0
  store i64 %1518, i64* %1562, align 8
  %1563 = load i64, i64* %46, align 8
  %1564 = add i64 %1563, 1
  store i64 %1564, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %1519)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1503) #9
  br label %1566

1565:                                             ; preds = %7
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.65, i64 0, i64 0)) #16
  unreachable

1566:                                             ; preds = %994, %1054, %884, %943, %779, %833, %674, %728, %571, %624, %466, %520, %353, %416, %1555, %1491, %1429, %1366, %1305, %1245, %1184, %1124, %300, %200, %153, %140
  %1567 = phi i32 [ %212, %300 ], [ 0, %200 ], [ 0, %153 ], [ 0, %140 ], [ 0, %1124 ], [ 0, %1184 ], [ 0, %1245 ], [ 0, %1305 ], [ 0, %1366 ], [ 0, %1429 ], [ 0, %1491 ], [ 0, %1555 ], [ 0, %353 ], [ 0, %416 ], [ 0, %466 ], [ 0, %520 ], [ 0, %571 ], [ 0, %624 ], [ 0, %674 ], [ 0, %728 ], [ 0, %779 ], [ 0, %833 ], [ 0, %884 ], [ 0, %943 ], [ 0, %994 ], [ 0, %1054 ]
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %37) #9
  ret i32 %1567
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal15TranslatedState18DecompressIfNeededEl(%"class.v8::internal::TranslatedState"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 3
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 4294967295
  %8 = icmp eq i64 %7, 0
  tail call void @llvm.assume(i1 %8) #9
  %9 = and i64 %1, 4294967295
  %10 = or i64 %6, %9
  ret i64 %10
}

declare void @_ZNK2v88internal6Object10ShortPrintEP8_IO_FILE(%"class.v8::internal::Object"*, %struct._IO_FILE*) local_unnamed_addr #2

declare i32 @_ZNK2v88internal14RegisterValues16GetFloatRegisterEj(%"class.v8::internal::RegisterValues"*, i32) local_unnamed_addr #2

declare i32 @_ZN2v88internal14OptimizedFrame27StackSlotOffsetRelativeToFpEi(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedStateC2EPKNS0_15JavaScriptFrameE(%"class.v8::internal::TranslatedState"*, %"class.v8::internal::JavaScriptFrame"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.v8::internal::TranslationArrayIterator", align 8
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 0
  store i32 1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 10, i32 0
  %9 = bitcast %"class.std::__1::vector.7"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 40, i1 false)
  %10 = bitcast %"class.std::__1::deque.1163"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 64, i1 false)
  store i32 -1, i32* %8, align 4
  %11 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #9
  store i32 -1, i32* %3, align 4
  %12 = bitcast %"class.v8::internal::JavaScriptFrame"* %1 to %"class.v8::internal::OptimizedFrame"*
  %13 = call i64 @_ZNK2v88internal14OptimizedFrame21GetDeoptimizationDataEPi(%"class.v8::internal::OptimizedFrame"* %12, i32* nonnull %3) #9
  %14 = bitcast %"class.v8::internal::TranslationArrayIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #9
  %15 = and i64 %13, -4294967296
  %16 = add i64 %13, 7
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %15, %19
  %21 = load i32, i32* %3, align 4
  %22 = mul i32 %21, 12
  %23 = add i32 %22, 48
  %24 = sext i32 %23 to i64
  %25 = add i64 %16, %24
  %26 = inttoptr i64 %25 to i32*
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = ashr i32 %27, 1
  call void @_ZN2v88internal24TranslationArrayIteratorC1ENS0_9ByteArrayEi(%"class.v8::internal::TranslationArrayIterator"* nonnull %4, i64 %20, i32 %28) #9
  %29 = bitcast %"class.v8::internal::JavaScriptFrame"* %1 to i32 (%"class.v8::internal::JavaScriptFrame"*)***
  %30 = load i32 (%"class.v8::internal::JavaScriptFrame"*)**, i32 (%"class.v8::internal::JavaScriptFrame"*)*** %29, align 8
  %31 = getelementptr inbounds i32 (%"class.v8::internal::JavaScriptFrame"*)*, i32 (%"class.v8::internal::JavaScriptFrame"*)** %30, i64 17
  %32 = load i32 (%"class.v8::internal::JavaScriptFrame"*)*, i32 (%"class.v8::internal::JavaScriptFrame"*)** %31, align 8
  %33 = call i32 %32(%"class.v8::internal::JavaScriptFrame"* %1) #9
  %34 = getelementptr inbounds %"class.v8::internal::JavaScriptFrame", %"class.v8::internal::JavaScriptFrame"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %35 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::JavaScriptFrame", %"class.v8::internal::JavaScriptFrame"* %1, i64 0, i32 0, i32 0, i32 0, i32 3, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %13, 15
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %15, %41
  %43 = bitcast %"class.v8::internal::JavaScriptFrame"* %1 to i64 (%"class.v8::internal::JavaScriptFrame"*)***
  %44 = load i64 (%"class.v8::internal::JavaScriptFrame"*)**, i64 (%"class.v8::internal::JavaScriptFrame"*)*** %43, align 8
  %45 = getelementptr inbounds i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %44, i64 13
  %46 = load i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %45, align 8
  %47 = call i64 %46(%"class.v8::internal::JavaScriptFrame"* %1) #9
  %48 = add i64 %47, 11
  %49 = inttoptr i64 %48 to i32*
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i64 %47, -4294967296
  %52 = zext i32 %50 to i64
  %53 = or i64 %51, %52
  %54 = add i64 %53, 21
  %55 = inttoptr i64 %54 to i16*
  %56 = load i16, i16* %55, align 2
  %57 = zext i16 %56 to i32
  call void @_ZN2v88internal15TranslatedState4InitEPNS0_7IsolateEmmPNS0_24TranslationArrayIteratorENS0_10FixedArrayEPNS0_14RegisterValuesEP8_IO_FILEii(%"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::Isolate"* %35, i64 %37, i64 %37, %"class.v8::internal::TranslationArrayIterator"* nonnull %4, i64 %42, %"class.v8::internal::RegisterValues"* null, %struct._IO_FILE* null, i32 %57, i32 %33)
  %58 = getelementptr inbounds %"class.v8::internal::TranslationArrayIterator", %"class.v8::internal::TranslationArrayIterator"* %4, i64 0, i32 0, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = icmp eq i32* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %2
  %62 = ptrtoint i32* %59 to i64
  %63 = getelementptr inbounds %"class.v8::internal::TranslationArrayIterator", %"class.v8::internal::TranslationArrayIterator"* %4, i64 0, i32 0, i32 0, i32 1
  %64 = bitcast i32** %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = bitcast i32* %59 to i8*
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %2, %61
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #9
  ret void
}

declare i64 @_ZNK2v88internal14OptimizedFrame21GetDeoptimizationDataEPi(%"class.v8::internal::OptimizedFrame"*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedState4InitEPNS0_7IsolateEmmPNS0_24TranslationArrayIteratorENS0_10FixedArrayEPNS0_14RegisterValuesEP8_IO_FILEii(%"class.v8::internal::TranslatedState"*, %"class.v8::internal::Isolate"*, i64, i64, %"class.v8::internal::TranslationArrayIterator"*, i64, %"class.v8::internal::RegisterValues"*, %struct._IO_FILE*, i32, i32) local_unnamed_addr #0 align 2 {
  %11 = alloca %"class.std::__1::stack", align 8
  %12 = alloca %"class.v8::internal::TranslatedFrame", align 8
  %13 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 4
  store i64 %3, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 5
  store i32 %8, i32* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 6
  store i32 %9, i32* %15, align 4
  %16 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 3
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %16, align 8
  %17 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %4) #9
  %18 = icmp eq i32 %17, 3
  br i1 %18, label %20, label %19, !prof !3

19:                                               ; preds = %10
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.66, i64 0, i64 0)) #16
  unreachable

20:                                               ; preds = %10
  %21 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %4) #9
  %22 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2
  %23 = sext i32 %21 to i64
  tail call void @_ZNSt3__16vectorIN2v88internal15TranslatedFrameENS_9allocatorIS3_EEE7reserveEm(%"class.std::__1::vector.7"* %22, i64 %23)
  %24 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %4) #9
  %25 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %4) #9
  %26 = icmp sgt i32 %25, -1
  br i1 %26, label %28, label %27, !prof !3

27:                                               ; preds = %20
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.67, i64 0, i64 0)) #16
  unreachable

28:                                               ; preds = %20
  %29 = icmp slt i32 %25, 2
  br i1 %29, label %31, label %30, !prof !3

30:                                               ; preds = %28
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.68, i64 0, i64 0)) #16
  unreachable

31:                                               ; preds = %28
  %32 = icmp eq i32 %25, 1
  br i1 %32, label %33, label %53

33:                                               ; preds = %31
  %34 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %4) #9
  %35 = icmp eq i32 %34, 27
  br i1 %35, label %37, label %36, !prof !3

36:                                               ; preds = %33
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.105, i64 0, i64 0)) #16
  unreachable

37:                                               ; preds = %33
  %38 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %4) #9
  %39 = and i64 %5, -4294967296
  %40 = shl i32 %38, 2
  %41 = sext i32 %40 to i64
  %42 = add i64 %5, 7
  %43 = add i64 %42, %41
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = zext i32 %45 to i64
  %47 = or i64 %39, %46
  %48 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %47, i64* %48, align 8
  %49 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %4) #9
  %50 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 10, i32 0
  store i32 %49, i32* %50, align 8
  %51 = icmp eq %struct._IO_FILE* %7, null
  br i1 %51, label %53, label %52

52:                                               ; preds = %37
  tail call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.106, i64 0, i64 0), i32 %49) #9
  br label %53

53:                                               ; preds = %52, %37, %31
  %54 = bitcast %"class.std::__1::stack"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %54) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 48, i1 false) #9
  %55 = icmp sgt i32 %21, 0
  br i1 %55, label %56, label %84

56:                                               ; preds = %53
  %57 = bitcast %"class.v8::internal::TranslatedFrame"* %12 to i8*
  %58 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2, i32 0, i32 1
  %59 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %60 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %12, i64 0, i32 8
  %61 = bitcast %"class.std::__1::deque"* %60 to i64*
  %62 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %12, i64 0, i32 8, i32 0, i32 0, i32 1
  %63 = bitcast %"class.v8::internal::TranslatedValue"*** %62 to i64*
  %64 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %12, i64 0, i32 8, i32 0, i32 0, i32 2
  %65 = bitcast %"class.v8::internal::TranslatedValue"*** %64 to i64*
  %66 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %12, i64 0, i32 8, i32 0, i32 0, i32 3
  %67 = bitcast %"class.std::__1::__compressed_pair.10"* %66 to i64*
  %68 = bitcast %"class.std::__1::deque"* %60 to i8*
  %69 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %12, i64 0, i32 8, i32 0, i32 1
  %70 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %12, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %71 = bitcast i64* %69 to i8*
  %72 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %12, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %73 = bitcast i8* %72 to i16*
  %74 = bitcast %"class.v8::internal::TranslatedFrame"** %58 to i64*
  %75 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %12, i64 0, i32 8, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %11, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %77 = icmp eq %struct._IO_FILE* %7, null
  %78 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %11, i64 0, i32 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %11, i64 0, i32 0, i32 0, i32 0, i32 1
  %80 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %11, i64 0, i32 0, i32 0, i32 0, i32 2
  %81 = bitcast i32*** %80 to i64*
  %82 = bitcast i32*** %79 to i64*
  %83 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %11, i64 0, i32 0
  br label %86

84:                                               ; preds = %360, %53
  %85 = call zeroext i1 @_ZNK2v88internal24TranslationArrayIterator7HasNextEv(%"class.v8::internal::TranslationArrayIterator"* %4) #9
  br i1 %85, label %363, label %367

86:                                               ; preds = %360, %56
  %87 = phi i32 [ 0, %56 ], [ %361, %360 ]
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %57) #9
  call void @_ZN2v88internal15TranslatedState25CreateNextTranslatedFrameEPNS0_24TranslationArrayIteratorENS0_10FixedArrayEmP8_IO_FILE(%"class.v8::internal::TranslatedFrame"* nonnull sret %12, %"class.v8::internal::TranslatedState"* undef, %"class.v8::internal::TranslationArrayIterator"* %4, i64 %5, i64 undef, %struct._IO_FILE* %7)
  %88 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %58, align 8
  %89 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %59, align 8
  %90 = icmp ult %"class.v8::internal::TranslatedFrame"* %88, %89
  br i1 %90, label %91, label %114

91:                                               ; preds = %86
  %92 = bitcast %"class.v8::internal::TranslatedFrame"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* nonnull align 8 %57, i64 36, i1 false) #9
  %93 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %88, i64 0, i32 8
  %94 = load i64, i64* %61, align 8
  %95 = bitcast %"class.std::__1::deque"* %93 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %88, i64 0, i32 8, i32 0, i32 0, i32 1
  %97 = load i64, i64* %63, align 8
  %98 = bitcast %"class.v8::internal::TranslatedValue"*** %96 to i64*
  store i64 %97, i64* %98, align 8
  %99 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %88, i64 0, i32 8, i32 0, i32 0, i32 2
  %100 = load i64, i64* %65, align 8
  %101 = bitcast %"class.v8::internal::TranslatedValue"*** %99 to i64*
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %88, i64 0, i32 8, i32 0, i32 0, i32 3
  %103 = bitcast %"class.std::__1::__compressed_pair.10"* %102 to i64*
  %104 = load i64, i64* %67, align 8
  store i64 %104, i64* %103, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 32, i1 false) #9
  %105 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %88, i64 0, i32 8, i32 0, i32 1
  %106 = load i64, i64* %69, align 8
  store i64 %106, i64* %105, align 8
  %107 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %88, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %108 = load i64, i64* %70, align 8
  store i64 %108, i64* %107, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false) #9
  %109 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %88, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %110 = bitcast i8* %109 to i16*
  %111 = load i16, i16* %73, align 8
  store i16 %111, i16* %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %88, i64 1
  %113 = ptrtoint %"class.v8::internal::TranslatedFrame"* %112 to i64
  store i64 %113, i64* %74, align 8
  br label %135

114:                                              ; preds = %86
  call void @_ZNSt3__16vectorIN2v88internal15TranslatedFrameENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.7"* %22, %"class.v8::internal::TranslatedFrame"* nonnull dereferenceable(96) %12) #9
  %115 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %62, align 8
  %116 = load i64, i64* %69, align 8
  %117 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %64, align 8
  %118 = lshr i64 %116, 7
  %119 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %115, i64 %118
  %120 = icmp eq %"class.v8::internal::TranslatedValue"** %117, %115
  %121 = ptrtoint %"class.v8::internal::TranslatedValue"** %117 to i64
  %122 = ptrtoint %"class.v8::internal::TranslatedValue"** %115 to i64
  br i1 %120, label %135, label %123

123:                                              ; preds = %114
  %124 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %119, align 8
  %125 = and i64 %116, 127
  %126 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %124, i64 %125
  %127 = load i64, i64* %70, align 8
  %128 = add i64 %127, %116
  %129 = lshr i64 %128, 7
  %130 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %115, i64 %129
  %131 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %130, align 8
  %132 = and i64 %128, 127
  %133 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %131, i64 %132
  %134 = icmp eq %"class.v8::internal::TranslatedValue"* %133, %126
  br i1 %134, label %135, label %143

135:                                              ; preds = %156, %91, %114, %123
  %136 = phi i64 [ 0, %91 ], [ %122, %114 ], [ %122, %123 ], [ %122, %156 ]
  %137 = phi i64 [ 0, %91 ], [ %121, %114 ], [ %121, %123 ], [ %121, %156 ]
  %138 = phi %"class.v8::internal::TranslatedValue"** [ null, %91 ], [ %115, %114 ], [ %115, %123 ], [ %115, %156 ]
  %139 = phi %"class.v8::internal::TranslatedValue"** [ null, %91 ], [ %117, %114 ], [ %117, %123 ], [ %117, %156 ]
  store i64 0, i64* %70, align 8
  %140 = sub i64 %137, %136
  %141 = ashr exact i64 %140, 3
  %142 = icmp ugt i64 %141, 2
  br i1 %142, label %161, label %174

143:                                              ; preds = %123, %156
  %144 = phi %"class.v8::internal::TranslatedValue"* [ %159, %156 ], [ %126, %123 ]
  %145 = phi %"class.v8::internal::TranslatedValue"** [ %157, %156 ], [ %119, %123 ]
  %146 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %144, i64 1
  %147 = ptrtoint %"class.v8::internal::TranslatedValue"* %146 to i64
  %148 = bitcast %"class.v8::internal::TranslatedValue"** %145 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = sub i64 %147, %149
  %151 = icmp eq i64 %150, 4096
  br i1 %151, label %152, label %156

152:                                              ; preds = %143
  %153 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %145, i64 1
  %154 = bitcast %"class.v8::internal::TranslatedValue"** %153 to i64*
  %155 = load i64, i64* %154, align 8
  br label %156

156:                                              ; preds = %152, %143
  %157 = phi %"class.v8::internal::TranslatedValue"** [ %153, %152 ], [ %145, %143 ]
  %158 = phi i64 [ %155, %152 ], [ %147, %143 ]
  %159 = inttoptr i64 %158 to %"class.v8::internal::TranslatedValue"*
  %160 = icmp eq %"class.v8::internal::TranslatedValue"* %133, %159
  br i1 %160, label %135, label %143

161:                                              ; preds = %135, %161
  %162 = phi %"class.v8::internal::TranslatedValue"** [ %166, %161 ], [ %138, %135 ]
  %163 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %162, align 8
  %164 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %163, i64 0, i32 0
  call void @_ZdlPv(i8* %164) #15
  %165 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %62, align 8
  %166 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %165, i64 1
  store %"class.v8::internal::TranslatedValue"** %166, %"class.v8::internal::TranslatedValue"*** %62, align 8
  %167 = load i64, i64* %65, align 8
  %168 = ptrtoint %"class.v8::internal::TranslatedValue"** %166 to i64
  %169 = sub i64 %167, %168
  %170 = ashr exact i64 %169, 3
  %171 = icmp ugt i64 %170, 2
  br i1 %171, label %161, label %172

172:                                              ; preds = %161
  %173 = inttoptr i64 %167 to %"class.v8::internal::TranslatedValue"**
  br label %174

174:                                              ; preds = %172, %135
  %175 = phi %"class.v8::internal::TranslatedValue"** [ %139, %135 ], [ %173, %172 ]
  %176 = phi %"class.v8::internal::TranslatedValue"** [ %138, %135 ], [ %166, %172 ]
  %177 = phi i64 [ %141, %135 ], [ %170, %172 ]
  switch i64 %177, label %181 [
    i64 1, label %179
    i64 2, label %178
  ]

178:                                              ; preds = %174
  br label %179

179:                                              ; preds = %174, %178
  %180 = phi i64 [ 128, %178 ], [ 64, %174 ]
  store i64 %180, i64* %69, align 8
  br label %181

181:                                              ; preds = %179, %174
  %182 = icmp eq %"class.v8::internal::TranslatedValue"** %176, %175
  br i1 %182, label %201, label %183

183:                                              ; preds = %181, %183
  %184 = phi %"class.v8::internal::TranslatedValue"** [ %187, %183 ], [ %176, %181 ]
  %185 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %184, align 8
  %186 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %185, i64 0, i32 0
  call void @_ZdlPv(i8* %186) #15
  %187 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %184, i64 1
  %188 = icmp eq %"class.v8::internal::TranslatedValue"** %187, %175
  br i1 %188, label %189, label %183

189:                                              ; preds = %183
  %190 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %62, align 8
  %191 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %64, align 8
  %192 = icmp eq %"class.v8::internal::TranslatedValue"** %191, %190
  br i1 %192, label %201, label %193

193:                                              ; preds = %189
  %194 = ptrtoint %"class.v8::internal::TranslatedValue"** %190 to i64
  %195 = getelementptr %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %191, i64 -1
  %196 = ptrtoint %"class.v8::internal::TranslatedValue"** %195 to i64
  %197 = sub i64 %196, %194
  %198 = lshr i64 %197, 3
  %199 = xor i64 %198, -1
  %200 = getelementptr %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %191, i64 %199
  store %"class.v8::internal::TranslatedValue"** %200, %"class.v8::internal::TranslatedValue"*** %64, align 8
  br label %201

201:                                              ; preds = %193, %189, %181
  %202 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %75, align 8
  %203 = icmp eq %"class.v8::internal::TranslatedValue"** %202, null
  br i1 %203, label %206, label %204

204:                                              ; preds = %201
  %205 = bitcast %"class.v8::internal::TranslatedValue"** %202 to i8*
  call void @_ZdlPv(i8* %205) #15
  br label %206

206:                                              ; preds = %201, %204
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %57) #9
  %207 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %58, align 8
  %208 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %207, i64 -1, i32 0
  %209 = load i32, i32* %208, align 8
  switch i32 %209, label %231 [
    i32 0, label %210
    i32 1, label %222
    i32 2, label %226
    i32 3, label %226
    i32 4, label %226
    i32 5, label %226
    i32 6, label %226
    i32 7, label %230
  ]

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %207, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load i64, i64* %211, align 8
  %213 = add i64 %212, 21
  %214 = inttoptr i64 %213 to i16*
  %215 = load i16, i16* %214, align 2
  %216 = add i16 %215, 1
  %217 = zext i16 %216 to i32
  %218 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %207, i64 -1, i32 4
  %219 = load i32, i32* %218, align 8
  %220 = add i32 %219, 3
  %221 = add i32 %220, %217
  br label %232

222:                                              ; preds = %206
  %223 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %207, i64 -1, i32 4
  %224 = load i32, i32* %223, align 8
  %225 = add nsw i32 %224, 1
  br label %232

226:                                              ; preds = %206, %206, %206, %206, %206
  %227 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %207, i64 -1, i32 4
  %228 = load i32, i32* %227, align 8
  %229 = add nsw i32 %228, 2
  br label %232

230:                                              ; preds = %206
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

231:                                              ; preds = %206
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

232:                                              ; preds = %210, %222, %226
  %233 = phi i32 [ %229, %226 ], [ %225, %222 ], [ %221, %210 ]
  %234 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %207, i64 -1, i32 4
  %235 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %207, i64 -1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %236 = icmp slt i32 %233, 1
  %237 = load i64, i64* %76, align 8
  %238 = icmp eq i64 %237, 0
  %239 = and i1 %236, %238
  br i1 %239, label %360, label %240

240:                                              ; preds = %232, %354
  %241 = phi i1 [ %358, %354 ], [ %238, %232 ]
  %242 = phi i32 [ %355, %354 ], [ %233, %232 ]
  br i1 %77, label %243, label %245

243:                                              ; preds = %240
  %244 = call i32 @_ZN2v88internal15TranslatedState25CreateNextTranslatedValueEiPNS0_24TranslationArrayIteratorENS0_10FixedArrayEmPNS0_14RegisterValuesEP8_IO_FILE(%"class.v8::internal::TranslatedState"* %0, i32 %87, %"class.v8::internal::TranslationArrayIterator"* %4, i64 %5, i64 %2, %"class.v8::internal::RegisterValues"* %6, %struct._IO_FILE* null)
  br label %279

245:                                              ; preds = %240
  br i1 %241, label %246, label %269

246:                                              ; preds = %245
  %247 = load i32, i32* %208, align 8
  switch i32 %247, label %265 [
    i32 0, label %248
    i32 1, label %258
    i32 2, label %261
    i32 3, label %261
    i32 4, label %261
    i32 5, label %261
    i32 6, label %261
    i32 7, label %264
  ]

248:                                              ; preds = %246
  %249 = load i64, i64* %235, align 8
  %250 = add i64 %249, 21
  %251 = inttoptr i64 %250 to i16*
  %252 = load i16, i16* %251, align 2
  %253 = add i16 %252, 1
  %254 = zext i16 %253 to i32
  %255 = load i32, i32* %234, align 8
  %256 = add i32 %255, 3
  %257 = add i32 %256, %254
  br label %266

258:                                              ; preds = %246
  %259 = load i32, i32* %234, align 8
  %260 = add nsw i32 %259, 1
  br label %266

261:                                              ; preds = %246, %246, %246, %246, %246
  %262 = load i32, i32* %234, align 8
  %263 = add nsw i32 %262, 2
  br label %266

264:                                              ; preds = %246
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

265:                                              ; preds = %246
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

266:                                              ; preds = %261, %258, %248
  %267 = phi i32 [ %263, %261 ], [ %260, %258 ], [ %257, %248 ]
  %268 = sub nsw i32 %267, %242
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i64 0, i64 0), i32 %268) #9
  br label %277

269:                                              ; preds = %245
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.70, i64 0, i64 0)) #9
  %270 = load i64, i64* %76, align 8
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %277, label %272

272:                                              ; preds = %269, %272
  %273 = phi i64 [ %274, %272 ], [ 0, %269 ]
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)) #9
  %274 = add nuw i64 %273, 1
  %275 = load i64, i64* %76, align 8
  %276 = icmp ult i64 %274, %275
  br i1 %276, label %272, label %277

277:                                              ; preds = %272, %269, %266
  %278 = call i32 @_ZN2v88internal15TranslatedState25CreateNextTranslatedValueEiPNS0_24TranslationArrayIteratorENS0_10FixedArrayEmPNS0_14RegisterValuesEP8_IO_FILE(%"class.v8::internal::TranslatedState"* %0, i32 %87, %"class.v8::internal::TranslationArrayIterator"* %4, i64 %5, i64 %2, %"class.v8::internal::RegisterValues"* %6, %struct._IO_FILE* nonnull %7)
  call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.32, i64 0, i64 0)) #9
  br label %279

279:                                              ; preds = %243, %277
  %280 = phi i32 [ %278, %277 ], [ %244, %243 ]
  %281 = add nsw i32 %242, -1
  %282 = icmp sgt i32 %280, 0
  br i1 %282, label %285, label %283

283:                                              ; preds = %279
  %284 = icmp eq i32 %281, 0
  br i1 %284, label %320, label %354

285:                                              ; preds = %279
  %286 = load i64, i64* %81, align 8
  %287 = load i64, i64* %82, align 8
  %288 = sub i64 %286, %287
  %289 = icmp eq i64 %288, 0
  %290 = shl i64 %288, 7
  %291 = add i64 %290, -1
  %292 = select i1 %289, i64 0, i64 %291
  %293 = load i64, i64* %78, align 8
  %294 = load i64, i64* %76, align 8
  %295 = add i64 %294, %293
  %296 = icmp eq i64 %292, %295
  %297 = inttoptr i64 %287 to i32**
  %298 = inttoptr i64 %286 to i32**
  br i1 %296, label %299, label %305

299:                                              ; preds = %285
  call void @_ZNSt3__15dequeIiNS_9allocatorIiEEE19__add_back_capacityEv(%"class.std::__1::deque.1192"* nonnull %83) #9
  %300 = load i64, i64* %76, align 8
  %301 = load i64, i64* %78, align 8
  %302 = load i32**, i32*** %79, align 8
  %303 = load i32**, i32*** %80, align 8
  %304 = add i64 %301, %300
  br label %305

305:                                              ; preds = %299, %285
  %306 = phi i64 [ %304, %299 ], [ %295, %285 ]
  %307 = phi i32** [ %303, %299 ], [ %298, %285 ]
  %308 = phi i32** [ %302, %299 ], [ %297, %285 ]
  %309 = icmp eq i32** %307, %308
  br i1 %309, label %316, label %310

310:                                              ; preds = %305
  %311 = lshr i64 %306, 10
  %312 = getelementptr inbounds i32*, i32** %308, i64 %311
  %313 = load i32*, i32** %312, align 8
  %314 = and i64 %306, 1023
  %315 = getelementptr inbounds i32, i32* %313, i64 %314
  br label %316

316:                                              ; preds = %305, %310
  %317 = phi i32* [ %315, %310 ], [ null, %305 ]
  store i32 %281, i32* %317, align 4
  %318 = load i64, i64* %76, align 8
  %319 = add i64 %318, 1
  store i64 %319, i64* %76, align 8
  br label %354

320:                                              ; preds = %283, %352
  %321 = load i64, i64* %76, align 8
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %354, label %323

323:                                              ; preds = %320
  %324 = load i64, i64* %78, align 8
  %325 = add i64 %321, -1
  %326 = add i64 %324, %325
  %327 = load i32**, i32*** %79, align 8
  %328 = lshr i64 %326, 10
  %329 = getelementptr inbounds i32*, i32** %327, i64 %328
  %330 = load i32*, i32** %329, align 8
  %331 = and i64 %326, 1023
  %332 = getelementptr inbounds i32, i32* %330, i64 %331
  %333 = load i32, i32* %332, align 4
  store i64 %325, i64* %76, align 8
  %334 = load i64, i64* %81, align 8
  %335 = ptrtoint i32** %327 to i64
  %336 = sub i64 %334, %335
  %337 = icmp eq i64 %336, 0
  %338 = shl i64 %336, 7
  %339 = add i64 %338, -1
  %340 = select i1 %337, i64 0, i64 %339
  %341 = sub i64 1, %321
  %342 = sub i64 %341, %324
  %343 = add i64 %342, %340
  %344 = icmp ult i64 %343, 2048
  br i1 %344, label %352, label %345

345:                                              ; preds = %323
  %346 = inttoptr i64 %334 to i32**
  %347 = getelementptr inbounds i32*, i32** %346, i64 -1
  %348 = bitcast i32** %347 to i8**
  %349 = load i8*, i8** %348, align 8
  call void @_ZdlPv(i8* %349) #15
  %350 = load i32**, i32*** %80, align 8
  %351 = getelementptr i32*, i32** %350, i64 -1
  store i32** %351, i32*** %80, align 8
  br label %352

352:                                              ; preds = %323, %345
  %353 = icmp eq i32 %333, 0
  br i1 %353, label %320, label %354

354:                                              ; preds = %352, %320, %283, %316
  %355 = phi i32 [ %280, %316 ], [ %281, %283 ], [ %333, %352 ], [ 0, %320 ]
  %356 = icmp slt i32 %355, 1
  %357 = load i64, i64* %76, align 8
  %358 = icmp eq i64 %357, 0
  %359 = and i1 %356, %358
  br i1 %359, label %360, label %240

360:                                              ; preds = %354, %232
  %361 = add nuw nsw i32 %87, 1
  %362 = icmp eq i32 %361, %21
  br i1 %362, label %84, label %86

363:                                              ; preds = %84
  %364 = call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %4) #9
  %365 = icmp eq i32 %364, 3
  br i1 %365, label %367, label %366, !prof !3

366:                                              ; preds = %363
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.71, i64 0, i64 0)) #16
  unreachable

367:                                              ; preds = %363, %84
  %368 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %11, i64 0, i32 0, i32 0, i32 0, i32 1
  %369 = load i32**, i32*** %368, align 8
  %370 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %11, i64 0, i32 0, i32 0, i32 1
  %371 = load i64, i64* %370, align 8
  %372 = lshr i64 %371, 10
  %373 = getelementptr inbounds i32*, i32** %369, i64 %372
  %374 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %11, i64 0, i32 0, i32 0, i32 0, i32 2
  %375 = load i32**, i32*** %374, align 8
  %376 = icmp eq i32** %375, %369
  %377 = ptrtoint i32** %375 to i64
  %378 = ptrtoint i32** %369 to i64
  br i1 %376, label %379, label %381

379:                                              ; preds = %367
  %380 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %11, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %394

381:                                              ; preds = %367
  %382 = load i32*, i32** %373, align 8
  %383 = and i64 %371, 1023
  %384 = getelementptr inbounds i32, i32* %382, i64 %383
  %385 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %11, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %386 = load i64, i64* %385, align 8
  %387 = add i64 %386, %371
  %388 = lshr i64 %387, 10
  %389 = getelementptr inbounds i32*, i32** %369, i64 %388
  %390 = load i32*, i32** %389, align 8
  %391 = and i64 %387, 1023
  %392 = getelementptr inbounds i32, i32* %390, i64 %391
  %393 = icmp eq i32* %392, %384
  br i1 %393, label %394, label %400

394:                                              ; preds = %413, %381, %379
  %395 = phi i64* [ %380, %379 ], [ %385, %381 ], [ %385, %413 ]
  store i64 0, i64* %395, align 8
  %396 = bitcast i32*** %374 to i64*
  %397 = sub i64 %377, %378
  %398 = ashr exact i64 %397, 3
  %399 = icmp ugt i64 %398, 2
  br i1 %399, label %418, label %431

400:                                              ; preds = %381, %413
  %401 = phi i32* [ %416, %413 ], [ %384, %381 ]
  %402 = phi i32** [ %414, %413 ], [ %373, %381 ]
  %403 = getelementptr inbounds i32, i32* %401, i64 1
  %404 = ptrtoint i32* %403 to i64
  %405 = bitcast i32** %402 to i64*
  %406 = load i64, i64* %405, align 8
  %407 = sub i64 %404, %406
  %408 = icmp eq i64 %407, 4096
  br i1 %408, label %409, label %413

409:                                              ; preds = %400
  %410 = getelementptr inbounds i32*, i32** %402, i64 1
  %411 = bitcast i32** %410 to i64*
  %412 = load i64, i64* %411, align 8
  br label %413

413:                                              ; preds = %409, %400
  %414 = phi i32** [ %410, %409 ], [ %402, %400 ]
  %415 = phi i64 [ %412, %409 ], [ %404, %400 ]
  %416 = inttoptr i64 %415 to i32*
  %417 = icmp eq i32* %392, %416
  br i1 %417, label %394, label %400

418:                                              ; preds = %394, %418
  %419 = phi i32** [ %423, %418 ], [ %369, %394 ]
  %420 = bitcast i32** %419 to i8**
  %421 = load i8*, i8** %420, align 8
  call void @_ZdlPv(i8* %421) #15
  %422 = load i32**, i32*** %368, align 8
  %423 = getelementptr inbounds i32*, i32** %422, i64 1
  store i32** %423, i32*** %368, align 8
  %424 = load i64, i64* %396, align 8
  %425 = ptrtoint i32** %423 to i64
  %426 = sub i64 %424, %425
  %427 = ashr exact i64 %426, 3
  %428 = icmp ugt i64 %427, 2
  br i1 %428, label %418, label %429

429:                                              ; preds = %418
  %430 = inttoptr i64 %424 to i32**
  br label %431

431:                                              ; preds = %429, %394
  %432 = phi i32** [ %375, %394 ], [ %430, %429 ]
  %433 = phi i32** [ %369, %394 ], [ %423, %429 ]
  %434 = phi i64 [ %398, %394 ], [ %427, %429 ]
  switch i64 %434, label %438 [
    i64 1, label %436
    i64 2, label %435
  ]

435:                                              ; preds = %431
  br label %436

436:                                              ; preds = %431, %435
  %437 = phi i64 [ 1024, %435 ], [ 512, %431 ]
  store i64 %437, i64* %370, align 8
  br label %438

438:                                              ; preds = %436, %431
  %439 = icmp eq i32** %433, %432
  br i1 %439, label %458, label %440

440:                                              ; preds = %438, %440
  %441 = phi i32** [ %444, %440 ], [ %433, %438 ]
  %442 = bitcast i32** %441 to i8**
  %443 = load i8*, i8** %442, align 8
  call void @_ZdlPv(i8* %443) #15
  %444 = getelementptr inbounds i32*, i32** %441, i64 1
  %445 = icmp eq i32** %444, %432
  br i1 %445, label %446, label %440

446:                                              ; preds = %440
  %447 = load i32**, i32*** %368, align 8
  %448 = load i32**, i32*** %374, align 8
  %449 = icmp eq i32** %448, %447
  br i1 %449, label %458, label %450

450:                                              ; preds = %446
  %451 = ptrtoint i32** %447 to i64
  %452 = getelementptr i32*, i32** %448, i64 -1
  %453 = ptrtoint i32** %452 to i64
  %454 = sub i64 %453, %451
  %455 = lshr i64 %454, 3
  %456 = xor i64 %455, -1
  %457 = getelementptr i32*, i32** %448, i64 %456
  store i32** %457, i32*** %374, align 8
  br label %458

458:                                              ; preds = %450, %446, %438
  %459 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %460 = load i32**, i32*** %459, align 8
  %461 = icmp eq i32** %460, null
  br i1 %461, label %464, label %462

462:                                              ; preds = %458
  %463 = bitcast i32** %460 to i8*
  call void @_ZdlPv(i8* %463) #15
  br label %464

464:                                              ; preds = %458, %462
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %54) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal15TranslatedFrameENS_9allocatorIS3_EEE7reserveEm(%"class.std::__1::vector.7"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.v8::internal::TranslatedFrame"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.7"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 96
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.v8::internal::TranslatedFrame"*
  br i1 %10, label %12, label %90

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.v8::internal::TranslatedFrame"** %13 to i64*
  %15 = icmp ugt i64 %1, 192153584101141162
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #16
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 96
  %21 = mul i64 %1, 96
  %22 = tail call i8* @_Znwm(i64 %21) #15
  %23 = bitcast i8* %22 to %"class.v8::internal::TranslatedFrame"*
  %24 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %23, i64 %20
  %25 = ptrtoint %"class.v8::internal::TranslatedFrame"* %24 to i64
  %26 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %23, i64 %1
  %27 = ptrtoint %"class.v8::internal::TranslatedFrame"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.v8::internal::TranslatedFrame"*
  %29 = icmp eq %"class.v8::internal::TranslatedFrame"* %28, %11
  br i1 %29, label %76, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"class.v8::internal::TranslatedFrame"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"class.v8::internal::TranslatedFrame"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %31, i64 -1
  %34 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %32, i64 -1
  %35 = bitcast %"class.v8::internal::TranslatedFrame"* %33 to i8*
  %36 = bitcast %"class.v8::internal::TranslatedFrame"* %34 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 36, i1 false) #9
  %37 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %31, i64 -1, i32 8
  %38 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %32, i64 -1, i32 8
  %39 = bitcast %"class.std::__1::deque"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::deque"* %37 to i64*
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %31, i64 -1, i32 8, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %32, i64 -1, i32 8, i32 0, i32 0, i32 1
  %44 = bitcast %"class.v8::internal::TranslatedValue"*** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = bitcast %"class.v8::internal::TranslatedValue"*** %42 to i64*
  store i64 %45, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %31, i64 -1, i32 8, i32 0, i32 0, i32 2
  %48 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %32, i64 -1, i32 8, i32 0, i32 0, i32 2
  %49 = bitcast %"class.v8::internal::TranslatedValue"*** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.v8::internal::TranslatedValue"*** %47 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %31, i64 -1, i32 8, i32 0, i32 0, i32 3
  %53 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %32, i64 -1, i32 8, i32 0, i32 0, i32 3
  %54 = bitcast %"class.std::__1::__compressed_pair.10"* %53 to i64*
  %55 = bitcast %"class.std::__1::__compressed_pair.10"* %52 to i64*
  %56 = load i64, i64* %54, align 8
  store i64 %56, i64* %55, align 8
  %57 = bitcast %"class.std::__1::deque"* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 32, i1 false) #9
  %58 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %31, i64 -1, i32 8, i32 0, i32 1
  %59 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %32, i64 -1, i32 8, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  store i64 %60, i64* %58, align 8
  %61 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %32, i64 -1, i32 8, i32 0, i32 2, i32 0, i32 0
  %62 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %31, i64 -1, i32 8, i32 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %61, align 8
  store i64 %63, i64* %62, align 8
  %64 = bitcast i64* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false) #9
  %65 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %31, i64 -1, i32 9, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %32, i64 -1, i32 9, i32 0, i32 0, i32 0, i32 0
  %67 = bitcast i8* %66 to i16*
  %68 = bitcast i8* %65 to i16*
  %69 = load i16, i16* %67, align 8
  store i16 %69, i16* %68, align 8
  %70 = icmp eq %"class.v8::internal::TranslatedFrame"* %34, %11
  br i1 %70, label %71, label %30

71:                                               ; preds = %30
  %72 = ptrtoint %"class.v8::internal::TranslatedFrame"* %33 to i64
  %73 = load i64, i64* %6, align 8
  %74 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %13, align 8
  %75 = inttoptr i64 %73 to %"class.v8::internal::TranslatedFrame"*
  br label %76

76:                                               ; preds = %17, %71
  %77 = phi %"class.v8::internal::TranslatedFrame"* [ %75, %71 ], [ %28, %17 ]
  %78 = phi %"class.v8::internal::TranslatedFrame"* [ %74, %71 ], [ %11, %17 ]
  %79 = phi i64 [ %72, %71 ], [ %25, %17 ]
  %80 = phi i64 [ %73, %71 ], [ %18, %17 ]
  store i64 %79, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %81 = icmp eq %"class.v8::internal::TranslatedFrame"* %78, %77
  br i1 %81, label %86, label %82

82:                                               ; preds = %76, %82
  %83 = phi %"class.v8::internal::TranslatedFrame"* [ %84, %82 ], [ %78, %76 ]
  %84 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %83, i64 -1
  tail call void @_ZN2v88internal15TranslatedFrameD2Ev(%"class.v8::internal::TranslatedFrame"* %84) #9
  %85 = icmp eq %"class.v8::internal::TranslatedFrame"* %84, %77
  br i1 %85, label %86, label %82

86:                                               ; preds = %82, %76
  %87 = icmp eq i64 %80, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = inttoptr i64 %80 to i8*
  tail call void @_ZdlPv(i8* %89) #15
  br label %90

90:                                               ; preds = %88, %86, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedState18ReadUpdateFeedbackEPNS0_24TranslationArrayIteratorENS0_10FixedArrayEP8_IO_FILE(%"class.v8::internal::TranslatedState"* nocapture, %"class.v8::internal::TranslationArrayIterator"*, i64, %struct._IO_FILE*) local_unnamed_addr #0 align 2 {
  %5 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %1) #9
  %6 = icmp eq i32 %5, 27
  br i1 %6, label %8, label %7, !prof !3

7:                                                ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.105, i64 0, i64 0)) #16
  unreachable

8:                                                ; preds = %4
  %9 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %1) #9
  %10 = and i64 %2, -4294967296
  %11 = shl i32 %9, 2
  %12 = sext i32 %11 to i64
  %13 = add i64 %2, 7
  %14 = add i64 %13, %12
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %10, %17
  %19 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %18, i64* %19, align 8
  %20 = tail call i32 @_ZN2v88internal24TranslationArrayIterator4NextEv(%"class.v8::internal::TranslationArrayIterator"* %1) #9
  %21 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 10, i32 0
  store i32 %20, i32* %21, align 8
  %22 = icmp eq %struct._IO_FILE* %3, null
  br i1 %22, label %24, label %23

23:                                               ; preds = %8
  tail call void (%struct._IO_FILE*, i8*, ...) @_ZN2v88internal6PrintFEP8_IO_FILEPKcz(%struct._IO_FILE* nonnull %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.106, i64 0, i64 0), i32 %20) #9
  br label %24

24:                                               ; preds = %8, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedState7PrepareEm(%"class.v8::internal::TranslatedState"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %5, align 8
  %7 = icmp eq %"class.v8::internal::TranslatedFrame"* %4, %6
  br i1 %7, label %8, label %13

8:                                                ; preds = %13, %2
  %9 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %43, label %17

13:                                               ; preds = %2, %13
  %14 = phi %"class.v8::internal::TranslatedFrame"* [ %15, %13 ], [ %4, %2 ]
  tail call void @_ZN2v88internal15TranslatedFrame8HandlifyEv(%"class.v8::internal::TranslatedFrame"* %14)
  %15 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %14, i64 1
  %16 = icmp eq %"class.v8::internal::TranslatedFrame"* %15, %6
  br i1 %16, label %8, label %13

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 3
  %19 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 31, i32 4
  %21 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %20, align 8
  %22 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %21, i64 %10) #9
  %25 = ptrtoint i64* %24 to i64
  br label %39

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 31, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %19, i64 0, i32 31, i32 1
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %28, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %26
  %33 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %19) #9
  br label %34

34:                                               ; preds = %32, %26
  %35 = phi i64* [ %33, %32 ], [ %28, %26 ]
  %36 = ptrtoint i64* %35 to i64
  %37 = add i64 %36, 8
  %38 = inttoptr i64 %37 to i64*
  store i64* %38, i64** %27, align 8
  store i64 %10, i64* %35, align 8
  br label %39

39:                                               ; preds = %23, %34
  %40 = phi i64 [ %25, %23 ], [ %36, %34 ]
  %41 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 8
  %42 = bitcast %"class.v8::internal::Handle.1175"* %41 to i64*
  store i64 %40, i64* %42, align 8
  store i64 0, i64* %9, align 8
  br label %43

43:                                               ; preds = %39, %8
  %44 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 4
  store i64 %1, i64* %44, align 8
  tail call void @_ZN2v88internal15TranslatedState39UpdateFromPreviouslyMaterializedObjectsEv(%"class.v8::internal::TranslatedState"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedState39UpdateFromPreviouslyMaterializedObjectsEv(%"class.v8::internal::TranslatedState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 3
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 26
  %5 = load %"class.v8::internal::MaterializedObjectStore"*, %"class.v8::internal::MaterializedObjectStore"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 4
  %7 = load i64, i64* %6, align 8
  %8 = tail call i64* @_ZN2v88internal23MaterializedObjectStore3GetEm(%"class.v8::internal::MaterializedObjectStore"* %5, i64 %7) #9
  %9 = icmp eq i64* %8, null
  br i1 %9, label %116, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.v8::internal::Isolate"** %2 to %"class.v8::internal::Factory"**
  %12 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %12, i64 376
  %14 = bitcast %"class.v8::internal::Factory"* %13 to i64*
  %15 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = trunc i64 %16 to i32
  %18 = load i64, i64* %8, align 8
  %19 = add i64 %18, 3
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = ashr i32 %21, 1
  %23 = icmp eq i32 %22, %17
  br i1 %23, label %24, label %31, !prof !3

24:                                               ; preds = %10
  %25 = icmp sgt i32 %17, 0
  br i1 %25, label %26, label %116

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 1
  %28 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2, i32 0, i32 0
  %30 = and i64 %16, 4294967295
  br label %32

31:                                               ; preds = %10
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.98, i64 0, i64 0)) #16
  unreachable

32:                                               ; preds = %114, %26
  %33 = phi i64 [ %18, %26 ], [ %115, %114 ]
  %34 = phi i64 [ 0, %26 ], [ %112, %114 ]
  %35 = and i64 %33, -4294967296
  %36 = trunc i64 %34 to i32
  %37 = shl i32 %36, 2
  %38 = sext i32 %37 to i64
  %39 = add nsw i64 %38, 7
  %40 = add i64 %39, %33
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = load i64, i64* %14, align 8
  %44 = trunc i64 %43 to i32
  %45 = icmp eq i32 %42, %44
  br i1 %45, label %111, label %46

46:                                               ; preds = %32
  %47 = load i64, i64* %27, align 8
  %48 = add i64 %47, %34
  %49 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %28, align 8
  %50 = lshr i64 %48, 9
  %51 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %49, i64 %50
  %52 = load %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %51, align 8
  %53 = and i64 %48, 511
  %54 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %52, i64 %53, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %52, i64 %53, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = sext i32 %55 to i64
  %59 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %29, align 8
  %60 = sext i32 %57 to i64
  %61 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %59, i64 %58, i32 8, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, %60
  %64 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %59, i64 %58, i32 8, i32 0, i32 0, i32 1
  %65 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %64, align 8
  %66 = lshr i64 %63, 7
  %67 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %65, i64 %66
  %68 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %67, align 8
  %69 = and i64 %63, 127
  %70 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %68, i64 %69, i32 0
  %71 = load i8, i8* %70, align 8
  %72 = zext i8 %71 to i32
  %73 = add nsw i32 %72, -9
  %74 = icmp ult i32 %73, 2
  br i1 %74, label %76, label %75, !prof !3

75:                                               ; preds = %46
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.99, i64 0, i64 0)) #16
  unreachable

76:                                               ; preds = %46
  %77 = icmp eq i8 %71, 9
  br i1 %77, label %78, label %111

78:                                               ; preds = %76
  %79 = load atomic i32, i32* %41 monotonic, align 4
  %80 = zext i32 %79 to i64
  %81 = or i64 %35, %80
  %82 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %82, i64 0, i32 31, i32 4
  %84 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %83, align 8
  %85 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %84, null
  br i1 %85, label %89, label %86

86:                                               ; preds = %78
  %87 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %84, i64 %81) #9
  %88 = load i64, i64* %87, align 8
  br label %102

89:                                               ; preds = %78
  %90 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %82, i64 0, i32 31, i32 0
  %91 = load i64*, i64** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %82, i64 0, i32 31, i32 1
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %91, %93
  br i1 %94, label %95, label %97

95:                                               ; preds = %89
  %96 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %82) #9
  br label %97

97:                                               ; preds = %95, %89
  %98 = phi i64* [ %96, %95 ], [ %91, %89 ]
  %99 = ptrtoint i64* %98 to i64
  %100 = add i64 %99, 8
  %101 = inttoptr i64 %100 to i64*
  store i64* %101, i64** %90, align 8
  store i64 %81, i64* %98, align 8
  br label %102

102:                                              ; preds = %86, %97
  %103 = phi i64 [ %88, %86 ], [ %81, %97 ]
  %104 = phi i64* [ %87, %86 ], [ %98, %97 ]
  %105 = and i64 %103, 1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %107, label %108, !prof !25

107:                                              ; preds = %102
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.103, i64 0, i64 0)) #16
  unreachable

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %68, i64 %69, i32 3, i32 0, i32 0
  store i64* %104, i64** %109, align 8
  %110 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %68, i64 %69, i32 1
  store i8 2, i8* %110, align 1
  br label %111

111:                                              ; preds = %32, %76, %108
  %112 = add nuw nsw i64 %34, 1
  %113 = icmp eq i64 %112, %30
  br i1 %113, label %116, label %114

114:                                              ; preds = %111
  %115 = load i64, i64* %8, align 8
  br label %32

116:                                              ; preds = %111, %24, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::TranslatedValue"* @_ZN2v88internal15TranslatedState21GetValueByObjectIndexEi(%"class.v8::internal::TranslatedState"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %3
  br i1 %6, label %8, label %7, !prof !3

7:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.72, i64 0, i64 0)) #16
  unreachable

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %3
  %12 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %13 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %12, align 8
  %14 = lshr i64 %11, 9
  %15 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %13, i64 %14
  %16 = load %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %15, align 8
  %17 = and i64 %11, 511
  %18 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %16, i64 %17, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %16, i64 %17, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %19 to i64
  %23 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2, i32 0, i32 0
  %24 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %23, align 8
  %25 = sext i32 %21 to i64
  %26 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %24, i64 %22, i32 8, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, %25
  %29 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %24, i64 %22, i32 8, i32 0, i32 0, i32 1
  %30 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %29, align 8
  %31 = lshr i64 %28, 7
  %32 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %30, i64 %31
  %33 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %32, align 8
  %34 = and i64 %28, 127
  %35 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %33, i64 %34
  ret %"class.v8::internal::TranslatedValue"* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::TranslatedValue"* @_ZN2v88internal15TranslatedState21ResolveCapturedObjectEPNS0_15TranslatedValueE(%"class.v8::internal::TranslatedState"* nocapture readonly, %"class.v8::internal::TranslatedValue"* readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 1
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2, i32 0, i32 0
  br label %7

7:                                                ; preds = %19, %2
  %8 = phi %"class.v8::internal::TranslatedValue"* [ %1, %2 ], [ %43, %19 ]
  %9 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %8, i64 0, i32 0
  %10 = load i8, i8* %9, align 8
  switch i8 %10, label %44 [
    i8 10, label %11
    i8 9, label %45
  ], !prof !2

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %8, i64 0, i32 4
  %13 = bitcast %union.anon* %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %14 to i64
  %16 = load i64, i64* %3, align 8
  %17 = icmp ugt i64 %16, %15
  br i1 %17, label %19, label %18, !prof !3

18:                                               ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.72, i64 0, i64 0)) #16
  unreachable

19:                                               ; preds = %11
  %20 = load i64, i64* %4, align 8
  %21 = add i64 %20, %15
  %22 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %5, align 8
  %23 = lshr i64 %21, 9
  %24 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %22, i64 %23
  %25 = load %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %24, align 8
  %26 = and i64 %21, 511
  %27 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %25, i64 %26, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %25, i64 %26, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %28 to i64
  %32 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %6, align 8
  %33 = sext i32 %30 to i64
  %34 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %32, i64 %31, i32 8, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, %33
  %37 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %32, i64 %31, i32 8, i32 0, i32 0, i32 1
  %38 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %37, align 8
  %39 = lshr i64 %36, 7
  %40 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %38, i64 %39
  %41 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %40, align 8
  %42 = and i64 %36, 127
  %43 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %41, i64 %42
  br label %7

44:                                               ; preds = %7
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.74, i64 0, i64 0)) #16
  unreachable

45:                                               ; preds = %7
  ret %"class.v8::internal::TranslatedValue"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedState26InitializeCapturedObjectAtEiPNSt3__15stackIiNS2_5dequeIiNS2_9allocatorIiEEEEEERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENSB_ILSC_1ELb0EEEEEE(%"class.v8::internal::TranslatedState"* nocapture readonly, i32, %"class.std::__1::stack"*, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = sext i32 %1 to i64
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ugt i64 %8, %6
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.72, i64 0, i64 0)) #16
  unreachable

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %13, %6
  %15 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %16 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %15, align 8
  %17 = lshr i64 %14, 9
  %18 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %16, i64 %17
  %19 = load %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %18, align 8
  %20 = and i64 %14, 511
  %21 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %19, i64 %20, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %19, i64 %20, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #9
  %26 = sext i32 %22 to i64
  %27 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %28, i64 %26
  %30 = sext i32 %24 to i64
  %31 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %28, i64 %26, i32 8, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, %30
  %34 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %28, i64 %26, i32 8, i32 0, i32 0, i32 1
  %35 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %34, align 8
  %36 = lshr i64 %33, 7
  %37 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %35, i64 %36
  %38 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %37, align 8
  %39 = and i64 %33, 127
  %40 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %38, i64 %39
  %41 = add nsw i32 %24, 1
  store i32 %41, i32* %5, align 4
  %42 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %38, i64 %39, i32 1
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 2
  br i1 %44, label %46, label %45, !prof !3

45:                                               ; preds = %11
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.73, i64 0, i64 0)) #16
  unreachable

46:                                               ; preds = %11
  %47 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %40, i64 0, i32 0
  %48 = load i8, i8* %47, align 8
  %49 = icmp eq i8 %48, 9
  br i1 %49, label %50, label %61, !prof !3

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %38, i64 %39, i32 4
  %52 = bitcast %union.anon* %51 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %53 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %52, i64 0, i32 1
  %54 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %55 = bitcast i32*** %54 to i64*
  %56 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %57 = bitcast i32*** %56 to i64*
  %58 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %2, i64 0, i32 0, i32 0, i32 1
  %59 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %60 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %2, i64 0, i32 0
  br label %62

61:                                               ; preds = %46
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.74, i64 0, i64 0)) #16
  unreachable

62:                                               ; preds = %50, %205
  %63 = phi %"class.v8::internal::TranslatedValue"** [ %181, %205 ], [ %35, %50 ]
  %64 = phi i64 [ %182, %205 ], [ %32, %50 ]
  %65 = phi i8 [ %208, %205 ], [ 9, %50 ]
  %66 = phi i32 [ %206, %205 ], [ %41, %50 ]
  %67 = phi i32 [ %207, %205 ], [ 0, %50 ]
  %68 = icmp eq i8 %65, 9
  br i1 %68, label %69, label %71

69:                                               ; preds = %62
  %70 = load i32, i32* %53, align 4
  br label %71

71:                                               ; preds = %62, %69
  %72 = phi i32 [ %70, %69 ], [ 0, %62 ]
  %73 = icmp slt i32 %67, %72
  br i1 %73, label %85, label %74

74:                                               ; preds = %71
  %75 = sext i32 %41 to i64
  %76 = add i64 %64, %75
  %77 = lshr i64 %76, 7
  %78 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %63, i64 %77
  %79 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %78, align 8
  %80 = and i64 %76, 127
  %81 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %79, i64 %80
  %82 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %81, i64 0, i32 0
  %83 = load i8, i8* %82, align 8
  %84 = icmp eq i8 %83, 1
  br i1 %84, label %210, label %209, !prof !3

85:                                               ; preds = %71
  %86 = sext i32 %66 to i64
  %87 = add i64 %64, %86
  %88 = lshr i64 %87, 7
  %89 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %63, i64 %88
  %90 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %89, align 8
  %91 = and i64 %87, 127
  %92 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %90, i64 %91
  %93 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %92, i64 0, i32 0
  %94 = load i8, i8* %93, align 8
  %95 = add i8 %94, -9
  %96 = icmp ult i8 %95, 2
  br i1 %96, label %97, label %180

97:                                               ; preds = %85, %108
  %98 = phi i8 [ %134, %108 ], [ %94, %85 ]
  %99 = phi %"class.v8::internal::TranslatedValue"* [ %132, %108 ], [ %92, %85 ]
  switch i8 %98, label %135 [
    i8 10, label %100
    i8 9, label %136
  ], !prof !2

100:                                              ; preds = %97
  %101 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %99, i64 0, i32 4
  %102 = bitcast %union.anon* %101 to i32*
  %103 = load i32, i32* %102, align 8
  %104 = sext i32 %103 to i64
  %105 = load i64, i64* %7, align 8
  %106 = icmp ugt i64 %105, %104
  br i1 %106, label %108, label %107, !prof !3

107:                                              ; preds = %100
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.72, i64 0, i64 0)) #16
  unreachable

108:                                              ; preds = %100
  %109 = load i64, i64* %12, align 8
  %110 = add i64 %109, %104
  %111 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %15, align 8
  %112 = lshr i64 %110, 9
  %113 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %111, i64 %112
  %114 = load %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %113, align 8
  %115 = and i64 %110, 511
  %116 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %114, i64 %115, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %114, i64 %115, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = sext i32 %117 to i64
  %121 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %27, align 8
  %122 = sext i32 %119 to i64
  %123 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %121, i64 %120, i32 8, i32 0, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = add i64 %124, %122
  %126 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %121, i64 %120, i32 8, i32 0, i32 0, i32 1
  %127 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %126, align 8
  %128 = lshr i64 %125, 7
  %129 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %127, i64 %128
  %130 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %129, align 8
  %131 = and i64 %125, 127
  %132 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %130, i64 %131
  %133 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %132, i64 0, i32 0
  %134 = load i8, i8* %133, align 8
  br label %97

135:                                              ; preds = %97
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.74, i64 0, i64 0)) #16
  unreachable

136:                                              ; preds = %97
  %137 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %99, i64 0, i32 1
  %138 = load i8, i8* %137, align 1
  %139 = icmp eq i8 %138, 2
  br i1 %139, label %180, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %99, i64 0, i32 4
  %142 = bitcast %union.anon* %141 to i32*
  %143 = load i32, i32* %142, align 8
  %144 = load i64, i64* %55, align 8
  %145 = load i64, i64* %57, align 8
  %146 = sub i64 %144, %145
  %147 = icmp eq i64 %146, 0
  %148 = shl i64 %146, 7
  %149 = add i64 %148, -1
  %150 = select i1 %147, i64 0, i64 %149
  %151 = load i64, i64* %58, align 8
  %152 = load i64, i64* %59, align 8
  %153 = add i64 %152, %151
  %154 = icmp eq i64 %150, %153
  %155 = inttoptr i64 %145 to i32**
  %156 = inttoptr i64 %144 to i32**
  br i1 %154, label %157, label %163

157:                                              ; preds = %140
  tail call void @_ZNSt3__15dequeIiNS_9allocatorIiEEE19__add_back_capacityEv(%"class.std::__1::deque.1192"* %60) #9
  %158 = load i64, i64* %59, align 8
  %159 = load i64, i64* %58, align 8
  %160 = load i32**, i32*** %56, align 8
  %161 = load i32**, i32*** %54, align 8
  %162 = add i64 %159, %158
  br label %163

163:                                              ; preds = %157, %140
  %164 = phi i64 [ %162, %157 ], [ %153, %140 ]
  %165 = phi i32** [ %161, %157 ], [ %156, %140 ]
  %166 = phi i32** [ %160, %157 ], [ %155, %140 ]
  %167 = icmp eq i32** %165, %166
  br i1 %167, label %174, label %168

168:                                              ; preds = %163
  %169 = lshr i64 %164, 10
  %170 = getelementptr inbounds i32*, i32** %166, i64 %169
  %171 = load i32*, i32** %170, align 8
  %172 = and i64 %164, 1023
  %173 = getelementptr inbounds i32, i32* %171, i64 %172
  br label %174

174:                                              ; preds = %163, %168
  %175 = phi i32* [ %173, %168 ], [ null, %163 ]
  store i32 %143, i32* %175, align 4
  %176 = load i64, i64* %59, align 8
  %177 = add i64 %176, 1
  store i64 %177, i64* %59, align 8
  store i8 2, i8* %137, align 1
  %178 = load i64, i64* %31, align 8
  %179 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %34, align 8
  br label %180

180:                                              ; preds = %85, %136, %174
  %181 = phi %"class.v8::internal::TranslatedValue"** [ %63, %85 ], [ %63, %136 ], [ %179, %174 ]
  %182 = phi i64 [ %64, %85 ], [ %64, %136 ], [ %178, %174 ]
  br label %183

183:                                              ; preds = %202, %180
  %184 = phi i64 [ %191, %202 ], [ %86, %180 ]
  %185 = phi i32 [ %203, %202 ], [ 1, %180 ]
  %186 = add i64 %182, %184
  %187 = lshr i64 %186, 7
  %188 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %181, i64 %187
  %189 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %188, align 8
  %190 = and i64 %186, 127
  %191 = add i64 %184, 1
  %192 = add nsw i32 %185, -1
  %193 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %189, i64 %190, i32 0
  %194 = load i8, i8* %193, align 8
  %195 = icmp eq i8 %194, 9
  br i1 %195, label %196, label %202

196:                                              ; preds = %183
  %197 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %189, i64 %190, i32 4
  %198 = bitcast %union.anon* %197 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %199 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %198, i64 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = add nsw i32 %200, %192
  br label %202

202:                                              ; preds = %196, %183
  %203 = phi i32 [ %201, %196 ], [ %192, %183 ]
  %204 = icmp sgt i32 %203, 0
  br i1 %204, label %183, label %205

205:                                              ; preds = %202
  %206 = trunc i64 %191 to i32
  %207 = add nuw nsw i32 %67, 1
  %208 = load i8, i8* %47, align 8
  br label %62

209:                                              ; preds = %74
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.75, i64 0, i64 0)) #16
  unreachable

210:                                              ; preds = %74
  %211 = tail call i64* @_ZN2v88internal15TranslatedValue8GetValueEv(%"class.v8::internal::TranslatedValue"* %81)
  %212 = load i64, i64* %211, align 8
  %213 = and i64 %212, -4294967296
  %214 = add i64 %212, -1
  %215 = inttoptr i64 %214 to i32*
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = zext i32 %216 to i64
  %218 = or i64 %213, %217
  %219 = add i64 %218, 7
  %220 = inttoptr i64 %219 to i16*
  %221 = load atomic i16, i16* %220 monotonic, align 2
  %222 = icmp eq i16 %221, 172
  br i1 %222, label %224, label %223, !prof !3

223:                                              ; preds = %210
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.76, i64 0, i64 0)) #16
  unreachable

224:                                              ; preds = %210
  %225 = add nsw i32 %24, 2
  store i32 %225, i32* %5, align 4
  %226 = add i64 %212, 7
  %227 = inttoptr i64 %226 to i16*
  %228 = load atomic i16, i16* %227 monotonic, align 2
  switch i16 %228, label %230 [
    i16 66, label %239
    i16 134, label %239
    i16 119, label %229
    i16 137, label %229
    i16 138, label %229
    i16 139, label %229
    i16 140, label %229
    i16 141, label %229
    i16 142, label %229
    i16 143, label %229
    i16 144, label %229
    i16 145, label %229
    i16 146, label %229
    i16 130, label %229
    i16 120, label %229
    i16 125, label %229
    i16 126, label %229
    i16 123, label %229
    i16 122, label %229
    i16 124, label %229
    i16 128, label %229
    i16 176, label %229
    i16 131, label %229
    i16 136, label %229
  ]

229:                                              ; preds = %224, %224, %224, %224, %224, %224, %224, %224, %224, %224, %224, %224, %224, %224, %224, %224, %224, %224, %224, %224, %224, %224
  call void @_ZN2v88internal15TranslatedState34InitializeObjectWithTaggedFieldsAtEPNS0_15TranslatedFrameEPiPNS0_15TranslatedValueENS0_6HandleINS0_3MapEEERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENSB_ILSC_1ELb0EEEEEE(%"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedFrame"* %29, i32* nonnull %5, %"class.v8::internal::TranslatedValue"* %40, i64* %211, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1) %3)
  br label %235

230:                                              ; preds = %224
  %231 = load atomic i16, i16* %227 monotonic, align 2
  %232 = icmp ugt i16 %231, 188
  br i1 %232, label %234, label %233, !prof !3

233:                                              ; preds = %230
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.77, i64 0, i64 0)) #16
  unreachable

234:                                              ; preds = %230
  call void @_ZN2v88internal15TranslatedState20InitializeJSObjectAtEPNS0_15TranslatedFrameEPiPNS0_15TranslatedValueENS0_6HandleINS0_3MapEEERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENSB_ILSC_1ELb0EEEEEE(%"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedFrame"* %29, i32* nonnull %5, %"class.v8::internal::TranslatedValue"* %40, i64* %211, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1) %3)
  br label %235

235:                                              ; preds = %229, %234
  %236 = load i32, i32* %5, align 4
  %237 = icmp eq i32 %236, %66
  br i1 %237, label %239, label %238, !prof !3

238:                                              ; preds = %235
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.78, i64 0, i64 0)) #16
  unreachable

239:                                              ; preds = %235, %224, %224
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedState9SkipSlotsEiPNS0_15TranslatedFrameEPi(%"class.v8::internal::TranslatedState"* nocapture readnone, i32, %"class.v8::internal::TranslatedFrame"* nocapture readonly, i32* nocapture) local_unnamed_addr #7 align 2 {
  %5 = icmp sgt i32 %1, 0
  br i1 %5, label %6, label %35

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %2, i64 0, i32 8, i32 0, i32 1
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %2, i64 0, i32 8, i32 0, i32 0, i32 1
  %9 = load i32, i32* %3, align 4
  br label %10

10:                                               ; preds = %6, %32
  %11 = phi i32 [ %9, %6 ], [ %21, %32 ]
  %12 = phi i32 [ %1, %6 ], [ %33, %32 ]
  %13 = sext i32 %11 to i64
  %14 = load i64, i64* %7, align 8
  %15 = add i64 %14, %13
  %16 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %8, align 8
  %17 = lshr i64 %15, 7
  %18 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %16, i64 %17
  %19 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %18, align 8
  %20 = and i64 %15, 127
  %21 = add nsw i32 %11, 1
  store i32 %21, i32* %3, align 4
  %22 = add nsw i32 %12, -1
  %23 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %19, i64 %20, i32 0
  %24 = load i8, i8* %23, align 8
  %25 = icmp eq i8 %24, 9
  br i1 %25, label %26, label %32

26:                                               ; preds = %10
  %27 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %19, i64 %20, i32 4
  %28 = bitcast %union.anon* %27 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %29 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %28, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %30, %22
  br label %32

32:                                               ; preds = %26, %10
  %33 = phi i32 [ %31, %26 ], [ %22, %10 ]
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %10, label %35

35:                                               ; preds = %32, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedState34InitializeObjectWithTaggedFieldsAtEPNS0_15TranslatedFrameEPiPNS0_15TranslatedValueENS0_6HandleINS0_3MapEEERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENSB_ILSC_1ELb0EEEEEE(%"class.v8::internal::TranslatedState"* nocapture readonly, %"class.v8::internal::TranslatedFrame"* nocapture readonly, i32* nocapture, %"class.v8::internal::TranslatedValue"* nocapture readonly, i64*, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %3, i64 0, i32 3, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 3
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 0, i32 7, i32 0, i64 29
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %9 to i32
  %15 = trunc i64 %13 to i32
  %16 = icmp eq i32 %14, %15
  br i1 %16, label %17, label %66

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %3, i64 0, i32 0
  %19 = load i8, i8* %18, align 8
  %20 = icmp eq i8 %19, 9
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %3, i64 0, i32 4
  %23 = bitcast %union.anon* %22 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %24 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %23, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 2
  br i1 %26, label %28, label %27, !prof !3

27:                                               ; preds = %17, %21
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.95, i64 0, i64 0)) #16
  unreachable

28:                                               ; preds = %21
  %29 = load i32, i32* %2, align 4
  %30 = tail call %"class.v8::internal::TranslatedValue"* @_ZN2v88internal15TranslatedState15GetResolvedSlotEPNS0_15TranslatedFrameEi(%"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedFrame"* %1, i32 %29) #9
  %31 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 1
  %32 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 0, i32 1
  %33 = load i32, i32* %2, align 4
  %34 = sext i32 %33 to i64
  br label %35

35:                                               ; preds = %57, %28
  %36 = phi i64 [ %45, %57 ], [ %34, %28 ]
  %37 = phi i32 [ %58, %57 ], [ 1, %28 ]
  %38 = load i64, i64* %31, align 8
  %39 = add i64 %38, %36
  %40 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %32, align 8
  %41 = lshr i64 %39, 7
  %42 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %40, i64 %41
  %43 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %42, align 8
  %44 = and i64 %39, 127
  %45 = add i64 %36, 1
  %46 = trunc i64 %45 to i32
  store i32 %46, i32* %2, align 4
  %47 = add nsw i32 %37, -1
  %48 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %43, i64 %44, i32 0
  %49 = load i8, i8* %48, align 8
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %57

51:                                               ; preds = %35
  %52 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %43, i64 %44, i32 4
  %53 = bitcast %union.anon* %52 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %54 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %53, i64 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = add nsw i32 %55, %47
  br label %57

57:                                               ; preds = %51, %35
  %58 = phi i32 [ %56, %51 ], [ %47, %35 ]
  %59 = icmp sgt i32 %58, 0
  br i1 %59, label %35, label %60

60:                                               ; preds = %57
  %61 = tail call i64* @_ZN2v88internal15TranslatedValue8GetValueEv(%"class.v8::internal::TranslatedValue"* %30) #9
  %62 = load i64, i64* %61, align 8
  %63 = trunc i64 %62 to i32
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %205, label %65, !prof !3

65:                                               ; preds = %60
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.96, i64 0, i64 0)) #16
  unreachable

66:                                               ; preds = %6
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 2
  tail call void @_ZN2v88internal4Heap24NotifyObjectLayoutChangeENS0_10HeapObjectERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS4_ILS5_1ELb0EEEEEENS0_23InvalidateRecordedSlotsE(%"class.v8::internal::Heap"* %67, i64 %9, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1) %5, i32 0) #9
  %68 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %3, i64 0, i32 0
  %69 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %3, i64 0, i32 4
  %70 = bitcast %union.anon* %69 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %71 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %70, i64 0, i32 1
  %72 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 1
  %73 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 0, i32 1
  br label %74

74:                                               ; preds = %203, %66
  %75 = phi i64 [ %204, %203 ], [ 1, %66 ]
  %76 = load i8, i8* %68, align 8
  %77 = icmp eq i8 %76, 9
  br i1 %77, label %78, label %80

78:                                               ; preds = %74
  %79 = load i32, i32* %71, align 4
  br label %80

80:                                               ; preds = %74, %78
  %81 = phi i32 [ %79, %78 ], [ 0, %74 ]
  %82 = sext i32 %81 to i64
  %83 = icmp slt i64 %75, %82
  br i1 %83, label %105, label %84

84:                                               ; preds = %80
  %85 = load i64, i64* %8, align 8
  %86 = load i64, i64* %4, align 8
  %87 = add i64 %85, -1
  %88 = inttoptr i64 %87 to i32*
  %89 = trunc i64 %86 to i32
  store atomic volatile i32 %89, i32* %88 release, align 4
  %90 = icmp eq i32 %89, 0
  %91 = and i64 %86, 1
  %92 = icmp eq i64 %91, 0
  %93 = or i1 %90, %92
  br i1 %93, label %205, label %94

94:                                               ; preds = %84
  %95 = and i64 %85, -262144
  %96 = or i64 %95, 8
  %97 = inttoptr i64 %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = and i64 %98, 262144
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %205, label %101

101:                                              ; preds = %94
  %102 = or i64 %95, 16
  %103 = inttoptr i64 %102 to %"class.v8::internal::Heap"**
  %104 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %103, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %104, i64 %85, i64 0, i64 %86) #9
  br label %205

105:                                              ; preds = %80
  %106 = load i32, i32* %2, align 4
  %107 = tail call %"class.v8::internal::TranslatedValue"* @_ZN2v88internal15TranslatedState15GetResolvedSlotEPNS0_15TranslatedFrameEi(%"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedFrame"* %1, i32 %106) #9
  %108 = load i32, i32* %2, align 4
  %109 = sext i32 %108 to i64
  br label %110

110:                                              ; preds = %132, %105
  %111 = phi i64 [ %120, %132 ], [ %109, %105 ]
  %112 = phi i32 [ %133, %132 ], [ 1, %105 ]
  %113 = load i64, i64* %72, align 8
  %114 = add i64 %113, %111
  %115 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %73, align 8
  %116 = lshr i64 %114, 7
  %117 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %115, i64 %116
  %118 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %117, align 8
  %119 = and i64 %114, 127
  %120 = add i64 %111, 1
  %121 = trunc i64 %120 to i32
  store i32 %121, i32* %2, align 4
  %122 = add nsw i32 %112, -1
  %123 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %118, i64 %119, i32 0
  %124 = load i8, i8* %123, align 8
  %125 = icmp eq i8 %124, 9
  br i1 %125, label %126, label %132

126:                                              ; preds = %110
  %127 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %118, i64 %119, i32 4
  %128 = bitcast %union.anon* %127 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %129 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %128, i64 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = add nsw i32 %130, %122
  br label %132

132:                                              ; preds = %126, %110
  %133 = phi i32 [ %131, %126 ], [ %122, %110 ]
  %134 = icmp sgt i32 %133, 0
  br i1 %134, label %110, label %135

135:                                              ; preds = %132
  %136 = shl i64 %75, 2
  %137 = load i64, i64* %8, align 8
  %138 = and i64 %136, 4294967292
  %139 = add nsw i64 %138, -1
  %140 = add i64 %139, %137
  %141 = inttoptr i64 %140 to i8*
  %142 = load i8, i8* %141, align 1
  %143 = icmp ugt i64 %75, 1
  %144 = icmp eq i8 %142, 1
  %145 = and i1 %143, %144
  br i1 %145, label %146, label %149

146:                                              ; preds = %135
  %147 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %107, i64 0, i32 3, i32 0, i32 0
  %148 = load i64*, i64** %147, align 8
  br label %158

149:                                              ; preds = %135
  %150 = icmp ne i8 %142, 0
  %151 = icmp ne i64 %75, 1
  %152 = and i1 %151, %150
  br i1 %152, label %153, label %154, !prof !25

153:                                              ; preds = %149
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.97, i64 0, i64 0)) #16
  unreachable

154:                                              ; preds = %149
  %155 = tail call i64* @_ZN2v88internal15TranslatedValue8GetValueEv(%"class.v8::internal::TranslatedValue"* %107)
  %156 = load i64, i64* %8, align 8
  %157 = add i64 %139, %156
  br label %158

158:                                              ; preds = %154, %146
  %159 = phi i64 [ %157, %154 ], [ %140, %146 ]
  %160 = phi i64* [ %155, %154 ], [ %148, %146 ]
  %161 = load i64, i64* %160, align 8
  %162 = inttoptr i64 %159 to i32*
  %163 = trunc i64 %161 to i32
  store atomic volatile i32 %163, i32* %162 monotonic, align 4
  %164 = load i64, i64* %8, align 8
  %165 = add i64 %164, %139
  %166 = load i64, i64* %160, align 8
  %167 = and i64 %166, 1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %203, label %169

169:                                              ; preds = %158
  %170 = and i64 %164, -262144
  %171 = or i64 %170, 8
  %172 = inttoptr i64 %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = and i64 %173, 262144
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %185, label %176

176:                                              ; preds = %169
  %177 = or i64 %170, 16
  %178 = inttoptr i64 %177 to %"class.v8::internal::Heap"**
  %179 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %178, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %179, i64 %164, i64 %165, i64 %166) #9
  %180 = load i64, i64* %8, align 8
  %181 = load i64, i64* %160, align 8
  %182 = add i64 %180, %139
  %183 = and i64 %181, 1
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %203, label %185

185:                                              ; preds = %169, %176
  %186 = phi i64 [ %180, %176 ], [ %164, %169 ]
  %187 = phi i64 [ %181, %176 ], [ %166, %169 ]
  %188 = phi i64 [ %182, %176 ], [ %165, %169 ]
  %189 = and i64 %187, -262144
  %190 = or i64 %189, 8
  %191 = inttoptr i64 %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = and i64 %192, 24
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %203, label %195

195:                                              ; preds = %185
  %196 = and i64 %186, -262144
  %197 = or i64 %196, 8
  %198 = inttoptr i64 %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = and i64 %199, 24
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %195
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %186, i64 %188, i64 %187) #9
  br label %203

203:                                              ; preds = %158, %176, %185, %195, %202
  %204 = add nuw nsw i64 %75, 1
  br label %74

205:                                              ; preds = %101, %94, %84, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedState20InitializeJSObjectAtEPNS0_15TranslatedFrameEPiPNS0_15TranslatedValueENS0_6HandleINS0_3MapEEERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENSB_ILSC_1ELb0EEEEEE(%"class.v8::internal::TranslatedState"* nocapture readonly, %"class.v8::internal::TranslatedFrame"* nocapture readonly, i32* nocapture, %"class.v8::internal::TranslatedValue"* nocapture readonly, i64*, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %3, i64 0, i32 3, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %3, i64 0, i32 0
  %10 = load i8, i8* %9, align 8
  %11 = icmp eq i8 %10, 9
  br i1 %11, label %12, label %18

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %3, i64 0, i32 4
  %14 = bitcast %union.anon* %13 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %15 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, 1
  br i1 %17, label %19, label %18, !prof !3

18:                                               ; preds = %6, %12
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.93, i64 0, i64 0)) #16
  unreachable

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 3
  %21 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 2
  %23 = load i64, i64* %8, align 8
  tail call void @_ZN2v88internal4Heap24NotifyObjectLayoutChangeENS0_10HeapObjectERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS4_ILS5_1ELb0EEEEEENS0_23InvalidateRecordedSlotsE(%"class.v8::internal::Heap"* %22, i64 %23, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1) %5, i32 0) #9
  %24 = load i32, i32* %2, align 4
  %25 = tail call %"class.v8::internal::TranslatedValue"* @_ZN2v88internal15TranslatedState15GetResolvedSlotEPNS0_15TranslatedFrameEi(%"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedFrame"* %1, i32 %24) #9
  %26 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 1
  %27 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 0, i32 1
  %28 = load i32, i32* %2, align 4
  %29 = sext i32 %28 to i64
  br label %30

30:                                               ; preds = %52, %19
  %31 = phi i64 [ %40, %52 ], [ %29, %19 ]
  %32 = phi i32 [ %53, %52 ], [ 1, %19 ]
  %33 = load i64, i64* %26, align 8
  %34 = add i64 %33, %31
  %35 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %27, align 8
  %36 = lshr i64 %34, 7
  %37 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %35, i64 %36
  %38 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %37, align 8
  %39 = and i64 %34, 127
  %40 = add i64 %31, 1
  %41 = trunc i64 %40 to i32
  store i32 %41, i32* %2, align 4
  %42 = add nsw i32 %32, -1
  %43 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %38, i64 %39, i32 0
  %44 = load i8, i8* %43, align 8
  %45 = icmp eq i8 %44, 9
  br i1 %45, label %46, label %52

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %38, i64 %39, i32 4
  %48 = bitcast %union.anon* %47 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %49 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %48, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = add nsw i32 %50, %42
  br label %52

52:                                               ; preds = %46, %30
  %53 = phi i32 [ %51, %46 ], [ %42, %30 ]
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %30, label %55

55:                                               ; preds = %52
  %56 = tail call i64* @_ZN2v88internal15TranslatedValue8GetValueEv(%"class.v8::internal::TranslatedValue"* %25) #9
  %57 = load i64, i64* %8, align 8
  %58 = load i64, i64* %56, align 8
  %59 = add i64 %57, 3
  %60 = inttoptr i64 %59 to i32*
  %61 = trunc i64 %58 to i32
  store atomic volatile i32 %61, i32* %60 monotonic, align 4
  %62 = load i64, i64* %8, align 8
  %63 = add i64 %62, 3
  %64 = load i64, i64* %56, align 8
  %65 = and i64 %64, 1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %101, label %67

67:                                               ; preds = %55
  %68 = and i64 %62, -262144
  %69 = or i64 %68, 8
  %70 = inttoptr i64 %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = and i64 %71, 262144
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %83, label %74

74:                                               ; preds = %67
  %75 = or i64 %68, 16
  %76 = inttoptr i64 %75 to %"class.v8::internal::Heap"**
  %77 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %76, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %77, i64 %62, i64 %63, i64 %64) #9
  %78 = load i64, i64* %8, align 8
  %79 = load i64, i64* %56, align 8
  %80 = add i64 %78, 3
  %81 = and i64 %79, 1
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %101, label %83

83:                                               ; preds = %67, %74
  %84 = phi i64 [ %78, %74 ], [ %62, %67 ]
  %85 = phi i64 [ %79, %74 ], [ %64, %67 ]
  %86 = phi i64 [ %80, %74 ], [ %63, %67 ]
  %87 = and i64 %85, -262144
  %88 = or i64 %87, 8
  %89 = inttoptr i64 %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = and i64 %90, 24
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %101, label %93

93:                                               ; preds = %83
  %94 = and i64 %84, -262144
  %95 = or i64 %94, 8
  %96 = inttoptr i64 %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = and i64 %97, 24
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %93
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %84, i64 %86, i64 %85) #9
  br label %101

101:                                              ; preds = %55, %74, %83, %93, %100
  br label %102

102:                                              ; preds = %101, %265
  %103 = phi i64 [ %266, %265 ], [ 2, %101 ]
  %104 = load i8, i8* %9, align 8
  %105 = icmp eq i8 %104, 9
  br i1 %105, label %106, label %108

106:                                              ; preds = %102
  %107 = load i32, i32* %15, align 4
  br label %108

108:                                              ; preds = %102, %106
  %109 = phi i32 [ %107, %106 ], [ 0, %102 ]
  %110 = sext i32 %109 to i64
  %111 = icmp slt i64 %103, %110
  br i1 %111, label %134, label %112

112:                                              ; preds = %108
  %113 = load i64, i64* %8, align 8
  %114 = load i64, i64* %4, align 8
  %115 = add i64 %113, -1
  %116 = inttoptr i64 %115 to i32*
  %117 = trunc i64 %114 to i32
  store atomic volatile i32 %117, i32* %116 release, align 4
  %118 = icmp eq i32 %117, 0
  %119 = and i64 %114, 1
  %120 = icmp eq i64 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %133, label %122

122:                                              ; preds = %112
  %123 = and i64 %113, -262144
  %124 = or i64 %123, 8
  %125 = inttoptr i64 %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = and i64 %126, 262144
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %133, label %129

129:                                              ; preds = %122
  %130 = or i64 %123, 16
  %131 = inttoptr i64 %130 to %"class.v8::internal::Heap"**
  %132 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %131, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %132, i64 %113, i64 0, i64 %114) #9
  br label %133

133:                                              ; preds = %112, %122, %129
  ret void

134:                                              ; preds = %108
  %135 = load i32, i32* %2, align 4
  %136 = tail call %"class.v8::internal::TranslatedValue"* @_ZN2v88internal15TranslatedState15GetResolvedSlotEPNS0_15TranslatedFrameEi(%"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedFrame"* %1, i32 %135) #9
  %137 = load i32, i32* %2, align 4
  %138 = sext i32 %137 to i64
  br label %139

139:                                              ; preds = %161, %134
  %140 = phi i64 [ %149, %161 ], [ %138, %134 ]
  %141 = phi i32 [ %162, %161 ], [ 1, %134 ]
  %142 = load i64, i64* %26, align 8
  %143 = add i64 %142, %140
  %144 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %27, align 8
  %145 = lshr i64 %143, 7
  %146 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %144, i64 %145
  %147 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %146, align 8
  %148 = and i64 %143, 127
  %149 = add i64 %140, 1
  %150 = trunc i64 %149 to i32
  store i32 %150, i32* %2, align 4
  %151 = add nsw i32 %141, -1
  %152 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %147, i64 %148, i32 0
  %153 = load i8, i8* %152, align 8
  %154 = icmp eq i8 %153, 9
  br i1 %154, label %155, label %161

155:                                              ; preds = %139
  %156 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %147, i64 %148, i32 4
  %157 = bitcast %union.anon* %156 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %158 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %157, i64 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = add nsw i32 %159, %151
  br label %161

161:                                              ; preds = %155, %139
  %162 = phi i32 [ %160, %155 ], [ %151, %139 ]
  %163 = icmp sgt i32 %162, 0
  br i1 %163, label %139, label %164

164:                                              ; preds = %161
  %165 = shl i64 %103, 2
  %166 = load i64, i64* %8, align 8
  %167 = and i64 %165, 4294967292
  %168 = add i64 %166, -1
  %169 = add i64 %168, %167
  %170 = inttoptr i64 %169 to i8*
  %171 = load i8, i8* %170, align 1
  switch i8 %171, label %217 [
    i8 1, label %172
    i8 0, label %218
  ], !prof !2

172:                                              ; preds = %164
  %173 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %136, i64 0, i32 3, i32 0, i32 0
  %174 = load i64*, i64** %173, align 8
  %175 = load i64, i64* %174, align 8
  %176 = add nsw i64 %167, -1
  %177 = add i64 %176, %166
  %178 = inttoptr i64 %177 to i32*
  %179 = trunc i64 %175 to i32
  store atomic volatile i32 %179, i32* %178 monotonic, align 4
  %180 = load i64, i64* %8, align 8
  %181 = add i64 %180, %176
  %182 = load i64, i64* %174, align 8
  %183 = and i64 %182, 1
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %199, label %185

185:                                              ; preds = %172
  %186 = and i64 %180, -262144
  %187 = or i64 %186, 8
  %188 = inttoptr i64 %187 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = and i64 %189, 262144
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %199, label %192

192:                                              ; preds = %185
  %193 = or i64 %186, 16
  %194 = inttoptr i64 %193 to %"class.v8::internal::Heap"**
  %195 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %194, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %195, i64 %180, i64 %181, i64 %182) #9
  %196 = load i64, i64* %8, align 8
  %197 = load i64, i64* %174, align 8
  %198 = add i64 %196, %176
  br label %199

199:                                              ; preds = %172, %185, %192
  %200 = phi i64 [ %181, %172 ], [ %181, %185 ], [ %198, %192 ]
  %201 = phi i64 [ %182, %172 ], [ %182, %185 ], [ %197, %192 ]
  %202 = phi i64 [ %180, %172 ], [ %180, %185 ], [ %196, %192 ]
  %203 = and i64 %201, -262144
  %204 = or i64 %203, 8
  %205 = inttoptr i64 %204 to i64*
  %206 = load i64, i64* %205, align 8
  %207 = and i64 %206, 24
  %208 = icmp eq i64 %207, 0
  br i1 %208, label %265, label %209

209:                                              ; preds = %199
  %210 = and i64 %202, -262144
  %211 = or i64 %210, 8
  %212 = inttoptr i64 %211 to i64*
  %213 = load i64, i64* %212, align 8
  %214 = and i64 %213, 24
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %216, label %265

216:                                              ; preds = %209
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %202, i64 %200, i64 %201) #9
  br label %265

217:                                              ; preds = %164
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.94, i64 0, i64 0)) #16
  unreachable

218:                                              ; preds = %164
  %219 = tail call i64* @_ZN2v88internal15TranslatedValue8GetValueEv(%"class.v8::internal::TranslatedValue"* %136)
  %220 = load i64, i64* %8, align 8
  %221 = load i64, i64* %219, align 8
  %222 = add nsw i64 %167, -1
  %223 = add i64 %222, %220
  %224 = inttoptr i64 %223 to i32*
  %225 = trunc i64 %221 to i32
  store atomic volatile i32 %225, i32* %224 monotonic, align 4
  %226 = load i64, i64* %8, align 8
  %227 = add i64 %226, %222
  %228 = load i64, i64* %219, align 8
  %229 = and i64 %228, 1
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %265, label %231

231:                                              ; preds = %218
  %232 = and i64 %226, -262144
  %233 = or i64 %232, 8
  %234 = inttoptr i64 %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = and i64 %235, 262144
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %247, label %238

238:                                              ; preds = %231
  %239 = or i64 %232, 16
  %240 = inttoptr i64 %239 to %"class.v8::internal::Heap"**
  %241 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %240, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %241, i64 %226, i64 %227, i64 %228) #9
  %242 = load i64, i64* %8, align 8
  %243 = load i64, i64* %219, align 8
  %244 = add i64 %242, %222
  %245 = and i64 %243, 1
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %265, label %247

247:                                              ; preds = %231, %238
  %248 = phi i64 [ %242, %238 ], [ %226, %231 ]
  %249 = phi i64 [ %243, %238 ], [ %228, %231 ]
  %250 = phi i64 [ %244, %238 ], [ %227, %231 ]
  %251 = and i64 %249, -262144
  %252 = or i64 %251, 8
  %253 = inttoptr i64 %252 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = and i64 %254, 24
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %265, label %257

257:                                              ; preds = %247
  %258 = and i64 %248, -262144
  %259 = or i64 %258, 8
  %260 = inttoptr i64 %259 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = and i64 %261, 24
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %265

264:                                              ; preds = %257
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %248, i64 %250, i64 %249) #9
  br label %265

265:                                              ; preds = %218, %264, %257, %247, %238, %216, %209, %199
  %266 = add nuw nsw i64 %103, 1
  br label %102
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedState31EnsureCapturedObjectAllocatedAtEiPNSt3__15stackIiNS2_5dequeIiNS2_9allocatorIiEEEEEE(%"class.v8::internal::TranslatedState"* nocapture readonly, i32, %"class.std::__1::stack"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp ugt i64 %7, %5
  br i1 %8, label %10, label %9, !prof !3

9:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.72, i64 0, i64 0)) #16
  unreachable

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, %5
  %14 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %15 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %14, align 8
  %16 = lshr i64 %13, 9
  %17 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %15, i64 %16
  %18 = load %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %17, align 8
  %19 = and i64 %13, 511
  %20 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %18, i64 %19, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %18, i64 %19, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #9
  %25 = sext i32 %21 to i64
  %26 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %26, align 8
  %28 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %27, i64 %25
  %29 = sext i32 %23 to i64
  %30 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %27, i64 %25, i32 8, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, %29
  %33 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %27, i64 %25, i32 8, i32 0, i32 0, i32 1
  %34 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %33, align 8
  %35 = lshr i64 %32, 7
  %36 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %34, i64 %35
  %37 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %36, align 8
  %38 = and i64 %32, 127
  %39 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %37, i64 %38
  %40 = add nsw i32 %23, 1
  store i32 %40, i32* %4, align 4
  %41 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %37, i64 %38, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp eq i8 %42, 1
  br i1 %43, label %45, label %44, !prof !3

44:                                               ; preds = %10
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.84, i64 0, i64 0)) #16
  unreachable

45:                                               ; preds = %10
  %46 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %39, i64 0, i32 0
  %47 = load i8, i8* %46, align 8
  %48 = icmp eq i8 %47, 9
  br i1 %48, label %50, label %49, !prof !3

49:                                               ; preds = %45
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.74, i64 0, i64 0)) #16
  unreachable

50:                                               ; preds = %45
  %51 = sext i32 %40 to i64
  %52 = add i64 %31, %51
  %53 = lshr i64 %52, 7
  %54 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %34, i64 %53
  %55 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %54, align 8
  %56 = and i64 %52, 127
  %57 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %55, i64 %56
  %58 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %57, i64 0, i32 0
  %59 = load i8, i8* %58, align 8
  %60 = icmp eq i8 %59, 1
  br i1 %60, label %62, label %61, !prof !3

61:                                               ; preds = %50
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.75, i64 0, i64 0)) #16
  unreachable

62:                                               ; preds = %50
  %63 = tail call i64* @_ZN2v88internal15TranslatedValue8GetValueEv(%"class.v8::internal::TranslatedValue"* %57)
  %64 = load i64, i64* %63, align 8
  %65 = and i64 %64, -4294967296
  %66 = add i64 %64, -1
  %67 = inttoptr i64 %66 to i32*
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %65, %69
  %71 = add i64 %70, 7
  %72 = inttoptr i64 %71 to i16*
  %73 = load atomic i16, i16* %72 monotonic, align 2
  %74 = icmp eq i16 %73, 172
  br i1 %74, label %76, label %75, !prof !3

75:                                               ; preds = %62
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.76, i64 0, i64 0)) #16
  unreachable

76:                                               ; preds = %62
  %77 = add nsw i32 %23, 2
  store i32 %77, i32* %4, align 4
  %78 = add i64 %64, 7
  %79 = inttoptr i64 %78 to i16*
  %80 = load atomic i16, i16* %79 monotonic, align 2
  switch i16 %80, label %321 [
    i16 134, label %81
    i16 66, label %82
    i16 119, label %83
    i16 131, label %83
    i16 137, label %83
    i16 138, label %83
    i16 139, label %83
    i16 140, label %83
    i16 141, label %83
    i16 142, label %83
    i16 143, label %83
    i16 144, label %83
    i16 145, label %83
    i16 146, label %83
    i16 120, label %83
    i16 125, label %83
    i16 126, label %83
    i16 123, label %83
    i16 122, label %83
    i16 124, label %83
    i16 128, label %83
    i16 136, label %174
    i16 176, label %250
  ]

81:                                               ; preds = %76
  call void @_ZN2v88internal15TranslatedState27MaterializeFixedDoubleArrayEPNS0_15TranslatedFrameEPiPNS0_15TranslatedValueENS0_6HandleINS0_3MapEEE(%"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedFrame"* %28, i32* nonnull %4, %"class.v8::internal::TranslatedValue"* %39, i64* undef)
  br label %392

82:                                               ; preds = %76
  call void @_ZN2v88internal15TranslatedState21MaterializeHeapNumberEPNS0_15TranslatedFrameEPiPNS0_15TranslatedValueE(%"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedFrame"* %28, i32* nonnull %4, %"class.v8::internal::TranslatedValue"* %39)
  br label %392

83:                                               ; preds = %76, %76, %76, %76, %76, %76, %76, %76, %76, %76, %76, %76, %76, %76, %76, %76, %76, %76, %76
  %84 = sext i32 %77 to i64
  %85 = load i64, i64* %30, align 8
  %86 = add i64 %85, %84
  %87 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %33, align 8
  %88 = lshr i64 %86, 7
  %89 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %87, i64 %88
  %90 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %89, align 8
  %91 = and i64 %86, 127
  %92 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %90, i64 %91
  %93 = tail call i64 @_ZNK2v88internal15TranslatedValue11GetRawValueEv(%"class.v8::internal::TranslatedValue"* %92) #9
  %94 = and i64 %93, 1
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %97, label %96, !prof !3

96:                                               ; preds = %83
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.79, i64 0, i64 0)) #16
  unreachable

97:                                               ; preds = %83
  %98 = trunc i64 %93 to i32
  %99 = ashr i32 %98, 1
  %100 = shl i32 %99, 2
  %101 = add nsw i32 %100, 8
  %102 = load i8, i8* %46, align 8
  %103 = icmp eq i8 %102, 9
  br i1 %103, label %104, label %110

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %37, i64 %38, i32 4
  %106 = bitcast %union.anon* %105 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %107 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %106, i64 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = shl i32 %108, 2
  br label %110

110:                                              ; preds = %97, %104
  %111 = phi i32 [ %109, %104 ], [ 0, %97 ]
  %112 = icmp eq i32 %101, %111
  br i1 %112, label %114, label %113, !prof !3

113:                                              ; preds = %110
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.85, i64 0, i64 0)) #16
  unreachable

114:                                              ; preds = %110
  %115 = load i64, i64* %63, align 8
  %116 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 3
  %117 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %116, align 8
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %117, i64 0, i32 0, i32 7, i32 0, i64 29
  %119 = load i64, i64* %118, align 8
  %120 = add i64 %119, -1
  %121 = inttoptr i64 %120 to i32*
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = trunc i64 %115 to i32
  %124 = icmp eq i32 %122, %123
  %125 = icmp eq i32 %99, 0
  %126 = and i1 %125, %124
  %127 = bitcast %"class.v8::internal::Isolate"* %117 to %"class.v8::internal::FactoryBase"*
  br i1 %126, label %128, label %130

128:                                              ; preds = %114
  %129 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %37, i64 %38, i32 3, i32 0, i32 0
  store i64* %118, i64** %129, align 8
  br label %163

130:                                              ; preds = %114
  br i1 %103, label %131, label %138

131:                                              ; preds = %130
  %132 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %37, i64 %38, i32 4
  %133 = bitcast %union.anon* %132 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %134 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %133, i64 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = shl i32 %135, 2
  %137 = add i32 %136, -8
  br label %138

138:                                              ; preds = %131, %130
  %139 = phi i32 [ %137, %131 ], [ -8, %130 ]
  %140 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %127, i32 %139, i8 zeroext 1) #9
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %141, 3
  %143 = inttoptr i64 %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = icmp sgt i32 %144, 1
  br i1 %145, label %146, label %160

146:                                              ; preds = %138, %146
  %147 = phi i64 [ %152, %146 ], [ 0, %138 ]
  %148 = phi i64 [ %153, %146 ], [ %141, %138 ]
  %149 = add nuw nsw i64 %147, 7
  %150 = add i64 %149, %148
  %151 = inttoptr i64 %150 to i8*
  store i8 0, i8* %151, align 1
  %152 = add nuw nsw i64 %147, 1
  %153 = load i64, i64* %140, align 8
  %154 = add i64 %153, 3
  %155 = inttoptr i64 %154 to i32*
  %156 = load i32, i32* %155, align 4
  %157 = ashr i32 %156, 1
  %158 = sext i32 %157 to i64
  %159 = icmp slt i64 %152, %158
  br i1 %159, label %146, label %160

160:                                              ; preds = %146, %138
  %161 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %37, i64 %38, i32 3, i32 0, i32 0
  store i64* %140, i64** %161, align 8
  %162 = load i8, i8* %46, align 8
  br label %163

163:                                              ; preds = %160, %128
  %164 = phi i8 [ %162, %160 ], [ %102, %128 ]
  %165 = icmp eq i8 %164, 9
  br i1 %165, label %166, label %172

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %37, i64 %38, i32 4
  %168 = bitcast %union.anon* %167 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %169 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %168, i64 0, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = add i32 %170, -1
  br label %172

172:                                              ; preds = %163, %166
  %173 = phi i32 [ %171, %166 ], [ -1, %163 ]
  call void @_ZN2v88internal15TranslatedState23EnsureChildrenAllocatedEiPNS0_15TranslatedFrameEPiPNSt3__15stackIiNS5_5dequeIiNS5_9allocatorIiEEEEEE(%"class.v8::internal::TranslatedState"* %0, i32 %173, %"class.v8::internal::TranslatedFrame"* %28, i32* nonnull %4, %"class.std::__1::stack"* %2)
  br label %392

174:                                              ; preds = %76
  %175 = sext i32 %77 to i64
  %176 = load i64, i64* %30, align 8
  %177 = add i64 %176, %175
  %178 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %33, align 8
  %179 = lshr i64 %177, 7
  %180 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %178, i64 %179
  %181 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %180, align 8
  %182 = and i64 %177, 127
  %183 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %181, i64 %182
  %184 = tail call i64 @_ZNK2v88internal15TranslatedValue11GetRawValueEv(%"class.v8::internal::TranslatedValue"* %183) #9
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %188, label %187, !prof !3

187:                                              ; preds = %174
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.79, i64 0, i64 0)) #16
  unreachable

188:                                              ; preds = %174
  %189 = trunc i64 %184 to i32
  %190 = lshr i32 %189, 1
  %191 = shl i32 %190, 2
  %192 = add nsw i32 %191, 16
  %193 = load i8, i8* %46, align 8
  %194 = icmp eq i8 %193, 9
  br i1 %194, label %195, label %201

195:                                              ; preds = %188
  %196 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %37, i64 %38, i32 4
  %197 = bitcast %union.anon* %196 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %198 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %197, i64 0, i32 1
  %199 = load i32, i32* %198, align 4
  %200 = shl i32 %199, 2
  br label %201

201:                                              ; preds = %188, %195
  %202 = phi i32 [ %200, %195 ], [ 0, %188 ]
  %203 = icmp eq i32 %192, %202
  br i1 %203, label %205, label %204, !prof !3

204:                                              ; preds = %201
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.86, i64 0, i64 0)) #16
  unreachable

205:                                              ; preds = %201
  br i1 %194, label %206, label %213

206:                                              ; preds = %205
  %207 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %37, i64 %38, i32 4
  %208 = bitcast %union.anon* %207 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %209 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %208, i64 0, i32 1
  %210 = load i32, i32* %209, align 4
  %211 = shl i32 %210, 2
  %212 = add i32 %211, -8
  br label %213

213:                                              ; preds = %206, %205
  %214 = phi i32 [ %212, %206 ], [ -8, %205 ]
  %215 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 3
  %216 = bitcast %"class.v8::internal::Isolate"** %215 to %"class.v8::internal::FactoryBase"**
  %217 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %216, align 8
  %218 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %217, i32 %214, i8 zeroext 1) #9
  %219 = load i64, i64* %218, align 8
  %220 = add i64 %219, 3
  %221 = inttoptr i64 %220 to i32*
  %222 = load i32, i32* %221, align 4
  %223 = icmp sgt i32 %222, 1
  br i1 %223, label %224, label %238

224:                                              ; preds = %213, %224
  %225 = phi i64 [ %230, %224 ], [ 0, %213 ]
  %226 = phi i64 [ %231, %224 ], [ %219, %213 ]
  %227 = add nuw nsw i64 %225, 7
  %228 = add i64 %227, %226
  %229 = inttoptr i64 %228 to i8*
  store i8 0, i8* %229, align 1
  %230 = add nuw nsw i64 %225, 1
  %231 = load i64, i64* %218, align 8
  %232 = add i64 %231, 3
  %233 = inttoptr i64 %232 to i32*
  %234 = load i32, i32* %233, align 4
  %235 = ashr i32 %234, 1
  %236 = sext i32 %235 to i64
  %237 = icmp slt i64 %230, %236
  br i1 %237, label %224, label %238

238:                                              ; preds = %224, %213
  %239 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %37, i64 %38, i32 3, i32 0, i32 0
  store i64* %218, i64** %239, align 8
  %240 = load i8, i8* %46, align 8
  %241 = icmp eq i8 %240, 9
  br i1 %241, label %242, label %248

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %37, i64 %38, i32 4
  %244 = bitcast %union.anon* %243 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %245 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %244, i64 0, i32 1
  %246 = load i32, i32* %245, align 4
  %247 = add i32 %246, -1
  br label %248

248:                                              ; preds = %238, %242
  %249 = phi i32 [ %247, %242 ], [ -1, %238 ]
  call void @_ZN2v88internal15TranslatedState23EnsureChildrenAllocatedEiPNS0_15TranslatedFrameEPiPNSt3__15stackIiNS5_5dequeIiNS5_9allocatorIiEEEEEE(%"class.v8::internal::TranslatedState"* %0, i32 %249, %"class.v8::internal::TranslatedFrame"* %28, i32* nonnull %4, %"class.std::__1::stack"* %2)
  br label %392

250:                                              ; preds = %76
  %251 = sext i32 %77 to i64
  %252 = load i64, i64* %30, align 8
  %253 = add i64 %252, %251
  %254 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %33, align 8
  %255 = lshr i64 %253, 7
  %256 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %254, i64 %255
  %257 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %256, align 8
  %258 = and i64 %253, 127
  %259 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %257, i64 %258
  %260 = tail call i64 @_ZNK2v88internal15TranslatedValue11GetRawValueEv(%"class.v8::internal::TranslatedValue"* %259) #9
  %261 = and i64 %260, 1
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %264, label %263, !prof !3

263:                                              ; preds = %250
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.79, i64 0, i64 0)) #16
  unreachable

264:                                              ; preds = %250
  %265 = load i8, i8* %46, align 8
  %266 = icmp eq i8 %265, 9
  br i1 %266, label %267, label %278

267:                                              ; preds = %264
  %268 = trunc i64 %260 to i32
  %269 = shl i32 %268, 1
  %270 = and i32 %269, 4092
  %271 = add nuw nsw i32 %270, 8
  %272 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %37, i64 %38, i32 4
  %273 = bitcast %union.anon* %272 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %274 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %273, i64 0, i32 1
  %275 = load i32, i32* %274, align 4
  %276 = shl i32 %275, 2
  %277 = icmp eq i32 %271, %276
  br i1 %277, label %279, label %278, !prof !3

278:                                              ; preds = %264, %267
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.85, i64 0, i64 0)) #16
  unreachable

279:                                              ; preds = %267
  %280 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %37, i64 %38, i32 4
  %281 = bitcast %union.anon* %280 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %282 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %281, i64 0, i32 1
  %283 = load i32, i32* %282, align 4
  %284 = shl i32 %283, 2
  %285 = add i32 %284, -8
  %286 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 3
  %287 = bitcast %"class.v8::internal::Isolate"** %286 to %"class.v8::internal::FactoryBase"**
  %288 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %287, align 8
  %289 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %288, i32 %285, i8 zeroext 1) #9
  %290 = load i64, i64* %289, align 8
  %291 = add i64 %290, 3
  %292 = inttoptr i64 %291 to i32*
  %293 = load i32, i32* %292, align 4
  %294 = icmp sgt i32 %293, 1
  br i1 %294, label %295, label %309

295:                                              ; preds = %279, %295
  %296 = phi i64 [ %301, %295 ], [ 0, %279 ]
  %297 = phi i64 [ %302, %295 ], [ %290, %279 ]
  %298 = add nuw nsw i64 %296, 7
  %299 = add i64 %298, %297
  %300 = inttoptr i64 %299 to i8*
  store i8 0, i8* %300, align 1
  %301 = add nuw nsw i64 %296, 1
  %302 = load i64, i64* %289, align 8
  %303 = add i64 %302, 3
  %304 = inttoptr i64 %303 to i32*
  %305 = load i32, i32* %304, align 4
  %306 = ashr i32 %305, 1
  %307 = sext i32 %306 to i64
  %308 = icmp slt i64 %301, %307
  br i1 %308, label %295, label %309

309:                                              ; preds = %295, %279
  %310 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %37, i64 %38, i32 3, i32 0, i32 0
  store i64* %289, i64** %310, align 8
  %311 = load i8, i8* %46, align 8
  %312 = icmp eq i8 %311, 9
  br i1 %312, label %313, label %319

313:                                              ; preds = %309
  %314 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %37, i64 %38, i32 4
  %315 = bitcast %union.anon* %314 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %316 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %315, i64 0, i32 1
  %317 = load i32, i32* %316, align 4
  %318 = add i32 %317, -1
  br label %319

319:                                              ; preds = %309, %313
  %320 = phi i32 [ %318, %313 ], [ -1, %309 ]
  call void @_ZN2v88internal15TranslatedState23EnsureChildrenAllocatedEiPNS0_15TranslatedFrameEPiPNSt3__15stackIiNS5_5dequeIiNS5_9allocatorIiEEEEEE(%"class.v8::internal::TranslatedState"* %0, i32 %320, %"class.v8::internal::TranslatedFrame"* %28, i32* nonnull %4, %"class.std::__1::stack"* %2)
  br label %392

321:                                              ; preds = %76
  tail call void @_ZN2v88internal15TranslatedState23EnsureJSObjectAllocatedEPNS0_15TranslatedValueENS0_6HandleINS0_3MapEEE(%"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedValue"* %39, i64* %63)
  %322 = load i8, i8* %46, align 8
  %323 = icmp eq i8 %322, 9
  br i1 %323, label %324, label %329

324:                                              ; preds = %321
  %325 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %37, i64 %38, i32 4
  %326 = bitcast %union.anon* %325 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %327 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %326, i64 0, i32 1
  %328 = load i32, i32* %327, align 4
  br label %329

329:                                              ; preds = %321, %324
  %330 = phi i32 [ %328, %324 ], [ 0, %321 ]
  %331 = sext i32 %77 to i64
  %332 = load i64, i64* %30, align 8
  %333 = add i64 %332, %331
  %334 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %33, align 8
  %335 = lshr i64 %333, 7
  %336 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %334, i64 %335
  %337 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %336, align 8
  %338 = and i64 %333, 127
  %339 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %337, i64 %338
  %340 = add nsw i32 %23, 3
  store i32 %340, i32* %4, align 4
  %341 = add nsw i32 %330, -2
  %342 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %339, i64 0, i32 0
  %343 = load i8, i8* %342, align 8
  switch i8 %343, label %357 [
    i8 9, label %344
    i8 1, label %358
  ], !prof !2

344:                                              ; preds = %329
  tail call void @_ZN2v88internal15TranslatedState34EnsurePropertiesAllocatedAndMarkedEPNS0_15TranslatedValueENS0_6HandleINS0_3MapEEE(%"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedValue"* %339, i64* %63)
  %345 = load i8, i8* %342, align 8
  %346 = icmp eq i8 %345, 9
  br i1 %346, label %347, label %352

347:                                              ; preds = %344
  %348 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %337, i64 %338, i32 4
  %349 = bitcast %union.anon* %348 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %350 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %349, i64 0, i32 1
  %351 = load i32, i32* %350, align 4
  br label %352

352:                                              ; preds = %344, %347
  %353 = phi i32 [ %351, %347 ], [ 0, %344 ]
  call void @_ZN2v88internal15TranslatedState23EnsureChildrenAllocatedEiPNS0_15TranslatedFrameEPiPNSt3__15stackIiNS5_5dequeIiNS5_9allocatorIiEEEEEE(%"class.v8::internal::TranslatedState"* %0, i32 %353, %"class.v8::internal::TranslatedFrame"* %28, i32* nonnull %4, %"class.std::__1::stack"* %2)
  %354 = load i32, i32* %4, align 4
  %355 = load i64, i64* %30, align 8
  %356 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %33, align 8
  br label %358

357:                                              ; preds = %329
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.87, i64 0, i64 0)) #16
  unreachable

358:                                              ; preds = %329, %352
  %359 = phi %"class.v8::internal::TranslatedValue"** [ %334, %329 ], [ %356, %352 ]
  %360 = phi i64 [ %332, %329 ], [ %355, %352 ]
  %361 = phi i32 [ %340, %329 ], [ %354, %352 ]
  %362 = sext i32 %361 to i64
  %363 = add i64 %360, %362
  %364 = lshr i64 %363, 7
  %365 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %359, i64 %364
  %366 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %365, align 8
  %367 = and i64 %363, 127
  %368 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %366, i64 %367
  %369 = add nsw i32 %361, 1
  store i32 %369, i32* %4, align 4
  %370 = add nsw i32 %330, -3
  %371 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %368, i64 0, i32 0
  %372 = load i8, i8* %371, align 8
  %373 = icmp eq i8 %372, 9
  br i1 %373, label %380, label %374

374:                                              ; preds = %358
  %375 = load i64, i64* %63, align 8
  %376 = add i64 %375, 7
  %377 = inttoptr i64 %376 to i16*
  %378 = load atomic i16, i16* %377 monotonic, align 2
  %379 = icmp eq i16 %378, 1085
  br i1 %379, label %381, label %380

380:                                              ; preds = %358, %374
  store i32 %361, i32* %4, align 4
  br label %390

381:                                              ; preds = %374
  %382 = icmp eq i8 %372, 1
  br i1 %382, label %384, label %383, !prof !3

383:                                              ; preds = %381
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.88, i64 0, i64 0)) #16
  unreachable

384:                                              ; preds = %381
  %385 = tail call i64* @_ZN2v88internal15TranslatedValue8GetValueEv(%"class.v8::internal::TranslatedValue"* %368)
  %386 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 0
  %387 = load i32, i32* %386, align 8
  %388 = icmp eq i32 %387, 1
  br i1 %388, label %389, label %390

389:                                              ; preds = %384
  tail call void @_ZN2v88internal15TranslatedValue28ReplaceElementsArrayWithCopyEv(%"class.v8::internal::TranslatedValue"* %368)
  br label %390

390:                                              ; preds = %384, %389, %380
  %391 = phi i32 [ %341, %380 ], [ %370, %389 ], [ %370, %384 ]
  call void @_ZN2v88internal15TranslatedState23EnsureChildrenAllocatedEiPNS0_15TranslatedFrameEPiPNSt3__15stackIiNS5_5dequeIiNS5_9allocatorIiEEEEEE(%"class.v8::internal::TranslatedState"* %0, i32 %391, %"class.v8::internal::TranslatedFrame"* %28, i32* nonnull %4, %"class.std::__1::stack"* %2)
  br label %392

392:                                              ; preds = %390, %319, %248, %172, %82, %81
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2v88internal15TranslatedValue11GetSmiValueEv(%"class.v8::internal::TranslatedValue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZNK2v88internal15TranslatedValue11GetRawValueEv(%"class.v8::internal::TranslatedValue"* %0)
  %3 = and i64 %2, 1
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %6, label %5, !prof !3

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.79, i64 0, i64 0)) #16
  unreachable

6:                                                ; preds = %1
  %7 = trunc i64 %2 to i32
  %8 = ashr i32 %7, 1
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedState27MaterializeFixedDoubleArrayEPNS0_15TranslatedFrameEPiPNS0_15TranslatedValueENS0_6HandleINS0_3MapEEE(%"class.v8::internal::TranslatedState"* nocapture readonly, %"class.v8::internal::TranslatedFrame"* nocapture readonly, i32* nocapture, %"class.v8::internal::TranslatedValue"* nocapture, i64* nocapture readnone) local_unnamed_addr #0 align 2 {
  %6 = load i32, i32* %2, align 4
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %9, %7
  %11 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 0, i32 1
  %12 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %11, align 8
  %13 = lshr i64 %10, 7
  %14 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %12, i64 %13
  %15 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %14, align 8
  %16 = and i64 %10, 127
  %17 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %15, i64 %16
  %18 = tail call i64 @_ZNK2v88internal15TranslatedValue11GetRawValueEv(%"class.v8::internal::TranslatedValue"* %17) #9
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %22, label %21, !prof !3

21:                                               ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.79, i64 0, i64 0)) #16
  unreachable

22:                                               ; preds = %5
  %23 = trunc i64 %18 to i32
  %24 = ashr i32 %23, 1
  %25 = load i32, i32* %2, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %2, align 4
  %27 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 3
  %28 = bitcast %"class.v8::internal::Isolate"** %27 to %"class.v8::internal::FactoryBase"**
  %29 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %28, align 8
  %30 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewFixedDoubleArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %29, i32 %24, i8 zeroext 0) #9
  %31 = icmp sgt i32 %23, 1
  br i1 %31, label %32, label %36, !prof !3

32:                                               ; preds = %22
  %33 = bitcast %"class.v8::internal::Isolate"** %27 to %"class.v8::internal::Factory"**
  %34 = sext i32 %24 to i64
  %35 = load i32, i32* %2, align 4
  br label %39

36:                                               ; preds = %22
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.80, i64 0, i64 0)) #16
  unreachable

37:                                               ; preds = %111
  %38 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %3, i64 0, i32 3, i32 0, i32 0
  store i64* %30, i64** %38, align 8
  ret void

39:                                               ; preds = %32, %111
  %40 = phi i32 [ %35, %32 ], [ %113, %111 ]
  %41 = phi i64 [ 0, %32 ], [ %114, %111 ]
  %42 = sext i32 %40 to i64
  %43 = load i64, i64* %8, align 8
  %44 = add i64 %43, %42
  %45 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %11, align 8
  %46 = lshr i64 %44, 7
  %47 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %45, i64 %46
  %48 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %47, align 8
  %49 = and i64 %44, 127
  %50 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %48, i64 %49
  %51 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %50, i64 0, i32 0
  %52 = load i8, i8* %51, align 8
  %53 = icmp eq i8 %52, 9
  br i1 %53, label %54, label %55, !prof !25

54:                                               ; preds = %39
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.81, i64 0, i64 0)) #16
  unreachable

55:                                               ; preds = %39
  %56 = tail call i64* @_ZN2v88internal15TranslatedValue8GetValueEv(%"class.v8::internal::TranslatedValue"* %50)
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %57, 1
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %71, label %60

60:                                               ; preds = %55
  %61 = and i64 %57, -4294967296
  %62 = add i64 %57, -1
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %61, %65
  %67 = add i64 %66, 7
  %68 = inttoptr i64 %67 to i16*
  %69 = load atomic i16, i16* %68 monotonic, align 2
  %70 = icmp eq i16 %69, 66
  br i1 %70, label %75, label %89

71:                                               ; preds = %55
  %72 = trunc i64 %57 to i32
  %73 = ashr i32 %72, 1
  %74 = sitofp i32 %73 to double
  br label %79

75:                                               ; preds = %60
  %76 = add i64 %57, 3
  %77 = inttoptr i64 %76 to double*
  %78 = load double, double* %77, align 1
  br label %79

79:                                               ; preds = %71, %75
  %80 = phi double [ %74, %71 ], [ %78, %75 ]
  %81 = load i64, i64* %30, align 8
  %82 = shl i64 %41, 3
  %83 = fcmp uno double %80, 0.000000e+00
  %84 = and i64 %82, 4294967288
  %85 = or i64 %84, 7
  %86 = add i64 %81, %85
  %87 = inttoptr i64 %86 to double*
  %88 = select i1 %83, double 0x7FF8000000000000, double %80
  store double %88, double* %87, align 1
  br label %111

89:                                               ; preds = %60
  %90 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %33, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %90, i64 168
  %92 = bitcast %"class.v8::internal::Factory"* %91 to i64*
  %93 = icmp eq i64* %56, %92
  br i1 %93, label %104, label %94

94:                                               ; preds = %89
  %95 = icmp eq i64* %56, null
  %96 = icmp eq %"class.v8::internal::Factory"* %91, null
  %97 = or i1 %95, %96
  br i1 %97, label %103, label %98, !prof !26

98:                                               ; preds = %94
  %99 = load i64, i64* %92, align 8
  %100 = trunc i64 %57 to i32
  %101 = trunc i64 %99 to i32
  %102 = icmp eq i32 %100, %101
  br i1 %102, label %104, label %103, !prof !3

103:                                              ; preds = %94, %98
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.82, i64 0, i64 0)) #16
  unreachable

104:                                              ; preds = %89, %98
  %105 = load i64, i64* %30, align 8
  %106 = shl i64 %41, 3
  %107 = and i64 %106, 4294967288
  %108 = or i64 %107, 7
  %109 = add i64 %105, %108
  %110 = inttoptr i64 %109 to i64*
  store i64 -2251799814209537, i64* %110, align 1
  br label %111

111:                                              ; preds = %104, %79
  %112 = load i32, i32* %2, align 4
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %2, align 4
  %114 = add nuw nsw i64 %41, 1
  %115 = icmp slt i64 %114, %34
  br i1 %115, label %39, label %37
}

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE19NewFixedDoubleArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedState21MaterializeHeapNumberEPNS0_15TranslatedFrameEPiPNS0_15TranslatedValueE(%"class.v8::internal::TranslatedState"* nocapture readonly, %"class.v8::internal::TranslatedFrame"* nocapture readonly, i32* nocapture, %"class.v8::internal::TranslatedValue"* nocapture) local_unnamed_addr #0 align 2 {
  %5 = load i32, i32* %2, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, %6
  %10 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 0, i32 1
  %11 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %10, align 8
  %12 = lshr i64 %9, 7
  %13 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %11, i64 %12
  %14 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %13, align 8
  %15 = and i64 %9, 127
  %16 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %14, i64 %15
  %17 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %16, i64 0, i32 0
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 9
  br i1 %19, label %20, label %21, !prof !25

20:                                               ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.81, i64 0, i64 0)) #16
  unreachable

21:                                               ; preds = %4
  %22 = tail call i64* @_ZN2v88internal15TranslatedValue8GetValueEv(%"class.v8::internal::TranslatedValue"* %16)
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %38, label %26

26:                                               ; preds = %21
  %27 = and i64 %23, -4294967296
  %28 = add i64 %23, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = zext i32 %30 to i64
  %32 = or i64 %27, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load atomic i16, i16* %34 monotonic, align 2
  %36 = icmp eq i16 %35, 66
  br i1 %36, label %42, label %37, !prof !3

37:                                               ; preds = %26
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.83, i64 0, i64 0)) #16
  unreachable

38:                                               ; preds = %21
  %39 = trunc i64 %23 to i32
  %40 = ashr i32 %39, 1
  %41 = sitofp i32 %40 to double
  br label %46

42:                                               ; preds = %26
  %43 = add i64 %23, 3
  %44 = inttoptr i64 %43 to double*
  %45 = load double, double* %44, align 1
  br label %46

46:                                               ; preds = %38, %42
  %47 = phi double [ %41, %38 ], [ %45, %42 ]
  %48 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 3
  %49 = bitcast %"class.v8::internal::Isolate"** %48 to %"class.v8::internal::FactoryBase"**
  %50 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %49, align 8
  %51 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %50) #9
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, 3
  %54 = inttoptr i64 %53 to double*
  store double %47, double* %54, align 1
  %55 = load i32, i32* %2, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %2, align 4
  %57 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %3, i64 0, i32 3, i32 0, i32 0
  store i64* %51, i64** %57, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal15TranslatedState18AllocateStorageForEPNS0_15TranslatedValueE(%"class.v8::internal::TranslatedState"* nocapture readonly, %"class.v8::internal::TranslatedValue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 8
  %5 = icmp eq i8 %4, 9
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1, i64 0, i32 4
  %8 = bitcast %union.anon* %7 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %9 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = shl i32 %10, 2
  %12 = add i32 %11, -8
  br label %13

13:                                               ; preds = %2, %6
  %14 = phi i32 [ %12, %6 ], [ -8, %2 ]
  %15 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 3
  %16 = bitcast %"class.v8::internal::Isolate"** %15 to %"class.v8::internal::FactoryBase"**
  %17 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %16, align 8
  %18 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %17, i32 %14, i8 zeroext 1) #9
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, 3
  %21 = inttoptr i64 %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 1
  br i1 %23, label %25, label %24

24:                                               ; preds = %25, %13
  ret i64* %18

25:                                               ; preds = %13, %25
  %26 = phi i64 [ %31, %25 ], [ 0, %13 ]
  %27 = phi i64 [ %32, %25 ], [ %19, %13 ]
  %28 = add nuw nsw i64 %26, 7
  %29 = add i64 %27, %28
  %30 = inttoptr i64 %29 to i8*
  store i8 0, i8* %30, align 1
  %31 = add nuw nsw i64 %26, 1
  %32 = load i64, i64* %18, align 8
  %33 = add i64 %32, 3
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = ashr i32 %35, 1
  %37 = sext i32 %36 to i64
  %38 = icmp slt i64 %31, %37
  br i1 %38, label %25, label %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedState23EnsureChildrenAllocatedEiPNS0_15TranslatedFrameEPiPNSt3__15stackIiNS5_5dequeIiNS5_9allocatorIiEEEEEE(%"class.v8::internal::TranslatedState"* nocapture readonly, i32, %"class.v8::internal::TranslatedFrame"* nocapture readonly, i32* nocapture, %"class.std::__1::stack"*) local_unnamed_addr #0 align 2 {
  %6 = icmp sgt i32 %1, 0
  br i1 %6, label %7, label %22

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %2, i64 0, i32 8, i32 0, i32 1
  %9 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %2, i64 0, i32 8, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 1
  %12 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = bitcast i32*** %14 to i64*
  %16 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast i32*** %16 to i64*
  %18 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0
  %21 = load i32, i32* %3, align 4
  br label %23

22:                                               ; preds = %150, %5
  ret void

23:                                               ; preds = %150, %7
  %24 = phi i32 [ %21, %7 ], [ %151, %150 ]
  %25 = phi i32 [ 0, %7 ], [ %152, %150 ]
  %26 = sext i32 %24 to i64
  %27 = load i64, i64* %8, align 8
  %28 = add i64 %27, %26
  %29 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %9, align 8
  %30 = lshr i64 %28, 7
  %31 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %29, i64 %30
  %32 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %31, align 8
  %33 = and i64 %28, 127
  %34 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %32, i64 %33
  %35 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %34, i64 0, i32 0
  %36 = load i8, i8* %35, align 8
  %37 = add i8 %36, -9
  %38 = icmp ult i8 %37, 2
  br i1 %38, label %39, label %120

39:                                               ; preds = %23, %50
  %40 = phi i8 [ %76, %50 ], [ %36, %23 ]
  %41 = phi %"class.v8::internal::TranslatedValue"* [ %74, %50 ], [ %34, %23 ]
  switch i8 %40, label %77 [
    i8 10, label %42
    i8 9, label %78
  ], !prof !2

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %41, i64 0, i32 4
  %44 = bitcast %union.anon* %43 to i32*
  %45 = load i32, i32* %44, align 8
  %46 = sext i32 %45 to i64
  %47 = load i64, i64* %10, align 8
  %48 = icmp ugt i64 %47, %46
  br i1 %48, label %50, label %49, !prof !3

49:                                               ; preds = %42
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.72, i64 0, i64 0)) #16
  unreachable

50:                                               ; preds = %42
  %51 = load i64, i64* %11, align 8
  %52 = add i64 %51, %46
  %53 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %12, align 8
  %54 = lshr i64 %52, 9
  %55 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %53, i64 %54
  %56 = load %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %55, align 8
  %57 = and i64 %52, 511
  %58 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %56, i64 %57, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %56, i64 %57, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = sext i32 %59 to i64
  %63 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %13, align 8
  %64 = sext i32 %61 to i64
  %65 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %63, i64 %62, i32 8, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, %64
  %68 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %63, i64 %62, i32 8, i32 0, i32 0, i32 1
  %69 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %68, align 8
  %70 = lshr i64 %67, 7
  %71 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %69, i64 %70
  %72 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %71, align 8
  %73 = and i64 %67, 127
  %74 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %72, i64 %73
  %75 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %74, i64 0, i32 0
  %76 = load i8, i8* %75, align 8
  br label %39

77:                                               ; preds = %39
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.74, i64 0, i64 0)) #16
  unreachable

78:                                               ; preds = %39
  %79 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %41, i64 0, i32 1
  %80 = load i8, i8* %79, align 1
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %122

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %41, i64 0, i32 4
  %84 = bitcast %union.anon* %83 to i32*
  %85 = load i32, i32* %84, align 8
  %86 = load i64, i64* %15, align 8
  %87 = load i64, i64* %17, align 8
  %88 = sub i64 %86, %87
  %89 = icmp eq i64 %88, 0
  %90 = shl i64 %88, 7
  %91 = add i64 %90, -1
  %92 = select i1 %89, i64 0, i64 %91
  %93 = load i64, i64* %18, align 8
  %94 = load i64, i64* %19, align 8
  %95 = add i64 %94, %93
  %96 = icmp eq i64 %92, %95
  %97 = inttoptr i64 %87 to i32**
  %98 = inttoptr i64 %86 to i32**
  br i1 %96, label %99, label %105

99:                                               ; preds = %82
  tail call void @_ZNSt3__15dequeIiNS_9allocatorIiEEE19__add_back_capacityEv(%"class.std::__1::deque.1192"* %20) #9
  %100 = load i64, i64* %19, align 8
  %101 = load i64, i64* %18, align 8
  %102 = load i32**, i32*** %16, align 8
  %103 = load i32**, i32*** %14, align 8
  %104 = add i64 %101, %100
  br label %105

105:                                              ; preds = %99, %82
  %106 = phi i64 [ %104, %99 ], [ %95, %82 ]
  %107 = phi i32** [ %103, %99 ], [ %98, %82 ]
  %108 = phi i32** [ %102, %99 ], [ %97, %82 ]
  %109 = icmp eq i32** %107, %108
  br i1 %109, label %116, label %110

110:                                              ; preds = %105
  %111 = lshr i64 %106, 10
  %112 = getelementptr inbounds i32*, i32** %108, i64 %111
  %113 = load i32*, i32** %112, align 8
  %114 = and i64 %106, 1023
  %115 = getelementptr inbounds i32, i32* %113, i64 %114
  br label %116

116:                                              ; preds = %105, %110
  %117 = phi i32* [ %115, %110 ], [ null, %105 ]
  store i32 %85, i32* %117, align 4
  %118 = load i64, i64* %19, align 8
  %119 = add i64 %118, 1
  store i64 %119, i64* %19, align 8
  store i8 1, i8* %79, align 1
  br label %122

120:                                              ; preds = %23
  %121 = tail call i64* @_ZN2v88internal15TranslatedValue8GetValueEv(%"class.v8::internal::TranslatedValue"* %34)
  br label %122

122:                                              ; preds = %78, %116, %120
  %123 = load i32, i32* %3, align 4
  %124 = sext i32 %123 to i64
  br label %125

125:                                              ; preds = %147, %122
  %126 = phi i64 [ %135, %147 ], [ %124, %122 ]
  %127 = phi i32 [ %148, %147 ], [ 1, %122 ]
  %128 = load i64, i64* %8, align 8
  %129 = add i64 %128, %126
  %130 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %9, align 8
  %131 = lshr i64 %129, 7
  %132 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %130, i64 %131
  %133 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %132, align 8
  %134 = and i64 %129, 127
  %135 = add i64 %126, 1
  %136 = trunc i64 %135 to i32
  store i32 %136, i32* %3, align 4
  %137 = add nsw i32 %127, -1
  %138 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %133, i64 %134, i32 0
  %139 = load i8, i8* %138, align 8
  %140 = icmp eq i8 %139, 9
  br i1 %140, label %141, label %147

141:                                              ; preds = %125
  %142 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %133, i64 %134, i32 4
  %143 = bitcast %union.anon* %142 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %144 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %143, i64 0, i32 1
  %145 = load i32, i32* %144, align 4
  %146 = add nsw i32 %145, %137
  br label %147

147:                                              ; preds = %141, %125
  %148 = phi i32 [ %146, %141 ], [ %137, %125 ]
  %149 = icmp sgt i32 %148, 0
  br i1 %149, label %125, label %150

150:                                              ; preds = %147
  %151 = trunc i64 %135 to i32
  %152 = add nuw nsw i32 %25, 1
  %153 = icmp eq i32 %152, %1
  br i1 %153, label %22, label %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedState23EnsureJSObjectAllocatedEPNS0_15TranslatedValueENS0_6HandleINS0_3MapEEE(%"class.v8::internal::TranslatedState"* nocapture readonly, %"class.v8::internal::TranslatedValue"* nocapture, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Representation", align 1
  %5 = load i64, i64* %2, align 8
  %6 = add i64 %5, 7
  %7 = inttoptr i64 %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = icmp ugt i16 %8, 188
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.77, i64 0, i64 0)) #16
  unreachable

11:                                               ; preds = %3
  %12 = add i64 %5, 3
  %13 = inttoptr i64 %12 to i8*
  %14 = load atomic i8, i8* %13 monotonic, align 1
  %15 = zext i8 %14 to i32
  %16 = shl nuw nsw i32 %15, 2
  %17 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1, i64 0, i32 0
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 9
  br i1 %19, label %20, label %26

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1, i64 0, i32 4
  %22 = bitcast %union.anon* %21 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %23 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %22, i64 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = shl i32 %24, 2
  br label %26

26:                                               ; preds = %11, %20
  %27 = phi i32 [ %25, %20 ], [ 0, %11 ]
  %28 = icmp eq i32 %16, %27
  br i1 %28, label %30, label %29, !prof !3

29:                                               ; preds = %26
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.90, i64 0, i64 0)) #16
  unreachable

30:                                               ; preds = %26
  br i1 %19, label %31, label %38

31:                                               ; preds = %30
  %32 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1, i64 0, i32 4
  %33 = bitcast %union.anon* %32 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %34 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %33, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = shl i32 %35, 2
  %37 = add i32 %36, -8
  br label %38

38:                                               ; preds = %31, %30
  %39 = phi i32 [ %37, %31 ], [ -8, %30 ]
  %40 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 3
  %41 = bitcast %"class.v8::internal::Isolate"** %40 to %"class.v8::internal::FactoryBase"**
  %42 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %41, align 8
  %43 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %42, i32 %39, i8 zeroext 1) #9
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 3
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = icmp sgt i32 %47, 1
  br i1 %48, label %49, label %63

49:                                               ; preds = %38, %49
  %50 = phi i64 [ %55, %49 ], [ 0, %38 ]
  %51 = phi i64 [ %56, %49 ], [ %44, %38 ]
  %52 = add nuw nsw i64 %50, 7
  %53 = add i64 %52, %51
  %54 = inttoptr i64 %53 to i8*
  store i8 0, i8* %54, align 1
  %55 = add nuw nsw i64 %50, 1
  %56 = load i64, i64* %43, align 8
  %57 = add i64 %56, 3
  %58 = inttoptr i64 %57 to i32*
  %59 = load i32, i32* %58, align 4
  %60 = ashr i32 %59, 1
  %61 = sext i32 %60 to i64
  %62 = icmp slt i64 %55, %61
  br i1 %62, label %49, label %63

63:                                               ; preds = %49, %38
  %64 = load i64, i64* %2, align 8
  %65 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %40, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %65, i64 0, i32 0, i32 4
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %64, 23
  %69 = inttoptr i64 %68 to i32*
  %70 = load i32, i32* %69, align 4
  %71 = and i64 %67, 4294967295
  %72 = icmp eq i64 %71, 0
  tail call void @llvm.assume(i1 %72) #9
  %73 = zext i32 %70 to i64
  %74 = or i64 %67, %73
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %65, i64 0, i32 31, i32 4
  %76 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %75, align 8
  %77 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %63
  %79 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %76, i64 %74) #9
  br label %93

80:                                               ; preds = %63
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %65, i64 0, i32 31, i32 0
  %82 = load i64*, i64** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %65, i64 0, i32 31, i32 1
  %84 = load i64*, i64** %83, align 8
  %85 = icmp eq i64* %82, %84
  br i1 %85, label %86, label %88

86:                                               ; preds = %80
  %87 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %65) #9
  br label %88

88:                                               ; preds = %86, %80
  %89 = phi i64* [ %87, %86 ], [ %82, %80 ]
  %90 = ptrtoint i64* %89 to i64
  %91 = add i64 %90, 8
  %92 = inttoptr i64 %91 to i64*
  store i64* %92, i64** %81, align 8
  store i64 %74, i64* %89, align 8
  br label %93

93:                                               ; preds = %78, %88
  %94 = phi i64* [ %79, %78 ], [ %89, %88 ]
  %95 = load i64, i64* %2, align 8
  %96 = add i64 %95, 11
  %97 = inttoptr i64 %96 to i32*
  %98 = load atomic i32, i32* %97 acquire, align 4
  %99 = lshr i32 %98, 10
  %100 = and i32 %99, 1023
  %101 = zext i32 %100 to i64
  %102 = icmp eq i32 %100, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %93
  %104 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %4, i64 0, i32 0
  br label %107

105:                                              ; preds = %180, %93
  %106 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1, i64 0, i32 3, i32 0, i32 0
  store i64* %43, i64** %106, align 8
  ret void

107:                                              ; preds = %103, %180
  %108 = phi i64 [ 0, %103 ], [ %181, %180 ]
  %109 = load i64, i64* %2, align 8
  %110 = and i64 %109, -4294967296
  %111 = add i64 %109, 23
  %112 = inttoptr i64 %111 to i32*
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = zext i32 %113 to i64
  %115 = or i64 %110, %114
  %116 = mul nuw nsw i64 %108, 51539607552
  %117 = add nuw nsw i64 %116, 68719476736
  %118 = lshr exact i64 %117, 32
  %119 = or i64 %118, 3
  %120 = add i64 %115, %119
  %121 = inttoptr i64 %120 to i32*
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = ashr i32 %122, 1
  %124 = lshr i32 %123, 19
  %125 = and i32 %124, 1023
  %126 = lshr i32 %123, 6
  %127 = trunc i32 %126 to i8
  %128 = and i8 %127, 7
  %129 = add i64 %109, 3
  %130 = inttoptr i64 %129 to i8*
  %131 = load atomic i8, i8* %130 monotonic, align 1
  %132 = zext i8 %131 to i32
  %133 = add i64 %109, 4
  %134 = inttoptr i64 %133 to i8*
  %135 = load atomic i8, i8* %134 monotonic, align 1
  %136 = zext i8 %135 to i32
  %137 = sub nsw i32 %132, %136
  %138 = icmp slt i32 %125, %137
  br i1 %138, label %139, label %145

139:                                              ; preds = %107
  %140 = load atomic i8, i8* %134 monotonic, align 1
  %141 = load atomic i8, i8* %134 monotonic, align 1
  %142 = zext i8 %141 to i32
  %143 = add nuw nsw i32 %125, %142
  %144 = shl nuw nsw i32 %143, 2
  br label %149

145:                                              ; preds = %107
  %146 = sub nsw i32 %125, %137
  %147 = shl nsw i32 %146, 2
  %148 = add nsw i32 %147, 8
  br label %149

149:                                              ; preds = %145, %139
  %150 = phi i32 [ %144, %139 ], [ %148, %145 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %104) #9
  store i8 %128, i8* %104, align 1
  %151 = icmp ult i8 %128, 5
  br i1 %151, label %154, label %152

152:                                              ; preds = %149
  %153 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %4) #9
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.156, i64 0, i64 0), i8* %153) #9
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

154:                                              ; preds = %149
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %104) #9
  %155 = zext i1 %138 to i64
  %156 = shl nuw nsw i64 %155, 13
  %157 = load i64, i64* %94, align 8
  %158 = add i64 %157, %119
  %159 = inttoptr i64 %158 to i32*
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %150, 8192
  %162 = zext i32 %161 to i64
  %163 = or i64 %156, %162
  %164 = icmp ne i64 %163, 0
  %165 = and i32 %160, 768
  %166 = icmp eq i32 %165, 256
  %167 = and i1 %164, %166
  br i1 %167, label %168, label %180

168:                                              ; preds = %154
  %169 = lshr i32 %150, 2
  %170 = and i32 %169, 2047
  %171 = icmp ugt i32 %170, 1
  br i1 %171, label %173, label %172, !prof !3

172:                                              ; preds = %168
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.91, i64 0, i64 0)) #16
  unreachable

173:                                              ; preds = %168
  %174 = shl nuw nsw i32 %170, 2
  %175 = load i64, i64* %43, align 8
  %176 = add nsw i32 %174, -1
  %177 = sext i32 %176 to i64
  %178 = add i64 %175, %177
  %179 = inttoptr i64 %178 to i8*
  store i8 1, i8* %179, align 1
  br label %180

180:                                              ; preds = %173, %154
  %181 = add nuw nsw i64 %108, 1
  %182 = icmp eq i64 %181, %101
  br i1 %182, label %105, label %107
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedState34EnsurePropertiesAllocatedAndMarkedEPNS0_15TranslatedValueENS0_6HandleINS0_3MapEEE(%"class.v8::internal::TranslatedState"* nocapture readonly, %"class.v8::internal::TranslatedValue"* nocapture, i64*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::Representation", align 1
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1, i64 0, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %9, label %8, !prof !3

8:                                                ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.89, i64 0, i64 0)) #16
  unreachable

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1, i64 0, i32 0
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 9
  br i1 %12, label %13, label %20

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1, i64 0, i32 4
  %15 = bitcast %union.anon* %14 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %16 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = shl i32 %17, 2
  %19 = add i32 %18, -8
  br label %20

20:                                               ; preds = %13, %9
  %21 = phi i32 [ %19, %13 ], [ -8, %9 ]
  %22 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 3
  %23 = bitcast %"class.v8::internal::Isolate"** %22 to %"class.v8::internal::FactoryBase"**
  %24 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %23, align 8
  %25 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %24, i32 %21, i8 zeroext 1) #9
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, 3
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, 1
  br i1 %30, label %31, label %45

31:                                               ; preds = %20, %31
  %32 = phi i64 [ %37, %31 ], [ 0, %20 ]
  %33 = phi i64 [ %38, %31 ], [ %26, %20 ]
  %34 = add nuw nsw i64 %32, 7
  %35 = add i64 %34, %33
  %36 = inttoptr i64 %35 to i8*
  store i8 0, i8* %36, align 1
  %37 = add nuw nsw i64 %32, 1
  %38 = load i64, i64* %25, align 8
  %39 = add i64 %38, 3
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = ashr i32 %41, 1
  %43 = sext i32 %42 to i64
  %44 = icmp slt i64 %37, %43
  br i1 %44, label %31, label %45

45:                                               ; preds = %31, %20
  store i8 1, i8* %5, align 1
  %46 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %1, i64 0, i32 3, i32 0, i32 0
  store i64* %25, i64** %46, align 8
  %47 = load i64, i64* %2, align 8
  %48 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %22, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 0, i32 4
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %47, 23
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i64 %50, 4294967295
  %55 = icmp eq i64 %54, 0
  tail call void @llvm.assume(i1 %55) #9
  %56 = zext i32 %53 to i64
  %57 = or i64 %50, %56
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 4
  %59 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %58, align 8
  %60 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %45
  %62 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %59, i64 %57) #9
  br label %76

63:                                               ; preds = %45
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 0
  %65 = load i64*, i64** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 31, i32 1
  %67 = load i64*, i64** %66, align 8
  %68 = icmp eq i64* %65, %67
  br i1 %68, label %69, label %71

69:                                               ; preds = %63
  %70 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %48) #9
  br label %71

71:                                               ; preds = %69, %63
  %72 = phi i64* [ %70, %69 ], [ %65, %63 ]
  %73 = ptrtoint i64* %72 to i64
  %74 = add i64 %73, 8
  %75 = inttoptr i64 %74 to i64*
  store i64* %75, i64** %64, align 8
  store i64 %57, i64* %72, align 8
  br label %76

76:                                               ; preds = %61, %71
  %77 = phi i64* [ %62, %61 ], [ %72, %71 ]
  %78 = load i64, i64* %2, align 8
  %79 = add i64 %78, 11
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 acquire, align 4
  %82 = lshr i32 %81, 10
  %83 = and i32 %82, 1023
  %84 = zext i32 %83 to i64
  %85 = icmp eq i32 %83, 0
  br i1 %85, label %88, label %86

86:                                               ; preds = %76
  %87 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %4, i64 0, i32 0
  br label %89

88:                                               ; preds = %168, %76
  ret void

89:                                               ; preds = %86, %168
  %90 = phi i64 [ 0, %86 ], [ %169, %168 ]
  %91 = load i64, i64* %2, align 8
  %92 = and i64 %91, -4294967296
  %93 = add i64 %91, 23
  %94 = inttoptr i64 %93 to i32*
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = zext i32 %95 to i64
  %97 = or i64 %92, %96
  %98 = mul nuw nsw i64 %90, 51539607552
  %99 = add nuw nsw i64 %98, 68719476736
  %100 = lshr exact i64 %99, 32
  %101 = or i64 %100, 3
  %102 = add i64 %97, %101
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = ashr i32 %104, 1
  %106 = lshr i32 %105, 19
  %107 = and i32 %106, 1023
  %108 = lshr i32 %105, 6
  %109 = trunc i32 %108 to i8
  %110 = and i8 %109, 7
  %111 = add i64 %91, 3
  %112 = inttoptr i64 %111 to i8*
  %113 = load atomic i8, i8* %112 monotonic, align 1
  %114 = zext i8 %113 to i32
  %115 = add i64 %91, 4
  %116 = inttoptr i64 %115 to i8*
  %117 = load atomic i8, i8* %116 monotonic, align 1
  %118 = zext i8 %117 to i32
  %119 = sub nsw i32 %114, %118
  %120 = icmp slt i32 %107, %119
  br i1 %120, label %121, label %129

121:                                              ; preds = %89
  %122 = load atomic i8, i8* %116 monotonic, align 1
  %123 = zext i8 %122 to i64
  %124 = shl nuw nsw i64 %123, 28
  %125 = load atomic i8, i8* %116 monotonic, align 1
  %126 = zext i8 %125 to i32
  %127 = add nuw nsw i32 %107, %126
  %128 = shl nuw nsw i32 %127, 2
  br label %133

129:                                              ; preds = %89
  %130 = sub nsw i32 %107, %119
  %131 = shl nsw i32 %130, 2
  %132 = add nsw i32 %131, 8
  br label %133

133:                                              ; preds = %129, %121
  %134 = phi i32 [ %128, %121 ], [ %132, %129 ]
  %135 = phi i64 [ %124, %121 ], [ 536870912, %129 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %87) #9
  store i8 %110, i8* %87, align 1
  %136 = icmp ult i8 %110, 5
  br i1 %136, label %139, label %137

137:                                              ; preds = %133
  %138 = call i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"* nonnull %4) #9
  call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.156, i64 0, i64 0), i8* %138) #9
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

139:                                              ; preds = %133
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %87) #9
  %140 = zext i1 %120 to i64
  %141 = shl nuw nsw i64 %140, 13
  %142 = sext i32 %134 to i64
  %143 = sext i32 %119 to i64
  %144 = shl nsw i64 %143, 16
  %145 = or i64 %141, %144
  %146 = or i64 %145, %142
  %147 = load i64, i64* %77, align 8
  %148 = add i64 %147, %101
  %149 = inttoptr i64 %148 to i32*
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i64 %146, 8192
  %152 = icmp eq i64 %151, 0
  %153 = and i32 %150, 768
  %154 = icmp eq i32 %153, 256
  %155 = and i1 %152, %154
  br i1 %155, label %156, label %168

156:                                              ; preds = %139
  %157 = or i64 %146, %135
  %158 = lshr i64 %157, 26
  %159 = trunc i64 %158 to i32
  %160 = and i32 %159, 124
  %161 = and i32 %134, 8188
  %162 = load i64, i64* %25, align 8
  %163 = add nuw nsw i32 %161, 7
  %164 = sub nsw i32 %163, %160
  %165 = sext i32 %164 to i64
  %166 = add i64 %162, %165
  %167 = inttoptr i64 %166 to i8*
  store i8 1, i8* %167, align 1
  br label %168

168:                                              ; preds = %139, %156
  %169 = add nuw nsw i64 %90, 1
  %170 = icmp eq i64 %169, %84
  br i1 %170, label %88, label %89
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedValue28ReplaceElementsArrayWithCopyEv(%"class.v8::internal::TranslatedValue"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::FixedArrayBase>::ObjectRef", align 8
  %3 = tail call i64* @_ZN2v88internal15TranslatedValue8GetValueEv(%"class.v8::internal::TranslatedValue"* %0)
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = add i64 %10, 7
  %12 = inttoptr i64 %11 to i16*
  %13 = load atomic i16, i16* %12 monotonic, align 2
  %14 = icmp eq i16 %13, 134
  br i1 %14, label %15, label %22

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 2
  %17 = load %"class.v8::internal::TranslatedState"*, %"class.v8::internal::TranslatedState"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %17, i64 0, i32 3
  %19 = bitcast %"class.v8::internal::Isolate"** %18 to %"class.v8::internal::Factory"**
  %20 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %19, align 8
  %21 = tail call i64* @_ZN2v88internal7Factory20CopyFixedDoubleArrayENS0_6HandleINS0_16FixedDoubleArrayEEE(%"class.v8::internal::Factory"* %20, i64* %3) #9
  br label %34

22:                                               ; preds = %1
  %23 = bitcast %"class.v8::internal::Handle<v8::internal::FixedArrayBase>::ObjectRef"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FixedArrayBase>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FixedArrayBase>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %4, i64* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FixedArrayBase>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FixedArrayBase>::ObjectRef"* %2, i64 0, i32 0
  %26 = call zeroext i1 @_ZNK2v88internal14FixedArrayBase10IsCowArrayEv(%"class.v8::internal::FixedArrayBase"* nonnull %25) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #9
  br i1 %26, label %37, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 2
  %29 = load %"class.v8::internal::TranslatedState"*, %"class.v8::internal::TranslatedState"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %29, i64 0, i32 3
  %31 = bitcast %"class.v8::internal::Isolate"** %30 to %"class.v8::internal::Factory"**
  %32 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %31, align 8
  %33 = call i64* @_ZN2v88internal7Factory14CopyFixedArrayENS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::Factory"* %32, i64* %3) #9
  br label %34

34:                                               ; preds = %15, %27
  %35 = phi i64* [ %33, %27 ], [ %21, %15 ]
  %36 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* %35, i64** %36, align 8
  br label %37

37:                                               ; preds = %34, %22
  ret void
}

declare i64* @_ZN2v88internal7Factory20CopyFixedDoubleArrayENS0_6HandleINS0_16FixedDoubleArrayEEE(%"class.v8::internal::Factory"*, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal14FixedArrayBase10IsCowArrayEv(%"class.v8::internal::FixedArrayBase"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory14CopyFixedArrayENS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::Factory"*, i64*) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE12NewByteArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::TranslatedValue"* @_ZN2v88internal15TranslatedState15GetResolvedSlotEPNS0_15TranslatedFrameEi(%"class.v8::internal::TranslatedState"* nocapture readonly, %"class.v8::internal::TranslatedFrame"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = sext i32 %2 to i64
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, %4
  %8 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 0, i32 1
  %9 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %8, align 8
  %10 = lshr i64 %7, 7
  %11 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %9, i64 %10
  %12 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %11, align 8
  %13 = and i64 %7, 127
  %14 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %12, i64 %13
  %15 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %14, i64 0, i32 0
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 10
  br i1 %17, label %18, label %62

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 1
  %21 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2, i32 0, i32 0
  br label %23

23:                                               ; preds = %34, %18
  %24 = phi i8 [ 10, %18 ], [ %60, %34 ]
  %25 = phi %"class.v8::internal::TranslatedValue"* [ %14, %18 ], [ %58, %34 ]
  switch i8 %24, label %61 [
    i8 10, label %26
    i8 9, label %62
  ], !prof !2

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %25, i64 0, i32 4
  %28 = bitcast %union.anon* %27 to i32*
  %29 = load i32, i32* %28, align 8
  %30 = sext i32 %29 to i64
  %31 = load i64, i64* %19, align 8
  %32 = icmp ugt i64 %31, %30
  br i1 %32, label %34, label %33, !prof !3

33:                                               ; preds = %26
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.72, i64 0, i64 0)) #16
  unreachable

34:                                               ; preds = %26
  %35 = load i64, i64* %20, align 8
  %36 = add i64 %35, %30
  %37 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %21, align 8
  %38 = lshr i64 %36, 9
  %39 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %37, i64 %38
  %40 = load %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %39, align 8
  %41 = and i64 %36, 511
  %42 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %40, i64 %41, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %40, i64 %41, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %43 to i64
  %47 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %22, align 8
  %48 = sext i32 %45 to i64
  %49 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %47, i64 %46, i32 8, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, %48
  %52 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %47, i64 %46, i32 8, i32 0, i32 0, i32 1
  %53 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %52, align 8
  %54 = lshr i64 %51, 7
  %55 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %53, i64 %54
  %56 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %55, align 8
  %57 = and i64 %51, 127
  %58 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %56, i64 %57
  %59 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %58, i64 0, i32 0
  %60 = load i8, i8* %59, align 8
  br label %23

61:                                               ; preds = %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.74, i64 0, i64 0)) #16
  unreachable

62:                                               ; preds = %23, %3
  %63 = phi %"class.v8::internal::TranslatedValue"* [ %14, %3 ], [ %25, %23 ]
  %64 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %63, i64 0, i32 1
  %65 = load i8, i8* %64, align 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %68, !prof !25

67:                                               ; preds = %62
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.92, i64 0, i64 0)) #16
  unreachable

68:                                               ; preds = %62
  ret %"class.v8::internal::TranslatedValue"* %63
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::TranslatedValue"* @_ZN2v88internal15TranslatedState25GetResolvedSlotAndAdvanceEPNS0_15TranslatedFrameEPi(%"class.v8::internal::TranslatedState"* nocapture readonly, %"class.v8::internal::TranslatedFrame"* nocapture readonly, i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = tail call %"class.v8::internal::TranslatedValue"* @_ZN2v88internal15TranslatedState15GetResolvedSlotEPNS0_15TranslatedFrameEi(%"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedFrame"* %1, i32 %4)
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 0, i32 1
  %8 = load i32, i32* %2, align 4
  %9 = sext i32 %8 to i64
  br label %10

10:                                               ; preds = %32, %3
  %11 = phi i64 [ %20, %32 ], [ %9, %3 ]
  %12 = phi i32 [ %33, %32 ], [ 1, %3 ]
  %13 = load i64, i64* %6, align 8
  %14 = add i64 %13, %11
  %15 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %7, align 8
  %16 = lshr i64 %14, 7
  %17 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %15, i64 %16
  %18 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %17, align 8
  %19 = and i64 %14, 127
  %20 = add i64 %11, 1
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %2, align 4
  %22 = add nsw i32 %12, -1
  %23 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %18, i64 %19, i32 0
  %24 = load i8, i8* %23, align 8
  %25 = icmp eq i8 %24, 9
  br i1 %25, label %26, label %32

26:                                               ; preds = %10
  %27 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %18, i64 %19, i32 4
  %28 = bitcast %union.anon* %27 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %29 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %28, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %30, %22
  br label %32

32:                                               ; preds = %26, %10
  %33 = phi i32 [ %31, %26 ], [ %22, %10 ]
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %10, label %35

35:                                               ; preds = %32
  ret %"class.v8::internal::TranslatedValue"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal15TranslatedState18GetValueAndAdvanceEPNS0_15TranslatedFrameEPi(%"class.v8::internal::TranslatedState"* nocapture readonly, %"class.v8::internal::TranslatedFrame"* nocapture readonly, i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = load i32, i32* %2, align 4
  %5 = tail call %"class.v8::internal::TranslatedValue"* @_ZN2v88internal15TranslatedState15GetResolvedSlotEPNS0_15TranslatedFrameEi(%"class.v8::internal::TranslatedState"* %0, %"class.v8::internal::TranslatedFrame"* %1, i32 %4)
  %6 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 0, i32 1
  %8 = load i32, i32* %2, align 4
  %9 = sext i32 %8 to i64
  br label %10

10:                                               ; preds = %32, %3
  %11 = phi i64 [ %20, %32 ], [ %9, %3 ]
  %12 = phi i32 [ %33, %32 ], [ 1, %3 ]
  %13 = load i64, i64* %6, align 8
  %14 = add i64 %13, %11
  %15 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %7, align 8
  %16 = lshr i64 %14, 7
  %17 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %15, i64 %16
  %18 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %17, align 8
  %19 = and i64 %14, 127
  %20 = add i64 %11, 1
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %2, align 4
  %22 = add nsw i32 %12, -1
  %23 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %18, i64 %19, i32 0
  %24 = load i8, i8* %23, align 8
  %25 = icmp eq i8 %24, 9
  br i1 %25, label %26, label %32

26:                                               ; preds = %10
  %27 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %18, i64 %19, i32 4
  %28 = bitcast %union.anon* %27 to %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"*
  %29 = getelementptr inbounds %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo", %"struct.v8::internal::TranslatedValue::MaterializedObjectInfo"* %28, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %30, %22
  br label %32

32:                                               ; preds = %26, %10
  %33 = phi i32 [ %31, %26 ], [ %22, %10 ]
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %10, label %35

35:                                               ; preds = %32
  %36 = tail call i64* @_ZN2v88internal15TranslatedValue8GetValueEv(%"class.v8::internal::TranslatedValue"* %5)
  ret i64* %36
}

declare void @_ZN2v88internal4Heap24NotifyObjectLayoutChangeENS0_10HeapObjectERKNS0_22CombinationAssertScopeIJNS0_29PerThreadAssertScopeDebugOnlyILNS0_19PerThreadAssertTypeE0ELb0EEENS4_ILS5_1ELb0EEEEEENS0_23InvalidateRecordedSlotsE(%"class.v8::internal::Heap"*, i64, %"class.v8::internal::CombinationAssertScope"* dereferenceable(1), i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::TranslatedFrame"* @_ZN2v88internal15TranslatedState24GetFrameFromJSFrameIndexEi(%"class.v8::internal::TranslatedState"* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2, i32 0, i32 1
  %5 = bitcast %"class.v8::internal::TranslatedFrame"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.7"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  %10 = inttoptr i64 %8 to %"class.v8::internal::TranslatedFrame"*
  br i1 %9, label %28, label %11

11:                                               ; preds = %2
  %12 = sub i64 %6, %8
  %13 = sdiv exact i64 %12, 96
  br label %14

14:                                               ; preds = %11, %24
  %15 = phi i64 [ 0, %11 ], [ %26, %24 ]
  %16 = phi i32 [ %1, %11 ], [ %25, %24 ]
  %17 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %10, i64 %15
  %18 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  switch i32 %19, label %24 [
    i32 0, label %20
    i32 5, label %20
    i32 6, label %20
  ]

20:                                               ; preds = %14, %14, %14
  %21 = icmp sgt i32 %16, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %20
  %23 = add nsw i32 %16, -1
  br label %24

24:                                               ; preds = %14, %22
  %25 = phi i32 [ %23, %22 ], [ %16, %14 ]
  %26 = add nuw i64 %15, 1
  %27 = icmp ult i64 %26, %13
  br i1 %27, label %14, label %28

28:                                               ; preds = %20, %24, %2
  %29 = phi %"class.v8::internal::TranslatedFrame"* [ null, %2 ], [ null, %24 ], [ %17, %20 ]
  ret %"class.v8::internal::TranslatedFrame"* %29
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::TranslatedFrame"* @_ZN2v88internal15TranslatedState32GetArgumentsInfoFromJSFrameIndexEiPi(%"class.v8::internal::TranslatedState"* nocapture readonly, i32, i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = bitcast %"class.v8::internal::TranslatedFrame"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.7"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  %11 = inttoptr i64 %9 to %"class.v8::internal::TranslatedFrame"*
  br i1 %10, label %80, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %4, i64 0, i32 0, i32 0
  %14 = sub i64 %7, %9
  %15 = sdiv exact i64 %14, 96
  br label %16

16:                                               ; preds = %12, %76
  %17 = phi i32 [ %1, %12 ], [ %77, %76 ]
  %18 = phi i64 [ 0, %12 ], [ %78, %76 ]
  %19 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %11, i64 %18, i32 0
  %20 = load i32, i32* %19, align 8
  switch i32 %20, label %76 [
    i32 0, label %21
    i32 5, label %21
    i32 6, label %21
  ]

21:                                               ; preds = %16, %16, %16
  %22 = icmp sgt i32 %17, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = add nsw i32 %17, -1
  br label %76

25:                                               ; preds = %21
  %26 = icmp eq i64 %18, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %25
  %28 = add i64 %18, -1
  %29 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %11, i64 %28, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %37

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %11, i64 %28, i32 4
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %2, align 4
  %35 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %13, align 8
  %36 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %35, i64 %28
  br label %80

37:                                               ; preds = %25, %27
  %38 = icmp eq i32 %20, 5
  %39 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %11, i64 %18, i32 3, i32 0, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, 21
  %43 = inttoptr i64 %42 to i16*
  br i1 %38, label %44, label %68

44:                                               ; preds = %37
  %45 = load i16, i16* %43, align 2
  %46 = icmp eq i16 %45, -1
  br i1 %46, label %47, label %68

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %11, i64 %18, i32 4
  %49 = load i32, i32* %48, align 8
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %11, i64 %18, i32 8, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, %50
  %54 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %11, i64 %18, i32 8, i32 0, i32 0, i32 1
  %55 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %54, align 8
  %56 = lshr i64 %53, 7
  %57 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %55, i64 %56
  %58 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %57, align 8
  %59 = and i64 %53, 127
  %60 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %58, i64 %59
  %61 = tail call i64 @_ZNK2v88internal15TranslatedValue11GetRawValueEv(%"class.v8::internal::TranslatedValue"* %60) #9
  %62 = and i64 %61, 1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %65, label %64, !prof !3

64:                                               ; preds = %47
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.79, i64 0, i64 0)) #16
  unreachable

65:                                               ; preds = %47
  %66 = trunc i64 %61 to i32
  %67 = ashr i32 %66, 1
  br label %72

68:                                               ; preds = %37, %44
  %69 = load i16, i16* %43, align 2
  %70 = add i16 %69, 1
  %71 = zext i16 %70 to i32
  br label %72

72:                                               ; preds = %68, %65
  %73 = phi i32 [ %71, %68 ], [ %67, %65 ]
  store i32 %73, i32* %2, align 4
  %74 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %13, align 8
  %75 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %74, i64 %18
  br label %80

76:                                               ; preds = %16, %23
  %77 = phi i32 [ %24, %23 ], [ %17, %16 ]
  %78 = add nuw i64 %18, 1
  %79 = icmp ult i64 %78, %15
  br i1 %79, label %16, label %80

80:                                               ; preds = %76, %3, %72, %32
  %81 = phi %"class.v8::internal::TranslatedFrame"* [ %75, %72 ], [ %36, %32 ], [ null, %3 ], [ null, %76 ]
  ret %"class.v8::internal::TranslatedFrame"* %81
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15TranslatedState31StoreMaterializedValuesAndDeoptEPNS0_15JavaScriptFrameE(%"class.v8::internal::TranslatedState"* nocapture readonly, %"class.v8::internal::JavaScriptFrame"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 3
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 26
  %6 = load %"class.v8::internal::MaterializedObjectStore"*, %"class.v8::internal::MaterializedObjectStore"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 4
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64* @_ZN2v88internal23MaterializedObjectStore3GetEm(%"class.v8::internal::MaterializedObjectStore"* %6, i64 %8) #9
  %10 = bitcast %"class.v8::internal::Isolate"** %3 to %"class.v8::internal::Factory"**
  %11 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %11, i64 376
  %13 = bitcast %"class.v8::internal::Factory"* %12 to i64*
  %14 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = trunc i64 %15 to i32
  %17 = icmp eq i64* %9, null
  br i1 %17, label %18, label %63

18:                                               ; preds = %2
  %19 = bitcast %"class.v8::internal::Factory"* %11 to %"class.v8::internal::FactoryBase"*
  %20 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"* %19, i32 %16, i8 zeroext 1) #9
  %21 = icmp sgt i32 %16, 0
  br i1 %21, label %22, label %63

22:                                               ; preds = %18
  %23 = and i64 %15, 4294967295
  br label %24

24:                                               ; preds = %60, %22
  %25 = phi i64 [ 0, %22 ], [ %61, %60 ]
  %26 = load i64, i64* %20, align 8
  %27 = load i64, i64* %13, align 8
  %28 = trunc i64 %25 to i32
  %29 = shl i32 %28, 2
  %30 = sext i32 %29 to i64
  %31 = add nsw i64 %30, 7
  %32 = add i64 %31, %26
  %33 = inttoptr i64 %32 to i32*
  %34 = trunc i64 %27 to i32
  store atomic volatile i32 %34, i32* %33 monotonic, align 4
  %35 = and i64 %27, 1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %60, label %37

37:                                               ; preds = %24
  %38 = and i64 %26, -262144
  %39 = or i64 %38, 8
  %40 = inttoptr i64 %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 262144
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %37
  %45 = or i64 %38, 16
  %46 = inttoptr i64 %45 to %"class.v8::internal::Heap"**
  %47 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %46, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %47, i64 %26, i64 %32, i64 %27) #9
  br label %48

48:                                               ; preds = %44, %37
  %49 = and i64 %27, -262144
  %50 = or i64 %49, 8
  %51 = inttoptr i64 %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = and i64 %52, 24
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %48
  %56 = load i64, i64* %40, align 8
  %57 = and i64 %56, 24
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %55
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %26, i64 %32, i64 %27) #9
  br label %60

60:                                               ; preds = %24, %48, %55, %59
  %61 = add nuw nsw i64 %25, 1
  %62 = icmp eq i64 %61, %23
  br i1 %62, label %63, label %24

63:                                               ; preds = %60, %18, %2
  %64 = phi i64* [ %9, %2 ], [ %20, %18 ], [ %20, %60 ]
  %65 = phi i1 [ true, %2 ], [ false, %18 ], [ false, %60 ]
  %66 = load i64, i64* %64, align 8
  %67 = add i64 %66, 3
  %68 = inttoptr i64 %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = ashr i32 %69, 1
  %71 = icmp eq i32 %70, %16
  br i1 %71, label %72, label %81, !prof !3

72:                                               ; preds = %63
  %73 = icmp sgt i32 %16, 0
  br i1 %73, label %74, label %318

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 1
  %76 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %77 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2, i32 0, i32 0
  %78 = icmp eq %"class.v8::internal::Factory"* %12, null
  %79 = bitcast %"class.v8::internal::Isolate"** %3 to %"class.v8::internal::FactoryBase"**
  %80 = and i64 %15, 4294967295
  br label %86

81:                                               ; preds = %63
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.98, i64 0, i64 0)) #16
  unreachable

82:                                               ; preds = %278
  %83 = and i8 %279, 1
  %84 = icmp eq i8 %83, 0
  %85 = or i1 %65, %84
  br i1 %85, label %318, label %282

86:                                               ; preds = %278, %74
  %87 = phi i64 [ 0, %74 ], [ %280, %278 ]
  %88 = phi i8 [ 0, %74 ], [ %279, %278 ]
  %89 = load i64, i64* %75, align 8
  %90 = add i64 %89, %87
  %91 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %76, align 8
  %92 = lshr i64 %90, 9
  %93 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %91, i64 %92
  %94 = load %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %93, align 8
  %95 = and i64 %90, 511
  %96 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %94, i64 %95, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition", %"struct.v8::internal::TranslatedState::ObjectPosition"* %94, i64 %95, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = sext i32 %97 to i64
  %101 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %77, align 8
  %102 = sext i32 %99 to i64
  %103 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %101, i64 %100, i32 8, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = add i64 %104, %102
  %106 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %101, i64 %100, i32 8, i32 0, i32 0, i32 1
  %107 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %106, align 8
  %108 = lshr i64 %105, 7
  %109 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %107, i64 %108
  %110 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %109, align 8
  %111 = and i64 %105, 127
  %112 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %110, i64 %111
  %113 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %112, i64 0, i32 0
  %114 = load i8, i8* %113, align 8
  %115 = zext i8 %114 to i32
  %116 = add nsw i32 %115, -9
  %117 = icmp ult i32 %116, 2
  br i1 %117, label %119, label %118, !prof !3

118:                                              ; preds = %86
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.99, i64 0, i64 0)) #16
  unreachable

119:                                              ; preds = %86
  %120 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %110, i64 %111, i32 4
  %121 = bitcast %union.anon* %120 to i32*
  %122 = load i32, i32* %121, align 8
  %123 = zext i32 %122 to i64
  %124 = icmp eq i64 %87, %123
  br i1 %124, label %125, label %278

125:                                              ; preds = %119
  %126 = load i64, i64* %64, align 8
  %127 = and i64 %126, -4294967296
  %128 = trunc i64 %87 to i32
  %129 = shl i32 %128, 2
  %130 = sext i32 %129 to i64
  %131 = add nsw i64 %130, 7
  %132 = add i64 %126, %131
  %133 = inttoptr i64 %132 to i32*
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = zext i32 %134 to i64
  %136 = or i64 %127, %135
  %137 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %137, i64 0, i32 31, i32 4
  %139 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %138, align 8
  %140 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %139, null
  br i1 %140, label %143, label %141

141:                                              ; preds = %125
  %142 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %139, i64 %136) #9
  br label %156

143:                                              ; preds = %125
  %144 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %137, i64 0, i32 31, i32 0
  %145 = load i64*, i64** %144, align 8
  %146 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %137, i64 0, i32 31, i32 1
  %147 = load i64*, i64** %146, align 8
  %148 = icmp eq i64* %145, %147
  br i1 %148, label %149, label %151

149:                                              ; preds = %143
  %150 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %137) #9
  br label %151

151:                                              ; preds = %149, %143
  %152 = phi i64* [ %150, %149 ], [ %145, %143 ]
  %153 = ptrtoint i64* %152 to i64
  %154 = add i64 %153, 8
  %155 = inttoptr i64 %154 to i64*
  store i64* %155, i64** %144, align 8
  store i64 %136, i64* %152, align 8
  br label %156

156:                                              ; preds = %141, %151
  %157 = phi i64* [ %142, %141 ], [ %152, %151 ]
  %158 = tail call i64 @_ZNK2v88internal15TranslatedValue11GetRawValueEv(%"class.v8::internal::TranslatedValue"* %112)
  %159 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %160 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %159, i64 0, i32 31, i32 4
  %161 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %160, align 8
  %162 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %161, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %156
  %164 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %161, i64 %158) #9
  br label %178

165:                                              ; preds = %156
  %166 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %159, i64 0, i32 31, i32 0
  %167 = load i64*, i64** %166, align 8
  %168 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %159, i64 0, i32 31, i32 1
  %169 = load i64*, i64** %168, align 8
  %170 = icmp eq i64* %167, %169
  br i1 %170, label %171, label %173

171:                                              ; preds = %165
  %172 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %159) #9
  br label %173

173:                                              ; preds = %171, %165
  %174 = phi i64* [ %172, %171 ], [ %167, %165 ]
  %175 = ptrtoint i64* %174 to i64
  %176 = add i64 %175, 8
  %177 = inttoptr i64 %176 to i64*
  store i64* %177, i64** %166, align 8
  store i64 %158, i64* %174, align 8
  br label %178

178:                                              ; preds = %163, %173
  %179 = phi i64* [ %164, %163 ], [ %174, %173 ]
  %180 = icmp eq i64* %179, %13
  br i1 %180, label %278, label %181

181:                                              ; preds = %178
  %182 = icmp eq i64* %179, null
  %183 = or i1 %78, %182
  br i1 %183, label %184, label %188

184:                                              ; preds = %181
  %185 = load i64, i64* %13, align 8
  %186 = load i64, i64* %179, align 8
  %187 = trunc i64 %185 to i32
  br label %194

188:                                              ; preds = %181
  %189 = load i64, i64* %179, align 8
  %190 = load i64, i64* %13, align 8
  %191 = trunc i64 %189 to i32
  %192 = trunc i64 %190 to i32
  %193 = icmp eq i32 %191, %192
  br i1 %193, label %278, label %194

194:                                              ; preds = %184, %188
  %195 = phi i32 [ %187, %184 ], [ %192, %188 ]
  %196 = phi i64 [ %186, %184 ], [ %189, %188 ]
  %197 = load i64, i64* %157, align 8
  %198 = trunc i64 %197 to i32
  %199 = icmp eq i32 %195, %198
  br i1 %199, label %200, label %250

200:                                              ; preds = %194
  %201 = and i64 %196, 1
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %208, label %203

203:                                              ; preds = %200
  %204 = load i64, i64* %64, align 8
  %205 = add i64 %204, %131
  %206 = inttoptr i64 %205 to i32*
  %207 = trunc i64 %196 to i32
  store atomic volatile i32 %207, i32* %206 monotonic, align 4
  br label %224

208:                                              ; preds = %200
  %209 = load %"class.v8::internal::FactoryBase"*, %"class.v8::internal::FactoryBase"** %79, align 8
  %210 = trunc i64 %196 to i32
  %211 = ashr i32 %210, 1
  %212 = sitofp i32 %211 to double
  %213 = tail call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %209) #9
  %214 = load i64, i64* %213, align 8
  %215 = add i64 %214, 3
  %216 = inttoptr i64 %215 to double*
  store double %212, double* %216, align 1
  %217 = load i64, i64* %213, align 8
  %218 = and i64 %217, 1
  %219 = load i64, i64* %64, align 8
  %220 = add i64 %219, %131
  %221 = inttoptr i64 %220 to i32*
  %222 = trunc i64 %217 to i32
  store atomic volatile i32 %222, i32* %221 monotonic, align 4
  %223 = icmp eq i64 %218, 0
  br i1 %223, label %278, label %224

224:                                              ; preds = %203, %208
  %225 = phi i64 [ %205, %203 ], [ %220, %208 ]
  %226 = phi i64 [ %204, %203 ], [ %219, %208 ]
  %227 = phi i64 [ %196, %203 ], [ %217, %208 ]
  %228 = and i64 %226, -262144
  %229 = or i64 %228, 8
  %230 = inttoptr i64 %229 to i64*
  %231 = load i64, i64* %230, align 8
  %232 = and i64 %231, 262144
  %233 = icmp eq i64 %232, 0
  br i1 %233, label %238, label %234

234:                                              ; preds = %224
  %235 = or i64 %228, 16
  %236 = inttoptr i64 %235 to %"class.v8::internal::Heap"**
  %237 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %236, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %237, i64 %226, i64 %225, i64 %227) #9
  br label %238

238:                                              ; preds = %234, %224
  %239 = and i64 %227, -262144
  %240 = or i64 %239, 8
  %241 = inttoptr i64 %240 to i64*
  %242 = load i64, i64* %241, align 8
  %243 = and i64 %242, 24
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %278, label %245

245:                                              ; preds = %238
  %246 = load i64, i64* %230, align 8
  %247 = and i64 %246, 24
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %249, label %278

249:                                              ; preds = %245
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %226, i64 %225, i64 %227) #9
  br label %278

250:                                              ; preds = %194
  %251 = trunc i64 %196 to i32
  %252 = icmp eq i32 %198, %251
  br i1 %252, label %278, label %253

253:                                              ; preds = %250
  %254 = and i64 %197, 1
  %255 = icmp eq i64 %254, 0
  br i1 %255, label %277, label %256, !prof !26

256:                                              ; preds = %253
  %257 = and i64 %197, -4294967296
  %258 = add i64 %197, -1
  %259 = inttoptr i64 %258 to i32*
  %260 = load atomic i32, i32* %259 monotonic, align 4
  %261 = zext i32 %260 to i64
  %262 = or i64 %257, %261
  %263 = add i64 %262, 7
  %264 = inttoptr i64 %263 to i16*
  %265 = load atomic i16, i16* %264 monotonic, align 2
  %266 = icmp eq i16 %265, 66
  %267 = and i64 %196, 1
  %268 = icmp eq i64 %267, 0
  %269 = and i1 %268, %266
  br i1 %269, label %270, label %277, !prof !27

270:                                              ; preds = %256
  %271 = add i64 %197, 3
  %272 = inttoptr i64 %271 to double*
  %273 = load double, double* %272, align 1
  %274 = ashr i32 %251, 1
  %275 = sitofp i32 %274 to double
  %276 = fcmp oeq double %273, %275
  br i1 %276, label %278, label %277, !prof !3

277:                                              ; preds = %253, %256, %270
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.100, i64 0, i64 0)) #16
  unreachable

278:                                              ; preds = %178, %188, %270, %208, %238, %245, %249, %250, %119
  %279 = phi i8 [ %88, %119 ], [ %88, %188 ], [ %88, %270 ], [ 1, %208 ], [ 1, %238 ], [ 1, %245 ], [ 1, %249 ], [ %88, %250 ], [ %88, %178 ]
  %280 = add nuw nsw i64 %87, 1
  %281 = icmp eq i64 %280, %80
  br i1 %281, label %82, label %86

282:                                              ; preds = %82
  %283 = load i64, i64* %7, align 8
  tail call void @_ZN2v88internal23MaterializedObjectStore3SetEmNS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::MaterializedObjectStore"* %6, i64 %283, i64* %64) #9
  %284 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 2, i32 0, i32 0
  %285 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %284, align 8
  %286 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %285, i64 0, i32 0
  %287 = load i32, i32* %286, align 8
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %290, label %289, !prof !3

289:                                              ; preds = %282
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.101, i64 0, i64 0)) #16
  unreachable

290:                                              ; preds = %282
  %291 = bitcast %"class.v8::internal::JavaScriptFrame"* %1 to i64 (%"class.v8::internal::JavaScriptFrame"*)***
  %292 = load i64 (%"class.v8::internal::JavaScriptFrame"*)**, i64 (%"class.v8::internal::JavaScriptFrame"*)*** %291, align 8
  %293 = getelementptr inbounds i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %292, i64 13
  %294 = load i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %293, align 8
  %295 = tail call i64 %294(%"class.v8::internal::JavaScriptFrame"* %1) #9
  %296 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %284, align 8
  %297 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %296, i64 0, i32 8, i32 0, i32 0, i32 1
  %298 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %297, align 8
  %299 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %296, i64 0, i32 8, i32 0, i32 1
  %300 = load i64, i64* %299, align 8
  %301 = lshr i64 %300, 7
  %302 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %298, i64 %301
  %303 = load %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %302, align 8
  %304 = and i64 %300, 127
  %305 = getelementptr inbounds %"class.v8::internal::TranslatedValue", %"class.v8::internal::TranslatedValue"* %303, i64 %304
  %306 = tail call i64 @_ZNK2v88internal15TranslatedValue11GetRawValueEv(%"class.v8::internal::TranslatedValue"* %305)
  %307 = trunc i64 %295 to i32
  %308 = trunc i64 %306 to i32
  %309 = icmp eq i32 %307, %308
  br i1 %309, label %311, label %310, !prof !3

310:                                              ; preds = %290
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.102, i64 0, i64 0)) #16
  unreachable

311:                                              ; preds = %290
  %312 = load i64 (%"class.v8::internal::JavaScriptFrame"*)**, i64 (%"class.v8::internal::JavaScriptFrame"*)*** %291, align 8
  %313 = getelementptr inbounds i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %312, i64 13
  %314 = load i64 (%"class.v8::internal::JavaScriptFrame"*)*, i64 (%"class.v8::internal::JavaScriptFrame"*)** %313, align 8
  %315 = tail call i64 %314(%"class.v8::internal::JavaScriptFrame"* %1) #9
  %316 = getelementptr inbounds %"class.v8::internal::JavaScriptFrame", %"class.v8::internal::JavaScriptFrame"* %1, i64 0, i32 0, i32 0, i32 0
  %317 = tail call i64 @_ZNK2v88internal10StackFrame10LookupCodeEv(%"class.v8::internal::StackFrame"* %316) #9
  tail call void @_ZN2v88internal11Deoptimizer18DeoptimizeFunctionENS0_10JSFunctionENS0_4CodeE(i64 %315, i64 %317) #9
  br label %318

318:                                              ; preds = %72, %82, %311
  ret void
}

declare i64* @_ZN2v88internal23MaterializedObjectStore3GetEm(%"class.v8::internal::MaterializedObjectStore"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewFixedArrayEiNS0_14AllocationTypeE(%"class.v8::internal::FactoryBase"*, i32, i8 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal23MaterializedObjectStore3SetEmNS0_6HandleINS0_10FixedArrayEEE(%"class.v8::internal::MaterializedObjectStore"*, i64, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal11Deoptimizer18DeoptimizeFunctionENS0_10JSFunctionENS0_4CodeE(i64, i64) local_unnamed_addr #2

declare i64 @_ZNK2v88internal10StackFrame10LookupCodeEv(%"class.v8::internal::StackFrame"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2v88internal15TranslatedState25VerifyMaterializedObjectsEv(%"class.v8::internal::TranslatedState"* nocapture) local_unnamed_addr #8 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal15TranslatedState16DoUpdateFeedbackEv(%"class.v8::internal::TranslatedState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::FeedbackNexus", align 8
  %3 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 8, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 10, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, -1
  br i1 %9, label %10, label %11, !prof !25

10:                                               ; preds = %6
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.104, i64 0, i64 0)) #16
  unreachable

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.v8::internal::TranslatedState", %"class.v8::internal::TranslatedState"* %0, i64 0, i32 3
  %13 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %12, align 8
  tail call void @_ZN2v88internal7Isolate10CountUsageENS_7Isolate17UseCounterFeatureE(%"class.v8::internal::Isolate"* %13, i32 47) #9
  %14 = bitcast %"class.v8::internal::FeedbackNexus"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %14) #9
  %15 = load i64*, i64** %3, align 8
  %16 = load i32, i32* %7, align 8
  call void @_ZN2v88internal13FeedbackNexusC1ENS0_6HandleINS0_14FeedbackVectorEEENS0_12FeedbackSlotE(%"class.v8::internal::FeedbackNexus"* nonnull %2, i64* %15, i32 %16) #9
  call void @_ZN2v88internal13FeedbackNexus18SetSpeculationModeENS0_15SpeculationModeE(%"class.v8::internal::FeedbackNexus"* nonnull %2, i32 1) #9
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %14) #9
  br label %17

17:                                               ; preds = %1, %11
  %18 = phi i1 [ true, %11 ], [ false, %1 ]
  ret i1 %18
}

declare void @_ZN2v88internal7Isolate10CountUsageENS_7Isolate17UseCounterFeatureE(%"class.v8::internal::Isolate"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal13FeedbackNexusC1ENS0_6HandleINS0_14FeedbackVectorEEENS0_12FeedbackSlotE(%"class.v8::internal::FeedbackNexus"*, i64*, i32) unnamed_addr #2

declare void @_ZN2v88internal13FeedbackNexus18SetSpeculationModeENS0_15SpeculationModeE(%"class.v8::internal::FeedbackNexus"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.assume(i1) #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN2v88internal15TranslatedValueENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::TranslatedValue"*, align 8
  %3 = alloca %"class.v8::internal::TranslatedValue"*, align 8
  %4 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, 127
  br i1 %6, label %7, label %161

7:                                                ; preds = %1
  %8 = add i64 %5, -128
  store i64 %8, i64* %4, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %9, align 8
  %11 = bitcast %"class.v8::internal::TranslatedValue"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %10, i64 1
  store %"class.v8::internal::TranslatedValue"** %13, %"class.v8::internal::TranslatedValue"*** %9, align 8
  %14 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %15 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %16, align 8
  %18 = icmp eq %"class.v8::internal::TranslatedValue"** %15, %17
  %19 = ptrtoint %"class.v8::internal::TranslatedValue"** %17 to i64
  %20 = bitcast %"class.v8::internal::TranslatedValue"** %15 to i64*
  br i1 %18, label %21, label %157

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %22, align 8
  %24 = icmp ugt %"class.v8::internal::TranslatedValue"** %13, %23
  %25 = ptrtoint %"class.v8::internal::TranslatedValue"** %23 to i64
  br i1 %24, label %26, label %46

26:                                               ; preds = %21
  %27 = ptrtoint %"class.v8::internal::TranslatedValue"** %13 to i64
  %28 = sub i64 %27, %25
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = sdiv i64 %30, -2
  %32 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %13, i64 %31
  %33 = ptrtoint %"class.v8::internal::TranslatedValue"** %15 to i64
  %34 = sub i64 %33, %27
  %35 = ashr exact i64 %34, 3
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %26
  %38 = bitcast %"class.v8::internal::TranslatedValue"** %32 to i8*
  %39 = bitcast %"class.v8::internal::TranslatedValue"** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 %34, i1 false) #9
  %40 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %9, align 8
  br label %41

41:                                               ; preds = %37, %26
  %42 = phi %"class.v8::internal::TranslatedValue"** [ %13, %26 ], [ %40, %37 ]
  %43 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %32, i64 %35
  store %"class.v8::internal::TranslatedValue"** %43, %"class.v8::internal::TranslatedValue"*** %14, align 8
  %44 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %42, i64 %31
  store %"class.v8::internal::TranslatedValue"** %44, %"class.v8::internal::TranslatedValue"*** %9, align 8
  %45 = bitcast %"class.v8::internal::TranslatedValue"** %43 to i64*
  br label %157

46:                                               ; preds = %21
  %47 = bitcast %"class.v8::internal::TranslatedValue"*** %16 to i64*
  %48 = bitcast %"class.std::__1::deque"* %0 to i64*
  %49 = sub i64 %19, %25
  %50 = ashr exact i64 %49, 2
  %51 = icmp eq i64 %49, 0
  %52 = select i1 %51, i64 1, i64 %50
  %53 = icmp ugt i64 %52, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %46
  tail call void @abort() #16
  unreachable

55:                                               ; preds = %46
  %56 = lshr i64 %52, 2
  %57 = shl i64 %52, 3
  %58 = tail call i8* @_Znwm(i64 %57) #15
  %59 = bitcast i8* %58 to %"class.v8::internal::TranslatedValue"**
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %59, i64 %56
  %62 = ptrtoint %"class.v8::internal::TranslatedValue"** %61 to i64
  %63 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %59, i64 %52
  %64 = ptrtoint %"class.v8::internal::TranslatedValue"** %63 to i64
  %65 = ptrtoint %"class.v8::internal::TranslatedValue"** %13 to i64
  %66 = ptrtoint %"class.v8::internal::TranslatedValue"** %15 to i64
  %67 = sub i64 %66, %65
  %68 = ashr exact i64 %67, 3
  %69 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %61, i64 %68
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %146, label %71

71:                                               ; preds = %55
  %72 = add i64 %67, -8
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %71, %77
  %78 = phi %"class.v8::internal::TranslatedValue"** [ %85, %77 ], [ %61, %71 ]
  %79 = phi i64 [ %86, %77 ], [ %62, %71 ]
  %80 = phi %"class.v8::internal::TranslatedValue"** [ %87, %77 ], [ %13, %71 ]
  %81 = phi i64 [ %88, %77 ], [ %75, %71 ]
  %82 = bitcast %"class.v8::internal::TranslatedValue"** %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = inttoptr i64 %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %78, i64 1
  %86 = ptrtoint %"class.v8::internal::TranslatedValue"** %85 to i64
  %87 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %80, i64 1
  %88 = add i64 %81, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %77, !llvm.loop !28

90:                                               ; preds = %77
  %91 = ptrtoint %"class.v8::internal::TranslatedValue"** %85 to i64
  br label %92

92:                                               ; preds = %71, %90
  %93 = phi %"class.v8::internal::TranslatedValue"** [ %61, %71 ], [ %85, %90 ]
  %94 = phi i64 [ %62, %71 ], [ %91, %90 ]
  %95 = phi %"class.v8::internal::TranslatedValue"** [ %13, %71 ], [ %87, %90 ]
  %96 = icmp ult i64 %72, 56
  br i1 %96, label %143, label %97

97:                                               ; preds = %92, %97
  %98 = phi %"class.v8::internal::TranslatedValue"** [ %139, %97 ], [ %93, %92 ]
  %99 = phi i64 [ %140, %97 ], [ %94, %92 ]
  %100 = phi %"class.v8::internal::TranslatedValue"** [ %141, %97 ], [ %95, %92 ]
  %101 = bitcast %"class.v8::internal::TranslatedValue"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = inttoptr i64 %99 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %98, i64 1
  %105 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %100, i64 1
  %106 = bitcast %"class.v8::internal::TranslatedValue"** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.v8::internal::TranslatedValue"** %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %98, i64 2
  %110 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %100, i64 2
  %111 = bitcast %"class.v8::internal::TranslatedValue"** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.v8::internal::TranslatedValue"** %109 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %98, i64 3
  %115 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %100, i64 3
  %116 = bitcast %"class.v8::internal::TranslatedValue"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.v8::internal::TranslatedValue"** %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %98, i64 4
  %120 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %100, i64 4
  %121 = bitcast %"class.v8::internal::TranslatedValue"** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.v8::internal::TranslatedValue"** %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %98, i64 5
  %125 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %100, i64 5
  %126 = bitcast %"class.v8::internal::TranslatedValue"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.v8::internal::TranslatedValue"** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %98, i64 6
  %130 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %100, i64 6
  %131 = bitcast %"class.v8::internal::TranslatedValue"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.v8::internal::TranslatedValue"** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %98, i64 7
  %135 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %100, i64 7
  %136 = bitcast %"class.v8::internal::TranslatedValue"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.v8::internal::TranslatedValue"** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %98, i64 8
  %140 = ptrtoint %"class.v8::internal::TranslatedValue"** %139 to i64
  %141 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %100, i64 8
  %142 = icmp eq %"class.v8::internal::TranslatedValue"** %69, %139
  br i1 %142, label %143, label %97

143:                                              ; preds = %97, %92
  %144 = ptrtoint %"class.v8::internal::TranslatedValue"** %69 to i64
  %145 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %22, align 8
  br label %146

146:                                              ; preds = %143, %55
  %147 = phi %"class.v8::internal::TranslatedValue"** [ %145, %143 ], [ %23, %55 ]
  %148 = phi i64 [ %144, %143 ], [ %62, %55 ]
  store i64 %60, i64* %48, align 8
  %149 = bitcast %"class.v8::internal::TranslatedValue"*** %9 to i64*
  store i64 %62, i64* %149, align 8
  %150 = bitcast %"class.v8::internal::TranslatedValue"*** %14 to i64*
  store i64 %148, i64* %150, align 8
  store i64 %64, i64* %47, align 8
  %151 = icmp eq %"class.v8::internal::TranslatedValue"** %147, null
  %152 = inttoptr i64 %148 to i64*
  br i1 %151, label %157, label %153

153:                                              ; preds = %146
  %154 = bitcast %"class.v8::internal::TranslatedValue"** %147 to i8*
  tail call void @_ZdlPv(i8* %154) #15
  %155 = bitcast %"class.v8::internal::TranslatedValue"*** %14 to i64**
  %156 = load i64*, i64** %155, align 8
  br label %157

157:                                              ; preds = %7, %41, %146, %153
  %158 = phi i64* [ %156, %153 ], [ %152, %146 ], [ %45, %41 ], [ %20, %7 ]
  store i64 %12, i64* %158, align 8
  %159 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %14, align 8
  %160 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %159, i64 1
  store %"class.v8::internal::TranslatedValue"** %160, %"class.v8::internal::TranslatedValue"*** %14, align 8
  br label %549

161:                                              ; preds = %1
  %162 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %164 = bitcast %"class.v8::internal::TranslatedValue"*** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %167 = bitcast %"class.v8::internal::TranslatedValue"*** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %165, %168
  %170 = ashr exact i64 %169, 3
  %171 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %172 = bitcast %"class.v8::internal::TranslatedValue"*** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.std::__1::deque"* %0 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 %173, %175
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %170, %177
  %179 = inttoptr i64 %165 to %"class.v8::internal::TranslatedValue"**
  %180 = inttoptr i64 %168 to %"class.v8::internal::TranslatedValue"**
  br i1 %178, label %181, label %336

181:                                              ; preds = %161
  %182 = icmp eq i64 %173, %165
  br i1 %182, label %187, label %183

183:                                              ; preds = %181
  %184 = bitcast %"class.v8::internal::TranslatedValue"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #9
  %185 = tail call i8* @_Znwm(i64 4096) #15
  %186 = bitcast %"class.v8::internal::TranslatedValue"** %2 to i8**
  store i8* %185, i8** %186, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal15TranslatedValueENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"* %162, %"class.v8::internal::TranslatedValue"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #9
  br label %549

187:                                              ; preds = %181
  %188 = bitcast %"class.v8::internal::TranslatedValue"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #9
  %189 = tail call i8* @_Znwm(i64 4096) #15
  %190 = bitcast %"class.v8::internal::TranslatedValue"** %3 to i8**
  store i8* %189, i8** %190, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal15TranslatedValueENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"* %162, %"class.v8::internal::TranslatedValue"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #9
  %191 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %166, align 8
  %192 = bitcast %"class.v8::internal::TranslatedValue"** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %191, i64 1
  store %"class.v8::internal::TranslatedValue"** %194, %"class.v8::internal::TranslatedValue"*** %166, align 8
  %195 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %163, align 8
  %196 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %171, align 8
  %197 = icmp eq %"class.v8::internal::TranslatedValue"** %195, %196
  %198 = ptrtoint %"class.v8::internal::TranslatedValue"** %196 to i64
  %199 = bitcast %"class.v8::internal::TranslatedValue"** %195 to i64*
  br i1 %197, label %200, label %332

200:                                              ; preds = %187
  %201 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %202 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %201, align 8
  %203 = icmp ugt %"class.v8::internal::TranslatedValue"** %194, %202
  %204 = ptrtoint %"class.v8::internal::TranslatedValue"** %202 to i64
  br i1 %203, label %205, label %225

205:                                              ; preds = %200
  %206 = ptrtoint %"class.v8::internal::TranslatedValue"** %194 to i64
  %207 = sub i64 %206, %204
  %208 = ashr exact i64 %207, 3
  %209 = add nsw i64 %208, 1
  %210 = sdiv i64 %209, -2
  %211 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %194, i64 %210
  %212 = ptrtoint %"class.v8::internal::TranslatedValue"** %195 to i64
  %213 = sub i64 %212, %206
  %214 = ashr exact i64 %213, 3
  %215 = icmp eq i64 %213, 0
  br i1 %215, label %220, label %216

216:                                              ; preds = %205
  %217 = bitcast %"class.v8::internal::TranslatedValue"** %211 to i8*
  %218 = bitcast %"class.v8::internal::TranslatedValue"** %194 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %218, i64 %213, i1 false) #9
  %219 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %166, align 8
  br label %220

220:                                              ; preds = %216, %205
  %221 = phi %"class.v8::internal::TranslatedValue"** [ %194, %205 ], [ %219, %216 ]
  %222 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %211, i64 %214
  store %"class.v8::internal::TranslatedValue"** %222, %"class.v8::internal::TranslatedValue"*** %163, align 8
  %223 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %221, i64 %210
  store %"class.v8::internal::TranslatedValue"** %223, %"class.v8::internal::TranslatedValue"*** %166, align 8
  %224 = bitcast %"class.v8::internal::TranslatedValue"** %222 to i64*
  br label %332

225:                                              ; preds = %200
  %226 = sub i64 %198, %204
  %227 = ashr exact i64 %226, 2
  %228 = icmp eq i64 %226, 0
  %229 = select i1 %228, i64 1, i64 %227
  %230 = icmp ugt i64 %229, 2305843009213693951
  br i1 %230, label %231, label %232

231:                                              ; preds = %225
  call void @abort() #16
  unreachable

232:                                              ; preds = %225
  %233 = lshr i64 %229, 2
  %234 = shl i64 %229, 3
  %235 = call i8* @_Znwm(i64 %234) #15
  %236 = bitcast i8* %235 to %"class.v8::internal::TranslatedValue"**
  %237 = ptrtoint i8* %235 to i64
  %238 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %236, i64 %233
  %239 = ptrtoint %"class.v8::internal::TranslatedValue"** %238 to i64
  %240 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %236, i64 %229
  %241 = ptrtoint %"class.v8::internal::TranslatedValue"** %240 to i64
  %242 = ptrtoint %"class.v8::internal::TranslatedValue"** %194 to i64
  %243 = ptrtoint %"class.v8::internal::TranslatedValue"** %195 to i64
  %244 = sub i64 %243, %242
  %245 = ashr exact i64 %244, 3
  %246 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %238, i64 %245
  %247 = icmp eq i64 %244, 0
  br i1 %247, label %323, label %248

248:                                              ; preds = %232
  %249 = add i64 %244, -8
  %250 = lshr i64 %249, 3
  %251 = add nuw nsw i64 %250, 1
  %252 = and i64 %251, 7
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %269, label %254

254:                                              ; preds = %248, %254
  %255 = phi %"class.v8::internal::TranslatedValue"** [ %262, %254 ], [ %238, %248 ]
  %256 = phi i64 [ %263, %254 ], [ %239, %248 ]
  %257 = phi %"class.v8::internal::TranslatedValue"** [ %264, %254 ], [ %194, %248 ]
  %258 = phi i64 [ %265, %254 ], [ %252, %248 ]
  %259 = bitcast %"class.v8::internal::TranslatedValue"** %257 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = inttoptr i64 %256 to i64*
  store i64 %260, i64* %261, align 8
  %262 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %255, i64 1
  %263 = ptrtoint %"class.v8::internal::TranslatedValue"** %262 to i64
  %264 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %257, i64 1
  %265 = add i64 %258, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %254, !llvm.loop !30

267:                                              ; preds = %254
  %268 = ptrtoint %"class.v8::internal::TranslatedValue"** %262 to i64
  br label %269

269:                                              ; preds = %248, %267
  %270 = phi %"class.v8::internal::TranslatedValue"** [ %238, %248 ], [ %262, %267 ]
  %271 = phi i64 [ %239, %248 ], [ %268, %267 ]
  %272 = phi %"class.v8::internal::TranslatedValue"** [ %194, %248 ], [ %264, %267 ]
  %273 = icmp ult i64 %249, 56
  br i1 %273, label %320, label %274

274:                                              ; preds = %269, %274
  %275 = phi %"class.v8::internal::TranslatedValue"** [ %316, %274 ], [ %270, %269 ]
  %276 = phi i64 [ %317, %274 ], [ %271, %269 ]
  %277 = phi %"class.v8::internal::TranslatedValue"** [ %318, %274 ], [ %272, %269 ]
  %278 = bitcast %"class.v8::internal::TranslatedValue"** %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = inttoptr i64 %276 to i64*
  store i64 %279, i64* %280, align 8
  %281 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %275, i64 1
  %282 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %277, i64 1
  %283 = bitcast %"class.v8::internal::TranslatedValue"** %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = bitcast %"class.v8::internal::TranslatedValue"** %281 to i64*
  store i64 %284, i64* %285, align 8
  %286 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %275, i64 2
  %287 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %277, i64 2
  %288 = bitcast %"class.v8::internal::TranslatedValue"** %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = bitcast %"class.v8::internal::TranslatedValue"** %286 to i64*
  store i64 %289, i64* %290, align 8
  %291 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %275, i64 3
  %292 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %277, i64 3
  %293 = bitcast %"class.v8::internal::TranslatedValue"** %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = bitcast %"class.v8::internal::TranslatedValue"** %291 to i64*
  store i64 %294, i64* %295, align 8
  %296 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %275, i64 4
  %297 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %277, i64 4
  %298 = bitcast %"class.v8::internal::TranslatedValue"** %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = bitcast %"class.v8::internal::TranslatedValue"** %296 to i64*
  store i64 %299, i64* %300, align 8
  %301 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %275, i64 5
  %302 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %277, i64 5
  %303 = bitcast %"class.v8::internal::TranslatedValue"** %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = bitcast %"class.v8::internal::TranslatedValue"** %301 to i64*
  store i64 %304, i64* %305, align 8
  %306 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %275, i64 6
  %307 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %277, i64 6
  %308 = bitcast %"class.v8::internal::TranslatedValue"** %307 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = bitcast %"class.v8::internal::TranslatedValue"** %306 to i64*
  store i64 %309, i64* %310, align 8
  %311 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %275, i64 7
  %312 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %277, i64 7
  %313 = bitcast %"class.v8::internal::TranslatedValue"** %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.v8::internal::TranslatedValue"** %311 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %275, i64 8
  %317 = ptrtoint %"class.v8::internal::TranslatedValue"** %316 to i64
  %318 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %277, i64 8
  %319 = icmp eq %"class.v8::internal::TranslatedValue"** %246, %316
  br i1 %319, label %320, label %274

320:                                              ; preds = %274, %269
  %321 = ptrtoint %"class.v8::internal::TranslatedValue"** %246 to i64
  %322 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %201, align 8
  br label %323

323:                                              ; preds = %320, %232
  %324 = phi %"class.v8::internal::TranslatedValue"** [ %322, %320 ], [ %202, %232 ]
  %325 = phi i64 [ %321, %320 ], [ %239, %232 ]
  store i64 %237, i64* %174, align 8
  store i64 %239, i64* %167, align 8
  store i64 %325, i64* %164, align 8
  store i64 %241, i64* %172, align 8
  %326 = icmp eq %"class.v8::internal::TranslatedValue"** %324, null
  %327 = inttoptr i64 %325 to i64*
  br i1 %326, label %332, label %328

328:                                              ; preds = %323
  %329 = bitcast %"class.v8::internal::TranslatedValue"** %324 to i8*
  call void @_ZdlPv(i8* %329) #15
  %330 = bitcast %"class.v8::internal::TranslatedValue"*** %163 to i64**
  %331 = load i64*, i64** %330, align 8
  br label %332

332:                                              ; preds = %187, %220, %323, %328
  %333 = phi i64* [ %331, %328 ], [ %327, %323 ], [ %224, %220 ], [ %199, %187 ]
  store i64 %193, i64* %333, align 8
  %334 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %163, align 8
  %335 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %334, i64 1
  store %"class.v8::internal::TranslatedValue"** %335, %"class.v8::internal::TranslatedValue"*** %163, align 8
  br label %549

336:                                              ; preds = %161
  %337 = ashr exact i64 %176, 2
  %338 = icmp eq i64 %176, 0
  %339 = select i1 %338, i64 1, i64 %337
  %340 = icmp ugt i64 %339, 2305843009213693951
  br i1 %340, label %341, label %342

341:                                              ; preds = %336
  tail call void @abort() #16
  unreachable

342:                                              ; preds = %336
  %343 = shl i64 %339, 3
  %344 = tail call i8* @_Znwm(i64 %343) #15
  %345 = bitcast i8* %344 to %"class.v8::internal::TranslatedValue"**
  %346 = ptrtoint i8* %344 to i64
  %347 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %345, i64 %170
  %348 = ptrtoint %"class.v8::internal::TranslatedValue"** %347 to i64
  %349 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %345, i64 %339
  %350 = ptrtoint %"class.v8::internal::TranslatedValue"** %349 to i64
  %351 = tail call i8* @_Znwm(i64 4096) #15
  %352 = ptrtoint i8* %351 to i64
  %353 = icmp eq i64 %170, %339
  br i1 %353, label %354, label %382

354:                                              ; preds = %342
  %355 = icmp ugt %"class.v8::internal::TranslatedValue"** %347, %345
  br i1 %355, label %356, label %363

356:                                              ; preds = %354
  %357 = sub i64 %348, %346
  %358 = ashr exact i64 %357, 3
  %359 = add nsw i64 %358, 1
  %360 = sdiv i64 %359, -2
  %361 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %347, i64 %360
  %362 = ptrtoint %"class.v8::internal::TranslatedValue"** %361 to i64
  br label %382

363:                                              ; preds = %354
  %364 = sub i64 %350, %346
  %365 = ashr exact i64 %364, 2
  %366 = icmp eq i64 %364, 0
  %367 = select i1 %366, i64 1, i64 %365
  %368 = icmp ugt i64 %367, 2305843009213693951
  br i1 %368, label %369, label %370

369:                                              ; preds = %363
  tail call void @abort() #16
  unreachable

370:                                              ; preds = %363
  %371 = lshr i64 %367, 2
  %372 = shl i64 %367, 3
  %373 = tail call i8* @_Znwm(i64 %372) #15
  %374 = bitcast i8* %373 to %"class.v8::internal::TranslatedValue"**
  %375 = ptrtoint i8* %373 to i64
  %376 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %374, i64 %371
  %377 = ptrtoint %"class.v8::internal::TranslatedValue"** %376 to i64
  %378 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %374, i64 %367
  %379 = ptrtoint %"class.v8::internal::TranslatedValue"** %378 to i64
  tail call void @_ZdlPv(i8* nonnull %344) #15
  %380 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %163, align 8
  %381 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %166, align 8
  br label %382

382:                                              ; preds = %342, %356, %370
  %383 = phi %"class.v8::internal::TranslatedValue"** [ %180, %356 ], [ %381, %370 ], [ %180, %342 ]
  %384 = phi %"class.v8::internal::TranslatedValue"** [ %179, %356 ], [ %380, %370 ], [ %179, %342 ]
  %385 = phi i64 [ %346, %356 ], [ %375, %370 ], [ %346, %342 ]
  %386 = phi i64 [ %362, %356 ], [ %377, %370 ], [ %348, %342 ]
  %387 = phi %"class.v8::internal::TranslatedValue"** [ %361, %356 ], [ %376, %370 ], [ %347, %342 ]
  %388 = phi i64 [ %350, %356 ], [ %379, %370 ], [ %350, %342 ]
  %389 = bitcast %"class.v8::internal::TranslatedValue"** %387 to i64*
  store i64 %352, i64* %389, align 8
  %390 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %387, i64 1
  %391 = ptrtoint %"class.v8::internal::TranslatedValue"** %390 to i64
  %392 = icmp eq %"class.v8::internal::TranslatedValue"** %384, %383
  br i1 %392, label %395, label %405

393:                                              ; preds = %537
  %394 = ptrtoint %"class.v8::internal::TranslatedValue"** %542 to i64
  br label %395

395:                                              ; preds = %393, %382
  %396 = phi i64 [ %385, %382 ], [ %538, %393 ]
  %397 = phi i64 [ %386, %382 ], [ %394, %393 ]
  %398 = phi i64 [ %391, %382 ], [ %539, %393 ]
  %399 = phi i64 [ %388, %382 ], [ %540, %393 ]
  %400 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %401 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %400, align 8
  store i64 %396, i64* %174, align 8
  store i64 %397, i64* %167, align 8
  store i64 %398, i64* %164, align 8
  store i64 %399, i64* %172, align 8
  %402 = icmp eq %"class.v8::internal::TranslatedValue"** %401, null
  br i1 %402, label %549, label %403

403:                                              ; preds = %395
  %404 = bitcast %"class.v8::internal::TranslatedValue"** %401 to i8*
  tail call void @_ZdlPv(i8* %404) #15
  br label %549

405:                                              ; preds = %382, %537
  %406 = phi %"class.v8::internal::TranslatedValue"** [ %411, %537 ], [ %384, %382 ]
  %407 = phi i64 [ %540, %537 ], [ %388, %382 ]
  %408 = phi i64 [ %539, %537 ], [ %391, %382 ]
  %409 = phi i64 [ %546, %537 ], [ %386, %382 ]
  %410 = phi i64 [ %538, %537 ], [ %385, %382 ]
  %411 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %406, i64 -1
  %412 = inttoptr i64 %409 to %"class.v8::internal::TranslatedValue"**
  %413 = inttoptr i64 %410 to %"class.v8::internal::TranslatedValue"**
  %414 = icmp eq %"class.v8::internal::TranslatedValue"** %412, %413
  br i1 %414, label %415, label %537

415:                                              ; preds = %405
  %416 = inttoptr i64 %408 to %"class.v8::internal::TranslatedValue"**
  %417 = inttoptr i64 %407 to %"class.v8::internal::TranslatedValue"**
  %418 = icmp ult %"class.v8::internal::TranslatedValue"** %416, %417
  br i1 %418, label %419, label %436

419:                                              ; preds = %415
  %420 = sub i64 %407, %408
  %421 = ashr exact i64 %420, 3
  %422 = add nsw i64 %421, 1
  %423 = sdiv i64 %422, 2
  %424 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %416, i64 %423
  %425 = sub i64 %408, %409
  %426 = icmp eq i64 %425, 0
  br i1 %426, label %433, label %427

427:                                              ; preds = %419
  %428 = ashr exact i64 %425, 3
  %429 = sub nsw i64 0, %428
  %430 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %424, i64 %429
  %431 = bitcast %"class.v8::internal::TranslatedValue"** %430 to i8*
  %432 = inttoptr i64 %409 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %431, i8* align 8 %432, i64 %425, i1 false) #9
  br label %433

433:                                              ; preds = %427, %419
  %434 = phi %"class.v8::internal::TranslatedValue"** [ %430, %427 ], [ %424, %419 ]
  %435 = ptrtoint %"class.v8::internal::TranslatedValue"** %424 to i64
  br label %537

436:                                              ; preds = %415
  %437 = sub i64 %407, %410
  %438 = ashr exact i64 %437, 2
  %439 = icmp eq i64 %437, 0
  %440 = select i1 %439, i64 1, i64 %438
  %441 = icmp ugt i64 %440, 2305843009213693951
  br i1 %441, label %442, label %443

442:                                              ; preds = %436
  tail call void @abort() #16
  unreachable

443:                                              ; preds = %436
  %444 = add nuw nsw i64 %440, 3
  %445 = lshr i64 %444, 2
  %446 = shl i64 %440, 3
  %447 = tail call i8* @_Znwm(i64 %446) #15
  %448 = bitcast i8* %447 to %"class.v8::internal::TranslatedValue"**
  %449 = ptrtoint i8* %447 to i64
  %450 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %448, i64 %445
  %451 = ptrtoint %"class.v8::internal::TranslatedValue"** %450 to i64
  %452 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %448, i64 %440
  %453 = ptrtoint %"class.v8::internal::TranslatedValue"** %452 to i64
  %454 = sub i64 %408, %409
  %455 = ashr exact i64 %454, 3
  %456 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %450, i64 %455
  %457 = icmp eq i64 %454, 0
  br i1 %457, label %532, label %458

458:                                              ; preds = %443
  %459 = add i64 %454, -8
  %460 = lshr i64 %459, 3
  %461 = add nuw nsw i64 %460, 1
  %462 = and i64 %461, 7
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %479, label %464

464:                                              ; preds = %458, %464
  %465 = phi %"class.v8::internal::TranslatedValue"** [ %472, %464 ], [ %450, %458 ]
  %466 = phi i64 [ %473, %464 ], [ %451, %458 ]
  %467 = phi %"class.v8::internal::TranslatedValue"** [ %474, %464 ], [ %412, %458 ]
  %468 = phi i64 [ %475, %464 ], [ %462, %458 ]
  %469 = bitcast %"class.v8::internal::TranslatedValue"** %467 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = inttoptr i64 %466 to i64*
  store i64 %470, i64* %471, align 8
  %472 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %465, i64 1
  %473 = ptrtoint %"class.v8::internal::TranslatedValue"** %472 to i64
  %474 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %467, i64 1
  %475 = add i64 %468, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %464, !llvm.loop !31

477:                                              ; preds = %464
  %478 = ptrtoint %"class.v8::internal::TranslatedValue"** %472 to i64
  br label %479

479:                                              ; preds = %458, %477
  %480 = phi %"class.v8::internal::TranslatedValue"** [ %450, %458 ], [ %472, %477 ]
  %481 = phi i64 [ %451, %458 ], [ %478, %477 ]
  %482 = phi %"class.v8::internal::TranslatedValue"** [ %412, %458 ], [ %474, %477 ]
  %483 = icmp ult i64 %459, 56
  br i1 %483, label %530, label %484

484:                                              ; preds = %479, %484
  %485 = phi %"class.v8::internal::TranslatedValue"** [ %526, %484 ], [ %480, %479 ]
  %486 = phi i64 [ %527, %484 ], [ %481, %479 ]
  %487 = phi %"class.v8::internal::TranslatedValue"** [ %528, %484 ], [ %482, %479 ]
  %488 = bitcast %"class.v8::internal::TranslatedValue"** %487 to i64*
  %489 = load i64, i64* %488, align 8
  %490 = inttoptr i64 %486 to i64*
  store i64 %489, i64* %490, align 8
  %491 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %485, i64 1
  %492 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %487, i64 1
  %493 = bitcast %"class.v8::internal::TranslatedValue"** %492 to i64*
  %494 = load i64, i64* %493, align 8
  %495 = bitcast %"class.v8::internal::TranslatedValue"** %491 to i64*
  store i64 %494, i64* %495, align 8
  %496 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %485, i64 2
  %497 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %487, i64 2
  %498 = bitcast %"class.v8::internal::TranslatedValue"** %497 to i64*
  %499 = load i64, i64* %498, align 8
  %500 = bitcast %"class.v8::internal::TranslatedValue"** %496 to i64*
  store i64 %499, i64* %500, align 8
  %501 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %485, i64 3
  %502 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %487, i64 3
  %503 = bitcast %"class.v8::internal::TranslatedValue"** %502 to i64*
  %504 = load i64, i64* %503, align 8
  %505 = bitcast %"class.v8::internal::TranslatedValue"** %501 to i64*
  store i64 %504, i64* %505, align 8
  %506 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %485, i64 4
  %507 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %487, i64 4
  %508 = bitcast %"class.v8::internal::TranslatedValue"** %507 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = bitcast %"class.v8::internal::TranslatedValue"** %506 to i64*
  store i64 %509, i64* %510, align 8
  %511 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %485, i64 5
  %512 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %487, i64 5
  %513 = bitcast %"class.v8::internal::TranslatedValue"** %512 to i64*
  %514 = load i64, i64* %513, align 8
  %515 = bitcast %"class.v8::internal::TranslatedValue"** %511 to i64*
  store i64 %514, i64* %515, align 8
  %516 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %485, i64 6
  %517 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %487, i64 6
  %518 = bitcast %"class.v8::internal::TranslatedValue"** %517 to i64*
  %519 = load i64, i64* %518, align 8
  %520 = bitcast %"class.v8::internal::TranslatedValue"** %516 to i64*
  store i64 %519, i64* %520, align 8
  %521 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %485, i64 7
  %522 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %487, i64 7
  %523 = bitcast %"class.v8::internal::TranslatedValue"** %522 to i64*
  %524 = load i64, i64* %523, align 8
  %525 = bitcast %"class.v8::internal::TranslatedValue"** %521 to i64*
  store i64 %524, i64* %525, align 8
  %526 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %485, i64 8
  %527 = ptrtoint %"class.v8::internal::TranslatedValue"** %526 to i64
  %528 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %487, i64 8
  %529 = icmp eq %"class.v8::internal::TranslatedValue"** %456, %526
  br i1 %529, label %530, label %484

530:                                              ; preds = %484, %479
  %531 = ptrtoint %"class.v8::internal::TranslatedValue"** %456 to i64
  br label %532

532:                                              ; preds = %530, %443
  %533 = phi i64 [ %531, %530 ], [ %451, %443 ]
  %534 = icmp eq i64 %409, 0
  br i1 %534, label %537, label %535

535:                                              ; preds = %532
  %536 = inttoptr i64 %409 to i8*
  tail call void @_ZdlPv(i8* %536) #15
  br label %537

537:                                              ; preds = %405, %433, %532, %535
  %538 = phi i64 [ %410, %433 ], [ %449, %532 ], [ %449, %535 ], [ %410, %405 ]
  %539 = phi i64 [ %435, %433 ], [ %533, %532 ], [ %533, %535 ], [ %408, %405 ]
  %540 = phi i64 [ %407, %433 ], [ %453, %532 ], [ %453, %535 ], [ %407, %405 ]
  %541 = phi %"class.v8::internal::TranslatedValue"** [ %434, %433 ], [ %450, %532 ], [ %450, %535 ], [ %412, %405 ]
  %542 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %541, i64 -1
  %543 = bitcast %"class.v8::internal::TranslatedValue"** %411 to i64*
  %544 = load i64, i64* %543, align 8
  %545 = bitcast %"class.v8::internal::TranslatedValue"** %542 to i64*
  store i64 %544, i64* %545, align 8
  %546 = ptrtoint %"class.v8::internal::TranslatedValue"** %542 to i64
  %547 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %166, align 8
  %548 = icmp eq %"class.v8::internal::TranslatedValue"** %411, %547
  br i1 %548, label %393, label %405

549:                                              ; preds = %403, %395, %332, %183, %157
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal15TranslatedValueENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::TranslatedValue"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::TranslatedValue"** %4, %6
  %8 = ptrtoint %"class.v8::internal::TranslatedValue"** %6 to i64
  %9 = bitcast %"class.v8::internal::TranslatedValue"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %13, align 8
  %15 = icmp ugt %"class.v8::internal::TranslatedValue"** %12, %14
  %16 = ptrtoint %"class.v8::internal::TranslatedValue"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.v8::internal::TranslatedValue"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %12, i64 %22
  %24 = ptrtoint %"class.v8::internal::TranslatedValue"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::TranslatedValue"** %23 to i8*
  %30 = bitcast %"class.v8::internal::TranslatedValue"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #9
  %31 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.v8::internal::TranslatedValue"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %23, i64 %26
  store %"class.v8::internal::TranslatedValue"** %34, %"class.v8::internal::TranslatedValue"*** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %33, i64 %22
  store %"class.v8::internal::TranslatedValue"** %35, %"class.v8::internal::TranslatedValue"*** %11, align 8
  %36 = bitcast %"class.v8::internal::TranslatedValue"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.v8::internal::TranslatedValue"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #15
  %50 = bitcast i8* %49 to %"class.v8::internal::TranslatedValue"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %50, i64 %47
  %53 = ptrtoint %"class.v8::internal::TranslatedValue"** %52 to i64
  %54 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %50, i64 %43
  %55 = ptrtoint %"class.v8::internal::TranslatedValue"** %54 to i64
  %56 = ptrtoint %"class.v8::internal::TranslatedValue"** %12 to i64
  %57 = ptrtoint %"class.v8::internal::TranslatedValue"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.v8::internal::TranslatedValue"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.v8::internal::TranslatedValue"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.v8::internal::TranslatedValue"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %69, i64 1
  %77 = ptrtoint %"class.v8::internal::TranslatedValue"** %76 to i64
  %78 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !32

81:                                               ; preds = %68
  %82 = ptrtoint %"class.v8::internal::TranslatedValue"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.v8::internal::TranslatedValue"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.v8::internal::TranslatedValue"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.v8::internal::TranslatedValue"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.v8::internal::TranslatedValue"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.v8::internal::TranslatedValue"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %89, i64 1
  %96 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %91, i64 1
  %97 = bitcast %"class.v8::internal::TranslatedValue"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.v8::internal::TranslatedValue"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %89, i64 2
  %101 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %91, i64 2
  %102 = bitcast %"class.v8::internal::TranslatedValue"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.v8::internal::TranslatedValue"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %89, i64 3
  %106 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %91, i64 3
  %107 = bitcast %"class.v8::internal::TranslatedValue"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.v8::internal::TranslatedValue"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %89, i64 4
  %111 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %91, i64 4
  %112 = bitcast %"class.v8::internal::TranslatedValue"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.v8::internal::TranslatedValue"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %89, i64 5
  %116 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %91, i64 5
  %117 = bitcast %"class.v8::internal::TranslatedValue"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.v8::internal::TranslatedValue"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %89, i64 6
  %121 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %91, i64 6
  %122 = bitcast %"class.v8::internal::TranslatedValue"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.v8::internal::TranslatedValue"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %89, i64 7
  %126 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %91, i64 7
  %127 = bitcast %"class.v8::internal::TranslatedValue"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.v8::internal::TranslatedValue"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %89, i64 8
  %131 = ptrtoint %"class.v8::internal::TranslatedValue"** %130 to i64
  %132 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %91, i64 8
  %133 = icmp eq %"class.v8::internal::TranslatedValue"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.v8::internal::TranslatedValue"** %60 to i64
  %136 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.v8::internal::TranslatedValue"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.v8::internal::TranslatedValue"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.v8::internal::TranslatedValue"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.v8::internal::TranslatedValue"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.v8::internal::TranslatedValue"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #15
  %146 = bitcast %"class.v8::internal::TranslatedValue"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.v8::internal::TranslatedValue"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %3, align 8
  %153 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %152, i64 1
  store %"class.v8::internal::TranslatedValue"** %153, %"class.v8::internal::TranslatedValue"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal15TranslatedValueENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer"*, %"class.v8::internal::TranslatedValue"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::TranslatedValue"** %4, %6
  %8 = ptrtoint %"class.v8::internal::TranslatedValue"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %12, align 8
  %14 = icmp ult %"class.v8::internal::TranslatedValue"** %11, %13
  %15 = bitcast %"class.v8::internal::TranslatedValue"*** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::TranslatedValue"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.v8::internal::TranslatedValue"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::TranslatedValue"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %23, i64 %29
  %31 = bitcast %"class.v8::internal::TranslatedValue"** %30 to i8*
  %32 = bitcast %"class.v8::internal::TranslatedValue"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #9
  %33 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.v8::internal::TranslatedValue"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.v8::internal::TranslatedValue"** [ %30, %27 ], [ %23, %17 ]
  store %"class.v8::internal::TranslatedValue"** %36, %"class.v8::internal::TranslatedValue"*** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %35, i64 %22
  store %"class.v8::internal::TranslatedValue"** %37, %"class.v8::internal::TranslatedValue"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #15
  %51 = bitcast i8* %50 to %"class.v8::internal::TranslatedValue"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %51, i64 %48
  %54 = ptrtoint %"class.v8::internal::TranslatedValue"** %53 to i64
  %55 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %51, i64 %43
  %56 = ptrtoint %"class.v8::internal::TranslatedValue"** %55 to i64
  %57 = ptrtoint %"class.v8::internal::TranslatedValue"** %4 to i64
  %58 = ptrtoint %"class.v8::internal::TranslatedValue"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.v8::internal::TranslatedValue"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.v8::internal::TranslatedValue"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.v8::internal::TranslatedValue"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %70, i64 1
  %78 = ptrtoint %"class.v8::internal::TranslatedValue"** %77 to i64
  %79 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !33

82:                                               ; preds = %69
  %83 = ptrtoint %"class.v8::internal::TranslatedValue"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.v8::internal::TranslatedValue"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.v8::internal::TranslatedValue"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.v8::internal::TranslatedValue"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.v8::internal::TranslatedValue"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.v8::internal::TranslatedValue"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %90, i64 1
  %97 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %92, i64 1
  %98 = bitcast %"class.v8::internal::TranslatedValue"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.v8::internal::TranslatedValue"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %90, i64 2
  %102 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %92, i64 2
  %103 = bitcast %"class.v8::internal::TranslatedValue"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.v8::internal::TranslatedValue"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %90, i64 3
  %107 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %92, i64 3
  %108 = bitcast %"class.v8::internal::TranslatedValue"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::TranslatedValue"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %90, i64 4
  %112 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %92, i64 4
  %113 = bitcast %"class.v8::internal::TranslatedValue"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.v8::internal::TranslatedValue"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %90, i64 5
  %117 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %92, i64 5
  %118 = bitcast %"class.v8::internal::TranslatedValue"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.v8::internal::TranslatedValue"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %90, i64 6
  %122 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %92, i64 6
  %123 = bitcast %"class.v8::internal::TranslatedValue"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.v8::internal::TranslatedValue"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %90, i64 7
  %127 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %92, i64 7
  %128 = bitcast %"class.v8::internal::TranslatedValue"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::TranslatedValue"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %90, i64 8
  %132 = ptrtoint %"class.v8::internal::TranslatedValue"** %131 to i64
  %133 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %92, i64 8
  %134 = icmp eq %"class.v8::internal::TranslatedValue"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.v8::internal::TranslatedValue"** %61 to i64
  %137 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.v8::internal::TranslatedValue"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.v8::internal::TranslatedValue"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.v8::internal::TranslatedValue"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.v8::internal::TranslatedValue"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.v8::internal::TranslatedValue"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #15
  %146 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.v8::internal::TranslatedValue"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %148, i64 -1
  %150 = bitcast %"class.v8::internal::TranslatedValue"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.v8::internal::TranslatedValue"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.v8::internal::TranslatedValue"**, %"class.v8::internal::TranslatedValue"*** %3, align 8
  %154 = getelementptr inbounds %"class.v8::internal::TranslatedValue"*, %"class.v8::internal::TranslatedValue"** %153, i64 -1
  store %"class.v8::internal::TranslatedValue"** %154, %"class.v8::internal::TranslatedValue"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK2v88internal14Representation8MnemonicEv(%"class.v8::internal::Representation"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = icmp ult i8 %3, 6
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

6:                                                ; preds = %1
  %7 = sext i8 %3 to i64
  %8 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table._ZNK2v88internal14Representation8MnemonicEv, i64 0, i64 %7
  %9 = load i8*, i8** %8, align 8
  ret i8* %9
}

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !34
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #15
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #9
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #13

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #13

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #14

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #10

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN2v88internal15TranslatedState14ObjectPositionENS_9allocatorIS4_EEE19__add_back_capacityEv(%"class.std::__1::deque.1163"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.v8::internal::TranslatedState::ObjectPosition"*, align 8
  %3 = alloca %"struct.v8::internal::TranslatedState::ObjectPosition"*, align 8
  %4 = getelementptr inbounds %"class.std::__1::deque.1163", %"class.std::__1::deque.1163"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, 511
  br i1 %6, label %7, label %161

7:                                                ; preds = %1
  %8 = add i64 %5, -512
  store i64 %8, i64* %4, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque.1163", %"class.std::__1::deque.1163"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %9, align 8
  %11 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %10, i64 1
  store %"struct.v8::internal::TranslatedState::ObjectPosition"** %13, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %9, align 8
  %14 = getelementptr inbounds %"class.std::__1::deque.1163", %"class.std::__1::deque.1163"* %0, i64 0, i32 0, i32 0, i32 2
  %15 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::deque.1163", %"class.std::__1::deque.1163"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %16, align 8
  %18 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %15, %17
  %19 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %17 to i64
  %20 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %15 to i64*
  br i1 %18, label %21, label %157

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"class.std::__1::deque.1163", %"class.std::__1::deque.1163"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %22, align 8
  %24 = icmp ugt %"struct.v8::internal::TranslatedState::ObjectPosition"** %13, %23
  %25 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %23 to i64
  br i1 %24, label %26, label %46

26:                                               ; preds = %21
  %27 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %13 to i64
  %28 = sub i64 %27, %25
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = sdiv i64 %30, -2
  %32 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %13, i64 %31
  %33 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %15 to i64
  %34 = sub i64 %33, %27
  %35 = ashr exact i64 %34, 3
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %26
  %38 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %32 to i8*
  %39 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 %34, i1 false) #9
  %40 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %9, align 8
  br label %41

41:                                               ; preds = %37, %26
  %42 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %13, %26 ], [ %40, %37 ]
  %43 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %32, i64 %35
  store %"struct.v8::internal::TranslatedState::ObjectPosition"** %43, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %14, align 8
  %44 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %42, i64 %31
  store %"struct.v8::internal::TranslatedState::ObjectPosition"** %44, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %9, align 8
  %45 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %43 to i64*
  br label %157

46:                                               ; preds = %21
  %47 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %16 to i64*
  %48 = bitcast %"class.std::__1::deque.1163"* %0 to i64*
  %49 = sub i64 %19, %25
  %50 = ashr exact i64 %49, 2
  %51 = icmp eq i64 %49, 0
  %52 = select i1 %51, i64 1, i64 %50
  %53 = icmp ugt i64 %52, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %46
  tail call void @abort() #16
  unreachable

55:                                               ; preds = %46
  %56 = lshr i64 %52, 2
  %57 = shl i64 %52, 3
  %58 = tail call i8* @_Znwm(i64 %57) #15
  %59 = bitcast i8* %58 to %"struct.v8::internal::TranslatedState::ObjectPosition"**
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %59, i64 %56
  %62 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %61 to i64
  %63 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %59, i64 %52
  %64 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %63 to i64
  %65 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %13 to i64
  %66 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %15 to i64
  %67 = sub i64 %66, %65
  %68 = ashr exact i64 %67, 3
  %69 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %61, i64 %68
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %146, label %71

71:                                               ; preds = %55
  %72 = add i64 %67, -8
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %71, %77
  %78 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %85, %77 ], [ %61, %71 ]
  %79 = phi i64 [ %86, %77 ], [ %62, %71 ]
  %80 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %87, %77 ], [ %13, %71 ]
  %81 = phi i64 [ %88, %77 ], [ %75, %71 ]
  %82 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = inttoptr i64 %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %78, i64 1
  %86 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %85 to i64
  %87 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %80, i64 1
  %88 = add i64 %81, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %77, !llvm.loop !35

90:                                               ; preds = %77
  %91 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %85 to i64
  br label %92

92:                                               ; preds = %71, %90
  %93 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %61, %71 ], [ %85, %90 ]
  %94 = phi i64 [ %62, %71 ], [ %91, %90 ]
  %95 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %13, %71 ], [ %87, %90 ]
  %96 = icmp ult i64 %72, 56
  br i1 %96, label %143, label %97

97:                                               ; preds = %92, %97
  %98 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %139, %97 ], [ %93, %92 ]
  %99 = phi i64 [ %140, %97 ], [ %94, %92 ]
  %100 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %141, %97 ], [ %95, %92 ]
  %101 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = inttoptr i64 %99 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %98, i64 1
  %105 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %100, i64 1
  %106 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %98, i64 2
  %110 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %100, i64 2
  %111 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %109 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %98, i64 3
  %115 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %100, i64 3
  %116 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %98, i64 4
  %120 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %100, i64 4
  %121 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %98, i64 5
  %125 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %100, i64 5
  %126 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %98, i64 6
  %130 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %100, i64 6
  %131 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %98, i64 7
  %135 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %100, i64 7
  %136 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %98, i64 8
  %140 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %139 to i64
  %141 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %100, i64 8
  %142 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %69, %139
  br i1 %142, label %143, label %97

143:                                              ; preds = %97, %92
  %144 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %69 to i64
  %145 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %22, align 8
  br label %146

146:                                              ; preds = %143, %55
  %147 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %145, %143 ], [ %23, %55 ]
  %148 = phi i64 [ %144, %143 ], [ %62, %55 ]
  store i64 %60, i64* %48, align 8
  %149 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %9 to i64*
  store i64 %62, i64* %149, align 8
  %150 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %14 to i64*
  store i64 %148, i64* %150, align 8
  store i64 %64, i64* %47, align 8
  %151 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %147, null
  %152 = inttoptr i64 %148 to i64*
  br i1 %151, label %157, label %153

153:                                              ; preds = %146
  %154 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %147 to i8*
  tail call void @_ZdlPv(i8* %154) #15
  %155 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %14 to i64**
  %156 = load i64*, i64** %155, align 8
  br label %157

157:                                              ; preds = %7, %41, %146, %153
  %158 = phi i64* [ %156, %153 ], [ %152, %146 ], [ %45, %41 ], [ %20, %7 ]
  store i64 %12, i64* %158, align 8
  %159 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %14, align 8
  %160 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %159, i64 1
  store %"struct.v8::internal::TranslatedState::ObjectPosition"** %160, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %14, align 8
  br label %549

161:                                              ; preds = %1
  %162 = getelementptr inbounds %"class.std::__1::deque.1163", %"class.std::__1::deque.1163"* %0, i64 0, i32 0, i32 0
  %163 = getelementptr inbounds %"class.std::__1::deque.1163", %"class.std::__1::deque.1163"* %0, i64 0, i32 0, i32 0, i32 2
  %164 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::deque.1163", %"class.std::__1::deque.1163"* %0, i64 0, i32 0, i32 0, i32 1
  %167 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %165, %168
  %170 = ashr exact i64 %169, 3
  %171 = getelementptr inbounds %"class.std::__1::deque.1163", %"class.std::__1::deque.1163"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %172 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.std::__1::deque.1163"* %0 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 %173, %175
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %170, %177
  %179 = inttoptr i64 %165 to %"struct.v8::internal::TranslatedState::ObjectPosition"**
  %180 = inttoptr i64 %168 to %"struct.v8::internal::TranslatedState::ObjectPosition"**
  br i1 %178, label %181, label %336

181:                                              ; preds = %161
  %182 = icmp eq i64 %173, %165
  br i1 %182, label %187, label %183

183:                                              ; preds = %181
  %184 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #9
  %185 = tail call i8* @_Znwm(i64 4096) #15
  %186 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %2 to i8**
  store i8* %185, i8** %186, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal15TranslatedState14ObjectPositionENS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer.1165"* %162, %"struct.v8::internal::TranslatedState::ObjectPosition"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #9
  br label %549

187:                                              ; preds = %181
  %188 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #9
  %189 = tail call i8* @_Znwm(i64 4096) #15
  %190 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %3 to i8**
  store i8* %189, i8** %190, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal15TranslatedState14ObjectPositionENS_9allocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer.1165"* %162, %"struct.v8::internal::TranslatedState::ObjectPosition"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #9
  %191 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %166, align 8
  %192 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %191, i64 1
  store %"struct.v8::internal::TranslatedState::ObjectPosition"** %194, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %166, align 8
  %195 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %163, align 8
  %196 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %171, align 8
  %197 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %195, %196
  %198 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %196 to i64
  %199 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %195 to i64*
  br i1 %197, label %200, label %332

200:                                              ; preds = %187
  %201 = getelementptr inbounds %"class.std::__1::deque.1163", %"class.std::__1::deque.1163"* %0, i64 0, i32 0, i32 0, i32 0
  %202 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %201, align 8
  %203 = icmp ugt %"struct.v8::internal::TranslatedState::ObjectPosition"** %194, %202
  %204 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %202 to i64
  br i1 %203, label %205, label %225

205:                                              ; preds = %200
  %206 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %194 to i64
  %207 = sub i64 %206, %204
  %208 = ashr exact i64 %207, 3
  %209 = add nsw i64 %208, 1
  %210 = sdiv i64 %209, -2
  %211 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %194, i64 %210
  %212 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %195 to i64
  %213 = sub i64 %212, %206
  %214 = ashr exact i64 %213, 3
  %215 = icmp eq i64 %213, 0
  br i1 %215, label %220, label %216

216:                                              ; preds = %205
  %217 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %211 to i8*
  %218 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %194 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %218, i64 %213, i1 false) #9
  %219 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %166, align 8
  br label %220

220:                                              ; preds = %216, %205
  %221 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %194, %205 ], [ %219, %216 ]
  %222 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %211, i64 %214
  store %"struct.v8::internal::TranslatedState::ObjectPosition"** %222, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %163, align 8
  %223 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %221, i64 %210
  store %"struct.v8::internal::TranslatedState::ObjectPosition"** %223, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %166, align 8
  %224 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %222 to i64*
  br label %332

225:                                              ; preds = %200
  %226 = sub i64 %198, %204
  %227 = ashr exact i64 %226, 2
  %228 = icmp eq i64 %226, 0
  %229 = select i1 %228, i64 1, i64 %227
  %230 = icmp ugt i64 %229, 2305843009213693951
  br i1 %230, label %231, label %232

231:                                              ; preds = %225
  call void @abort() #16
  unreachable

232:                                              ; preds = %225
  %233 = lshr i64 %229, 2
  %234 = shl i64 %229, 3
  %235 = call i8* @_Znwm(i64 %234) #15
  %236 = bitcast i8* %235 to %"struct.v8::internal::TranslatedState::ObjectPosition"**
  %237 = ptrtoint i8* %235 to i64
  %238 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %236, i64 %233
  %239 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %238 to i64
  %240 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %236, i64 %229
  %241 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %240 to i64
  %242 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %194 to i64
  %243 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %195 to i64
  %244 = sub i64 %243, %242
  %245 = ashr exact i64 %244, 3
  %246 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %238, i64 %245
  %247 = icmp eq i64 %244, 0
  br i1 %247, label %323, label %248

248:                                              ; preds = %232
  %249 = add i64 %244, -8
  %250 = lshr i64 %249, 3
  %251 = add nuw nsw i64 %250, 1
  %252 = and i64 %251, 7
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %269, label %254

254:                                              ; preds = %248, %254
  %255 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %262, %254 ], [ %238, %248 ]
  %256 = phi i64 [ %263, %254 ], [ %239, %248 ]
  %257 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %264, %254 ], [ %194, %248 ]
  %258 = phi i64 [ %265, %254 ], [ %252, %248 ]
  %259 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %257 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = inttoptr i64 %256 to i64*
  store i64 %260, i64* %261, align 8
  %262 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %255, i64 1
  %263 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %262 to i64
  %264 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %257, i64 1
  %265 = add i64 %258, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %254, !llvm.loop !36

267:                                              ; preds = %254
  %268 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %262 to i64
  br label %269

269:                                              ; preds = %248, %267
  %270 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %238, %248 ], [ %262, %267 ]
  %271 = phi i64 [ %239, %248 ], [ %268, %267 ]
  %272 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %194, %248 ], [ %264, %267 ]
  %273 = icmp ult i64 %249, 56
  br i1 %273, label %320, label %274

274:                                              ; preds = %269, %274
  %275 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %316, %274 ], [ %270, %269 ]
  %276 = phi i64 [ %317, %274 ], [ %271, %269 ]
  %277 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %318, %274 ], [ %272, %269 ]
  %278 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = inttoptr i64 %276 to i64*
  store i64 %279, i64* %280, align 8
  %281 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %275, i64 1
  %282 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %277, i64 1
  %283 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %281 to i64*
  store i64 %284, i64* %285, align 8
  %286 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %275, i64 2
  %287 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %277, i64 2
  %288 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %286 to i64*
  store i64 %289, i64* %290, align 8
  %291 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %275, i64 3
  %292 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %277, i64 3
  %293 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %291 to i64*
  store i64 %294, i64* %295, align 8
  %296 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %275, i64 4
  %297 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %277, i64 4
  %298 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %296 to i64*
  store i64 %299, i64* %300, align 8
  %301 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %275, i64 5
  %302 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %277, i64 5
  %303 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %301 to i64*
  store i64 %304, i64* %305, align 8
  %306 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %275, i64 6
  %307 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %277, i64 6
  %308 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %307 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %306 to i64*
  store i64 %309, i64* %310, align 8
  %311 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %275, i64 7
  %312 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %277, i64 7
  %313 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %311 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %275, i64 8
  %317 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %316 to i64
  %318 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %277, i64 8
  %319 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %246, %316
  br i1 %319, label %320, label %274

320:                                              ; preds = %274, %269
  %321 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %246 to i64
  %322 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %201, align 8
  br label %323

323:                                              ; preds = %320, %232
  %324 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %322, %320 ], [ %202, %232 ]
  %325 = phi i64 [ %321, %320 ], [ %239, %232 ]
  store i64 %237, i64* %174, align 8
  store i64 %239, i64* %167, align 8
  store i64 %325, i64* %164, align 8
  store i64 %241, i64* %172, align 8
  %326 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %324, null
  %327 = inttoptr i64 %325 to i64*
  br i1 %326, label %332, label %328

328:                                              ; preds = %323
  %329 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %324 to i8*
  call void @_ZdlPv(i8* %329) #15
  %330 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %163 to i64**
  %331 = load i64*, i64** %330, align 8
  br label %332

332:                                              ; preds = %187, %220, %323, %328
  %333 = phi i64* [ %331, %328 ], [ %327, %323 ], [ %224, %220 ], [ %199, %187 ]
  store i64 %193, i64* %333, align 8
  %334 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %163, align 8
  %335 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %334, i64 1
  store %"struct.v8::internal::TranslatedState::ObjectPosition"** %335, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %163, align 8
  br label %549

336:                                              ; preds = %161
  %337 = ashr exact i64 %176, 2
  %338 = icmp eq i64 %176, 0
  %339 = select i1 %338, i64 1, i64 %337
  %340 = icmp ugt i64 %339, 2305843009213693951
  br i1 %340, label %341, label %342

341:                                              ; preds = %336
  tail call void @abort() #16
  unreachable

342:                                              ; preds = %336
  %343 = shl i64 %339, 3
  %344 = tail call i8* @_Znwm(i64 %343) #15
  %345 = bitcast i8* %344 to %"struct.v8::internal::TranslatedState::ObjectPosition"**
  %346 = ptrtoint i8* %344 to i64
  %347 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %345, i64 %170
  %348 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %347 to i64
  %349 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %345, i64 %339
  %350 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %349 to i64
  %351 = tail call i8* @_Znwm(i64 4096) #15
  %352 = ptrtoint i8* %351 to i64
  %353 = icmp eq i64 %170, %339
  br i1 %353, label %354, label %382

354:                                              ; preds = %342
  %355 = icmp ugt %"struct.v8::internal::TranslatedState::ObjectPosition"** %347, %345
  br i1 %355, label %356, label %363

356:                                              ; preds = %354
  %357 = sub i64 %348, %346
  %358 = ashr exact i64 %357, 3
  %359 = add nsw i64 %358, 1
  %360 = sdiv i64 %359, -2
  %361 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %347, i64 %360
  %362 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %361 to i64
  br label %382

363:                                              ; preds = %354
  %364 = sub i64 %350, %346
  %365 = ashr exact i64 %364, 2
  %366 = icmp eq i64 %364, 0
  %367 = select i1 %366, i64 1, i64 %365
  %368 = icmp ugt i64 %367, 2305843009213693951
  br i1 %368, label %369, label %370

369:                                              ; preds = %363
  tail call void @abort() #16
  unreachable

370:                                              ; preds = %363
  %371 = lshr i64 %367, 2
  %372 = shl i64 %367, 3
  %373 = tail call i8* @_Znwm(i64 %372) #15
  %374 = bitcast i8* %373 to %"struct.v8::internal::TranslatedState::ObjectPosition"**
  %375 = ptrtoint i8* %373 to i64
  %376 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %374, i64 %371
  %377 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %376 to i64
  %378 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %374, i64 %367
  %379 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %378 to i64
  tail call void @_ZdlPv(i8* nonnull %344) #15
  %380 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %163, align 8
  %381 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %166, align 8
  br label %382

382:                                              ; preds = %342, %356, %370
  %383 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %180, %356 ], [ %381, %370 ], [ %180, %342 ]
  %384 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %179, %356 ], [ %380, %370 ], [ %179, %342 ]
  %385 = phi i64 [ %346, %356 ], [ %375, %370 ], [ %346, %342 ]
  %386 = phi i64 [ %362, %356 ], [ %377, %370 ], [ %348, %342 ]
  %387 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %361, %356 ], [ %376, %370 ], [ %347, %342 ]
  %388 = phi i64 [ %350, %356 ], [ %379, %370 ], [ %350, %342 ]
  %389 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %387 to i64*
  store i64 %352, i64* %389, align 8
  %390 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %387, i64 1
  %391 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %390 to i64
  %392 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %384, %383
  br i1 %392, label %395, label %405

393:                                              ; preds = %537
  %394 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %542 to i64
  br label %395

395:                                              ; preds = %393, %382
  %396 = phi i64 [ %385, %382 ], [ %538, %393 ]
  %397 = phi i64 [ %386, %382 ], [ %394, %393 ]
  %398 = phi i64 [ %391, %382 ], [ %539, %393 ]
  %399 = phi i64 [ %388, %382 ], [ %540, %393 ]
  %400 = getelementptr inbounds %"class.std::__1::deque.1163", %"class.std::__1::deque.1163"* %0, i64 0, i32 0, i32 0, i32 0
  %401 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %400, align 8
  store i64 %396, i64* %174, align 8
  store i64 %397, i64* %167, align 8
  store i64 %398, i64* %164, align 8
  store i64 %399, i64* %172, align 8
  %402 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %401, null
  br i1 %402, label %549, label %403

403:                                              ; preds = %395
  %404 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %401 to i8*
  tail call void @_ZdlPv(i8* %404) #15
  br label %549

405:                                              ; preds = %382, %537
  %406 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %411, %537 ], [ %384, %382 ]
  %407 = phi i64 [ %540, %537 ], [ %388, %382 ]
  %408 = phi i64 [ %539, %537 ], [ %391, %382 ]
  %409 = phi i64 [ %546, %537 ], [ %386, %382 ]
  %410 = phi i64 [ %538, %537 ], [ %385, %382 ]
  %411 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %406, i64 -1
  %412 = inttoptr i64 %409 to %"struct.v8::internal::TranslatedState::ObjectPosition"**
  %413 = inttoptr i64 %410 to %"struct.v8::internal::TranslatedState::ObjectPosition"**
  %414 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %412, %413
  br i1 %414, label %415, label %537

415:                                              ; preds = %405
  %416 = inttoptr i64 %408 to %"struct.v8::internal::TranslatedState::ObjectPosition"**
  %417 = inttoptr i64 %407 to %"struct.v8::internal::TranslatedState::ObjectPosition"**
  %418 = icmp ult %"struct.v8::internal::TranslatedState::ObjectPosition"** %416, %417
  br i1 %418, label %419, label %436

419:                                              ; preds = %415
  %420 = sub i64 %407, %408
  %421 = ashr exact i64 %420, 3
  %422 = add nsw i64 %421, 1
  %423 = sdiv i64 %422, 2
  %424 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %416, i64 %423
  %425 = sub i64 %408, %409
  %426 = icmp eq i64 %425, 0
  br i1 %426, label %433, label %427

427:                                              ; preds = %419
  %428 = ashr exact i64 %425, 3
  %429 = sub nsw i64 0, %428
  %430 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %424, i64 %429
  %431 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %430 to i8*
  %432 = inttoptr i64 %409 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %431, i8* align 8 %432, i64 %425, i1 false) #9
  br label %433

433:                                              ; preds = %427, %419
  %434 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %430, %427 ], [ %424, %419 ]
  %435 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %424 to i64
  br label %537

436:                                              ; preds = %415
  %437 = sub i64 %407, %410
  %438 = ashr exact i64 %437, 2
  %439 = icmp eq i64 %437, 0
  %440 = select i1 %439, i64 1, i64 %438
  %441 = icmp ugt i64 %440, 2305843009213693951
  br i1 %441, label %442, label %443

442:                                              ; preds = %436
  tail call void @abort() #16
  unreachable

443:                                              ; preds = %436
  %444 = add nuw nsw i64 %440, 3
  %445 = lshr i64 %444, 2
  %446 = shl i64 %440, 3
  %447 = tail call i8* @_Znwm(i64 %446) #15
  %448 = bitcast i8* %447 to %"struct.v8::internal::TranslatedState::ObjectPosition"**
  %449 = ptrtoint i8* %447 to i64
  %450 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %448, i64 %445
  %451 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %450 to i64
  %452 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %448, i64 %440
  %453 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %452 to i64
  %454 = sub i64 %408, %409
  %455 = ashr exact i64 %454, 3
  %456 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %450, i64 %455
  %457 = icmp eq i64 %454, 0
  br i1 %457, label %532, label %458

458:                                              ; preds = %443
  %459 = add i64 %454, -8
  %460 = lshr i64 %459, 3
  %461 = add nuw nsw i64 %460, 1
  %462 = and i64 %461, 7
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %479, label %464

464:                                              ; preds = %458, %464
  %465 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %472, %464 ], [ %450, %458 ]
  %466 = phi i64 [ %473, %464 ], [ %451, %458 ]
  %467 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %474, %464 ], [ %412, %458 ]
  %468 = phi i64 [ %475, %464 ], [ %462, %458 ]
  %469 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %467 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = inttoptr i64 %466 to i64*
  store i64 %470, i64* %471, align 8
  %472 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %465, i64 1
  %473 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %472 to i64
  %474 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %467, i64 1
  %475 = add i64 %468, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %464, !llvm.loop !37

477:                                              ; preds = %464
  %478 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %472 to i64
  br label %479

479:                                              ; preds = %458, %477
  %480 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %450, %458 ], [ %472, %477 ]
  %481 = phi i64 [ %451, %458 ], [ %478, %477 ]
  %482 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %412, %458 ], [ %474, %477 ]
  %483 = icmp ult i64 %459, 56
  br i1 %483, label %530, label %484

484:                                              ; preds = %479, %484
  %485 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %526, %484 ], [ %480, %479 ]
  %486 = phi i64 [ %527, %484 ], [ %481, %479 ]
  %487 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %528, %484 ], [ %482, %479 ]
  %488 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %487 to i64*
  %489 = load i64, i64* %488, align 8
  %490 = inttoptr i64 %486 to i64*
  store i64 %489, i64* %490, align 8
  %491 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %485, i64 1
  %492 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %487, i64 1
  %493 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %492 to i64*
  %494 = load i64, i64* %493, align 8
  %495 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %491 to i64*
  store i64 %494, i64* %495, align 8
  %496 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %485, i64 2
  %497 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %487, i64 2
  %498 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %497 to i64*
  %499 = load i64, i64* %498, align 8
  %500 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %496 to i64*
  store i64 %499, i64* %500, align 8
  %501 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %485, i64 3
  %502 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %487, i64 3
  %503 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %502 to i64*
  %504 = load i64, i64* %503, align 8
  %505 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %501 to i64*
  store i64 %504, i64* %505, align 8
  %506 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %485, i64 4
  %507 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %487, i64 4
  %508 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %507 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %506 to i64*
  store i64 %509, i64* %510, align 8
  %511 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %485, i64 5
  %512 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %487, i64 5
  %513 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %512 to i64*
  %514 = load i64, i64* %513, align 8
  %515 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %511 to i64*
  store i64 %514, i64* %515, align 8
  %516 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %485, i64 6
  %517 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %487, i64 6
  %518 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %517 to i64*
  %519 = load i64, i64* %518, align 8
  %520 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %516 to i64*
  store i64 %519, i64* %520, align 8
  %521 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %485, i64 7
  %522 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %487, i64 7
  %523 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %522 to i64*
  %524 = load i64, i64* %523, align 8
  %525 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %521 to i64*
  store i64 %524, i64* %525, align 8
  %526 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %485, i64 8
  %527 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %526 to i64
  %528 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %487, i64 8
  %529 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %456, %526
  br i1 %529, label %530, label %484

530:                                              ; preds = %484, %479
  %531 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %456 to i64
  br label %532

532:                                              ; preds = %530, %443
  %533 = phi i64 [ %531, %530 ], [ %451, %443 ]
  %534 = icmp eq i64 %409, 0
  br i1 %534, label %537, label %535

535:                                              ; preds = %532
  %536 = inttoptr i64 %409 to i8*
  tail call void @_ZdlPv(i8* %536) #15
  br label %537

537:                                              ; preds = %405, %433, %532, %535
  %538 = phi i64 [ %410, %433 ], [ %449, %532 ], [ %449, %535 ], [ %410, %405 ]
  %539 = phi i64 [ %435, %433 ], [ %533, %532 ], [ %533, %535 ], [ %408, %405 ]
  %540 = phi i64 [ %407, %433 ], [ %453, %532 ], [ %453, %535 ], [ %407, %405 ]
  %541 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %434, %433 ], [ %450, %532 ], [ %450, %535 ], [ %412, %405 ]
  %542 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %541, i64 -1
  %543 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %411 to i64*
  %544 = load i64, i64* %543, align 8
  %545 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %542 to i64*
  store i64 %544, i64* %545, align 8
  %546 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %542 to i64
  %547 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %166, align 8
  %548 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %411, %547
  br i1 %548, label %393, label %405

549:                                              ; preds = %403, %395, %332, %183, %157
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal15TranslatedState14ObjectPositionENS_9allocatorIS5_EEE9push_backEOS5_(%"struct.std::__1::__split_buffer.1165"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1165", %"struct.std::__1::__split_buffer.1165"* %0, i64 0, i32 2
  %4 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1165", %"struct.std::__1::__split_buffer.1165"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %5, align 8
  %7 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %4, %6
  %8 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %6 to i64
  %9 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.1165", %"struct.std::__1::__split_buffer.1165"* %0, i64 0, i32 1
  %12 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.1165", %"struct.std::__1::__split_buffer.1165"* %0, i64 0, i32 0
  %14 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %13, align 8
  %15 = icmp ugt %"struct.v8::internal::TranslatedState::ObjectPosition"** %12, %14
  %16 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %12, i64 %22
  %24 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %23 to i8*
  %30 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #9
  %31 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %23, i64 %26
  store %"struct.v8::internal::TranslatedState::ObjectPosition"** %34, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %3, align 8
  %35 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %33, i64 %22
  store %"struct.v8::internal::TranslatedState::ObjectPosition"** %35, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %11, align 8
  %36 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1165"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #15
  %50 = bitcast i8* %49 to %"struct.v8::internal::TranslatedState::ObjectPosition"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %50, i64 %47
  %53 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %52 to i64
  %54 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %50, i64 %43
  %55 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %54 to i64
  %56 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %12 to i64
  %57 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %69, i64 1
  %77 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %76 to i64
  %78 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !38

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %89, i64 1
  %96 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %91, i64 1
  %97 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %89, i64 2
  %101 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %91, i64 2
  %102 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %89, i64 3
  %106 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %91, i64 3
  %107 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %89, i64 4
  %111 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %91, i64 4
  %112 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %89, i64 5
  %116 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %91, i64 5
  %117 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %89, i64 6
  %121 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %91, i64 6
  %122 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %89, i64 7
  %126 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %91, i64 7
  %127 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %89, i64 8
  %131 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %130 to i64
  %132 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %91, i64 8
  %133 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %60 to i64
  %136 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #15
  %146 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %3, align 8
  %153 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %152, i64 1
  store %"struct.v8::internal::TranslatedState::ObjectPosition"** %153, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal15TranslatedState14ObjectPositionENS_9allocatorIS5_EEE10push_frontEOS5_(%"struct.std::__1::__split_buffer.1165"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1165", %"struct.std::__1::__split_buffer.1165"* %0, i64 0, i32 1
  %4 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1165", %"struct.std::__1::__split_buffer.1165"* %0, i64 0, i32 0
  %6 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %5, align 8
  %7 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %4, %6
  %8 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1165", %"struct.std::__1::__split_buffer.1165"* %0, i64 0, i32 2
  %11 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1165", %"struct.std::__1::__split_buffer.1165"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %12, align 8
  %14 = icmp ult %"struct.v8::internal::TranslatedState::ObjectPosition"** %11, %13
  %15 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %12 to i64*
  %16 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %11, i64 %22
  %24 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %23, i64 %29
  %31 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %30 to i8*
  %32 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #9
  %33 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.v8::internal::TranslatedState::ObjectPosition"** %36, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %3, align 8
  %37 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %35, i64 %22
  store %"struct.v8::internal::TranslatedState::ObjectPosition"** %37, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1165"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #15
  %51 = bitcast i8* %50 to %"struct.v8::internal::TranslatedState::ObjectPosition"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %51, i64 %48
  %54 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %53 to i64
  %55 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %51, i64 %43
  %56 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %55 to i64
  %57 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %4 to i64
  %58 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %70, i64 1
  %78 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %77 to i64
  %79 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !39

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %90, i64 1
  %97 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %92, i64 1
  %98 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %90, i64 2
  %102 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %92, i64 2
  %103 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %90, i64 3
  %107 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %92, i64 3
  %108 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %90, i64 4
  %112 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %92, i64 4
  %113 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %90, i64 5
  %117 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %92, i64 5
  %118 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %90, i64 6
  %122 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %92, i64 6
  %123 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %90, i64 7
  %127 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %92, i64 7
  %128 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %90, i64 8
  %132 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %131 to i64
  %133 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %92, i64 8
  %134 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.v8::internal::TranslatedState::ObjectPosition"** %61 to i64
  %137 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.v8::internal::TranslatedState::ObjectPosition"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #15
  %146 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.v8::internal::TranslatedState::ObjectPosition"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %148, i64 -1
  %150 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.v8::internal::TranslatedState::ObjectPosition"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.v8::internal::TranslatedState::ObjectPosition"**, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %3, align 8
  %154 = getelementptr inbounds %"struct.v8::internal::TranslatedState::ObjectPosition"*, %"struct.v8::internal::TranslatedState::ObjectPosition"** %153, i64 -1
  store %"struct.v8::internal::TranslatedState::ObjectPosition"** %154, %"struct.v8::internal::TranslatedState::ObjectPosition"*** %3, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2v88internal15TranslatedFrameENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector.7"*, %"class.v8::internal::TranslatedFrame"* dereferenceable(96)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.v8::internal::TranslatedFrame"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.7"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 96
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 192153584101141162
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.7"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.v8::internal::TranslatedFrame"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 96
  %20 = icmp ult i64 %19, 96076792050570581
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 192153584101141162, %14 ]
  %28 = mul i64 %27, 96
  %29 = tail call i8* @_Znwm(i64 %28) #15
  %30 = bitcast i8* %29 to %"class.v8::internal::TranslatedFrame"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.v8::internal::TranslatedFrame"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %33, i64 %9
  %35 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %33, i64 %32
  %36 = ptrtoint %"class.v8::internal::TranslatedFrame"* %35 to i64
  %37 = bitcast %"class.v8::internal::TranslatedFrame"* %34 to i8*
  %38 = bitcast %"class.v8::internal::TranslatedFrame"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 36, i1 false) #9
  %39 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %33, i64 %9, i32 8
  %40 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8
  %41 = bitcast %"class.std::__1::deque"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.std::__1::deque"* %39 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %33, i64 %9, i32 8, i32 0, i32 0, i32 1
  %45 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 0, i32 1
  %46 = bitcast %"class.v8::internal::TranslatedValue"*** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.v8::internal::TranslatedValue"*** %44 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %33, i64 %9, i32 8, i32 0, i32 0, i32 2
  %50 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 0, i32 2
  %51 = bitcast %"class.v8::internal::TranslatedValue"*** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.v8::internal::TranslatedValue"*** %49 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %33, i64 %9, i32 8, i32 0, i32 0, i32 3
  %55 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 0, i32 3
  %56 = bitcast %"class.std::__1::__compressed_pair.10"* %55 to i64*
  %57 = bitcast %"class.std::__1::__compressed_pair.10"* %54 to i64*
  %58 = load i64, i64* %56, align 8
  store i64 %58, i64* %57, align 8
  %59 = bitcast %"class.std::__1::deque"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 32, i1 false) #9
  %60 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %33, i64 %9, i32 8, i32 0, i32 1
  %61 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  store i64 %62, i64* %60, align 8
  %63 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %64 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %33, i64 %9, i32 8, i32 0, i32 2, i32 0, i32 0
  %65 = load i64, i64* %63, align 8
  store i64 %65, i64* %64, align 8
  %66 = bitcast i64* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #9
  %67 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %33, i64 %9, i32 9, i32 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %69 = bitcast i8* %68 to i16*
  %70 = bitcast i8* %67 to i16*
  %71 = load i16, i16* %69, align 8
  store i16 %71, i16* %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %34, i64 1
  %73 = ptrtoint %"class.v8::internal::TranslatedFrame"* %72 to i64
  %74 = getelementptr inbounds %"class.std::__1::vector.7", %"class.std::__1::vector.7"* %0, i64 0, i32 0, i32 0
  %75 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %74, align 8
  %76 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %3, align 8
  %77 = icmp eq %"class.v8::internal::TranslatedFrame"* %76, %75
  br i1 %77, label %78, label %80

78:                                               ; preds = %31
  %79 = ptrtoint %"class.v8::internal::TranslatedFrame"* %75 to i64
  br label %124

80:                                               ; preds = %31, %80
  %81 = phi %"class.v8::internal::TranslatedFrame"* [ %83, %80 ], [ %34, %31 ]
  %82 = phi %"class.v8::internal::TranslatedFrame"* [ %84, %80 ], [ %76, %31 ]
  %83 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %81, i64 -1
  %84 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %82, i64 -1
  %85 = bitcast %"class.v8::internal::TranslatedFrame"* %83 to i8*
  %86 = bitcast %"class.v8::internal::TranslatedFrame"* %84 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 36, i1 false) #9
  %87 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %81, i64 -1, i32 8
  %88 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %82, i64 -1, i32 8
  %89 = bitcast %"class.std::__1::deque"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.std::__1::deque"* %87 to i64*
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %81, i64 -1, i32 8, i32 0, i32 0, i32 1
  %93 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %82, i64 -1, i32 8, i32 0, i32 0, i32 1
  %94 = bitcast %"class.v8::internal::TranslatedValue"*** %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.v8::internal::TranslatedValue"*** %92 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %81, i64 -1, i32 8, i32 0, i32 0, i32 2
  %98 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %82, i64 -1, i32 8, i32 0, i32 0, i32 2
  %99 = bitcast %"class.v8::internal::TranslatedValue"*** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.v8::internal::TranslatedValue"*** %97 to i64*
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %81, i64 -1, i32 8, i32 0, i32 0, i32 3
  %103 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %82, i64 -1, i32 8, i32 0, i32 0, i32 3
  %104 = bitcast %"class.std::__1::__compressed_pair.10"* %103 to i64*
  %105 = bitcast %"class.std::__1::__compressed_pair.10"* %102 to i64*
  %106 = load i64, i64* %104, align 8
  store i64 %106, i64* %105, align 8
  %107 = bitcast %"class.std::__1::deque"* %88 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %107, i8 0, i64 32, i1 false) #9
  %108 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %81, i64 -1, i32 8, i32 0, i32 1
  %109 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %82, i64 -1, i32 8, i32 0, i32 1
  %110 = load i64, i64* %109, align 8
  store i64 %110, i64* %108, align 8
  %111 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %82, i64 -1, i32 8, i32 0, i32 2, i32 0, i32 0
  %112 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %81, i64 -1, i32 8, i32 0, i32 2, i32 0, i32 0
  %113 = load i64, i64* %111, align 8
  store i64 %113, i64* %112, align 8
  %114 = bitcast i64* %109 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 16, i1 false) #9
  %115 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %81, i64 -1, i32 9, i32 0, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %82, i64 -1, i32 9, i32 0, i32 0, i32 0, i32 0
  %117 = bitcast i8* %116 to i16*
  %118 = bitcast i8* %115 to i16*
  %119 = load i16, i16* %117, align 8
  store i16 %119, i16* %118, align 8
  %120 = icmp eq %"class.v8::internal::TranslatedFrame"* %84, %75
  br i1 %120, label %121, label %80

121:                                              ; preds = %80
  %122 = load i64, i64* %6, align 8
  %123 = load %"class.v8::internal::TranslatedFrame"*, %"class.v8::internal::TranslatedFrame"** %3, align 8
  br label %124

124:                                              ; preds = %78, %121
  %125 = phi %"class.v8::internal::TranslatedFrame"* [ %75, %78 ], [ %123, %121 ]
  %126 = phi %"class.v8::internal::TranslatedFrame"* [ %34, %78 ], [ %83, %121 ]
  %127 = phi i64 [ %79, %78 ], [ %122, %121 ]
  %128 = ptrtoint %"class.v8::internal::TranslatedFrame"* %126 to i64
  store i64 %128, i64* %6, align 8
  store i64 %73, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %129 = inttoptr i64 %127 to %"class.v8::internal::TranslatedFrame"*
  %130 = icmp eq %"class.v8::internal::TranslatedFrame"* %125, %129
  br i1 %130, label %135, label %131

131:                                              ; preds = %124, %131
  %132 = phi %"class.v8::internal::TranslatedFrame"* [ %133, %131 ], [ %125, %124 ]
  %133 = getelementptr inbounds %"class.v8::internal::TranslatedFrame", %"class.v8::internal::TranslatedFrame"* %132, i64 -1
  tail call void @_ZN2v88internal15TranslatedFrameD2Ev(%"class.v8::internal::TranslatedFrame"* %133) #9
  %134 = icmp eq %"class.v8::internal::TranslatedFrame"* %133, %129
  br i1 %134, label %135, label %131

135:                                              ; preds = %131, %124
  %136 = icmp eq i64 %127, 0
  br i1 %136, label %139, label %137

137:                                              ; preds = %135
  %138 = inttoptr i64 %127 to i8*
  tail call void @_ZdlPv(i8* %138) #15
  br label %139

139:                                              ; preds = %135, %137
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIiNS_9allocatorIiEEE19__add_back_capacityEv(%"class.std::__1::deque.1192"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %4 = getelementptr inbounds %"class.std::__1::deque.1192", %"class.std::__1::deque.1192"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, 1023
  br i1 %6, label %7, label %161

7:                                                ; preds = %1
  %8 = add i64 %5, -1024
  store i64 %8, i64* %4, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque.1192", %"class.std::__1::deque.1192"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load i32**, i32*** %9, align 8
  %11 = bitcast i32** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i32*, i32** %10, i64 1
  store i32** %13, i32*** %9, align 8
  %14 = getelementptr inbounds %"class.std::__1::deque.1192", %"class.std::__1::deque.1192"* %0, i64 0, i32 0, i32 0, i32 2
  %15 = load i32**, i32*** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::deque.1192", %"class.std::__1::deque.1192"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load i32**, i32*** %16, align 8
  %18 = icmp eq i32** %15, %17
  %19 = ptrtoint i32** %17 to i64
  %20 = bitcast i32** %15 to i64*
  br i1 %18, label %21, label %157

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"class.std::__1::deque.1192", %"class.std::__1::deque.1192"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load i32**, i32*** %22, align 8
  %24 = icmp ugt i32** %13, %23
  %25 = ptrtoint i32** %23 to i64
  br i1 %24, label %26, label %46

26:                                               ; preds = %21
  %27 = ptrtoint i32** %13 to i64
  %28 = sub i64 %27, %25
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = sdiv i64 %30, -2
  %32 = getelementptr inbounds i32*, i32** %13, i64 %31
  %33 = ptrtoint i32** %15 to i64
  %34 = sub i64 %33, %27
  %35 = ashr exact i64 %34, 3
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %26
  %38 = bitcast i32** %32 to i8*
  %39 = bitcast i32** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 %34, i1 false) #9
  %40 = load i32**, i32*** %9, align 8
  br label %41

41:                                               ; preds = %37, %26
  %42 = phi i32** [ %13, %26 ], [ %40, %37 ]
  %43 = getelementptr inbounds i32*, i32** %32, i64 %35
  store i32** %43, i32*** %14, align 8
  %44 = getelementptr inbounds i32*, i32** %42, i64 %31
  store i32** %44, i32*** %9, align 8
  %45 = bitcast i32** %43 to i64*
  br label %157

46:                                               ; preds = %21
  %47 = bitcast i32*** %16 to i64*
  %48 = bitcast %"class.std::__1::deque.1192"* %0 to i64*
  %49 = sub i64 %19, %25
  %50 = ashr exact i64 %49, 2
  %51 = icmp eq i64 %49, 0
  %52 = select i1 %51, i64 1, i64 %50
  %53 = icmp ugt i64 %52, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %46
  tail call void @abort() #16
  unreachable

55:                                               ; preds = %46
  %56 = lshr i64 %52, 2
  %57 = shl i64 %52, 3
  %58 = tail call i8* @_Znwm(i64 %57) #15
  %59 = bitcast i8* %58 to i32**
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds i32*, i32** %59, i64 %56
  %62 = ptrtoint i32** %61 to i64
  %63 = getelementptr inbounds i32*, i32** %59, i64 %52
  %64 = ptrtoint i32** %63 to i64
  %65 = ptrtoint i32** %13 to i64
  %66 = ptrtoint i32** %15 to i64
  %67 = sub i64 %66, %65
  %68 = ashr exact i64 %67, 3
  %69 = getelementptr inbounds i32*, i32** %61, i64 %68
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %146, label %71

71:                                               ; preds = %55
  %72 = add i64 %67, -8
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %71, %77
  %78 = phi i32** [ %85, %77 ], [ %61, %71 ]
  %79 = phi i64 [ %86, %77 ], [ %62, %71 ]
  %80 = phi i32** [ %87, %77 ], [ %13, %71 ]
  %81 = phi i64 [ %88, %77 ], [ %75, %71 ]
  %82 = bitcast i32** %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = inttoptr i64 %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds i32*, i32** %78, i64 1
  %86 = ptrtoint i32** %85 to i64
  %87 = getelementptr inbounds i32*, i32** %80, i64 1
  %88 = add i64 %81, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %77, !llvm.loop !40

90:                                               ; preds = %77
  %91 = ptrtoint i32** %85 to i64
  br label %92

92:                                               ; preds = %71, %90
  %93 = phi i32** [ %61, %71 ], [ %85, %90 ]
  %94 = phi i64 [ %62, %71 ], [ %91, %90 ]
  %95 = phi i32** [ %13, %71 ], [ %87, %90 ]
  %96 = icmp ult i64 %72, 56
  br i1 %96, label %143, label %97

97:                                               ; preds = %92, %97
  %98 = phi i32** [ %139, %97 ], [ %93, %92 ]
  %99 = phi i64 [ %140, %97 ], [ %94, %92 ]
  %100 = phi i32** [ %141, %97 ], [ %95, %92 ]
  %101 = bitcast i32** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = inttoptr i64 %99 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds i32*, i32** %98, i64 1
  %105 = getelementptr inbounds i32*, i32** %100, i64 1
  %106 = bitcast i32** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast i32** %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds i32*, i32** %98, i64 2
  %110 = getelementptr inbounds i32*, i32** %100, i64 2
  %111 = bitcast i32** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i32** %109 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds i32*, i32** %98, i64 3
  %115 = getelementptr inbounds i32*, i32** %100, i64 3
  %116 = bitcast i32** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast i32** %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds i32*, i32** %98, i64 4
  %120 = getelementptr inbounds i32*, i32** %100, i64 4
  %121 = bitcast i32** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast i32** %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds i32*, i32** %98, i64 5
  %125 = getelementptr inbounds i32*, i32** %100, i64 5
  %126 = bitcast i32** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast i32** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds i32*, i32** %98, i64 6
  %130 = getelementptr inbounds i32*, i32** %100, i64 6
  %131 = bitcast i32** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast i32** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds i32*, i32** %98, i64 7
  %135 = getelementptr inbounds i32*, i32** %100, i64 7
  %136 = bitcast i32** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i32** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds i32*, i32** %98, i64 8
  %140 = ptrtoint i32** %139 to i64
  %141 = getelementptr inbounds i32*, i32** %100, i64 8
  %142 = icmp eq i32** %69, %139
  br i1 %142, label %143, label %97

143:                                              ; preds = %97, %92
  %144 = ptrtoint i32** %69 to i64
  %145 = load i32**, i32*** %22, align 8
  br label %146

146:                                              ; preds = %143, %55
  %147 = phi i32** [ %145, %143 ], [ %23, %55 ]
  %148 = phi i64 [ %144, %143 ], [ %62, %55 ]
  store i64 %60, i64* %48, align 8
  %149 = bitcast i32*** %9 to i64*
  store i64 %62, i64* %149, align 8
  %150 = bitcast i32*** %14 to i64*
  store i64 %148, i64* %150, align 8
  store i64 %64, i64* %47, align 8
  %151 = icmp eq i32** %147, null
  %152 = inttoptr i64 %148 to i64*
  br i1 %151, label %157, label %153

153:                                              ; preds = %146
  %154 = bitcast i32** %147 to i8*
  tail call void @_ZdlPv(i8* %154) #15
  %155 = bitcast i32*** %14 to i64**
  %156 = load i64*, i64** %155, align 8
  br label %157

157:                                              ; preds = %7, %41, %146, %153
  %158 = phi i64* [ %156, %153 ], [ %152, %146 ], [ %45, %41 ], [ %20, %7 ]
  store i64 %12, i64* %158, align 8
  %159 = load i32**, i32*** %14, align 8
  %160 = getelementptr inbounds i32*, i32** %159, i64 1
  store i32** %160, i32*** %14, align 8
  br label %549

161:                                              ; preds = %1
  %162 = getelementptr inbounds %"class.std::__1::deque.1192", %"class.std::__1::deque.1192"* %0, i64 0, i32 0, i32 0
  %163 = getelementptr inbounds %"class.std::__1::deque.1192", %"class.std::__1::deque.1192"* %0, i64 0, i32 0, i32 0, i32 2
  %164 = bitcast i32*** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::deque.1192", %"class.std::__1::deque.1192"* %0, i64 0, i32 0, i32 0, i32 1
  %167 = bitcast i32*** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %165, %168
  %170 = ashr exact i64 %169, 3
  %171 = getelementptr inbounds %"class.std::__1::deque.1192", %"class.std::__1::deque.1192"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %172 = bitcast i32*** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.std::__1::deque.1192"* %0 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 %173, %175
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %170, %177
  %179 = inttoptr i64 %165 to i32**
  %180 = inttoptr i64 %168 to i32**
  br i1 %178, label %181, label %336

181:                                              ; preds = %161
  %182 = icmp eq i64 %173, %165
  br i1 %182, label %187, label %183

183:                                              ; preds = %181
  %184 = bitcast i32** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #9
  %185 = tail call i8* @_Znwm(i64 4096) #15
  %186 = bitcast i32** %2 to i8**
  store i8* %185, i8** %186, align 8
  call void @_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.1194"* %162, i32** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #9
  br label %549

187:                                              ; preds = %181
  %188 = bitcast i32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #9
  %189 = tail call i8* @_Znwm(i64 4096) #15
  %190 = bitcast i32** %3 to i8**
  store i8* %189, i8** %190, align 8
  call void @_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.1194"* %162, i32** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #9
  %191 = load i32**, i32*** %166, align 8
  %192 = bitcast i32** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds i32*, i32** %191, i64 1
  store i32** %194, i32*** %166, align 8
  %195 = load i32**, i32*** %163, align 8
  %196 = load i32**, i32*** %171, align 8
  %197 = icmp eq i32** %195, %196
  %198 = ptrtoint i32** %196 to i64
  %199 = bitcast i32** %195 to i64*
  br i1 %197, label %200, label %332

200:                                              ; preds = %187
  %201 = getelementptr inbounds %"class.std::__1::deque.1192", %"class.std::__1::deque.1192"* %0, i64 0, i32 0, i32 0, i32 0
  %202 = load i32**, i32*** %201, align 8
  %203 = icmp ugt i32** %194, %202
  %204 = ptrtoint i32** %202 to i64
  br i1 %203, label %205, label %225

205:                                              ; preds = %200
  %206 = ptrtoint i32** %194 to i64
  %207 = sub i64 %206, %204
  %208 = ashr exact i64 %207, 3
  %209 = add nsw i64 %208, 1
  %210 = sdiv i64 %209, -2
  %211 = getelementptr inbounds i32*, i32** %194, i64 %210
  %212 = ptrtoint i32** %195 to i64
  %213 = sub i64 %212, %206
  %214 = ashr exact i64 %213, 3
  %215 = icmp eq i64 %213, 0
  br i1 %215, label %220, label %216

216:                                              ; preds = %205
  %217 = bitcast i32** %211 to i8*
  %218 = bitcast i32** %194 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %218, i64 %213, i1 false) #9
  %219 = load i32**, i32*** %166, align 8
  br label %220

220:                                              ; preds = %216, %205
  %221 = phi i32** [ %194, %205 ], [ %219, %216 ]
  %222 = getelementptr inbounds i32*, i32** %211, i64 %214
  store i32** %222, i32*** %163, align 8
  %223 = getelementptr inbounds i32*, i32** %221, i64 %210
  store i32** %223, i32*** %166, align 8
  %224 = bitcast i32** %222 to i64*
  br label %332

225:                                              ; preds = %200
  %226 = sub i64 %198, %204
  %227 = ashr exact i64 %226, 2
  %228 = icmp eq i64 %226, 0
  %229 = select i1 %228, i64 1, i64 %227
  %230 = icmp ugt i64 %229, 2305843009213693951
  br i1 %230, label %231, label %232

231:                                              ; preds = %225
  call void @abort() #16
  unreachable

232:                                              ; preds = %225
  %233 = lshr i64 %229, 2
  %234 = shl i64 %229, 3
  %235 = call i8* @_Znwm(i64 %234) #15
  %236 = bitcast i8* %235 to i32**
  %237 = ptrtoint i8* %235 to i64
  %238 = getelementptr inbounds i32*, i32** %236, i64 %233
  %239 = ptrtoint i32** %238 to i64
  %240 = getelementptr inbounds i32*, i32** %236, i64 %229
  %241 = ptrtoint i32** %240 to i64
  %242 = ptrtoint i32** %194 to i64
  %243 = ptrtoint i32** %195 to i64
  %244 = sub i64 %243, %242
  %245 = ashr exact i64 %244, 3
  %246 = getelementptr inbounds i32*, i32** %238, i64 %245
  %247 = icmp eq i64 %244, 0
  br i1 %247, label %323, label %248

248:                                              ; preds = %232
  %249 = add i64 %244, -8
  %250 = lshr i64 %249, 3
  %251 = add nuw nsw i64 %250, 1
  %252 = and i64 %251, 7
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %269, label %254

254:                                              ; preds = %248, %254
  %255 = phi i32** [ %262, %254 ], [ %238, %248 ]
  %256 = phi i64 [ %263, %254 ], [ %239, %248 ]
  %257 = phi i32** [ %264, %254 ], [ %194, %248 ]
  %258 = phi i64 [ %265, %254 ], [ %252, %248 ]
  %259 = bitcast i32** %257 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = inttoptr i64 %256 to i64*
  store i64 %260, i64* %261, align 8
  %262 = getelementptr inbounds i32*, i32** %255, i64 1
  %263 = ptrtoint i32** %262 to i64
  %264 = getelementptr inbounds i32*, i32** %257, i64 1
  %265 = add i64 %258, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %254, !llvm.loop !41

267:                                              ; preds = %254
  %268 = ptrtoint i32** %262 to i64
  br label %269

269:                                              ; preds = %248, %267
  %270 = phi i32** [ %238, %248 ], [ %262, %267 ]
  %271 = phi i64 [ %239, %248 ], [ %268, %267 ]
  %272 = phi i32** [ %194, %248 ], [ %264, %267 ]
  %273 = icmp ult i64 %249, 56
  br i1 %273, label %320, label %274

274:                                              ; preds = %269, %274
  %275 = phi i32** [ %316, %274 ], [ %270, %269 ]
  %276 = phi i64 [ %317, %274 ], [ %271, %269 ]
  %277 = phi i32** [ %318, %274 ], [ %272, %269 ]
  %278 = bitcast i32** %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = inttoptr i64 %276 to i64*
  store i64 %279, i64* %280, align 8
  %281 = getelementptr inbounds i32*, i32** %275, i64 1
  %282 = getelementptr inbounds i32*, i32** %277, i64 1
  %283 = bitcast i32** %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = bitcast i32** %281 to i64*
  store i64 %284, i64* %285, align 8
  %286 = getelementptr inbounds i32*, i32** %275, i64 2
  %287 = getelementptr inbounds i32*, i32** %277, i64 2
  %288 = bitcast i32** %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = bitcast i32** %286 to i64*
  store i64 %289, i64* %290, align 8
  %291 = getelementptr inbounds i32*, i32** %275, i64 3
  %292 = getelementptr inbounds i32*, i32** %277, i64 3
  %293 = bitcast i32** %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = bitcast i32** %291 to i64*
  store i64 %294, i64* %295, align 8
  %296 = getelementptr inbounds i32*, i32** %275, i64 4
  %297 = getelementptr inbounds i32*, i32** %277, i64 4
  %298 = bitcast i32** %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = bitcast i32** %296 to i64*
  store i64 %299, i64* %300, align 8
  %301 = getelementptr inbounds i32*, i32** %275, i64 5
  %302 = getelementptr inbounds i32*, i32** %277, i64 5
  %303 = bitcast i32** %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = bitcast i32** %301 to i64*
  store i64 %304, i64* %305, align 8
  %306 = getelementptr inbounds i32*, i32** %275, i64 6
  %307 = getelementptr inbounds i32*, i32** %277, i64 6
  %308 = bitcast i32** %307 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = bitcast i32** %306 to i64*
  store i64 %309, i64* %310, align 8
  %311 = getelementptr inbounds i32*, i32** %275, i64 7
  %312 = getelementptr inbounds i32*, i32** %277, i64 7
  %313 = bitcast i32** %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast i32** %311 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds i32*, i32** %275, i64 8
  %317 = ptrtoint i32** %316 to i64
  %318 = getelementptr inbounds i32*, i32** %277, i64 8
  %319 = icmp eq i32** %246, %316
  br i1 %319, label %320, label %274

320:                                              ; preds = %274, %269
  %321 = ptrtoint i32** %246 to i64
  %322 = load i32**, i32*** %201, align 8
  br label %323

323:                                              ; preds = %320, %232
  %324 = phi i32** [ %322, %320 ], [ %202, %232 ]
  %325 = phi i64 [ %321, %320 ], [ %239, %232 ]
  store i64 %237, i64* %174, align 8
  store i64 %239, i64* %167, align 8
  store i64 %325, i64* %164, align 8
  store i64 %241, i64* %172, align 8
  %326 = icmp eq i32** %324, null
  %327 = inttoptr i64 %325 to i64*
  br i1 %326, label %332, label %328

328:                                              ; preds = %323
  %329 = bitcast i32** %324 to i8*
  call void @_ZdlPv(i8* %329) #15
  %330 = bitcast i32*** %163 to i64**
  %331 = load i64*, i64** %330, align 8
  br label %332

332:                                              ; preds = %187, %220, %323, %328
  %333 = phi i64* [ %331, %328 ], [ %327, %323 ], [ %224, %220 ], [ %199, %187 ]
  store i64 %193, i64* %333, align 8
  %334 = load i32**, i32*** %163, align 8
  %335 = getelementptr inbounds i32*, i32** %334, i64 1
  store i32** %335, i32*** %163, align 8
  br label %549

336:                                              ; preds = %161
  %337 = ashr exact i64 %176, 2
  %338 = icmp eq i64 %176, 0
  %339 = select i1 %338, i64 1, i64 %337
  %340 = icmp ugt i64 %339, 2305843009213693951
  br i1 %340, label %341, label %342

341:                                              ; preds = %336
  tail call void @abort() #16
  unreachable

342:                                              ; preds = %336
  %343 = shl i64 %339, 3
  %344 = tail call i8* @_Znwm(i64 %343) #15
  %345 = bitcast i8* %344 to i32**
  %346 = ptrtoint i8* %344 to i64
  %347 = getelementptr inbounds i32*, i32** %345, i64 %170
  %348 = ptrtoint i32** %347 to i64
  %349 = getelementptr inbounds i32*, i32** %345, i64 %339
  %350 = ptrtoint i32** %349 to i64
  %351 = tail call i8* @_Znwm(i64 4096) #15
  %352 = ptrtoint i8* %351 to i64
  %353 = icmp eq i64 %170, %339
  br i1 %353, label %354, label %382

354:                                              ; preds = %342
  %355 = icmp ugt i32** %347, %345
  br i1 %355, label %356, label %363

356:                                              ; preds = %354
  %357 = sub i64 %348, %346
  %358 = ashr exact i64 %357, 3
  %359 = add nsw i64 %358, 1
  %360 = sdiv i64 %359, -2
  %361 = getelementptr inbounds i32*, i32** %347, i64 %360
  %362 = ptrtoint i32** %361 to i64
  br label %382

363:                                              ; preds = %354
  %364 = sub i64 %350, %346
  %365 = ashr exact i64 %364, 2
  %366 = icmp eq i64 %364, 0
  %367 = select i1 %366, i64 1, i64 %365
  %368 = icmp ugt i64 %367, 2305843009213693951
  br i1 %368, label %369, label %370

369:                                              ; preds = %363
  tail call void @abort() #16
  unreachable

370:                                              ; preds = %363
  %371 = lshr i64 %367, 2
  %372 = shl i64 %367, 3
  %373 = tail call i8* @_Znwm(i64 %372) #15
  %374 = bitcast i8* %373 to i32**
  %375 = ptrtoint i8* %373 to i64
  %376 = getelementptr inbounds i32*, i32** %374, i64 %371
  %377 = ptrtoint i32** %376 to i64
  %378 = getelementptr inbounds i32*, i32** %374, i64 %367
  %379 = ptrtoint i32** %378 to i64
  tail call void @_ZdlPv(i8* nonnull %344) #15
  %380 = load i32**, i32*** %163, align 8
  %381 = load i32**, i32*** %166, align 8
  br label %382

382:                                              ; preds = %342, %356, %370
  %383 = phi i32** [ %180, %356 ], [ %381, %370 ], [ %180, %342 ]
  %384 = phi i32** [ %179, %356 ], [ %380, %370 ], [ %179, %342 ]
  %385 = phi i64 [ %346, %356 ], [ %375, %370 ], [ %346, %342 ]
  %386 = phi i64 [ %362, %356 ], [ %377, %370 ], [ %348, %342 ]
  %387 = phi i32** [ %361, %356 ], [ %376, %370 ], [ %347, %342 ]
  %388 = phi i64 [ %350, %356 ], [ %379, %370 ], [ %350, %342 ]
  %389 = bitcast i32** %387 to i64*
  store i64 %352, i64* %389, align 8
  %390 = getelementptr inbounds i32*, i32** %387, i64 1
  %391 = ptrtoint i32** %390 to i64
  %392 = icmp eq i32** %384, %383
  br i1 %392, label %395, label %405

393:                                              ; preds = %537
  %394 = ptrtoint i32** %542 to i64
  br label %395

395:                                              ; preds = %393, %382
  %396 = phi i64 [ %385, %382 ], [ %538, %393 ]
  %397 = phi i64 [ %386, %382 ], [ %394, %393 ]
  %398 = phi i64 [ %391, %382 ], [ %539, %393 ]
  %399 = phi i64 [ %388, %382 ], [ %540, %393 ]
  %400 = getelementptr inbounds %"class.std::__1::deque.1192", %"class.std::__1::deque.1192"* %0, i64 0, i32 0, i32 0, i32 0
  %401 = load i32**, i32*** %400, align 8
  store i64 %396, i64* %174, align 8
  store i64 %397, i64* %167, align 8
  store i64 %398, i64* %164, align 8
  store i64 %399, i64* %172, align 8
  %402 = icmp eq i32** %401, null
  br i1 %402, label %549, label %403

403:                                              ; preds = %395
  %404 = bitcast i32** %401 to i8*
  tail call void @_ZdlPv(i8* %404) #15
  br label %549

405:                                              ; preds = %382, %537
  %406 = phi i32** [ %411, %537 ], [ %384, %382 ]
  %407 = phi i64 [ %540, %537 ], [ %388, %382 ]
  %408 = phi i64 [ %539, %537 ], [ %391, %382 ]
  %409 = phi i64 [ %546, %537 ], [ %386, %382 ]
  %410 = phi i64 [ %538, %537 ], [ %385, %382 ]
  %411 = getelementptr inbounds i32*, i32** %406, i64 -1
  %412 = inttoptr i64 %409 to i32**
  %413 = inttoptr i64 %410 to i32**
  %414 = icmp eq i32** %412, %413
  br i1 %414, label %415, label %537

415:                                              ; preds = %405
  %416 = inttoptr i64 %408 to i32**
  %417 = inttoptr i64 %407 to i32**
  %418 = icmp ult i32** %416, %417
  br i1 %418, label %419, label %436

419:                                              ; preds = %415
  %420 = sub i64 %407, %408
  %421 = ashr exact i64 %420, 3
  %422 = add nsw i64 %421, 1
  %423 = sdiv i64 %422, 2
  %424 = getelementptr inbounds i32*, i32** %416, i64 %423
  %425 = sub i64 %408, %409
  %426 = icmp eq i64 %425, 0
  br i1 %426, label %433, label %427

427:                                              ; preds = %419
  %428 = ashr exact i64 %425, 3
  %429 = sub nsw i64 0, %428
  %430 = getelementptr inbounds i32*, i32** %424, i64 %429
  %431 = bitcast i32** %430 to i8*
  %432 = inttoptr i64 %409 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %431, i8* align 8 %432, i64 %425, i1 false) #9
  br label %433

433:                                              ; preds = %427, %419
  %434 = phi i32** [ %430, %427 ], [ %424, %419 ]
  %435 = ptrtoint i32** %424 to i64
  br label %537

436:                                              ; preds = %415
  %437 = sub i64 %407, %410
  %438 = ashr exact i64 %437, 2
  %439 = icmp eq i64 %437, 0
  %440 = select i1 %439, i64 1, i64 %438
  %441 = icmp ugt i64 %440, 2305843009213693951
  br i1 %441, label %442, label %443

442:                                              ; preds = %436
  tail call void @abort() #16
  unreachable

443:                                              ; preds = %436
  %444 = add nuw nsw i64 %440, 3
  %445 = lshr i64 %444, 2
  %446 = shl i64 %440, 3
  %447 = tail call i8* @_Znwm(i64 %446) #15
  %448 = bitcast i8* %447 to i32**
  %449 = ptrtoint i8* %447 to i64
  %450 = getelementptr inbounds i32*, i32** %448, i64 %445
  %451 = ptrtoint i32** %450 to i64
  %452 = getelementptr inbounds i32*, i32** %448, i64 %440
  %453 = ptrtoint i32** %452 to i64
  %454 = sub i64 %408, %409
  %455 = ashr exact i64 %454, 3
  %456 = getelementptr inbounds i32*, i32** %450, i64 %455
  %457 = icmp eq i64 %454, 0
  br i1 %457, label %532, label %458

458:                                              ; preds = %443
  %459 = add i64 %454, -8
  %460 = lshr i64 %459, 3
  %461 = add nuw nsw i64 %460, 1
  %462 = and i64 %461, 7
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %479, label %464

464:                                              ; preds = %458, %464
  %465 = phi i32** [ %472, %464 ], [ %450, %458 ]
  %466 = phi i64 [ %473, %464 ], [ %451, %458 ]
  %467 = phi i32** [ %474, %464 ], [ %412, %458 ]
  %468 = phi i64 [ %475, %464 ], [ %462, %458 ]
  %469 = bitcast i32** %467 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = inttoptr i64 %466 to i64*
  store i64 %470, i64* %471, align 8
  %472 = getelementptr inbounds i32*, i32** %465, i64 1
  %473 = ptrtoint i32** %472 to i64
  %474 = getelementptr inbounds i32*, i32** %467, i64 1
  %475 = add i64 %468, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %464, !llvm.loop !42

477:                                              ; preds = %464
  %478 = ptrtoint i32** %472 to i64
  br label %479

479:                                              ; preds = %458, %477
  %480 = phi i32** [ %450, %458 ], [ %472, %477 ]
  %481 = phi i64 [ %451, %458 ], [ %478, %477 ]
  %482 = phi i32** [ %412, %458 ], [ %474, %477 ]
  %483 = icmp ult i64 %459, 56
  br i1 %483, label %530, label %484

484:                                              ; preds = %479, %484
  %485 = phi i32** [ %526, %484 ], [ %480, %479 ]
  %486 = phi i64 [ %527, %484 ], [ %481, %479 ]
  %487 = phi i32** [ %528, %484 ], [ %482, %479 ]
  %488 = bitcast i32** %487 to i64*
  %489 = load i64, i64* %488, align 8
  %490 = inttoptr i64 %486 to i64*
  store i64 %489, i64* %490, align 8
  %491 = getelementptr inbounds i32*, i32** %485, i64 1
  %492 = getelementptr inbounds i32*, i32** %487, i64 1
  %493 = bitcast i32** %492 to i64*
  %494 = load i64, i64* %493, align 8
  %495 = bitcast i32** %491 to i64*
  store i64 %494, i64* %495, align 8
  %496 = getelementptr inbounds i32*, i32** %485, i64 2
  %497 = getelementptr inbounds i32*, i32** %487, i64 2
  %498 = bitcast i32** %497 to i64*
  %499 = load i64, i64* %498, align 8
  %500 = bitcast i32** %496 to i64*
  store i64 %499, i64* %500, align 8
  %501 = getelementptr inbounds i32*, i32** %485, i64 3
  %502 = getelementptr inbounds i32*, i32** %487, i64 3
  %503 = bitcast i32** %502 to i64*
  %504 = load i64, i64* %503, align 8
  %505 = bitcast i32** %501 to i64*
  store i64 %504, i64* %505, align 8
  %506 = getelementptr inbounds i32*, i32** %485, i64 4
  %507 = getelementptr inbounds i32*, i32** %487, i64 4
  %508 = bitcast i32** %507 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = bitcast i32** %506 to i64*
  store i64 %509, i64* %510, align 8
  %511 = getelementptr inbounds i32*, i32** %485, i64 5
  %512 = getelementptr inbounds i32*, i32** %487, i64 5
  %513 = bitcast i32** %512 to i64*
  %514 = load i64, i64* %513, align 8
  %515 = bitcast i32** %511 to i64*
  store i64 %514, i64* %515, align 8
  %516 = getelementptr inbounds i32*, i32** %485, i64 6
  %517 = getelementptr inbounds i32*, i32** %487, i64 6
  %518 = bitcast i32** %517 to i64*
  %519 = load i64, i64* %518, align 8
  %520 = bitcast i32** %516 to i64*
  store i64 %519, i64* %520, align 8
  %521 = getelementptr inbounds i32*, i32** %485, i64 7
  %522 = getelementptr inbounds i32*, i32** %487, i64 7
  %523 = bitcast i32** %522 to i64*
  %524 = load i64, i64* %523, align 8
  %525 = bitcast i32** %521 to i64*
  store i64 %524, i64* %525, align 8
  %526 = getelementptr inbounds i32*, i32** %485, i64 8
  %527 = ptrtoint i32** %526 to i64
  %528 = getelementptr inbounds i32*, i32** %487, i64 8
  %529 = icmp eq i32** %456, %526
  br i1 %529, label %530, label %484

530:                                              ; preds = %484, %479
  %531 = ptrtoint i32** %456 to i64
  br label %532

532:                                              ; preds = %530, %443
  %533 = phi i64 [ %531, %530 ], [ %451, %443 ]
  %534 = icmp eq i64 %409, 0
  br i1 %534, label %537, label %535

535:                                              ; preds = %532
  %536 = inttoptr i64 %409 to i8*
  tail call void @_ZdlPv(i8* %536) #15
  br label %537

537:                                              ; preds = %405, %433, %532, %535
  %538 = phi i64 [ %410, %433 ], [ %449, %532 ], [ %449, %535 ], [ %410, %405 ]
  %539 = phi i64 [ %435, %433 ], [ %533, %532 ], [ %533, %535 ], [ %408, %405 ]
  %540 = phi i64 [ %407, %433 ], [ %453, %532 ], [ %453, %535 ], [ %407, %405 ]
  %541 = phi i32** [ %434, %433 ], [ %450, %532 ], [ %450, %535 ], [ %412, %405 ]
  %542 = getelementptr inbounds i32*, i32** %541, i64 -1
  %543 = bitcast i32** %411 to i64*
  %544 = load i64, i64* %543, align 8
  %545 = bitcast i32** %542 to i64*
  store i64 %544, i64* %545, align 8
  %546 = ptrtoint i32** %542 to i64
  %547 = load i32**, i32*** %166, align 8
  %548 = icmp eq i32** %411, %547
  br i1 %548, label %393, label %405

549:                                              ; preds = %403, %395, %332, %183, %157
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer.1194"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1194", %"struct.std::__1::__split_buffer.1194"* %0, i64 0, i32 2
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1194", %"struct.std::__1::__split_buffer.1194"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  %9 = bitcast i32** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.1194", %"struct.std::__1::__split_buffer.1194"* %0, i64 0, i32 1
  %12 = load i32**, i32*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.1194", %"struct.std::__1::__split_buffer.1194"* %0, i64 0, i32 0
  %14 = load i32**, i32*** %13, align 8
  %15 = icmp ugt i32** %12, %14
  %16 = ptrtoint i32** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint i32** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32*, i32** %12, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast i32** %23 to i8*
  %30 = bitcast i32** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #9
  %31 = load i32**, i32*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi i32** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds i32*, i32** %23, i64 %26
  store i32** %34, i32*** %3, align 8
  %35 = getelementptr inbounds i32*, i32** %33, i64 %22
  store i32** %35, i32*** %11, align 8
  %36 = bitcast i32** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast i32*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1194"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #15
  %50 = bitcast i8* %49 to i32**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds i32*, i32** %50, i64 %47
  %53 = ptrtoint i32** %52 to i64
  %54 = getelementptr inbounds i32*, i32** %50, i64 %43
  %55 = ptrtoint i32** %54 to i64
  %56 = ptrtoint i32** %12 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds i32*, i32** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi i32** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi i32** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast i32** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds i32*, i32** %69, i64 1
  %77 = ptrtoint i32** %76 to i64
  %78 = getelementptr inbounds i32*, i32** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !43

81:                                               ; preds = %68
  %82 = ptrtoint i32** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi i32** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi i32** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi i32** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi i32** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast i32** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds i32*, i32** %89, i64 1
  %96 = getelementptr inbounds i32*, i32** %91, i64 1
  %97 = bitcast i32** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast i32** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds i32*, i32** %89, i64 2
  %101 = getelementptr inbounds i32*, i32** %91, i64 2
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast i32** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %89, i64 3
  %106 = getelementptr inbounds i32*, i32** %91, i64 3
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %89, i64 4
  %111 = getelementptr inbounds i32*, i32** %91, i64 4
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %89, i64 5
  %116 = getelementptr inbounds i32*, i32** %91, i64 5
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %89, i64 6
  %121 = getelementptr inbounds i32*, i32** %91, i64 6
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %89, i64 7
  %126 = getelementptr inbounds i32*, i32** %91, i64 7
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %89, i64 8
  %131 = ptrtoint i32** %130 to i64
  %132 = getelementptr inbounds i32*, i32** %91, i64 8
  %133 = icmp eq i32** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint i32** %60 to i64
  %136 = load i32**, i32*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi i32** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast i32*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq i32** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast i32** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #15
  %146 = bitcast i32*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load i32**, i32*** %3, align 8
  %153 = getelementptr inbounds i32*, i32** %152, i64 1
  store i32** %153, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPiNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer.1194"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1194", %"struct.std::__1::__split_buffer.1194"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1194", %"struct.std::__1::__split_buffer.1194"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1194", %"struct.std::__1::__split_buffer.1194"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1194", %"struct.std::__1::__split_buffer.1194"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #9
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1194"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #16
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #15
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !44

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #15
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2001, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN2v88internal15TranslatedFrame16UnoptimizedFrameENS0_14BytecodeOffsetENS0_18SharedFunctionInfoEiii: argument 0"}
!6 = distinct !{!6, !"_ZN2v88internal15TranslatedFrame16UnoptimizedFrameENS0_14BytecodeOffsetENS0_18SharedFunctionInfoEiii"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN2v88internal15TranslatedFrame21ArgumentsAdaptorFrameENS0_18SharedFunctionInfoEi: argument 0"}
!9 = distinct !{!9, !"_ZN2v88internal15TranslatedFrame21ArgumentsAdaptorFrameENS0_18SharedFunctionInfoEi"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN2v88internal15TranslatedFrame18ConstructStubFrameENS0_14BytecodeOffsetENS0_18SharedFunctionInfoEi: argument 0"}
!12 = distinct !{!12, !"_ZN2v88internal15TranslatedFrame18ConstructStubFrameENS0_14BytecodeOffsetENS0_18SharedFunctionInfoEi"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN2v88internal15TranslatedFrame24BuiltinContinuationFrameENS0_14BytecodeOffsetENS0_18SharedFunctionInfoEi: argument 0"}
!15 = distinct !{!15, !"_ZN2v88internal15TranslatedFrame24BuiltinContinuationFrameENS0_14BytecodeOffsetENS0_18SharedFunctionInfoEi"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN2v88internal15TranslatedFrame32JSToWasmBuiltinContinuationFrameENS0_14BytecodeOffsetENS0_18SharedFunctionInfoEiNS_4base8OptionalINS0_4wasm9ValueKindEEE: argument 0"}
!18 = distinct !{!18, !"_ZN2v88internal15TranslatedFrame32JSToWasmBuiltinContinuationFrameENS0_14BytecodeOffsetENS0_18SharedFunctionInfoEiNS_4base8OptionalINS0_4wasm9ValueKindEEE"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN2v88internal15TranslatedFrame34JavaScriptBuiltinContinuationFrameENS0_14BytecodeOffsetENS0_18SharedFunctionInfoEi: argument 0"}
!21 = distinct !{!21, !"_ZN2v88internal15TranslatedFrame34JavaScriptBuiltinContinuationFrameENS0_14BytecodeOffsetENS0_18SharedFunctionInfoEi"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN2v88internal15TranslatedFrame43JavaScriptBuiltinContinuationWithCatchFrameENS0_14BytecodeOffsetENS0_18SharedFunctionInfoEi: argument 0"}
!24 = distinct !{!24, !"_ZN2v88internal15TranslatedFrame43JavaScriptBuiltinContinuationWithCatchFrameENS0_14BytecodeOffsetENS0_18SharedFunctionInfoEi"}
!25 = !{!"branch_weights", i32 1, i32 2000}
!26 = !{!"branch_weights", i32 1073205, i32 2146410443}
!27 = !{!"branch_weights", i32 4000000, i32 4001}
!28 = distinct !{!28, !29}
!29 = !{!"llvm.loop.unroll.disable"}
!30 = distinct !{!30, !29}
!31 = distinct !{!31, !29}
!32 = distinct !{!32, !29}
!33 = distinct !{!33, !29}
!34 = !{i8 0, i8 2}
!35 = distinct !{!35, !29}
!36 = distinct !{!36, !29}
!37 = distinct !{!37, !29}
!38 = distinct !{!38, !29}
!39 = distinct !{!39, !29}
!40 = distinct !{!40, !29}
!41 = distinct !{!41, !29}
!42 = distinct !{!42, !29}
!43 = distinct !{!43, !29}
!44 = distinct !{!44, !29}
