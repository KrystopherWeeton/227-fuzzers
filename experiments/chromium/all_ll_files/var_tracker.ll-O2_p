; ModuleID = '../../ppapi/shared_impl/var_tracker.cc'
source_filename = "../../ppapi/shared_impl/var_tracker.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ppapi::VarTracker::VarInfo" = type { %class.scoped_refptr, i32, i32 }
%class.scoped_refptr = type { %"class.ppapi::Var"* }
%"class.ppapi::Var" = type { i32 (...)**, %"class.base::RefCounted", i32 }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.ppapi::VarTracker" = type { i32 (...)**, %"class.std::__1::unordered_map", i32, %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.11", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { float }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.base::ThreadChecker"* }
%"class.base::ThreadChecker" = type { i8 }
%struct.PP_Var = type { i32, i32, %union.PP_VarValue }
%union.PP_VarValue = type { double }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33", %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"struct.ppapi::VarTracker::VarInfo" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.7"*, i8, [7 x i8] }>
%"class.std::__1::allocator.7" = type { i8 }
%"struct.std::__1::pair.24" = type { i32, %"struct.ppapi::VarTracker::VarInfo" }
%"class.ppapi::ArrayBufferVar" = type { %"class.ppapi::Var" }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.ppapi::ResourceVar" = type { %"class.ppapi::Var" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.PP_Var*, %struct.PP_Var*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %struct.PP_Var* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN5ppapi10VarTracker7VarInfoEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN5ppapi10VarTracker7VarInfoEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIiJNS_4pairIiS4_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN5ppapi10VarTracker7VarInfoEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN5ppapi10VarTracker7VarInfoEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm = comdat any

@_ZTVN5ppapi10VarTrackerE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ppapi::VarTracker"*)* @_ZN5ppapi10VarTrackerD2Ev to i8*), i8* bitcast (void (%"class.ppapi::VarTracker"*)* @_ZN5ppapi10VarTrackerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.ppapi::VarTracker"*, %"class.ppapi::Var"*, i32)* @_ZN5ppapi10VarTracker14AddVarInternalEPNS_3VarENS0_13AddVarRefModeE to i8*), i8* bitcast (void (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)* @_ZN5ppapi10VarTracker26TrackedObjectGettingOneRefENSt3__125__hash_map_const_iteratorINS1_21__hash_const_iteratorIPNS1_11__hash_nodeINS1_17__hash_value_typeIiNS0_7VarInfoEEEPvEEEEEE to i8*), i8* bitcast (void (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)* @_ZN5ppapi10VarTracker20ObjectGettingZeroRefENSt3__119__hash_map_iteratorINS1_15__hash_iteratorIPNS1_11__hash_nodeINS1_17__hash_value_typeIiNS0_7VarInfoEEEPvEEEEEE to i8*), i8* bitcast (i1 (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)* @_ZN5ppapi10VarTracker27DeleteObjectInfoIfNecessaryENSt3__119__hash_map_iteratorINS1_15__hash_iteratorIPNS1_11__hash_nodeINS1_17__hash_value_typeIiNS0_7VarInfoEEEPvEEEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [39 x i8] c"../../ppapi/shared_impl/var_tracker.cc\00", align 1
@.str.1 = private unnamed_addr constant [71 x i8] c"info.ref_count != std::numeric_limits<decltype(info.ref_count)>::max()\00", align 1
@_ZN5ppapi13kPPIdTypeBitsE = external local_unnamed_addr constant i32, align 4

@_ZN5ppapi10VarTracker7VarInfoC1Ev = hidden unnamed_addr alias void (%"struct.ppapi::VarTracker::VarInfo"*), void (%"struct.ppapi::VarTracker::VarInfo"*)* @_ZN5ppapi10VarTracker7VarInfoC2Ev
@_ZN5ppapi10VarTracker7VarInfoC1EPNS_3VarEi = hidden unnamed_addr alias void (%"struct.ppapi::VarTracker::VarInfo"*, %"class.ppapi::Var"*, i32), void (%"struct.ppapi::VarTracker::VarInfo"*, %"class.ppapi::Var"*, i32)* @_ZN5ppapi10VarTracker7VarInfoC2EPNS_3VarEi
@_ZN5ppapi10VarTrackerD1Ev = hidden unnamed_addr alias void (%"class.ppapi::VarTracker"*), void (%"class.ppapi::VarTracker"*)* @_ZN5ppapi10VarTrackerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5ppapi10VarTracker7VarInfoC2Ev(%"struct.ppapi::VarTracker::VarInfo"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.ppapi::VarTracker::VarInfo"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi10VarTracker7VarInfoC2EPNS_3VarEi(%"struct.ppapi::VarTracker::VarInfo"* nocapture, %"class.ppapi::Var"*, i32) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"struct.ppapi::VarTracker::VarInfo", %"struct.ppapi::VarTracker::VarInfo"* %0, i64 0, i32 0, i32 0
  store %"class.ppapi::Var"* %1, %"class.ppapi::Var"** %4, align 8
  %5 = icmp eq %"class.ppapi::Var"* %1, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %7) #14
  br label %8

8:                                                ; preds = %3, %6
  %9 = getelementptr inbounds %"struct.ppapi::VarTracker::VarInfo", %"struct.ppapi::VarTracker::VarInfo"* %0, i64 0, i32 1
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.ppapi::VarTracker::VarInfo", %"struct.ppapi::VarTracker::VarInfo"* %0, i64 0, i32 2
  store i32 0, i32* %10, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi10VarTrackerC2ENS0_10ThreadModeE(%"class.ppapi::VarTracker"* nocapture, i32) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5ppapi10VarTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0, i32 3
  %6 = bitcast %"class.std::__1::__compressed_pair.11"* %5 to i32*
  %7 = bitcast %"class.std::__1::unordered_map"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #14
  store i32 1065353216, i32* %6, align 4
  %8 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 3
  %10 = bitcast %"class.std::__1::unique_ptr.14"* %9 to i64*
  store i64 0, i64* %10, align 8
  %11 = icmp eq i32 %1, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = tail call i8* @_Znwm(i64 1) #15
  %14 = ptrtoint i8* %13 to i64
  store i64 %14, i64* %10, align 8
  br label %15

15:                                               ; preds = %12, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi10VarTrackerD2Ev(%"class.ppapi::VarTracker"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5ppapi10VarTrackerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.base::ThreadChecker"*, %"class.base::ThreadChecker"** %3, align 8
  store %"class.base::ThreadChecker"* null, %"class.base::ThreadChecker"** %3, align 8
  %5 = icmp eq %"class.base::ThreadChecker"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::ThreadChecker", %"class.base::ThreadChecker"* %4, i64 0, i32 0
  tail call void @_ZdlPv(i8* %7) #15
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %9, align 8
  %11 = icmp eq %"struct.std::__1::__hash_node_base"* %10, null
  br i1 %11, label %36, label %12

12:                                               ; preds = %8, %33
  %13 = phi %"struct.std::__1::__hash_node_base"* [ %15, %33 ], [ %10, %8 ]
  %14 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %13, i64 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %13, i64 3
  %17 = bitcast %"struct.std::__1::__hash_node_base"* %16 to %"class.ppapi::Var"**
  %18 = load %"class.ppapi::Var"*, %"class.ppapi::Var"** %17, align 8
  %19 = icmp eq %"class.ppapi::Var"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %18, i64 0, i32 1
  %22 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #14
  %23 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 -2
  %28 = bitcast %"class.base::RefCounted"* %27 to %"class.ppapi::Var"*
  %29 = bitcast %"class.base::RefCounted"* %27 to void (%"class.ppapi::Var"*)***
  %30 = load void (%"class.ppapi::Var"*)**, void (%"class.ppapi::Var"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %30, i64 9
  %32 = load void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %31, align 8
  tail call void %32(%"class.ppapi::Var"* nonnull %28) #14
  br label %33

33:                                               ; preds = %26, %20, %12
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %13 to i8*
  tail call void @_ZdlPv(i8* %34) #15
  %35 = icmp eq %"struct.std::__1::__hash_node_base"* %15, null
  br i1 %35, label %36, label %12

36:                                               ; preds = %33, %8
  %37 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %37, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"** %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = bitcast %"struct.std::__1::__hash_node_base"** %38 to i8*
  tail call void @_ZdlPv(i8* %41) #15
  br label %42

42:                                               ; preds = %36, %40
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5ppapi10VarTrackerD0Ev(%"class.ppapi::VarTracker"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #16
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5ppapi10VarTracker27CheckThreadingPreconditionsEv(%"class.ppapi::VarTracker"* nocapture) local_unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5ppapi10VarTracker6AddVarEPNS_3VarE(%"class.ppapi::VarTracker"*, %"class.ppapi::Var"*) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.ppapi::VarTracker"* %0 to i32 (%"class.ppapi::VarTracker"*, %"class.ppapi::Var"*, i32)***
  %4 = load i32 (%"class.ppapi::VarTracker"*, %"class.ppapi::Var"*, i32)**, i32 (%"class.ppapi::VarTracker"*, %"class.ppapi::Var"*, i32)*** %3, align 8
  %5 = getelementptr inbounds i32 (%"class.ppapi::VarTracker"*, %"class.ppapi::Var"*, i32)*, i32 (%"class.ppapi::VarTracker"*, %"class.ppapi::Var"*, i32)** %4, i64 7
  %6 = load i32 (%"class.ppapi::VarTracker"*, %"class.ppapi::Var"*, i32)*, i32 (%"class.ppapi::VarTracker"*, %"class.ppapi::Var"*, i32)** %5, align 8
  %7 = tail call i32 %6(%"class.ppapi::VarTracker"* %0, %"class.ppapi::Var"* %1, i32 0) #14
  ret i32 %7
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.ppapi::Var"* @_ZNK5ppapi10VarTracker6GetVarEi(%"class.ppapi::VarTracker"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %59, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #14, !range !2
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = add i64 %5, -1
  %12 = and i64 %11, %3
  br label %17

13:                                               ; preds = %7
  %14 = icmp ugt i64 %5, %3
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %3, %5
  br label %17

17:                                               ; preds = %15, %13, %10
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %3, %13 ]
  %19 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %20, i64 %18
  %22 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base"* %22, null
  br i1 %23, label %59, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %59, label %28

28:                                               ; preds = %24
  %29 = add i64 %5, -1
  br label %30

30:                                               ; preds = %51, %28
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %26, %28 ], [ %53, %51 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %33 = bitcast %"struct.std::__1::__hash_node_base"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, %3
  br i1 %35, label %46, label %36

36:                                               ; preds = %30
  br i1 %9, label %39, label %37

37:                                               ; preds = %36
  %38 = and i64 %34, %29
  br label %43

39:                                               ; preds = %36
  %40 = icmp ult i64 %34, %5
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %34, %5
  br label %43

43:                                               ; preds = %41, %39, %37
  %44 = phi i64 [ %38, %37 ], [ %42, %41 ], [ %34, %39 ]
  %45 = icmp eq i64 %44, %18
  br i1 %45, label %51, label %59

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %1
  br i1 %50, label %55, label %51

51:                                               ; preds = %46, %43
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base"* %53, null
  br i1 %54, label %59, label %30

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 3
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to %"class.ppapi::Var"**
  %58 = load %"class.ppapi::Var"*, %"class.ppapi::Var"** %57, align 8
  br label %59

59:                                               ; preds = %51, %43, %24, %2, %17, %55
  %60 = phi %"class.ppapi::Var"* [ %58, %55 ], [ null, %17 ], [ null, %2 ], [ null, %24 ], [ null, %43 ], [ null, %51 ]
  ret %"class.ppapi::Var"* %60
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"class.ppapi::Var"* @_ZNK5ppapi10VarTracker6GetVarERK6PP_Var(%"class.ppapi::VarTracker"* nocapture readonly, %struct.PP_Var* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 4
  br i1 %5, label %6, label %68

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %1, i64 0, i32 2
  %8 = bitcast %union.PP_VarValue* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = shl i64 %9, 32
  %12 = ashr exact i64 %11, 32
  %13 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %68, label %16

16:                                               ; preds = %6
  %17 = tail call i64 @llvm.ctpop.i64(i64 %14) #14, !range !2
  %18 = icmp ugt i64 %17, 1
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = add i64 %14, -1
  %21 = and i64 %20, %12
  br label %26

22:                                               ; preds = %16
  %23 = icmp ugt i64 %14, %12
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = urem i64 %12, %14
  br label %26

26:                                               ; preds = %24, %22, %19
  %27 = phi i64 [ %21, %19 ], [ %25, %24 ], [ %12, %22 ]
  %28 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %29, i64 %27
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %68, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base"* %35, null
  br i1 %36, label %68, label %37

37:                                               ; preds = %33
  %38 = add i64 %14, -1
  br label %39

39:                                               ; preds = %60, %37
  %40 = phi %"struct.std::__1::__hash_node_base"* [ %35, %37 ], [ %62, %60 ]
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %40, i64 1
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, %12
  br i1 %44, label %55, label %45

45:                                               ; preds = %39
  br i1 %18, label %48, label %46

46:                                               ; preds = %45
  %47 = and i64 %43, %38
  br label %52

48:                                               ; preds = %45
  %49 = icmp ult i64 %43, %14
  br i1 %49, label %52, label %50

50:                                               ; preds = %48
  %51 = urem i64 %43, %14
  br label %52

52:                                               ; preds = %50, %48, %46
  %53 = phi i64 [ %47, %46 ], [ %51, %50 ], [ %43, %48 ]
  %54 = icmp eq i64 %53, %27
  br i1 %54, label %60, label %68

55:                                               ; preds = %39
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %40, i64 2
  %57 = bitcast %"struct.std::__1::__hash_node_base"* %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, %10
  br i1 %59, label %64, label %60

60:                                               ; preds = %55, %52
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %40, i64 0, i32 0
  %62 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %61, align 8
  %63 = icmp eq %"struct.std::__1::__hash_node_base"* %62, null
  br i1 %63, label %68, label %39

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %40, i64 3
  %66 = bitcast %"struct.std::__1::__hash_node_base"* %65 to %"class.ppapi::Var"**
  %67 = load %"class.ppapi::Var"*, %"class.ppapi::Var"** %66, align 8
  br label %68

68:                                               ; preds = %60, %52, %64, %33, %26, %6, %2
  %69 = phi %"class.ppapi::Var"* [ null, %2 ], [ %67, %64 ], [ null, %26 ], [ null, %6 ], [ null, %33 ], [ null, %52 ], [ null, %60 ]
  ret %"class.ppapi::Var"* %69
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5ppapi10VarTracker19IsVarTypeRefcountedE10PP_VarType(i32) local_unnamed_addr #5 align 2 {
  %2 = icmp sgt i32 %0, 4
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5ppapi10VarTracker9AddRefVarEi(%"class.ppapi::VarTracker"*, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %74, label %8

8:                                                ; preds = %2
  %9 = tail call i64 @llvm.ctpop.i64(i64 %6) #14, !range !2
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %8
  %12 = add i64 %6, -1
  %13 = and i64 %12, %4
  br label %18

14:                                               ; preds = %8
  %15 = icmp ugt i64 %6, %4
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %4, %6
  br label %18

18:                                               ; preds = %16, %14, %11
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %4, %14 ]
  %20 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base"* %23, null
  br i1 %24, label %74, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %23, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, null
  br i1 %28, label %74, label %29

29:                                               ; preds = %25
  %30 = add i64 %6, -1
  br label %31

31:                                               ; preds = %52, %29
  %32 = phi %"struct.std::__1::__hash_node_base"* [ %27, %29 ], [ %54, %52 ]
  %33 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 1
  %34 = bitcast %"struct.std::__1::__hash_node_base"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, %4
  br i1 %36, label %47, label %37

37:                                               ; preds = %31
  br i1 %10, label %40, label %38

38:                                               ; preds = %37
  %39 = and i64 %35, %30
  br label %44

40:                                               ; preds = %37
  %41 = icmp ult i64 %35, %6
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %35, %6
  br label %44

44:                                               ; preds = %42, %40, %38
  %45 = phi i64 [ %39, %38 ], [ %43, %42 ], [ %35, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %52, label %74

47:                                               ; preds = %31
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i32*
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, %1
  br i1 %51, label %56, label %52

52:                                               ; preds = %47, %44
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 0, i32 0
  %54 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %53, align 8
  %55 = icmp eq %"struct.std::__1::__hash_node_base"* %54, null
  br i1 %55, label %74, label %31

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %32, i64 4
  %58 = bitcast %"struct.std::__1::__hash_node_base"* %57 to i32*
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %67

61:                                               ; preds = %56
  %62 = bitcast %"class.ppapi::VarTracker"* %0 to void (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)***
  %63 = load void (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)**, void (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)*, void (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)** %63, i64 8
  %65 = load void (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)*, void (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)** %64, align 8
  tail call void %65(%"class.ppapi::VarTracker"* %0, %"struct.std::__1::__hash_node_base"* nonnull %32) #14
  %66 = load i32, i32* %58, align 8
  br label %67

67:                                               ; preds = %61, %56
  %68 = phi i32 [ %66, %61 ], [ %59, %56 ]
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %58, align 8
  %70 = icmp eq i32 %69, 2147483647
  br i1 %70, label %71, label %74

71:                                               ; preds = %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 87, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0)) #14
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #14
  br label %74

74:                                               ; preds = %52, %44, %25, %2, %18, %71, %67
  %75 = phi i1 [ true, %67 ], [ true, %71 ], [ false, %18 ], [ false, %2 ], [ false, %25 ], [ false, %44 ], [ false, %52 ]
  ret i1 %75
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #7

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5ppapi10VarTracker9AddRefVarERK6PP_Var(%"class.ppapi::VarTracker"*, %struct.PP_Var* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 4
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %1, i64 0, i32 2
  %8 = bitcast %union.PP_VarValue* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = tail call zeroext i1 @_ZN5ppapi10VarTracker9AddRefVarEi(%"class.ppapi::VarTracker"* %0, i32 %10)
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i1 [ %11, %6 ], [ true, %2 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5ppapi10VarTracker10ReleaseVarEi(%"class.ppapi::VarTracker"*, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.31", align 8
  %4 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %129, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #14, !range !2
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %129, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base"* %28, null
  br i1 %29, label %129, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %129

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %1
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base"* %55, null
  br i1 %56, label %129, label %32

57:                                               ; preds = %48
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 4
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i32*
  %60 = load i32, i32* %59, align 8
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %129, label %62

62:                                               ; preds = %57
  %63 = add nsw i32 %60, -1
  store i32 %63, i32* %59, align 8
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %129

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 3
  %67 = bitcast %"struct.std::__1::__hash_node_base"* %66 to %"class.ppapi::Var"**
  %68 = load %"class.ppapi::Var"*, %"class.ppapi::Var"** %67, align 8
  %69 = icmp eq %"class.ppapi::Var"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %68, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %71) #14
  br label %72

72:                                               ; preds = %65, %70
  %73 = bitcast %"class.ppapi::Var"* %68 to i32 (%"class.ppapi::Var"*)***
  %74 = load i32 (%"class.ppapi::Var"*)**, i32 (%"class.ppapi::Var"*)*** %73, align 8
  %75 = getelementptr inbounds i32 (%"class.ppapi::Var"*)*, i32 (%"class.ppapi::Var"*)** %74, i64 7
  %76 = load i32 (%"class.ppapi::Var"*)*, i32 (%"class.ppapi::Var"*)** %75, align 8
  %77 = tail call i32 %76(%"class.ppapi::Var"* %68) #14
  %78 = icmp eq i32 %77, 6
  br i1 %78, label %79, label %84

79:                                               ; preds = %72
  %80 = bitcast %"class.ppapi::VarTracker"* %0 to void (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)***
  %81 = load void (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)**, void (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)*, void (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)** %81, i64 9
  %83 = load void (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)*, void (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)** %82, align 8
  tail call void %83(%"class.ppapi::VarTracker"* %0, %"struct.std::__1::__hash_node_base"* nonnull %33) #14
  br label %115

84:                                               ; preds = %72
  %85 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %68, i64 0, i32 2
  store i32 0, i32* %85, align 4
  %86 = getelementptr inbounds %"class.std::__1::unordered_map", %"class.std::__1::unordered_map"* %4, i64 0, i32 0
  %87 = bitcast %"class.std::__1::unique_ptr.31"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87) #14
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN5ppapi10VarTracker7VarInfoEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEE(%"class.std::__1::unique_ptr.31"* nonnull sret %3, %"class.std::__1::__hash_table"* %86, %"struct.std::__1::__hash_node_base"* nonnull %33) #14
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %3, i64 0, i32 0, i32 0, i32 0
  %89 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %88, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node"* %89, null
  br i1 %90, label %114, label %91

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %93 = load i8, i8* %92, align 8, !range !3
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %112, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %89, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %97 = load %"class.ppapi::Var"*, %"class.ppapi::Var"** %96, align 8
  %98 = icmp eq %"class.ppapi::Var"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %97, i64 0, i32 1
  %101 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %100, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %101) #14
  %102 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %100, i64 0, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %112

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %100, i64 -2
  %107 = bitcast %"class.base::RefCounted"* %106 to %"class.ppapi::Var"*
  %108 = bitcast %"class.base::RefCounted"* %106 to void (%"class.ppapi::Var"*)***
  %109 = load void (%"class.ppapi::Var"*)**, void (%"class.ppapi::Var"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %109, i64 9
  %111 = load void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %110, align 8
  call void %111(%"class.ppapi::Var"* nonnull %107) #14
  br label %112

112:                                              ; preds = %105, %99, %95, %91
  %113 = bitcast %"struct.std::__1::__hash_node"* %89 to i8*
  call void @_ZdlPv(i8* %113) #15
  br label %114

114:                                              ; preds = %84, %112
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87) #14
  br label %115

115:                                              ; preds = %114, %79
  br i1 %69, label %129, label %116

116:                                              ; preds = %115
  %117 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %68, i64 0, i32 1
  %118 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %117, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %118) #14
  %119 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %117, i64 0, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %129

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %117, i64 -2
  %124 = bitcast %"class.base::RefCounted"* %123 to %"class.ppapi::Var"*
  %125 = bitcast %"class.base::RefCounted"* %123 to void (%"class.ppapi::Var"*)***
  %126 = load void (%"class.ppapi::Var"*)**, void (%"class.ppapi::Var"*)*** %125, align 8
  %127 = getelementptr inbounds void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %126, i64 9
  %128 = load void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %127, align 8
  call void %128(%"class.ppapi::Var"* nonnull %124) #14
  br label %129

129:                                              ; preds = %53, %45, %26, %2, %19, %122, %116, %115, %57, %62
  %130 = phi i1 [ false, %57 ], [ true, %62 ], [ true, %115 ], [ true, %116 ], [ true, %122 ], [ false, %19 ], [ false, %2 ], [ false, %26 ], [ false, %45 ], [ false, %53 ]
  ret i1 %130
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5ppapi10VarTracker10ReleaseVarERK6PP_Var(%"class.ppapi::VarTracker"*, %struct.PP_Var* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp sgt i32 %4, 4
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %1, i64 0, i32 2
  %8 = bitcast %union.PP_VarValue* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = tail call zeroext i1 @_ZN5ppapi10VarTracker10ReleaseVarEi(%"class.ppapi::VarTracker"* %0, i32 %10)
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i1 [ %11, %6 ], [ false, %2 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5ppapi10VarTracker14AddVarInternalEPNS_3VarENS0_13AddVarRefModeE(%"class.ppapi::VarTracker"*, %"class.ppapi::Var"*, i32) unnamed_addr #2 align 2 {
  %4 = alloca %"struct.std::__1::pair.24", align 8
  %5 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = load i32, i32* @_ZN5ppapi13kPPIdTypeBitsE, align 4
  %8 = lshr i32 2147483647, %7
  %9 = icmp eq i32 %6, %8
  br i1 %9, label %46, label %10

10:                                               ; preds = %3
  %11 = add nsw i32 %6, 1
  store i32 %11, i32* %5, align 8
  %12 = shl i32 %11, %7
  %13 = or i32 %12, 3
  %14 = bitcast %"struct.std::__1::pair.24"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #14
  %15 = icmp eq i32 %2, 0
  %16 = ptrtoint %"class.ppapi::Var"* %1 to i64
  %17 = icmp eq %"class.ppapi::Var"* %1, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %19) #14
  br label %20

20:                                               ; preds = %10, %18
  %21 = zext i1 %15 to i64
  %22 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %4, i64 0, i32 0
  store i32 %13, i32* %22, align 8, !alias.scope !4
  %23 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %4, i64 0, i32 1
  %24 = bitcast %"struct.ppapi::VarTracker::VarInfo"* %23 to i64*
  store i64 %16, i64* %24, align 8, !alias.scope !4
  %25 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %4, i64 0, i32 1, i32 1
  %26 = bitcast i32* %25 to i64*
  store i64 %21, i64* %26, align 8, !alias.scope !4
  %27 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0
  %28 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN5ppapi10VarTracker7VarInfoEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIiJNS_4pairIiS4_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %27, i32* nonnull dereferenceable(4) %22, %"struct.std::__1::pair.24"* nonnull dereferenceable(24) %4) #14
  %29 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %4, i64 0, i32 1, i32 0, i32 0
  %30 = load %"class.ppapi::Var"*, %"class.ppapi::Var"** %29, align 8
  %31 = icmp eq %"class.ppapi::Var"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %20
  %33 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %30, i64 0, i32 1
  %34 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %33, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %34) #14
  %35 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %33, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %33, i64 -2
  %40 = bitcast %"class.base::RefCounted"* %39 to %"class.ppapi::Var"*
  %41 = bitcast %"class.base::RefCounted"* %39 to void (%"class.ppapi::Var"*)***
  %42 = load void (%"class.ppapi::Var"*)**, void (%"class.ppapi::Var"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %42, i64 9
  %44 = load void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %43, align 8
  call void %44(%"class.ppapi::Var"* nonnull %40) #14
  br label %45

45:                                               ; preds = %38, %32, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #14
  br label %46

46:                                               ; preds = %3, %45
  %47 = phi i32 [ %13, %45 ], [ 0, %3 ]
  ret i32 %47
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"struct.std::__1::__hash_node_base"* @_ZN5ppapi10VarTracker10GetLiveVarEi(%"class.ppapi::VarTracker"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %55, label %7

7:                                                ; preds = %2
  %8 = tail call i64 @llvm.ctpop.i64(i64 %5) #14, !range !2
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = add i64 %5, -1
  %12 = and i64 %11, %3
  br label %17

13:                                               ; preds = %7
  %14 = icmp ugt i64 %5, %3
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = urem i64 %3, %5
  br label %17

17:                                               ; preds = %15, %13, %10
  %18 = phi i64 [ %12, %10 ], [ %16, %15 ], [ %3, %13 ]
  %19 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %19, align 8
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %20, i64 %18
  %22 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base"* %22, null
  br i1 %23, label %55, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %22, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %24
  %29 = add i64 %5, -1
  br label %30

30:                                               ; preds = %51, %28
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %26, %28 ], [ %53, %51 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %33 = bitcast %"struct.std::__1::__hash_node_base"* %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, %3
  br i1 %35, label %46, label %36

36:                                               ; preds = %30
  br i1 %9, label %39, label %37

37:                                               ; preds = %36
  %38 = and i64 %34, %29
  br label %43

39:                                               ; preds = %36
  %40 = icmp ult i64 %34, %5
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %34, %5
  br label %43

43:                                               ; preds = %41, %39, %37
  %44 = phi i64 [ %38, %37 ], [ %42, %41 ], [ %34, %39 ]
  %45 = icmp eq i64 %44, %18
  br i1 %45, label %51, label %55

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %1
  br i1 %50, label %55, label %51

51:                                               ; preds = %46, %43
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base"* %53, null
  br i1 %54, label %55, label %30

55:                                               ; preds = %43, %46, %51, %2, %17, %24
  %56 = phi %"struct.std::__1::__hash_node_base"* [ null, %17 ], [ null, %2 ], [ null, %24 ], [ %31, %46 ], [ null, %51 ], [ null, %43 ]
  ret %"struct.std::__1::__hash_node_base"* %56
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN5ppapi10VarTracker20GetRefCountForObjectERK6PP_Var(%"class.ppapi::VarTracker"* nocapture readonly, %struct.PP_Var* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %1, i64 0, i32 2
  %4 = bitcast %union.PP_VarValue* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  %7 = shl i64 %5, 32
  %8 = ashr exact i64 %7, 32
  %9 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %64, label %12

12:                                               ; preds = %2
  %13 = tail call i64 @llvm.ctpop.i64(i64 %10) #14, !range !2
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = add i64 %10, -1
  %17 = and i64 %16, %8
  br label %22

18:                                               ; preds = %12
  %19 = icmp ugt i64 %10, %8
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %8, %10
  br label %22

22:                                               ; preds = %20, %18, %15
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %8, %18 ]
  %24 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, i64 %23
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, null
  br i1 %28, label %64, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %27, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %64, label %33

33:                                               ; preds = %29
  %34 = add i64 %10, -1
  br label %35

35:                                               ; preds = %56, %33
  %36 = phi %"struct.std::__1::__hash_node_base"* [ %31, %33 ], [ %58, %56 ]
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, %8
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  br i1 %14, label %44, label %42

42:                                               ; preds = %41
  %43 = and i64 %39, %34
  br label %48

44:                                               ; preds = %41
  %45 = icmp ult i64 %39, %10
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %39, %10
  br label %48

48:                                               ; preds = %46, %44, %42
  %49 = phi i64 [ %43, %42 ], [ %47, %46 ], [ %39, %44 ]
  %50 = icmp eq i64 %49, %23
  br i1 %50, label %56, label %64

51:                                               ; preds = %35
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 2
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %6
  br i1 %55, label %60, label %56

56:                                               ; preds = %51, %48
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base"* %58, null
  br i1 %59, label %64, label %35

60:                                               ; preds = %51
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 4
  %62 = bitcast %"struct.std::__1::__hash_node_base"* %61 to i32*
  %63 = load i32, i32* %62, align 8
  br label %64

64:                                               ; preds = %48, %56, %29, %2, %22, %60
  %65 = phi i32 [ %63, %60 ], [ -1, %22 ], [ -1, %2 ], [ -1, %29 ], [ -1, %56 ], [ -1, %48 ]
  ret i32 %65
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"struct.std::__1::__hash_node_base"* @_ZN5ppapi10VarTracker10GetLiveVarERK6PP_Var(%"class.ppapi::VarTracker"* nocapture readonly, %struct.PP_Var* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %1, i64 0, i32 2
  %4 = bitcast %union.PP_VarValue* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  %7 = shl i64 %5, 32
  %8 = ashr exact i64 %7, 32
  %9 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %60, label %12

12:                                               ; preds = %2
  %13 = tail call i64 @llvm.ctpop.i64(i64 %10) #14, !range !2
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = add i64 %10, -1
  %17 = and i64 %16, %8
  br label %22

18:                                               ; preds = %12
  %19 = icmp ugt i64 %10, %8
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %8, %10
  br label %22

22:                                               ; preds = %20, %18, %15
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %8, %18 ]
  %24 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, i64 %23
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, null
  br i1 %28, label %60, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %27, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %60, label %33

33:                                               ; preds = %29
  %34 = add i64 %10, -1
  br label %35

35:                                               ; preds = %56, %33
  %36 = phi %"struct.std::__1::__hash_node_base"* [ %31, %33 ], [ %58, %56 ]
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, %8
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  br i1 %14, label %44, label %42

42:                                               ; preds = %41
  %43 = and i64 %39, %34
  br label %48

44:                                               ; preds = %41
  %45 = icmp ult i64 %39, %10
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %39, %10
  br label %48

48:                                               ; preds = %46, %44, %42
  %49 = phi i64 [ %43, %42 ], [ %47, %46 ], [ %39, %44 ]
  %50 = icmp eq i64 %49, %23
  br i1 %50, label %56, label %60

51:                                               ; preds = %35
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 2
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %6
  br i1 %55, label %60, label %56

56:                                               ; preds = %51, %48
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base"* %58, null
  br i1 %59, label %60, label %35

60:                                               ; preds = %48, %51, %56, %2, %22, %29
  %61 = phi %"struct.std::__1::__hash_node_base"* [ null, %22 ], [ null, %2 ], [ null, %29 ], [ %36, %51 ], [ null, %56 ], [ null, %48 ]
  ret %"struct.std::__1::__hash_node_base"* %61
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN5ppapi10VarTracker39GetTrackedWithNoReferenceCountForObjectERK6PP_Var(%"class.ppapi::VarTracker"* nocapture readonly, %struct.PP_Var* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %1, i64 0, i32 2
  %4 = bitcast %union.PP_VarValue* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  %7 = shl i64 %5, 32
  %8 = ashr exact i64 %7, 32
  %9 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %64, label %12

12:                                               ; preds = %2
  %13 = tail call i64 @llvm.ctpop.i64(i64 %10) #14, !range !2
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = add i64 %10, -1
  %17 = and i64 %16, %8
  br label %22

18:                                               ; preds = %12
  %19 = icmp ugt i64 %10, %8
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %8, %10
  br label %22

22:                                               ; preds = %20, %18, %15
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %8, %18 ]
  %24 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, i64 %23
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, null
  br i1 %28, label %64, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %27, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %64, label %33

33:                                               ; preds = %29
  %34 = add i64 %10, -1
  br label %35

35:                                               ; preds = %56, %33
  %36 = phi %"struct.std::__1::__hash_node_base"* [ %31, %33 ], [ %58, %56 ]
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, %8
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  br i1 %14, label %44, label %42

42:                                               ; preds = %41
  %43 = and i64 %39, %34
  br label %48

44:                                               ; preds = %41
  %45 = icmp ult i64 %39, %10
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %39, %10
  br label %48

48:                                               ; preds = %46, %44, %42
  %49 = phi i64 [ %43, %42 ], [ %47, %46 ], [ %39, %44 ]
  %50 = icmp eq i64 %49, %23
  br i1 %50, label %56, label %64

51:                                               ; preds = %35
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 2
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %6
  br i1 %55, label %60, label %56

56:                                               ; preds = %51, %48
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base"* %58, null
  br i1 %59, label %64, label %35

60:                                               ; preds = %51
  %61 = bitcast %"struct.std::__1::__hash_node_base"* %52 to %"struct.std::__1::pair"*
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %61, i64 0, i32 1, i32 2
  %63 = load i32, i32* %62, align 4
  br label %64

64:                                               ; preds = %48, %56, %29, %2, %22, %60
  %65 = phi i32 [ %63, %60 ], [ -1, %22 ], [ -1, %2 ], [ -1, %29 ], [ -1, %56 ], [ -1, %48 ]
  ret i32 %65
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden %"struct.std::__1::__hash_node_base"* @_ZNK5ppapi10VarTracker10GetLiveVarERK6PP_Var(%"class.ppapi::VarTracker"* nocapture readonly, %struct.PP_Var* nocapture readonly dereferenceable(16)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %1, i64 0, i32 2
  %4 = bitcast %union.PP_VarValue* %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  %7 = shl i64 %5, 32
  %8 = ashr exact i64 %7, 32
  %9 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %60, label %12

12:                                               ; preds = %2
  %13 = tail call i64 @llvm.ctpop.i64(i64 %10) #14, !range !2
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = add i64 %10, -1
  %17 = and i64 %16, %8
  br label %22

18:                                               ; preds = %12
  %19 = icmp ugt i64 %10, %8
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %8, %10
  br label %22

22:                                               ; preds = %20, %18, %15
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %8, %18 ]
  %24 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %25, i64 %23
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, null
  br i1 %28, label %60, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %27, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %60, label %33

33:                                               ; preds = %29
  %34 = add i64 %10, -1
  br label %35

35:                                               ; preds = %56, %33
  %36 = phi %"struct.std::__1::__hash_node_base"* [ %31, %33 ], [ %58, %56 ]
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, %8
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  br i1 %14, label %44, label %42

42:                                               ; preds = %41
  %43 = and i64 %39, %34
  br label %48

44:                                               ; preds = %41
  %45 = icmp ult i64 %39, %10
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %39, %10
  br label %48

48:                                               ; preds = %46, %44, %42
  %49 = phi i64 [ %43, %42 ], [ %47, %46 ], [ %39, %44 ]
  %50 = icmp eq i64 %49, %23
  br i1 %50, label %56, label %60

51:                                               ; preds = %35
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 2
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %6
  br i1 %55, label %60, label %56

56:                                               ; preds = %51, %48
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base"* %58, null
  br i1 %59, label %60, label %35

60:                                               ; preds = %48, %51, %56, %2, %22, %29
  %61 = phi %"struct.std::__1::__hash_node_base"* [ null, %22 ], [ null, %2 ], [ null, %29 ], [ %36, %51 ], [ null, %56 ], [ null, %48 ]
  ret %"struct.std::__1::__hash_node_base"* %61
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5ppapi10VarTracker20MakeArrayBufferPPVarEj(%"class.ppapi::VarTracker"*, i32) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.ppapi::VarTracker"* %0 to %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)***
  %4 = load %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)**, %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)*** %3, align 8
  %5 = getelementptr inbounds %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)*, %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)** %4, i64 11
  %6 = load %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)*, %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)** %5, align 8
  %7 = tail call %"class.ppapi::ArrayBufferVar"* %6(%"class.ppapi::VarTracker"* %0, i32 %1) #14
  %8 = icmp eq %"class.ppapi::ArrayBufferVar"* %7, null
  br i1 %8, label %27, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.ppapi::ArrayBufferVar", %"class.ppapi::ArrayBufferVar"* %7, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %10) #14
  %11 = getelementptr inbounds %"class.ppapi::ArrayBufferVar", %"class.ppapi::ArrayBufferVar"* %7, i64 0, i32 0
  %12 = tail call { i64, i64 } @_ZN5ppapi3Var8GetPPVarEv(%"class.ppapi::Var"* %11) #14
  %13 = extractvalue { i64, i64 } %12, 0
  %14 = extractvalue { i64, i64 } %12, 1
  %15 = getelementptr inbounds %"class.ppapi::ArrayBufferVar", %"class.ppapi::ArrayBufferVar"* %7, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #14
  %17 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 -2
  %22 = bitcast %"class.base::RefCounted"* %21 to %"class.ppapi::Var"*
  %23 = bitcast %"class.base::RefCounted"* %21 to void (%"class.ppapi::Var"*)***
  %24 = load void (%"class.ppapi::Var"*)**, void (%"class.ppapi::Var"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %24, i64 9
  %26 = load void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %25, align 8
  tail call void %26(%"class.ppapi::Var"* nonnull %22) #14
  br label %27

27:                                               ; preds = %2, %9, %20
  %28 = phi i64 [ %14, %9 ], [ %14, %20 ], [ -6148914694099828736, %2 ]
  %29 = phi i64 [ %13, %9 ], [ %13, %20 ], [ 1, %2 ]
  %30 = insertvalue { i64, i64 } undef, i64 %29, 0
  %31 = insertvalue { i64, i64 } %30, i64 %28, 1
  ret { i64, i64 } %31
}

declare { i64, i64 } @_ZN5ppapi3Var8GetPPVarEv(%"class.ppapi::Var"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5ppapi10VarTracker20MakeArrayBufferPPVarEjPKv(%"class.ppapi::VarTracker"*, i32, i8* nocapture readonly) local_unnamed_addr #2 align 2 {
  %4 = bitcast %"class.ppapi::VarTracker"* %0 to %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)***
  %5 = load %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)**, %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)*** %4, align 8
  %6 = getelementptr inbounds %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)*, %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)** %5, i64 11
  %7 = load %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)*, %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)** %6, align 8
  %8 = tail call %"class.ppapi::ArrayBufferVar"* %7(%"class.ppapi::VarTracker"* %0, i32 %1) #14
  %9 = icmp eq %"class.ppapi::ArrayBufferVar"* %8, null
  br i1 %9, label %21, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.ppapi::ArrayBufferVar"* %8 to i8* (%"class.ppapi::ArrayBufferVar"*)***
  %12 = load i8* (%"class.ppapi::ArrayBufferVar"*)**, i8* (%"class.ppapi::ArrayBufferVar"*)*** %11, align 8
  %13 = getelementptr inbounds i8* (%"class.ppapi::ArrayBufferVar"*)*, i8* (%"class.ppapi::ArrayBufferVar"*)** %12, i64 10
  %14 = load i8* (%"class.ppapi::ArrayBufferVar"*)*, i8* (%"class.ppapi::ArrayBufferVar"*)** %13, align 8
  %15 = tail call i8* %14(%"class.ppapi::ArrayBufferVar"* nonnull %8) #14
  %16 = zext i32 %1 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %2, i64 %16, i1 false) #14
  %17 = getelementptr inbounds %"class.ppapi::ArrayBufferVar", %"class.ppapi::ArrayBufferVar"* %8, i64 0, i32 0
  %18 = tail call { i64, i64 } @_ZN5ppapi3Var8GetPPVarEv(%"class.ppapi::Var"* %17) #14
  %19 = extractvalue { i64, i64 } %18, 0
  %20 = extractvalue { i64, i64 } %18, 1
  br label %21

21:                                               ; preds = %3, %10
  %22 = phi i64 [ %19, %10 ], [ 1, %3 ]
  %23 = phi i64 [ %20, %10 ], [ -6148914694099828736, %3 ]
  %24 = insertvalue { i64, i64 } undef, i64 %22, 0
  %25 = insertvalue { i64, i64 } %24, i64 %23, 1
  ret { i64, i64 } %25
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.ppapi::ArrayBufferVar"* @_ZN5ppapi10VarTracker18MakeArrayBufferVarEjPKv(%"class.ppapi::VarTracker"*, i32, i8* nocapture readonly) local_unnamed_addr #2 align 2 {
  %4 = bitcast %"class.ppapi::VarTracker"* %0 to %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)***
  %5 = load %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)**, %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)*** %4, align 8
  %6 = getelementptr inbounds %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)*, %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)** %5, i64 11
  %7 = load %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)*, %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32)** %6, align 8
  %8 = tail call %"class.ppapi::ArrayBufferVar"* %7(%"class.ppapi::VarTracker"* %0, i32 %1) #14
  %9 = icmp eq %"class.ppapi::ArrayBufferVar"* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.ppapi::ArrayBufferVar"* %8 to i8* (%"class.ppapi::ArrayBufferVar"*)***
  %12 = load i8* (%"class.ppapi::ArrayBufferVar"*)**, i8* (%"class.ppapi::ArrayBufferVar"*)*** %11, align 8
  %13 = getelementptr inbounds i8* (%"class.ppapi::ArrayBufferVar"*)*, i8* (%"class.ppapi::ArrayBufferVar"*)** %12, i64 10
  %14 = load i8* (%"class.ppapi::ArrayBufferVar"*)*, i8* (%"class.ppapi::ArrayBufferVar"*)** %13, align 8
  %15 = tail call i8* %14(%"class.ppapi::ArrayBufferVar"* nonnull %8) #14
  %16 = zext i32 %1 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 %2, i64 %16, i1 false)
  br label %17

17:                                               ; preds = %3, %10
  ret %"class.ppapi::ArrayBufferVar"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5ppapi10VarTracker20MakeArrayBufferPPVarEjN4base24UnsafeSharedMemoryRegionE(%"class.ppapi::VarTracker"*, i32, %"class.base::UnsafeSharedMemoryRegion"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.base::UnsafeSharedMemoryRegion", align 8
  call void @_ZN4base24UnsafeSharedMemoryRegionC1EOS0_(%"class.base::UnsafeSharedMemoryRegion"* nonnull %4, %"class.base::UnsafeSharedMemoryRegion"* dereferenceable(64) %2) #14
  %5 = bitcast %"class.ppapi::VarTracker"* %0 to %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32, %"class.base::UnsafeSharedMemoryRegion"*)***
  %6 = load %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32, %"class.base::UnsafeSharedMemoryRegion"*)**, %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32, %"class.base::UnsafeSharedMemoryRegion"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32, %"class.base::UnsafeSharedMemoryRegion"*)*, %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32, %"class.base::UnsafeSharedMemoryRegion"*)** %6, i64 12
  %8 = load %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32, %"class.base::UnsafeSharedMemoryRegion"*)*, %"class.ppapi::ArrayBufferVar"* (%"class.ppapi::VarTracker"*, i32, %"class.base::UnsafeSharedMemoryRegion"*)** %7, align 8
  %9 = call %"class.ppapi::ArrayBufferVar"* %8(%"class.ppapi::VarTracker"* %0, i32 %1, %"class.base::UnsafeSharedMemoryRegion"* nonnull %4) #14
  %10 = icmp eq %"class.ppapi::ArrayBufferVar"* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %3
  call void @_ZN4base24UnsafeSharedMemoryRegionD1Ev(%"class.base::UnsafeSharedMemoryRegion"* nonnull %4) #14
  br label %30

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.ppapi::ArrayBufferVar", %"class.ppapi::ArrayBufferVar"* %9, i64 0, i32 0, i32 1, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %13) #14
  call void @_ZN4base24UnsafeSharedMemoryRegionD1Ev(%"class.base::UnsafeSharedMemoryRegion"* nonnull %4) #14
  %14 = getelementptr inbounds %"class.ppapi::ArrayBufferVar", %"class.ppapi::ArrayBufferVar"* %9, i64 0, i32 0
  %15 = call { i64, i64 } @_ZN5ppapi3Var8GetPPVarEv(%"class.ppapi::Var"* %14) #14
  %16 = extractvalue { i64, i64 } %15, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = getelementptr inbounds %"class.ppapi::ArrayBufferVar", %"class.ppapi::ArrayBufferVar"* %9, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %18, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #14
  %20 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %18, i64 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %30

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %18, i64 -2
  %25 = bitcast %"class.base::RefCounted"* %24 to %"class.ppapi::Var"*
  %26 = bitcast %"class.base::RefCounted"* %24 to void (%"class.ppapi::Var"*)***
  %27 = load void (%"class.ppapi::Var"*)**, void (%"class.ppapi::Var"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %27, i64 9
  %29 = load void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %28, align 8
  call void %29(%"class.ppapi::Var"* nonnull %25) #14
  br label %30

30:                                               ; preds = %11, %12, %23
  %31 = phi i64 [ -6148914694099828736, %11 ], [ %17, %12 ], [ %17, %23 ]
  %32 = phi i64 [ 1, %11 ], [ %16, %12 ], [ %16, %23 ]
  %33 = insertvalue { i64, i64 } undef, i64 %32, 0
  %34 = insertvalue { i64, i64 } %33, i64 %31, 1
  ret { i64, i64 } %34
}

declare void @_ZN4base24UnsafeSharedMemoryRegionC1EOS0_(%"class.base::UnsafeSharedMemoryRegion"*, %"class.base::UnsafeSharedMemoryRegion"* dereferenceable(64)) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN4base24UnsafeSharedMemoryRegionD1Ev(%"class.base::UnsafeSharedMemoryRegion"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5ppapi10VarTracker17MakeResourcePPVarEi(%"class.ppapi::VarTracker"*, i32) local_unnamed_addr #2 align 2 {
  %3 = bitcast %"class.ppapi::VarTracker"* %0 to %"class.ppapi::ResourceVar"* (%"class.ppapi::VarTracker"*, i32)***
  %4 = load %"class.ppapi::ResourceVar"* (%"class.ppapi::VarTracker"*, i32)**, %"class.ppapi::ResourceVar"* (%"class.ppapi::VarTracker"*, i32)*** %3, align 8
  %5 = getelementptr inbounds %"class.ppapi::ResourceVar"* (%"class.ppapi::VarTracker"*, i32)*, %"class.ppapi::ResourceVar"* (%"class.ppapi::VarTracker"*, i32)** %4, i64 3
  %6 = load %"class.ppapi::ResourceVar"* (%"class.ppapi::VarTracker"*, i32)*, %"class.ppapi::ResourceVar"* (%"class.ppapi::VarTracker"*, i32)** %5, align 8
  %7 = tail call %"class.ppapi::ResourceVar"* %6(%"class.ppapi::VarTracker"* %0, i32 %1) #14
  %8 = icmp eq %"class.ppapi::ResourceVar"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.ppapi::ResourceVar", %"class.ppapi::ResourceVar"* %7, i64 0, i32 0
  %11 = tail call { i64, i64 } @_ZN5ppapi3Var8GetPPVarEv(%"class.ppapi::Var"* %10) #14
  %12 = extractvalue { i64, i64 } %11, 0
  %13 = extractvalue { i64, i64 } %11, 1
  br label %14

14:                                               ; preds = %2, %9
  %15 = phi i64 [ %12, %9 ], [ 1, %2 ]
  %16 = phi i64 [ %13, %9 ], [ -6148914694099828736, %2 ]
  %17 = insertvalue { i64, i64 } undef, i64 %15, 0
  %18 = insertvalue { i64, i64 } %17, i64 %16, 1
  ret { i64, i64 } %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi10VarTracker11GetLiveVarsEv(%"class.std::__1::vector"* noalias sret, %"class.ppapi::VarTracker"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %5 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #14
  %6 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %1, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %struct.PP_Var** %4 to i64*
  %9 = bitcast %"class.std::__1::vector"* %0 to i64*
  %10 = icmp eq i64 %7, 0
  br i1 %10, label %23, label %11

11:                                               ; preds = %2
  %12 = icmp ugt i64 %7, 1152921504606846975
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  tail call void @abort() #16
  unreachable

14:                                               ; preds = %11
  %15 = bitcast %struct.PP_Var** %3 to i64*
  %16 = shl i64 %7, 4
  %17 = tail call i8* @_Znwm(i64 %16) #15
  %18 = bitcast i8* %17 to %struct.PP_Var*
  %19 = ptrtoint i8* %17 to i64
  %20 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %18, i64 %7
  %21 = ptrtoint %struct.PP_Var* %20 to i64
  %22 = ptrtoint i8* %17 to i64
  store i64 %22, i64* %9, align 8
  store i64 %19, i64* %15, align 8
  store i64 %21, i64* %8, align 8
  br label %23

23:                                               ; preds = %14, %2
  %24 = phi i64 [ 0, %2 ], [ %19, %14 ]
  %25 = phi %struct.PP_Var* [ null, %2 ], [ %20, %14 ]
  %26 = phi %struct.PP_Var* [ null, %2 ], [ %18, %14 ]
  %27 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = bitcast %"struct.std::__1::__hash_node_base"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %23
  %32 = bitcast %struct.PP_Var** %3 to i64*
  br label %34

33:                                               ; preds = %103, %23
  ret void

34:                                               ; preds = %107, %31
  %35 = phi i64 [ %24, %31 ], [ %110, %107 ]
  %36 = phi %struct.PP_Var* [ %25, %31 ], [ %109, %107 ]
  %37 = phi %struct.PP_Var* [ %26, %31 ], [ %108, %107 ]
  %38 = phi i64 [ %29, %31 ], [ %105, %107 ]
  %39 = inttoptr i64 %38 to %"struct.std::__1::__hash_node"*
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %39, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %41 = load %"class.ppapi::Var"*, %"class.ppapi::Var"** %40, align 8
  %42 = tail call { i64, i64 } @_ZN5ppapi3Var8GetPPVarEv(%"class.ppapi::Var"* %41) #14
  %43 = extractvalue { i64, i64 } %42, 0
  %44 = extractvalue { i64, i64 } %42, 1
  %45 = icmp ult %struct.PP_Var* %37, %36
  %46 = ptrtoint %struct.PP_Var* %36 to i64
  br i1 %45, label %47, label %53

47:                                               ; preds = %34
  %48 = bitcast %struct.PP_Var* %37 to i64*
  store i64 %43, i64* %48, align 8
  %49 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %37, i64 0, i32 2
  %50 = bitcast %union.PP_VarValue* %49 to i64*
  store i64 %44, i64* %50, align 8
  %51 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %37, i64 1
  %52 = ptrtoint %struct.PP_Var* %51 to i64
  store i64 %52, i64* %32, align 8
  br label %103

53:                                               ; preds = %34
  %54 = ptrtoint %struct.PP_Var* %37 to i64
  %55 = load i64, i64* %9, align 8
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 4
  %58 = add nsw i64 %57, 1
  %59 = icmp ugt i64 %58, 1152921504606846975
  br i1 %59, label %60, label %62

60:                                               ; preds = %53
  %61 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %61) #16
  unreachable

62:                                               ; preds = %53
  %63 = sub i64 %46, %55
  %64 = ashr exact i64 %63, 4
  %65 = icmp ult i64 %64, 576460752303423487
  br i1 %65, label %66, label %74

66:                                               ; preds = %62
  %67 = ashr exact i64 %63, 3
  %68 = icmp ult i64 %67, %58
  %69 = select i1 %68, i64 %58, i64 %67
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %79, label %71

71:                                               ; preds = %66
  %72 = icmp ugt i64 %69, 1152921504606846975
  br i1 %72, label %73, label %74

73:                                               ; preds = %71
  tail call void @abort() #16
  unreachable

74:                                               ; preds = %71, %62
  %75 = phi i64 [ %69, %71 ], [ 1152921504606846975, %62 ]
  %76 = shl i64 %75, 4
  %77 = tail call i8* @_Znwm(i64 %76) #15
  %78 = bitcast i8* %77 to %struct.PP_Var*
  br label %79

79:                                               ; preds = %74, %66
  %80 = phi i64 [ %75, %74 ], [ 0, %66 ]
  %81 = phi %struct.PP_Var* [ %78, %74 ], [ null, %66 ]
  %82 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %81, i64 %57
  %83 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %81, i64 %80
  %84 = ptrtoint %struct.PP_Var* %83 to i64
  %85 = bitcast %struct.PP_Var* %82 to i64*
  store i64 %43, i64* %85, align 8
  %86 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %81, i64 %57, i32 2
  %87 = bitcast %union.PP_VarValue* %86 to i64*
  store i64 %44, i64* %87, align 8
  %88 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %82, i64 1
  %89 = ptrtoint %struct.PP_Var* %88 to i64
  %90 = sub i64 %35, %55
  %91 = ashr exact i64 %90, 4
  %92 = sub nsw i64 0, %91
  %93 = getelementptr inbounds %struct.PP_Var, %struct.PP_Var* %82, i64 %92
  %94 = ptrtoint %struct.PP_Var* %93 to i64
  %95 = icmp sgt i64 %90, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %79
  %97 = bitcast %struct.PP_Var* %93 to i8*
  %98 = inttoptr i64 %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %97, i8* align 8 %98, i64 %90, i1 false) #14
  br label %99

99:                                               ; preds = %96, %79
  store i64 %94, i64* %9, align 8
  store i64 %89, i64* %32, align 8
  store i64 %84, i64* %8, align 8
  %100 = icmp eq i64 %55, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %99
  %102 = inttoptr i64 %55 to i8*
  tail call void @_ZdlPv(i8* %102) #15
  br label %103

103:                                              ; preds = %47, %99, %101
  %104 = inttoptr i64 %38 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %33, label %107

107:                                              ; preds = %103
  %108 = load %struct.PP_Var*, %struct.PP_Var** %3, align 8
  %109 = load %struct.PP_Var*, %struct.PP_Var** %4, align 8
  %110 = ptrtoint %struct.PP_Var* %108 to i64
  br label %34
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5ppapi10VarTracker26TrackedObjectGettingOneRefENSt3__125__hash_map_const_iteratorINS1_21__hash_const_iteratorIPNS1_11__hash_nodeINS1_17__hash_value_typeIiNS0_7VarInfoEEEPvEEEEEE(%"class.ppapi::VarTracker"* nocapture, %"struct.std::__1::__hash_node_base"* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5ppapi10VarTracker20ObjectGettingZeroRefENSt3__119__hash_map_iteratorINS1_15__hash_iteratorIPNS1_11__hash_nodeINS1_17__hash_value_typeIiNS0_7VarInfoEEEPvEEEEEE(%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*) unnamed_addr #2 align 2 {
  %3 = bitcast %"class.ppapi::VarTracker"* %0 to i1 (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)***
  %4 = load i1 (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)**, i1 (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)*, i1 (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)** %4, i64 10
  %6 = load i1 (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)*, i1 (%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.ppapi::VarTracker"* %0, %"struct.std::__1::__hash_node_base"* %1) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5ppapi10VarTracker27DeleteObjectInfoIfNecessaryENSt3__119__hash_map_iteratorINS1_15__hash_iteratorIPNS1_11__hash_nodeINS1_17__hash_value_typeIiNS0_7VarInfoEEEPvEEEEEE(%"class.ppapi::VarTracker"*, %"struct.std::__1::__hash_node_base"*) unnamed_addr #2 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.31", align 8
  %4 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %1, i64 4
  %5 = bitcast %"struct.std::__1::__hash_node_base"* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %48

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %1, i64 2
  %10 = bitcast %"struct.std::__1::__hash_node_base"* %9 to %"struct.std::__1::pair"*
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 1, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %48

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %1, i64 3
  %16 = bitcast %"struct.std::__1::__hash_node_base"* %15 to %"class.ppapi::Var"**
  %17 = load %"class.ppapi::Var"*, %"class.ppapi::Var"** %16, align 8
  %18 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %17, i64 0, i32 2
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"class.ppapi::VarTracker", %"class.ppapi::VarTracker"* %0, i64 0, i32 1, i32 0
  %20 = bitcast %"class.std::__1::unique_ptr.31"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #14
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN5ppapi10VarTracker7VarInfoEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEE(%"class.std::__1::unique_ptr.31"* nonnull sret %3, %"class.std::__1::__hash_table"* %19, %"struct.std::__1::__hash_node_base"* %1) #14
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %3, i64 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %21, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node"* %22, null
  br i1 %23, label %47, label %24

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %3, i64 0, i32 0, i32 1, i32 0, i32 1
  %26 = load i8, i8* %25, align 8, !range !3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %45, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %22, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %30 = load %"class.ppapi::Var"*, %"class.ppapi::Var"** %29, align 8
  %31 = icmp eq %"class.ppapi::Var"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.ppapi::Var", %"class.ppapi::Var"* %30, i64 0, i32 1
  %34 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %33, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %34) #14
  %35 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %33, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %33, i64 -2
  %40 = bitcast %"class.base::RefCounted"* %39 to %"class.ppapi::Var"*
  %41 = bitcast %"class.base::RefCounted"* %39 to void (%"class.ppapi::Var"*)***
  %42 = load void (%"class.ppapi::Var"*)**, void (%"class.ppapi::Var"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %42, i64 9
  %44 = load void (%"class.ppapi::Var"*)*, void (%"class.ppapi::Var"*)** %43, align 8
  call void %44(%"class.ppapi::Var"* nonnull %40) #14
  br label %45

45:                                               ; preds = %38, %32, %28, %24
  %46 = bitcast %"struct.std::__1::__hash_node"* %22 to i8*
  call void @_ZdlPv(i8* %46) #15
  br label %47

47:                                               ; preds = %14, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #14
  br label %48

48:                                               ; preds = %2, %8, %47
  %49 = phi i1 [ true, %47 ], [ false, %8 ], [ false, %2 ]
  ret i1 %49
}

declare void @__cxa_pure_virtual() unnamed_addr

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #7

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN5ppapi10VarTracker7VarInfoEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS5_PvEEEE(%"class.std::__1::unique_ptr.31"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #14, !range !2
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.4", %"class.std::__1::__compressed_pair.4"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.31"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.7"** %98 to %"class.std::__1::__compressed_pair.4"**
  store %"class.std::__1::__compressed_pair.4"* %30, %"class.std::__1::__compressed_pair.4"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN5ppapi10VarTracker7VarInfoEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIiJNS_4pairIiS4_EEEEENSI_INS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, i32* dereferenceable(4), %"struct.std::__1::pair.24"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #14, !range !2
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %147, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 40) #15, !noalias !7
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4, !noalias !7
  store i32 %59, i32* %57, align 8, !noalias !7
  %60 = getelementptr inbounds i8, i8* %55, i64 24
  %61 = getelementptr inbounds %"struct.std::__1::pair.24", %"struct.std::__1::pair.24"* %2, i64 0, i32 1
  %62 = getelementptr inbounds %"struct.ppapi::VarTracker::VarInfo", %"struct.ppapi::VarTracker::VarInfo"* %61, i64 0, i32 0, i32 0
  %63 = bitcast %"struct.ppapi::VarTracker::VarInfo"* %61 to <2 x i64>*
  %64 = load <2 x i64>, <2 x i64>* %63, align 8, !noalias !7
  store %"class.ppapi::Var"* null, %"class.ppapi::Var"** %62, align 8, !noalias !7
  %65 = bitcast i8* %60 to <2 x i64>*
  store <2 x i64> %64, <2 x i64>* %65, align 8, !noalias !7
  %66 = getelementptr inbounds i8, i8* %55, i64 8
  %67 = bitcast i8* %66 to i64*
  store i64 %5, i64* %67, align 8, !noalias !7
  %68 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %68, align 8, !noalias !7
  %69 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  %72 = uitofp i64 %71 to float
  %73 = uitofp i64 %7 to float
  %74 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %73
  %77 = fcmp olt float %76, %72
  %78 = or i1 %8, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %53
  %80 = shl i64 %7, 1
  %81 = icmp ult i64 %7, 3
  %82 = tail call i64 @llvm.ctpop.i64(i64 %7) #14, !range !2
  %83 = icmp ugt i64 %82, 1
  %84 = or i1 %81, %83
  %85 = zext i1 %84 to i64
  %86 = or i64 %80, %85
  %87 = fdiv float %72, %75
  %88 = tail call float @llvm.ceil.f32(float %87) #14
  %89 = fptoui float %88 to i64
  %90 = icmp ult i64 %86, %89
  %91 = select i1 %90, i64 %89, i64 %86
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN5ppapi10VarTracker7VarInfoEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %91)
  %92 = load i64, i64* %6, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #14, !range !2
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %79
  %96 = add i64 %92, -1
  %97 = and i64 %96, %5
  br label %102

98:                                               ; preds = %79
  %99 = icmp ugt i64 %92, %5
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %5, %92
  br label %102

102:                                              ; preds = %100, %98, %95, %53
  %103 = phi i64 [ %7, %53 ], [ %92, %95 ], [ %92, %98 ], [ %92, %100 ]
  %104 = phi i64 [ %54, %53 ], [ %97, %95 ], [ %5, %98 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base"* %108, null
  br i1 %109, label %110, label %136

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %112 = bitcast %"struct.std::__1::__hash_node_base"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8* %55 to i64*
  store i64 %113, i64* %114, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base"* %111 to i8**
  store i8* %55, i8** %115, align 8
  store %"struct.std::__1::__hash_node_base"* %111, %"struct.std::__1::__hash_node_base"** %107, align 8
  %116 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %68, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base"* %116, null
  br i1 %117, label %143, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %116, i64 1
  %120 = bitcast %"struct.std::__1::__hash_node_base"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = tail call i64 @llvm.ctpop.i64(i64 %103) #14, !range !2
  %123 = icmp ugt i64 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = add i64 %103, -1
  %126 = and i64 %121, %125
  br label %131

127:                                              ; preds = %118
  %128 = icmp ult i64 %121, %103
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %121, %103
  br label %131

131:                                              ; preds = %124, %127, %129
  %132 = phi i64 [ %126, %124 ], [ %130, %129 ], [ %121, %127 ]
  %133 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %105, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %133, i64 %132
  %135 = bitcast %"struct.std::__1::__hash_node_base"** %134 to i8**
  br label %141

136:                                              ; preds = %102
  %137 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8* %55 to i64*
  store i64 %138, i64* %139, align 8
  %140 = bitcast %"struct.std::__1::__hash_node_base"* %108 to i8**
  br label %141

141:                                              ; preds = %131, %136
  %142 = phi i8** [ %140, %136 ], [ %135, %131 ]
  store i8* %55, i8** %142, align 8
  br label %143

143:                                              ; preds = %141, %110
  %144 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base"*
  %145 = load i64, i64* %69, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %69, align 8
  br label %147

147:                                              ; preds = %48, %143
  %148 = phi i8 [ 1, %143 ], [ 0, %48 ]
  %149 = phi %"struct.std::__1::__hash_node_base"* [ %144, %143 ], [ %31, %48 ]
  %150 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %149, 0
  %151 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %150, i8 %148, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN5ppapi10VarTracker7VarInfoEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !2
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #14
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN5ppapi10VarTracker7VarInfoEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #14, !range !2
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #14
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #14, !range !2
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #14
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN5ppapi10VarTracker7VarInfoEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN5ppapi10VarTracker7VarInfoEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #15
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #15
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !10

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #14, !range !2
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %135, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #15
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #12

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #12

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #12

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind readnone speculatable }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i64 0, i64 65}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNSt3__19make_pairIRiN5ppapi10VarTracker7VarInfoEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__19make_pairIRiN5ppapi10VarTracker7VarInfoEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS6_IT0_E4typeEEEOS7_OSA_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN5ppapi10VarTracker7VarInfoEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE21__construct_node_hashINS_4pairIiS4_EEJEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSE_ISN_EEEEEEmOT_DpOT0_: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIiN5ppapi10VarTracker7VarInfoEEENS_22__unordered_map_hasherIiS5_NS_4hashIiEENS_8equal_toIiEELb1EEENS_21__unordered_map_equalIiS5_SA_S8_Lb1EEENS_9allocatorIS5_EEE21__construct_node_hashINS_4pairIiS4_EEJEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSE_ISN_EEEEEEmOT_DpOT0_"}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
