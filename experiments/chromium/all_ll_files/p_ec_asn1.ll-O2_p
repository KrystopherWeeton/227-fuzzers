; ModuleID = '../../third_party/boringssl/src/crypto/evp/p_ec_asn1.c'
source_filename = "../../third_party/boringssl/src/crypto/evp/p_ec_asn1.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type { i32, [9 x i8], i8, {}*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, {}*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)* }
%struct.cbs_st = type { i8*, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%struct.ec_group_st = type opaque
%struct.ec_key_st = type opaque
%struct.ec_point_st = type opaque
%struct.bignum_ctx = type opaque
%struct.bignum_st = type { i64*, i32, i32, i32, i32 }

@ec_asn1_meth = hidden constant { i32, [9 x i8], i8, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)* } { i32 408, [9 x i8] c"*\86H\CE=\02\01\00\00", i8 7, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)* @eckey_pub_decode, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)* @eckey_pub_encode, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)* @eckey_pub_cmp, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)* @eckey_priv_decode, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)* @eckey_priv_encode, i32 (%struct.evp_pkey_st*, i8*, i64)* null, i32 (%struct.evp_pkey_st*, i8*, i64)* null, i32 (%struct.evp_pkey_st*, i8*, i64*)* null, i32 (%struct.evp_pkey_st*, i8*, i64*)* null, i32 (%struct.evp_pkey_st*)* @eckey_opaque, i32 (%struct.evp_pkey_st*)* @int_ec_size, i32 (%struct.evp_pkey_st*)* @ec_bits, i32 (%struct.evp_pkey_st*)* @ec_missing_parameters, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)* @ec_copy_parameters, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)* @ec_cmp_parameters, void (%struct.evp_pkey_st*)* @int_ec_free }, align 8
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/boringssl/src/crypto/evp/p_ec_asn1.c\00", align 1

; Function Attrs: nounwind ssp uwtable
define internal i32 @eckey_pub_decode(%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*) #0 {
  %4 = tail call %struct.ec_group_st* @EC_KEY_parse_curve_name(%struct.cbs_st* %1) #3
  %5 = icmp eq %struct.ec_group_st* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = tail call i64 @CBS_len(%struct.cbs_st* %1) #3
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6, %3
  tail call void @ERR_put_error(i32 6, i32 0, i32 102, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 100) #3
  br label %29

10:                                               ; preds = %6
  %11 = tail call %struct.ec_key_st* @EC_KEY_new() #3
  %12 = icmp eq %struct.ec_key_st* %11, null
  br i1 %12, label %29, label %13

13:                                               ; preds = %10
  %14 = tail call i32 @EC_KEY_set_group(%struct.ec_key_st* nonnull %11, %struct.ec_group_st* nonnull %4) #3
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %29, label %16

16:                                               ; preds = %13
  %17 = tail call %struct.ec_point_st* @EC_POINT_new(%struct.ec_group_st* nonnull %4) #3
  %18 = icmp eq %struct.ec_point_st* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %16
  %20 = tail call i8* @CBS_data(%struct.cbs_st* %2) #3
  %21 = tail call i64 @CBS_len(%struct.cbs_st* %2) #3
  %22 = tail call i32 @EC_POINT_oct2point(%struct.ec_group_st* nonnull %4, %struct.ec_point_st* nonnull %17, i8* %20, i64 %21, %struct.bignum_ctx* null) #3
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %19
  %25 = tail call i32 @EC_KEY_set_public_key(%struct.ec_key_st* nonnull %11, %struct.ec_point_st* nonnull %17) #3
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %24
  tail call void @EC_GROUP_free(%struct.ec_group_st* nonnull %4) #3
  tail call void @EC_POINT_free(%struct.ec_point_st* nonnull %17) #3
  %28 = tail call i32 @EVP_PKEY_assign_EC_KEY(%struct.evp_pkey_st* %0, %struct.ec_key_st* nonnull %11) #3
  br label %32

29:                                               ; preds = %24, %19, %13, %16, %10, %9
  %30 = phi %struct.ec_point_st* [ null, %9 ], [ null, %10 ], [ null, %16 ], [ %17, %24 ], [ %17, %19 ], [ null, %13 ]
  %31 = phi %struct.ec_key_st* [ null, %9 ], [ null, %10 ], [ %11, %16 ], [ %11, %24 ], [ %11, %19 ], [ %11, %13 ]
  tail call void @EC_GROUP_free(%struct.ec_group_st* %4) #3
  tail call void @EC_POINT_free(%struct.ec_point_st* %30) #3
  tail call void @EC_KEY_free(%struct.ec_key_st* %31) #3
  br label %32

32:                                               ; preds = %29, %27
  %33 = phi i32 [ 0, %29 ], [ 1, %27 ]
  ret i32 %33
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @eckey_pub_encode(%struct.cbb_st*, %struct.evp_pkey_st* nocapture readonly) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = alloca %struct.cbb_st, align 8
  %7 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 2
  %8 = bitcast %union.anon* %7 to %struct.ec_key_st**
  %9 = load %struct.ec_key_st*, %struct.ec_key_st** %8, align 8
  %10 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* %9) #3
  %11 = tail call %struct.ec_point_st* @EC_KEY_get0_public_key(%struct.ec_key_st* %9) #3
  %12 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = bitcast %struct.cbb_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %3, i32 536870928) #3
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %42, label %18

18:                                               ; preds = %2
  %19 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4, i32 536870928) #3
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %42, label %21

21:                                               ; preds = %18
  %22 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 6) #3
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %21
  %25 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %5, i8* getelementptr inbounds ({ i32, [9 x i8], i8, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)* }, { i32, [9 x i8], i8, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)* }* @ec_asn1_meth, i64 0, i32 1, i64 0), i64 7) #3
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %42, label %27

27:                                               ; preds = %24
  %28 = call i32 @EC_KEY_marshal_curve_name(%struct.cbb_st* nonnull %4, %struct.ec_group_st* %10) #3
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %42, label %30

30:                                               ; preds = %27
  %31 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %6, i32 3) #3
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = call i32 @CBB_add_u8(%struct.cbb_st* nonnull %6, i8 zeroext 0) #3
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %42, label %36

36:                                               ; preds = %33
  %37 = call i32 @EC_POINT_point2cbb(%struct.cbb_st* nonnull %6, %struct.ec_group_st* %10, %struct.ec_point_st* %11, i32 4, %struct.bignum_ctx* null) #3
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %36
  %40 = call i32 @CBB_flush(%struct.cbb_st* %0) #3
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39, %36, %33, %30, %27, %24, %21, %18, %2
  call void @ERR_put_error(i32 6, i32 0, i32 105, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 85) #3
  br label %43

43:                                               ; preds = %39, %42
  %44 = phi i32 [ 0, %42 ], [ 1, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #3
  ret i32 %44
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @eckey_pub_cmp(%struct.evp_pkey_st* nocapture readonly, %struct.evp_pkey_st* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 2
  %4 = bitcast %union.anon* %3 to %struct.ec_key_st**
  %5 = load %struct.ec_key_st*, %struct.ec_key_st** %4, align 8
  %6 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* %5) #3
  %7 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2
  %8 = bitcast %union.anon* %7 to %struct.ec_key_st**
  %9 = load %struct.ec_key_st*, %struct.ec_key_st** %8, align 8
  %10 = tail call %struct.ec_point_st* @EC_KEY_get0_public_key(%struct.ec_key_st* %9) #3
  %11 = load %struct.ec_key_st*, %struct.ec_key_st** %4, align 8
  %12 = tail call %struct.ec_point_st* @EC_KEY_get0_public_key(%struct.ec_key_st* %11) #3
  %13 = tail call i32 @EC_POINT_cmp(%struct.ec_group_st* %6, %struct.ec_point_st* %10, %struct.ec_point_st* %12, %struct.bignum_ctx* null) #3
  %14 = icmp eq i32 %13, 1
  %15 = select i1 %14, i32 0, i32 -2
  %16 = icmp eq i32 %13, 0
  %17 = select i1 %16, i32 1, i32 %15
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @eckey_priv_decode(%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*) #0 {
  %4 = tail call %struct.ec_group_st* @EC_KEY_parse_parameters(%struct.cbs_st* %1) #3
  %5 = icmp eq %struct.ec_group_st* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = tail call i64 @CBS_len(%struct.cbs_st* %1) #3
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %6, %3
  tail call void @ERR_put_error(i32 6, i32 0, i32 102, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 147) #3
  tail call void @EC_GROUP_free(%struct.ec_group_st* %4) #3
  br label %19

10:                                               ; preds = %6
  %11 = tail call %struct.ec_key_st* @EC_KEY_parse_private_key(%struct.cbs_st* %2, %struct.ec_group_st* nonnull %4) #3
  tail call void @EC_GROUP_free(%struct.ec_group_st* nonnull %4) #3
  %12 = icmp eq %struct.ec_key_st* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = tail call i64 @CBS_len(%struct.cbs_st* %2) #3
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %13, %10
  tail call void @ERR_put_error(i32 6, i32 0, i32 102, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 155) #3
  tail call void @EC_KEY_free(%struct.ec_key_st* %11) #3
  br label %19

17:                                               ; preds = %13
  %18 = tail call i32 @EVP_PKEY_assign_EC_KEY(%struct.evp_pkey_st* %0, %struct.ec_key_st* nonnull %11) #3
  br label %19

19:                                               ; preds = %16, %17, %9
  %20 = phi i32 [ 0, %9 ], [ 0, %16 ], [ 1, %17 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @eckey_priv_encode(%struct.cbb_st*, %struct.evp_pkey_st* nocapture readonly) #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = alloca %struct.cbb_st, align 8
  %5 = alloca %struct.cbb_st, align 8
  %6 = alloca %struct.cbb_st, align 8
  %7 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 2
  %8 = bitcast %union.anon* %7 to %struct.ec_key_st**
  %9 = load %struct.ec_key_st*, %struct.ec_key_st** %8, align 8
  %10 = tail call i32 @EC_KEY_get_enc_flags(%struct.ec_key_st* %9) #3
  %11 = or i32 %10, 1
  %12 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = bitcast %struct.cbb_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  %14 = bitcast %struct.cbb_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = bitcast %struct.cbb_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = call i32 @CBB_add_asn1(%struct.cbb_st* %0, %struct.cbb_st* nonnull %3, i32 536870928) #3
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %43, label %18

18:                                               ; preds = %2
  %19 = call i32 @CBB_add_asn1_uint64(%struct.cbb_st* nonnull %3, i64 0) #3
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %43, label %21

21:                                               ; preds = %18
  %22 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %4, i32 536870928) #3
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %43, label %24

24:                                               ; preds = %21
  %25 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %4, %struct.cbb_st* nonnull %5, i32 6) #3
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %43, label %27

27:                                               ; preds = %24
  %28 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %5, i8* getelementptr inbounds ({ i32, [9 x i8], i8, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)* }, { i32, [9 x i8], i8, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)* }* @ec_asn1_meth, i64 0, i32 1, i64 0), i64 7) #3
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %43, label %30

30:                                               ; preds = %27
  %31 = call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* %9) #3
  %32 = call i32 @EC_KEY_marshal_curve_name(%struct.cbb_st* nonnull %4, %struct.ec_group_st* %31) #3
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %43, label %34

34:                                               ; preds = %30
  %35 = call i32 @CBB_add_asn1(%struct.cbb_st* nonnull %3, %struct.cbb_st* nonnull %6, i32 4) #3
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %43, label %37

37:                                               ; preds = %34
  %38 = call i32 @EC_KEY_marshal_private_key(%struct.cbb_st* nonnull %6, %struct.ec_key_st* %9, i32 %11) #3
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = call i32 @CBB_flush(%struct.cbb_st* %0) #3
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40, %37, %34, %30, %27, %24, %21, %18, %2
  call void @ERR_put_error(i32 6, i32 0, i32 105, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 184) #3
  br label %44

44:                                               ; preds = %40, %43
  %45 = phi i32 [ 0, %43 ], [ 1, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #3
  ret i32 %45
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @eckey_opaque(%struct.evp_pkey_st* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2
  %3 = bitcast %union.anon* %2 to %struct.ec_key_st**
  %4 = load %struct.ec_key_st*, %struct.ec_key_st** %3, align 8
  %5 = tail call i32 @EC_KEY_is_opaque(%struct.ec_key_st* %4) #3
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @int_ec_size(%struct.evp_pkey_st* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2
  %3 = bitcast %union.anon* %2 to %struct.ec_key_st**
  %4 = load %struct.ec_key_st*, %struct.ec_key_st** %3, align 8
  %5 = tail call i64 @ECDSA_size(%struct.ec_key_st* %4) #3
  %6 = trunc i64 %5 to i32
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ec_bits(%struct.evp_pkey_st* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2
  %3 = bitcast %union.anon* %2 to %struct.ec_key_st**
  %4 = load %struct.ec_key_st*, %struct.ec_key_st** %3, align 8
  %5 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* %4) #3
  %6 = icmp eq %struct.ec_group_st* %5, null
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  tail call void @ERR_clear_error() #3
  br label %11

8:                                                ; preds = %1
  %9 = tail call %struct.bignum_st* @EC_GROUP_get0_order(%struct.ec_group_st* nonnull %5) #3
  %10 = tail call i32 @BN_num_bits(%struct.bignum_st* %9) #3
  br label %11

11:                                               ; preds = %8, %7
  %12 = phi i32 [ 0, %7 ], [ %10, %8 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ec_missing_parameters(%struct.evp_pkey_st* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2
  %3 = bitcast %union.anon* %2 to %struct.ec_key_st**
  %4 = load %struct.ec_key_st*, %struct.ec_key_st** %3, align 8
  %5 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* %4) #3
  %6 = icmp eq %struct.ec_group_st* %5, null
  %7 = zext i1 %6 to i32
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ec_copy_parameters(%struct.evp_pkey_st* nocapture readonly, %struct.evp_pkey_st* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2
  %4 = bitcast %union.anon* %3 to %struct.ec_key_st**
  %5 = load %struct.ec_key_st*, %struct.ec_key_st** %4, align 8
  %6 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 2
  %7 = bitcast %union.anon* %6 to %struct.ec_key_st**
  %8 = load %struct.ec_key_st*, %struct.ec_key_st** %7, align 8
  %9 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* %8) #3
  %10 = tail call i32 @EC_KEY_set_group(%struct.ec_key_st* %5, %struct.ec_group_st* %9) #3
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @ec_cmp_parameters(%struct.evp_pkey_st* nocapture readonly, %struct.evp_pkey_st* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2
  %4 = bitcast %union.anon* %3 to %struct.ec_key_st**
  %5 = load %struct.ec_key_st*, %struct.ec_key_st** %4, align 8
  %6 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* %5) #3
  %7 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 2
  %8 = bitcast %union.anon* %7 to %struct.ec_key_st**
  %9 = load %struct.ec_key_st*, %struct.ec_key_st** %8, align 8
  %10 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* %9) #3
  %11 = tail call i32 @EC_GROUP_cmp(%struct.ec_group_st* %6, %struct.ec_group_st* %10, %struct.bignum_ctx* null) #3
  %12 = icmp eq i32 %11, 0
  %13 = zext i1 %12 to i32
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define internal void @int_ec_free(%struct.evp_pkey_st* nocapture readonly) #0 {
  %2 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2
  %3 = bitcast %union.anon* %2 to %struct.ec_key_st**
  %4 = load %struct.ec_key_st*, %struct.ec_key_st** %3, align 8
  tail call void @EC_KEY_free(%struct.ec_key_st* %4) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.ec_group_st* @EC_KEY_parse_curve_name(%struct.cbs_st*) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare %struct.ec_key_st* @EC_KEY_new() local_unnamed_addr #2

declare i32 @EC_KEY_set_group(%struct.ec_key_st*, %struct.ec_group_st*) local_unnamed_addr #2

declare %struct.ec_point_st* @EC_POINT_new(%struct.ec_group_st*) local_unnamed_addr #2

declare i32 @EC_POINT_oct2point(%struct.ec_group_st*, %struct.ec_point_st*, i8*, i64, %struct.bignum_ctx*) local_unnamed_addr #2

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #2

declare i32 @EC_KEY_set_public_key(%struct.ec_key_st*, %struct.ec_point_st*) local_unnamed_addr #2

declare void @EC_GROUP_free(%struct.ec_group_st*) local_unnamed_addr #2

declare void @EC_POINT_free(%struct.ec_point_st*) local_unnamed_addr #2

declare i32 @EVP_PKEY_assign_EC_KEY(%struct.evp_pkey_st*, %struct.ec_key_st*) local_unnamed_addr #2

declare void @EC_KEY_free(%struct.ec_key_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st*) local_unnamed_addr #2

declare %struct.ec_point_st* @EC_KEY_get0_public_key(%struct.ec_key_st*) local_unnamed_addr #2

declare i32 @CBB_add_asn1(%struct.cbb_st*, %struct.cbb_st*, i32) local_unnamed_addr #2

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #2

declare i32 @EC_KEY_marshal_curve_name(%struct.cbb_st*, %struct.ec_group_st*) local_unnamed_addr #2

declare i32 @CBB_add_u8(%struct.cbb_st*, i8 zeroext) local_unnamed_addr #2

declare i32 @EC_POINT_point2cbb(%struct.cbb_st*, %struct.ec_group_st*, %struct.ec_point_st*, i32, %struct.bignum_ctx*) local_unnamed_addr #2

declare i32 @CBB_flush(%struct.cbb_st*) local_unnamed_addr #2

declare i32 @EC_POINT_cmp(%struct.ec_group_st*, %struct.ec_point_st*, %struct.ec_point_st*, %struct.bignum_ctx*) local_unnamed_addr #2

declare %struct.ec_group_st* @EC_KEY_parse_parameters(%struct.cbs_st*) local_unnamed_addr #2

declare %struct.ec_key_st* @EC_KEY_parse_private_key(%struct.cbs_st*, %struct.ec_group_st*) local_unnamed_addr #2

declare i32 @EC_KEY_get_enc_flags(%struct.ec_key_st*) local_unnamed_addr #2

declare i32 @CBB_add_asn1_uint64(%struct.cbb_st*, i64) local_unnamed_addr #2

declare i32 @EC_KEY_marshal_private_key(%struct.cbb_st*, %struct.ec_key_st*, i32) local_unnamed_addr #2

declare i32 @EC_KEY_is_opaque(%struct.ec_key_st*) local_unnamed_addr #2

declare i64 @ECDSA_size(%struct.ec_key_st*) local_unnamed_addr #2

declare void @ERR_clear_error() local_unnamed_addr #2

declare i32 @BN_num_bits(%struct.bignum_st*) local_unnamed_addr #2

declare %struct.bignum_st* @EC_GROUP_get0_order(%struct.ec_group_st*) local_unnamed_addr #2

declare i32 @EC_GROUP_cmp(%struct.ec_group_st*, %struct.ec_group_st*, %struct.bignum_ctx*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
