; ModuleID = '../../third_party/skia/src/core/SkTSearch.cpp'
source_filename = "../../third_party/skia/src/core/SkTSearch.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.SkAutoAsciiToLC = type <{ i8*, i64, [65 x i8], [7 x i8] }>

@_ZN15SkAutoAsciiToLCC1EPKcm = hidden unnamed_addr alias void (%class.SkAutoAsciiToLC*, i8*, i64), void (%class.SkAutoAsciiToLC*, i8*, i64)* @_ZN15SkAutoAsciiToLCC2EPKcm
@_ZN15SkAutoAsciiToLCD1Ev = hidden unnamed_addr alias void (%class.SkAutoAsciiToLC*), void (%class.SkAutoAsciiToLC*)* @_ZN15SkAutoAsciiToLCD2Ev

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_Z11SkStrSearchPKPKciS0_mm(i8** nocapture readonly, i32, i8* nocapture readonly, i64, i64) local_unnamed_addr #0 {
  %6 = icmp slt i32 %1, 1
  br i1 %6, label %50, label %7

7:                                                ; preds = %5
  %8 = add nsw i32 %1, -1
  %9 = icmp sgt i32 %8, 0
  %10 = bitcast i8** %0 to i8*
  br i1 %9, label %11, label %34

11:                                               ; preds = %7, %30
  %12 = phi i32 [ %32, %30 ], [ %8, %7 ]
  %13 = phi i32 [ %31, %30 ], [ 0, %7 ]
  %14 = add nsw i32 %12, %13
  %15 = ashr i32 %14, 1
  %16 = sext i32 %15 to i64
  %17 = mul i64 %16, %4
  %18 = getelementptr inbounds i8, i8* %10, i64 %17
  %19 = bitcast i8* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = tail call i32 @strncmp(i8* %20, i8* %2, i64 %3) #7
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %11
  %24 = add nsw i32 %15, 1
  br label %30

25:                                               ; preds = %11
  %26 = icmp eq i32 %21, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %25
  %28 = tail call i64 @strlen(i8* %20) #7
  %29 = icmp ugt i64 %28, %3
  br i1 %29, label %30, label %50

30:                                               ; preds = %23, %25, %27
  %31 = phi i32 [ %24, %23 ], [ %13, %25 ], [ %13, %27 ]
  %32 = phi i32 [ %12, %23 ], [ %15, %25 ], [ %15, %27 ]
  %33 = icmp slt i32 %31, %32
  br i1 %33, label %11, label %34

34:                                               ; preds = %30, %7
  %35 = phi i32 [ 0, %7 ], [ %32, %30 ]
  %36 = sext i32 %35 to i64
  %37 = mul i64 %36, %4
  %38 = getelementptr inbounds i8, i8* %10, i64 %37
  %39 = bitcast i8* %38 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = tail call i32 @strncmp(i8* %40, i8* %2, i64 %3) #7
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %34
  %44 = tail call i64 @strlen(i8* %40) #7
  %45 = icmp ugt i64 %44, %3
  br i1 %45, label %46, label %50

46:                                               ; preds = %34, %43
  %47 = lshr i32 %41, 31
  %48 = add nsw i32 %47, %35
  %49 = xor i32 %48, -1
  br label %50

50:                                               ; preds = %27, %46, %43, %5
  %51 = phi i32 [ -1, %5 ], [ %49, %46 ], [ %35, %43 ], [ %15, %27 ]
  ret i32 %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_Z11SkStrSearchPKPKciS0_m(i8** nocapture readonly, i32, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %5 = tail call i64 @strlen(i8* %2) #7
  %6 = tail call i32 @_Z11SkStrSearchPKPKciS0_mm(i8** %0, i32 %1, i8* %2, i64 %5, i64 %3)
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z13SkStrLCSearchPKPKciS0_mm(i8** nocapture readonly, i32, i8* nocapture readonly, i64, i64) local_unnamed_addr #4 {
  %6 = alloca %class.SkAutoAsciiToLC, align 8
  %7 = bitcast %class.SkAutoAsciiToLC* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 88, i1 false)
  %8 = icmp slt i64 %3, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  %10 = tail call i64 @strlen(i8* %2) #7
  br label %11

11:                                               ; preds = %9, %5
  %12 = phi i64 [ %10, %9 ], [ %3, %5 ]
  %13 = getelementptr inbounds %class.SkAutoAsciiToLC, %class.SkAutoAsciiToLC* %6, i64 0, i32 1
  store i64 %12, i64* %13, align 8
  %14 = icmp ult i64 %12, 65
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkAutoAsciiToLC, %class.SkAutoAsciiToLC* %6, i64 0, i32 2, i64 0
  br label %20

17:                                               ; preds = %11
  %18 = add i64 %12, 1
  %19 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %18, i32 2) #8
  br label %20

20:                                               ; preds = %17, %15
  %21 = phi i8* [ %16, %15 ], [ %19, %17 ]
  %22 = getelementptr inbounds %class.SkAutoAsciiToLC, %class.SkAutoAsciiToLC* %6, i64 0, i32 0
  store i8* %21, i8** %22, align 8
  %23 = trunc i64 %12 to i32
  %24 = add i32 %23, -1
  %25 = icmp sgt i32 %24, -1
  br i1 %25, label %26, label %48

26:                                               ; preds = %20
  %27 = sext i32 %24 to i64
  br label %28

28:                                               ; preds = %41, %26
  %29 = phi i64 [ %27, %26 ], [ %47, %41 ]
  %30 = phi i32 [ %24, %26 ], [ %45, %41 ]
  %31 = getelementptr inbounds i8, i8* %2, i64 %29
  %32 = load i8, i8* %31, align 1
  %33 = sext i8 %32 to i32
  %34 = icmp sgt i8 %32, -1
  br i1 %34, label %35, label %41

35:                                               ; preds = %28
  %36 = tail call i32** @__ctype_tolower_loc() #9
  %37 = load i32*, i32** %36, align 8
  %38 = sext i8 %32 to i64
  %39 = getelementptr inbounds i32, i32* %37, i64 %38
  %40 = load i32, i32* %39, align 4
  br label %41

41:                                               ; preds = %35, %28
  %42 = phi i32 [ %40, %35 ], [ %33, %28 ]
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds i8, i8* %21, i64 %29
  store i8 %43, i8* %44, align 1
  %45 = add i32 %30, -1
  %46 = icmp sgt i32 %45, -1
  %47 = add nsw i64 %29, -1
  br i1 %46, label %28, label %48

48:                                               ; preds = %41, %20
  %49 = getelementptr inbounds i8, i8* %21, i64 %12
  store i8 0, i8* %49, align 1
  %50 = load i8*, i8** %22, align 8
  %51 = call i32 @_Z11SkStrSearchPKPKciS0_mm(i8** %0, i32 %1, i8* %50, i64 %3, i64 %4)
  %52 = getelementptr inbounds %class.SkAutoAsciiToLC, %class.SkAutoAsciiToLC* %6, i64 0, i32 2, i64 0
  %53 = icmp eq i8* %50, %52
  br i1 %53, label %55, label %54

54:                                               ; preds = %48
  call void @_Z7sk_freePv(i8* %50) #8
  br label %55

55:                                               ; preds = %48, %54
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %7) #8
  ret i32 %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z13SkStrLCSearchPKPKciS0_m(i8** nocapture readonly, i32, i8* nocapture readonly, i64) local_unnamed_addr #4 {
  %5 = tail call i64 @strlen(i8* %2) #7
  %6 = tail call i32 @_Z13SkStrLCSearchPKPKciS0_mm(i8** %0, i32 %1, i8* %2, i64 %5, i64 %3)
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkAutoAsciiToLCC2EPKcm(%class.SkAutoAsciiToLC*, i8* nocapture readonly, i64) unnamed_addr #4 align 2 {
  %4 = icmp slt i64 %2, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = tail call i64 @strlen(i8* %1) #7
  br label %7

7:                                                ; preds = %5, %3
  %8 = phi i64 [ %6, %5 ], [ %2, %3 ]
  %9 = getelementptr inbounds %class.SkAutoAsciiToLC, %class.SkAutoAsciiToLC* %0, i64 0, i32 1
  store i64 %8, i64* %9, align 8
  %10 = icmp ult i64 %8, 65
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %class.SkAutoAsciiToLC, %class.SkAutoAsciiToLC* %0, i64 0, i32 2, i64 0
  br label %16

13:                                               ; preds = %7
  %14 = add i64 %8, 1
  %15 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %14, i32 2) #8
  br label %16

16:                                               ; preds = %13, %11
  %17 = phi i8* [ %12, %11 ], [ %15, %13 ]
  %18 = getelementptr inbounds %class.SkAutoAsciiToLC, %class.SkAutoAsciiToLC* %0, i64 0, i32 0
  store i8* %17, i8** %18, align 8
  %19 = trunc i64 %8 to i32
  %20 = add i32 %19, -1
  %21 = icmp sgt i32 %20, -1
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = sext i32 %20 to i64
  br label %26

24:                                               ; preds = %39, %16
  %25 = getelementptr inbounds i8, i8* %17, i64 %8
  store i8 0, i8* %25, align 1
  ret void

26:                                               ; preds = %22, %39
  %27 = phi i64 [ %23, %22 ], [ %45, %39 ]
  %28 = phi i32 [ %20, %22 ], [ %43, %39 ]
  %29 = getelementptr inbounds i8, i8* %1, i64 %27
  %30 = load i8, i8* %29, align 1
  %31 = sext i8 %30 to i32
  %32 = icmp sgt i8 %30, -1
  br i1 %32, label %33, label %39

33:                                               ; preds = %26
  %34 = tail call i32** @__ctype_tolower_loc() #9
  %35 = load i32*, i32** %34, align 8
  %36 = sext i8 %30 to i64
  %37 = getelementptr inbounds i32, i32* %35, i64 %36
  %38 = load i32, i32* %37, align 4
  br label %39

39:                                               ; preds = %33, %26
  %40 = phi i32 [ %38, %33 ], [ %31, %26 ]
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds i8, i8* %17, i64 %27
  store i8 %41, i8* %42, align 1
  %43 = add i32 %28, -1
  %44 = icmp sgt i32 %43, -1
  %45 = add nsw i64 %27, -1
  br i1 %44, label %26, label %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkAutoAsciiToLCD2Ev(%class.SkAutoAsciiToLC* readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %class.SkAutoAsciiToLC, %class.SkAutoAsciiToLC* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %class.SkAutoAsciiToLC, %class.SkAutoAsciiToLC* %0, i64 0, i32 2, i64 0
  %5 = icmp eq i8* %3, %4
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_Z7sk_freePv(i8* %3) #8
  br label %7

7:                                                ; preds = %1, %6
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #5

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #5

; Function Attrs: nounwind readnone
declare i32** @__ctype_tolower_loc() local_unnamed_addr #6

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
