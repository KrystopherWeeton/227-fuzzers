; ModuleID = '../../third_party/pdfium/core/fpdfapi/parser/cpdf_object_avail.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/parser/cpdf_object_avail.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_ObjectAvail = type { i32 (...)**, %"class.fxcrt::RetainPtr", %"class.fxcrt::UnownedPtr.8", %"class.fxcrt::RetainPtr.21", %"class.std::__1::set", %"class.std::__1::stack" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CPDF_ReadValidator* }
%class.CPDF_ReadValidator = type { %class.IFX_SeekableReadStream.base, %"class.fxcrt::RetainPtr.0", %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr.5", i8, i8, i8, i64, %"class.fxcrt::Retainable" }
%class.IFX_SeekableReadStream.base = type { %class.IFX_StreamWithSize }
%class.IFX_StreamWithSize = type { i32 (...)** }
%"class.fxcrt::RetainPtr.0" = type { %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%"class.fxcrt::UnownedPtr" = type { %"class.CPDF_DataAvail::FileAvail"* }
%"class.CPDF_DataAvail::FileAvail" = type { i32 (...)** }
%"class.fxcrt::UnownedPtr.5" = type { %"class.CPDF_DataAvail::DownloadHints"* }
%"class.CPDF_DataAvail::DownloadHints" = type { i32 (...)** }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::UnownedPtr.8" = type { %class.CPDF_IndirectObjectHolder* }
%"class.fxcrt::RetainPtr.21" = type { %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.CPDF_Object* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.27" }
%"class.std::__1::__tree.27" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.28", %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i64 }
%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.39" }
%"struct.std::__1::__split_buffer" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { i32** }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%class.CPDF_IndirectObjectHolder = type { i32 (...)**, i32, %"class.std::__1::map", %"class.fxcrt::WeakPtr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr.15" }
%"class.fxcrt::RetainPtr.15" = type { %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.75" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.78", %"class.std::__1::__compressed_pair.86", %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.93", [4 x i8] }>
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80", %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { float }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%class.CPDF_Reference = type <{ %class.CPDF_Object, %"class.fxcrt::UnownedPtr.8", i32, [4 x i8] }>
%"class.CPDF_ReadValidator::ScopedSession" = type <{ %"class.fxcrt::RetainPtr", i8, i8, [6 x i8] }>
%class.CPDF_ObjectWalker = type { %"class.fxcrt::RetainPtr.49", %"class.fxcrt::RetainPtr.49", %"class.fxcrt::ByteString", i64, %"class.std::__1::stack.61" }
%"class.fxcrt::RetainPtr.49" = type { %"class.std::__1::unique_ptr.50" }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.CPDF_Object* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.55" }
%"class.fxcrt::RetainPtr.55" = type { %"class.std::__1::unique_ptr.56" }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::stack.61" = type { %"class.std::__1::deque.62" }
%"class.std::__1::deque.62" = type { %"class.std::__1::__deque_base.63" }
%"class.std::__1::__deque_base.63" = type { %"struct.std::__1::__split_buffer.64", i64, %"class.std::__1::__compressed_pair.71" }
%"struct.std::__1::__split_buffer.64" = type { %"class.std::__1::unique_ptr.65"**, %"class.std::__1::unique_ptr.65"**, %"class.std::__1::unique_ptr.65"**, %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::unique_ptr.65" = type opaque
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.std::__1::unique_ptr.65"** }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__split_buffer.105" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.35", %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.std::__1::allocator.37"* }
%"class.std::__1::allocator.37" = type { i8 }

$_ZNSt3__15stackIjNS_5dequeIjNS_9allocatorIjEEEEED2Ev = comdat any

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__15dequeIjNS_9allocatorIjEEE13__move_assignERS3_NS_17integral_constantIbLb1EEE = comdat any

$_ZNSt3__15dequeIjNS_9allocatorIjEEE13shrink_to_fitEv = comdat any

$_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_ = comdat any

$_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_ = comdat any

@_ZTV16CPDF_ObjectAvail = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_ObjectAvail*)* @_ZN16CPDF_ObjectAvailD2Ev to i8*), i8* bitcast (void (%class.CPDF_ObjectAvail*)* @_ZN16CPDF_ObjectAvailD0Ev to i8*), i8* bitcast (i1 (%class.CPDF_ObjectAvail*, %class.CPDF_Object*)* @_ZNK16CPDF_ObjectAvail13ExcludeObjectEPK11CPDF_Object to i8*)] }, align 8
@.str = private unnamed_addr constant [7 x i8] c"Parent\00", align 1

@_ZN16CPDF_ObjectAvailC1ERKN5fxcrt9RetainPtrI18CPDF_ReadValidatorEEP25CPDF_IndirectObjectHolderP11CPDF_Object = hidden unnamed_addr alias void (%class.CPDF_ObjectAvail*, %"class.fxcrt::RetainPtr"*, %class.CPDF_IndirectObjectHolder*, %class.CPDF_Object*), void (%class.CPDF_ObjectAvail*, %"class.fxcrt::RetainPtr"*, %class.CPDF_IndirectObjectHolder*, %class.CPDF_Object*)* @_ZN16CPDF_ObjectAvailC2ERKN5fxcrt9RetainPtrI18CPDF_ReadValidatorEEP25CPDF_IndirectObjectHolderP11CPDF_Object
@_ZN16CPDF_ObjectAvailC1ERKN5fxcrt9RetainPtrI18CPDF_ReadValidatorEEP25CPDF_IndirectObjectHolderj = hidden unnamed_addr alias void (%class.CPDF_ObjectAvail*, %"class.fxcrt::RetainPtr"*, %class.CPDF_IndirectObjectHolder*, i32), void (%class.CPDF_ObjectAvail*, %"class.fxcrt::RetainPtr"*, %class.CPDF_IndirectObjectHolder*, i32)* @_ZN16CPDF_ObjectAvailC2ERKN5fxcrt9RetainPtrI18CPDF_ReadValidatorEEP25CPDF_IndirectObjectHolderj
@_ZN16CPDF_ObjectAvailD1Ev = hidden unnamed_addr alias void (%class.CPDF_ObjectAvail*), void (%class.CPDF_ObjectAvail*)* @_ZN16CPDF_ObjectAvailD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CPDF_ObjectAvailC2ERKN5fxcrt9RetainPtrI18CPDF_ReadValidatorEEP25CPDF_IndirectObjectHolderP11CPDF_Object(%class.CPDF_ObjectAvail*, %"class.fxcrt::RetainPtr"* nocapture readonly dereferenceable(8), %class.CPDF_IndirectObjectHolder*, %class.CPDF_Object*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV16CPDF_ObjectAvail, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CPDF_ReadValidator*, %class.CPDF_ReadValidator** %7, align 8
  %9 = ptrtoint %class.CPDF_ReadValidator* %8 to i64
  %10 = bitcast %"class.fxcrt::RetainPtr"* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = icmp eq %class.CPDF_ReadValidator* %8, null
  br i1 %11, label %24, label %12

12:                                               ; preds = %4
  %13 = bitcast %class.CPDF_ReadValidator* %8 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 -32
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %class.CPDF_ReadValidator* %8 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 %17
  %20 = getelementptr inbounds i8, i8* %19, i64 8
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = add nsw i64 %22, 1
  store i64 %23, i64* %21, align 8
  br label %24

24:                                               ; preds = %4, %12
  %25 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 2, i32 0
  store %class.CPDF_IndirectObjectHolder* %2, %class.CPDF_IndirectObjectHolder** %25, align 8
  %26 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 3
  %27 = ptrtoint %class.CPDF_Object* %3 to i64
  %28 = bitcast %"class.fxcrt::RetainPtr.21"* %26 to i64*
  store i64 %27, i64* %28, align 8
  %29 = icmp eq %class.CPDF_Object* %3, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %3, i64 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = add nsw i64 %32, 1
  store i64 %33, i64* %31, align 8
  %34 = getelementptr inbounds %"class.fxcrt::RetainPtr.21", %"class.fxcrt::RetainPtr.21"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %class.CPDF_Object*, %class.CPDF_Object** %34, align 8
  br label %36

36:                                               ; preds = %24, %30
  %37 = phi %class.CPDF_Object* [ null, %24 ], [ %35, %30 ]
  %38 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4
  %39 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %41 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %38, i64 0, i32 0, i32 0
  %42 = bitcast %"class.std::__1::__tree_node_base"** %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %41, align 8
  %43 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 5
  %44 = bitcast %"class.std::__1::stack"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 48, i1 false) #10
  %45 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %37, i64 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %66, label %48

48:                                               ; preds = %36
  %49 = bitcast %"class.std::__1::__tree_end_node"* %40 to %"class.std::__1::__tree_node"**
  %50 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node"* %50, null
  br i1 %51, label %52, label %66

52:                                               ; preds = %48
  %53 = tail call i8* @_Znwm(i64 32) #11, !noalias !2
  %54 = getelementptr inbounds i8, i8* %53, i64 28
  %55 = bitcast i8* %54 to i32*
  store i32 %46, i32* %55, align 4, !noalias !2
  %56 = bitcast i8* %53 to %"class.std::__1::__tree_node_base"*
  %57 = getelementptr inbounds i8, i8* %53, i64 16
  %58 = bitcast i8* %57 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %58, align 8
  %59 = bitcast %"class.std::__1::__tree_end_node"* %40 to i8**
  store i8* %53, i8** %59, align 8
  %60 = bitcast i8* %53 to %"class.std::__1::__tree_node_base"*
  %61 = ptrtoint i8* %53 to i64
  %62 = bitcast %"class.std::__1::set"* %38 to i64*
  store i64 %61, i64* %62, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %60, %"class.std::__1::__tree_node_base"* nonnull %56) #10
  %63 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %64 = load i64, i64* %63, align 8
  %65 = add i64 %64, 1
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %52, %48, %36
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CPDF_ObjectAvailC2ERKN5fxcrt9RetainPtrI18CPDF_ReadValidatorEEP25CPDF_IndirectObjectHolderj(%class.CPDF_ObjectAvail*, %"class.fxcrt::RetainPtr"* nocapture readonly dereferenceable(8), %class.CPDF_IndirectObjectHolder*, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV16CPDF_ObjectAvail, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %class.CPDF_ReadValidator*, %class.CPDF_ReadValidator** %7, align 8
  %9 = ptrtoint %class.CPDF_ReadValidator* %8 to i64
  %10 = bitcast %"class.fxcrt::RetainPtr"* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = icmp eq %class.CPDF_ReadValidator* %8, null
  br i1 %11, label %24, label %12

12:                                               ; preds = %4
  %13 = bitcast %class.CPDF_ReadValidator* %8 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr i8, i8* %14, i64 -32
  %16 = bitcast i8* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %class.CPDF_ReadValidator* %8 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 %17
  %20 = getelementptr inbounds i8, i8* %19, i64 8
  %21 = bitcast i8* %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = add nsw i64 %22, 1
  store i64 %23, i64* %21, align 8
  br label %24

24:                                               ; preds = %12, %4
  %25 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 2, i32 0
  store %class.CPDF_IndirectObjectHolder* %2, %class.CPDF_IndirectObjectHolder** %25, align 8
  %26 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 3
  %27 = tail call i8* @_Znwm(i64 40) #11, !noalias !5
  %28 = bitcast i8* %27 to %class.CPDF_Reference*
  tail call void @_ZN14CPDF_ReferenceC1EP25CPDF_IndirectObjectHolderj(%class.CPDF_Reference* nonnull %28, %class.CPDF_IndirectObjectHolder* %2, i32 %3) #10, !noalias !5
  %29 = ptrtoint i8* %27 to i64
  %30 = getelementptr inbounds i8, i8* %27, i64 8
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %31, align 8, !noalias !5
  %33 = add nsw i64 %32, 1
  %34 = bitcast %"class.fxcrt::RetainPtr.21"* %26 to i64*
  store i64 %29, i64* %34, align 8
  store i64 %33, i64* %31, align 8
  %35 = icmp eq i64 %33, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %24
  %37 = bitcast i8* %27 to %"class.fxcrt::Retainable"*
  %38 = bitcast i8* %27 to void (%"class.fxcrt::Retainable"*)***
  %39 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %39, i64 1
  %41 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %40, align 8
  tail call void %41(%"class.fxcrt::Retainable"* nonnull %37) #10
  br label %42

42:                                               ; preds = %24, %36
  %43 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %45 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0, i32 0
  %46 = bitcast %"class.std::__1::__tree_node_base"** %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %44, %"class.std::__1::__tree_end_node"** %45, align 8
  %47 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 5
  %48 = bitcast %"class.std::__1::stack"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 48, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CPDF_ObjectAvailD2Ev(%class.CPDF_ObjectAvail*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV16CPDF_ObjectAvail, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 5
  tail call void @_ZNSt3__15stackIjNS_5dequeIjNS_9allocatorIjEEEEED2Ev(%"class.std::__1::stack"* %3) #10
  %4 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0
  %5 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.27"* %4, %"class.std::__1::__tree_node"* %7) #10
  %8 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CPDF_Object*, %class.CPDF_Object** %8, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %8, align 8
  %10 = icmp eq %class.CPDF_Object* %9, null
  br i1 %10, label %22, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %9, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add nsw i64 %13, -1
  store i64 %14, i64* %12, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %9, i64 0, i32 0
  %18 = bitcast %class.CPDF_Object* %9 to void (%"class.fxcrt::Retainable"*)***
  %19 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %19, i64 1
  %21 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %20, align 8
  tail call void %21(%"class.fxcrt::Retainable"* nonnull %17) #10
  br label %22

22:                                               ; preds = %1, %11, %16
  %23 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load %class.CPDF_ReadValidator*, %class.CPDF_ReadValidator** %23, align 8
  store %class.CPDF_ReadValidator* null, %class.CPDF_ReadValidator** %23, align 8
  %25 = icmp eq %class.CPDF_ReadValidator* %24, null
  br i1 %25, label %47, label %26

26:                                               ; preds = %22
  %27 = bitcast %class.CPDF_ReadValidator* %24 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr i8, i8* %28, i64 -32
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %class.CPDF_ReadValidator* %24 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 %31
  %34 = getelementptr inbounds i8, i8* %33, i64 8
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = add nsw i64 %36, -1
  store i64 %37, i64* %35, align 8
  %38 = icmp ne i64 %37, 0
  %39 = icmp eq i8* %33, null
  %40 = or i1 %39, %38
  br i1 %40, label %47, label %41

41:                                               ; preds = %26
  %42 = bitcast i8* %33 to %"class.fxcrt::Retainable"*
  %43 = bitcast i8* %33 to void (%"class.fxcrt::Retainable"*)***
  %44 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %44, i64 1
  %46 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %45, align 8
  tail call void %46(%"class.fxcrt::Retainable"* nonnull %42) #10
  br label %47

47:                                               ; preds = %22, %26, %41
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15stackIjNS_5dequeIjNS_9allocatorIjEEEEED2Ev(%"class.std::__1::stack"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32**, i32*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 10
  %7 = getelementptr inbounds i32*, i32** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32**, i32*** %8, align 8
  %10 = icmp eq i32** %9, %3
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load i32*, i32** %7, align 8
  %17 = and i64 %5, 1023
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 10
  %23 = getelementptr inbounds i32*, i32** %3, i64 %22
  %24 = load i32*, i32** %23, align 8
  %25 = and i64 %21, 1023
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  %27 = icmp eq i32* %26, %18
  br i1 %27, label %28, label %34

28:                                               ; preds = %47, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %47 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast i32*** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %52, label %65

34:                                               ; preds = %15, %47
  %35 = phi i32* [ %50, %47 ], [ %18, %15 ]
  %36 = phi i32** [ %49, %47 ], [ %7, %15 ]
  %37 = getelementptr inbounds i32, i32* %35, i64 1
  %38 = ptrtoint i32* %37 to i64
  %39 = bitcast i32** %36 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %41, 4096
  br i1 %42, label %43, label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds i32*, i32** %36, i64 1
  %45 = bitcast i32** %44 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %43, %34
  %48 = phi i64 [ %46, %43 ], [ %38, %34 ]
  %49 = phi i32** [ %44, %43 ], [ %36, %34 ]
  %50 = inttoptr i64 %48 to i32*
  %51 = icmp eq i32* %26, %50
  br i1 %51, label %28, label %34

52:                                               ; preds = %28, %52
  %53 = phi i32** [ %57, %52 ], [ %3, %28 ]
  %54 = bitcast i32** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #11
  %56 = load i32**, i32*** %2, align 8
  %57 = getelementptr inbounds i32*, i32** %56, i64 1
  store i32** %57, i32*** %2, align 8
  %58 = load i64, i64* %30, align 8
  %59 = ptrtoint i32** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, 2
  br i1 %62, label %52, label %63

63:                                               ; preds = %52
  %64 = inttoptr i64 %58 to i32**
  br label %65

65:                                               ; preds = %63, %28
  %66 = phi i32** [ %9, %28 ], [ %64, %63 ]
  %67 = phi i32** [ %3, %28 ], [ %57, %63 ]
  %68 = phi i64 [ %32, %28 ], [ %61, %63 ]
  switch i64 %68, label %72 [
    i64 1, label %70
    i64 2, label %69
  ]

69:                                               ; preds = %65
  br label %70

70:                                               ; preds = %65, %69
  %71 = phi i64 [ 1024, %69 ], [ 512, %65 ]
  store i64 %71, i64* %4, align 8
  br label %72

72:                                               ; preds = %70, %65
  %73 = icmp eq i32** %67, %66
  br i1 %73, label %92, label %74

74:                                               ; preds = %72, %74
  %75 = phi i32** [ %78, %74 ], [ %67, %72 ]
  %76 = bitcast i32** %75 to i8**
  %77 = load i8*, i8** %76, align 8
  tail call void @_ZdlPv(i8* %77) #11
  %78 = getelementptr inbounds i32*, i32** %75, i64 1
  %79 = icmp eq i32** %78, %66
  br i1 %79, label %80, label %74

80:                                               ; preds = %74
  %81 = load i32**, i32*** %2, align 8
  %82 = load i32**, i32*** %8, align 8
  %83 = icmp eq i32** %82, %81
  br i1 %83, label %92, label %84

84:                                               ; preds = %80
  %85 = ptrtoint i32** %81 to i64
  %86 = getelementptr i32*, i32** %82, i64 -1
  %87 = ptrtoint i32** %86 to i64
  %88 = sub i64 %87, %85
  %89 = lshr i64 %88, 3
  %90 = xor i64 %89, -1
  %91 = getelementptr i32*, i32** %82, i64 %90
  store i32** %91, i32*** %8, align 8
  br label %92

92:                                               ; preds = %84, %80, %72
  %93 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i32**, i32*** %93, align 8
  %95 = icmp eq i32** %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  %97 = bitcast i32** %94 to i8*
  tail call void @_ZdlPv(i8* %97) #11
  br label %98

98:                                               ; preds = %92, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CPDF_ObjectAvailD0Ev(%class.CPDF_ObjectAvail*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV16CPDF_ObjectAvail, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 5
  tail call void @_ZNSt3__15stackIjNS_5dequeIjNS_9allocatorIjEEEEED2Ev(%"class.std::__1::stack"* %3) #10
  %4 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0
  %5 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.27"* %4, %"class.std::__1::__tree_node"* %7) #10
  %8 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CPDF_Object*, %class.CPDF_Object** %8, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %8, align 8
  %10 = icmp eq %class.CPDF_Object* %9, null
  br i1 %10, label %22, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %9, i64 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = add nsw i64 %13, -1
  store i64 %14, i64* %12, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %9, i64 0, i32 0
  %18 = bitcast %class.CPDF_Object* %9 to void (%"class.fxcrt::Retainable"*)***
  %19 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %19, i64 1
  %21 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %20, align 8
  tail call void %21(%"class.fxcrt::Retainable"* nonnull %17) #10
  br label %22

22:                                               ; preds = %16, %11, %1
  %23 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load %class.CPDF_ReadValidator*, %class.CPDF_ReadValidator** %23, align 8
  store %class.CPDF_ReadValidator* null, %class.CPDF_ReadValidator** %23, align 8
  %25 = icmp eq %class.CPDF_ReadValidator* %24, null
  br i1 %25, label %47, label %26

26:                                               ; preds = %22
  %27 = bitcast %class.CPDF_ReadValidator* %24 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr i8, i8* %28, i64 -32
  %30 = bitcast i8* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %class.CPDF_ReadValidator* %24 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 %31
  %34 = getelementptr inbounds i8, i8* %33, i64 8
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = add nsw i64 %36, -1
  store i64 %37, i64* %35, align 8
  %38 = icmp ne i64 %37, 0
  %39 = icmp eq i8* %33, null
  %40 = or i1 %39, %38
  br i1 %40, label %47, label %41

41:                                               ; preds = %26
  %42 = bitcast i8* %33 to %"class.fxcrt::Retainable"*
  %43 = bitcast i8* %33 to void (%"class.fxcrt::Retainable"*)***
  %44 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %44, i64 1
  %46 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %45, align 8
  tail call void %46(%"class.fxcrt::Retainable"* nonnull %42) #10
  br label %47

47:                                               ; preds = %22, %26, %41
  %48 = bitcast %class.CPDF_ObjectAvail* %0 to i8*
  tail call void @_ZdlPv(i8* %48) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN16CPDF_ObjectAvail10CheckAvailEv(%class.CPDF_ObjectAvail*) local_unnamed_addr #0 align 2 {
  %2 = tail call zeroext i1 @_ZN16CPDF_ObjectAvail14LoadRootObjectEv(%class.CPDF_ObjectAvail* %0)
  br i1 %2, label %3, label %29

3:                                                ; preds = %1
  %4 = tail call zeroext i1 @_ZN16CPDF_ObjectAvail12CheckObjectsEv(%class.CPDF_ObjectAvail* %0)
  br i1 %4, label %5, label %29

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %7 = load %class.CPDF_Object*, %class.CPDF_Object** %6, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %6, align 8
  %8 = icmp eq %class.CPDF_Object* %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %7, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = add nsw i64 %11, -1
  store i64 %12, i64* %10, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %20

14:                                               ; preds = %9
  %15 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %7, i64 0, i32 0
  %16 = bitcast %class.CPDF_Object* %7 to void (%"class.fxcrt::Retainable"*)***
  %17 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %17, i64 1
  %19 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %18, align 8
  tail call void %19(%"class.fxcrt::Retainable"* nonnull %15) #10
  br label %20

20:                                               ; preds = %5, %9, %14
  %21 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4
  %22 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %21, i64 0, i32 0
  %23 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.std::__1::__tree_node"**
  %25 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %24, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.27"* %22, %"class.std::__1::__tree_node"* %25) #10
  %26 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %21, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %23, %"class.std::__1::__tree_end_node"** %27, align 8
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %28, align 8
  br label %29

29:                                               ; preds = %3, %1, %20
  %30 = phi i32 [ 1, %20 ], [ 0, %1 ], [ 0, %3 ]
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CPDF_ObjectAvail14LoadRootObjectEv(%class.CPDF_ObjectAvail*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.CPDF_ReadValidator::ScopedSession", align 8
  %3 = alloca %"class.fxcrt::RetainPtr", align 8
  %4 = alloca %"class.std::__1::stack", align 8
  %5 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %316

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node"**
  %12 = bitcast %"class.CPDF_ReadValidator::ScopedSession"* %2 to i8*
  %13 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.fxcrt::RetainPtr"* %3 to i64*
  %15 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 2, i32 0
  %17 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4
  %18 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %17, i64 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::set"* %17 to i64*
  %22 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.CPDF_ReadValidator::ScopedSession"* %2 to i8*
  %24 = load %class.CPDF_Object*, %class.CPDF_Object** %9, align 8
  %25 = icmp eq %class.CPDF_Object* %24, null
  br i1 %25, label %212, label %26

26:                                               ; preds = %8, %209
  %27 = phi %class.CPDF_Object* [ %210, %209 ], [ %24, %8 ]
  %28 = bitcast %class.CPDF_Object* %27 to i1 (%class.CPDF_Object*)***
  %29 = load i1 (%class.CPDF_Object*)**, i1 (%class.CPDF_Object*)*** %28, align 8
  %30 = getelementptr inbounds i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %29, i64 19
  %31 = load i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %30, align 8
  %32 = call zeroext i1 %31(%class.CPDF_Object* nonnull %27) #10
  %33 = load %class.CPDF_Object*, %class.CPDF_Object** %9, align 8
  br i1 %32, label %34, label %212

34:                                               ; preds = %26
  %35 = bitcast %class.CPDF_Object* %33 to %class.CPDF_Reference* (%class.CPDF_Object*)***
  %36 = load %class.CPDF_Reference* (%class.CPDF_Object*)**, %class.CPDF_Reference* (%class.CPDF_Object*)*** %35, align 8
  %37 = getelementptr inbounds %class.CPDF_Reference* (%class.CPDF_Object*)*, %class.CPDF_Reference* (%class.CPDF_Object*)** %36, i64 33
  %38 = load %class.CPDF_Reference* (%class.CPDF_Object*)*, %class.CPDF_Reference* (%class.CPDF_Object*)** %37, align 8
  %39 = call %class.CPDF_Reference* %38(%class.CPDF_Object* %33) #10
  %40 = getelementptr inbounds %class.CPDF_Reference, %class.CPDF_Reference* %39, i64 0, i32 2
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %11, align 8
  %43 = icmp eq %"class.std::__1::__tree_node"* %42, null
  br i1 %43, label %79, label %44

44:                                               ; preds = %34, %44
  %45 = phi %"class.std::__1::__tree_end_node"* [ %55, %44 ], [ %10, %34 ]
  %46 = phi %"class.std::__1::__tree_node"* [ %56, %44 ], [ %42, %34 ]
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %46, i64 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp ult i32 %48, %41
  %50 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %46, i64 0, i32 0, i32 1
  %51 = bitcast %"class.std::__1::__tree_node_base"** %50 to %"class.std::__1::__tree_node"**
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %46, i64 0, i32 0, i32 0
  %53 = bitcast %"class.std::__1::__tree_node"* %46 to %"class.std::__1::__tree_node"**
  %54 = select i1 %49, %"class.std::__1::__tree_node"** %51, %"class.std::__1::__tree_node"** %53
  %55 = select i1 %49, %"class.std::__1::__tree_end_node"* %45, %"class.std::__1::__tree_end_node"* %52
  %56 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %54, align 8
  %57 = icmp eq %"class.std::__1::__tree_node"* %56, null
  br i1 %57, label %58, label %44

58:                                               ; preds = %44
  %59 = icmp eq %"class.std::__1::__tree_end_node"* %55, %10
  br i1 %59, label %79, label %60

60:                                               ; preds = %58
  %61 = bitcast %"class.std::__1::__tree_end_node"* %55 to %"class.std::__1::__tree_node"*
  %62 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %61, i64 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = icmp ugt i32 %63, %41
  br i1 %64, label %79, label %65

65:                                               ; preds = %60
  %66 = load %class.CPDF_Object*, %class.CPDF_Object** %9, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %9, align 8
  %67 = icmp eq %class.CPDF_Object* %66, null
  br i1 %67, label %316, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %66, i64 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = add nsw i64 %70, -1
  store i64 %71, i64* %69, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %316

73:                                               ; preds = %68
  %74 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %66, i64 0, i32 0
  %75 = bitcast %class.CPDF_Object* %66 to void (%"class.fxcrt::Retainable"*)***
  %76 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %76, i64 1
  %78 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %77, align 8
  call void %78(%"class.fxcrt::Retainable"* nonnull %74) #10
  br label %316

79:                                               ; preds = %60, %58, %34
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  %80 = load %class.CPDF_ReadValidator*, %class.CPDF_ReadValidator** %13, align 8
  %81 = ptrtoint %class.CPDF_ReadValidator* %80 to i64
  store i64 %81, i64* %14, align 8
  %82 = icmp eq %class.CPDF_ReadValidator* %80, null
  br i1 %82, label %95, label %83

83:                                               ; preds = %79
  %84 = bitcast %class.CPDF_ReadValidator* %80 to i8**
  %85 = load i8*, i8** %84, align 8
  %86 = getelementptr i8, i8* %85, i64 -32
  %87 = bitcast i8* %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %class.CPDF_ReadValidator, %class.CPDF_ReadValidator* %80, i64 0, i32 1
  %90 = bitcast %"class.fxcrt::RetainPtr.0"* %89 to i8*
  %91 = getelementptr inbounds i8, i8* %90, i64 %88
  %92 = bitcast i8* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %93, 1
  store i64 %94, i64* %92, align 8
  br label %95

95:                                               ; preds = %79, %83
  call void @_ZN18CPDF_ReadValidator13ScopedSessionC1EN5fxcrt9RetainPtrIS_EE(%"class.CPDF_ReadValidator::ScopedSession"* nonnull %2, %"class.fxcrt::RetainPtr"* nonnull %3) #10
  %96 = load %class.CPDF_ReadValidator*, %class.CPDF_ReadValidator** %15, align 8
  store %class.CPDF_ReadValidator* null, %class.CPDF_ReadValidator** %15, align 8
  %97 = icmp eq %class.CPDF_ReadValidator* %96, null
  br i1 %97, label %119, label %98

98:                                               ; preds = %95
  %99 = bitcast %class.CPDF_ReadValidator* %96 to i8**
  %100 = load i8*, i8** %99, align 8
  %101 = getelementptr i8, i8* %100, i64 -32
  %102 = bitcast i8* %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %class.CPDF_ReadValidator* %96 to i8*
  %105 = getelementptr inbounds i8, i8* %104, i64 %103
  %106 = getelementptr inbounds i8, i8* %105, i64 8
  %107 = bitcast i8* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = add nsw i64 %108, -1
  store i64 %109, i64* %107, align 8
  %110 = icmp ne i64 %109, 0
  %111 = icmp eq i8* %105, null
  %112 = or i1 %111, %110
  br i1 %112, label %119, label %113

113:                                              ; preds = %98
  %114 = bitcast i8* %105 to %"class.fxcrt::Retainable"*
  %115 = bitcast i8* %105 to void (%"class.fxcrt::Retainable"*)***
  %116 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %116, i64 1
  %118 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %117, align 8
  call void %118(%"class.fxcrt::Retainable"* nonnull %114) #10
  br label %119

119:                                              ; preds = %95, %98, %113
  %120 = load %class.CPDF_IndirectObjectHolder*, %class.CPDF_IndirectObjectHolder** %16, align 8
  %121 = bitcast %class.CPDF_IndirectObjectHolder* %120 to %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)***
  %122 = load %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)**, %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)*** %121, align 8
  %123 = getelementptr inbounds %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)*, %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)** %122, i64 2
  %124 = load %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)*, %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)** %123, align 8
  %125 = call %class.CPDF_Object* %124(%class.CPDF_IndirectObjectHolder* %120, i32 %41) #10
  %126 = load %class.CPDF_ReadValidator*, %class.CPDF_ReadValidator** %13, align 8
  %127 = getelementptr inbounds %class.CPDF_ReadValidator, %class.CPDF_ReadValidator* %126, i64 0, i32 4
  %128 = load i8, i8* %127, align 8, !range !8
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %315

130:                                              ; preds = %119
  %131 = getelementptr inbounds %class.CPDF_ReadValidator, %class.CPDF_ReadValidator* %126, i64 0, i32 5
  %132 = load i8, i8* %131, align 1, !range !8
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %134, label %315

134:                                              ; preds = %130
  %135 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %11, align 8
  %136 = icmp eq %"class.std::__1::__tree_node"* %135, null
  br i1 %136, label %163, label %137

137:                                              ; preds = %134, %159
  %138 = phi %"class.std::__1::__tree_node"* [ %162, %159 ], [ %135, %134 ]
  %139 = phi %"class.std::__1::__tree_node_base"** [ %161, %159 ], [ %18, %134 ]
  %140 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = icmp ult i32 %41, %141
  br i1 %142, label %143, label %149

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %147, label %159

147:                                              ; preds = %143
  %148 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 0, i32 0
  br label %163

149:                                              ; preds = %137
  %150 = icmp ult i32 %141, %41
  br i1 %150, label %151, label %157

151:                                              ; preds = %149
  %152 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %155, label %159

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 0, i32 0
  br label %163

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %138, i64 0, i32 0, i32 0
  br label %163

159:                                              ; preds = %151, %143
  %160 = phi %"class.std::__1::__tree_node_base"* [ %145, %143 ], [ %153, %151 ]
  %161 = phi %"class.std::__1::__tree_node_base"** [ %144, %143 ], [ %152, %151 ]
  %162 = bitcast %"class.std::__1::__tree_node_base"* %160 to %"class.std::__1::__tree_node"*
  br label %137

163:                                              ; preds = %134, %157, %155, %147
  %164 = phi %"class.std::__1::__tree_end_node"* [ %148, %147 ], [ %156, %155 ], [ %158, %157 ], [ %10, %134 ]
  %165 = phi %"class.std::__1::__tree_node_base"** [ %144, %147 ], [ %152, %155 ], [ %139, %157 ], [ %19, %134 ]
  %166 = bitcast %"class.std::__1::__tree_node_base"** %165 to %"class.std::__1::__tree_node"**
  %167 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %166, align 8
  %168 = icmp eq %"class.std::__1::__tree_node"* %167, null
  br i1 %168, label %169, label %189

169:                                              ; preds = %163
  %170 = call i8* @_Znwm(i64 32) #11, !noalias !9
  %171 = getelementptr inbounds i8, i8* %170, i64 28
  %172 = bitcast i8* %171 to i32*
  store i32 %41, i32* %172, align 4, !noalias !9
  %173 = bitcast i8* %170 to %"class.std::__1::__tree_node_base"*
  %174 = getelementptr inbounds i8, i8* %170, i64 16
  %175 = bitcast i8* %174 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %170, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %164, %"class.std::__1::__tree_end_node"** %175, align 8
  %176 = bitcast %"class.std::__1::__tree_node_base"** %165 to i8**
  store i8* %170, i8** %176, align 8
  %177 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %20, align 8
  %178 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %177, i64 0, i32 0
  %179 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %178, align 8
  %180 = icmp eq %"class.std::__1::__tree_node_base"* %179, null
  br i1 %180, label %184, label %181

181:                                              ; preds = %169
  %182 = ptrtoint %"class.std::__1::__tree_node_base"* %179 to i64
  store i64 %182, i64* %21, align 8
  %183 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %165, align 8
  br label %184

184:                                              ; preds = %181, %169
  %185 = phi %"class.std::__1::__tree_node_base"* [ %173, %169 ], [ %183, %181 ]
  %186 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %186, %"class.std::__1::__tree_node_base"* %185) #10
  %187 = load i64, i64* %22, align 8
  %188 = add i64 %187, 1
  store i64 %188, i64* %22, align 8
  br label %189

189:                                              ; preds = %163, %184
  %190 = icmp eq %class.CPDF_Object* %125, null
  br i1 %190, label %195, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %125, i64 0, i32 0, i32 1
  %193 = load i64, i64* %192, align 8
  %194 = add nsw i64 %193, 1
  store i64 %194, i64* %192, align 8
  br label %195

195:                                              ; preds = %191, %189
  %196 = load %class.CPDF_Object*, %class.CPDF_Object** %9, align 8
  store %class.CPDF_Object* %125, %class.CPDF_Object** %9, align 8
  %197 = icmp eq %class.CPDF_Object* %196, null
  br i1 %197, label %209, label %198

198:                                              ; preds = %195
  %199 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %196, i64 0, i32 0, i32 1
  %200 = load i64, i64* %199, align 8
  %201 = add nsw i64 %200, -1
  store i64 %201, i64* %199, align 8
  %202 = icmp eq i64 %201, 0
  br i1 %202, label %203, label %209

203:                                              ; preds = %198
  %204 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %196, i64 0, i32 0
  %205 = bitcast %class.CPDF_Object* %196 to void (%"class.fxcrt::Retainable"*)***
  %206 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %205, align 8
  %207 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %206, i64 1
  %208 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %207, align 8
  call void %208(%"class.fxcrt::Retainable"* nonnull %204) #10
  br label %209

209:                                              ; preds = %195, %198, %203
  call void @_ZN18CPDF_ReadValidator13ScopedSessionD1Ev(%"class.CPDF_ReadValidator::ScopedSession"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #10
  %210 = load %class.CPDF_Object*, %class.CPDF_Object** %9, align 8
  %211 = icmp eq %class.CPDF_Object* %210, null
  br i1 %211, label %212, label %26

212:                                              ; preds = %26, %209, %8
  %213 = phi %class.CPDF_Object* [ null, %8 ], [ %33, %26 ], [ null, %209 ]
  %214 = bitcast %"class.std::__1::stack"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %214) #10
  %215 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %216 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %217 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %218 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0, i32 0, i32 1
  %219 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %214, i8 0, i64 48, i1 false) #10
  %220 = call zeroext i1 @_ZNK16CPDF_ObjectAvail19AppendObjectSubRefsEPK11CPDF_ObjectPNSt3__15stackIjNS3_5dequeIjNS3_9allocatorIjEEEEEE(%class.CPDF_ObjectAvail* %0, %class.CPDF_Object* %213, %"class.std::__1::stack"* nonnull %4)
  br i1 %220, label %221, label %224

221:                                              ; preds = %212
  %222 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0
  %223 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 5, i32 0
  call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE13__move_assignERS3_NS_17integral_constantIbLb1EEE(%"class.std::__1::deque"* %223, %"class.std::__1::deque"* nonnull dereferenceable(48) %222) #10
  br label %224

224:                                              ; preds = %212, %221
  %225 = phi i1 [ true, %221 ], [ false, %212 ]
  %226 = load i32**, i32*** %216, align 8
  %227 = load i64, i64* %218, align 8
  %228 = lshr i64 %227, 10
  %229 = getelementptr inbounds i32*, i32** %226, i64 %228
  %230 = load i32**, i32*** %217, align 8
  %231 = icmp eq i32** %230, %226
  %232 = ptrtoint i32** %230 to i64
  %233 = ptrtoint i32** %226 to i64
  br i1 %231, label %246, label %234

234:                                              ; preds = %224
  %235 = load i32*, i32** %229, align 8
  %236 = and i64 %227, 1023
  %237 = getelementptr inbounds i32, i32* %235, i64 %236
  %238 = load i64, i64* %219, align 8
  %239 = add i64 %238, %227
  %240 = lshr i64 %239, 10
  %241 = getelementptr inbounds i32*, i32** %226, i64 %240
  %242 = load i32*, i32** %241, align 8
  %243 = and i64 %239, 1023
  %244 = getelementptr inbounds i32, i32* %242, i64 %243
  %245 = icmp eq i32* %244, %237
  br i1 %245, label %246, label %251

246:                                              ; preds = %264, %224, %234
  store i64 0, i64* %219, align 8
  %247 = bitcast i32*** %217 to i64*
  %248 = sub i64 %232, %233
  %249 = ashr exact i64 %248, 3
  %250 = icmp ugt i64 %249, 2
  br i1 %250, label %269, label %282

251:                                              ; preds = %234, %264
  %252 = phi i32* [ %267, %264 ], [ %237, %234 ]
  %253 = phi i32** [ %266, %264 ], [ %229, %234 ]
  %254 = getelementptr inbounds i32, i32* %252, i64 1
  %255 = ptrtoint i32* %254 to i64
  %256 = bitcast i32** %253 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = sub i64 %255, %257
  %259 = icmp eq i64 %258, 4096
  br i1 %259, label %260, label %264

260:                                              ; preds = %251
  %261 = getelementptr inbounds i32*, i32** %253, i64 1
  %262 = bitcast i32** %261 to i64*
  %263 = load i64, i64* %262, align 8
  br label %264

264:                                              ; preds = %260, %251
  %265 = phi i64 [ %263, %260 ], [ %255, %251 ]
  %266 = phi i32** [ %261, %260 ], [ %253, %251 ]
  %267 = inttoptr i64 %265 to i32*
  %268 = icmp eq i32* %244, %267
  br i1 %268, label %246, label %251

269:                                              ; preds = %246, %269
  %270 = phi i32** [ %274, %269 ], [ %226, %246 ]
  %271 = bitcast i32** %270 to i8**
  %272 = load i8*, i8** %271, align 8
  call void @_ZdlPv(i8* %272) #11
  %273 = load i32**, i32*** %216, align 8
  %274 = getelementptr inbounds i32*, i32** %273, i64 1
  store i32** %274, i32*** %216, align 8
  %275 = load i64, i64* %247, align 8
  %276 = ptrtoint i32** %274 to i64
  %277 = sub i64 %275, %276
  %278 = ashr exact i64 %277, 3
  %279 = icmp ugt i64 %278, 2
  br i1 %279, label %269, label %280

280:                                              ; preds = %269
  %281 = inttoptr i64 %275 to i32**
  br label %282

282:                                              ; preds = %280, %246
  %283 = phi i32** [ %230, %246 ], [ %281, %280 ]
  %284 = phi i32** [ %226, %246 ], [ %274, %280 ]
  %285 = phi i64 [ %249, %246 ], [ %278, %280 ]
  switch i64 %285, label %289 [
    i64 1, label %287
    i64 2, label %286
  ]

286:                                              ; preds = %282
  br label %287

287:                                              ; preds = %282, %286
  %288 = phi i64 [ 1024, %286 ], [ 512, %282 ]
  store i64 %288, i64* %218, align 8
  br label %289

289:                                              ; preds = %287, %282
  %290 = icmp eq i32** %284, %283
  br i1 %290, label %309, label %291

291:                                              ; preds = %289, %291
  %292 = phi i32** [ %295, %291 ], [ %284, %289 ]
  %293 = bitcast i32** %292 to i8**
  %294 = load i8*, i8** %293, align 8
  call void @_ZdlPv(i8* %294) #11
  %295 = getelementptr inbounds i32*, i32** %292, i64 1
  %296 = icmp eq i32** %295, %283
  br i1 %296, label %297, label %291

297:                                              ; preds = %291
  %298 = load i32**, i32*** %216, align 8
  %299 = load i32**, i32*** %217, align 8
  %300 = icmp eq i32** %299, %298
  br i1 %300, label %309, label %301

301:                                              ; preds = %297
  %302 = ptrtoint i32** %298 to i64
  %303 = getelementptr i32*, i32** %299, i64 -1
  %304 = ptrtoint i32** %303 to i64
  %305 = sub i64 %304, %302
  %306 = lshr i64 %305, 3
  %307 = xor i64 %306, -1
  %308 = getelementptr i32*, i32** %299, i64 %307
  store i32** %308, i32*** %217, align 8
  br label %309

309:                                              ; preds = %301, %297, %289
  %310 = load i32**, i32*** %215, align 8
  %311 = icmp eq i32** %310, null
  br i1 %311, label %314, label %312

312:                                              ; preds = %309
  %313 = bitcast i32** %310 to i8*
  call void @_ZdlPv(i8* %313) #11
  br label %314

314:                                              ; preds = %309, %312
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %214) #10
  br label %316

315:                                              ; preds = %130, %119
  call void @_ZN18CPDF_ReadValidator13ScopedSessionD1Ev(%"class.CPDF_ReadValidator::ScopedSession"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #10
  br label %316

316:                                              ; preds = %315, %73, %68, %65, %1, %314
  %317 = phi i1 [ %225, %314 ], [ true, %1 ], [ true, %65 ], [ true, %68 ], [ true, %73 ], [ false, %315 ]
  ret i1 %317
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16CPDF_ObjectAvail12CheckObjectsEv(%class.CPDF_ObjectAvail*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::set", align 8
  %3 = alloca %"class.std::__1::stack", align 16
  %4 = alloca %"class.std::__1::stack", align 8
  %5 = alloca %"class.CPDF_ReadValidator::ScopedSession", align 8
  %6 = alloca %"class.fxcrt::RetainPtr", align 8
  %7 = bitcast %"class.std::__1::set"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_node_base"** %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"** %8, align 8
  %13 = bitcast %"class.std::__1::stack"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %17 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 5
  %20 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast i32*** %20 to i64*
  %22 = bitcast %"class.std::__1::stack"* %19 to <2 x i64>*
  %23 = load <2 x i64>, <2 x i64>* %22, align 8
  %24 = bitcast %"class.std::__1::stack"* %3 to <2 x i64>*
  store <2 x i64> %23, <2 x i64>* %24, align 16
  %25 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 2
  %26 = bitcast i32*** %25 to i64*
  %27 = bitcast i32*** %16 to i64*
  %28 = bitcast i32*** %25 to <2 x i64>*
  %29 = load <2 x i64>, <2 x i64>* %28, align 8
  %30 = bitcast i32*** %16 to <2 x i64>*
  store <2 x i64> %29, <2 x i64>* %30, align 16
  %31 = bitcast %"class.std::__1::stack"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 32, i1 false) #10
  %32 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 5, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = bitcast i64* %32 to <2 x i64>*
  %35 = load <2 x i64>, <2 x i64>* %34, align 8
  %36 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %36, align 16
  %37 = bitcast i64* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #10
  %38 = bitcast %"class.std::__1::stack"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %38) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 48, i1 false) #10
  %39 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %19, i64 0, i32 0
  call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE13__move_assignERS3_NS_17integral_constantIbLb1EEE(%"class.std::__1::deque"* %40, %"class.std::__1::deque"* nonnull dereferenceable(48) %39) #10
  %41 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i32**, i32*** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = lshr i64 %44, 10
  %46 = getelementptr inbounds i32*, i32** %42, i64 %45
  %47 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %48 = load i32**, i32*** %47, align 8
  %49 = icmp eq i32** %48, %42
  %50 = ptrtoint i32** %48 to i64
  %51 = ptrtoint i32** %42 to i64
  br i1 %49, label %52, label %54

52:                                               ; preds = %1
  %53 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %67

54:                                               ; preds = %1
  %55 = load i32*, i32** %46, align 8
  %56 = and i64 %44, 1023
  %57 = getelementptr inbounds i32, i32* %55, i64 %56
  %58 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, %44
  %61 = lshr i64 %60, 10
  %62 = getelementptr inbounds i32*, i32** %42, i64 %61
  %63 = load i32*, i32** %62, align 8
  %64 = and i64 %60, 1023
  %65 = getelementptr inbounds i32, i32* %63, i64 %64
  %66 = icmp eq i32* %65, %57
  br i1 %66, label %67, label %73

67:                                               ; preds = %86, %54, %52
  %68 = phi i64* [ %53, %52 ], [ %58, %54 ], [ %58, %86 ]
  store i64 0, i64* %68, align 8
  %69 = bitcast i32*** %47 to i64*
  %70 = sub i64 %50, %51
  %71 = ashr exact i64 %70, 3
  %72 = icmp ugt i64 %71, 2
  br i1 %72, label %91, label %104

73:                                               ; preds = %54, %86
  %74 = phi i32* [ %89, %86 ], [ %57, %54 ]
  %75 = phi i32** [ %88, %86 ], [ %46, %54 ]
  %76 = getelementptr inbounds i32, i32* %74, i64 1
  %77 = ptrtoint i32* %76 to i64
  %78 = bitcast i32** %75 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %77, %79
  %81 = icmp eq i64 %80, 4096
  br i1 %81, label %82, label %86

82:                                               ; preds = %73
  %83 = getelementptr inbounds i32*, i32** %75, i64 1
  %84 = bitcast i32** %83 to i64*
  %85 = load i64, i64* %84, align 8
  br label %86

86:                                               ; preds = %82, %73
  %87 = phi i64 [ %85, %82 ], [ %77, %73 ]
  %88 = phi i32** [ %83, %82 ], [ %75, %73 ]
  %89 = inttoptr i64 %87 to i32*
  %90 = icmp eq i32* %65, %89
  br i1 %90, label %67, label %73

91:                                               ; preds = %67, %91
  %92 = phi i32** [ %96, %91 ], [ %42, %67 ]
  %93 = bitcast i32** %92 to i8**
  %94 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %94) #11
  %95 = load i32**, i32*** %41, align 8
  %96 = getelementptr inbounds i32*, i32** %95, i64 1
  store i32** %96, i32*** %41, align 8
  %97 = load i64, i64* %69, align 8
  %98 = ptrtoint i32** %96 to i64
  %99 = sub i64 %97, %98
  %100 = ashr exact i64 %99, 3
  %101 = icmp ugt i64 %100, 2
  br i1 %101, label %91, label %102

102:                                              ; preds = %91
  %103 = inttoptr i64 %97 to i32**
  br label %104

104:                                              ; preds = %102, %67
  %105 = phi i32** [ %48, %67 ], [ %103, %102 ]
  %106 = phi i32** [ %42, %67 ], [ %96, %102 ]
  %107 = phi i64 [ %71, %67 ], [ %100, %102 ]
  switch i64 %107, label %111 [
    i64 1, label %109
    i64 2, label %108
  ]

108:                                              ; preds = %104
  br label %109

109:                                              ; preds = %104, %108
  %110 = phi i64 [ 1024, %108 ], [ 512, %104 ]
  store i64 %110, i64* %43, align 8
  br label %111

111:                                              ; preds = %109, %104
  %112 = icmp eq i32** %106, %105
  br i1 %112, label %131, label %113

113:                                              ; preds = %111, %113
  %114 = phi i32** [ %117, %113 ], [ %106, %111 ]
  %115 = bitcast i32** %114 to i8**
  %116 = load i8*, i8** %115, align 8
  call void @_ZdlPv(i8* %116) #11
  %117 = getelementptr inbounds i32*, i32** %114, i64 1
  %118 = icmp eq i32** %117, %105
  br i1 %118, label %119, label %113

119:                                              ; preds = %113
  %120 = load i32**, i32*** %41, align 8
  %121 = load i32**, i32*** %47, align 8
  %122 = icmp eq i32** %121, %120
  br i1 %122, label %131, label %123

123:                                              ; preds = %119
  %124 = ptrtoint i32** %120 to i64
  %125 = getelementptr i32*, i32** %121, i64 -1
  %126 = ptrtoint i32** %125 to i64
  %127 = sub i64 %126, %124
  %128 = lshr i64 %127, 3
  %129 = xor i64 %128, -1
  %130 = getelementptr i32*, i32** %121, i64 %129
  store i32** %130, i32*** %47, align 8
  br label %131

131:                                              ; preds = %123, %119, %111
  %132 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load i32**, i32*** %132, align 8
  %134 = icmp eq i32** %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %131
  %136 = bitcast i32** %133 to i8*
  call void @_ZdlPv(i8* %136) #11
  br label %137

137:                                              ; preds = %131, %135
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %38) #10
  %138 = load i64, i64* %18, align 8
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %421, label %140

140:                                              ; preds = %137
  %141 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %142 = bitcast %"class.std::__1::__tree_end_node"* %141 to %"class.std::__1::__tree_node"**
  %143 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %144 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  %145 = bitcast %"class.std::__1::set"* %2 to i64*
  %146 = bitcast %"class.CPDF_ReadValidator::ScopedSession"* %5 to i8*
  %147 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.fxcrt::RetainPtr"* %6 to i64*
  %149 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %150 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 2, i32 0
  %151 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %152 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4
  %153 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %154 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %141, i64 0, i32 0
  %155 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %152, i64 0, i32 0, i32 0
  %156 = bitcast %"class.std::__1::set"* %152 to i64*
  %157 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %158 = bitcast %"class.CPDF_ReadValidator::ScopedSession"* %5 to i8*
  br label %159

159:                                              ; preds = %140, %418
  %160 = phi i64 [ %138, %140 ], [ %419, %418 ]
  %161 = load i64, i64* %17, align 16
  %162 = add i64 %160, -1
  %163 = add i64 %161, %162
  %164 = load i32**, i32*** %15, align 8
  %165 = lshr i64 %163, 10
  %166 = getelementptr inbounds i32*, i32** %164, i64 %165
  %167 = load i32*, i32** %166, align 8
  %168 = and i64 %163, 1023
  %169 = getelementptr inbounds i32, i32* %167, i64 %168
  %170 = load i32, i32* %169, align 4
  store i64 %162, i64* %18, align 8
  %171 = load i64, i64* %27, align 16
  %172 = ptrtoint i32** %164 to i64
  %173 = sub i64 %171, %172
  %174 = icmp eq i64 %173, 0
  %175 = shl i64 %173, 7
  %176 = add i64 %175, -1
  %177 = select i1 %174, i64 0, i64 %176
  %178 = sub i64 1, %160
  %179 = sub i64 %178, %161
  %180 = add i64 %179, %177
  %181 = icmp ult i64 %180, 2048
  br i1 %181, label %189, label %182

182:                                              ; preds = %159
  %183 = inttoptr i64 %171 to i32**
  %184 = getelementptr inbounds i32*, i32** %183, i64 -1
  %185 = bitcast i32** %184 to i8**
  %186 = load i8*, i8** %185, align 8
  call void @_ZdlPv(i8* %186) #11
  %187 = load i32**, i32*** %16, align 16
  %188 = getelementptr i32*, i32** %187, i64 -1
  store i32** %188, i32*** %16, align 16
  br label %189

189:                                              ; preds = %159, %182
  %190 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %142, align 8
  %191 = icmp eq %"class.std::__1::__tree_node"* %190, null
  br i1 %191, label %213, label %192

192:                                              ; preds = %189, %192
  %193 = phi %"class.std::__1::__tree_end_node"* [ %203, %192 ], [ %141, %189 ]
  %194 = phi %"class.std::__1::__tree_node"* [ %204, %192 ], [ %190, %189 ]
  %195 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %194, i64 0, i32 1
  %196 = load i32, i32* %195, align 4
  %197 = icmp ult i32 %196, %170
  %198 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %194, i64 0, i32 0, i32 1
  %199 = bitcast %"class.std::__1::__tree_node_base"** %198 to %"class.std::__1::__tree_node"**
  %200 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %194, i64 0, i32 0, i32 0
  %201 = bitcast %"class.std::__1::__tree_node"* %194 to %"class.std::__1::__tree_node"**
  %202 = select i1 %197, %"class.std::__1::__tree_node"** %199, %"class.std::__1::__tree_node"** %201
  %203 = select i1 %197, %"class.std::__1::__tree_end_node"* %193, %"class.std::__1::__tree_end_node"* %200
  %204 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %202, align 8
  %205 = icmp eq %"class.std::__1::__tree_node"* %204, null
  br i1 %205, label %206, label %192

206:                                              ; preds = %192
  %207 = icmp eq %"class.std::__1::__tree_end_node"* %203, %141
  br i1 %207, label %213, label %208

208:                                              ; preds = %206
  %209 = bitcast %"class.std::__1::__tree_end_node"* %203 to %"class.std::__1::__tree_node"*
  %210 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %209, i64 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = icmp ugt i32 %211, %170
  br i1 %212, label %213, label %418

213:                                              ; preds = %208, %206, %189
  %214 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %143, align 8
  %215 = icmp eq %"class.std::__1::__tree_node"* %214, null
  br i1 %215, label %242, label %216

216:                                              ; preds = %213, %238
  %217 = phi %"class.std::__1::__tree_node"* [ %241, %238 ], [ %214, %213 ]
  %218 = phi %"class.std::__1::__tree_node_base"** [ %240, %238 ], [ %9, %213 ]
  %219 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %217, i64 0, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = icmp ult i32 %170, %220
  br i1 %221, label %222, label %228

222:                                              ; preds = %216
  %223 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %217, i64 0, i32 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %226, label %238

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %217, i64 0, i32 0, i32 0
  br label %242

228:                                              ; preds = %216
  %229 = icmp ult i32 %220, %170
  br i1 %229, label %230, label %236

230:                                              ; preds = %228
  %231 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %217, i64 0, i32 0, i32 1
  %232 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %231, align 8
  %233 = icmp eq %"class.std::__1::__tree_node_base"* %232, null
  br i1 %233, label %234, label %238

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %217, i64 0, i32 0, i32 0
  br label %242

236:                                              ; preds = %228
  %237 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %217, i64 0, i32 0, i32 0
  br label %242

238:                                              ; preds = %230, %222
  %239 = phi %"class.std::__1::__tree_node_base"* [ %224, %222 ], [ %232, %230 ]
  %240 = phi %"class.std::__1::__tree_node_base"** [ %223, %222 ], [ %231, %230 ]
  %241 = bitcast %"class.std::__1::__tree_node_base"* %239 to %"class.std::__1::__tree_node"*
  br label %216

242:                                              ; preds = %213, %236, %234, %226
  %243 = phi %"class.std::__1::__tree_end_node"* [ %227, %226 ], [ %235, %234 ], [ %237, %236 ], [ %11, %213 ]
  %244 = phi %"class.std::__1::__tree_node_base"** [ %223, %226 ], [ %231, %234 ], [ %218, %236 ], [ %144, %213 ]
  %245 = bitcast %"class.std::__1::__tree_node_base"** %244 to %"class.std::__1::__tree_node"**
  %246 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %245, align 8
  %247 = icmp eq %"class.std::__1::__tree_node"* %246, null
  br i1 %247, label %248, label %418

248:                                              ; preds = %242
  %249 = call i8* @_Znwm(i64 32) #11, !noalias !12
  %250 = getelementptr inbounds i8, i8* %249, i64 28
  %251 = bitcast i8* %250 to i32*
  store i32 %170, i32* %251, align 4, !noalias !12
  %252 = bitcast i8* %249 to %"class.std::__1::__tree_node_base"*
  %253 = getelementptr inbounds i8, i8* %249, i64 16
  %254 = bitcast i8* %253 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %249, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %243, %"class.std::__1::__tree_end_node"** %254, align 8
  %255 = bitcast %"class.std::__1::__tree_node_base"** %244 to i8**
  store i8* %249, i8** %255, align 8
  %256 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %8, align 8
  %257 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %256, i64 0, i32 0
  %258 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %257, align 8
  %259 = icmp eq %"class.std::__1::__tree_node_base"* %258, null
  br i1 %259, label %263, label %260

260:                                              ; preds = %248
  %261 = ptrtoint %"class.std::__1::__tree_node_base"* %258 to i64
  store i64 %261, i64* %145, align 8
  %262 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  br label %263

263:                                              ; preds = %260, %248
  %264 = phi %"class.std::__1::__tree_node_base"* [ %252, %248 ], [ %262, %260 ]
  %265 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %265, %"class.std::__1::__tree_node_base"* %264) #10
  %266 = load i64, i64* %10, align 8
  %267 = add i64 %266, 1
  store i64 %267, i64* %10, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %146) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 -86, i64 16, i1 false)
  %268 = load %class.CPDF_ReadValidator*, %class.CPDF_ReadValidator** %147, align 8
  %269 = ptrtoint %class.CPDF_ReadValidator* %268 to i64
  store i64 %269, i64* %148, align 8
  %270 = icmp eq %class.CPDF_ReadValidator* %268, null
  br i1 %270, label %283, label %271

271:                                              ; preds = %263
  %272 = bitcast %class.CPDF_ReadValidator* %268 to i8**
  %273 = load i8*, i8** %272, align 8
  %274 = getelementptr i8, i8* %273, i64 -32
  %275 = bitcast i8* %274 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = getelementptr inbounds %class.CPDF_ReadValidator, %class.CPDF_ReadValidator* %268, i64 0, i32 1
  %278 = bitcast %"class.fxcrt::RetainPtr.0"* %277 to i8*
  %279 = getelementptr inbounds i8, i8* %278, i64 %276
  %280 = bitcast i8* %279 to i64*
  %281 = load i64, i64* %280, align 8
  %282 = add nsw i64 %281, 1
  store i64 %282, i64* %280, align 8
  br label %283

283:                                              ; preds = %263, %271
  call void @_ZN18CPDF_ReadValidator13ScopedSessionC1EN5fxcrt9RetainPtrIS_EE(%"class.CPDF_ReadValidator::ScopedSession"* nonnull %5, %"class.fxcrt::RetainPtr"* nonnull %6) #10
  %284 = load %class.CPDF_ReadValidator*, %class.CPDF_ReadValidator** %149, align 8
  store %class.CPDF_ReadValidator* null, %class.CPDF_ReadValidator** %149, align 8
  %285 = icmp eq %class.CPDF_ReadValidator* %284, null
  br i1 %285, label %307, label %286

286:                                              ; preds = %283
  %287 = bitcast %class.CPDF_ReadValidator* %284 to i8**
  %288 = load i8*, i8** %287, align 8
  %289 = getelementptr i8, i8* %288, i64 -32
  %290 = bitcast i8* %289 to i64*
  %291 = load i64, i64* %290, align 8
  %292 = bitcast %class.CPDF_ReadValidator* %284 to i8*
  %293 = getelementptr inbounds i8, i8* %292, i64 %291
  %294 = getelementptr inbounds i8, i8* %293, i64 8
  %295 = bitcast i8* %294 to i64*
  %296 = load i64, i64* %295, align 8
  %297 = add nsw i64 %296, -1
  store i64 %297, i64* %295, align 8
  %298 = icmp ne i64 %297, 0
  %299 = icmp eq i8* %293, null
  %300 = or i1 %299, %298
  br i1 %300, label %307, label %301

301:                                              ; preds = %286
  %302 = bitcast i8* %293 to %"class.fxcrt::Retainable"*
  %303 = bitcast i8* %293 to void (%"class.fxcrt::Retainable"*)***
  %304 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %303, align 8
  %305 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %304, i64 1
  %306 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %305, align 8
  call void %306(%"class.fxcrt::Retainable"* nonnull %302) #10
  br label %307

307:                                              ; preds = %283, %286, %301
  %308 = load %class.CPDF_IndirectObjectHolder*, %class.CPDF_IndirectObjectHolder** %150, align 8
  %309 = bitcast %class.CPDF_IndirectObjectHolder* %308 to %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)***
  %310 = load %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)**, %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)*** %309, align 8
  %311 = getelementptr inbounds %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)*, %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)** %310, i64 2
  %312 = load %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)*, %class.CPDF_Object* (%class.CPDF_IndirectObjectHolder*, i32)** %311, align 8
  %313 = call %class.CPDF_Object* %312(%class.CPDF_IndirectObjectHolder* %308, i32 %170) #10
  %314 = load %class.CPDF_Object*, %class.CPDF_Object** %151, align 8
  %315 = icmp eq %class.CPDF_Object* %314, %313
  br i1 %315, label %417, label %316

316:                                              ; preds = %307
  %317 = load %class.CPDF_ReadValidator*, %class.CPDF_ReadValidator** %147, align 8
  %318 = getelementptr inbounds %class.CPDF_ReadValidator, %class.CPDF_ReadValidator* %317, i64 0, i32 4
  %319 = load i8, i8* %318, align 8, !range !8
  %320 = icmp eq i8 %319, 0
  br i1 %320, label %321, label %327

321:                                              ; preds = %316
  %322 = getelementptr inbounds %class.CPDF_ReadValidator, %class.CPDF_ReadValidator* %317, i64 0, i32 5
  %323 = load i8, i8* %322, align 1, !range !8
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %325, label %327

325:                                              ; preds = %321
  %326 = call zeroext i1 @_ZNK16CPDF_ObjectAvail19AppendObjectSubRefsEPK11CPDF_ObjectPNSt3__15stackIjNS3_5dequeIjNS3_9allocatorIjEEEEEE(%class.CPDF_ObjectAvail* %0, %class.CPDF_Object* %313, %"class.std::__1::stack"* nonnull %3)
  br i1 %326, label %362, label %327

327:                                              ; preds = %321, %316, %325
  %328 = load i64, i64* %26, align 8
  %329 = load i64, i64* %21, align 8
  %330 = sub i64 %328, %329
  %331 = icmp eq i64 %330, 0
  %332 = shl i64 %330, 7
  %333 = add i64 %332, -1
  %334 = select i1 %331, i64 0, i64 %333
  %335 = load i64, i64* %32, align 8
  %336 = load i64, i64* %33, align 8
  %337 = add i64 %336, %335
  %338 = icmp eq i64 %334, %337
  %339 = inttoptr i64 %329 to i32**
  %340 = inttoptr i64 %328 to i32**
  br i1 %338, label %341, label %347

341:                                              ; preds = %327
  call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque"* %40) #10
  %342 = load i64, i64* %33, align 8
  %343 = load i64, i64* %32, align 8
  %344 = load i32**, i32*** %20, align 8
  %345 = load i32**, i32*** %25, align 8
  %346 = add i64 %343, %342
  br label %347

347:                                              ; preds = %341, %327
  %348 = phi i64 [ %346, %341 ], [ %337, %327 ]
  %349 = phi i32** [ %345, %341 ], [ %340, %327 ]
  %350 = phi i32** [ %344, %341 ], [ %339, %327 ]
  %351 = icmp eq i32** %349, %350
  br i1 %351, label %358, label %352

352:                                              ; preds = %347
  %353 = lshr i64 %348, 10
  %354 = getelementptr inbounds i32*, i32** %350, i64 %353
  %355 = load i32*, i32** %354, align 8
  %356 = and i64 %348, 1023
  %357 = getelementptr inbounds i32, i32* %355, i64 %356
  br label %358

358:                                              ; preds = %347, %352
  %359 = phi i32* [ %357, %352 ], [ null, %347 ]
  store i32 %170, i32* %359, align 4
  %360 = load i64, i64* %33, align 8
  %361 = add i64 %360, 1
  store i64 %361, i64* %33, align 8
  br label %417

362:                                              ; preds = %325
  %363 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %142, align 8
  %364 = icmp eq %"class.std::__1::__tree_node"* %363, null
  br i1 %364, label %391, label %365

365:                                              ; preds = %362, %387
  %366 = phi %"class.std::__1::__tree_node"* [ %390, %387 ], [ %363, %362 ]
  %367 = phi %"class.std::__1::__tree_node_base"** [ %389, %387 ], [ %153, %362 ]
  %368 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %366, i64 0, i32 1
  %369 = load i32, i32* %368, align 4
  %370 = icmp ult i32 %170, %369
  br i1 %370, label %371, label %377

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %366, i64 0, i32 0, i32 0, i32 0
  %373 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %372, align 8
  %374 = icmp eq %"class.std::__1::__tree_node_base"* %373, null
  br i1 %374, label %375, label %387

375:                                              ; preds = %371
  %376 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %366, i64 0, i32 0, i32 0
  br label %391

377:                                              ; preds = %365
  %378 = icmp ult i32 %369, %170
  br i1 %378, label %379, label %385

379:                                              ; preds = %377
  %380 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %366, i64 0, i32 0, i32 1
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  %382 = icmp eq %"class.std::__1::__tree_node_base"* %381, null
  br i1 %382, label %383, label %387

383:                                              ; preds = %379
  %384 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %366, i64 0, i32 0, i32 0
  br label %391

385:                                              ; preds = %377
  %386 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %366, i64 0, i32 0, i32 0
  br label %391

387:                                              ; preds = %379, %371
  %388 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %381, %379 ]
  %389 = phi %"class.std::__1::__tree_node_base"** [ %372, %371 ], [ %380, %379 ]
  %390 = bitcast %"class.std::__1::__tree_node_base"* %388 to %"class.std::__1::__tree_node"*
  br label %365

391:                                              ; preds = %362, %385, %383, %375
  %392 = phi %"class.std::__1::__tree_end_node"* [ %376, %375 ], [ %384, %383 ], [ %386, %385 ], [ %141, %362 ]
  %393 = phi %"class.std::__1::__tree_node_base"** [ %372, %375 ], [ %380, %383 ], [ %367, %385 ], [ %154, %362 ]
  %394 = bitcast %"class.std::__1::__tree_node_base"** %393 to %"class.std::__1::__tree_node"**
  %395 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %394, align 8
  %396 = icmp eq %"class.std::__1::__tree_node"* %395, null
  br i1 %396, label %397, label %417

397:                                              ; preds = %391
  %398 = call i8* @_Znwm(i64 32) #11, !noalias !15
  %399 = getelementptr inbounds i8, i8* %398, i64 28
  %400 = bitcast i8* %399 to i32*
  store i32 %170, i32* %400, align 4, !noalias !15
  %401 = bitcast i8* %398 to %"class.std::__1::__tree_node_base"*
  %402 = getelementptr inbounds i8, i8* %398, i64 16
  %403 = bitcast i8* %402 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %398, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %392, %"class.std::__1::__tree_end_node"** %403, align 8
  %404 = bitcast %"class.std::__1::__tree_node_base"** %393 to i8**
  store i8* %398, i8** %404, align 8
  %405 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %155, align 8
  %406 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %405, i64 0, i32 0
  %407 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %406, align 8
  %408 = icmp eq %"class.std::__1::__tree_node_base"* %407, null
  br i1 %408, label %412, label %409

409:                                              ; preds = %397
  %410 = ptrtoint %"class.std::__1::__tree_node_base"* %407 to i64
  store i64 %410, i64* %156, align 8
  %411 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %393, align 8
  br label %412

412:                                              ; preds = %409, %397
  %413 = phi %"class.std::__1::__tree_node_base"* [ %401, %397 ], [ %411, %409 ]
  %414 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %153, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %414, %"class.std::__1::__tree_node_base"* %413) #10
  %415 = load i64, i64* %157, align 8
  %416 = add i64 %415, 1
  store i64 %416, i64* %157, align 8
  br label %417

417:                                              ; preds = %412, %391, %307, %358
  call void @_ZN18CPDF_ReadValidator13ScopedSessionD1Ev(%"class.CPDF_ReadValidator::ScopedSession"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %146) #10
  br label %418

418:                                              ; preds = %208, %242, %417
  %419 = load i64, i64* %18, align 8
  %420 = icmp eq i64 %419, 0
  br i1 %420, label %421, label %159

421:                                              ; preds = %418, %137
  %422 = load i64, i64* %33, align 8
  %423 = icmp eq i64 %422, 0
  %424 = load i32**, i32*** %15, align 8
  %425 = load i32**, i32*** %16, align 16
  %426 = ptrtoint i32** %425 to i64
  %427 = ptrtoint i32** %424 to i64
  store i64 0, i64* %18, align 8
  %428 = sub i64 %426, %427
  %429 = ashr exact i64 %428, 3
  %430 = icmp ugt i64 %429, 2
  br i1 %430, label %431, label %444

431:                                              ; preds = %421, %431
  %432 = phi i32** [ %436, %431 ], [ %424, %421 ]
  %433 = bitcast i32** %432 to i8**
  %434 = load i8*, i8** %433, align 8
  call void @_ZdlPv(i8* %434) #11
  %435 = load i32**, i32*** %15, align 8
  %436 = getelementptr inbounds i32*, i32** %435, i64 1
  store i32** %436, i32*** %15, align 8
  %437 = load i64, i64* %27, align 16
  %438 = ptrtoint i32** %436 to i64
  %439 = sub i64 %437, %438
  %440 = ashr exact i64 %439, 3
  %441 = icmp ugt i64 %440, 2
  br i1 %441, label %431, label %442

442:                                              ; preds = %431
  %443 = inttoptr i64 %437 to i32**
  br label %444

444:                                              ; preds = %442, %421
  %445 = phi i32** [ %425, %421 ], [ %443, %442 ]
  %446 = phi i32** [ %424, %421 ], [ %436, %442 ]
  %447 = phi i64 [ %429, %421 ], [ %440, %442 ]
  switch i64 %447, label %451 [
    i64 1, label %449
    i64 2, label %448
  ]

448:                                              ; preds = %444
  br label %449

449:                                              ; preds = %444, %448
  %450 = phi i64 [ 1024, %448 ], [ 512, %444 ]
  store i64 %450, i64* %17, align 16
  br label %451

451:                                              ; preds = %449, %444
  %452 = icmp eq i32** %446, %445
  br i1 %452, label %471, label %453

453:                                              ; preds = %451, %453
  %454 = phi i32** [ %457, %453 ], [ %446, %451 ]
  %455 = bitcast i32** %454 to i8**
  %456 = load i8*, i8** %455, align 8
  call void @_ZdlPv(i8* %456) #11
  %457 = getelementptr inbounds i32*, i32** %454, i64 1
  %458 = icmp eq i32** %457, %445
  br i1 %458, label %459, label %453

459:                                              ; preds = %453
  %460 = load i32**, i32*** %15, align 8
  %461 = load i32**, i32*** %16, align 16
  %462 = icmp eq i32** %461, %460
  br i1 %462, label %471, label %463

463:                                              ; preds = %459
  %464 = ptrtoint i32** %460 to i64
  %465 = getelementptr i32*, i32** %461, i64 -1
  %466 = ptrtoint i32** %465 to i64
  %467 = sub i64 %466, %464
  %468 = lshr i64 %467, 3
  %469 = xor i64 %468, -1
  %470 = getelementptr i32*, i32** %461, i64 %469
  store i32** %470, i32*** %16, align 16
  br label %471

471:                                              ; preds = %463, %459, %451
  %472 = load i32**, i32*** %14, align 16
  %473 = icmp eq i32** %472, null
  br i1 %473, label %476, label %474

474:                                              ; preds = %471
  %475 = bitcast i32** %472 to i8*
  call void @_ZdlPv(i8* %475) #11
  br label %476

476:                                              ; preds = %471, %474
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #10
  %477 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %2, i64 0, i32 0
  %478 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %479 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %478, align 8
  call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.27"* nonnull %477, %"class.std::__1::__tree_node"* %479) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #10
  ret i1 %423
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16CPDF_ObjectAvail11CleanMemoryEv(%class.CPDF_ObjectAvail*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.CPDF_Object*, %class.CPDF_Object** %2, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %2, align 8
  %4 = icmp eq %class.CPDF_Object* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %3, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, -1
  store i64 %8, i64* %6, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %3, i64 0, i32 0
  %12 = bitcast %class.CPDF_Object* %3 to void (%"class.fxcrt::Retainable"*)***
  %13 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %13, i64 1
  %15 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %14, align 8
  tail call void %15(%"class.fxcrt::Retainable"* nonnull %11) #10
  br label %16

16:                                               ; preds = %1, %5, %10
  %17 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %17, i64 0, i32 0
  %19 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node"**
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.27"* %18, %"class.std::__1::__tree_node"* %21) #10
  %22 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %17, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %19, %"class.std::__1::__tree_end_node"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %19, i64 0, i32 0
  store %"class.std::__1::__tree_node_base"* null, %"class.std::__1::__tree_node_base"** %24, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK16CPDF_ObjectAvail15HasObjectParsedEj(%class.CPDF_ObjectAvail* readonly, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %28, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp ult i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %28, label %23

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node"*
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = icmp ugt i32 %26, %1
  br i1 %27, label %28, label %29

28:                                               ; preds = %23, %21, %2
  br label %29

29:                                               ; preds = %23, %28
  %30 = phi %"class.std::__1::__tree_end_node"* [ %3, %28 ], [ %18, %23 ]
  %31 = icmp ne %"class.std::__1::__tree_end_node"* %30, %3
  ret i1 %31
}

declare void @_ZN18CPDF_ReadValidator13ScopedSessionC1EN5fxcrt9RetainPtrIS_EE(%"class.CPDF_ReadValidator::ScopedSession"*, %"class.fxcrt::RetainPtr"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN18CPDF_ReadValidator13ScopedSessionD1Ev(%"class.CPDF_ReadValidator::ScopedSession"*) unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK16CPDF_ObjectAvail19AppendObjectSubRefsEPK11CPDF_ObjectPNSt3__15stackIjNS3_5dequeIjNS3_9allocatorIjEEEEEE(%class.CPDF_ObjectAvail*, %class.CPDF_Object*, %"class.std::__1::stack"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.CPDF_ObjectWalker, align 8
  %5 = alloca %"class.CPDF_ReadValidator::ScopedSession", align 8
  %6 = alloca %"class.fxcrt::RetainPtr", align 8
  %7 = icmp eq %class.CPDF_Object* %1, null
  br i1 %7, label %152, label %8

8:                                                ; preds = %3
  %9 = bitcast %class.CPDF_ObjectWalker* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 80, i1 false)
  call void @_ZN17CPDF_ObjectWalkerC1EPK11CPDF_Object(%class.CPDF_ObjectWalker* nonnull %4, %class.CPDF_Object* nonnull %1) #10
  %10 = call %class.CPDF_Object* @_ZN17CPDF_ObjectWalker7GetNextEv(%class.CPDF_ObjectWalker* nonnull %4) #10
  %11 = icmp eq %class.CPDF_Object* %10, null
  br i1 %11, label %150, label %12

12:                                               ; preds = %8
  %13 = bitcast %"class.CPDF_ReadValidator::ScopedSession"* %5 to i8*
  %14 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.fxcrt::RetainPtr"* %6 to i64*
  %16 = getelementptr inbounds %"class.fxcrt::RetainPtr", %"class.fxcrt::RetainPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %class.CPDF_ObjectWalker, %class.CPDF_ObjectWalker* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %class.CPDF_ObjectAvail, %class.CPDF_ObjectAvail* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %class.CPDF_ObjectWalker, %class.CPDF_ObjectWalker* %4, i64 0, i32 2
  %20 = bitcast %class.CPDF_ObjectAvail* %0 to i1 (%class.CPDF_ObjectAvail*, %class.CPDF_Object*)***
  %21 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = bitcast i32*** %21 to i64*
  %23 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast i32*** %23 to i64*
  %25 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %2, i64 0, i32 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %2, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %2, i64 0, i32 0
  %28 = bitcast %"class.CPDF_ReadValidator::ScopedSession"* %5 to i8*
  br label %29

29:                                               ; preds = %12, %147
  %30 = phi %class.CPDF_Object* [ %10, %12 ], [ %148, %147 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 16, i1 false)
  %31 = load %class.CPDF_ReadValidator*, %class.CPDF_ReadValidator** %14, align 8
  %32 = ptrtoint %class.CPDF_ReadValidator* %31 to i64
  store i64 %32, i64* %15, align 8
  %33 = icmp eq %class.CPDF_ReadValidator* %31, null
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = bitcast %class.CPDF_ReadValidator* %31 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr i8, i8* %36, i64 -32
  %38 = bitcast i8* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %class.CPDF_ReadValidator, %class.CPDF_ReadValidator* %31, i64 0, i32 1
  %41 = bitcast %"class.fxcrt::RetainPtr.0"* %40 to i8*
  %42 = getelementptr inbounds i8, i8* %41, i64 %39
  %43 = bitcast i8* %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = add nsw i64 %44, 1
  store i64 %45, i64* %43, align 8
  br label %46

46:                                               ; preds = %29, %34
  call void @_ZN18CPDF_ReadValidator13ScopedSessionC1EN5fxcrt9RetainPtrIS_EE(%"class.CPDF_ReadValidator::ScopedSession"* nonnull %5, %"class.fxcrt::RetainPtr"* nonnull %6) #10
  %47 = load %class.CPDF_ReadValidator*, %class.CPDF_ReadValidator** %16, align 8
  store %class.CPDF_ReadValidator* null, %class.CPDF_ReadValidator** %16, align 8
  %48 = icmp eq %class.CPDF_ReadValidator* %47, null
  br i1 %48, label %70, label %49

49:                                               ; preds = %46
  %50 = bitcast %class.CPDF_ReadValidator* %47 to i8**
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr i8, i8* %51, i64 -32
  %53 = bitcast i8* %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %class.CPDF_ReadValidator* %47 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 %54
  %57 = getelementptr inbounds i8, i8* %56, i64 8
  %58 = bitcast i8* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = add nsw i64 %59, -1
  store i64 %60, i64* %58, align 8
  %61 = icmp ne i64 %60, 0
  %62 = icmp eq i8* %56, null
  %63 = or i1 %62, %61
  br i1 %63, label %70, label %64

64:                                               ; preds = %49
  %65 = bitcast i8* %56 to %"class.fxcrt::Retainable"*
  %66 = bitcast i8* %56 to void (%"class.fxcrt::Retainable"*)***
  %67 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %67, i64 1
  %69 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %68, align 8
  call void %69(%"class.fxcrt::Retainable"* nonnull %65) #10
  br label %70

70:                                               ; preds = %46, %49, %64
  %71 = load %class.CPDF_Object*, %class.CPDF_Object** %17, align 8
  %72 = icmp eq %class.CPDF_Object* %71, null
  br i1 %72, label %76, label %73

73:                                               ; preds = %70
  %74 = load %class.CPDF_Object*, %class.CPDF_Object** %18, align 8
  %75 = icmp eq %class.CPDF_Object* %74, %30
  br i1 %75, label %86, label %76

76:                                               ; preds = %70, %73
  %77 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* %19, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #10
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = load %class.CPDF_Object*, %class.CPDF_Object** %18, align 8
  %80 = icmp eq %class.CPDF_Object* %79, %30
  br i1 %80, label %86, label %81

81:                                               ; preds = %78
  %82 = load i1 (%class.CPDF_ObjectAvail*, %class.CPDF_Object*)**, i1 (%class.CPDF_ObjectAvail*, %class.CPDF_Object*)*** %20, align 8
  %83 = getelementptr inbounds i1 (%class.CPDF_ObjectAvail*, %class.CPDF_Object*)*, i1 (%class.CPDF_ObjectAvail*, %class.CPDF_Object*)** %82, i64 2
  %84 = load i1 (%class.CPDF_ObjectAvail*, %class.CPDF_Object*)*, i1 (%class.CPDF_ObjectAvail*, %class.CPDF_Object*)** %83, align 8
  %85 = call zeroext i1 %84(%class.CPDF_ObjectAvail* %0, %class.CPDF_Object* nonnull %30) #10
  br label %86

86:                                               ; preds = %78, %81, %76, %73
  %87 = phi i1 [ true, %76 ], [ true, %73 ], [ false, %78 ], [ %85, %81 ]
  %88 = load %class.CPDF_ReadValidator*, %class.CPDF_ReadValidator** %14, align 8
  %89 = getelementptr inbounds %class.CPDF_ReadValidator, %class.CPDF_ReadValidator* %88, i64 0, i32 4
  %90 = load i8, i8* %89, align 8, !range !8
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %146

92:                                               ; preds = %86
  %93 = getelementptr inbounds %class.CPDF_ReadValidator, %class.CPDF_ReadValidator* %88, i64 0, i32 5
  %94 = load i8, i8* %93, align 1, !range !8
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %146

96:                                               ; preds = %92
  br i1 %87, label %97, label %98

97:                                               ; preds = %96
  call void @_ZN17CPDF_ObjectWalker25SkipWalkIntoCurrentObjectEv(%class.CPDF_ObjectWalker* nonnull %4) #10
  br label %147

98:                                               ; preds = %96
  %99 = bitcast %class.CPDF_Object* %30 to i1 (%class.CPDF_Object*)***
  %100 = load i1 (%class.CPDF_Object*)**, i1 (%class.CPDF_Object*)*** %99, align 8
  %101 = getelementptr inbounds i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %100, i64 19
  %102 = load i1 (%class.CPDF_Object*)*, i1 (%class.CPDF_Object*)** %101, align 8
  %103 = call zeroext i1 %102(%class.CPDF_Object* nonnull %30) #10
  br i1 %103, label %104, label %147

104:                                              ; preds = %98
  %105 = bitcast %class.CPDF_Object* %30 to %class.CPDF_Reference* (%class.CPDF_Object*)***
  %106 = load %class.CPDF_Reference* (%class.CPDF_Object*)**, %class.CPDF_Reference* (%class.CPDF_Object*)*** %105, align 8
  %107 = getelementptr inbounds %class.CPDF_Reference* (%class.CPDF_Object*)*, %class.CPDF_Reference* (%class.CPDF_Object*)** %106, i64 34
  %108 = load %class.CPDF_Reference* (%class.CPDF_Object*)*, %class.CPDF_Reference* (%class.CPDF_Object*)** %107, align 8
  %109 = call %class.CPDF_Reference* %108(%class.CPDF_Object* nonnull %30) #10
  %110 = getelementptr inbounds %class.CPDF_Reference, %class.CPDF_Reference* %109, i64 0, i32 2
  %111 = load i32, i32* %110, align 8
  %112 = load i64, i64* %22, align 8
  %113 = load i64, i64* %24, align 8
  %114 = sub i64 %112, %113
  %115 = icmp eq i64 %114, 0
  %116 = shl i64 %114, 7
  %117 = add i64 %116, -1
  %118 = select i1 %115, i64 0, i64 %117
  %119 = load i64, i64* %25, align 8
  %120 = load i64, i64* %26, align 8
  %121 = add i64 %120, %119
  %122 = icmp eq i64 %118, %121
  %123 = inttoptr i64 %113 to i32**
  %124 = inttoptr i64 %112 to i32**
  br i1 %122, label %125, label %131

125:                                              ; preds = %104
  call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque"* %27) #10
  %126 = load i64, i64* %26, align 8
  %127 = load i64, i64* %25, align 8
  %128 = load i32**, i32*** %23, align 8
  %129 = load i32**, i32*** %21, align 8
  %130 = add i64 %127, %126
  br label %131

131:                                              ; preds = %125, %104
  %132 = phi i64 [ %130, %125 ], [ %121, %104 ]
  %133 = phi i32** [ %129, %125 ], [ %124, %104 ]
  %134 = phi i32** [ %128, %125 ], [ %123, %104 ]
  %135 = icmp eq i32** %133, %134
  br i1 %135, label %142, label %136

136:                                              ; preds = %131
  %137 = lshr i64 %132, 10
  %138 = getelementptr inbounds i32*, i32** %134, i64 %137
  %139 = load i32*, i32** %138, align 8
  %140 = and i64 %132, 1023
  %141 = getelementptr inbounds i32, i32* %139, i64 %140
  br label %142

142:                                              ; preds = %131, %136
  %143 = phi i32* [ %141, %136 ], [ null, %131 ]
  store i32 %111, i32* %143, align 4
  %144 = load i64, i64* %26, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %26, align 8
  br label %147

146:                                              ; preds = %92, %86
  call void @_ZN18CPDF_ReadValidator13ScopedSessionD1Ev(%"class.CPDF_ReadValidator::ScopedSession"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #10
  br label %150

147:                                              ; preds = %97, %142, %98
  call void @_ZN18CPDF_ReadValidator13ScopedSessionD1Ev(%"class.CPDF_ReadValidator::ScopedSession"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #10
  %148 = call %class.CPDF_Object* @_ZN17CPDF_ObjectWalker7GetNextEv(%class.CPDF_ObjectWalker* nonnull %4) #10
  %149 = icmp eq %class.CPDF_Object* %148, null
  br i1 %149, label %150, label %29

150:                                              ; preds = %147, %8, %146
  %151 = phi i1 [ false, %146 ], [ true, %8 ], [ true, %147 ]
  call void @_ZN17CPDF_ObjectWalkerD1Ev(%class.CPDF_ObjectWalker* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %9) #10
  br label %152

152:                                              ; preds = %3, %150
  %153 = phi i1 [ %151, %150 ], [ true, %3 ]
  ret i1 %153
}

declare void @_ZN17CPDF_ObjectWalkerC1EPK11CPDF_Object(%class.CPDF_ObjectWalker*, %class.CPDF_Object*) unnamed_addr #5

declare %class.CPDF_Object* @_ZN17CPDF_ObjectWalker7GetNextEv(%class.CPDF_ObjectWalker*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #5

declare void @_ZN17CPDF_ObjectWalker25SkipWalkIntoCurrentObjectEv(%class.CPDF_ObjectWalker*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN17CPDF_ObjectWalkerD1Ev(%class.CPDF_ObjectWalker*) unnamed_addr #6

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK16CPDF_ObjectAvail13ExcludeObjectEPK11CPDF_Object(%class.CPDF_ObjectAvail* nocapture readnone, %class.CPDF_Object* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.27"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.27"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.27"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZN14CPDF_ReferenceC1EP25CPDF_IndirectObjectHolderj(%class.CPDF_Reference*, %class.CPDF_IndirectObjectHolder*, i32) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIjNS_9allocatorIjEEE13__move_assignERS3_NS_17integral_constantIbLb1EEE(%"class.std::__1::deque"*, %"class.std::__1::deque"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = lshr i64 %6, 10
  %8 = getelementptr inbounds i32*, i32** %4, i64 %7
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32**, i32*** %9, align 8
  %11 = icmp eq i32** %10, %4
  %12 = ptrtoint i32** %10 to i64
  %13 = ptrtoint i32** %4 to i64
  br i1 %11, label %14, label %16

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  br label %29

16:                                               ; preds = %2
  %17 = load i32*, i32** %8, align 8
  %18 = and i64 %6, 1023
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, %6
  %23 = lshr i64 %22, 10
  %24 = getelementptr inbounds i32*, i32** %4, i64 %23
  %25 = load i32*, i32** %24, align 8
  %26 = and i64 %22, 1023
  %27 = getelementptr inbounds i32, i32* %25, i64 %26
  %28 = icmp eq i32* %27, %19
  br i1 %28, label %29, label %35

29:                                               ; preds = %48, %16, %14
  %30 = phi i64* [ %15, %14 ], [ %20, %16 ], [ %20, %48 ]
  store i64 0, i64* %30, align 8
  %31 = bitcast i32*** %9 to i64*
  %32 = sub i64 %12, %13
  %33 = ashr exact i64 %32, 3
  %34 = icmp ugt i64 %33, 2
  br i1 %34, label %53, label %64

35:                                               ; preds = %16, %48
  %36 = phi i32* [ %51, %48 ], [ %19, %16 ]
  %37 = phi i32** [ %50, %48 ], [ %8, %16 ]
  %38 = getelementptr inbounds i32, i32* %36, i64 1
  %39 = ptrtoint i32* %38 to i64
  %40 = bitcast i32** %37 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = icmp eq i64 %42, 4096
  br i1 %43, label %44, label %48

44:                                               ; preds = %35
  %45 = getelementptr inbounds i32*, i32** %37, i64 1
  %46 = bitcast i32** %45 to i64*
  %47 = load i64, i64* %46, align 8
  br label %48

48:                                               ; preds = %44, %35
  %49 = phi i64 [ %47, %44 ], [ %39, %35 ]
  %50 = phi i32** [ %45, %44 ], [ %37, %35 ]
  %51 = inttoptr i64 %49 to i32*
  %52 = icmp eq i32* %27, %51
  br i1 %52, label %29, label %35

53:                                               ; preds = %29, %53
  %54 = phi i32** [ %58, %53 ], [ %4, %29 ]
  %55 = bitcast i32** %54 to i8**
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #11
  %57 = load i32**, i32*** %3, align 8
  %58 = getelementptr inbounds i32*, i32** %57, i64 1
  store i32** %58, i32*** %3, align 8
  %59 = load i64, i64* %31, align 8
  %60 = ptrtoint i32** %58 to i64
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 3
  %63 = icmp ugt i64 %62, 2
  br i1 %63, label %53, label %64

64:                                               ; preds = %53, %29
  %65 = phi i64 [ %33, %29 ], [ %62, %53 ]
  switch i64 %65, label %69 [
    i64 1, label %67
    i64 2, label %66
  ]

66:                                               ; preds = %64
  br label %67

67:                                               ; preds = %64, %66
  %68 = phi i64 [ 1024, %66 ], [ 512, %64 ]
  store i64 %68, i64* %5, align 8
  br label %69

69:                                               ; preds = %67, %64
  tail call void @_ZNSt3__15dequeIjNS_9allocatorIjEEE13shrink_to_fitEv(%"class.std::__1::deque"* %0) #10
  %70 = load i32**, i32*** %3, align 8
  %71 = load i32**, i32*** %9, align 8
  %72 = icmp eq i32** %71, %70
  %73 = ptrtoint i32** %70 to i64
  br i1 %72, label %81, label %74

74:                                               ; preds = %69
  %75 = getelementptr i32*, i32** %71, i64 -1
  %76 = ptrtoint i32** %75 to i64
  %77 = sub i64 %76, %73
  %78 = lshr i64 %77, 3
  %79 = xor i64 %78, -1
  %80 = getelementptr i32*, i32** %71, i64 %79
  store i32** %80, i32*** %9, align 8
  br label %81

81:                                               ; preds = %69, %74
  %82 = phi i32** [ %71, %69 ], [ %80, %74 ]
  %83 = ptrtoint i32** %82 to i64
  %84 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %85 = bitcast i32*** %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.std::__1::deque"* %0 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = sub i64 %86, %88
  %90 = ashr exact i64 %89, 3
  %91 = bitcast i32*** %3 to i64*
  %92 = sub i64 %83, %73
  %93 = ashr exact i64 %92, 3
  %94 = icmp ugt i64 %90, %93
  %95 = inttoptr i64 %88 to i32**
  br i1 %94, label %96, label %198

96:                                               ; preds = %81
  %97 = icmp eq i64 %92, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %96
  %99 = getelementptr inbounds i32*, i32** null, i64 %93
  br label %186

100:                                              ; preds = %96
  %101 = icmp ugt i64 %93, 2305843009213693951
  br i1 %101, label %102, label %103

102:                                              ; preds = %100
  tail call void @abort() #12
  unreachable

103:                                              ; preds = %100
  %104 = tail call i8* @_Znwm(i64 %92) #11
  %105 = bitcast i8* %104 to i32**
  %106 = ptrtoint i8* %104 to i64
  %107 = getelementptr inbounds i32*, i32** %105, i64 %93
  %108 = add i64 %92, -8
  %109 = lshr i64 %108, 3
  %110 = add nuw nsw i64 %109, 1
  %111 = and i64 %110, 7
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %128, label %113

113:                                              ; preds = %103, %113
  %114 = phi i32** [ %121, %113 ], [ %105, %103 ]
  %115 = phi i64 [ %122, %113 ], [ %106, %103 ]
  %116 = phi i32** [ %123, %113 ], [ %70, %103 ]
  %117 = phi i64 [ %124, %113 ], [ %111, %103 ]
  %118 = bitcast i32** %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = inttoptr i64 %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %114, i64 1
  %122 = ptrtoint i32** %121 to i64
  %123 = getelementptr inbounds i32*, i32** %116, i64 1
  %124 = add i64 %117, -1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %113, !llvm.loop !18

126:                                              ; preds = %113
  %127 = ptrtoint i32** %121 to i64
  br label %128

128:                                              ; preds = %103, %126
  %129 = phi i32** [ %105, %103 ], [ %121, %126 ]
  %130 = phi i64 [ %106, %103 ], [ %127, %126 ]
  %131 = phi i32** [ %70, %103 ], [ %123, %126 ]
  %132 = icmp ult i64 %108, 56
  br i1 %132, label %179, label %133

133:                                              ; preds = %128, %133
  %134 = phi i32** [ %175, %133 ], [ %129, %128 ]
  %135 = phi i64 [ %176, %133 ], [ %130, %128 ]
  %136 = phi i32** [ %177, %133 ], [ %131, %128 ]
  %137 = bitcast i32** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = inttoptr i64 %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds i32*, i32** %134, i64 1
  %141 = getelementptr inbounds i32*, i32** %136, i64 1
  %142 = bitcast i32** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast i32** %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds i32*, i32** %134, i64 2
  %146 = getelementptr inbounds i32*, i32** %136, i64 2
  %147 = bitcast i32** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast i32** %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds i32*, i32** %134, i64 3
  %151 = getelementptr inbounds i32*, i32** %136, i64 3
  %152 = bitcast i32** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast i32** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds i32*, i32** %134, i64 4
  %156 = getelementptr inbounds i32*, i32** %136, i64 4
  %157 = bitcast i32** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast i32** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds i32*, i32** %134, i64 5
  %161 = getelementptr inbounds i32*, i32** %136, i64 5
  %162 = bitcast i32** %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = bitcast i32** %160 to i64*
  store i64 %163, i64* %164, align 8
  %165 = getelementptr inbounds i32*, i32** %134, i64 6
  %166 = getelementptr inbounds i32*, i32** %136, i64 6
  %167 = bitcast i32** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast i32** %165 to i64*
  store i64 %168, i64* %169, align 8
  %170 = getelementptr inbounds i32*, i32** %134, i64 7
  %171 = getelementptr inbounds i32*, i32** %136, i64 7
  %172 = bitcast i32** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast i32** %170 to i64*
  store i64 %173, i64* %174, align 8
  %175 = getelementptr inbounds i32*, i32** %134, i64 8
  %176 = ptrtoint i32** %175 to i64
  %177 = getelementptr inbounds i32*, i32** %136, i64 8
  %178 = icmp eq i32** %107, %175
  br i1 %178, label %179, label %133

179:                                              ; preds = %133, %128
  %180 = load i64, i64* %31, align 8
  %181 = load i64, i64* %91, align 8
  %182 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %183 = load i32**, i32*** %182, align 8
  %184 = sub i64 %180, %181
  %185 = ashr exact i64 %184, 3
  br label %186

186:                                              ; preds = %179, %98
  %187 = phi i32** [ %107, %179 ], [ %99, %98 ]
  %188 = phi i64 [ %106, %179 ], [ 0, %98 ]
  %189 = phi i32** [ %105, %179 ], [ null, %98 ]
  %190 = phi i64 [ %185, %179 ], [ 0, %98 ]
  %191 = phi i32** [ %183, %179 ], [ %95, %98 ]
  %192 = ptrtoint i32** %187 to i64
  %193 = getelementptr inbounds i32*, i32** %189, i64 %190
  %194 = ptrtoint i32** %193 to i64
  store i64 %188, i64* %87, align 8
  store i64 %188, i64* %91, align 8
  store i64 %194, i64* %31, align 8
  store i64 %192, i64* %85, align 8
  %195 = icmp eq i32** %191, null
  br i1 %195, label %198, label %196

196:                                              ; preds = %186
  %197 = bitcast i32** %191 to i8*
  tail call void @_ZdlPv(i8* %197) #11
  br label %198

198:                                              ; preds = %81, %186, %196
  %199 = bitcast %"class.std::__1::deque"* %1 to i64*
  %200 = load i64, i64* %199, align 8
  store i64 %200, i64* %87, align 8
  %201 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %1, i64 0, i32 0, i32 0, i32 1
  %202 = bitcast i32*** %201 to i64*
  %203 = load i64, i64* %202, align 8
  store i64 %203, i64* %91, align 8
  %204 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %1, i64 0, i32 0, i32 0, i32 2
  %205 = bitcast i32*** %204 to i64*
  %206 = load i64, i64* %205, align 8
  store i64 %206, i64* %31, align 8
  %207 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %208 = bitcast i32*** %207 to i64*
  %209 = load i64, i64* %208, align 8
  store i64 %209, i64* %85, align 8
  %210 = bitcast %"class.std::__1::deque"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %210, i8 0, i64 32, i1 false) #10
  %211 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %1, i64 0, i32 0, i32 1
  %212 = load i64, i64* %211, align 8
  store i64 %212, i64* %5, align 8
  %213 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %214 = load i64, i64* %213, align 8
  %215 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store i64 %214, i64* %215, align 8
  %216 = bitcast i64* %211 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %216, i8 0, i64 16, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIjNS_9allocatorIjEEE13shrink_to_fitEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %30

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast i32*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast i32*** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %8, %11
  br i1 %12, label %27, label %13

13:                                               ; preds = %5
  %14 = inttoptr i64 %8 to i32**
  br label %15

15:                                               ; preds = %13, %15
  %16 = phi i32** [ %14, %13 ], [ %21, %15 ]
  %17 = getelementptr inbounds i32*, i32** %16, i64 -1
  %18 = bitcast i32** %17 to i8**
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #11
  %20 = load i32**, i32*** %6, align 8
  %21 = getelementptr i32*, i32** %20, i64 -1
  store i32** %21, i32*** %6, align 8
  %22 = ptrtoint i32** %21 to i64
  %23 = load i64, i64* %10, align 8
  %24 = icmp eq i64 %23, %22
  br i1 %24, label %25, label %15

25:                                               ; preds = %15
  %26 = ptrtoint i32** %21 to i64
  br label %27

27:                                               ; preds = %25, %5
  %28 = phi i64 [ %8, %5 ], [ %26, %25 ]
  %29 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %29, align 8
  br label %74

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = icmp ult i64 %32, 1024
  %34 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  br i1 %33, label %35, label %38

35:                                               ; preds = %30
  %36 = bitcast i32*** %34 to i64*
  %37 = load i64, i64* %36, align 8
  br label %49

38:                                               ; preds = %30
  %39 = bitcast i32*** %34 to i8***
  %40 = load i8**, i8*** %39, align 8
  %41 = load i8*, i8** %40, align 8
  tail call void @_ZdlPv(i8* %41) #11
  %42 = load i32**, i32*** %34, align 8
  %43 = getelementptr inbounds i32*, i32** %42, i64 1
  store i32** %43, i32*** %34, align 8
  %44 = load i64, i64* %31, align 8
  %45 = add i64 %44, -1024
  store i64 %45, i64* %31, align 8
  %46 = ptrtoint i32** %43 to i64
  %47 = load i64, i64* %2, align 8
  %48 = bitcast i32*** %34 to i64*
  br label %49

49:                                               ; preds = %35, %38
  %50 = phi i64* [ %36, %35 ], [ %48, %38 ]
  %51 = phi i64 [ %37, %35 ], [ %46, %38 ]
  %52 = phi i64 [ %3, %35 ], [ %47, %38 ]
  %53 = phi i64 [ %32, %35 ], [ %45, %38 ]
  %54 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %55 = bitcast i32*** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %56, %51
  %58 = icmp eq i64 %57, 0
  %59 = shl i64 %57, 7
  %60 = add i64 %59, -1
  %61 = select i1 %58, i64 0, i64 %60
  %62 = add i64 %52, %53
  %63 = sub i64 %61, %62
  %64 = icmp ult i64 %63, 1024
  br i1 %64, label %74, label %65

65:                                               ; preds = %49
  %66 = inttoptr i64 %56 to i32**
  %67 = getelementptr inbounds i32*, i32** %66, i64 -1
  %68 = bitcast i32** %67 to i8**
  %69 = load i8*, i8** %68, align 8
  tail call void @_ZdlPv(i8* %69) #11
  %70 = load i32**, i32*** %54, align 8
  %71 = getelementptr i32*, i32** %70, i64 -1
  store i32** %71, i32*** %54, align 8
  %72 = ptrtoint i32** %71 to i64
  %73 = load i64, i64* %50, align 8
  br label %74

74:                                               ; preds = %65, %49, %27
  %75 = phi i64* [ %50, %65 ], [ %50, %49 ], [ %10, %27 ]
  %76 = phi i64* [ %55, %65 ], [ %55, %49 ], [ %7, %27 ]
  %77 = phi i64 [ %73, %65 ], [ %51, %49 ], [ %28, %27 ]
  %78 = phi i64 [ %72, %65 ], [ %56, %49 ], [ %28, %27 ]
  %79 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %80 = bitcast i32*** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.std::__1::deque"* %0 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = sub i64 %81, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub i64 %78, %77
  %87 = ashr exact i64 %86, 3
  %88 = icmp ugt i64 %85, %87
  %89 = inttoptr i64 %77 to i32**
  %90 = inttoptr i64 %83 to i32**
  br i1 %88, label %91, label %193

91:                                               ; preds = %74
  %92 = icmp eq i64 %86, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %91
  %94 = getelementptr inbounds i32*, i32** null, i64 %87
  br label %181

95:                                               ; preds = %91
  %96 = icmp ugt i64 %87, 2305843009213693951
  br i1 %96, label %97, label %98

97:                                               ; preds = %95
  tail call void @abort() #12
  unreachable

98:                                               ; preds = %95
  %99 = tail call i8* @_Znwm(i64 %86) #11
  %100 = bitcast i8* %99 to i32**
  %101 = ptrtoint i8* %99 to i64
  %102 = getelementptr inbounds i32*, i32** %100, i64 %87
  %103 = add i64 %86, -8
  %104 = lshr i64 %103, 3
  %105 = add nuw nsw i64 %104, 1
  %106 = and i64 %105, 7
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %123, label %108

108:                                              ; preds = %98, %108
  %109 = phi i32** [ %116, %108 ], [ %100, %98 ]
  %110 = phi i64 [ %117, %108 ], [ %101, %98 ]
  %111 = phi i32** [ %118, %108 ], [ %89, %98 ]
  %112 = phi i64 [ %119, %108 ], [ %106, %98 ]
  %113 = bitcast i32** %111 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = inttoptr i64 %110 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %109, i64 1
  %117 = ptrtoint i32** %116 to i64
  %118 = getelementptr inbounds i32*, i32** %111, i64 1
  %119 = add i64 %112, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %108, !llvm.loop !20

121:                                              ; preds = %108
  %122 = ptrtoint i32** %116 to i64
  br label %123

123:                                              ; preds = %98, %121
  %124 = phi i32** [ %100, %98 ], [ %116, %121 ]
  %125 = phi i64 [ %101, %98 ], [ %122, %121 ]
  %126 = phi i32** [ %89, %98 ], [ %118, %121 ]
  %127 = icmp ult i64 %103, 56
  br i1 %127, label %174, label %128

128:                                              ; preds = %123, %128
  %129 = phi i32** [ %170, %128 ], [ %124, %123 ]
  %130 = phi i64 [ %171, %128 ], [ %125, %123 ]
  %131 = phi i32** [ %172, %128 ], [ %126, %123 ]
  %132 = bitcast i32** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = inttoptr i64 %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds i32*, i32** %129, i64 1
  %136 = getelementptr inbounds i32*, i32** %131, i64 1
  %137 = bitcast i32** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i32** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds i32*, i32** %129, i64 2
  %141 = getelementptr inbounds i32*, i32** %131, i64 2
  %142 = bitcast i32** %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = bitcast i32** %140 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds i32*, i32** %129, i64 3
  %146 = getelementptr inbounds i32*, i32** %131, i64 3
  %147 = bitcast i32** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast i32** %145 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds i32*, i32** %129, i64 4
  %151 = getelementptr inbounds i32*, i32** %131, i64 4
  %152 = bitcast i32** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = bitcast i32** %150 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds i32*, i32** %129, i64 5
  %156 = getelementptr inbounds i32*, i32** %131, i64 5
  %157 = bitcast i32** %156 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = bitcast i32** %155 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds i32*, i32** %129, i64 6
  %161 = getelementptr inbounds i32*, i32** %131, i64 6
  %162 = bitcast i32** %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = bitcast i32** %160 to i64*
  store i64 %163, i64* %164, align 8
  %165 = getelementptr inbounds i32*, i32** %129, i64 7
  %166 = getelementptr inbounds i32*, i32** %131, i64 7
  %167 = bitcast i32** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast i32** %165 to i64*
  store i64 %168, i64* %169, align 8
  %170 = getelementptr inbounds i32*, i32** %129, i64 8
  %171 = ptrtoint i32** %170 to i64
  %172 = getelementptr inbounds i32*, i32** %131, i64 8
  %173 = icmp eq i32** %102, %170
  br i1 %173, label %174, label %128

174:                                              ; preds = %128, %123
  %175 = load i64, i64* %76, align 8
  %176 = load i64, i64* %75, align 8
  %177 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %178 = load i32**, i32*** %177, align 8
  %179 = sub i64 %175, %176
  %180 = ashr exact i64 %179, 3
  br label %181

181:                                              ; preds = %174, %93
  %182 = phi i32** [ %102, %174 ], [ %94, %93 ]
  %183 = phi i64 [ %101, %174 ], [ 0, %93 ]
  %184 = phi i32** [ %100, %174 ], [ null, %93 ]
  %185 = phi i64 [ %180, %174 ], [ 0, %93 ]
  %186 = phi i32** [ %178, %174 ], [ %90, %93 ]
  %187 = ptrtoint i32** %182 to i64
  %188 = getelementptr inbounds i32*, i32** %184, i64 %185
  %189 = ptrtoint i32** %188 to i64
  store i64 %183, i64* %82, align 8
  store i64 %183, i64* %75, align 8
  store i64 %189, i64* %76, align 8
  store i64 %187, i64* %80, align 8
  %190 = icmp eq i32** %186, null
  br i1 %190, label %193, label %191

191:                                              ; preds = %181
  %192 = bitcast i32** %186 to i8*
  tail call void @_ZdlPv(i8* %192) #11
  br label %193

193:                                              ; preds = %74, %181, %191
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIjNS_9allocatorIjEEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.105", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 1023
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -1024
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32**, i32*** %10, align 8
  %12 = bitcast i32** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i32*, i32** %11, i64 1
  store i32** %14, i32*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load i32**, i32*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load i32**, i32*** %17, align 8
  %19 = icmp eq i32** %16, %18
  %20 = ptrtoint i32** %18 to i64
  %21 = bitcast i32** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32**, i32*** %23, align 8
  %25 = icmp ugt i32** %14, %24
  %26 = ptrtoint i32** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint i32** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds i32*, i32** %14, i64 %32
  %34 = ptrtoint i32** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast i32** %33 to i8*
  %40 = bitcast i32** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #10
  %41 = load i32**, i32*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi i32** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds i32*, i32** %33, i64 %36
  store i32** %44, i32*** %15, align 8
  %45 = getelementptr inbounds i32*, i32** %43, i64 %32
  store i32** %45, i32*** %10, align 8
  %46 = bitcast i32** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast i32*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #12
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #11
  %60 = bitcast i8* %59 to i32**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds i32*, i32** %60, i64 %57
  %63 = ptrtoint i32** %62 to i64
  %64 = getelementptr inbounds i32*, i32** %60, i64 %53
  %65 = ptrtoint i32** %64 to i64
  %66 = ptrtoint i32** %14 to i64
  %67 = ptrtoint i32** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds i32*, i32** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi i32** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi i32** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast i32** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds i32*, i32** %79, i64 1
  %87 = ptrtoint i32** %86 to i64
  %88 = getelementptr inbounds i32*, i32** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !21

91:                                               ; preds = %78
  %92 = ptrtoint i32** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi i32** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi i32** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi i32** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi i32** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %99, i64 1
  %106 = getelementptr inbounds i32*, i32** %101, i64 1
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %99, i64 2
  %111 = getelementptr inbounds i32*, i32** %101, i64 2
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %99, i64 3
  %116 = getelementptr inbounds i32*, i32** %101, i64 3
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %99, i64 4
  %121 = getelementptr inbounds i32*, i32** %101, i64 4
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %99, i64 5
  %126 = getelementptr inbounds i32*, i32** %101, i64 5
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %99, i64 6
  %131 = getelementptr inbounds i32*, i32** %101, i64 6
  %132 = bitcast i32** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast i32** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds i32*, i32** %99, i64 7
  %136 = getelementptr inbounds i32*, i32** %101, i64 7
  %137 = bitcast i32** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i32** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds i32*, i32** %99, i64 8
  %141 = ptrtoint i32** %140 to i64
  %142 = getelementptr inbounds i32*, i32** %101, i64 8
  %143 = icmp eq i32** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint i32** %70 to i64
  %146 = load i32**, i32*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi i32** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast i32*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast i32*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq i32** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast i32** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #11
  %156 = bitcast i32*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load i32**, i32*** %15, align 8
  %161 = getelementptr inbounds i32*, i32** %160, i64 1
  store i32** %161, i32*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast i32*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast i32*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast i32*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to i32**
  %181 = inttoptr i64 %169 to i32**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast i32** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #10
  %186 = tail call i8* @_Znwm(i64 4096) #11
  %187 = bitcast i32** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer"* %163, i32** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #10
  br label %460

188:                                              ; preds = %182
  %189 = bitcast i32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #10
  %190 = tail call i8* @_Znwm(i64 4096) #11
  %191 = bitcast i32** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer"* %163, i32** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #10
  %192 = load i32**, i32*** %167, align 8
  %193 = bitcast i32** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds i32*, i32** %192, i64 1
  store i32** %195, i32*** %167, align 8
  %196 = load i32**, i32*** %164, align 8
  %197 = load i32**, i32*** %172, align 8
  %198 = icmp eq i32** %196, %197
  %199 = ptrtoint i32** %197 to i64
  %200 = bitcast i32** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load i32**, i32*** %202, align 8
  %204 = icmp ugt i32** %195, %203
  %205 = ptrtoint i32** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint i32** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds i32*, i32** %195, i64 %211
  %213 = ptrtoint i32** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast i32** %212 to i8*
  %219 = bitcast i32** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #10
  %220 = load i32**, i32*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi i32** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds i32*, i32** %212, i64 %215
  store i32** %223, i32*** %164, align 8
  %224 = getelementptr inbounds i32*, i32** %222, i64 %211
  store i32** %224, i32*** %167, align 8
  %225 = bitcast i32** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #12
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #11
  %237 = bitcast i8* %236 to i32**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds i32*, i32** %237, i64 %234
  %240 = ptrtoint i32** %239 to i64
  %241 = getelementptr inbounds i32*, i32** %237, i64 %230
  %242 = ptrtoint i32** %241 to i64
  %243 = ptrtoint i32** %195 to i64
  %244 = ptrtoint i32** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds i32*, i32** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi i32** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi i32** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast i32** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds i32*, i32** %256, i64 1
  %264 = ptrtoint i32** %263 to i64
  %265 = getelementptr inbounds i32*, i32** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !22

268:                                              ; preds = %255
  %269 = ptrtoint i32** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi i32** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi i32** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi i32** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi i32** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast i32** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds i32*, i32** %276, i64 1
  %283 = getelementptr inbounds i32*, i32** %278, i64 1
  %284 = bitcast i32** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast i32** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds i32*, i32** %276, i64 2
  %288 = getelementptr inbounds i32*, i32** %278, i64 2
  %289 = bitcast i32** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast i32** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds i32*, i32** %276, i64 3
  %293 = getelementptr inbounds i32*, i32** %278, i64 3
  %294 = bitcast i32** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast i32** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds i32*, i32** %276, i64 4
  %298 = getelementptr inbounds i32*, i32** %278, i64 4
  %299 = bitcast i32** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast i32** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds i32*, i32** %276, i64 5
  %303 = getelementptr inbounds i32*, i32** %278, i64 5
  %304 = bitcast i32** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast i32** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds i32*, i32** %276, i64 6
  %308 = getelementptr inbounds i32*, i32** %278, i64 6
  %309 = bitcast i32** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast i32** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds i32*, i32** %276, i64 7
  %313 = getelementptr inbounds i32*, i32** %278, i64 7
  %314 = bitcast i32** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast i32** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds i32*, i32** %276, i64 8
  %318 = ptrtoint i32** %317 to i64
  %319 = getelementptr inbounds i32*, i32** %278, i64 8
  %320 = icmp eq i32** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint i32** %247 to i64
  %323 = load i32**, i32*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi i32** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq i32** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast i32** %325 to i8*
  call void @_ZdlPv(i8* %330) #11
  %331 = bitcast i32*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load i32**, i32*** %164, align 8
  %336 = getelementptr inbounds i32*, i32** %335, i64 1
  store i32** %336, i32*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.105"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #10
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.105", %"struct.std::__1::__split_buffer.105"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.105", %"struct.std::__1::__split_buffer.105"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.105", %"struct.std::__1::__split_buffer.105"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.105", %"struct.std::__1::__split_buffer.105"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.105"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store i32** null, i32*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.37"** %342 to %"class.std::__1::__compressed_pair.34"**
  store %"class.std::__1::__compressed_pair.34"* %346, %"class.std::__1::__compressed_pair.34"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #12
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #11
  %354 = bitcast i8* %353 to i32**
  %355 = bitcast %"struct.std::__1::__split_buffer.105"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds i32*, i32** %354, i64 %171
  store i32** %356, i32*** %340, align 8
  store i32** %356, i32*** %339, align 8
  %357 = getelementptr inbounds i32*, i32** %354, i64 %345
  store i32** %357, i32*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #11
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint i32** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint i32** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt i32** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds i32*, i32** %356, i64 %370
  store i32** %371, i32*** %340, align 8
  store i32** %371, i32*** %339, align 8
  %372 = ptrtoint i32** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #12
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.105"* %4 to i64*
  %382 = bitcast i32*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #11
  %386 = bitcast i8* %385 to i32**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds i32*, i32** %386, i64 %383
  %389 = ptrtoint i32** %388 to i64
  %390 = getelementptr inbounds i32*, i32** %386, i64 %377
  %391 = ptrtoint i32** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast i32*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast i32*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #11
  %394 = load i32**, i32*** %164, align 8
  %395 = load i32**, i32*** %167, align 8
  %396 = ptrtoint i32** %395 to i64
  %397 = ptrtoint i32** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi i32** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi i32** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi i32** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast i32** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds i32*, i32** %406, i64 1
  store i32** %408, i32*** %340, align 8
  %409 = icmp eq i32** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint i32** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.105"* %4 to i64*
  %413 = bitcast i32*** %339 to i64*
  %414 = bitcast i32*** %340 to i64*
  %415 = bitcast i32*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint i32** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.105"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast i32*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast i32*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast i32*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to i32**
  %441 = inttoptr i64 %434 to i32**
  %442 = icmp eq i32** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr i32*, i32** %441, i64 -1
  %445 = ptrtoint i32** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr i32*, i32** %441, i64 %448
  store i32** %449, i32*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #11
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #10
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi i32** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds i32*, i32** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.105"* nonnull %4, i32** dereferenceable(8) %457)
  %458 = load i32**, i32*** %167, align 8
  %459 = icmp eq i32** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE9push_backEOS1_(%"struct.std::__1::__split_buffer"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  %9 = bitcast i32** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load i32**, i32*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load i32**, i32*** %13, align 8
  %15 = icmp ugt i32** %12, %14
  %16 = ptrtoint i32** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint i32** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32*, i32** %12, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast i32** %23 to i8*
  %30 = bitcast i32** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #10
  %31 = load i32**, i32*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi i32** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds i32*, i32** %23, i64 %26
  store i32** %34, i32*** %3, align 8
  %35 = getelementptr inbounds i32*, i32** %33, i64 %22
  store i32** %35, i32*** %11, align 8
  %36 = bitcast i32** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast i32*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #11
  %50 = bitcast i8* %49 to i32**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds i32*, i32** %50, i64 %47
  %53 = ptrtoint i32** %52 to i64
  %54 = getelementptr inbounds i32*, i32** %50, i64 %43
  %55 = ptrtoint i32** %54 to i64
  %56 = ptrtoint i32** %12 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds i32*, i32** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi i32** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi i32** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast i32** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds i32*, i32** %69, i64 1
  %77 = ptrtoint i32** %76 to i64
  %78 = getelementptr inbounds i32*, i32** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !23

81:                                               ; preds = %68
  %82 = ptrtoint i32** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi i32** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi i32** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi i32** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi i32** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast i32** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds i32*, i32** %89, i64 1
  %96 = getelementptr inbounds i32*, i32** %91, i64 1
  %97 = bitcast i32** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast i32** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds i32*, i32** %89, i64 2
  %101 = getelementptr inbounds i32*, i32** %91, i64 2
  %102 = bitcast i32** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast i32** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds i32*, i32** %89, i64 3
  %106 = getelementptr inbounds i32*, i32** %91, i64 3
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i32** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i32*, i32** %89, i64 4
  %111 = getelementptr inbounds i32*, i32** %91, i64 4
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i32** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds i32*, i32** %89, i64 5
  %116 = getelementptr inbounds i32*, i32** %91, i64 5
  %117 = bitcast i32** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast i32** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds i32*, i32** %89, i64 6
  %121 = getelementptr inbounds i32*, i32** %91, i64 6
  %122 = bitcast i32** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast i32** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds i32*, i32** %89, i64 7
  %126 = getelementptr inbounds i32*, i32** %91, i64 7
  %127 = bitcast i32** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i32** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds i32*, i32** %89, i64 8
  %131 = ptrtoint i32** %130 to i64
  %132 = getelementptr inbounds i32*, i32** %91, i64 8
  %133 = icmp eq i32** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint i32** %60 to i64
  %136 = load i32**, i32*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi i32** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast i32*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq i32** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast i32** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = bitcast i32*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load i32**, i32*** %3, align 8
  %153 = getelementptr inbounds i32*, i32** %152, i64 1
  store i32** %153, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjNS_9allocatorIS1_EEE10push_frontEOS1_(%"struct.std::__1::__split_buffer"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #11
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !24

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPjRNS_9allocatorIS1_EEE10push_frontERKS1_(%"struct.std::__1::__split_buffer.105"*, i32** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.105", %"struct.std::__1::__split_buffer.105"* %0, i64 0, i32 1
  %4 = load i32**, i32*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.105", %"struct.std::__1::__split_buffer.105"* %0, i64 0, i32 0
  %6 = load i32**, i32*** %5, align 8
  %7 = icmp eq i32** %4, %6
  %8 = ptrtoint i32** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.105", %"struct.std::__1::__split_buffer.105"* %0, i64 0, i32 2
  %11 = load i32**, i32*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.105", %"struct.std::__1::__split_buffer.105"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load i32**, i32*** %12, align 8
  %14 = icmp ult i32** %11, %13
  %15 = bitcast i32*** %12 to i64*
  %16 = ptrtoint i32** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint i32** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds i32*, i32** %11, i64 %22
  %24 = ptrtoint i32** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i32*, i32** %23, i64 %29
  %31 = bitcast i32** %30 to i8*
  %32 = bitcast i32** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #10
  %33 = load i32**, i32*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi i32** [ %33, %27 ], [ %11, %17 ]
  %36 = phi i32** [ %30, %27 ], [ %23, %17 ]
  store i32** %36, i32*** %3, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %22
  store i32** %37, i32*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.105"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #11
  %51 = bitcast i8* %50 to i32**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds i32*, i32** %51, i64 %48
  %54 = ptrtoint i32** %53 to i64
  %55 = getelementptr inbounds i32*, i32** %51, i64 %43
  %56 = ptrtoint i32** %55 to i64
  %57 = ptrtoint i32** %4 to i64
  %58 = ptrtoint i32** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds i32*, i32** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi i32** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi i32** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast i32** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds i32*, i32** %70, i64 1
  %78 = ptrtoint i32** %77 to i64
  %79 = getelementptr inbounds i32*, i32** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !25

82:                                               ; preds = %69
  %83 = ptrtoint i32** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi i32** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi i32** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi i32** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi i32** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast i32** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds i32*, i32** %90, i64 1
  %97 = getelementptr inbounds i32*, i32** %92, i64 1
  %98 = bitcast i32** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast i32** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds i32*, i32** %90, i64 2
  %102 = getelementptr inbounds i32*, i32** %92, i64 2
  %103 = bitcast i32** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds i32*, i32** %90, i64 3
  %107 = getelementptr inbounds i32*, i32** %92, i64 3
  %108 = bitcast i32** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast i32** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds i32*, i32** %90, i64 4
  %112 = getelementptr inbounds i32*, i32** %92, i64 4
  %113 = bitcast i32** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i32** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds i32*, i32** %90, i64 5
  %117 = getelementptr inbounds i32*, i32** %92, i64 5
  %118 = bitcast i32** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i32** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i32*, i32** %90, i64 6
  %122 = getelementptr inbounds i32*, i32** %92, i64 6
  %123 = bitcast i32** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i32** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds i32*, i32** %90, i64 7
  %127 = getelementptr inbounds i32*, i32** %92, i64 7
  %128 = bitcast i32** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast i32** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds i32*, i32** %90, i64 8
  %132 = ptrtoint i32** %131 to i64
  %133 = getelementptr inbounds i32*, i32** %92, i64 8
  %134 = icmp eq i32** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint i32** %61 to i64
  %137 = load i32**, i32*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi i32** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast i32*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast i32*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq i32** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast i32** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #11
  %146 = load i32**, i32*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi i32** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds i32*, i32** %148, i64 -1
  %150 = bitcast i32** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i32** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load i32**, i32*** %3, align 8
  %154 = getelementptr inbounds i32*, i32** %153, i64 -1
  store i32** %154, i32*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6pdfium10MakeRetainI14CPDF_ReferenceJRP25CPDF_IndirectObjectHolderRjEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!7 = distinct !{!7, !"_ZN6pdfium10MakeRetainI14CPDF_ReferenceJRP25CPDF_IndirectObjectHolderRjEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJRKjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISC_EEEEEEDpOT_"}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.unroll.disable"}
!20 = distinct !{!20, !19}
!21 = distinct !{!21, !19}
!22 = distinct !{!22, !19}
!23 = distinct !{!23, !19}
!24 = distinct !{!24, !19}
!25 = distinct !{!25, !19}
