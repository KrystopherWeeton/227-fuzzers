; ModuleID = '../../third_party/blink/renderer/platform/fonts/shaping/shape_result_test_info.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/shaping/shape_result_test_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.blink::ShapeResultTestInfo" = type { %"class.blink::ShapeResult.base", [4 x i8] }
%"class.blink::ShapeResult.base" = type <{ %"class.WTF::RefCounted", float, %"class.blink::FloatRect", %"class.WTF::Vector", %class.scoped_refptr.37, %"class.std::__1::unique_ptr.38", i32, i32, i32 }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr*, i32, i32 }
%class.scoped_refptr = type { %"struct.blink::ShapeResult::RunInfo"* }
%"struct.blink::ShapeResult::RunInfo" = type <{ %"class.WTF::RefCounted.0", [4 x i8], %"class.blink::ShapeResult::RunInfo::GlyphDataCollection", %class.scoped_refptr.9, %"class.WTF::Vector.32", i32, i32, float, i32, i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.0" = type { %"class.base::RefCounted.1" }
%"class.base::RefCounted.1" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::ShapeResult::RunInfo::GlyphDataCollection" = type { %"class.std::__1::unique_ptr", %"class.blink::ShapeResult::RunInfo::GlyphOffsetArray" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::HarfBuzzRunGlyphData"* }
%"struct.blink::HarfBuzzRunGlyphData" = type { i32, float }
%"class.blink::ShapeResult::RunInfo::GlyphOffsetArray" = type <{ %"class.std::__1::unique_ptr.3", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.blink::ShapeResult::GlyphOffset"* }
%"class.blink::ShapeResult::GlyphOffset" = type { %"class.blink::FloatSize" }
%class.scoped_refptr.9 = type { %"class.blink::SimpleFontData"* }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.23", %class.scoped_refptr.29, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.10" }>
%"class.WTF::RefCounted.10" = type { %"class.base::RefCounted.11" }
%"class.base::RefCounted.11" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.22, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.13" }
%"struct.std::__1::atomic.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl.16" }
%"struct.std::__1::__cxx_atomic_impl.16" = type { %"struct.std::__1::__cxx_atomic_base_impl.17" }
%"struct.std::__1::__cxx_atomic_base_impl.17" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.20 }
%union.anon.20 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.22 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.9, %class.scoped_refptr.9 }
%class.scoped_refptr.29 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.30", [4 x i8] }>
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34" }
%"class.WTF::VectorBufferBase.34" = type { i32*, i32, i32 }
%class.scoped_refptr.37 = type { %"class.blink::SimpleFontData"* }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::ShapeResult::CharacterPositionData"* }
%"class.blink::ShapeResult::CharacterPositionData" = type { %"class.WTF::Vector.41", i32, float }
%"class.WTF::Vector.41" = type { %"class.WTF::VectorBuffer.42" }
%"class.WTF::VectorBuffer.42" = type { %"class.WTF::VectorBufferBase.43" }
%"class.WTF::VectorBufferBase.43" = type { %"struct.blink::ShapeResultCharacterData"*, i32, i32 }
%"struct.blink::ShapeResultCharacterData" = type { float, i8 }
%"struct.blink::ShapeResultTestGlyphInfo" = type { i32, i16, float }
%"class.WTF::Vector.49" = type { %"class.WTF::VectorBuffer.50" }
%"class.WTF::VectorBuffer.50" = type { %"class.WTF::VectorBufferBase.51" }
%"class.WTF::VectorBufferBase.51" = type { %"struct.blink::ShapeResultTestGlyphInfo"*, i32, i32 }
%"class.blink::ShapeResult" = type <{ %"class.WTF::RefCounted", float, %"class.blink::FloatRect", %"class.WTF::Vector", %class.scoped_refptr.37, %"class.std::__1::unique_ptr.38", i32, i32, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm = comdat any

$_ZN3WTF6VectorIN5blink24ShapeResultTestGlyphInfoELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24ShapeResultTestGlyphInfoEEEmm = comdat any

$_ZNK3WTF6VectorIN5blink24ShapeResultTestGlyphInfoELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [100 x i8] c"\E2\95\94\E2\95\90\E2\95\90 Actual \E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\A4\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\A4\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\97    \00", align 1
@.str.1 = private unnamed_addr constant [93 x i8] c"\E2\95\94\E2\95\90\E2\95\90 Expected \E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\A4\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\A4\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\97\0A\00", align 1
@.str.2 = private unnamed_addr constant [50 x i8] c"\E2\95\91 Character Index \E2\94\82 Glyph \E2\94\82 Advance \E2\95\91    \00", align 1
@.str.3 = private unnamed_addr constant [47 x i8] c"\E2\95\91 Character Index \E2\94\82 Glyph \E2\94\82 Advance \E2\95\91\0A\00", align 1
@.str.4 = private unnamed_addr constant [116 x i8] c"\E2\95\9F\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\BC\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\BC\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\95\A2    \00", align 1
@.str.5 = private unnamed_addr constant [113 x i8] c"\E2\95\9F\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\BC\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\BC\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\94\80\E2\95\A2\0A\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"\E2\95\91      %10u \E2\94\82\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"\E2\95\91\E2\96\B6     %10u\E2\97\80\E2\94\82\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"  %04X \E2\94\82\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"\E2\96\B6 %04X\E2\97\80\E2\94\82\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c" %7.2f \E2\95\91    \00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"\E2\96\B6%7.2f\E2\97\80\E2\95\91    \00", align 1
@.str.12 = private unnamed_addr constant [39 x i8] c"\E2\95\91      %10u \E2\94\82  %04X \E2\94\82 %7.2f \E2\95\91\0A\00", align 1
@.str.13 = private unnamed_addr constant [116 x i8] c"\E2\95\9A\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\A7\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\A7\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\9D    \00", align 1
@.str.14 = private unnamed_addr constant [113 x i8] c"\E2\95\9A\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\A7\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\A7\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\90\E2\95\9D\0A\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.16 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.18 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.19 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24ShapeResultTestGlyphInfoEEEPKcv = private unnamed_addr constant [79 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ShapeResultTestGlyphInfo]\00", align 1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink19ShapeResultTestInfo22NumberOfRunsForTestingEv(%"class.blink::ShapeResultTestInfo"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ShapeResultTestInfo", %"class.blink::ShapeResultTestInfo"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"struct.blink::ShapeResult::RunInfo"* @_ZNK5blink19ShapeResultTestInfo17RunInfoForTestingEj(%"class.blink::ShapeResultTestInfo"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ShapeResultTestInfo", %"class.blink::ShapeResultTestInfo"* %0, i64 0, i32 0, i32 3
  %4 = tail call dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %1) #9
  %5 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %6 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %5, align 8
  ret %"struct.blink::ShapeResult::RunInfo"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19ShapeResultTestInfo17RunInfoForTestingEjRjS1_S1_R11hb_script_t(%"class.blink::ShapeResultTestInfo"*, i32, i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.blink::ShapeResultTestInfo", %"class.blink::ShapeResultTestInfo"* %0, i64 0, i32 0, i32 3
  %8 = getelementptr inbounds %"class.blink::ShapeResultTestInfo", %"class.blink::ShapeResultTestInfo"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp ugt i32 %9, %1
  br i1 %10, label %11, label %37

11:                                               ; preds = %6
  %12 = tail call dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %7, i32 %1) #9
  %13 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %12, i64 0, i32 0
  %14 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %13, align 8
  %15 = icmp eq %"struct.blink::ShapeResult::RunInfo"* %14, null
  br i1 %15, label %37, label %16

16:                                               ; preds = %11
  %17 = tail call dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %7, i32 %1) #9
  %18 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %17, i64 0, i32 0
  %19 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %18, align 8
  %20 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %19, i64 0, i32 5
  %21 = load i32, i32* %20, align 8
  store i32 %21, i32* %2, align 4
  %22 = tail call dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %7, i32 %1) #9
  %23 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %22, i64 0, i32 0
  %24 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %23, align 8
  %25 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %24, i64 0, i32 6
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %3, align 4
  %27 = tail call dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %7, i32 %1) #9
  %28 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 0, i32 0
  %29 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %28, align 8
  %30 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %29, i64 0, i32 2, i32 1, i32 1
  %31 = load i32, i32* %30, align 8
  store i32 %31, i32* %4, align 4
  %32 = tail call dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %7, i32 %1) #9
  %33 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %32, i64 0, i32 0
  %34 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %33, align 8
  %35 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %34, i64 0, i32 8
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %5, align 4
  br label %37

37:                                               ; preds = %11, %6, %16
  %38 = phi i1 [ true, %16 ], [ false, %11 ], [ false, %6 ]
  ret i1 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19ShapeResultTestInfo17RunInfoForTestingEjRjS1_R11hb_script_t(%"class.blink::ShapeResultTestInfo"*, i32, i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4), i32* nocapture dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %6 = alloca i32, align 4
  %7 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #9
  store i32 -1431655766, i32* %6, align 4
  %8 = call zeroext i1 @_ZNK5blink19ShapeResultTestInfo17RunInfoForTestingEjRjS1_S1_R11hb_script_t(%"class.blink::ShapeResultTestInfo"* %0, i32 %1, i32* dereferenceable(4) %2, i32* nonnull dereferenceable(4) %6, i32* dereferenceable(4) %3, i32* dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #9
  ret i1 %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZNK5blink19ShapeResultTestInfo15GlyphForTestingEjj(%"class.blink::ShapeResultTestInfo"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::ShapeResultTestInfo", %"class.blink::ShapeResultTestInfo"* %0, i64 0, i32 0, i32 3
  %5 = tail call dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %4, i32 %1) #9
  %6 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 0, i32 0
  %7 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %6, align 8
  %8 = zext i32 %2 to i64
  %9 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.blink::HarfBuzzRunGlyphData"*, %"struct.blink::HarfBuzzRunGlyphData"** %9, align 8
  %11 = getelementptr inbounds %"struct.blink::HarfBuzzRunGlyphData", %"struct.blink::HarfBuzzRunGlyphData"* %10, i64 %8, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = trunc i32 %12 to i16
  ret i16 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink19ShapeResultTestInfo17AdvanceForTestingEjj(%"class.blink::ShapeResultTestInfo"*, i32, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::ShapeResultTestInfo", %"class.blink::ShapeResultTestInfo"* %0, i64 0, i32 0, i32 3
  %5 = tail call dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %4, i32 %1) #9
  %6 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 0, i32 0
  %7 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %6, align 8
  %8 = zext i32 %2 to i64
  %9 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.blink::HarfBuzzRunGlyphData"*, %"struct.blink::HarfBuzzRunGlyphData"** %9, align 8
  %11 = getelementptr inbounds %"struct.blink::HarfBuzzRunGlyphData", %"struct.blink::HarfBuzzRunGlyphData"* %10, i64 %8, i32 1
  %12 = load float, float* %11, align 4
  ret float %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SimpleFontData"* @_ZNK5blink19ShapeResultTestInfo18FontDataForTestingEj(%"class.blink::ShapeResultTestInfo"*, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ShapeResultTestInfo", %"class.blink::ShapeResultTestInfo"* %0, i64 0, i32 0, i32 3
  %4 = tail call dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %1) #9
  %5 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %4, i64 0, i32 0
  %6 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %5, align 8
  %7 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %6, i64 0, i32 3, i32 0
  %8 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %7, align 8
  ret %"class.blink::SimpleFontData"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19ShapeResultTestInfo26CharacterIndexesForTestingEv(%"class.WTF::Vector.32"* noalias sret, %"class.blink::ShapeResultTestInfo"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.32"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #9
  %8 = getelementptr inbounds %"class.blink::ShapeResultTestInfo", %"class.blink::ShapeResultTestInfo"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %9 = load %class.scoped_refptr*, %class.scoped_refptr** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ShapeResultTestInfo", %"class.blink::ShapeResultTestInfo"* %1, i64 0, i32 0, i32 3, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %56, label %15

15:                                               ; preds = %2
  %16 = bitcast i32* %3 to i8*
  br label %17

17:                                               ; preds = %15, %28
  %18 = phi %class.scoped_refptr* [ %9, %15 ], [ %29, %28 ]
  %19 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %18, i64 0, i32 0
  %20 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %19, align 8
  %21 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.blink::HarfBuzzRunGlyphData"*, %"struct.blink::HarfBuzzRunGlyphData"** %21, align 8
  %23 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %20, i64 0, i32 2, i32 1, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.blink::HarfBuzzRunGlyphData", %"struct.blink::HarfBuzzRunGlyphData"* %22, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %51, %17
  %29 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %18, i64 1
  %30 = icmp eq %class.scoped_refptr* %29, %13
  br i1 %30, label %56, label %17

31:                                               ; preds = %17, %54
  %32 = phi %"struct.blink::ShapeResult::RunInfo"* [ %55, %54 ], [ %20, %17 ]
  %33 = phi %"struct.blink::HarfBuzzRunGlyphData"* [ %52, %54 ], [ %22, %17 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #9
  %34 = getelementptr inbounds %"struct.blink::ShapeResult::RunInfo", %"struct.blink::ShapeResult::RunInfo"* %32, i64 0, i32 5
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %"struct.blink::HarfBuzzRunGlyphData", %"struct.blink::HarfBuzzRunGlyphData"* %33, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = lshr i32 %37, 16
  %39 = and i32 %38, 32767
  %40 = add i32 %39, %35
  store i32 %40, i32* %3, align 4
  %41 = load i32, i32* %6, align 4
  %42 = load i32, i32* %5, align 8
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %50, label %44, !prof !2

44:                                               ; preds = %31
  %45 = load i32*, i32** %4, align 8
  %46 = zext i32 %41 to i64
  %47 = getelementptr inbounds i32, i32* %45, i64 %46
  store i32 %40, i32* %47, align 4
  %48 = load i32, i32* %6, align 4
  %49 = add i32 %48, 1
  store i32 %49, i32* %6, align 4
  br label %51

50:                                               ; preds = %31
  call void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.32"* %0, i32* nonnull dereferenceable(4) %3) #9
  br label %51

51:                                               ; preds = %44, %50
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #9
  %52 = getelementptr inbounds %"struct.blink::HarfBuzzRunGlyphData", %"struct.blink::HarfBuzzRunGlyphData"* %33, i64 1
  %53 = icmp eq %"struct.blink::HarfBuzzRunGlyphData"* %52, %26
  br i1 %53, label %28, label %54

54:                                               ; preds = %51
  %55 = load %"struct.blink::ShapeResult::RunInfo"*, %"struct.blink::ShapeResult::RunInfo"** %19, align 8
  br label %31

56:                                               ; preds = %28, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12AddGlyphInfoEPvjtNS_9FloatSizeEfbNS_24CanvasRotationInVerticalEPKNS_14SimpleFontDataE(i8*, i32, i16 zeroext, <2 x float>, float, i1 zeroext, i8 signext, %"class.blink::SimpleFontData"* nocapture readnone) #3 {
  %9 = alloca %"struct.blink::ShapeResultTestGlyphInfo", align 8
  %10 = bitcast %"struct.blink::ShapeResultTestGlyphInfo"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %10) #9
  %11 = bitcast %"struct.blink::ShapeResultTestGlyphInfo"* %9 to i64*
  store i64 -6148914691236517206, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %9, i64 0, i32 0
  store i32 %1, i32* %12, align 8
  %13 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %9, i64 0, i32 1
  store i16 %2, i16* %13, align 4
  %14 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %9, i64 0, i32 2
  store float %4, float* %14, align 8
  %15 = getelementptr inbounds i8, i8* %0, i64 12
  %16 = bitcast i8* %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds i8, i8* %0, i64 8
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %17, %20
  br i1 %21, label %30, label %22, !prof !2

22:                                               ; preds = %8
  %23 = bitcast i8* %0 to %"struct.blink::ShapeResultTestGlyphInfo"**
  %24 = load %"struct.blink::ShapeResultTestGlyphInfo"*, %"struct.blink::ShapeResultTestGlyphInfo"** %23, align 8
  %25 = zext i32 %17 to i64
  %26 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %24, i64 %25
  %27 = bitcast %"struct.blink::ShapeResultTestGlyphInfo"* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* nonnull align 8 %10, i64 12, i1 false) #9
  %28 = load i32, i32* %16, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %16, align 4
  br label %32

30:                                               ; preds = %8
  %31 = bitcast i8* %0 to %"class.WTF::Vector.49"*
  call void @_ZN3WTF6VectorIN5blink24ShapeResultTestGlyphInfoELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.49"* %31, %"struct.blink::ShapeResultTestGlyphInfo"* nonnull dereferenceable(12) %9) #9
  br label %32

32:                                               ; preds = %22, %30
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %10) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19ComputeGlyphResultsERKNS_11ShapeResultEPN3WTF6VectorINS_24ShapeResultTestGlyphInfoELj0ENS3_18PartitionAllocatorEEE(%"class.blink::ShapeResult"* dereferenceable(72), %"class.WTF::Vector.49"*) local_unnamed_addr #1 {
  %3 = bitcast %"class.WTF::Vector.49"* %1 to i8*
  %4 = tail call float @_ZNK5blink11ShapeResult12ForEachGlyphEfPFvPvjtNS_9FloatSizeEfbNS_24CanvasRotationInVerticalEPKNS_14SimpleFontDataEES1_(%"class.blink::ShapeResult"* %0, float 0.000000e+00, void (i8*, i32, i16, <2 x float>, float, i1, i8, %"class.blink::SimpleFontData"*)* nonnull @_ZN5blink12AddGlyphInfoEPvjtNS_9FloatSizeEfbNS_24CanvasRotationInVerticalEPKNS_14SimpleFontDataE, i8* %3) #9
  ret void
}

declare float @_ZNK5blink11ShapeResult12ForEachGlyphEfPFvPvjtNS_9FloatSizeEfbNS_24CanvasRotationInVerticalEPKNS_14SimpleFontDataEES1_(%"class.blink::ShapeResult"*, float, void (i8*, i32, i16, <2 x float>, float, i1, i8, %"class.blink::SimpleFontData"*)*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19CompareResultGlyphsERKN3WTF6VectorINS_24ShapeResultTestGlyphInfoELj0ENS0_18PartitionAllocatorEEES6_jj(%"class.WTF::Vector.49"* dereferenceable(16), %"class.WTF::Vector.49"* dereferenceable(16), i32, i32) local_unnamed_addr #1 {
  %5 = tail call dereferenceable(12) %"struct.blink::ShapeResultTestGlyphInfo"* @_ZNK3WTF6VectorIN5blink24ShapeResultTestGlyphInfoELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.49"* %1, i32 %2) #9
  %6 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %5, i64 0, i32 2
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %"class.WTF::Vector.49", %"class.WTF::Vector.49"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %100, label %14

11:                                               ; preds = %30
  %12 = load i32, i32* %8, align 4
  %13 = icmp ult i32 %37, %12
  br i1 %13, label %14, label %100

14:                                               ; preds = %4, %11
  %15 = phi i32 [ %37, %11 ], [ 0, %4 ]
  %16 = tail call dereferenceable(12) %"struct.blink::ShapeResultTestGlyphInfo"* @_ZNK3WTF6VectorIN5blink24ShapeResultTestGlyphInfoELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.49"* %0, i32 %15) #9
  %17 = add i32 %15, %2
  %18 = tail call dereferenceable(12) %"struct.blink::ShapeResultTestGlyphInfo"* @_ZNK3WTF6VectorIN5blink24ShapeResultTestGlyphInfoELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.49"* %1, i32 %17) #9
  %19 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %16, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %18, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %24, label %38

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %16, i64 0, i32 1
  %26 = load i16, i16* %25, align 4
  %27 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %18, i64 0, i32 1
  %28 = load i16, i16* %27, align 4
  %29 = icmp eq i16 %26, %28
  br i1 %29, label %30, label %38

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %16, i64 0, i32 2
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %18, i64 0, i32 2
  %34 = load float, float* %33, align 4
  %35 = fsub float %34, %7
  %36 = fcmp une float %32, %35
  %37 = add nuw i32 %15, 1
  br i1 %36, label %38, label %11

38:                                               ; preds = %24, %14, %30
  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %40 = tail call i64 @fwrite(i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str, i64 0, i64 0), i64 99, i64 1, %struct._IO_FILE* %39) #10
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %42 = tail call i64 @fwrite(i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.1, i64 0, i64 0), i64 92, i64 1, %struct._IO_FILE* %41) #10
  %43 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %44 = tail call i64 @fwrite(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i64 0, i64 0), i64 49, i64 1, %struct._IO_FILE* %43) #10
  %45 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %46 = tail call i64 @fwrite(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.3, i64 0, i64 0), i64 46, i64 1, %struct._IO_FILE* %45) #10
  %47 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %48 = tail call i64 @fwrite(i8* getelementptr inbounds ([116 x i8], [116 x i8]* @.str.4, i64 0, i64 0), i64 115, i64 1, %struct._IO_FILE* %47) #10
  %49 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %50 = tail call i64 @fwrite(i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.5, i64 0, i64 0), i64 112, i64 1, %struct._IO_FILE* %49) #10
  %51 = load i32, i32* %8, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %58, %38
  %54 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %55 = tail call i64 @fwrite(i8* getelementptr inbounds ([116 x i8], [116 x i8]* @.str.13, i64 0, i64 0), i64 115, i64 1, %struct._IO_FILE* %54) #10
  %56 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %57 = tail call i64 @fwrite(i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.14, i64 0, i64 0), i64 112, i64 1, %struct._IO_FILE* %56) #10
  br label %100

58:                                               ; preds = %38, %58
  %59 = phi i32 [ %97, %58 ], [ 0, %38 ]
  %60 = tail call dereferenceable(12) %"struct.blink::ShapeResultTestGlyphInfo"* @_ZNK3WTF6VectorIN5blink24ShapeResultTestGlyphInfoELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.49"* %0, i32 %59) #9
  %61 = add i32 %59, %2
  %62 = tail call dereferenceable(12) %"struct.blink::ShapeResultTestGlyphInfo"* @_ZNK3WTF6VectorIN5blink24ShapeResultTestGlyphInfoELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.49"* %1, i32 %61) #9
  %63 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %60, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %62, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %64, %66
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %69 = select i1 %67, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0)
  %70 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %68, i8* %69, i32 %64) #10
  %71 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %60, i64 0, i32 1
  %72 = load i16, i16* %71, align 4
  %73 = zext i16 %72 to i32
  %74 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %62, i64 0, i32 1
  %75 = load i16, i16* %74, align 4
  %76 = icmp eq i16 %72, %75
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %78 = select i1 %76, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)
  %79 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %77, i8* %78, i32 %73) #10
  %80 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %60, i64 0, i32 2
  %81 = load float, float* %80, align 4
  %82 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %62, i64 0, i32 2
  %83 = load float, float* %82, align 4
  %84 = fcmp oeq float %81, %83
  %85 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %86 = fpext float %81 to double
  %87 = select i1 %84, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0)
  %88 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %85, i8* %87, double %86) #10
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %90 = load i32, i32* %65, align 4
  %91 = load i16, i16* %74, align 4
  %92 = zext i16 %91 to i32
  %93 = load float, float* %82, align 4
  %94 = fsub float %93, %7
  %95 = fpext float %94 to double
  %96 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %89, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12, i64 0, i64 0), i32 %90, i32 %92, double %95) #10
  %97 = add nuw i32 %59, 1
  %98 = load i32, i32* %8, align 4
  %99 = icmp ult i32 %97, %98
  br i1 %99, label %58, label %53

100:                                              ; preds = %11, %4, %53
  %101 = phi i1 [ false, %53 ], [ true, %4 ], [ true, %11 ]
  ret i1 %101
}

; Function Attrs: nofree nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr* @_ZNK3WTF6VectorI13scoped_refptrIN5blink11ShapeResult7RunInfoEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.16, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr*, %class.scoped_refptr** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 %25
  ret %class.scoped_refptr* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIjEEvOT_(%"class.WTF::Vector.32"*, i32* dereferenceable(4)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.32"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector.32"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector.32"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.32", %"class.WTF::Vector.32"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #9
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.32"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #9
  %87 = bitcast %"class.WTF::Vector.32"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #9
  %91 = bitcast %"class.WTF::Vector.32"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.19, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink24ShapeResultTestGlyphInfoELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.49"*, %"struct.blink::ShapeResultTestGlyphInfo"* dereferenceable(12)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.49", %"class.WTF::Vector.49"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.49", %"class.WTF::Vector.49"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::ShapeResultTestGlyphInfo"*, %"struct.blink::ShapeResultTestGlyphInfo"** %6, align 8
  %8 = icmp ugt %"struct.blink::ShapeResultTestGlyphInfo"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::ShapeResultTestGlyphInfo"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.49", %"class.WTF::Vector.49"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::ShapeResultTestGlyphInfo"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24ShapeResultTestGlyphInfoEEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24ShapeResultTestGlyphInfoEEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.49"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 12
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.blink::ShapeResultTestGlyphInfo"*
  br label %99

35:                                               ; preds = %24
  %36 = udiv i64 %27, 12
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.blink::ShapeResultTestGlyphInfo"*, %"struct.blink::ShapeResultTestGlyphInfo"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.blink::ShapeResultTestGlyphInfo"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.blink::ShapeResultTestGlyphInfo"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = mul nuw nsw i64 %45, 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector.49"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector.49"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.blink::ShapeResultTestGlyphInfo"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.blink::ShapeResultTestGlyphInfo"* %1 to i64
  %56 = ptrtoint %"struct.blink::ShapeResultTestGlyphInfo"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = sdiv exact i64 %57, 12
  %59 = getelementptr inbounds %"class.WTF::Vector.49", %"class.WTF::Vector.49"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"struct.blink::ShapeResultTestGlyphInfo"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24ShapeResultTestGlyphInfoEEEmm(i64 %71) #9
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24ShapeResultTestGlyphInfoEEEPKcv, i64 0, i64 0)) #9
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.49"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.blink::ShapeResultTestGlyphInfo"*, %"struct.blink::ShapeResultTestGlyphInfo"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.blink::ShapeResultTestGlyphInfo"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.blink::ShapeResultTestGlyphInfo"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = mul nuw nsw i64 %85, 12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #9
  %87 = bitcast %"class.WTF::Vector.49"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #9
  %91 = bitcast %"class.WTF::Vector.49"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = udiv i64 %72, 12
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.blink::ShapeResultTestGlyphInfo"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.blink::ShapeResultTestGlyphInfo"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.blink::ShapeResultTestGlyphInfo"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.blink::ShapeResultTestGlyphInfo"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %100, i64 %103
  %105 = bitcast %"struct.blink::ShapeResultTestGlyphInfo"* %104 to i8*
  %106 = bitcast %"struct.blink::ShapeResultTestGlyphInfo"* %101 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %106, i64 12, i1 false) #9
  %107 = load i32, i32* %3, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24ShapeResultTestGlyphInfoEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 178782208
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 178782208) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.19, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 12
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(12) %"struct.blink::ShapeResultTestGlyphInfo"* @_ZNK3WTF6VectorIN5blink24ShapeResultTestGlyphInfoELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.49"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.49", %"class.WTF::Vector.49"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #9
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #9
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.16, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #9
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #9
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  %23 = getelementptr inbounds %"class.WTF::Vector.49", %"class.WTF::Vector.49"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::ShapeResultTestGlyphInfo"*, %"struct.blink::ShapeResultTestGlyphInfo"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::ShapeResultTestGlyphInfo", %"struct.blink::ShapeResultTestGlyphInfo"* %24, i64 %25
  ret %"struct.blink::ShapeResultTestGlyphInfo"* %26
}

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind }
attributes #9 = { nounwind }
attributes #10 = { cold }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
