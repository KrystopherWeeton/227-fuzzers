; ModuleID = '../../third_party/blink/renderer/core/layout/hit_test_location.cc'
source_filename = "../../third_party/blink/renderer/core/layout/hit_test_location.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DoublePoint" = type { double, double }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }

@_ZN5blink15HitTestLocationC1Ev = hidden unnamed_addr alias void (%"class.blink::HitTestLocation"*), void (%"class.blink::HitTestLocation"*)* @_ZN5blink15HitTestLocationC2Ev
@_ZN5blink15HitTestLocationC1ERKNS_8IntPointE = hidden unnamed_addr alias void (%"class.blink::HitTestLocation"*, %"class.blink::IntPoint"*), void (%"class.blink::HitTestLocation"*, %"class.blink::IntPoint"*)* @_ZN5blink15HitTestLocationC2ERKNS_8IntPointE
@_ZN5blink15HitTestLocationC1ERKNS_14PhysicalOffsetE = hidden unnamed_addr alias void (%"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*), void (%"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)* @_ZN5blink15HitTestLocationC2ERKNS_14PhysicalOffsetE
@_ZN5blink15HitTestLocationC1ERKNS_10FloatPointE = hidden unnamed_addr alias void (%"class.blink::HitTestLocation"*, %"class.blink::FloatPoint"*), void (%"class.blink::HitTestLocation"*, %"class.blink::FloatPoint"*)* @_ZN5blink15HitTestLocationC2ERKNS_10FloatPointE
@_ZN5blink15HitTestLocationC1ERKNS_10FloatPointERKNS_12PhysicalRectE = hidden unnamed_addr alias void (%"class.blink::HitTestLocation"*, %"class.blink::FloatPoint"*, %"struct.blink::PhysicalRect"*), void (%"class.blink::HitTestLocation"*, %"class.blink::FloatPoint"*, %"struct.blink::PhysicalRect"*)* @_ZN5blink15HitTestLocationC2ERKNS_10FloatPointERKNS_12PhysicalRectE
@_ZN5blink15HitTestLocationC1ERKNS_11DoublePointE = hidden unnamed_addr alias void (%"class.blink::HitTestLocation"*, %"class.blink::DoublePoint"*), void (%"class.blink::HitTestLocation"*, %"class.blink::DoublePoint"*)* @_ZN5blink15HitTestLocationC2ERKNS_11DoublePointE
@_ZN5blink15HitTestLocationC1ERKNS_10FloatPointERKNS_9FloatQuadE = hidden unnamed_addr alias void (%"class.blink::HitTestLocation"*, %"class.blink::FloatPoint"*, %"class.blink::FloatQuad"*), void (%"class.blink::HitTestLocation"*, %"class.blink::FloatPoint"*, %"class.blink::FloatQuad"*)* @_ZN5blink15HitTestLocationC2ERKNS_10FloatPointERKNS_9FloatQuadE
@_ZN5blink15HitTestLocationC1ERKNS_12PhysicalRectE = hidden unnamed_addr alias void (%"class.blink::HitTestLocation"*, %"struct.blink::PhysicalRect"*), void (%"class.blink::HitTestLocation"*, %"struct.blink::PhysicalRect"*)* @_ZN5blink15HitTestLocationC2ERKNS_12PhysicalRectE
@_ZN5blink15HitTestLocationC1ERKS0_RKNS_14PhysicalOffsetE = hidden unnamed_addr alias void (%"class.blink::HitTestLocation"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*), void (%"class.blink::HitTestLocation"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)* @_ZN5blink15HitTestLocationC2ERKS0_RKNS_14PhysicalOffsetE
@_ZN5blink15HitTestLocationC1ERKS0_j = hidden unnamed_addr alias void (%"class.blink::HitTestLocation"*, %"class.blink::HitTestLocation"*, i32), void (%"class.blink::HitTestLocation"*, %"class.blink::HitTestLocation"*, i32)* @_ZN5blink15HitTestLocationC2ERKS0_j
@_ZN5blink15HitTestLocationC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::HitTestLocation"*, %"class.blink::HitTestLocation"*), void (%"class.blink::HitTestLocation"*, %"class.blink::HitTestLocation"*)* @_ZN5blink15HitTestLocationC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HitTestLocationC2Ev(%"class.blink::HitTestLocation"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 4
  %3 = bitcast %"class.blink::HitTestLocation"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 64, i1 false)
  store i32 -1, i32* %2, align 4
  %4 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 5
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 6
  store i8 1, i8* %5, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HitTestLocationC2ERKNS_8IntPointE(%"class.blink::HitTestLocation"* nocapture, %"class.blink::IntPoint"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 33554431
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = icmp slt i32 %4, -33554432
  %8 = shl i32 %4, 6
  %9 = select i1 %7, i32 -2147483648, i32 %8
  br label %10

10:                                               ; preds = %6, %2
  %11 = phi i32 [ 2147483647, %2 ], [ %9, %6 ]
  %12 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, 33554431
  br i1 %14, label %19, label %15

15:                                               ; preds = %10
  %16 = icmp slt i32 %13, -33554432
  %17 = shl i32 %13, 6
  %18 = select i1 %16, i32 -2147483648, i32 %17
  br label %19

19:                                               ; preds = %15, %10
  %20 = phi i32 [ 2147483647, %10 ], [ %18, %15 ]
  %21 = bitcast %"class.blink::HitTestLocation"* %0 to i64*
  %22 = zext i32 %20 to i64
  %23 = shl nuw i64 %22, 32
  %24 = zext i32 %11 to i64
  %25 = or i64 %23, %24
  store i64 %25, i64* %21, align 4
  %26 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 1
  %27 = bitcast %"struct.blink::PhysicalRect"* %26 to i64*
  store i64 %25, i64* %27, align 4
  %28 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 1, i32 1
  %29 = bitcast %"struct.blink::PhysicalSize"* %28 to i64*
  store i64 274877907008, i64* %29, align 4
  %30 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 2
  %31 = sitofp i32 %11 to float
  %32 = fmul float %31, 1.562500e-02
  %33 = sitofp i32 %20 to float
  %34 = fmul float %33, 1.562500e-02
  %35 = insertelement <2 x float> undef, float %32, i32 0
  %36 = insertelement <2 x float> %35, float %34, i32 1
  %37 = bitcast %"class.blink::FloatPoint"* %30 to <2 x float>*
  store <2 x float> %36, <2 x float>* %37, align 4
  %38 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3
  %39 = bitcast %"class.blink::FloatQuad"* %38 to <2 x float>*
  store <2 x float> %36, <2 x float>* %39, align 4
  %40 = fadd float %32, 1.000000e+00
  %41 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 1, i32 0
  store float %40, float* %41, align 4
  %42 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 1, i32 1
  store float %34, float* %42, align 4
  %43 = fadd float %34, 1.000000e+00
  %44 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 2, i32 0
  store float %40, float* %44, align 4
  %45 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 2, i32 1
  store float %43, float* %45, align 4
  %46 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 3, i32 0
  store float %32, float* %46, align 4
  %47 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 3, i32 1
  store float %43, float* %47, align 4
  %48 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 4
  store i32 -1, i32* %48, align 4
  %49 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 5
  store i8 0, i8* %49, align 4
  %50 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 6
  store i8 1, i8* %50, align 1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HitTestLocationC2ERKNS_14PhysicalOffsetE(%"class.blink::HitTestLocation"* nocapture, %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.blink::PhysicalOffset"* %1 to i64*
  %4 = bitcast %"class.blink::HitTestLocation"* %0 to i64*
  %5 = load i64, i64* %3, align 4
  store i64 %5, i64* %4, align 4
  %6 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 1
  %7 = load i64, i64* %3, align 4
  %8 = bitcast %"struct.blink::PhysicalRect"* %6 to i64*
  store i64 %7, i64* %8, align 4
  %9 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 1, i32 1
  %10 = bitcast %"struct.blink::PhysicalSize"* %9 to i64*
  store i64 274877907008, i64* %10, align 4
  %11 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = sitofp i32 %13 to float
  %15 = fmul float %14, 1.562500e-02
  %16 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = sitofp i32 %17 to float
  %19 = fmul float %18, 1.562500e-02
  %20 = insertelement <2 x float> undef, float %15, i32 0
  %21 = insertelement <2 x float> %20, float %19, i32 1
  %22 = bitcast %"class.blink::FloatPoint"* %11 to <2 x float>*
  store <2 x float> %21, <2 x float>* %22, align 4
  %23 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3
  %24 = trunc i64 %7 to i32
  %25 = sitofp i32 %24 to float
  %26 = fmul float %25, 1.562500e-02
  %27 = lshr i64 %7, 32
  %28 = trunc i64 %27 to i32
  %29 = sitofp i32 %28 to float
  %30 = fmul float %29, 1.562500e-02
  %31 = insertelement <2 x float> undef, float %26, i32 0
  %32 = insertelement <2 x float> %31, float %30, i32 1
  %33 = bitcast %"class.blink::FloatQuad"* %23 to <2 x float>*
  store <2 x float> %32, <2 x float>* %33, align 4
  %34 = fadd float %26, 1.000000e+00
  %35 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 1, i32 0
  store float %34, float* %35, align 4
  %36 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 1, i32 1
  store float %30, float* %36, align 4
  %37 = fadd float %30, 1.000000e+00
  %38 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 2, i32 0
  store float %34, float* %38, align 4
  %39 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 2, i32 1
  store float %37, float* %39, align 4
  %40 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 3, i32 0
  store float %26, float* %40, align 4
  %41 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 3, i32 1
  store float %37, float* %41, align 4
  %42 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 4
  store i32 -1, i32* %42, align 4
  %43 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 5
  store i8 0, i8* %43, align 4
  %44 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 6
  store i8 1, i8* %44, align 1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HitTestLocationC2ERKNS_10FloatPointE(%"class.blink::HitTestLocation"* nocapture, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = fmul float %4, 6.400000e+01
  %6 = tail call float @llvm.floor.f32(float %5) #6
  %7 = fcmp ult float %6, 0xC1E0000000000000
  %8 = fcmp ugt float %6, 0x41DFFFFFE0000000
  %9 = fcmp ogt float %6, 0xC1E0000000000000
  %10 = select i1 %9, float %6, float 0xC1E0000000000000
  %11 = fptosi float %10 to i32
  %12 = select i1 %7, i32 0, i32 2147483647
  %13 = select i1 %8, i32 %12, i32 %11
  %14 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = fmul float %15, 6.400000e+01
  %17 = tail call float @llvm.floor.f32(float %16) #6
  %18 = fcmp ult float %17, 0xC1E0000000000000
  %19 = fcmp ugt float %17, 0x41DFFFFFE0000000
  %20 = fcmp ogt float %17, 0xC1E0000000000000
  %21 = select i1 %20, float %17, float 0xC1E0000000000000
  %22 = fptosi float %21 to i32
  %23 = select i1 %18, i32 0, i32 2147483647
  %24 = select i1 %19, i32 %23, i32 %22
  %25 = zext i32 %24 to i64
  %26 = shl nuw i64 %25, 32
  %27 = zext i32 %13 to i64
  %28 = or i64 %26, %27
  %29 = bitcast %"class.blink::HitTestLocation"* %0 to i64*
  store i64 %28, i64* %29, align 4
  %30 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 1
  %31 = bitcast %"struct.blink::PhysicalRect"* %30 to i64*
  store i64 %28, i64* %31, align 4
  %32 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 1, i32 1
  %33 = bitcast %"struct.blink::PhysicalSize"* %32 to i64*
  store i64 274877907008, i64* %33, align 4
  %34 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 2
  %35 = bitcast %"class.blink::FloatPoint"* %1 to i64*
  %36 = bitcast %"class.blink::FloatPoint"* %34 to i64*
  %37 = load i64, i64* %35, align 4
  store i64 %37, i64* %36, align 4
  %38 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3
  %39 = sitofp i32 %13 to float
  %40 = fmul float %39, 1.562500e-02
  %41 = sitofp i32 %24 to float
  %42 = fmul float %41, 1.562500e-02
  %43 = insertelement <2 x float> undef, float %40, i32 0
  %44 = insertelement <2 x float> %43, float %42, i32 1
  %45 = bitcast %"class.blink::FloatQuad"* %38 to <2 x float>*
  store <2 x float> %44, <2 x float>* %45, align 4
  %46 = fadd float %40, 1.000000e+00
  %47 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 1, i32 0
  store float %46, float* %47, align 4
  %48 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 1, i32 1
  store float %42, float* %48, align 4
  %49 = fadd float %42, 1.000000e+00
  %50 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 2, i32 0
  store float %46, float* %50, align 4
  %51 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 2, i32 1
  store float %49, float* %51, align 4
  %52 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 3, i32 0
  store float %40, float* %52, align 4
  %53 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 3, i32 1
  store float %49, float* %53, align 4
  %54 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 4
  store i32 -1, i32* %54, align 4
  %55 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 5
  store i8 0, i8* %55, align 4
  %56 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 6
  store i8 1, i8* %56, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HitTestLocationC2ERKNS_10FloatPointERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"* nocapture, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8), %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16)) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = fmul float %5, 6.400000e+01
  %7 = tail call float @llvm.floor.f32(float %6) #6
  %8 = fcmp ult float %7, 0xC1E0000000000000
  %9 = fcmp ugt float %7, 0x41DFFFFFE0000000
  %10 = fcmp ogt float %7, 0xC1E0000000000000
  %11 = select i1 %10, float %7, float 0xC1E0000000000000
  %12 = fptosi float %11 to i32
  %13 = select i1 %8, i32 0, i32 2147483647
  %14 = select i1 %9, i32 %13, i32 %12
  %15 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = fmul float %16, 6.400000e+01
  %18 = tail call float @llvm.floor.f32(float %17) #6
  %19 = fcmp ult float %18, 0xC1E0000000000000
  %20 = fcmp ugt float %18, 0x41DFFFFFE0000000
  %21 = fcmp ogt float %18, 0xC1E0000000000000
  %22 = select i1 %21, float %18, float 0xC1E0000000000000
  %23 = fptosi float %22 to i32
  %24 = select i1 %19, i32 0, i32 2147483647
  %25 = select i1 %20, i32 %24, i32 %23
  %26 = zext i32 %25 to i64
  %27 = shl nuw i64 %26, 32
  %28 = zext i32 %14 to i64
  %29 = or i64 %27, %28
  %30 = bitcast %"class.blink::HitTestLocation"* %0 to i64*
  store i64 %29, i64* %30, align 4
  %31 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 1
  %32 = bitcast %"struct.blink::PhysicalRect"* %31 to i8*
  %33 = bitcast %"struct.blink::PhysicalRect"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %33, i64 16, i1 false)
  %34 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 2
  %35 = bitcast %"class.blink::FloatPoint"* %1 to i64*
  %36 = bitcast %"class.blink::FloatPoint"* %34 to i64*
  %37 = load i64, i64* %35, align 4
  store i64 %37, i64* %36, align 4
  %38 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3
  %39 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = sitofp i32 %40 to float
  %42 = fmul float %41, 1.562500e-02
  %43 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 0, i32 1, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = sitofp i32 %44 to float
  %46 = fmul float %45, 1.562500e-02
  %47 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = sitofp i32 %48 to float
  %50 = fmul float %49, 1.562500e-02
  %51 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %2, i64 0, i32 1, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = sitofp i32 %52 to float
  %54 = fmul float %53, 1.562500e-02
  %55 = insertelement <2 x float> undef, float %42, i32 0
  %56 = insertelement <2 x float> %55, float %46, i32 1
  %57 = bitcast %"class.blink::FloatQuad"* %38 to <2 x float>*
  store <2 x float> %56, <2 x float>* %57, align 4
  %58 = fadd float %42, %50
  %59 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 1, i32 0
  store float %58, float* %59, align 4
  %60 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 1, i32 1
  store float %46, float* %60, align 4
  %61 = fadd float %46, %54
  %62 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 2, i32 0
  store float %58, float* %62, align 4
  %63 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 2, i32 1
  store float %61, float* %63, align 4
  %64 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 3, i32 0
  store float %42, float* %64, align 4
  %65 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 3, i32 1
  store float %61, float* %65, align 4
  %66 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 4
  store i32 -1, i32* %66, align 4
  %67 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 5
  store i8 0, i8* %67, align 4
  %68 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 6
  store i8 1, i8* %68, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HitTestLocationC2ERKNS_11DoublePointE(%"class.blink::HitTestLocation"* nocapture, %"class.blink::DoublePoint"* dereferenceable(16)) unnamed_addr #1 align 2 {
  %3 = tail call <2 x float> @_ZNK5blink11DoublePointcvNS_10FloatPointEEv(%"class.blink::DoublePoint"* %1) #6
  %4 = extractelement <2 x float> %3, i32 0
  %5 = fmul float %4, 6.400000e+01
  %6 = tail call float @llvm.floor.f32(float %5) #6
  %7 = fcmp ult float %6, 0xC1E0000000000000
  %8 = fcmp ugt float %6, 0x41DFFFFFE0000000
  %9 = fcmp ogt float %6, 0xC1E0000000000000
  %10 = select i1 %9, float %6, float 0xC1E0000000000000
  %11 = fptosi float %10 to i32
  %12 = select i1 %7, i32 0, i32 2147483647
  %13 = select i1 %8, i32 %12, i32 %11
  %14 = extractelement <2 x float> %3, i32 1
  %15 = fmul float %14, 6.400000e+01
  %16 = tail call float @llvm.floor.f32(float %15) #6
  %17 = fcmp ult float %16, 0xC1E0000000000000
  %18 = fcmp ugt float %16, 0x41DFFFFFE0000000
  %19 = fcmp ogt float %16, 0xC1E0000000000000
  %20 = select i1 %19, float %16, float 0xC1E0000000000000
  %21 = fptosi float %20 to i32
  %22 = select i1 %17, i32 0, i32 2147483647
  %23 = select i1 %18, i32 %22, i32 %21
  %24 = zext i32 %23 to i64
  %25 = shl nuw i64 %24, 32
  %26 = zext i32 %13 to i64
  %27 = or i64 %25, %26
  %28 = bitcast %"class.blink::HitTestLocation"* %0 to i64*
  store i64 %27, i64* %28, align 4
  %29 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 1
  %30 = bitcast %"struct.blink::PhysicalRect"* %29 to i64*
  store i64 %27, i64* %30, align 4
  %31 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 1, i32 1
  %32 = bitcast %"struct.blink::PhysicalSize"* %31 to i64*
  store i64 274877907008, i64* %32, align 4
  %33 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 2
  %34 = bitcast %"class.blink::FloatPoint"* %33 to <2 x float>*
  store <2 x float> %3, <2 x float>* %34, align 4
  %35 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3
  %36 = sitofp i32 %13 to float
  %37 = fmul float %36, 1.562500e-02
  %38 = sitofp i32 %23 to float
  %39 = fmul float %38, 1.562500e-02
  %40 = insertelement <2 x float> undef, float %37, i32 0
  %41 = insertelement <2 x float> %40, float %39, i32 1
  %42 = bitcast %"class.blink::FloatQuad"* %35 to <2 x float>*
  store <2 x float> %41, <2 x float>* %42, align 4
  %43 = fadd float %37, 1.000000e+00
  %44 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 1, i32 0
  store float %43, float* %44, align 4
  %45 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 1, i32 1
  store float %39, float* %45, align 4
  %46 = fadd float %39, 1.000000e+00
  %47 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 2, i32 0
  store float %43, float* %47, align 4
  %48 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 2, i32 1
  store float %46, float* %48, align 4
  %49 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 3, i32 0
  store float %37, float* %49, align 4
  %50 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 3, i32 1
  store float %46, float* %50, align 4
  %51 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 4
  store i32 -1, i32* %51, align 4
  %52 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 5
  store i8 0, i8* %52, align 4
  %53 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 6
  store i8 1, i8* %53, align 1
  ret void
}

declare <2 x float> @_ZNK5blink11DoublePointcvNS_10FloatPointEEv(%"class.blink::DoublePoint"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HitTestLocationC2ERKNS_10FloatPointERKNS_9FloatQuadE(%"class.blink::HitTestLocation"* nocapture, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8), %"class.blink::FloatQuad"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 2
  %6 = bitcast %"class.blink::FloatPoint"* %1 to i64*
  %7 = bitcast %"class.blink::FloatPoint"* %5 to i64*
  %8 = bitcast %"class.blink::HitTestLocation"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 24, i1 false)
  %9 = load i64, i64* %6, align 4
  store i64 %9, i64* %7, align 4
  %10 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3
  %11 = bitcast %"class.blink::FloatQuad"* %10 to i8*
  %12 = bitcast %"class.blink::FloatQuad"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 4 %12, i64 32, i1 false)
  %13 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 4
  store i32 -1, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 5
  store i8 1, i8* %14, align 4
  %15 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 0
  %16 = load float, float* %15, align 4
  %17 = fmul float %16, 6.400000e+01
  %18 = tail call float @llvm.floor.f32(float %17) #6
  %19 = fcmp ult float %18, 0xC1E0000000000000
  %20 = fcmp ugt float %18, 0x41DFFFFFE0000000
  %21 = fcmp ogt float %18, 0xC1E0000000000000
  %22 = select i1 %21, float %18, float 0xC1E0000000000000
  %23 = fptosi float %22 to i32
  %24 = select i1 %19, i32 0, i32 2147483647
  %25 = select i1 %20, i32 %24, i32 %23
  %26 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  %27 = load float, float* %26, align 4
  %28 = fmul float %27, 6.400000e+01
  %29 = tail call float @llvm.floor.f32(float %28) #6
  %30 = fcmp ult float %29, 0xC1E0000000000000
  %31 = fcmp ugt float %29, 0x41DFFFFFE0000000
  %32 = fcmp ogt float %29, 0xC1E0000000000000
  %33 = select i1 %32, float %29, float 0xC1E0000000000000
  %34 = fptosi float %33 to i32
  %35 = select i1 %30, i32 0, i32 2147483647
  %36 = select i1 %31, i32 %35, i32 %34
  %37 = zext i32 %36 to i64
  %38 = shl nuw i64 %37, 32
  %39 = zext i32 %25 to i64
  %40 = or i64 %38, %39
  %41 = bitcast %"class.blink::HitTestLocation"* %0 to i64*
  store i64 %40, i64* %41, align 4
  %42 = tail call { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"* %2) #6
  %43 = extractvalue { <2 x float>, <2 x float> } %42, 0
  %44 = extractvalue { <2 x float>, <2 x float> } %42, 1
  %45 = extractelement <2 x float> %43, i32 0
  %46 = fmul float %45, 6.400000e+01
  %47 = tail call float @llvm.floor.f32(float %46) #6
  %48 = fcmp ult float %47, 0xC1E0000000000000
  %49 = fcmp ugt float %47, 0x41DFFFFFE0000000
  %50 = fcmp ogt float %47, 0xC1E0000000000000
  %51 = select i1 %50, float %47, float 0xC1E0000000000000
  %52 = fptosi float %51 to i32
  %53 = select i1 %48, i32 0, i32 2147483647
  %54 = select i1 %49, i32 %53, i32 %52
  %55 = extractelement <2 x float> %43, i32 1
  %56 = fmul float %55, 6.400000e+01
  %57 = tail call float @llvm.floor.f32(float %56) #6
  %58 = fcmp ult float %57, 0xC1E0000000000000
  %59 = fcmp ugt float %57, 0x41DFFFFFE0000000
  %60 = fcmp ogt float %57, 0xC1E0000000000000
  %61 = select i1 %60, float %57, float 0xC1E0000000000000
  %62 = fptosi float %61 to i32
  %63 = select i1 %58, i32 0, i32 2147483647
  %64 = select i1 %59, i32 %63, i32 %62
  %65 = extractelement <2 x float> %44, i32 0
  %66 = fadd float %45, %65
  %67 = fmul float %66, 6.400000e+01
  %68 = tail call float @llvm.ceil.f32(float %67) #6
  %69 = fcmp ult float %68, 0xC1E0000000000000
  %70 = fcmp ugt float %68, 0x41DFFFFFE0000000
  %71 = fcmp ogt float %68, 0xC1E0000000000000
  %72 = select i1 %71, float %68, float 0xC1E0000000000000
  %73 = fptosi float %72 to i32
  %74 = select i1 %69, i32 0, i32 2147483647
  %75 = select i1 %70, i32 %74, i32 %73
  %76 = icmp sgt i32 %54, -1
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %75, i32 %54) #6
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 %77, i32 %80, !prof !2
  %82 = extractelement <2 x float> %44, i32 1
  %83 = fadd float %55, %82
  %84 = fmul float %83, 6.400000e+01
  %85 = tail call float @llvm.ceil.f32(float %84) #6
  %86 = fcmp ult float %85, 0xC1E0000000000000
  %87 = fcmp ugt float %85, 0x41DFFFFFE0000000
  %88 = fcmp ogt float %85, 0xC1E0000000000000
  %89 = select i1 %88, float %85, float 0xC1E0000000000000
  %90 = fptosi float %89 to i32
  %91 = select i1 %86, i32 0, i32 2147483647
  %92 = select i1 %87, i32 %91, i32 %90
  %93 = icmp sgt i32 %64, -1
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %92, i32 %64) #6
  %96 = extractvalue { i32, i1 } %95, 1
  %97 = extractvalue { i32, i1 } %95, 0
  %98 = select i1 %96, i32 %94, i32 %97, !prof !2
  %99 = zext i32 %64 to i64
  %100 = shl nuw i64 %99, 32
  %101 = zext i32 %54 to i64
  %102 = or i64 %100, %101
  %103 = zext i32 %98 to i64
  %104 = shl nuw i64 %103, 32
  %105 = zext i32 %81 to i64
  %106 = or i64 %104, %105
  %107 = bitcast %"struct.blink::PhysicalRect"* %4 to i64*
  store i64 %102, i64* %107, align 4
  %108 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 1, i32 1
  %109 = bitcast %"struct.blink::PhysicalSize"* %108 to i64*
  store i64 %106, i64* %109, align 4
  %110 = tail call zeroext i1 @_ZNK5blink9FloatQuad13IsRectilinearEv(%"class.blink::FloatQuad"* %2) #6
  %111 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 6
  %112 = zext i1 %110 to i8
  store i8 %112, i8* %111, align 1
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink9FloatQuad13IsRectilinearEv(%"class.blink::FloatQuad"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HitTestLocationC2ERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"* nocapture, %"struct.blink::PhysicalRect"* nocapture readonly dereferenceable(16)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = sdiv i32 %4, 2
  %6 = sext i32 %5 to i64
  %7 = tail call i1 @llvm.is.constant.i64(i64 %6) #6
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = icmp slt i32 %4, -1
  %10 = select i1 %9, i32 -2147483648, i32 2147483647
  %11 = add nsw i64 %6, 2147483648
  %12 = icmp ult i64 %11, 4294967296
  %13 = select i1 %12, i32 %5, i32 %10, !prof !3
  br label %14

14:                                               ; preds = %8, %2
  %15 = phi i32 [ %13, %8 ], [ %5, %2 ]
  %16 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = sdiv i32 %17, 2
  %19 = sext i32 %18 to i64
  %20 = tail call i1 @llvm.is.constant.i64(i64 %19) #6
  br i1 %20, label %27, label %21

21:                                               ; preds = %14
  %22 = icmp slt i32 %17, -1
  %23 = select i1 %22, i32 -2147483648, i32 2147483647
  %24 = add nsw i64 %19, 2147483648
  %25 = icmp ult i64 %24, 4294967296
  %26 = select i1 %25, i32 %18, i32 %23, !prof !3
  br label %27

27:                                               ; preds = %14, %21
  %28 = phi i32 [ %26, %21 ], [ %18, %14 ]
  %29 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %15, 0
  %32 = select i1 %31, i32 -2147483648, i32 2147483647
  %33 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %30, i32 %15) #6
  %34 = extractvalue { i32, i1 } %33, 1
  %35 = extractvalue { i32, i1 } %33, 0
  %36 = select i1 %34, i32 %32, i32 %35, !prof !2
  %37 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %28, 0
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %28) #6
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !2
  %45 = zext i32 %44 to i64
  %46 = shl nuw i64 %45, 32
  %47 = zext i32 %36 to i64
  %48 = or i64 %46, %47
  %49 = bitcast %"class.blink::HitTestLocation"* %0 to i64*
  store i64 %48, i64* %49, align 4
  %50 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 1
  %51 = bitcast %"struct.blink::PhysicalRect"* %50 to i8*
  %52 = bitcast %"struct.blink::PhysicalRect"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %52, i64 16, i1 false)
  %53 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 2
  %54 = sitofp i32 %36 to float
  %55 = fmul float %54, 1.562500e-02
  %56 = sitofp i32 %44 to float
  %57 = fmul float %56, 1.562500e-02
  %58 = insertelement <2 x float> undef, float %55, i32 0
  %59 = insertelement <2 x float> %58, float %57, i32 1
  %60 = bitcast %"class.blink::FloatPoint"* %53 to <2 x float>*
  store <2 x float> %59, <2 x float>* %60, align 4
  %61 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3
  %62 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 4
  store i32 -1, i32* %62, align 4
  %63 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 5
  store i8 1, i8* %63, align 4
  %64 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 6
  store i8 1, i8* %64, align 1
  %65 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %50, i64 0, i32 0, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = sitofp i32 %66 to float
  %68 = fmul float %67, 1.562500e-02
  %69 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = sitofp i32 %70 to float
  %72 = fmul float %71, 1.562500e-02
  %73 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = sitofp i32 %74 to float
  %76 = fmul float %75, 1.562500e-02
  %77 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 1, i32 1, i32 1, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = sitofp i32 %78 to float
  %80 = fmul float %79, 1.562500e-02
  %81 = insertelement <2 x float> undef, float %68, i32 0
  %82 = insertelement <2 x float> %81, float %72, i32 1
  %83 = fadd float %68, %76
  %84 = fadd float %72, %80
  %85 = bitcast %"class.blink::FloatQuad"* %61 to <2 x float>*
  store <2 x float> %82, <2 x float>* %85, align 4
  %86 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 1, i32 0
  store float %83, float* %86, align 4
  %87 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 1, i32 1
  store float %72, float* %87, align 4
  %88 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 2, i32 0
  store float %83, float* %88, align 4
  %89 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 2, i32 1
  store float %84, float* %89, align 4
  %90 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 3, i32 0
  store float %68, float* %90, align 4
  %91 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 3, i32 1
  store float %84, float* %91, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HitTestLocationC2ERKS0_RKNS_14PhysicalOffsetE(%"class.blink::HitTestLocation"* nocapture, %"class.blink::HitTestLocation"* nocapture readonly dereferenceable(72), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::HitTestLocation"* %1 to i64*
  %5 = bitcast %"class.blink::HitTestLocation"* %0 to i64*
  %6 = load i64, i64* %4, align 4
  store i64 %6, i64* %5, align 4
  %7 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %1, i64 0, i32 1
  %9 = bitcast %"struct.blink::PhysicalRect"* %7 to i8*
  %10 = bitcast %"struct.blink::PhysicalRect"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 16, i1 false)
  %11 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %1, i64 0, i32 2
  %13 = bitcast %"class.blink::FloatPoint"* %12 to i64*
  %14 = bitcast %"class.blink::FloatPoint"* %11 to i64*
  %15 = load i64, i64* %13, align 4
  store i64 %15, i64* %14, align 4
  %16 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %1, i64 0, i32 3
  %18 = bitcast %"class.blink::FloatQuad"* %16 to i8*
  %19 = bitcast %"class.blink::FloatQuad"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 32, i1 false)
  %20 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 4
  store i32 -1, i32* %20, align 4
  %21 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 5
  %22 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %1, i64 0, i32 5
  %23 = load i8, i8* %22, align 4, !range !4
  store i8 %23, i8* %21, align 4
  %24 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 6
  %25 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %1, i64 0, i32 6
  %26 = load i8, i8* %25, align 1, !range !4
  store i8 %26, i8* %24, align 1
  tail call void @_ZN5blink15HitTestLocation4MoveERKNS_14PhysicalOffsetE(%"class.blink::HitTestLocation"* %0, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HitTestLocation4MoveERKNS_14PhysicalOffsetE(%"class.blink::HitTestLocation"* nocapture, %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  %8 = select i1 %7, i32 -2147483648, i32 2147483647
  %9 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %4, i32 %6) #6
  %10 = extractvalue { i32, i1 } %9, 1
  %11 = extractvalue { i32, i1 } %9, 0
  %12 = select i1 %10, i32 %8, i32 %11, !prof !2
  %13 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 0
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %16) #6
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !2
  %23 = zext i32 %22 to i64
  %24 = shl nuw i64 %23, 32
  %25 = zext i32 %12 to i64
  %26 = or i64 %24, %25
  %27 = bitcast %"class.blink::HitTestLocation"* %0 to i64*
  store i64 %26, i64* %27, align 4
  %28 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = load i32, i32* %5, align 4
  %32 = icmp slt i32 %31, 0
  %33 = select i1 %32, i32 -2147483648, i32 2147483647
  %34 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %30, i32 %31) #6
  %35 = extractvalue { i32, i1 } %34, 1
  %36 = extractvalue { i32, i1 } %34, 0
  %37 = select i1 %35, i32 %33, i32 %36, !prof !2
  %38 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = load i32, i32* %15, align 4
  %41 = icmp slt i32 %40, 0
  %42 = select i1 %41, i32 -2147483648, i32 2147483647
  %43 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %39, i32 %40) #6
  %44 = extractvalue { i32, i1 } %43, 1
  %45 = extractvalue { i32, i1 } %43, 0
  %46 = select i1 %44, i32 %42, i32 %45, !prof !2
  %47 = zext i32 %46 to i64
  %48 = shl nuw i64 %47, 32
  %49 = zext i32 %37 to i64
  %50 = or i64 %48, %49
  %51 = bitcast %"struct.blink::PhysicalRect"* %28 to i64*
  store i64 %50, i64* %51, align 4
  %52 = load i32, i32* %5, align 4
  %53 = sitofp i32 %52 to float
  %54 = fmul float %53, 1.562500e-02
  %55 = load i32, i32* %15, align 4
  %56 = sitofp i32 %55 to float
  %57 = fmul float %56, 1.562500e-02
  %58 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 2, i32 0
  %59 = load float, float* %58, align 4
  %60 = fadd float %54, %59
  store float %60, float* %58, align 4
  %61 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 2, i32 1
  %62 = load float, float* %61, align 4
  %63 = fadd float %57, %62
  store float %63, float* %61, align 4
  %64 = bitcast %"struct.blink::PhysicalOffset"* %1 to <2 x i32>*
  %65 = load <2 x i32>, <2 x i32>* %64, align 4
  %66 = sitofp <2 x i32> %65 to <2 x float>
  %67 = fmul <2 x float> %66, <float 1.562500e-02, float 1.562500e-02>
  %68 = shufflevector <2 x float> %67, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %69 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 0, i32 0
  %70 = bitcast float* %69 to <4 x float>*
  %71 = load <4 x float>, <4 x float>* %70, align 4
  %72 = fadd <4 x float> %68, %71
  %73 = bitcast float* %69 to <4 x float>*
  store <4 x float> %72, <4 x float>* %73, align 4
  %74 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3, i32 2, i32 0
  %75 = bitcast float* %74 to <4 x float>*
  %76 = load <4 x float>, <4 x float>* %75, align 4
  %77 = shufflevector <2 x float> %67, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %78 = fadd <4 x float> %77, %76
  %79 = bitcast float* %74 to <4 x float>*
  store <4 x float> %78, <4 x float>* %79, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HitTestLocationC2ERKS0_j(%"class.blink::HitTestLocation"* nocapture, %"class.blink::HitTestLocation"* nocapture readonly dereferenceable(72), i32) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::HitTestLocation"* %1 to i64*
  %5 = bitcast %"class.blink::HitTestLocation"* %0 to i64*
  %6 = load i64, i64* %4, align 4
  store i64 %6, i64* %5, align 4
  %7 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %1, i64 0, i32 1
  %9 = bitcast %"struct.blink::PhysicalRect"* %7 to i8*
  %10 = bitcast %"struct.blink::PhysicalRect"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 16, i1 false)
  %11 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %1, i64 0, i32 2
  %13 = bitcast %"class.blink::FloatPoint"* %12 to i64*
  %14 = bitcast %"class.blink::FloatPoint"* %11 to i64*
  %15 = load i64, i64* %13, align 4
  store i64 %15, i64* %14, align 4
  %16 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %1, i64 0, i32 3
  %18 = bitcast %"class.blink::FloatQuad"* %16 to i8*
  %19 = bitcast %"class.blink::FloatQuad"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 4 %19, i64 32, i1 false)
  %20 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 4
  store i32 %2, i32* %20, align 4
  %21 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 5
  %22 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %1, i64 0, i32 5
  %23 = load i8, i8* %22, align 4, !range !4
  store i8 %23, i8* %21, align 4
  %24 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 6
  %25 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %1, i64 0, i32 6
  %26 = load i8, i8* %25, align 1, !range !4
  store i8 %26, i8* %24, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15HitTestLocationC2ERKS0_(%"class.blink::HitTestLocation"* nocapture, %"class.blink::HitTestLocation"* nocapture readonly dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::HitTestLocation"* %0 to i8*
  %4 = bitcast %"class.blink::HitTestLocation"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 70, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(72) %"class.blink::HitTestLocation"* @_ZN5blink15HitTestLocationaSERKS0_(%"class.blink::HitTestLocation"* returned, %"class.blink::HitTestLocation"* nocapture readonly dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::HitTestLocation"* %0 to i8*
  %4 = bitcast %"class.blink::HitTestLocation"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 70, i1 false)
  ret %"class.blink::HitTestLocation"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_12PhysicalRectE(%"class.blink::HitTestLocation"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 1
  %5 = bitcast { <2 x float>, <2 x float> }* %3 to %"class.blink::FloatRect"*
  %6 = tail call zeroext i1 @_ZNK5blink12PhysicalRect10IntersectsERKS0_(%"struct.blink::PhysicalRect"* %1, %"struct.blink::PhysicalRect"* dereferenceable(16) %4) #6
  br i1 %6, label %7, label %39

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 6
  %9 = load i8, i8* %8, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %39

11:                                               ; preds = %7
  %12 = tail call zeroext i1 @_ZNK5blink12PhysicalRect8ContainsERKS0_(%"struct.blink::PhysicalRect"* %1, %"struct.blink::PhysicalRect"* dereferenceable(16) %4) #6
  br i1 %12, label %39, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3
  %15 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #6
  %16 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = sitofp i32 %17 to float
  %19 = fmul float %18, 1.562500e-02
  %20 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 0, i32 1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = sitofp i32 %21 to float
  %23 = fmul float %22, 1.562500e-02
  %24 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = sitofp i32 %25 to float
  %27 = fmul float %26, 1.562500e-02
  %28 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %1, i64 0, i32 1, i32 1, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = sitofp i32 %29 to float
  %31 = fmul float %30, 1.562500e-02
  %32 = insertelement <2 x float> undef, float %19, i32 0
  %33 = insertelement <2 x float> %32, float %23, i32 1
  %34 = insertelement <2 x float> undef, float %27, i32 0
  %35 = insertelement <2 x float> %34, float %31, i32 1
  %36 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  store <2 x float> %33, <2 x float>* %36, align 8
  %37 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  store <2 x float> %35, <2 x float>* %37, align 8
  %38 = call zeroext i1 @_ZNK5blink9FloatQuad14IntersectsRectERKNS_9FloatRectE(%"class.blink::FloatQuad"* %14, %"class.blink::FloatRect"* nonnull dereferenceable(16) %5) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #6
  br label %39

39:                                               ; preds = %2, %7, %11, %13
  %40 = phi i1 [ %38, %13 ], [ false, %2 ], [ true, %7 ], [ true, %11 ]
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_9FloatRectE(%"class.blink::HitTestLocation"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 5
  %4 = load i8, i8* %3, align 4, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3
  %8 = tail call zeroext i1 @_ZNK5blink9FloatQuad14IntersectsRectERKNS_9FloatRectE(%"class.blink::FloatQuad"* %7, %"class.blink::FloatRect"* dereferenceable(16) %1) #6
  br label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 2
  %11 = tail call zeroext i1 @_ZNK5blink9FloatRect8ContainsERKNS_10FloatPointENS0_12ContainsModeE(%"class.blink::FloatRect"* %1, %"class.blink::FloatPoint"* dereferenceable(8) %10, i32 0) #6
  br label %12

12:                                               ; preds = %9, %6
  %13 = phi i1 [ %8, %6 ], [ %11, %9 ]
  ret i1 %13
}

declare zeroext i1 @_ZNK5blink9FloatQuad14IntersectsRectERKNS_9FloatRectE(%"class.blink::FloatQuad"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink9FloatRect8ContainsERKNS_10FloatPointENS0_12ContainsModeE(%"class.blink::FloatRect"*, %"class.blink::FloatPoint"* dereferenceable(8), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_16FloatRoundedRectE(%"class.blink::HitTestLocation"*, %"class.blink::FloatRoundedRect"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3
  %4 = tail call zeroext i1 @_ZNK5blink16FloatRoundedRect14IntersectsQuadERKNS_9FloatQuadE(%"class.blink::FloatRoundedRect"* %1, %"class.blink::FloatQuad"* dereferenceable(32) %3) #6
  ret i1 %4
}

declare zeroext i1 @_ZNK5blink16FloatRoundedRect14IntersectsQuadERKNS_9FloatQuadE(%"class.blink::FloatRoundedRect"*, %"class.blink::FloatQuad"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15HitTestLocation10IntersectsERKNS_9FloatQuadE(%"class.blink::HitTestLocation"*, %"class.blink::FloatQuad"* dereferenceable(32)) local_unnamed_addr #1 align 2 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = alloca <2 x float>, align 8
  %5 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 5
  %6 = load i8, i8* %5, align 4, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %26, label %8

8:                                                ; preds = %2
  %9 = bitcast { <2 x float>, <2 x float> }* %3 to %"class.blink::FloatRect"*
  %10 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #6
  %11 = tail call { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"* %1) #6
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  %13 = extractvalue { <2 x float>, <2 x float> } %11, 0
  store <2 x float> %13, <2 x float>* %12, align 8
  %14 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  %15 = extractvalue { <2 x float>, <2 x float> } %11, 1
  store <2 x float> %15, <2 x float>* %14, align 8
  %16 = load i8, i8* %5, align 4, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3
  %20 = call zeroext i1 @_ZNK5blink9FloatQuad14IntersectsRectERKNS_9FloatRectE(%"class.blink::FloatQuad"* %19, %"class.blink::FloatRect"* nonnull dereferenceable(16) %9) #6
  br label %24

21:                                               ; preds = %8
  %22 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 2
  %23 = call zeroext i1 @_ZNK5blink9FloatRect8ContainsERKNS_10FloatPointENS0_12ContainsModeE(%"class.blink::FloatRect"* nonnull %9, %"class.blink::FloatPoint"* dereferenceable(8) %22, i32 0) #6
  br label %24

24:                                               ; preds = %18, %21
  %25 = phi i1 [ %20, %18 ], [ %23, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #6
  br label %40

26:                                               ; preds = %2
  %27 = bitcast <2 x float>* %4 to %"class.blink::FloatPoint"*
  %28 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  %29 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = sitofp i32 %30 to float
  %32 = fmul float %31, 1.562500e-02
  %33 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 0, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = sitofp i32 %34 to float
  %36 = fmul float %35, 1.562500e-02
  %37 = insertelement <2 x float> undef, float %32, i32 0
  %38 = insertelement <2 x float> %37, float %36, i32 1
  store <2 x float> %38, <2 x float>* %4, align 8
  %39 = call zeroext i1 @_ZNK5blink9FloatQuad13ContainsPointERKNS_10FloatPointE(%"class.blink::FloatQuad"* %1, %"class.blink::FloatPoint"* nonnull dereferenceable(8) %27) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  br label %40

40:                                               ; preds = %26, %24
  %41 = phi i1 [ %25, %24 ], [ %39, %26 ]
  ret i1 %41
}

declare zeroext i1 @_ZNK5blink9FloatQuad13ContainsPointERKNS_10FloatPointE(%"class.blink::FloatQuad"*, %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15HitTestLocation13ContainsPointERKNS_10FloatPointE(%"class.blink::HitTestLocation"*, %"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %0, i64 0, i32 3
  %4 = tail call zeroext i1 @_ZNK5blink9FloatQuad13ContainsPointERKNS_10FloatPointE(%"class.blink::FloatQuad"* %3, %"class.blink::FloatPoint"* dereferenceable(8) %1) #6
  ret i1 %4
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #4

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #4

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #4

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #5

declare zeroext i1 @_ZNK5blink12PhysicalRect10IntersectsERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink12PhysicalRect8ContainsERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind readnone }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
