; ModuleID = 'gen/third_party/blink/public/mojom/notifications/notification_service.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/notifications/notification_service.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::NonPersistentNotificationListenerAsyncWaiter" = type { %"class.blink::mojom::blink::NonPersistentNotificationListener"* }
%"class.blink::mojom::blink::NonPersistentNotificationListener" = type { i32 (...)** }
%"class.blink::mojom::blink::NotificationServiceAsyncWaiter" = type { %"class.blink::mojom::blink::NotificationService"* }
%"class.blink::mojom::blink::NotificationService" = type { i32 (...)** }
%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting" = type { %"class.blink::mojom::blink::NonPersistentNotificationListener" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.9, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.2", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.4" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.9 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.10" }>
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.12", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.13" }
%"struct.std::__1::atomic.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl.16" }
%"struct.std::__1::__cxx_atomic_impl.16" = type { %"struct.std::__1::__cxx_atomic_base_impl.17" }
%"struct.std::__1::__cxx_atomic_base_impl.17" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting" = type { %"class.blink::mojom::blink::NotificationService" }
%"class.base::OnceCallback.20" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::String" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.22" }
%"struct.std::__1::atomic.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl.25" }
%"struct.std::__1::__cxx_atomic_impl.25" = type { %"struct.std::__1::__cxx_atomic_base_impl.26" }
%"struct.std::__1::__cxx_atomic_base_impl.26" = type { i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::mojom::blink::NotificationData"* }
%"class.blink::mojom::blink::NotificationData" = type { %"class.WTF::String", i32, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.absl::optional", double, i8, i8, i8, %"class.absl::optional.33", %"class.absl::optional.43", %"class.absl::optional.60" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.29" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::KURL"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i32*, i32, i32 }
%"class.absl::optional.33" = type { %"class.absl::optional_internal::optional_data.34" }
%"class.absl::optional_internal::optional_data.34" = type { %"class.absl::optional_internal::optional_data_base.35" }
%"class.absl::optional_internal::optional_data_base.35" = type { %"class.absl::optional_internal::optional_data_dtor_base.36" }
%"class.absl::optional_internal::optional_data_dtor_base.36" = type { i8, %union.anon.37 }
%union.anon.37 = type { %"class.WTF::Vector.38" }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { i8*, i32, i32 }
%"class.absl::optional.43" = type { %"class.absl::optional_internal::optional_data.44" }
%"class.absl::optional_internal::optional_data.44" = type { %"class.absl::optional_internal::optional_data_base.45" }
%"class.absl::optional_internal::optional_data_base.45" = type { %"class.absl::optional_internal::optional_data_dtor_base.46" }
%"class.absl::optional_internal::optional_data_dtor_base.46" = type { i8, %union.anon.47 }
%union.anon.47 = type { %"class.WTF::Vector.48" }
%"class.WTF::Vector.48" = type { %"class.WTF::VectorBuffer.49" }
%"class.WTF::VectorBuffer.49" = type { %"class.WTF::VectorBufferBase.50" }
%"class.WTF::VectorBufferBase.50" = type { %"class.mojo::StructPtr.51"*, i32, i32 }
%"class.mojo::StructPtr.51" = type { %"class.std::__1::unique_ptr.52" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::mojom::blink::NotificationAction"* }
%"class.blink::mojom::blink::NotificationAction" = type { i32, %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.WTF::String" }
%"class.absl::optional.60" = type { %"class.absl::optional_internal::optional_data.61" }
%"class.absl::optional_internal::optional_data.61" = type { %"class.absl::optional_internal::optional_data_base.62" }
%"class.absl::optional_internal::optional_data_base.62" = type { %"class.absl::optional_internal::optional_data_dtor_base.63" }
%"class.absl::optional_internal::optional_data_dtor_base.63" = type { i8, %union.anon.64 }
%union.anon.64 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.mojo::StructPtr.68" = type { %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.blink::mojom::blink::NotificationResources"* }
%"class.blink::mojom::blink::NotificationResources" = type { %class.SkBitmap, %class.SkBitmap, %class.SkBitmap, %"class.absl::optional.74" }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.73 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.72, i32, i32 }
%class.sk_sp.72 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.13" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.73 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.absl::optional.74" = type { %"class.absl::optional_internal::optional_data.75" }
%"class.absl::optional_internal::optional_data.75" = type { %"class.absl::optional_internal::optional_data_base.76" }
%"class.absl::optional_internal::optional_data_base.76" = type { %"class.absl::optional_internal::optional_data_dtor_base.77" }
%"class.absl::optional_internal::optional_data_dtor_base.77" = type { i8, %union.anon.78 }
%union.anon.78 = type { %"class.WTF::Vector.79" }
%"class.WTF::Vector.79" = type { %"class.WTF::VectorBuffer.80" }
%"class.WTF::VectorBuffer.80" = type { %"class.WTF::VectorBufferBase.81" }
%"class.WTF::VectorBufferBase.81" = type { %class.SkBitmap*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.base::OnceCallback.87" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.88" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::Vector.93" = type { %"class.WTF::VectorBuffer.94" }
%"class.WTF::VectorBuffer.94" = type { %"class.WTF::VectorBufferBase.95" }
%"class.WTF::VectorBufferBase.95" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.98" = type { %"class.WTF::VectorBuffer.99" }
%"class.WTF::VectorBuffer.99" = type { %"class.WTF::VectorBufferBase.100" }
%"class.WTF::VectorBufferBase.100" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.129 }
%union.anon.129 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink5mojom5blink33NonPersistentNotificationListenerD2Ev = comdat any

$_ZN5blink5mojom5blink54NonPersistentNotificationListenerInterceptorForTestingD0Ev = comdat any

$_ZN5blink5mojom5blink19NotificationServiceD2Ev = comdat any

$_ZN5blink5mojom5blink40NotificationServiceInterceptorForTestingD0Ev = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

@.str = private unnamed_addr constant [8 x i8] c"OnClick\00", align 1
@.str.1 = private unnamed_addr constant [96 x i8] c"gen/third_party/blink/public/mojom/notifications/notification_service.mojom-blink-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"OnClose\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"GetPermissionStatus\00", align 1
@.str.4 = private unnamed_addr constant [30 x i8] c"DisplayPersistentNotification\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"GetNotifications\00", align 1
@_ZTVN5blink5mojom5blink54NonPersistentNotificationListenerInterceptorForTestingE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*)* @_ZN5blink5mojom5blink33NonPersistentNotificationListenerD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)* @_ZN5blink5mojom5blink54NonPersistentNotificationListenerInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)* @_ZN5blink5mojom5blink54NonPersistentNotificationListenerInterceptorForTesting6OnShowEv to i8*), i8* bitcast (void (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink54NonPersistentNotificationListenerInterceptorForTesting7OnClickEN4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink54NonPersistentNotificationListenerInterceptorForTesting7OnCloseEN4base12OnceCallbackIFvvEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink5mojom5blink40NotificationServiceInterceptorForTestingE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::NotificationService"*)* @_ZN5blink5mojom5blink19NotificationServiceD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)* @_ZN5blink5mojom5blink40NotificationServiceInterceptorForTestingD0Ev to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::NotificationService"*, i32*)* @_ZN5blink5mojom5blink19NotificationService19GetPermissionStatusEPNS0_16PermissionStatusE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*, %"class.base::OnceCallback.20"*)* @_ZN5blink5mojom5blink40NotificationServiceInterceptorForTesting19GetPermissionStatusEN4base12OnceCallbackIFvNS0_16PermissionStatusEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.mojo::PendingRemote"*)* @_ZN5blink5mojom5blink40NotificationServiceInterceptorForTesting32DisplayNonPersistentNotificationERKN3WTF6StringEN4mojo9StructPtrINS1_16NotificationDataEEENS8_INS1_21NotificationResourcesEEENS7_13PendingRemoteINS1_33NonPersistentNotificationListenerEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*, %"class.WTF::String"*)* @_ZN5blink5mojom5blink40NotificationServiceInterceptorForTesting30CloseNonPersistentNotificationERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*, i64, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.base::OnceCallback.87"*)* @_ZN5blink5mojom5blink40NotificationServiceInterceptorForTesting29DisplayPersistentNotificationElN4mojo9StructPtrINS1_16NotificationDataEEENS4_INS1_21NotificationResourcesEEEN4base12OnceCallbackIFvNS0_27PersistentNotificationErrorEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*, %"class.WTF::String"*)* @_ZN5blink5mojom5blink40NotificationServiceInterceptorForTesting27ClosePersistentNotificationERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*, i64, %"class.WTF::String"*, i1, %"class.base::OnceCallback.88"*)* @_ZN5blink5mojom5blink40NotificationServiceInterceptorForTesting16GetNotificationsElRKN3WTF6StringEbN4base12OnceCallbackIFvRKNS3_6VectorIS4_Lj0ENS3_18PartitionAllocatorEEENS9_IN4mojo9StructPtrINS1_16NotificationDataEEELj0ESA_EEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1

@_ZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiterC1EPNS1_33NonPersistentNotificationListenerE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::NonPersistentNotificationListenerAsyncWaiter"*, %"class.blink::mojom::blink::NonPersistentNotificationListener"*), void (%"class.blink::mojom::blink::NonPersistentNotificationListenerAsyncWaiter"*, %"class.blink::mojom::blink::NonPersistentNotificationListener"*)* @_ZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiterC2EPNS1_33NonPersistentNotificationListenerE
@_ZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::NonPersistentNotificationListenerAsyncWaiter"*), void (%"class.blink::mojom::blink::NonPersistentNotificationListenerAsyncWaiter"*)* @_ZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiterD2Ev
@_ZN5blink5mojom5blink30NotificationServiceAsyncWaiterC1EPNS1_19NotificationServiceE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::NotificationServiceAsyncWaiter"*, %"class.blink::mojom::blink::NotificationService"*), void (%"class.blink::mojom::blink::NotificationServiceAsyncWaiter"*, %"class.blink::mojom::blink::NotificationService"*)* @_ZN5blink5mojom5blink30NotificationServiceAsyncWaiterC2EPNS1_19NotificationServiceE
@_ZN5blink5mojom5blink30NotificationServiceAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::NotificationServiceAsyncWaiter"*), void (%"class.blink::mojom::blink::NotificationServiceAsyncWaiter"*)* @_ZN5blink5mojom5blink30NotificationServiceAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink54NonPersistentNotificationListenerInterceptorForTesting6OnShowEv(%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"* %0 to %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)***
  %3 = load %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)**, %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)*, %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)** %3, i64 5
  %5 = load %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)*, %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)** %4, align 8
  %6 = tail call %"class.blink::mojom::blink::NonPersistentNotificationListener"* %5(%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"* %0) #11
  %7 = bitcast %"class.blink::mojom::blink::NonPersistentNotificationListener"* %6 to void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*)***
  %8 = load void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*)**, void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*)*, void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*)** %8, i64 2
  %10 = load void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*)*, void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*)** %9, align 8
  tail call void %10(%"class.blink::mojom::blink::NonPersistentNotificationListener"* %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink54NonPersistentNotificationListenerInterceptorForTesting7OnClickEN4base12OnceCallbackIFvvEEE(%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = bitcast %"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"* %0 to %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)**, %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)*, %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)*, %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::NonPersistentNotificationListener"* %7(%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.blink::mojom::blink::NonPersistentNotificationListener"* %8 to void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)***
  %14 = load void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)** %14, i64 3
  %16 = load void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)** %15, align 8
  call void %16(%"class.blink::mojom::blink::NonPersistentNotificationListener"* %8, %"class.base::OnceCallback"* nonnull %3) #11
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink54NonPersistentNotificationListenerInterceptorForTesting7OnCloseEN4base12OnceCallbackIFvvEEE(%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = bitcast %"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"* %0 to %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)**, %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)*, %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)** %5, i64 5
  %7 = load %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)*, %"class.blink::mojom::blink::NonPersistentNotificationListener"* (%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::NonPersistentNotificationListener"* %7(%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.blink::mojom::blink::NonPersistentNotificationListener"* %8 to void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)***
  %14 = load void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)** %14, i64 4
  %16 = load void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)** %15, align 8
  call void %16(%"class.blink::mojom::blink::NonPersistentNotificationListener"* %8, %"class.base::OnceCallback"* nonnull %3) #11
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiterC2EPNS1_33NonPersistentNotificationListenerE(%"class.blink::mojom::blink::NonPersistentNotificationListenerAsyncWaiter"* nocapture, %"class.blink::mojom::blink::NonPersistentNotificationListener"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::NonPersistentNotificationListenerAsyncWaiter", %"class.blink::mojom::blink::NonPersistentNotificationListenerAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::NonPersistentNotificationListener"* %1, %"class.blink::mojom::blink::NonPersistentNotificationListener"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiterD2Ev(%"class.blink::mojom::blink::NonPersistentNotificationListenerAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiter7OnClickEv(%"class.blink::mojom::blink::NonPersistentNotificationListenerAsyncWaiter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::RunLoop", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = bitcast %"class.base::RunLoop"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %2, i32 0) #11
  %6 = getelementptr inbounds %"class.blink::mojom::blink::NonPersistentNotificationListenerAsyncWaiter", %"class.blink::mojom::blink::NonPersistentNotificationListenerAsyncWaiter"* %0, i64 0, i32 0
  %7 = load %"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.blink::mojom::blink::NonPersistentNotificationListener"** %6, align 8
  %8 = ptrtoint %"class.base::RunLoop"* %2 to i64
  %9 = call i8* @_Znwm(i64 48) #12, !noalias !2
  %10 = bitcast i8* %9 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %10, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiter7OnClickEvE3$_0JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiter7OnClickEvE3$_0JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !2
  %11 = getelementptr inbounds i8, i8* %9, i64 40
  %12 = bitcast i8* %11 to i64*
  store i64 %8, i64* %12, align 8, !noalias !2
  %13 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %9, i8** %13, align 8, !alias.scope !2
  %14 = bitcast %"class.blink::mojom::blink::NonPersistentNotificationListener"* %7 to void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)** %15, i64 3
  %17 = load void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::NonPersistentNotificationListener"* %7, %"class.base::OnceCallback"* nonnull %3) #11
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #11
  %19 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.1, i64 0, i64 0), i32 57) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %2, %"class.base::Location"* nonnull dereferenceable(32) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #4

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiter7OnCloseEv(%"class.blink::mojom::blink::NonPersistentNotificationListenerAsyncWaiter"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::RunLoop", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = bitcast %"class.base::RunLoop"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %2, i32 0) #11
  %6 = getelementptr inbounds %"class.blink::mojom::blink::NonPersistentNotificationListenerAsyncWaiter", %"class.blink::mojom::blink::NonPersistentNotificationListenerAsyncWaiter"* %0, i64 0, i32 0
  %7 = load %"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.blink::mojom::blink::NonPersistentNotificationListener"** %6, align 8
  %8 = ptrtoint %"class.base::RunLoop"* %2 to i64
  %9 = call i8* @_Znwm(i64 48) #12, !noalias !7
  %10 = bitcast i8* %9 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %10, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiter7OnCloseEvE3$_1JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiter7OnCloseEvE3$_1JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !7
  %11 = getelementptr inbounds i8, i8* %9, i64 40
  %12 = bitcast i8* %11 to i64*
  store i64 %8, i64* %12, align 8, !noalias !7
  %13 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %9, i8** %13, align 8, !alias.scope !7
  %14 = bitcast %"class.blink::mojom::blink::NonPersistentNotificationListener"* %7 to void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)** %15, i64 4
  %17 = load void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::NonPersistentNotificationListener"*, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::NonPersistentNotificationListener"* %7, %"class.base::OnceCallback"* nonnull %3) #11
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #11
  %19 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.1, i64 0, i64 0), i32 68) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %2, %"class.base::Location"* nonnull dereferenceable(32) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink40NotificationServiceInterceptorForTesting19GetPermissionStatusEN4base12OnceCallbackIFvNS0_16PermissionStatusEEEE(%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*, %"class.base::OnceCallback.20"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.20", align 8
  %4 = bitcast %"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)** %5, i64 9
  %7 = load %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::NotificationService"* %7(%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"* %0) #11
  %9 = getelementptr inbounds %"class.base::OnceCallback.20", %"class.base::OnceCallback.20"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback.20"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.20"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.blink::mojom::blink::NotificationService"* %8 to void (%"class.blink::mojom::blink::NotificationService"*, %"class.base::OnceCallback.20"*)***
  %14 = load void (%"class.blink::mojom::blink::NotificationService"*, %"class.base::OnceCallback.20"*)**, void (%"class.blink::mojom::blink::NotificationService"*, %"class.base::OnceCallback.20"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::NotificationService"*, %"class.base::OnceCallback.20"*)*, void (%"class.blink::mojom::blink::NotificationService"*, %"class.base::OnceCallback.20"*)** %14, i64 3
  %16 = load void (%"class.blink::mojom::blink::NotificationService"*, %"class.base::OnceCallback.20"*)*, void (%"class.blink::mojom::blink::NotificationService"*, %"class.base::OnceCallback.20"*)** %15, align 8
  call void %16(%"class.blink::mojom::blink::NotificationService"* %8, %"class.base::OnceCallback.20"* nonnull %3) #11
  %17 = getelementptr inbounds %"class.base::OnceCallback.20", %"class.base::OnceCallback.20"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink40NotificationServiceInterceptorForTesting32DisplayNonPersistentNotificationERKN3WTF6StringEN4mojo9StructPtrINS1_16NotificationDataEEENS8_INS1_21NotificationResourcesEEENS7_13PendingRemoteINS1_33NonPersistentNotificationListenerEEE(%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8), %"class.mojo::StructPtr"* nocapture, %"class.mojo::StructPtr.68"* nocapture, %"class.mojo::PendingRemote"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.mojo::StructPtr", align 8
  %7 = alloca %"class.mojo::StructPtr.68", align 8
  %8 = alloca %"class.mojo::PendingRemote", align 4
  %9 = bitcast %"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)***
  %10 = load %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)** %10, i64 9
  %12 = load %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)** %11, align 8
  %13 = tail call %"class.blink::mojom::blink::NotificationService"* %12(%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"* %0) #11
  %14 = bitcast %"class.mojo::StructPtr"* %6 to i64*
  %15 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %14, align 8
  store i64 0, i64* %16, align 8
  %18 = bitcast %"class.mojo::StructPtr.68"* %7 to i64*
  %19 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.mojo::StructPtr.68"* %3 to i64*
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %18, align 8
  store i64 0, i64* %20, align 8
  %22 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %8, i64 0, i32 0
  %23 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %4, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %22, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %23) #11
  %24 = bitcast %"class.blink::mojom::blink::NotificationService"* %13 to void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.mojo::PendingRemote"*)***
  %25 = load void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.mojo::PendingRemote"*)**, void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.mojo::PendingRemote"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.mojo::PendingRemote"*)*, void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.mojo::PendingRemote"*)** %25, i64 4
  %27 = load void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.mojo::PendingRemote"*)*, void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.mojo::PendingRemote"*)** %26, align 8
  call void %27(%"class.blink::mojom::blink::NotificationService"* %13, %"class.WTF::String"* dereferenceable(8) %1, %"class.mojo::StructPtr"* nonnull %6, %"class.mojo::StructPtr.68"* nonnull %7, %"class.mojo::PendingRemote"* nonnull %8) #11
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %22) #11
  %28 = load %"class.blink::mojom::blink::NotificationResources"*, %"class.blink::mojom::blink::NotificationResources"** %19, align 8
  store %"class.blink::mojom::blink::NotificationResources"* null, %"class.blink::mojom::blink::NotificationResources"** %19, align 8
  %29 = icmp eq %"class.blink::mojom::blink::NotificationResources"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %5
  call void @_ZN5blink5mojom5blink21NotificationResourcesD1Ev(%"class.blink::mojom::blink::NotificationResources"* nonnull %28) #11
  %31 = bitcast %"class.blink::mojom::blink::NotificationResources"* %28 to i8*
  call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %5, %30
  %33 = load %"class.blink::mojom::blink::NotificationData"*, %"class.blink::mojom::blink::NotificationData"** %15, align 8
  store %"class.blink::mojom::blink::NotificationData"* null, %"class.blink::mojom::blink::NotificationData"** %15, align 8
  %34 = icmp eq %"class.blink::mojom::blink::NotificationData"* %33, null
  br i1 %34, label %37, label %35

35:                                               ; preds = %32
  call void @_ZN5blink5mojom5blink16NotificationDataD1Ev(%"class.blink::mojom::blink::NotificationData"* nonnull %33) #11
  %36 = bitcast %"class.blink::mojom::blink::NotificationData"* %33 to i8*
  call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink40NotificationServiceInterceptorForTesting30CloseNonPersistentNotificationERKN3WTF6StringE(%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)** %4, i64 9
  %6 = load %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::NotificationService"* %6(%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"* %0) #11
  %8 = bitcast %"class.blink::mojom::blink::NotificationService"* %7 to void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*)***
  %9 = load void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*)**, void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*)** %9, i64 5
  %11 = load void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::NotificationService"* %7, %"class.WTF::String"* dereferenceable(8) %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink40NotificationServiceInterceptorForTesting29DisplayPersistentNotificationElN4mojo9StructPtrINS1_16NotificationDataEEENS4_INS1_21NotificationResourcesEEEN4base12OnceCallbackIFvNS0_27PersistentNotificationErrorEEEE(%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*, i64, %"class.mojo::StructPtr"* nocapture, %"class.mojo::StructPtr.68"* nocapture, %"class.base::OnceCallback.87"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.mojo::StructPtr", align 8
  %7 = alloca %"class.mojo::StructPtr.68", align 8
  %8 = alloca %"class.base::OnceCallback.87", align 8
  %9 = bitcast %"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)***
  %10 = load %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)** %10, i64 9
  %12 = load %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)** %11, align 8
  %13 = tail call %"class.blink::mojom::blink::NotificationService"* %12(%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"* %0) #11
  %14 = bitcast %"class.mojo::StructPtr"* %6 to i64*
  %15 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %14, align 8
  store i64 0, i64* %16, align 8
  %18 = bitcast %"class.mojo::StructPtr.68"* %7 to i64*
  %19 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.mojo::StructPtr.68"* %3 to i64*
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %18, align 8
  store i64 0, i64* %20, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback.87", %"class.base::OnceCallback.87"* %4, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.base::OnceCallback.87"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.base::OnceCallback.87"* %8 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %22, align 8
  %26 = bitcast %"class.blink::mojom::blink::NotificationService"* %13 to void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.base::OnceCallback.87"*)***
  %27 = load void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.base::OnceCallback.87"*)**, void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.base::OnceCallback.87"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.base::OnceCallback.87"*)*, void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.base::OnceCallback.87"*)** %27, i64 6
  %29 = load void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.base::OnceCallback.87"*)*, void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.base::OnceCallback.87"*)** %28, align 8
  call void %29(%"class.blink::mojom::blink::NotificationService"* %13, i64 %1, %"class.mojo::StructPtr"* nonnull %6, %"class.mojo::StructPtr.68"* nonnull %7, %"class.base::OnceCallback.87"* nonnull %8) #11
  %30 = getelementptr inbounds %"class.base::OnceCallback.87", %"class.base::OnceCallback.87"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #11
  %31 = load %"class.blink::mojom::blink::NotificationResources"*, %"class.blink::mojom::blink::NotificationResources"** %19, align 8
  store %"class.blink::mojom::blink::NotificationResources"* null, %"class.blink::mojom::blink::NotificationResources"** %19, align 8
  %32 = icmp eq %"class.blink::mojom::blink::NotificationResources"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %5
  call void @_ZN5blink5mojom5blink21NotificationResourcesD1Ev(%"class.blink::mojom::blink::NotificationResources"* nonnull %31) #11
  %34 = bitcast %"class.blink::mojom::blink::NotificationResources"* %31 to i8*
  call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %5, %33
  %36 = load %"class.blink::mojom::blink::NotificationData"*, %"class.blink::mojom::blink::NotificationData"** %15, align 8
  store %"class.blink::mojom::blink::NotificationData"* null, %"class.blink::mojom::blink::NotificationData"** %15, align 8
  %37 = icmp eq %"class.blink::mojom::blink::NotificationData"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  call void @_ZN5blink5mojom5blink16NotificationDataD1Ev(%"class.blink::mojom::blink::NotificationData"* nonnull %36) #11
  %39 = bitcast %"class.blink::mojom::blink::NotificationData"* %36 to i8*
  call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %35, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink40NotificationServiceInterceptorForTesting27ClosePersistentNotificationERKN3WTF6StringE(%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)***
  %4 = load %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)** %4, i64 9
  %6 = load %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)** %5, align 8
  %7 = tail call %"class.blink::mojom::blink::NotificationService"* %6(%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"* %0) #11
  %8 = bitcast %"class.blink::mojom::blink::NotificationService"* %7 to void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*)***
  %9 = load void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*)**, void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*)** %9, i64 7
  %11 = load void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::NotificationService"*, %"class.WTF::String"*)** %10, align 8
  tail call void %11(%"class.blink::mojom::blink::NotificationService"* %7, %"class.WTF::String"* dereferenceable(8) %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink40NotificationServiceInterceptorForTesting16GetNotificationsElRKN3WTF6StringEbN4base12OnceCallbackIFvRKNS3_6VectorIS4_Lj0ENS3_18PartitionAllocatorEEENS9_IN4mojo9StructPtrINS1_16NotificationDataEEELj0ESA_EEEEE(%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*, i64, %"class.WTF::String"* dereferenceable(8), i1 zeroext, %"class.base::OnceCallback.88"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback.88", align 8
  %7 = bitcast %"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)***
  %8 = load %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)** %8, i64 9
  %10 = load %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::NotificationService"* (%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.blink::mojom::blink::NotificationService"* %10(%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"* %0) #11
  %12 = getelementptr inbounds %"class.base::OnceCallback.88", %"class.base::OnceCallback.88"* %4, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.base::OnceCallback.88"* %4 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.base::OnceCallback.88"* %6 to i64*
  store i64 %14, i64* %15, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %16 = bitcast %"class.blink::mojom::blink::NotificationService"* %11 to void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.WTF::String"*, i1, %"class.base::OnceCallback.88"*)***
  %17 = load void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.WTF::String"*, i1, %"class.base::OnceCallback.88"*)**, void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.WTF::String"*, i1, %"class.base::OnceCallback.88"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.WTF::String"*, i1, %"class.base::OnceCallback.88"*)*, void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.WTF::String"*, i1, %"class.base::OnceCallback.88"*)** %17, i64 8
  %19 = load void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.WTF::String"*, i1, %"class.base::OnceCallback.88"*)*, void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.WTF::String"*, i1, %"class.base::OnceCallback.88"*)** %18, align 8
  call void %19(%"class.blink::mojom::blink::NotificationService"* %11, i64 %1, %"class.WTF::String"* dereferenceable(8) %2, i1 zeroext %3, %"class.base::OnceCallback.88"* nonnull %6) #11
  %20 = getelementptr inbounds %"class.base::OnceCallback.88", %"class.base::OnceCallback.88"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #11
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink30NotificationServiceAsyncWaiterC2EPNS1_19NotificationServiceE(%"class.blink::mojom::blink::NotificationServiceAsyncWaiter"* nocapture, %"class.blink::mojom::blink::NotificationService"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::NotificationServiceAsyncWaiter", %"class.blink::mojom::blink::NotificationServiceAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::NotificationService"* %1, %"class.blink::mojom::blink::NotificationService"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink30NotificationServiceAsyncWaiterD2Ev(%"class.blink::mojom::blink::NotificationServiceAsyncWaiter"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink30NotificationServiceAsyncWaiter19GetPermissionStatusEPNS0_16PermissionStatusE(%"class.blink::mojom::blink::NotificationServiceAsyncWaiter"* nocapture readonly, i32*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::RunLoop", align 8
  %4 = alloca %"class.base::OnceCallback.20", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = ptrtoint i32* %1 to i64
  %7 = bitcast %"class.base::RunLoop"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %3, i32 0) #11
  %8 = getelementptr inbounds %"class.blink::mojom::blink::NotificationServiceAsyncWaiter", %"class.blink::mojom::blink::NotificationServiceAsyncWaiter"* %0, i64 0, i32 0
  %9 = load %"class.blink::mojom::blink::NotificationService"*, %"class.blink::mojom::blink::NotificationService"** %8, align 8
  %10 = ptrtoint %"class.base::RunLoop"* %3 to i64
  %11 = call i8* @_Znwm(i64 56) #12, !noalias !12
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink30NotificationServiceAsyncWaiter19GetPermissionStatusEPNS4_16PermissionStatusEE3$_2JPNS_7RunLoopES8_EEEFvS7_EE7RunOnceEPNS0_13BindStateBaseES7_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink30NotificationServiceAsyncWaiter19GetPermissionStatusEPNS3_16PermissionStatusEE3$_2JPNS_7RunLoopES7_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !12
  %13 = getelementptr inbounds i8, i8* %11, i64 40
  %14 = bitcast i8* %13 to i64*
  store i64 %10, i64* %14, align 8, !noalias !12
  %15 = getelementptr inbounds i8, i8* %11, i64 48
  %16 = bitcast i8* %15 to i64*
  store i64 %6, i64* %16, align 8, !noalias !12
  %17 = bitcast %"class.base::OnceCallback.20"* %4 to i8**
  store i8* %11, i8** %17, align 8, !alias.scope !12
  %18 = bitcast %"class.blink::mojom::blink::NotificationService"* %9 to void (%"class.blink::mojom::blink::NotificationService"*, %"class.base::OnceCallback.20"*)***
  %19 = load void (%"class.blink::mojom::blink::NotificationService"*, %"class.base::OnceCallback.20"*)**, void (%"class.blink::mojom::blink::NotificationService"*, %"class.base::OnceCallback.20"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::mojom::blink::NotificationService"*, %"class.base::OnceCallback.20"*)*, void (%"class.blink::mojom::blink::NotificationService"*, %"class.base::OnceCallback.20"*)** %19, i64 3
  %21 = load void (%"class.blink::mojom::blink::NotificationService"*, %"class.base::OnceCallback.20"*)*, void (%"class.blink::mojom::blink::NotificationService"*, %"class.base::OnceCallback.20"*)** %20, align 8
  call void %21(%"class.blink::mojom::blink::NotificationService"* %9, %"class.base::OnceCallback.20"* nonnull %4) #11
  %22 = getelementptr inbounds %"class.base::OnceCallback.20", %"class.base::OnceCallback.20"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #11
  %23 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.1, i64 0, i64 0), i32 109) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink30NotificationServiceAsyncWaiter29DisplayPersistentNotificationElN4mojo9StructPtrINS1_16NotificationDataEEENS4_INS1_21NotificationResourcesEEEPNS0_27PersistentNotificationErrorE(%"class.blink::mojom::blink::NotificationServiceAsyncWaiter"* nocapture readonly, i64, %"class.mojo::StructPtr"* nocapture, %"class.mojo::StructPtr.68"* nocapture, i32*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::RunLoop", align 8
  %7 = alloca %"class.mojo::StructPtr", align 8
  %8 = alloca %"class.mojo::StructPtr.68", align 8
  %9 = alloca %"class.base::OnceCallback.87", align 8
  %10 = alloca %"class.base::Location", align 8
  %11 = ptrtoint i32* %4 to i64
  %12 = bitcast %"class.base::RunLoop"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %6, i32 0) #11
  %13 = getelementptr inbounds %"class.blink::mojom::blink::NotificationServiceAsyncWaiter", %"class.blink::mojom::blink::NotificationServiceAsyncWaiter"* %0, i64 0, i32 0
  %14 = load %"class.blink::mojom::blink::NotificationService"*, %"class.blink::mojom::blink::NotificationService"** %13, align 8
  %15 = bitcast %"class.mojo::StructPtr"* %7 to i64*
  %16 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 0, i64* %17, align 8
  %19 = bitcast %"class.mojo::StructPtr.68"* %8 to i64*
  %20 = getelementptr inbounds %"class.mojo::StructPtr.68", %"class.mojo::StructPtr.68"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.mojo::StructPtr.68"* %3 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %19, align 8
  store i64 0, i64* %21, align 8
  %23 = ptrtoint %"class.base::RunLoop"* %6 to i64
  %24 = call i8* @_Znwm(i64 56) #12, !noalias !17
  %25 = bitcast i8* %24 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %25, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink30NotificationServiceAsyncWaiter29DisplayPersistentNotificationElN4mojo9StructPtrINS5_16NotificationDataEEENS8_INS5_21NotificationResourcesEEEPNS4_27PersistentNotificationErrorEE3$_3JPNS_7RunLoopESE_EEEFvSD_EE7RunOnceEPNS0_13BindStateBaseESD_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink30NotificationServiceAsyncWaiter29DisplayPersistentNotificationElN4mojo9StructPtrINS4_16NotificationDataEEENS7_INS4_21NotificationResourcesEEEPNS3_27PersistentNotificationErrorEE3$_3JPNS_7RunLoopESD_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !17
  %26 = getelementptr inbounds i8, i8* %24, i64 40
  %27 = bitcast i8* %26 to i64*
  store i64 %23, i64* %27, align 8, !noalias !17
  %28 = getelementptr inbounds i8, i8* %24, i64 48
  %29 = bitcast i8* %28 to i64*
  store i64 %11, i64* %29, align 8, !noalias !17
  %30 = bitcast %"class.base::OnceCallback.87"* %9 to i8**
  store i8* %24, i8** %30, align 8, !alias.scope !17
  %31 = bitcast %"class.blink::mojom::blink::NotificationService"* %14 to void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.base::OnceCallback.87"*)***
  %32 = load void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.base::OnceCallback.87"*)**, void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.base::OnceCallback.87"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.base::OnceCallback.87"*)*, void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.base::OnceCallback.87"*)** %32, i64 6
  %34 = load void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.base::OnceCallback.87"*)*, void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.mojo::StructPtr"*, %"class.mojo::StructPtr.68"*, %"class.base::OnceCallback.87"*)** %33, align 8
  call void %34(%"class.blink::mojom::blink::NotificationService"* %14, i64 %1, %"class.mojo::StructPtr"* nonnull %7, %"class.mojo::StructPtr.68"* nonnull %8, %"class.base::OnceCallback.87"* nonnull %9) #11
  %35 = getelementptr inbounds %"class.base::OnceCallback.87", %"class.base::OnceCallback.87"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %35) #11
  %36 = load %"class.blink::mojom::blink::NotificationResources"*, %"class.blink::mojom::blink::NotificationResources"** %20, align 8
  store %"class.blink::mojom::blink::NotificationResources"* null, %"class.blink::mojom::blink::NotificationResources"** %20, align 8
  %37 = icmp eq %"class.blink::mojom::blink::NotificationResources"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %5
  call void @_ZN5blink5mojom5blink21NotificationResourcesD1Ev(%"class.blink::mojom::blink::NotificationResources"* nonnull %36) #11
  %39 = bitcast %"class.blink::mojom::blink::NotificationResources"* %36 to i8*
  call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %5, %38
  %41 = load %"class.blink::mojom::blink::NotificationData"*, %"class.blink::mojom::blink::NotificationData"** %16, align 8
  store %"class.blink::mojom::blink::NotificationData"* null, %"class.blink::mojom::blink::NotificationData"** %16, align 8
  %42 = icmp eq %"class.blink::mojom::blink::NotificationData"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %40
  call void @_ZN5blink5mojom5blink16NotificationDataD1Ev(%"class.blink::mojom::blink::NotificationData"* nonnull %41) #11
  %44 = bitcast %"class.blink::mojom::blink::NotificationData"* %41 to i8*
  call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %40, %43
  %46 = bitcast %"class.base::Location"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.1, i64 0, i64 0), i32 124) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %6, %"class.base::Location"* nonnull dereferenceable(32) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink30NotificationServiceAsyncWaiter16GetNotificationsElRKN3WTF6StringEbPNS3_6VectorIS4_Lj0ENS3_18PartitionAllocatorEEEPNS7_IN4mojo9StructPtrINS1_16NotificationDataEEELj0ES8_EE(%"class.blink::mojom::blink::NotificationServiceAsyncWaiter"* nocapture readonly, i64, %"class.WTF::String"* dereferenceable(8), i1 zeroext, %"class.WTF::Vector.93"*, %"class.WTF::Vector.98"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::RunLoop", align 8
  %8 = alloca %"class.base::OnceCallback.88", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = ptrtoint %"class.WTF::Vector.93"* %4 to i64
  %11 = ptrtoint %"class.WTF::Vector.98"* %5 to i64
  %12 = bitcast %"class.base::RunLoop"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %7, i32 0) #11
  %13 = getelementptr inbounds %"class.blink::mojom::blink::NotificationServiceAsyncWaiter", %"class.blink::mojom::blink::NotificationServiceAsyncWaiter"* %0, i64 0, i32 0
  %14 = load %"class.blink::mojom::blink::NotificationService"*, %"class.blink::mojom::blink::NotificationService"** %13, align 8
  %15 = ptrtoint %"class.base::RunLoop"* %7 to i64
  %16 = call i8* @_Znwm(i64 64) #12, !noalias !22
  %17 = bitcast i8* %16 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %17, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::Vector.93"*, %"class.WTF::Vector.98"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink30NotificationServiceAsyncWaiter16GetNotificationsElRKN3WTF6StringEbPNS7_6VectorIS8_Lj0ENS7_18PartitionAllocatorEEEPNSB_IN4mojo9StructPtrINS5_16NotificationDataEEELj0ESC_EEE3$_4JPNS_7RunLoopESE_SK_EEEFvRKSD_SJ_EE7RunOnceEPNS0_13BindStateBaseESQ_OSJ_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink30NotificationServiceAsyncWaiter16GetNotificationsElRKN3WTF6StringEbPNS6_6VectorIS7_Lj0ENS6_18PartitionAllocatorEEEPNSA_IN4mojo9StructPtrINS4_16NotificationDataEEELj0ESB_EEE3$_4JPNS_7RunLoopESD_SJ_EE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !22
  %18 = getelementptr inbounds i8, i8* %16, i64 40
  %19 = bitcast i8* %18 to i64*
  store i64 %15, i64* %19, align 8, !noalias !22
  %20 = getelementptr inbounds i8, i8* %16, i64 48
  %21 = bitcast i8* %20 to i64*
  store i64 %10, i64* %21, align 8, !noalias !22
  %22 = getelementptr inbounds i8, i8* %16, i64 56
  %23 = bitcast i8* %22 to i64*
  store i64 %11, i64* %23, align 8, !noalias !22
  %24 = bitcast %"class.base::OnceCallback.88"* %8 to i8**
  store i8* %16, i8** %24, align 8, !alias.scope !22
  %25 = bitcast %"class.blink::mojom::blink::NotificationService"* %14 to void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.WTF::String"*, i1, %"class.base::OnceCallback.88"*)***
  %26 = load void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.WTF::String"*, i1, %"class.base::OnceCallback.88"*)**, void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.WTF::String"*, i1, %"class.base::OnceCallback.88"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.WTF::String"*, i1, %"class.base::OnceCallback.88"*)*, void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.WTF::String"*, i1, %"class.base::OnceCallback.88"*)** %26, i64 8
  %28 = load void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.WTF::String"*, i1, %"class.base::OnceCallback.88"*)*, void (%"class.blink::mojom::blink::NotificationService"*, i64, %"class.WTF::String"*, i1, %"class.base::OnceCallback.88"*)** %27, align 8
  call void %28(%"class.blink::mojom::blink::NotificationService"* %14, i64 %1, %"class.WTF::String"* dereferenceable(8) %2, i1 zeroext %3, %"class.base::OnceCallback.88"* nonnull %8) #11
  %29 = getelementptr inbounds %"class.base::OnceCallback.88", %"class.base::OnceCallback.88"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #11
  %30 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.1, i64 0, i64 0), i32 143) #11
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %7, %"class.base::Location"* nonnull dereferenceable(32) %9) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #11
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink33NonPersistentNotificationListenerD2Ev(%"class.blink::mojom::blink::NonPersistentNotificationListener"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink54NonPersistentNotificationListenerInterceptorForTestingD0Ev(%"class.blink::mojom::blink::NonPersistentNotificationListenerInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink19NotificationServiceD2Ev(%"class.blink::mojom::blink::NotificationService"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink40NotificationServiceInterceptorForTestingD0Ev(%"class.blink::mojom::blink::NotificationServiceInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare zeroext i1 @_ZN5blink5mojom5blink19NotificationService19GetPermissionStatusEPNS0_16PermissionStatusE(%"class.blink::mojom::blink::NotificationService"*, i32*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink21NotificationResourcesD1Ev(%"class.blink::mojom::blink::NotificationResources"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink16NotificationDataD1Ev(%"class.blink::mojom::blink::NotificationData"*) unnamed_addr #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiter7OnClickEvE3$_0JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %3 = bitcast void ()** %2 to %"class.base::RunLoop"**
  %4 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %3, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %4) #11
  ret void
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiter7OnClickEvE3$_0JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiter7OnCloseEvE3$_1JPNS_7RunLoopEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"* nocapture readonly) #0 align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %3 = bitcast void ()** %2 to %"class.base::RunLoop"**
  %4 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %3, align 8
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %4) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiter7OnCloseEvE3$_1JPNS_7RunLoopEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink30NotificationServiceAsyncWaiter19GetPermissionStatusEPNS4_16PermissionStatusEE3$_2JPNS_7RunLoopES8_EEEFvS7_EE7RunOnceEPNS0_13BindStateBaseES7_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink30NotificationServiceAsyncWaiter19GetPermissionStatusEPNS3_16PermissionStatusEE3$_2JPNS_7RunLoopES7_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink30NotificationServiceAsyncWaiter29DisplayPersistentNotificationElN4mojo9StructPtrINS5_16NotificationDataEEENS8_INS5_21NotificationResourcesEEEPNS4_27PersistentNotificationErrorEE3$_3JPNS_7RunLoopESE_EEEFvSD_EE7RunOnceEPNS0_13BindStateBaseESD_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink30NotificationServiceAsyncWaiter29DisplayPersistentNotificationElN4mojo9StructPtrINS4_16NotificationDataEEENS7_INS4_21NotificationResourcesEEEPNS3_27PersistentNotificationErrorEE3$_3JPNS_7RunLoopESD_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink30NotificationServiceAsyncWaiter16GetNotificationsElRKN3WTF6StringEbPNS7_6VectorIS8_Lj0ENS7_18PartitionAllocatorEEEPNSB_IN4mojo9StructPtrINS5_16NotificationDataEEELj0ESC_EEE3$_4JPNS_7RunLoopESE_SK_EEEFvRKSD_SJ_EE7RunOnceEPNS0_13BindStateBaseESQ_OSJ_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.WTF::Vector.93"* dereferenceable(16), %"class.WTF::Vector.98"* nocapture dereferenceable(16)) #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to %"class.WTF::Vector.93"**
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to %"class.WTF::Vector.98"**
  %10 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %11 = load %"class.WTF::Vector.93"*, %"class.WTF::Vector.93"** %7, align 8
  %12 = load %"class.WTF::Vector.98"*, %"class.WTF::Vector.98"** %9, align 8
  %13 = bitcast %"class.WTF::Vector.98"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  store atomic i64 0, i64* %13 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.98", %"class.WTF::Vector.98"* %2, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  store i32 0, i32* %15, align 4
  %17 = getelementptr inbounds %"class.WTF::Vector.98", %"class.WTF::Vector.98"* %2, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  store i32 0, i32* %17, align 4
  %19 = tail call dereferenceable(16) %"class.WTF::Vector.93"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.93"* %11, %"class.WTF::Vector.93"* dereferenceable(16) %1) #11
  %20 = bitcast %"class.WTF::Vector.98"* %12 to i64*
  %21 = load i64, i64* %20, align 8
  store atomic i64 %14, i64* %20 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.98", %"class.WTF::Vector.98"* %12, i64 0, i32 0, i32 0, i32 1
  store i32 %16, i32* %22, align 4
  %23 = getelementptr inbounds %"class.WTF::Vector.98", %"class.WTF::Vector.98"* %12, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  store i32 %18, i32* %23, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %10) #11
  %25 = inttoptr i64 %21 to %"class.mojo::StructPtr"*
  %26 = icmp eq i64 %21, 0
  br i1 %26, label %44, label %27, !prof !27

27:                                               ; preds = %3
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %42, label %29, !prof !28

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  %31 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %25, i64 %30
  br label %32

32:                                               ; preds = %39, %29
  %33 = phi %"class.mojo::StructPtr"* [ %40, %39 ], [ %25, %29 ]
  %34 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::mojom::blink::NotificationData"*, %"class.blink::mojom::blink::NotificationData"** %34, align 8
  store %"class.blink::mojom::blink::NotificationData"* null, %"class.blink::mojom::blink::NotificationData"** %34, align 8
  %36 = icmp eq %"class.blink::mojom::blink::NotificationData"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  tail call void @_ZN5blink5mojom5blink16NotificationDataD1Ev(%"class.blink::mojom::blink::NotificationData"* nonnull %35) #11
  %38 = bitcast %"class.blink::mojom::blink::NotificationData"* %35 to i8*
  tail call void @_ZdlPv(i8* %38) #12
  br label %39

39:                                               ; preds = %37, %32
  %40 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %33, i64 1
  %41 = icmp eq %"class.mojo::StructPtr"* %40, %31
  br i1 %41, label %42, label %32

42:                                               ; preds = %39, %27
  %43 = inttoptr i64 %21 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #11
  br label %44

44:                                               ; preds = %3, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.93"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEEaSERKS3_(%"class.WTF::Vector.93"*, %"class.WTF::Vector.93"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.93"* %1, %0
  br i1 %3, label %219, label %4, !prof !28

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %39

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %13 = zext i32 %6 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %13
  %15 = zext i32 %8 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 %15
  br label %17

17:                                               ; preds = %35, %10
  %18 = phi %"class.WTF::String"* [ %36, %35 ], [ %16, %10 ]
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #11
  br label %35

35:                                               ; preds = %34, %31, %17
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 1
  %37 = icmp eq %"class.WTF::String"* %36, %14
  br i1 %37, label %38, label %17

38:                                               ; preds = %35
  store i32 %8, i32* %5, align 4
  br label %116

39:                                               ; preds = %4
  %40 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %0, i64 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = icmp ugt i32 %8, %41
  br i1 %42, label %43, label %114

43:                                               ; preds = %39
  %44 = icmp eq i32 %41, 0
  br i1 %44, label %80, label %45

45:                                               ; preds = %43
  %46 = icmp eq i32 %6, 0
  br i1 %46, label %74, label %47

47:                                               ; preds = %45
  %48 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %0, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = zext i32 %6 to i64
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %50
  br label %52

52:                                               ; preds = %70, %47
  %53 = phi %"class.WTF::String"* [ %71, %70 ], [ %49, %47 ]
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #11
  br label %70

70:                                               ; preds = %69, %66, %52
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %53, i64 1
  %72 = icmp eq %"class.WTF::String"* %71, %51
  br i1 %72, label %73, label %52

73:                                               ; preds = %70
  store i32 0, i32* %5, align 4
  br label %74

74:                                               ; preds = %73, %45
  %75 = bitcast %"class.WTF::Vector.93"* %0 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = bitcast %"class.WTF::Vector.93"* %0 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store i32 0, i32* %40, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #11
  %78 = load i32, i32* %7, align 4
  %79 = load i32, i32* %40, align 8
  br label %80

80:                                               ; preds = %43, %74
  %81 = phi i32 [ 0, %43 ], [ %79, %74 ]
  %82 = phi i32 [ %8, %43 ], [ %78, %74 ]
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %84, label %114, !prof !27

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %0, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %87 = icmp eq %"class.WTF::String"* %86, null
  %88 = zext i32 %82 to i64
  %89 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %88) #11
  %90 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %89, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  br i1 %87, label %91, label %96

91:                                               ; preds = %84
  %92 = ptrtoint i8* %90 to i64
  %93 = bitcast %"class.WTF::Vector.93"* %0 to i64*
  store atomic i64 %92, i64* %93 monotonic, align 8
  %94 = lshr i64 %89, 3
  %95 = trunc i64 %94 to i32
  store i32 %95, i32* %40, align 8
  br label %114

96:                                               ; preds = %84
  %97 = lshr i64 %89, 3
  %98 = ptrtoint i8* %90 to i64
  %99 = load %"class.WTF::String"*, %"class.WTF::String"** %85, align 8
  %100 = icmp ne i8* %90, null
  %101 = icmp ne %"class.WTF::String"* %99, null
  %102 = and i1 %100, %101
  %103 = bitcast %"class.WTF::String"* %99 to i8*
  br i1 %102, label %104, label %110, !prof !27

104:                                              ; preds = %96
  %105 = load i32, i32* %5, align 4
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %103, i64 %107, i1 false) #11
  %108 = bitcast %"class.WTF::Vector.93"* %0 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %104, %96
  %111 = phi i8* [ %109, %104 ], [ %103, %96 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #11
  %112 = bitcast %"class.WTF::Vector.93"* %0 to i64*
  store atomic i64 %98, i64* %112 monotonic, align 8
  %113 = trunc i64 %97 to i32
  store i32 %113, i32* %40, align 8
  br label %114

114:                                              ; preds = %39, %80, %91, %110
  %115 = load i32, i32* %5, align 4
  br label %116

116:                                              ; preds = %114, %38
  %117 = phi i32 [ %115, %114 ], [ %8, %38 ]
  %118 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %1, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %120 = zext i32 %117 to i64
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 %120
  %122 = getelementptr inbounds %"class.WTF::Vector.93", %"class.WTF::Vector.93"* %0, i64 0, i32 0, i32 0, i32 0
  %123 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  %124 = icmp eq i32 %117, 0
  br i1 %124, label %175, label %125

125:                                              ; preds = %116, %167
  %126 = phi %"class.WTF::String"* [ %169, %167 ], [ %123, %116 ]
  %127 = phi %"class.WTF::String"* [ %168, %167 ], [ %119, %116 ]
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %148, label %131

131:                                              ; preds = %125
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %148

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = zext i32 %138 to i33
  %140 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %139, i33 1) #11
  %141 = extractvalue { i33, i1 } %140, 1
  %142 = extractvalue { i33, i1 } %140, 0
  %143 = icmp slt i33 %142, 0
  %144 = or i1 %141, %143
  br i1 %144, label %145, label %146, !prof !28

145:                                              ; preds = %136
  tail call void @llvm.trap() #11
  unreachable

146:                                              ; preds = %136
  %147 = trunc i33 %142 to i32
  store i32 %147, i32* %137, align 4
  br label %148

148:                                              ; preds = %146, %131, %125
  %149 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %150 = bitcast %"class.WTF::String"* %126 to i64*
  %151 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 0, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  store i64 %149, i64* %150, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %153, label %167, label %154

154:                                              ; preds = %148
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load atomic i32, i32* %155 monotonic, align 4
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  br i1 %158, label %161, label %163

161:                                              ; preds = %154
  %162 = add i32 %160, -1
  store i32 %162, i32* %159, align 4
  br label %163

163:                                              ; preds = %161, %154
  %164 = phi i32 [ %162, %161 ], [ %160, %154 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %152) #11
  br label %167

167:                                              ; preds = %166, %163, %148
  %168 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 1
  %169 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %126, i64 1
  %170 = icmp eq %"class.WTF::String"* %168, %121
  br i1 %170, label %171, label %125

171:                                              ; preds = %167
  %172 = load %"class.WTF::String"*, %"class.WTF::String"** %118, align 8
  %173 = load i32, i32* %5, align 4
  %174 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  br label %175

175:                                              ; preds = %171, %116
  %176 = phi %"class.WTF::String"* [ %174, %171 ], [ %123, %116 ]
  %177 = phi i32 [ %173, %171 ], [ 0, %116 ]
  %178 = phi %"class.WTF::String"* [ %172, %171 ], [ %119, %116 ]
  %179 = zext i32 %177 to i64
  %180 = load i32, i32* %7, align 4
  %181 = zext i32 %180 to i64
  %182 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %181
  %183 = icmp eq i32 %177, %180
  br i1 %183, label %217, label %184

184:                                              ; preds = %175
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %176, i64 %179
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %178, i64 %179
  br label %187

187:                                              ; preds = %184, %211
  %188 = phi %"class.WTF::String"* [ %212, %211 ], [ %185, %184 ]
  %189 = phi %"class.WTF::String"* [ %213, %211 ], [ %186, %184 ]
  %190 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %191, %"class.WTF::StringImpl"** %192, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %193, label %211, label %194

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #11
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !28

208:                                              ; preds = %199
  tail call void @llvm.trap() #11
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %194, %187
  %212 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 1
  %213 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 1
  %214 = icmp eq %"class.WTF::String"* %213, %182
  br i1 %214, label %215, label %187

215:                                              ; preds = %211
  %216 = load i32, i32* %7, align 4
  br label %217

217:                                              ; preds = %215, %175
  %218 = phi i32 [ %216, %215 ], [ %177, %175 ]
  store i32 %218, i32* %5, align 4
  br label %219

219:                                              ; preds = %2, %217
  ret %"class.WTF::Vector.93"* %0
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink30NotificationServiceAsyncWaiter16GetNotificationsElRKN3WTF6StringEbPNS6_6VectorIS7_Lj0ENS6_18PartitionAllocatorEEEPNSA_IN4mojo9StructPtrINS4_16NotificationDataEEELj0ESB_EEE3$_4JPNS_7RunLoopESD_SJ_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiter7OnClickEvE3$_0JPNS_7RunLoopEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiter7OnClickEvE3$_0JPNS_7RunLoopEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiter7OnClickEvE3$_0JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiter7OnClickEvE3$_0JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiter7OnCloseEvE3$_1JPNS_7RunLoopEEEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiter7OnCloseEvE3$_1JPNS_7RunLoopEEEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiter7OnCloseEvE3$_1JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIZN5blink5mojom5blink44NonPersistentNotificationListenerAsyncWaiter7OnCloseEvE3$_1JPNS_7RunLoopEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink30NotificationServiceAsyncWaiter19GetPermissionStatusEPNS4_16PermissionStatusEE3$_2JPNS_7RunLoopERS8_EEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink30NotificationServiceAsyncWaiter19GetPermissionStatusEPNS4_16PermissionStatusEE3$_2JPNS_7RunLoopERS8_EEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIZN5blink5mojom5blink30NotificationServiceAsyncWaiter19GetPermissionStatusEPNS2_16PermissionStatusEE3$_2JPNS_7RunLoopERS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIZN5blink5mojom5blink30NotificationServiceAsyncWaiter19GetPermissionStatusEPNS2_16PermissionStatusEE3$_2JPNS_7RunLoopERS6_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink30NotificationServiceAsyncWaiter29DisplayPersistentNotificationElN4mojo9StructPtrINS5_16NotificationDataEEENS8_INS5_21NotificationResourcesEEEPNS4_27PersistentNotificationErrorEE3$_3JPNS_7RunLoopERSE_EEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink30NotificationServiceAsyncWaiter29DisplayPersistentNotificationElN4mojo9StructPtrINS5_16NotificationDataEEENS8_INS5_21NotificationResourcesEEEPNS4_27PersistentNotificationErrorEE3$_3JPNS_7RunLoopERSE_EEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIZN5blink5mojom5blink30NotificationServiceAsyncWaiter29DisplayPersistentNotificationElN4mojo9StructPtrINS3_16NotificationDataEEENS6_INS3_21NotificationResourcesEEEPNS2_27PersistentNotificationErrorEE3$_3JPNS_7RunLoopERSC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIZN5blink5mojom5blink30NotificationServiceAsyncWaiter29DisplayPersistentNotificationElN4mojo9StructPtrINS3_16NotificationDataEEENS6_INS3_21NotificationResourcesEEEPNS2_27PersistentNotificationErrorEE3$_3JPNS_7RunLoopERSC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink30NotificationServiceAsyncWaiter16GetNotificationsElRKN3WTF6StringEbPNS7_6VectorIS8_Lj0ENS7_18PartitionAllocatorEEEPNSB_IN4mojo9StructPtrINS5_16NotificationDataEEELj0ESC_EEE3$_4JPNS_7RunLoopERSE_RSK_EEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink30NotificationServiceAsyncWaiter16GetNotificationsElRKN3WTF6StringEbPNS7_6VectorIS8_Lj0ENS7_18PartitionAllocatorEEEPNSB_IN4mojo9StructPtrINS5_16NotificationDataEEELj0ESC_EEE3$_4JPNS_7RunLoopERSE_RSK_EEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base8BindOnceIZN5blink5mojom5blink30NotificationServiceAsyncWaiter16GetNotificationsElRKN3WTF6StringEbPNS5_6VectorIS6_Lj0ENS5_18PartitionAllocatorEEEPNS9_IN4mojo9StructPtrINS3_16NotificationDataEEELj0ESA_EEE3$_4JPNS_7RunLoopERSC_RSI_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSR_DpOSS_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8BindOnceIZN5blink5mojom5blink30NotificationServiceAsyncWaiter16GetNotificationsElRKN3WTF6StringEbPNS5_6VectorIS6_Lj0ENS5_18PartitionAllocatorEEEPNS9_IN4mojo9StructPtrINS3_16NotificationDataEEELj0ESA_EEE3$_4JPNS_7RunLoopERSC_RSI_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSR_DpOSS_"}
!27 = !{!"branch_weights", i32 2000, i32 1}
!28 = !{!"branch_weights", i32 1, i32 2000}
