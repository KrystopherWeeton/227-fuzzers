; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/densify.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/densify.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { {}*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"struct.tflite::ops::builtin::densify::OpData" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.tflite::optimize::sparsity::FormatConverter" = type { %"class.std::__1::vector", %"class.std::__1::vector", i64, %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.8", %"class.std::__1::vector.15" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i32* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { %"class.std::__1::vector"*, %"class.std::__1::vector"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::vector"* }
%"class.std::__1::vector.15" = type { %"class.std::__1::__vector_base.16" }
%"class.std::__1::__vector_base.16" = type { float*, float*, %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { float* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.tflite::optimize::sparsity::FormatConverter.22" = type { %"class.std::__1::vector", %"class.std::__1::vector", i64, %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.8", %"class.std::__1::vector.23" }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { i8*, i8*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { i8* }

$_ZN6tflite13reference_ops7DensifyIfEEvPK14TfLiteSparsityRKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops7DensifyIaEEvPK14TfLiteSparsityRKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIfED2Ev = comdat any

$_ZN6tflite8optimize8sparsity15FormatConverterIaED2Ev = comdat any

@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.1 = private unnamed_addr constant [64 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/densify.cc\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.6 = private unnamed_addr constant [40 x i8] c"op_context.input->type != kTfLiteString\00", align 1
@.str.7 = private unnamed_addr constant [35 x i8] c"IsConstantTensor(op_context.input)\00", align 1
@.str.8 = private unnamed_addr constant [38 x i8] c"op_context.input->sparsity != nullptr\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"Type %d not supported.\00", align 1
@_ZZN6tflite3ops7builtin16Register_DENSIFYEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin7densify4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin7densify4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin7densify7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin7densify4EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull i8* @_ZN6tflite3ops7builtin7densify4InitEP13TfLiteContextPKcm(%struct.TfLiteContext* nocapture readnone, i8* nocapture readnone, i64) #0 {
  %4 = tail call i8* @_Znwm(i64 1) #9
  store i8 0, i8* %4, align 1
  ret i8* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite3ops7builtin7densify4FreeEP13TfLiteContextPv(%struct.TfLiteContext* nocapture readnone, i8*) #3 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %5, label %4

4:                                                ; preds = %2
  tail call void @_ZdlPv(i8* nonnull %1) #9
  br label %5

5:                                                ; preds = %4, %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin7densify7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #3 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %10 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %9, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %10(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 54, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i32 %6, i32 1) #10
  br label %70

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %19 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %18, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %19(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 55, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i32 %15, i32 1) #10
  br label %70

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %24, %20
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %20 ]
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %36 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %35, align 8
  %37 = sext i32 %32 to i64
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 %37
  br label %39

39:                                               ; preds = %29, %34
  %40 = phi %struct.TfLiteTensor* [ %38, %34 ], [ null, %29 ]
  %41 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 5
  br i1 %43, label %44, label %47

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %46 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %45, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %46(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 59, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6, i64 0, i64 0)) #10
  br label %70

47:                                               ; preds = %39
  %48 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 4
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %54, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %53 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %52, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %53(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 60, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0)) #10
  br label %70

54:                                               ; preds = %47
  %55 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 13
  %56 = load %struct.TfLiteSparsity*, %struct.TfLiteSparsity** %55, align 8
  %57 = icmp eq %struct.TfLiteSparsity* %56, null
  br i1 %57, label %58, label %61

58:                                               ; preds = %54
  %59 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %60 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %59, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %60(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.1, i64 0, i64 0), i32 61, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0)) #10
  br label %70

61:                                               ; preds = %54
  %62 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 0
  store i32 %42, i32* %62, align 8
  %63 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 4
  store i32 3, i32* %63, align 8
  %64 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %65 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %64, align 8
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %67 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %66, align 8
  %68 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %67) #10
  %69 = tail call i32 %65(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %40, %struct.TfLiteIntArray* %68) #10
  br label %70

70:                                               ; preds = %44, %51, %58, %61, %17, %8
  %71 = phi i32 [ 1, %8 ], [ 1, %17 ], [ %69, %61 ], [ 1, %58 ], [ 1, %51 ], [ 1, %44 ]
  ret i32 %71
}

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin7densify4EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #3 {
  %3 = alloca %"class.tflite::RuntimeShape", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %8 = bitcast i8** %7 to %"struct.tflite::ops::builtin::densify::OpData"**
  %9 = load %"struct.tflite::ops::builtin::densify::OpData"*, %"struct.tflite::ops::builtin::densify::OpData"** %8, align 8
  %10 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %11 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %10, align 8
  %12 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %11, i64 0, i32 1, i64 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %17 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %16, align 8
  %18 = sext i32 %13 to i64
  %19 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %17, i64 %18
  br label %20

20:                                               ; preds = %15, %2
  %21 = phi %struct.TfLiteTensor* [ %19, %15 ], [ null, %2 ]
  %22 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %23 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %22, align 8
  %24 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %23, i64 0, i32 1, i64 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %29 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %28, align 8
  %30 = sext i32 %25 to i64
  %31 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %29, i64 %30
  br label %32

32:                                               ; preds = %20, %27
  %33 = phi %struct.TfLiteTensor* [ %31, %27 ], [ null, %20 ]
  %34 = getelementptr inbounds %"struct.tflite::ops::builtin::densify::OpData", %"struct.tflite::ops::builtin::densify::OpData"* %9, i64 0, i32 0
  %35 = load i8, i8* %34, align 1, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %225

37:                                               ; preds = %32
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  switch i32 %39, label %220 [
    i32 1, label %40
    i32 9, label %130
  ]

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %21, i64 0, i32 13
  %42 = load %struct.TfLiteSparsity*, %struct.TfLiteSparsity** %41, align 8
  %43 = bitcast %"class.tflite::RuntimeShape"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %43) #10
  %44 = icmp eq %struct.TfLiteTensor* %21, null
  br i1 %44, label %45, label %47

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  store i32 0, i32* %46, align 8, !alias.scope !3
  br label %75

47:                                               ; preds = %40
  %48 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %21, i64 0, i32 2
  %49 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %48, align 8, !noalias !3
  %50 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %49, i64 0, i32 0
  %51 = load i32, i32* %50, align 4, !noalias !3
  %52 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %49, i64 0, i32 1, i64 0
  %53 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  store i32 %51, i32* %53, align 8, !alias.scope !3
  %54 = icmp sgt i32 %51, 5
  br i1 %54, label %55, label %62

55:                                               ; preds = %47
  %56 = sext i32 %51 to i64
  %57 = shl nsw i64 %56, 2
  %58 = tail call i8* @_Znam(i64 %57) #9, !noalias !3
  %59 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 0
  %60 = bitcast i32** %59 to i8**
  store i8* %58, i8** %60, align 8, !alias.scope !3
  %61 = bitcast i8* %58 to i32*
  br label %67

62:                                               ; preds = %47
  %63 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %64 = bitcast %union.anon* %63 to i32*
  %65 = sext i32 %51 to i64
  %66 = shl nsw i64 %65, 2
  br label %67

67:                                               ; preds = %62, %55
  %68 = phi i64 [ %57, %55 ], [ %66, %62 ]
  %69 = phi i32* [ %61, %55 ], [ %64, %62 ]
  %70 = bitcast i32* %69 to i8*
  %71 = bitcast i32* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %70, i8* align 4 %71, i64 %68, i1 false) #10
  %72 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %21, i64 0, i32 1
  %73 = bitcast %union.TfLitePtrUnion* %72 to float**
  %74 = load float*, float** %73, align 8
  br label %75

75:                                               ; preds = %45, %67
  %76 = phi float* [ %74, %67 ], [ null, %45 ]
  %77 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %77) #10
  %78 = icmp eq %struct.TfLiteTensor* %33, null
  br i1 %78, label %79, label %81

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %80, align 8, !alias.scope !6
  br label %109

81:                                               ; preds = %75
  %82 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 2
  %83 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %82, align 8, !noalias !6
  %84 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %83, i64 0, i32 0
  %85 = load i32, i32* %84, align 4, !noalias !6
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %83, i64 0, i32 1, i64 0
  %87 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %85, i32* %87, align 8, !alias.scope !6
  %88 = icmp sgt i32 %85, 5
  br i1 %88, label %89, label %96

89:                                               ; preds = %81
  %90 = sext i32 %85 to i64
  %91 = shl nsw i64 %90, 2
  %92 = tail call i8* @_Znam(i64 %91) #9, !noalias !6
  %93 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %94 = bitcast i32** %93 to i8**
  store i8* %92, i8** %94, align 8, !alias.scope !6
  %95 = bitcast i8* %92 to i32*
  br label %101

96:                                               ; preds = %81
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %98 = bitcast %union.anon* %97 to i32*
  %99 = sext i32 %85 to i64
  %100 = shl nsw i64 %99, 2
  br label %101

101:                                              ; preds = %96, %89
  %102 = phi i64 [ %91, %89 ], [ %100, %96 ]
  %103 = phi i32* [ %95, %89 ], [ %98, %96 ]
  %104 = bitcast i32* %103 to i8*
  %105 = bitcast i32* %86 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %105, i64 %102, i1 false) #10
  %106 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 1
  %107 = bitcast %union.TfLitePtrUnion* %106 to float**
  %108 = load float*, float** %107, align 8
  br label %109

109:                                              ; preds = %79, %101
  %110 = phi float* [ %108, %101 ], [ null, %79 ]
  call void @_ZN6tflite13reference_ops7DensifyIfEEvPK14TfLiteSparsityRKNS_12RuntimeShapeEPKT_S7_PS8_(%struct.TfLiteSparsity* %42, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %3, float* %76, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, float* %110)
  %111 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp sgt i32 %112, 5
  br i1 %113, label %114, label %120

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %116 = load i32*, i32** %115, align 8
  %117 = icmp eq i32* %116, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %114
  %119 = bitcast i32* %116 to i8*
  call void @_ZdaPv(i8* %119) #9
  br label %120

120:                                              ; preds = %109, %114, %118
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %77) #10
  %121 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %122 = load i32, i32* %121, align 8
  %123 = icmp sgt i32 %122, 5
  br i1 %123, label %124, label %223

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 0
  %126 = load i32*, i32** %125, align 8
  %127 = icmp eq i32* %126, null
  br i1 %127, label %223, label %128

128:                                              ; preds = %124
  %129 = bitcast i32* %126 to i8*
  call void @_ZdaPv(i8* %129) #9
  br label %223

130:                                              ; preds = %37
  %131 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %21, i64 0, i32 13
  %132 = load %struct.TfLiteSparsity*, %struct.TfLiteSparsity** %131, align 8
  %133 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %133) #10
  %134 = icmp eq %struct.TfLiteTensor* %21, null
  br i1 %134, label %135, label %137

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %136, align 8, !alias.scope !9
  br label %165

137:                                              ; preds = %130
  %138 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %21, i64 0, i32 2
  %139 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %138, align 8, !noalias !9
  %140 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %139, i64 0, i32 0
  %141 = load i32, i32* %140, align 4, !noalias !9
  %142 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %139, i64 0, i32 1, i64 0
  %143 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %141, i32* %143, align 8, !alias.scope !9
  %144 = icmp sgt i32 %141, 5
  br i1 %144, label %145, label %152

145:                                              ; preds = %137
  %146 = sext i32 %141 to i64
  %147 = shl nsw i64 %146, 2
  %148 = tail call i8* @_Znam(i64 %147) #9, !noalias !9
  %149 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %150 = bitcast i32** %149 to i8**
  store i8* %148, i8** %150, align 8, !alias.scope !9
  %151 = bitcast i8* %148 to i32*
  br label %157

152:                                              ; preds = %137
  %153 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %154 = bitcast %union.anon* %153 to i32*
  %155 = sext i32 %141 to i64
  %156 = shl nsw i64 %155, 2
  br label %157

157:                                              ; preds = %152, %145
  %158 = phi i64 [ %147, %145 ], [ %156, %152 ]
  %159 = phi i32* [ %151, %145 ], [ %154, %152 ]
  %160 = bitcast i32* %159 to i8*
  %161 = bitcast i32* %142 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %160, i8* align 4 %161, i64 %158, i1 false) #10
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %21, i64 0, i32 1
  %163 = bitcast %union.TfLitePtrUnion* %162 to i8**
  %164 = load i8*, i8** %163, align 8
  br label %165

165:                                              ; preds = %135, %157
  %166 = phi i8* [ %164, %157 ], [ null, %135 ]
  %167 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %167) #10
  %168 = icmp eq %struct.TfLiteTensor* %33, null
  br i1 %168, label %169, label %171

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %170, align 8, !alias.scope !12
  br label %199

171:                                              ; preds = %165
  %172 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 2
  %173 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %172, align 8, !noalias !12
  %174 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %173, i64 0, i32 0
  %175 = load i32, i32* %174, align 4, !noalias !12
  %176 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %173, i64 0, i32 1, i64 0
  %177 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %175, i32* %177, align 8, !alias.scope !12
  %178 = icmp sgt i32 %175, 5
  br i1 %178, label %179, label %186

179:                                              ; preds = %171
  %180 = sext i32 %175 to i64
  %181 = shl nsw i64 %180, 2
  %182 = tail call i8* @_Znam(i64 %181) #9, !noalias !12
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %184 = bitcast i32** %183 to i8**
  store i8* %182, i8** %184, align 8, !alias.scope !12
  %185 = bitcast i8* %182 to i32*
  br label %191

186:                                              ; preds = %171
  %187 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %188 = bitcast %union.anon* %187 to i32*
  %189 = sext i32 %175 to i64
  %190 = shl nsw i64 %189, 2
  br label %191

191:                                              ; preds = %186, %179
  %192 = phi i64 [ %181, %179 ], [ %190, %186 ]
  %193 = phi i32* [ %185, %179 ], [ %188, %186 ]
  %194 = bitcast i32* %193 to i8*
  %195 = bitcast i32* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %194, i8* align 4 %195, i64 %192, i1 false) #10
  %196 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %33, i64 0, i32 1
  %197 = bitcast %union.TfLitePtrUnion* %196 to i8**
  %198 = load i8*, i8** %197, align 8
  br label %199

199:                                              ; preds = %169, %191
  %200 = phi i8* [ %198, %191 ], [ null, %169 ]
  call void @_ZN6tflite13reference_ops7DensifyIaEEvPK14TfLiteSparsityRKNS_12RuntimeShapeEPKT_S7_PS8_(%struct.TfLiteSparsity* %132, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i8* %166, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i8* %200)
  %201 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %202 = load i32, i32* %201, align 8
  %203 = icmp sgt i32 %202, 5
  br i1 %203, label %204, label %210

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %206 = load i32*, i32** %205, align 8
  %207 = icmp eq i32* %206, null
  br i1 %207, label %210, label %208

208:                                              ; preds = %204
  %209 = bitcast i32* %206 to i8*
  call void @_ZdaPv(i8* %209) #9
  br label %210

210:                                              ; preds = %199, %204, %208
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %167) #10
  %211 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %212 = load i32, i32* %211, align 8
  %213 = icmp sgt i32 %212, 5
  br i1 %213, label %214, label %223

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %216 = load i32*, i32** %215, align 8
  %217 = icmp eq i32* %216, null
  br i1 %217, label %223, label %218

218:                                              ; preds = %214
  %219 = bitcast i32* %216 to i8*
  call void @_ZdaPv(i8* %219) #9
  br label %223

220:                                              ; preds = %37
  %221 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %222 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %221, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %222(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i32 %39) #10
  br label %225

223:                                              ; preds = %218, %214, %210, %128, %124, %120
  %224 = phi i8* [ %43, %120 ], [ %43, %124 ], [ %43, %128 ], [ %133, %210 ], [ %133, %214 ], [ %133, %218 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %224) #10
  store i8 1, i8* %34, align 1
  br label %225

225:                                              ; preds = %32, %223, %220
  %226 = phi i32 [ 1, %220 ], [ 0, %223 ], [ 0, %32 ]
  ret i32 %226
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops7DensifyIfEEvPK14TfLiteSparsityRKNS_12RuntimeShapeEPKT_S7_PS8_(%struct.TfLiteSparsity*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #6 comdat {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.tflite::optimize::sparsity::FormatConverter", align 8
  %8 = alloca %"class.std::__1::vector.15", align 8
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = sext i32 %10 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #10
  %16 = icmp eq i32 %10, 0
  br i1 %16, label %65, label %17

17:                                               ; preds = %5
  %18 = icmp slt i32 %10, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %20) #11
  unreachable

21:                                               ; preds = %17
  %22 = shl nsw i64 %15, 2
  %23 = tail call i8* @_Znwm(i64 %22) #9
  %24 = bitcast i8* %23 to i32*
  %25 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds i32, i32* %24, i64 %15
  store i32* %26, i32** %14, align 8
  %27 = bitcast i32** %13 to i64*
  %28 = ptrtoint i8* %23 to i64
  %29 = add nsw i64 %15, -1
  %30 = getelementptr i32, i32* %24, i64 %29
  %31 = ptrtoint i32* %30 to i64
  %32 = sub i64 4, %28
  %33 = add i64 %32, %31
  %34 = and i64 %33, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %23, i8 0, i64 %34, i1 false) #10
  %35 = ptrtoint i32* %26 to i64
  store i64 %35, i64* %27, align 8
  %36 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %37 = getelementptr inbounds %union.anon, %union.anon* %36, i64 0, i32 0
  %38 = bitcast %union.anon* %36 to [5 x i32]*
  %39 = icmp sgt i32 %10, 5
  %40 = load i32*, i32** %37, align 8
  %41 = bitcast %union.anon* %36 to i32*
  %42 = select i1 %39, i32* %40, i32* %41
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %24, align 4
  %44 = icmp eq i32 %10, 1
  br i1 %44, label %65, label %45

45:                                               ; preds = %21
  %46 = zext i32 %10 to i64
  %47 = add nsw i64 %46, -1
  %48 = and i64 %47, 1
  %49 = icmp eq i32 %10, 2
  br i1 %49, label %52, label %50

50:                                               ; preds = %45
  %51 = sub nsw i64 %47, %48
  br label %189

52:                                               ; preds = %189, %45
  %53 = phi i64 [ 1, %45 ], [ %211, %189 ]
  %54 = icmp eq i64 %48, 0
  br i1 %54, label %65, label %55

55:                                               ; preds = %52
  %56 = load i32, i32* %9, align 8
  %57 = load i32*, i32** %12, align 8
  %58 = icmp sgt i32 %56, 5
  %59 = load i32*, i32** %37, align 8
  %60 = getelementptr inbounds i32, i32* %59, i64 %53
  %61 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %53
  %62 = select i1 %58, i32* %60, i32* %61
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds i32, i32* %57, i64 %53
  store i32 %63, i32* %64, align 4
  br label %65

65:                                               ; preds = %55, %52, %21, %5
  %66 = bitcast %"class.tflite::optimize::sparsity::FormatConverter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %66) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 200, i1 false)
  call void @_ZN6tflite8optimize8sparsity15FormatConverterIfEC1ERKNSt3__16vectorIiNS4_9allocatorIiEEEERK14TfLiteSparsity(%"class.tflite::optimize::sparsity::FormatConverter"* nonnull %7, %"class.std::__1::vector"* nonnull dereferenceable(24) %6, %struct.TfLiteSparsity* dereferenceable(32) %0) #10
  %67 = call i32 @_ZN6tflite8optimize8sparsity15FormatConverterIfE13SparseToDenseEPKf(%"class.tflite::optimize::sparsity::FormatConverter"* nonnull %7, float* %2) #10
  %68 = bitcast %"class.std::__1::vector.15"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #10
  %69 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %8, i64 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.std::__1::vector.15", %"class.std::__1::vector.15"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %71 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %7, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 24, i1 false) #10, !alias.scope !15
  %72 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %7, i64 0, i32 8, i32 0, i32 1
  %73 = bitcast float** %72 to i64*
  %74 = load i64, i64* %73, align 8, !noalias !15
  %75 = bitcast %"class.std::__1::vector.15"* %71 to i64*
  %76 = load i64, i64* %75, align 8, !noalias !15
  %77 = sub i64 %74, %76
  %78 = ashr exact i64 %77, 2
  %79 = icmp eq i64 %77, 0
  br i1 %79, label %215, label %80

80:                                               ; preds = %65
  %81 = icmp ugt i64 %78, 4611686018427387903
  br i1 %81, label %82, label %84

82:                                               ; preds = %80
  %83 = bitcast %"class.std::__1::vector.15"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %83) #11
  unreachable

84:                                               ; preds = %80
  %85 = call i8* @_Znwm(i64 %77) #9
  %86 = bitcast i8* %85 to float*
  %87 = bitcast float** %69 to i8**
  store i8* %85, i8** %87, align 8, !alias.scope !15
  %88 = bitcast %"class.std::__1::vector.15"* %8 to i8**
  store i8* %85, i8** %88, align 8, !alias.scope !15
  %89 = getelementptr inbounds float, float* %86, i64 %78
  store float* %89, float** %70, align 8, !alias.scope !15
  %90 = bitcast float** %69 to i64*
  %91 = ptrtoint i8* %85 to i64
  %92 = icmp sgt i64 %77, 0
  br i1 %92, label %94, label %93

93:                                               ; preds = %84
  store i64 %91, i64* %90, align 8, !alias.scope !15
  br label %214

94:                                               ; preds = %84
  %95 = lshr exact i64 %77, 2
  %96 = inttoptr i64 %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %85, i8* align 4 %96, i64 %77, i1 false) #10
  %97 = getelementptr inbounds float, float* %86, i64 %95
  %98 = ptrtoint float* %97 to i64
  store i64 %98, i64* %90, align 8, !alias.scope !15
  %99 = bitcast i8* %85 to float*
  %100 = icmp eq float* %97, %99
  br i1 %100, label %214, label %101

101:                                              ; preds = %94
  %102 = bitcast i8* %85 to float*
  %103 = sub i64 %98, %91
  %104 = ashr exact i64 %103, 2
  %105 = icmp ugt i64 %104, 1
  %106 = select i1 %105, i64 %104, i64 1
  %107 = icmp ult i64 %106, 8
  br i1 %107, label %108, label %110

108:                                              ; preds = %187, %101
  %109 = phi i64 [ 0, %101 ], [ %111, %187 ]
  br label %223

110:                                              ; preds = %101
  %111 = and i64 %106, -8
  %112 = add nsw i64 %111, -8
  %113 = lshr exact i64 %112, 3
  %114 = add nuw nsw i64 %113, 1
  %115 = and i64 %114, 3
  %116 = icmp ult i64 %112, 24
  br i1 %116, label %168, label %117

117:                                              ; preds = %110
  %118 = sub nsw i64 %114, %115
  br label %119

119:                                              ; preds = %119, %117
  %120 = phi i64 [ 0, %117 ], [ %165, %119 ]
  %121 = phi i64 [ %118, %117 ], [ %166, %119 ]
  %122 = getelementptr inbounds float, float* %102, i64 %120
  %123 = bitcast float* %122 to <4 x i32>*
  %124 = load <4 x i32>, <4 x i32>* %123, align 4
  %125 = getelementptr inbounds float, float* %122, i64 4
  %126 = bitcast float* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4
  %128 = getelementptr inbounds float, float* %4, i64 %120
  %129 = bitcast float* %128 to <4 x i32>*
  store <4 x i32> %124, <4 x i32>* %129, align 4
  %130 = getelementptr inbounds float, float* %128, i64 4
  %131 = bitcast float* %130 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %131, align 4
  %132 = or i64 %120, 8
  %133 = getelementptr inbounds float, float* %102, i64 %132
  %134 = bitcast float* %133 to <4 x i32>*
  %135 = load <4 x i32>, <4 x i32>* %134, align 4
  %136 = getelementptr inbounds float, float* %133, i64 4
  %137 = bitcast float* %136 to <4 x i32>*
  %138 = load <4 x i32>, <4 x i32>* %137, align 4
  %139 = getelementptr inbounds float, float* %4, i64 %132
  %140 = bitcast float* %139 to <4 x i32>*
  store <4 x i32> %135, <4 x i32>* %140, align 4
  %141 = getelementptr inbounds float, float* %139, i64 4
  %142 = bitcast float* %141 to <4 x i32>*
  store <4 x i32> %138, <4 x i32>* %142, align 4
  %143 = or i64 %120, 16
  %144 = getelementptr inbounds float, float* %102, i64 %143
  %145 = bitcast float* %144 to <4 x i32>*
  %146 = load <4 x i32>, <4 x i32>* %145, align 4
  %147 = getelementptr inbounds float, float* %144, i64 4
  %148 = bitcast float* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4
  %150 = getelementptr inbounds float, float* %4, i64 %143
  %151 = bitcast float* %150 to <4 x i32>*
  store <4 x i32> %146, <4 x i32>* %151, align 4
  %152 = getelementptr inbounds float, float* %150, i64 4
  %153 = bitcast float* %152 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %153, align 4
  %154 = or i64 %120, 24
  %155 = getelementptr inbounds float, float* %102, i64 %154
  %156 = bitcast float* %155 to <4 x i32>*
  %157 = load <4 x i32>, <4 x i32>* %156, align 4
  %158 = getelementptr inbounds float, float* %155, i64 4
  %159 = bitcast float* %158 to <4 x i32>*
  %160 = load <4 x i32>, <4 x i32>* %159, align 4
  %161 = getelementptr inbounds float, float* %4, i64 %154
  %162 = bitcast float* %161 to <4 x i32>*
  store <4 x i32> %157, <4 x i32>* %162, align 4
  %163 = getelementptr inbounds float, float* %161, i64 4
  %164 = bitcast float* %163 to <4 x i32>*
  store <4 x i32> %160, <4 x i32>* %164, align 4
  %165 = add i64 %120, 32
  %166 = add i64 %121, -4
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %119, !llvm.loop !18

168:                                              ; preds = %119, %110
  %169 = phi i64 [ 0, %110 ], [ %165, %119 ]
  %170 = icmp eq i64 %115, 0
  br i1 %170, label %187, label %171

171:                                              ; preds = %168, %171
  %172 = phi i64 [ %184, %171 ], [ %169, %168 ]
  %173 = phi i64 [ %185, %171 ], [ %115, %168 ]
  %174 = getelementptr inbounds float, float* %102, i64 %172
  %175 = bitcast float* %174 to <4 x i32>*
  %176 = load <4 x i32>, <4 x i32>* %175, align 4
  %177 = getelementptr inbounds float, float* %174, i64 4
  %178 = bitcast float* %177 to <4 x i32>*
  %179 = load <4 x i32>, <4 x i32>* %178, align 4
  %180 = getelementptr inbounds float, float* %4, i64 %172
  %181 = bitcast float* %180 to <4 x i32>*
  store <4 x i32> %176, <4 x i32>* %181, align 4
  %182 = getelementptr inbounds float, float* %180, i64 4
  %183 = bitcast float* %182 to <4 x i32>*
  store <4 x i32> %179, <4 x i32>* %183, align 4
  %184 = add i64 %172, 8
  %185 = add i64 %173, -1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %171, !llvm.loop !20

187:                                              ; preds = %171, %168
  %188 = icmp eq i64 %106, %111
  br i1 %188, label %214, label %108

189:                                              ; preds = %189, %50
  %190 = phi i64 [ 1, %50 ], [ %211, %189 ]
  %191 = phi i64 [ %51, %50 ], [ %212, %189 ]
  %192 = load i32, i32* %9, align 8
  %193 = load i32*, i32** %12, align 8
  %194 = icmp sgt i32 %192, 5
  %195 = load i32*, i32** %37, align 8
  %196 = getelementptr inbounds i32, i32* %195, i64 %190
  %197 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %190
  %198 = select i1 %194, i32* %196, i32* %197
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds i32, i32* %193, i64 %190
  store i32 %199, i32* %200, align 4
  %201 = add nuw nsw i64 %190, 1
  %202 = load i32, i32* %9, align 8
  %203 = load i32*, i32** %12, align 8
  %204 = icmp sgt i32 %202, 5
  %205 = load i32*, i32** %37, align 8
  %206 = getelementptr inbounds i32, i32* %205, i64 %201
  %207 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %201
  %208 = select i1 %204, i32* %206, i32* %207
  %209 = load i32, i32* %208, align 4
  %210 = getelementptr inbounds i32, i32* %203, i64 %201
  store i32 %209, i32* %210, align 4
  %211 = add nuw nsw i64 %190, 2
  %212 = add i64 %191, -2
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %52, label %189

214:                                              ; preds = %223, %187, %94, %93
  store i64 %91, i64* %90, align 8
  call void @_ZdlPv(i8* nonnull %85) #9
  br label %215

215:                                              ; preds = %65, %214
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #10
  call void @_ZN6tflite8optimize8sparsity15FormatConverterIfED2Ev(%"class.tflite::optimize::sparsity::FormatConverter"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %66) #10
  %216 = load i32*, i32** %12, align 8
  %217 = icmp eq i32* %216, null
  br i1 %217, label %222, label %218

218:                                              ; preds = %215
  %219 = ptrtoint i32* %216 to i64
  %220 = bitcast i32** %13 to i64*
  store i64 %219, i64* %220, align 8
  %221 = bitcast i32* %216 to i8*
  call void @_ZdlPv(i8* %221) #9
  br label %222

222:                                              ; preds = %215, %218
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10
  ret void

223:                                              ; preds = %108, %223
  %224 = phi i64 [ %230, %223 ], [ %109, %108 ]
  %225 = getelementptr inbounds float, float* %102, i64 %224
  %226 = bitcast float* %225 to i32*
  %227 = load i32, i32* %226, align 4
  %228 = getelementptr inbounds float, float* %4, i64 %224
  %229 = bitcast float* %228 to i32*
  store i32 %227, i32* %229, align 4
  %230 = add nuw i64 %224, 1
  %231 = icmp ugt i64 %104, %230
  br i1 %231, label %223, label %214, !llvm.loop !22
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops7DensifyIaEEvPK14TfLiteSparsityRKNS_12RuntimeShapeEPKT_S7_PS8_(%struct.TfLiteSparsity*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #6 comdat {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.tflite::optimize::sparsity::FormatConverter.22", align 8
  %8 = alloca %"class.std::__1::vector.23", align 8
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = sext i32 %10 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #10
  %16 = icmp eq i32 %10, 0
  br i1 %16, label %65, label %17

17:                                               ; preds = %5
  %18 = icmp slt i32 %10, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %20) #11
  unreachable

21:                                               ; preds = %17
  %22 = shl nsw i64 %15, 2
  %23 = tail call i8* @_Znwm(i64 %22) #9
  %24 = bitcast i8* %23 to i32*
  %25 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds i32, i32* %24, i64 %15
  store i32* %26, i32** %14, align 8
  %27 = bitcast i32** %13 to i64*
  %28 = ptrtoint i8* %23 to i64
  %29 = add nsw i64 %15, -1
  %30 = getelementptr i32, i32* %24, i64 %29
  %31 = ptrtoint i32* %30 to i64
  %32 = sub i64 4, %28
  %33 = add i64 %32, %31
  %34 = and i64 %33, -4
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %23, i8 0, i64 %34, i1 false) #10
  %35 = ptrtoint i32* %26 to i64
  store i64 %35, i64* %27, align 8
  %36 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %37 = getelementptr inbounds %union.anon, %union.anon* %36, i64 0, i32 0
  %38 = bitcast %union.anon* %36 to [5 x i32]*
  %39 = icmp sgt i32 %10, 5
  %40 = load i32*, i32** %37, align 8
  %41 = bitcast %union.anon* %36 to i32*
  %42 = select i1 %39, i32* %40, i32* %41
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %24, align 4
  %44 = icmp eq i32 %10, 1
  br i1 %44, label %65, label %45

45:                                               ; preds = %21
  %46 = zext i32 %10 to i64
  %47 = add nsw i64 %46, -1
  %48 = and i64 %47, 1
  %49 = icmp eq i32 %10, 2
  br i1 %49, label %52, label %50

50:                                               ; preds = %45
  %51 = sub nsw i64 %47, %48
  br label %175

52:                                               ; preds = %175, %45
  %53 = phi i64 [ 1, %45 ], [ %197, %175 ]
  %54 = icmp eq i64 %48, 0
  br i1 %54, label %65, label %55

55:                                               ; preds = %52
  %56 = load i32, i32* %9, align 8
  %57 = load i32*, i32** %12, align 8
  %58 = icmp sgt i32 %56, 5
  %59 = load i32*, i32** %37, align 8
  %60 = getelementptr inbounds i32, i32* %59, i64 %53
  %61 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %53
  %62 = select i1 %58, i32* %60, i32* %61
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds i32, i32* %57, i64 %53
  store i32 %63, i32* %64, align 4
  br label %65

65:                                               ; preds = %55, %52, %21, %5
  %66 = bitcast %"class.tflite::optimize::sparsity::FormatConverter.22"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %66) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 200, i1 false)
  call void @_ZN6tflite8optimize8sparsity15FormatConverterIaEC1ERKNSt3__16vectorIiNS4_9allocatorIiEEEERK14TfLiteSparsity(%"class.tflite::optimize::sparsity::FormatConverter.22"* nonnull %7, %"class.std::__1::vector"* nonnull dereferenceable(24) %6, %struct.TfLiteSparsity* dereferenceable(32) %0) #10
  %67 = call i32 @_ZN6tflite8optimize8sparsity15FormatConverterIaE13SparseToDenseEPKa(%"class.tflite::optimize::sparsity::FormatConverter.22"* nonnull %7, i8* %2) #10
  %68 = bitcast %"class.std::__1::vector.23"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #10
  %69 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %8, i64 0, i32 0, i32 0
  %70 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %8, i64 0, i32 0, i32 1
  %71 = getelementptr inbounds %"class.std::__1::vector.23", %"class.std::__1::vector.23"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %72 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %7, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %68, i8 0, i64 24, i1 false) #10, !alias.scope !24
  %73 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %7, i64 0, i32 8, i32 0, i32 1
  %74 = bitcast i8** %73 to i64*
  %75 = load i64, i64* %74, align 8, !noalias !24
  %76 = bitcast %"class.std::__1::vector.23"* %72 to i64*
  %77 = load i64, i64* %76, align 8, !noalias !24
  %78 = sub i64 %75, %77
  %79 = icmp eq i64 %78, 0
  %80 = inttoptr i64 %77 to i8*
  br i1 %79, label %201, label %81

81:                                               ; preds = %65
  %82 = icmp slt i64 %78, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %81
  %84 = bitcast %"class.std::__1::vector.23"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %84) #11
  unreachable

85:                                               ; preds = %81
  %86 = call i8* @_Znwm(i64 %78) #9
  store i8* %86, i8** %70, align 8, !alias.scope !24
  store i8* %86, i8** %69, align 8, !alias.scope !24
  %87 = getelementptr inbounds i8, i8* %86, i64 %78
  store i8* %87, i8** %71, align 8, !alias.scope !24
  %88 = bitcast i8** %70 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %86, i8* align 1 %80, i64 %78, i1 false) #10
  %89 = ptrtoint i8* %87 to i64
  store i64 %89, i64* %88, align 8, !alias.scope !24
  %90 = ptrtoint i8* %86 to i64
  %91 = icmp eq i64 %78, 0
  br i1 %91, label %200, label %92

92:                                               ; preds = %85
  %93 = icmp ult i64 %78, 32
  br i1 %93, label %94, label %96

94:                                               ; preds = %173, %92
  %95 = phi i64 [ 0, %92 ], [ %97, %173 ]
  br label %209

96:                                               ; preds = %92
  %97 = and i64 %78, -32
  %98 = add i64 %97, -32
  %99 = lshr exact i64 %98, 5
  %100 = add nuw nsw i64 %99, 1
  %101 = and i64 %100, 3
  %102 = icmp ult i64 %98, 96
  br i1 %102, label %154, label %103

103:                                              ; preds = %96
  %104 = sub nsw i64 %100, %101
  br label %105

105:                                              ; preds = %105, %103
  %106 = phi i64 [ 0, %103 ], [ %151, %105 ]
  %107 = phi i64 [ %104, %103 ], [ %152, %105 ]
  %108 = getelementptr inbounds i8, i8* %86, i64 %106
  %109 = bitcast i8* %108 to <16 x i8>*
  %110 = load <16 x i8>, <16 x i8>* %109, align 1
  %111 = getelementptr inbounds i8, i8* %108, i64 16
  %112 = bitcast i8* %111 to <16 x i8>*
  %113 = load <16 x i8>, <16 x i8>* %112, align 1
  %114 = getelementptr inbounds i8, i8* %4, i64 %106
  %115 = bitcast i8* %114 to <16 x i8>*
  store <16 x i8> %110, <16 x i8>* %115, align 1
  %116 = getelementptr inbounds i8, i8* %114, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %113, <16 x i8>* %117, align 1
  %118 = or i64 %106, 32
  %119 = getelementptr inbounds i8, i8* %86, i64 %118
  %120 = bitcast i8* %119 to <16 x i8>*
  %121 = load <16 x i8>, <16 x i8>* %120, align 1
  %122 = getelementptr inbounds i8, i8* %119, i64 16
  %123 = bitcast i8* %122 to <16 x i8>*
  %124 = load <16 x i8>, <16 x i8>* %123, align 1
  %125 = getelementptr inbounds i8, i8* %4, i64 %118
  %126 = bitcast i8* %125 to <16 x i8>*
  store <16 x i8> %121, <16 x i8>* %126, align 1
  %127 = getelementptr inbounds i8, i8* %125, i64 16
  %128 = bitcast i8* %127 to <16 x i8>*
  store <16 x i8> %124, <16 x i8>* %128, align 1
  %129 = or i64 %106, 64
  %130 = getelementptr inbounds i8, i8* %86, i64 %129
  %131 = bitcast i8* %130 to <16 x i8>*
  %132 = load <16 x i8>, <16 x i8>* %131, align 1
  %133 = getelementptr inbounds i8, i8* %130, i64 16
  %134 = bitcast i8* %133 to <16 x i8>*
  %135 = load <16 x i8>, <16 x i8>* %134, align 1
  %136 = getelementptr inbounds i8, i8* %4, i64 %129
  %137 = bitcast i8* %136 to <16 x i8>*
  store <16 x i8> %132, <16 x i8>* %137, align 1
  %138 = getelementptr inbounds i8, i8* %136, i64 16
  %139 = bitcast i8* %138 to <16 x i8>*
  store <16 x i8> %135, <16 x i8>* %139, align 1
  %140 = or i64 %106, 96
  %141 = getelementptr inbounds i8, i8* %86, i64 %140
  %142 = bitcast i8* %141 to <16 x i8>*
  %143 = load <16 x i8>, <16 x i8>* %142, align 1
  %144 = getelementptr inbounds i8, i8* %141, i64 16
  %145 = bitcast i8* %144 to <16 x i8>*
  %146 = load <16 x i8>, <16 x i8>* %145, align 1
  %147 = getelementptr inbounds i8, i8* %4, i64 %140
  %148 = bitcast i8* %147 to <16 x i8>*
  store <16 x i8> %143, <16 x i8>* %148, align 1
  %149 = getelementptr inbounds i8, i8* %147, i64 16
  %150 = bitcast i8* %149 to <16 x i8>*
  store <16 x i8> %146, <16 x i8>* %150, align 1
  %151 = add i64 %106, 128
  %152 = add i64 %107, -4
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %105, !llvm.loop !27

154:                                              ; preds = %105, %96
  %155 = phi i64 [ 0, %96 ], [ %151, %105 ]
  %156 = icmp eq i64 %101, 0
  br i1 %156, label %173, label %157

157:                                              ; preds = %154, %157
  %158 = phi i64 [ %170, %157 ], [ %155, %154 ]
  %159 = phi i64 [ %171, %157 ], [ %101, %154 ]
  %160 = getelementptr inbounds i8, i8* %86, i64 %158
  %161 = bitcast i8* %160 to <16 x i8>*
  %162 = load <16 x i8>, <16 x i8>* %161, align 1
  %163 = getelementptr inbounds i8, i8* %160, i64 16
  %164 = bitcast i8* %163 to <16 x i8>*
  %165 = load <16 x i8>, <16 x i8>* %164, align 1
  %166 = getelementptr inbounds i8, i8* %4, i64 %158
  %167 = bitcast i8* %166 to <16 x i8>*
  store <16 x i8> %162, <16 x i8>* %167, align 1
  %168 = getelementptr inbounds i8, i8* %166, i64 16
  %169 = bitcast i8* %168 to <16 x i8>*
  store <16 x i8> %165, <16 x i8>* %169, align 1
  %170 = add i64 %158, 32
  %171 = add i64 %159, -1
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %173, label %157, !llvm.loop !28

173:                                              ; preds = %157, %154
  %174 = icmp eq i64 %78, %97
  br i1 %174, label %200, label %94

175:                                              ; preds = %175, %50
  %176 = phi i64 [ 1, %50 ], [ %197, %175 ]
  %177 = phi i64 [ %51, %50 ], [ %198, %175 ]
  %178 = load i32, i32* %9, align 8
  %179 = load i32*, i32** %12, align 8
  %180 = icmp sgt i32 %178, 5
  %181 = load i32*, i32** %37, align 8
  %182 = getelementptr inbounds i32, i32* %181, i64 %176
  %183 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %176
  %184 = select i1 %180, i32* %182, i32* %183
  %185 = load i32, i32* %184, align 4
  %186 = getelementptr inbounds i32, i32* %179, i64 %176
  store i32 %185, i32* %186, align 4
  %187 = add nuw nsw i64 %176, 1
  %188 = load i32, i32* %9, align 8
  %189 = load i32*, i32** %12, align 8
  %190 = icmp sgt i32 %188, 5
  %191 = load i32*, i32** %37, align 8
  %192 = getelementptr inbounds i32, i32* %191, i64 %187
  %193 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 %187
  %194 = select i1 %190, i32* %192, i32* %193
  %195 = load i32, i32* %194, align 4
  %196 = getelementptr inbounds i32, i32* %189, i64 %187
  store i32 %195, i32* %196, align 4
  %197 = add nuw nsw i64 %176, 2
  %198 = add i64 %177, -2
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %52, label %175

200:                                              ; preds = %209, %173, %85
  store i64 %90, i64* %88, align 8
  call void @_ZdlPv(i8* nonnull %86) #9
  br label %201

201:                                              ; preds = %65, %200
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #10
  call void @_ZN6tflite8optimize8sparsity15FormatConverterIaED2Ev(%"class.tflite::optimize::sparsity::FormatConverter.22"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %66) #10
  %202 = load i32*, i32** %12, align 8
  %203 = icmp eq i32* %202, null
  br i1 %203, label %208, label %204

204:                                              ; preds = %201
  %205 = ptrtoint i32* %202 to i64
  %206 = bitcast i32** %13 to i64*
  store i64 %205, i64* %206, align 8
  %207 = bitcast i32* %202 to i8*
  call void @_ZdlPv(i8* %207) #9
  br label %208

208:                                              ; preds = %201, %204
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #10
  ret void

209:                                              ; preds = %94, %209
  %210 = phi i64 [ %214, %209 ], [ %95, %94 ]
  %211 = getelementptr inbounds i8, i8* %86, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = getelementptr inbounds i8, i8* %4, i64 %210
  store i8 %212, i8* %213, align 1
  %214 = add nuw i64 %210, 1
  %215 = icmp ugt i64 %78, %214
  br i1 %215, label %209, label %200, !llvm.loop !29
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin16Register_DENSIFYEv() local_unnamed_addr #7 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin16Register_DENSIFYEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

declare void @_ZN6tflite8optimize8sparsity15FormatConverterIfEC1ERKNSt3__16vectorIiNS4_9allocatorIiEEEERK14TfLiteSparsity(%"class.tflite::optimize::sparsity::FormatConverter"*, %"class.std::__1::vector"* dereferenceable(24), %struct.TfLiteSparsity* dereferenceable(32)) unnamed_addr #5

declare i32 @_ZN6tflite8optimize8sparsity15FormatConverterIfE13SparseToDenseEPKf(%"class.tflite::optimize::sparsity::FormatConverter"*, float*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite8optimize8sparsity15FormatConverterIfED2Ev(%"class.tflite::optimize::sparsity::FormatConverter"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load float*, float** %2, align 8
  %4 = icmp eq float* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint float* %3 to i64
  %7 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 8, i32 0, i32 1
  %8 = bitcast float** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast float* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #9
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 7
  %12 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %12, align 8
  %14 = icmp eq %"class.std::__1::vector"* %13, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::vector"* %13 to i8*
  %17 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 7, i32 0, i32 1
  %18 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %17, align 8
  %19 = icmp eq %"class.std::__1::vector"* %18, %13
  br i1 %19, label %36, label %20

20:                                               ; preds = %15, %31
  %21 = phi %"class.std::__1::vector"* [ %22, %31 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %21, i64 -1
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %22, i64 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = icmp eq i32* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %20
  %27 = ptrtoint i32* %24 to i64
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %21, i64 -1, i32 0, i32 1
  %29 = bitcast i32** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast i32* %24 to i8*
  tail call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %26, %20
  %32 = icmp eq %"class.std::__1::vector"* %22, %13
  br i1 %32, label %33, label %20

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::vector.8"* %11 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %15
  %37 = phi i8* [ %35, %33 ], [ %16, %15 ]
  store %"class.std::__1::vector"* %13, %"class.std::__1::vector"** %17, align 8
  tail call void @_ZdlPv(i8* %37) #9
  br label %38

38:                                               ; preds = %10, %36
  %39 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 6, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = icmp eq i32* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = ptrtoint i32* %40 to i64
  %44 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 6, i32 0, i32 1
  %45 = bitcast i32** %44 to i64*
  store i64 %43, i64* %45, align 8
  %46 = bitcast i32* %40 to i8*
  tail call void @_ZdlPv(i8* %46) #9
  br label %47

47:                                               ; preds = %38, %42
  %48 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 5, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = icmp eq i32* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = ptrtoint i32* %49 to i64
  %53 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 5, i32 0, i32 1
  %54 = bitcast i32** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = bitcast i32* %49 to i8*
  tail call void @_ZdlPv(i8* %55) #9
  br label %56

56:                                               ; preds = %47, %51
  %57 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 4, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 4, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #9
  br label %65

65:                                               ; preds = %56, %60
  %66 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 3, i32 0, i32 0
  %67 = load i32*, i32** %66, align 8
  %68 = icmp eq i32* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %65
  %70 = ptrtoint i32* %67 to i64
  %71 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 3, i32 0, i32 1
  %72 = bitcast i32** %71 to i64*
  store i64 %70, i64* %72, align 8
  %73 = bitcast i32* %67 to i8*
  tail call void @_ZdlPv(i8* %73) #9
  br label %74

74:                                               ; preds = %65, %69
  %75 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 1, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = icmp eq i32* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %74
  %79 = ptrtoint i32* %76 to i64
  %80 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 1, i32 0, i32 1
  %81 = bitcast i32** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = bitcast i32* %76 to i8*
  tail call void @_ZdlPv(i8* %82) #9
  br label %83

83:                                               ; preds = %74, %78
  %84 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 0, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = icmp eq i32* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %83
  %88 = ptrtoint i32* %85 to i64
  %89 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter", %"class.tflite::optimize::sparsity::FormatConverter"* %0, i64 0, i32 0, i32 0, i32 1
  %90 = bitcast i32** %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = bitcast i32* %85 to i8*
  tail call void @_ZdlPv(i8* %91) #9
  br label %92

92:                                               ; preds = %83, %87
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare void @_ZN6tflite8optimize8sparsity15FormatConverterIaEC1ERKNSt3__16vectorIiNS4_9allocatorIiEEEERK14TfLiteSparsity(%"class.tflite::optimize::sparsity::FormatConverter.22"*, %"class.std::__1::vector"* dereferenceable(24), %struct.TfLiteSparsity* dereferenceable(32)) unnamed_addr #5

declare i32 @_ZN6tflite8optimize8sparsity15FormatConverterIaE13SparseToDenseEPKa(%"class.tflite::optimize::sparsity::FormatConverter.22"*, i8*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite8optimize8sparsity15FormatConverterIaED2Ev(%"class.tflite::optimize::sparsity::FormatConverter.22"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 8, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  store i64 %6, i64* %8, align 8
  tail call void @_ZdlPv(i8* nonnull %3) #9
  br label %9

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 7
  %11 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %11, align 8
  %13 = icmp eq %"class.std::__1::vector"* %12, null
  br i1 %13, label %37, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.std::__1::vector"* %12 to i8*
  %16 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 7, i32 0, i32 1
  %17 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %16, align 8
  %18 = icmp eq %"class.std::__1::vector"* %17, %12
  br i1 %18, label %35, label %19

19:                                               ; preds = %14, %30
  %20 = phi %"class.std::__1::vector"* [ %21, %30 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 -1
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %21, i64 0, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = icmp eq i32* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %19
  %26 = ptrtoint i32* %23 to i64
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %20, i64 -1, i32 0, i32 1
  %28 = bitcast i32** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = bitcast i32* %23 to i8*
  tail call void @_ZdlPv(i8* %29) #9
  br label %30

30:                                               ; preds = %25, %19
  %31 = icmp eq %"class.std::__1::vector"* %21, %12
  br i1 %31, label %32, label %19

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector.8"* %10 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %14
  %36 = phi i8* [ %34, %32 ], [ %15, %14 ]
  store %"class.std::__1::vector"* %12, %"class.std::__1::vector"** %16, align 8
  tail call void @_ZdlPv(i8* %36) #9
  br label %37

37:                                               ; preds = %9, %35
  %38 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 6, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = icmp eq i32* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = ptrtoint i32* %39 to i64
  %43 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 6, i32 0, i32 1
  %44 = bitcast i32** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = bitcast i32* %39 to i8*
  tail call void @_ZdlPv(i8* %45) #9
  br label %46

46:                                               ; preds = %37, %41
  %47 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 5, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = ptrtoint i32* %48 to i64
  %52 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 5, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = bitcast i32* %48 to i8*
  tail call void @_ZdlPv(i8* %54) #9
  br label %55

55:                                               ; preds = %46, %50
  %56 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 4, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = icmp eq i32* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = ptrtoint i32* %57 to i64
  %61 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 4, i32 0, i32 1
  %62 = bitcast i32** %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = bitcast i32* %57 to i8*
  tail call void @_ZdlPv(i8* %63) #9
  br label %64

64:                                               ; preds = %55, %59
  %65 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 3, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = icmp eq i32* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = ptrtoint i32* %66 to i64
  %70 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 3, i32 0, i32 1
  %71 = bitcast i32** %70 to i64*
  store i64 %69, i64* %71, align 8
  %72 = bitcast i32* %66 to i8*
  tail call void @_ZdlPv(i8* %72) #9
  br label %73

73:                                               ; preds = %64, %68
  %74 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 1, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = icmp eq i32* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %73
  %78 = ptrtoint i32* %75 to i64
  %79 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 1, i32 0, i32 1
  %80 = bitcast i32** %79 to i64*
  store i64 %78, i64* %80, align 8
  %81 = bitcast i32* %75 to i8*
  tail call void @_ZdlPv(i8* %81) #9
  br label %82

82:                                               ; preds = %73, %77
  %83 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 0, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  %85 = icmp eq i32* %84, null
  br i1 %85, label %91, label %86

86:                                               ; preds = %82
  %87 = ptrtoint i32* %84 to i64
  %88 = getelementptr inbounds %"class.tflite::optimize::sparsity::FormatConverter.22", %"class.tflite::optimize::sparsity::FormatConverter.22"* %0, i64 0, i32 0, i32 0, i32 1
  %89 = bitcast i32** %88 to i64*
  store i64 %87, i64* %89, align 8
  %90 = bitcast i32* %84 to i8*
  tail call void @_ZdlPv(i8* %90) #9
  br label %91

91:                                               ; preds = %82, %86
  ret void
}

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!5 = distinct !{!5, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!8 = distinct !{!8, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!11 = distinct !{!11, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!14 = distinct !{!14, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN6tflite8optimize8sparsity15FormatConverterIfE7GetDataEv: argument 0"}
!17 = distinct !{!17, !"_ZN6tflite8optimize8sparsity15FormatConverterIfE7GetDataEv"}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.isvectorized", i32 1}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.unroll.disable"}
!22 = distinct !{!22, !23, !19}
!23 = !{!"llvm.loop.unroll.runtime.disable"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN6tflite8optimize8sparsity15FormatConverterIaE7GetDataEv: argument 0"}
!26 = distinct !{!26, !"_ZN6tflite8optimize8sparsity15FormatConverterIaE7GetDataEv"}
!27 = distinct !{!27, !19}
!28 = distinct !{!28, !21}
!29 = distinct !{!29, !23, !19}
