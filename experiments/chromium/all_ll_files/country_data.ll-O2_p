; ModuleID = '../../components/autofill/core/browser/geo/country_data.cc'
source_filename = "../../components/autofill/core/browser/geo/country_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" = type { [3 x i8], i32 }
%"struct.autofill::(anonymous namespace)::StaticCountryCodeAliasData" = type { [3 x i8], [3 x i8] }
%"class.autofill::CountryDataMap" = type { %"class.std::__1::map", %"class.std::__1::map.4", %"class.std::__1::vector" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.19", %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::allocator.21"* }
%"class.std::__1::allocator.21" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::pair.26" = type <{ i8*, i32, [4 x i8] }>
%"struct.std::__1::pair.30" = type <{ %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type <{ %"class.std::__1::basic_string", i32, [4 x i8] }>
%"struct.std::__1::pair.42" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node.46" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.47" }
%"struct.std::__1::__value_type.47" = type { %"struct.std::__1::pair.25" }
%"struct.std::__1::pair.25" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }

$_ZN4base9SingletonIN8autofill14CountryDataMapENS_22DefaultSingletonTraitsIS2_EES2_E3getEv = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE26__emplace_hint_unique_implIJNS_4pairIPKcS9_EEEEENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEENS_21__tree_const_iteratorISA_SQ_lEEDpOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalISA_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_SJ_EElEERPNS_15__tree_end_nodeISL_EESM_RKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalISA_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

$_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE14__count_uniqueIS7_EEmRKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZN4base9SingletonIN8autofill14CountryDataMapENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv = comdat any

$_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_ = comdat any

$_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE14__count_uniqueIS7_EEmRKT_ = comdat any

$_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_ = comdat any

$_ZN4base9SingletonIN8autofill14CountryDataMapENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E = comdat any

@_ZN8autofill12_GLOBAL__N_137kCountryAddressImportRequirementsDataE = internal constant [250 x %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"] [%"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"AC\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"AD\00", i32 8 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"AE\00", i32 10 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"AF\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"AG\00", i32 8 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"AI\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"AL\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"AM\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"AO\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"AQ\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"AR\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"AS\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"AT\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"AU\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"AW\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"AX\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"AZ\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BA\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BB\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BD\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BE\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BF\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BG\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BH\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BI\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BJ\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BL\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BM\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BN\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BO\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BQ\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BR\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BS\00", i32 11 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BT\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BV\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BW\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BY\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"BZ\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"CA\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"CC\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"CD\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"CF\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"CG\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"CH\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"CI\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"CK\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"CL\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"CM\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"CN\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"CO\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"CR\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"CS\00", i32 8 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"CV\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"CW\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"CX\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"CY\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"CZ\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"DE\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"DJ\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"DK\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"DM\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"DO\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"DZ\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"EC\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"EE\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"EG\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"EH\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"ER\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"ES\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"ET\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"FI\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"FJ\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"FK\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"FM\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"FO\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"FR\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"GA\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"GB\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"GD\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"GE\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"GF\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"GG\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"GH\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"GI\00", i32 8 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"GL\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"GM\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"GN\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"GP\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"GQ\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"GR\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"GS\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"GT\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"GU\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"GW\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"GY\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"HK\00", i32 10 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"HM\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"HN\00", i32 11 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"HR\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"HT\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"HU\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"ID\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"IE\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"IL\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"IM\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"IN\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"IO\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"IQ\00", i32 11 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"IR\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"IS\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"IT\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"JE\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"JM\00", i32 11 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"JO\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"JP\00", i32 14 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"KE\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"KG\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"KH\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"KI\00", i32 11 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"KM\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"KN\00", i32 11 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"KP\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"KR\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"KW\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"KY\00", i32 10 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"KZ\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"LA\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"LB\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"LC\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"LI\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"LK\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"LR\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"LS\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"LT\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"LU\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"LV\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"LY\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MA\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MC\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MD\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"ME\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MF\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MG\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MH\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MK\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"ML\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MM\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MN\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MO\00", i32 8 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MP\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MQ\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MR\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MS\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MT\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MU\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MV\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MW\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MX\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MY\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"MZ\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"NA\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"NC\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"NE\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"NF\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"NG\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"NI\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"NL\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"NO\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"NP\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"NR\00", i32 10 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"NU\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"NZ\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"OM\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"PA\00", i32 11 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"PE\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"PF\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"PG\00", i32 11 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"PH\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"PK\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"PL\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"PM\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"PN\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"PR\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"PS\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"PT\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"PW\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"PY\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"QA\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"RE\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"RO\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"RS\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"RU\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"RW\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"SA\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"SB\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"SC\00", i32 11 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"SE\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"SG\00", i32 12 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"SH\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"SI\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"SJ\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"SK\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"SL\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"SM\00", i32 12 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"SN\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"SO\00", i32 11 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"SR\00", i32 11 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"SS\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"ST\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"SV\00", i32 11 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"SX\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"SZ\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"TA\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"TC\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"TD\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"TF\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"TG\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"TH\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"TJ\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"TK\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"TL\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"TM\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"TN\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"TO\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"TR\00", i32 11 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"TT\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"TV\00", i32 11 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"TW\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"TZ\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"UA\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"UG\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"UM\00", i32 11 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"US\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"UY\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"UZ\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"VA\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"VC\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"VE\00", i32 11 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"VG\00", i32 8 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"VI\00", i32 15 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"VN\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"VU\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"WF\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"WS\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"XK\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"YE\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"YT\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"ZA\00", i32 13 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"ZM\00", i32 9 }, %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData" { [3 x i8] c"ZW\00", i32 9 }], align 16
@_ZN8autofill12_GLOBAL__N_119kCountryCodeAliasesE = internal constant [1 x %"struct.autofill::(anonymous namespace)::StaticCountryCodeAliasData"] [%"struct.autofill::(anonymous namespace)::StaticCountryCodeAliasData" { [3 x i8] c"UK\00", [3 x i8] c"GB\00" }], align 1
@_ZN4base9SingletonIN8autofill14CountryDataMapENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E = linkonce_odr hidden global i64 0, comdat, align 8

@_ZN8autofill14CountryDataMapC1Ev = hidden unnamed_addr alias void (%"class.autofill::CountryDataMap"*), void (%"class.autofill::CountryDataMap"*)* @_ZN8autofill14CountryDataMapC2Ev
@_ZN8autofill14CountryDataMapD1Ev = hidden unnamed_addr alias void (%"class.autofill::CountryDataMap"*), void (%"class.autofill::CountryDataMap"*)* @_ZN8autofill14CountryDataMapD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.autofill::CountryDataMap"* @_ZN8autofill14CountryDataMap11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = tail call %"class.autofill::CountryDataMap"* @_ZN4base9SingletonIN8autofill14CountryDataMapENS_22DefaultSingletonTraitsIS2_EES2_E3getEv()
  ret %"class.autofill::CountryDataMap"* %1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.autofill::CountryDataMap"* @_ZN4base9SingletonIN8autofill14CountryDataMapENS_22DefaultSingletonTraitsIS2_EES2_E3getEv() local_unnamed_addr #0 comdat align 2 {
  %1 = alloca %"struct.std::__1::__split_buffer", align 8
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %4 = load atomic i64, i64* @_ZN4base9SingletonIN8autofill14CountryDataMapENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E acquire, align 8
  %5 = icmp ugt i64 %4, 1
  br i1 %5, label %109, label %6

6:                                                ; preds = %0
  %7 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN8autofill14CountryDataMapENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E) #10
  br i1 %7, label %8, label %107

8:                                                ; preds = %6
  %9 = tail call i8* @_Znwm(i64 72) #11
  %10 = bitcast i8* %9 to %"class.std::__1::map"*
  tail call fastcc void @_ZN8autofill12_GLOBAL__N_117GetCountryDataMapEv(%"class.std::__1::map"* nonnull sret %10) #10
  %11 = getelementptr inbounds i8, i8* %9, i64 24
  %12 = bitcast i8* %11 to %"class.std::__1::map.4"*
  tail call fastcc void @_ZN8autofill12_GLOBAL__N_122GetCountryCodeAliasMapEv(%"class.std::__1::map.4"* sret %12) #10
  %13 = getelementptr inbounds i8, i8* %9, i64 48
  %14 = bitcast i8* %13 to %"class.std::__1::vector"*
  %15 = getelementptr inbounds i8, i8* %9, i64 56
  %16 = bitcast i8* %15 to %"class.std::__1::basic_string"**
  %17 = getelementptr inbounds i8, i8* %9, i64 64
  %18 = bitcast i8* %17 to %"class.std::__1::basic_string"**
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false)
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector"* %14, i64 250) #10
  %19 = bitcast %"struct.std::__1::__split_buffer"* %1 to i8*
  %20 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %1, i64 0, i32 0
  %21 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %1, i64 0, i32 1
  %22 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %1, i64 0, i32 2
  %23 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %1, i64 0, i32 3, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %1, i64 0, i32 3, i32 1, i32 0
  %25 = bitcast i8* %15 to i64*
  %26 = bitcast i8* %13 to i64*
  %27 = bitcast %"class.std::__1::allocator.21"** %24 to i8**
  %28 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = bitcast %"struct.std::__1::__split_buffer"* %1 to i8*
  br label %32

32:                                               ; preds = %8, %102
  %33 = phi %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"* [ getelementptr inbounds ([250 x %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"], [250 x %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"]* @_ZN8autofill12_GLOBAL__N_137kCountryAddressImportRequirementsDataE, i64 0, i64 0), %8 ], [ %103, %102 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #10, !noalias !2
  %34 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData", %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"* %33, i64 0, i32 0, i64 0
  %35 = call i64 @strlen(i8* %34) #10
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(%"class.std::__1::basic_string"* nonnull %2, i8* %34, i64 %35) #10
  %36 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %16, align 8
  %37 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %38 = icmp ult %"class.std::__1::basic_string"* %36, %37
  %39 = ptrtoint %"class.std::__1::basic_string"* %37 to i64
  br i1 %38, label %40, label %44

40:                                               ; preds = %32
  %41 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* nonnull align 8 %3, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false)
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 1
  %43 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  store i64 %43, i64* %25, align 8
  br label %102

44:                                               ; preds = %32
  %45 = ptrtoint %"class.std::__1::basic_string"* %36 to i64
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 40, i1 false)
  %46 = load i64, i64* %26, align 8
  %47 = sub i64 %45, %46
  %48 = sdiv exact i64 %47, 24
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 768614336404564650
  br i1 %50, label %51, label %53

51:                                               ; preds = %44
  %52 = bitcast i8* %13 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #12
  unreachable

53:                                               ; preds = %44
  %54 = sub i64 %39, %46
  %55 = sdiv exact i64 %54, 24
  %56 = icmp ult i64 %55, 384307168202282325
  br i1 %56, label %58, label %57

57:                                               ; preds = %53
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %23, align 8
  store i8* %17, i8** %27, align 8
  br label %63

58:                                               ; preds = %53
  %59 = shl nsw i64 %55, 1
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %23, align 8
  store i8* %17, i8** %27, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %68, label %63

63:                                               ; preds = %58, %57
  %64 = phi i64 [ 768614336404564650, %57 ], [ %61, %58 ]
  %65 = mul i64 %64, 24
  %66 = call i8* @_Znwm(i64 %65) #11
  %67 = bitcast i8* %66 to %"class.std::__1::basic_string"*
  br label %68

68:                                               ; preds = %58, %63
  %69 = phi i64 [ %64, %63 ], [ 0, %58 ]
  %70 = phi %"class.std::__1::basic_string"* [ %67, %63 ], [ null, %58 ]
  store %"class.std::__1::basic_string"* %70, %"class.std::__1::basic_string"** %20, align 8
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 %48
  store %"class.std::__1::basic_string"* %71, %"class.std::__1::basic_string"** %21, align 8
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 %69
  store %"class.std::__1::basic_string"* %72, %"class.std::__1::basic_string"** %23, align 8
  %73 = bitcast %"class.std::__1::basic_string"* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* nonnull align 8 %3, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 24, i1 false)
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 1
  store %"class.std::__1::basic_string"* %74, %"class.std::__1::basic_string"** %22, align 8
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(%"class.std::__1::vector"* %14, %"struct.std::__1::__split_buffer"* nonnull dereferenceable(40) %1) #10
  %75 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %21, align 8
  %76 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  %77 = icmp eq %"class.std::__1::basic_string"* %76, %75
  br i1 %77, label %92, label %78

78:                                               ; preds = %68, %89
  %79 = phi %"class.std::__1::basic_string"* [ %90, %89 ], [ %76, %68 ]
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 -1
  store %"class.std::__1::basic_string"* %80, %"class.std::__1::basic_string"** %22, align 8
  %81 = bitcast %"class.std::__1::basic_string"* %80 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %87) #11
  %88 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  br label %89

89:                                               ; preds = %78, %85
  %90 = phi %"class.std::__1::basic_string"* [ %80, %78 ], [ %88, %85 ]
  %91 = icmp eq %"class.std::__1::basic_string"* %90, %75
  br i1 %91, label %92, label %78

92:                                               ; preds = %89, %68
  %93 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %20, align 8
  %94 = icmp eq %"class.std::__1::basic_string"* %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %92
  %96 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  call void @_ZdlPv(i8* %96) #11
  br label %97

97:                                               ; preds = %95, %92
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #10
  %98 = load i8, i8* %29, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %97
  %101 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %101) #11
  br label %102

102:                                              ; preds = %40, %97, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #10, !noalias !2
  %103 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData", %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"* %33, i64 1
  %104 = icmp eq %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"* %103, getelementptr inbounds ([250 x %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"], [250 x %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"]* @_ZN8autofill12_GLOBAL__N_137kCountryAddressImportRequirementsDataE, i64 1, i64 0)
  br i1 %104, label %105, label %32

105:                                              ; preds = %102
  %106 = ptrtoint i8* %9 to i64
  call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN8autofill14CountryDataMapENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E, i64 %106, void (i8*)* nonnull @_ZN4base9SingletonIN8autofill14CountryDataMapENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv, i8* null) #10
  br label %109

107:                                              ; preds = %6
  %108 = load atomic i64, i64* @_ZN4base9SingletonIN8autofill14CountryDataMapENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E acquire, align 8
  br label %109

109:                                              ; preds = %0, %105, %107
  %110 = phi i64 [ %4, %0 ], [ %106, %105 ], [ %108, %107 ]
  %111 = inttoptr i64 %110 to %"class.autofill::CountryDataMap"*
  ret %"class.autofill::CountryDataMap"* %111
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill14CountryDataMapC2Ev(%"class.autofill::CountryDataMap"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %0, i64 0, i32 0
  tail call fastcc void @_ZN8autofill12_GLOBAL__N_117GetCountryDataMapEv(%"class.std::__1::map"* sret %3)
  %4 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %0, i64 0, i32 1
  tail call fastcc void @_ZN8autofill12_GLOBAL__N_122GetCountryCodeAliasMapEv(%"class.std::__1::map.4"* sret %4)
  %5 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %0, i64 0, i32 2, i32 0, i32 1
  %7 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #10, !alias.scope !5
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector"* %5, i64 250) #10
  %9 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = bitcast %"class.std::__1::basic_string"** %6 to i64*
  br label %16

16:                                               ; preds = %50, %1
  %17 = phi %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"* [ getelementptr inbounds ([250 x %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"], [250 x %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"]* @_ZN8autofill12_GLOBAL__N_137kCountryAddressImportRequirementsDataE, i64 0, i64 0), %1 ], [ %51, %50 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10, !noalias !5
  %18 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData", %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"* %17, i64 0, i32 0, i64 0
  %19 = call i64 @strlen(i8* %18) #10
  %20 = icmp ugt i64 %19, -17
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = bitcast %"class.std::__1::basic_string"* %2 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %22) #12
  unreachable

23:                                               ; preds = %16
  %24 = icmp ult i64 %19, 23
  br i1 %24, label %30, label %25

25:                                               ; preds = %23
  %26 = add nuw i64 %19, 16
  %27 = and i64 %26, -16
  %28 = call i8* @_Znwm(i64 %27) #11
  store i8* %28, i8** %10, align 8, !noalias !5
  %29 = or i64 %27, -9223372036854775808
  store i64 %29, i64* %11, align 8, !noalias !5
  store i64 %19, i64* %12, align 8, !noalias !5
  br label %33

30:                                               ; preds = %23
  %31 = trunc i64 %19 to i8
  store i8 %31, i8* %14, align 1, !noalias !5
  %32 = icmp eq i64 %19, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %30, %25
  %34 = phi i8* [ %28, %25 ], [ %9, %30 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* align 1 %18, i64 %19, i1 false) #10
  br label %35

35:                                               ; preds = %33, %30
  %36 = phi i8* [ %9, %30 ], [ %34, %33 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 %19
  store i8 0, i8* %37, align 1, !noalias !5
  %38 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %6, align 8, !alias.scope !5
  %39 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8, !alias.scope !5
  %40 = icmp ult %"class.std::__1::basic_string"* %38, %39
  br i1 %40, label %41, label %45

41:                                               ; preds = %35
  %42 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* nonnull align 8 %9, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #10, !noalias !5
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 1
  %44 = ptrtoint %"class.std::__1::basic_string"* %43 to i64
  store i64 %44, i64* %15, align 8, !alias.scope !5
  br label %50

45:                                               ; preds = %35
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"* %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %2) #10
  %46 = load i8, i8* %14, align 1, !noalias !5
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %45
  %49 = load i8*, i8** %10, align 8, !noalias !5
  call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %48, %45, %41
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10, !noalias !5
  %51 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData", %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"* %17, i64 1
  %52 = icmp eq %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"* %51, getelementptr inbounds ([250 x %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"], [250 x %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"]* @_ZN8autofill12_GLOBAL__N_137kCountryAddressImportRequirementsDataE, i64 1, i64 0)
  br i1 %52, label %53, label %16

53:                                               ; preds = %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8autofill12_GLOBAL__N_117GetCountryDataMapEv(%"class.std::__1::map"* noalias sret) unnamed_addr #0 {
  %2 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %3 = alloca { i8*, i32 }, align 8
  %4 = bitcast { i8*, i32 }* %3 to %"struct.std::__1::pair.26"*
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"struct.std::__1::pair.30", align 8
  %7 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_node_base"** %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %10, %"class.std::__1::__tree_end_node"** %7, align 8
  %12 = bitcast { i8*, i32 }* %3 to i8*
  %13 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i64 0, i32 0
  %14 = getelementptr inbounds { i8*, i32 }, { i8*, i32 }* %3, i64 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0
  br label %37

16:                                               ; preds = %37
  %17 = call i8** @_ZN6icu_696Locale15getISOCountriesEv() #10
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %112, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %25 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = bitcast %"struct.std::__1::pair.30"* %6 to i8*
  %28 = getelementptr inbounds %"struct.std::__1::pair.30", %"struct.std::__1::pair.30"* %6, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.std::__1::pair.30", %"struct.std::__1::pair.30"* %6, i64 0, i32 0
  %30 = bitcast %"class.std::__1::__tree_end_node"** %2 to i8*
  %31 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  %32 = bitcast %"class.std::__1::map"* %0 to i64*
  %33 = bitcast %"struct.std::__1::pair.30"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = getelementptr inbounds %"struct.std::__1::pair.30", %"struct.std::__1::pair.30"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  br label %45

37:                                               ; preds = %1, %37
  %38 = phi %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"* [ getelementptr inbounds ([250 x %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"], [250 x %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"]* @_ZN8autofill12_GLOBAL__N_137kCountryAddressImportRequirementsDataE, i64 0, i64 0), %1 ], [ %43, %37 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #10
  %39 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData", %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"* %38, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData", %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"* %38, i64 0, i32 0, i64 0
  %41 = load i32, i32* %39, align 4
  store i8* %40, i8** %13, align 8
  store i32 %41, i32* %14, align 8
  %42 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE26__emplace_hint_unique_implIJNS_4pairIPKcS9_EEEEENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEENS_21__tree_const_iteratorISA_SQ_lEEDpOT_(%"class.std::__1::__tree"* %15, %"class.std::__1::__tree_end_node"* %10, %"struct.std::__1::pair.26"* nonnull dereferenceable(16) %4) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #10
  %43 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData", %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"* %38, i64 1
  %44 = icmp eq %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"* %43, getelementptr inbounds ([250 x %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"], [250 x %"struct.autofill::(anonymous namespace)::StaticCountryAddressImportRequirementsData"]* @_ZN8autofill12_GLOBAL__N_137kCountryAddressImportRequirementsDataE, i64 1, i64 0)
  br i1 %44, label %16, label %37

45:                                               ; preds = %20, %108
  %46 = phi i8** [ %17, %20 ], [ %109, %108 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  %47 = load i8*, i8** %46, align 8
  %48 = call i64 @strlen(i8* %47) #10
  %49 = icmp ugt i64 %48, -17
  br i1 %49, label %50, label %52

50:                                               ; preds = %45
  %51 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %51) #12
  unreachable

52:                                               ; preds = %45
  %53 = icmp ult i64 %48, 23
  br i1 %53, label %59, label %54

54:                                               ; preds = %52
  %55 = add nuw i64 %48, 16
  %56 = and i64 %55, -16
  %57 = call i8* @_Znwm(i64 %56) #11
  store i8* %57, i8** %22, align 8
  %58 = or i64 %56, -9223372036854775808
  store i64 %58, i64* %24, align 8
  store i64 %48, i64* %23, align 8
  br label %62

59:                                               ; preds = %52
  %60 = trunc i64 %48 to i8
  store i8 %60, i8* %26, align 1
  %61 = icmp eq i64 %48, 0
  br i1 %61, label %64, label %62

62:                                               ; preds = %59, %54
  %63 = phi i8* [ %57, %54 ], [ %21, %59 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %63, i8* align 1 %47, i64 %48, i1 false) #10
  br label %64

64:                                               ; preds = %59, %62
  %65 = phi i8* [ %21, %59 ], [ %63, %62 ]
  %66 = getelementptr inbounds i8, i8* %65, i64 %48
  store i8 0, i8* %66, align 1
  %67 = call i64 @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE14__count_uniqueIS7_EEmRKT_(%"class.std::__1::__tree"* %15, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #10
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %103

69:                                               ; preds = %64
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* nonnull align 8 %21, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 24, i1 false) #10, !noalias !8
  store i32 15, i32* %28, align 8, !alias.scope !8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #10
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %2, align 8
  %70 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree"* %15, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %29) #10
  %71 = bitcast %"class.std::__1::__tree_node_base"** %70 to %"class.std::__1::__tree_node"**
  %72 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node"* %72, null
  br i1 %73, label %74, label %97

74:                                               ; preds = %69
  %75 = call i8* @_Znwm(i64 64) #11, !noalias !11
  %76 = getelementptr inbounds i8, i8* %75, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* nonnull align 8 %27, i64 24, i1 false) #10, !noalias !11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 24, i1 false) #10, !noalias !11
  %77 = getelementptr inbounds i8, i8* %75, i64 56
  %78 = bitcast i8* %77 to i32*
  %79 = load i32, i32* %28, align 8, !noalias !11
  store i32 %79, i32* %78, align 8, !noalias !11
  %80 = load i64, i64* %31, align 8
  %81 = bitcast i8* %75 to %"class.std::__1::__tree_node_base"*
  %82 = getelementptr inbounds i8, i8* %75, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 0, i64 16, i1 false) #10
  %83 = bitcast i8* %82 to i64*
  store i64 %80, i64* %83, align 8
  %84 = bitcast %"class.std::__1::__tree_node_base"** %70 to i8**
  store i8* %75, i8** %84, align 8
  %85 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %7, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %85, i64 0, i32 0
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %87, null
  br i1 %88, label %92, label %89

89:                                               ; preds = %74
  %90 = ptrtoint %"class.std::__1::__tree_node_base"* %87 to i64
  store i64 %90, i64* %32, align 8
  %91 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %70, align 8
  br label %92

92:                                               ; preds = %89, %74
  %93 = phi %"class.std::__1::__tree_node_base"* [ %81, %74 ], [ %91, %89 ]
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %8, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %94, %"class.std::__1::__tree_node_base"* %93) #10
  %95 = load i64, i64* %9, align 8
  %96 = add i64 %95, 1
  store i64 %96, i64* %9, align 8
  br label %97

97:                                               ; preds = %69, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #10
  %98 = load i8, i8* %34, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %97
  %101 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %101) #11
  br label %102

102:                                              ; preds = %97, %100
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #10
  br label %103

103:                                              ; preds = %64, %102
  %104 = load i8, i8* %26, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %103
  %107 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %107) #11
  br label %108

108:                                              ; preds = %103, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #10
  %109 = getelementptr inbounds i8*, i8** %46, i64 1
  %110 = load i8*, i8** %109, align 8
  %111 = icmp eq i8* %110, null
  br i1 %111, label %112, label %45

112:                                              ; preds = %108, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8autofill12_GLOBAL__N_122GetCountryCodeAliasMapEv(%"class.std::__1::map.4"* noalias sret) unnamed_addr #0 {
  %2 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %3 = alloca %"struct.std::__1::pair.42", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_node_base"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #10
  store %"class.std::__1::__tree_end_node"* %9, %"class.std::__1::__tree_end_node"** %6, align 8
  %11 = bitcast %"struct.std::__1::pair.42"* %3 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = getelementptr inbounds %"struct.std::__1::pair.42", %"struct.std::__1::pair.42"* %3, i64 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  %26 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %0, i64 0, i32 0
  %27 = getelementptr inbounds %"struct.std::__1::pair.42", %"struct.std::__1::pair.42"* %3, i64 0, i32 0
  %28 = bitcast %"class.std::__1::__tree_end_node"** %2 to i8*
  %29 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  %30 = bitcast %"class.std::__1::map.4"* %0 to i64*
  %31 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"struct.std::__1::pair.42"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = getelementptr inbounds %"struct.std::__1::pair.42", %"struct.std::__1::pair.42"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #10
  %37 = call i64 @strlen(i8* getelementptr inbounds ([1 x %"struct.autofill::(anonymous namespace)::StaticCountryCodeAliasData"], [1 x %"struct.autofill::(anonymous namespace)::StaticCountryCodeAliasData"]* @_ZN8autofill12_GLOBAL__N_119kCountryCodeAliasesE, i64 0, i64 0, i32 0, i64 0)) #10
  %38 = icmp ugt i64 %37, -17
  br i1 %38, label %39, label %41

39:                                               ; preds = %1
  %40 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %40) #12
  unreachable

41:                                               ; preds = %1
  %42 = icmp ult i64 %37, 23
  br i1 %42, label %48, label %43

43:                                               ; preds = %41
  %44 = add nuw i64 %37, 16
  %45 = and i64 %44, -16
  %46 = call i8* @_Znwm(i64 %45) #11
  store i8* %46, i8** %13, align 8
  %47 = or i64 %45, -9223372036854775808
  store i64 %47, i64* %14, align 8
  store i64 %37, i64* %15, align 8
  br label %51

48:                                               ; preds = %41
  %49 = trunc i64 %37 to i8
  store i8 %49, i8* %17, align 1
  %50 = icmp eq i64 %37, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %48, %43
  %52 = phi i8* [ %46, %43 ], [ %12, %48 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %52, i8* align 1 getelementptr inbounds ([1 x %"struct.autofill::(anonymous namespace)::StaticCountryCodeAliasData"], [1 x %"struct.autofill::(anonymous namespace)::StaticCountryCodeAliasData"]* @_ZN8autofill12_GLOBAL__N_119kCountryCodeAliasesE, i64 0, i64 0, i32 0, i64 0), i64 %37, i1 false) #10
  br label %53

53:                                               ; preds = %48, %51
  %54 = phi i8* [ %12, %48 ], [ %52, %51 ]
  %55 = getelementptr inbounds i8, i8* %54, i64 %37
  store i8 0, i8* %55, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #10
  %56 = call i64 @strlen(i8* getelementptr inbounds ([1 x %"struct.autofill::(anonymous namespace)::StaticCountryCodeAliasData"], [1 x %"struct.autofill::(anonymous namespace)::StaticCountryCodeAliasData"]* @_ZN8autofill12_GLOBAL__N_119kCountryCodeAliasesE, i64 0, i64 0, i32 1, i64 0)) #10
  %57 = icmp ugt i64 %56, -17
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %59) #12
  unreachable

60:                                               ; preds = %53
  %61 = icmp ult i64 %56, 23
  br i1 %61, label %67, label %62

62:                                               ; preds = %60
  %63 = add nuw i64 %56, 16
  %64 = and i64 %63, -16
  %65 = call i8* @_Znwm(i64 %64) #11
  store i8* %65, i8** %19, align 8
  %66 = or i64 %64, -9223372036854775808
  store i64 %66, i64* %20, align 8
  store i64 %56, i64* %21, align 8
  br label %70

67:                                               ; preds = %60
  %68 = trunc i64 %56 to i8
  store i8 %68, i8* %23, align 1
  %69 = icmp eq i64 %56, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %67, %62
  %71 = phi i8* [ %65, %62 ], [ %18, %67 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %71, i8* align 1 getelementptr inbounds ([1 x %"struct.autofill::(anonymous namespace)::StaticCountryCodeAliasData"], [1 x %"struct.autofill::(anonymous namespace)::StaticCountryCodeAliasData"]* @_ZN8autofill12_GLOBAL__N_119kCountryCodeAliasesE, i64 0, i64 0, i32 1, i64 0), i64 %56, i1 false) #10
  br label %72

72:                                               ; preds = %67, %70
  %73 = phi i8* [ %18, %67 ], [ %71, %70 ]
  %74 = getelementptr inbounds i8, i8* %73, i64 %56
  store i8 0, i8* %74, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* nonnull align 8 %12, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #10, !noalias !14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* nonnull align 8 %18, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 24, i1 false) #10, !noalias !14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %2, align 8
  %75 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree.5"* %26, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %27) #10
  %76 = bitcast %"class.std::__1::__tree_node_base"** %75 to %"class.std::__1::__tree_node.46"**
  %77 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** %76, align 8
  %78 = icmp eq %"class.std::__1::__tree_node.46"* %77, null
  br i1 %78, label %79, label %100

79:                                               ; preds = %72
  %80 = call i8* @_Znwm(i64 80) #11, !noalias !17
  %81 = getelementptr inbounds i8, i8* %80, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* nonnull align 8 %11, i64 24, i1 false) #10, !noalias !17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #10, !noalias !17
  %82 = getelementptr inbounds i8, i8* %80, i64 56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %25, i64 24, i1 false) #10, !noalias !17
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #10, !noalias !17
  %83 = load i64, i64* %29, align 8
  %84 = bitcast i8* %80 to %"class.std::__1::__tree_node_base"*
  %85 = getelementptr inbounds i8, i8* %80, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 16, i1 false) #10
  %86 = bitcast i8* %85 to i64*
  store i64 %83, i64* %86, align 8
  %87 = bitcast %"class.std::__1::__tree_node_base"** %75 to i8**
  store i8* %80, i8** %87, align 8
  %88 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %6, align 8
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %88, i64 0, i32 0
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = icmp eq %"class.std::__1::__tree_node_base"* %90, null
  br i1 %91, label %95, label %92

92:                                               ; preds = %79
  %93 = ptrtoint %"class.std::__1::__tree_node_base"* %90 to i64
  store i64 %93, i64* %30, align 8
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  br label %95

95:                                               ; preds = %92, %79
  %96 = phi %"class.std::__1::__tree_node_base"* [ %84, %79 ], [ %94, %92 ]
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %97, %"class.std::__1::__tree_node_base"* %96) #10
  %98 = load i64, i64* %8, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %8, align 8
  br label %100

100:                                              ; preds = %72, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  %101 = load i8, i8* %32, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %100
  %104 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %104) #11
  br label %105

105:                                              ; preds = %103, %100
  %106 = load i8, i8* %35, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %105
  %109 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %109) #11
  br label %110

110:                                              ; preds = %105, %108
  %111 = load i8, i8* %23, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %115

113:                                              ; preds = %110
  %114 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %114) #11
  br label %115

115:                                              ; preds = %110, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #10
  %116 = load i8, i8* %17, align 1
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %115
  %119 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %119) #11
  br label %120

120:                                              ; preds = %115, %118
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8autofill14CountryDataMapD2Ev(%"class.autofill::CountryDataMap"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %8 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"class.std::__1::basic_string"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 -1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #11
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.std::__1::basic_string"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %1, %26
  %29 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %0, i64 0, i32 1, i32 0
  %30 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %31 = bitcast %"class.std::__1::__tree_end_node"* %30 to %"class.std::__1::__tree_node.46"**
  %32 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** %31, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.5"* %29, %"class.std::__1::__tree_node.46"* %32) #10
  %33 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %0, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.std::__1::__tree_node"**
  %36 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %35, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %33, %"class.std::__1::__tree_node"* %36) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8autofill14CountryDataMap33HasRequiredFieldsForAddressImportERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.autofill::CountryDataMap"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %0, i64 0, i32 0, i32 0
  %4 = tail call i64 @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE14__count_uniqueIS7_EEmRKT_(%"class.std::__1::__tree"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %1) #10
  %5 = icmp ne i64 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK8autofill14CountryDataMap33GetRequiredFieldsForAddressImportERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.autofill::CountryDataMap"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %0, i64 0, i32 0, i32 0
  %5 = tail call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_(%"class.std::__1::__tree"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %1) #10
  %6 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %5, %6
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 7
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to i32*
  %11 = load i32, i32* %10, align 8
  br label %28

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  %14 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  store i8 2, i8* %15, align 1
  %16 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  store i16 21333, i16* %16, align 8
  %17 = getelementptr inbounds i8, i8* %13, i64 2
  store i8 0, i8* %17, align 2
  %18 = call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_(%"class.std::__1::__tree"* %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #10
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 7
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to i32*
  %21 = load i32, i32* %20, align 8
  %22 = load i8, i8* %15, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %12
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %12, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  br label %28

28:                                               ; preds = %27, %8
  %29 = phi i32 [ %11, %8 ], [ %21, %27 ]
  ret i32 %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8autofill14CountryDataMap19HasCountryCodeAliasERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.autofill::CountryDataMap"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %0, i64 0, i32 1, i32 0
  %4 = tail call i64 @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE14__count_uniqueIS7_EEmRKT_(%"class.std::__1::__tree.5"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %1) #10
  %5 = icmp ne i64 %4, 0
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8autofill14CountryDataMap22GetCountryCodeForAliasERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* noalias sret, %"class.autofill::CountryDataMap"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %1, i64 0, i32 1, i32 0
  %5 = tail call %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree.5"* %4, %"class.std::__1::basic_string"* dereferenceable(24) %2) #10
  %6 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %5, %6
  br i1 %7, label %23, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 7
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %16 = bitcast %"class.std::__1::__tree_end_node"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false) #10
  br label %25

17:                                               ; preds = %8
  %18 = bitcast %"class.std::__1::__tree_end_node"* %9 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 8
  %21 = bitcast %"class.std::__1::__tree_end_node"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %19, i64 %22) #10
  br label %25

23:                                               ; preds = %3
  %24 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #10
  br label %25

25:                                               ; preds = %17, %14, %23
  ret void
}

declare i8** @_ZN6icu_696Locale15getISOCountriesEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE26__emplace_hint_unique_implIJNS_4pairIPKcS9_EEEEENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEENS_21__tree_const_iteratorISA_SQ_lEEDpOT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*, %"struct.std::__1::pair.26"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = alloca %"class.std::__1::__tree_node_base"*, align 8
  %6 = tail call i8* @_Znwm(i64 64) #11, !noalias !20
  %7 = getelementptr inbounds i8, i8* %6, i64 32
  %8 = getelementptr inbounds %"struct.std::__1::pair.26", %"struct.std::__1::pair.26"* %2, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8, !noalias !20
  %10 = tail call i64 @strlen(i8* %9) #10, !noalias !20
  %11 = icmp ugt i64 %10, -17
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = bitcast i8* %7 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %13) #12, !noalias !20
  unreachable

14:                                               ; preds = %3
  %15 = icmp ult i64 %10, 23
  br i1 %15, label %26, label %16

16:                                               ; preds = %14
  %17 = add nuw i64 %10, 16
  %18 = and i64 %17, -16
  %19 = tail call i8* @_Znwm(i64 %18) #11, !noalias !20
  %20 = bitcast i8* %7 to i8**
  store i8* %19, i8** %20, align 8, !noalias !20
  %21 = or i64 %18, -9223372036854775808
  %22 = getelementptr inbounds i8, i8* %6, i64 48
  %23 = bitcast i8* %22 to i64*
  store i64 %21, i64* %23, align 8, !noalias !20
  %24 = getelementptr inbounds i8, i8* %6, i64 40
  %25 = bitcast i8* %24 to i64*
  store i64 %10, i64* %25, align 8, !noalias !20
  br label %30

26:                                               ; preds = %14
  %27 = trunc i64 %10 to i8
  %28 = getelementptr inbounds i8, i8* %6, i64 55
  store i8 %27, i8* %28, align 1, !noalias !20
  %29 = icmp eq i64 %10, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %26, %16
  %31 = phi i8* [ %19, %16 ], [ %7, %26 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %31, i8* align 1 %9, i64 %10, i1 false) #10, !noalias !20
  br label %32

32:                                               ; preds = %26, %30
  %33 = phi i8* [ %7, %26 ], [ %31, %30 ]
  %34 = getelementptr inbounds i8, i8* %33, i64 %10
  store i8 0, i8* %34, align 1, !noalias !20
  %35 = getelementptr inbounds i8, i8* %6, i64 56
  %36 = bitcast i8* %35 to i32*
  %37 = getelementptr inbounds %"struct.std::__1::pair.26", %"struct.std::__1::pair.26"* %2, i64 0, i32 1
  %38 = load i32, i32* %37, align 4, !noalias !20
  store i32 %38, i32* %36, align 8, !noalias !20
  %39 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #10
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %4, align 8
  %40 = bitcast %"class.std::__1::__tree_node_base"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10
  store %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*), %"class.std::__1::__tree_node_base"** %5, align 8
  %41 = bitcast i8* %7 to %"struct.std::__1::__value_type"*
  %42 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalISA_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_SJ_EElEERPNS_15__tree_end_nodeISL_EESM_RKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"class.std::__1::__tree_node_base"** nonnull dereferenceable(8) %5, %"struct.std::__1::__value_type"* dereferenceable(32) %41)
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = icmp eq %"class.std::__1::__tree_node_base"* %43, null
  br i1 %44, label %45, label %69

45:                                               ; preds = %32
  %46 = bitcast %"class.std::__1::__tree_end_node"** %4 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast i8* %6 to %"class.std::__1::__tree_node_base"*
  %49 = getelementptr inbounds i8, i8* %6, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #10
  %50 = bitcast i8* %49 to i64*
  store i64 %47, i64* %50, align 8
  %51 = bitcast %"class.std::__1::__tree_node_base"** %42 to i8**
  store i8* %6, i8** %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %53, i64 0, i32 0
  %55 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %54, align 8
  %56 = icmp eq %"class.std::__1::__tree_node_base"* %55, null
  br i1 %56, label %61, label %57

57:                                               ; preds = %45
  %58 = ptrtoint %"class.std::__1::__tree_node_base"* %55 to i64
  %59 = bitcast %"class.std::__1::__tree"* %0 to i64*
  store i64 %58, i64* %59, align 8
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  br label %61

61:                                               ; preds = %57, %45
  %62 = phi %"class.std::__1::__tree_node_base"* [ %48, %45 ], [ %60, %57 ]
  %63 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %64, %"class.std::__1::__tree_node_base"* %62) #10
  %65 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 2, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %65, align 8
  %68 = bitcast i8* %6 to %"class.std::__1::__tree_end_node"*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  br label %79

69:                                               ; preds = %32
  %70 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #10
  %71 = getelementptr inbounds i8, i8* %6, i64 55
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %69
  %75 = getelementptr inbounds i8, i8* %6, i64 32
  %76 = bitcast i8* %75 to i8**
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #11
  br label %78

78:                                               ; preds = %74, %69
  call void @_ZdlPv(i8* nonnull %6) #11
  br label %79

79:                                               ; preds = %61, %78
  %80 = phi %"class.std::__1::__tree_end_node"* [ %68, %61 ], [ %70, %78 ]
  ret %"class.std::__1::__tree_end_node"* %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalISA_EERPNS_16__tree_node_baseIPvEENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_SJ_EElEERPNS_15__tree_end_nodeISL_EESM_RKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::__tree_node_base"** dereferenceable(8), %"struct.std::__1::__value_type"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %6 = ptrtoint %"class.std::__1::__tree_end_node"* %1 to i64
  %7 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %8 = icmp eq %"class.std::__1::__tree_end_node"* %7, %1
  br i1 %8, label %46, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 4
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %13 to i64
  %19 = select i1 %14, i64 %17, i64 %18
  %20 = bitcast %"struct.std::__1::__value_type"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %22 to i64
  %27 = select i1 %23, i64 %25, i64 %26
  %28 = icmp ult i64 %19, %27
  %29 = select i1 %28, i64 %19, i64 %27
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %42, label %31

31:                                               ; preds = %9
  %32 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast %"struct.std::__1::__value_type"* %4 to i8*
  %35 = select i1 %23, i8* %33, i8* %34
  %36 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8*
  %39 = select i1 %14, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %35, i8* %39, i64 %29) #10
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %31, %9
  %43 = icmp ult i64 %27, %19
  br i1 %43, label %46, label %120

44:                                               ; preds = %31
  %45 = icmp slt i32 %40, 0
  br i1 %45, label %46, label %130

46:                                               ; preds = %42, %5, %44
  %47 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 0
  %48 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_end_node"* %48, %1
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  %51 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %50, align 8
  br i1 %49, label %109, label %52

52:                                               ; preds = %46
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %52, %54
  %55 = phi %"class.std::__1::__tree_node_base"* [ %57, %54 ], [ %51, %52 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 1
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, null
  br i1 %58, label %70, label %54

59:                                               ; preds = %52, %59
  %60 = phi %"class.std::__1::__tree_end_node"* [ %64, %59 ], [ %1, %52 ]
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"class.std::__1::__tree_node_base"*
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 2
  %63 = bitcast %"class.std::__1::__tree_end_node"* %62 to %"class.std::__1::__tree_end_node"**
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, %61
  br i1 %67, label %59, label %68

68:                                               ; preds = %59
  %69 = bitcast %"class.std::__1::__tree_end_node"* %64 to %"class.std::__1::__tree_node_base"*
  br label %70

70:                                               ; preds = %54, %68
  %71 = phi %"class.std::__1::__tree_node_base"* [ %69, %68 ], [ %55, %54 ]
  %72 = ptrtoint %"class.std::__1::__tree_node_base"* %71 to i64
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 1
  %74 = bitcast %"struct.std::__1::__value_type"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  %78 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %76 to i64
  %81 = select i1 %77, i64 %79, i64 %80
  %82 = bitcast %"class.std::__1::__tree_node_base"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 1, i32 1
  %87 = bitcast %"class.std::__1::__tree_node_base"** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = zext i8 %84 to i64
  %90 = select i1 %85, i64 %88, i64 %89
  %91 = icmp ult i64 %81, %90
  %92 = select i1 %91, i64 %81, i64 %90
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %105, label %94

94:                                               ; preds = %70
  %95 = bitcast %"class.std::__1::__tree_node_base"* %73 to i8**
  %96 = load i8*, i8** %95, align 8
  %97 = bitcast %"class.std::__1::__tree_node_base"* %73 to i8*
  %98 = select i1 %85, i8* %96, i8* %97
  %99 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = bitcast %"struct.std::__1::__value_type"* %4 to i8*
  %102 = select i1 %77, i8* %100, i8* %101
  %103 = tail call i32 @memcmp(i8* %98, i8* %102, i64 %92) #10
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %94, %70
  %106 = icmp ult i64 %90, %81
  br i1 %106, label %109, label %118

107:                                              ; preds = %94
  %108 = icmp slt i32 %103, 0
  br i1 %108, label %109, label %118

109:                                              ; preds = %46, %105, %107
  %110 = phi i64 [ %72, %107 ], [ %72, %105 ], [ %6, %46 ]
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %51, null
  br i1 %111, label %112, label %114

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %1, %"class.std::__1::__tree_end_node"** %2, align 8
  br label %208

114:                                              ; preds = %109
  %115 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %110, i64* %115, align 8
  %116 = inttoptr i64 %110 to %"class.std::__1::__tree_node_base"*
  %117 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %116, i64 0, i32 1
  br label %208

118:                                              ; preds = %105, %107
  %119 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalISA_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"struct.std::__1::__value_type"* dereferenceable(32) %4)
  br label %208

120:                                              ; preds = %42
  br i1 %30, label %135, label %121

121:                                              ; preds = %120
  %122 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8**
  %123 = load i8*, i8** %122, align 8
  %124 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = bitcast %"class.std::__1::__tree_end_node"* %10 to i8*
  %127 = select i1 %14, i8* %123, i8* %126
  %128 = bitcast %"struct.std::__1::__value_type"* %4 to i8*
  %129 = select i1 %23, i8* %125, i8* %128
  br label %130

130:                                              ; preds = %121, %44
  %131 = phi i8* [ %129, %121 ], [ %35, %44 ]
  %132 = phi i8* [ %127, %121 ], [ %39, %44 ]
  %133 = tail call i32 @memcmp(i8* %132, i8* %131, i64 %29) #10
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %130, %120
  br i1 %28, label %138, label %205

136:                                              ; preds = %130
  %137 = icmp slt i32 %133, 0
  br i1 %137, label %138, label %205

138:                                              ; preds = %135, %136
  %139 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  %141 = icmp eq %"class.std::__1::__tree_node_base"* %140, null
  br i1 %141, label %142, label %150

142:                                              ; preds = %138
  %143 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %144 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %145 = bitcast %"class.std::__1::__tree_end_node"* %144 to %"class.std::__1::__tree_end_node"**
  %146 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %145, align 8
  %147 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %146, i64 0, i32 0
  %148 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %147, align 8
  %149 = icmp eq %"class.std::__1::__tree_node_base"* %148, %143
  br i1 %149, label %166, label %157

150:                                              ; preds = %138, %150
  %151 = phi %"class.std::__1::__tree_node_base"* [ %153, %150 ], [ %140, %138 ]
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %151, i64 0, i32 0, i32 0
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %155, label %150

155:                                              ; preds = %150
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %151, i64 0, i32 0
  br label %166

157:                                              ; preds = %142, %157
  %158 = phi %"class.std::__1::__tree_end_node"** [ %161, %157 ], [ %145, %142 ]
  %159 = bitcast %"class.std::__1::__tree_end_node"** %158 to %"class.std::__1::__tree_node_base"**
  %160 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %159, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %160, i64 0, i32 2
  %162 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %161, align 8
  %163 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %162, i64 0, i32 0
  %164 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %163, align 8
  %165 = icmp eq %"class.std::__1::__tree_node_base"* %164, %160
  br i1 %165, label %166, label %157

166:                                              ; preds = %157, %155, %142
  %167 = phi %"class.std::__1::__tree_end_node"* [ %156, %155 ], [ %146, %142 ], [ %162, %157 ]
  %168 = icmp eq %"class.std::__1::__tree_end_node"* %167, %7
  br i1 %168, label %198, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 4
  %171 = bitcast %"class.std::__1::__tree_end_node"* %170 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %172 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %171, i64 0, i32 1, i32 0
  %173 = load i8, i8* %172, align 1
  %174 = icmp slt i8 %173, 0
  %175 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 5
  %176 = bitcast %"class.std::__1::__tree_end_node"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = zext i8 %173 to i64
  %179 = select i1 %174, i64 %177, i64 %178
  %180 = icmp ult i64 %179, %27
  %181 = select i1 %180, i64 %179, i64 %27
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %194, label %183

183:                                              ; preds = %169
  %184 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load i8*, i8** %184, align 8
  %186 = bitcast %"struct.std::__1::__value_type"* %4 to i8*
  %187 = select i1 %23, i8* %185, i8* %186
  %188 = bitcast %"class.std::__1::__tree_end_node"* %170 to i8**
  %189 = load i8*, i8** %188, align 8
  %190 = bitcast %"class.std::__1::__tree_end_node"* %170 to i8*
  %191 = select i1 %174, i8* %189, i8* %190
  %192 = tail call i32 @memcmp(i8* %187, i8* %191, i64 %181) #10
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %183, %169
  %195 = icmp ult i64 %27, %179
  br i1 %195, label %198, label %203

196:                                              ; preds = %183
  %197 = icmp slt i32 %192, 0
  br i1 %197, label %198, label %203

198:                                              ; preds = %194, %166, %196
  br i1 %141, label %199, label %201

199:                                              ; preds = %198
  %200 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %200, align 8
  br label %208

201:                                              ; preds = %198
  store %"class.std::__1::__tree_end_node"* %167, %"class.std::__1::__tree_end_node"** %2, align 8
  %202 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %167, i64 0, i32 0
  br label %208

203:                                              ; preds = %194, %196
  %204 = tail call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalISA_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_end_node"** dereferenceable(8) %2, %"struct.std::__1::__value_type"* dereferenceable(32) %4)
  br label %208

205:                                              ; preds = %135, %136
  %206 = bitcast %"class.std::__1::__tree_end_node"** %2 to i64*
  store i64 %6, i64* %206, align 8
  %207 = bitcast %"class.std::__1::__tree_node_base"** %3 to i64*
  store i64 %6, i64* %207, align 8
  br label %208

208:                                              ; preds = %199, %201, %203, %112, %114, %118, %205
  %209 = phi %"class.std::__1::__tree_node_base"** [ %3, %205 ], [ %113, %112 ], [ %117, %114 ], [ %119, %118 ], [ %139, %199 ], [ %202, %201 ], [ %204, %203 ]
  ret %"class.std::__1::__tree_node_base"** %209
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalISA_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"struct.std::__1::__value_type"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %82, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"struct.std::__1::__value_type"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"struct.std::__1::__value_type"* %2 to i8*
  br label %20

20:                                               ; preds = %8, %78
  %21 = phi %"class.std::__1::__tree_node"* [ %81, %78 ], [ %6, %8 ]
  %22 = phi %"class.std::__1::__tree_node_base"** [ %80, %78 ], [ %9, %8 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 2
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %31, %17
  %33 = select i1 %32, i64 %31, i64 %17
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %20
  %36 = load i8*, i8** %18, align 8
  %37 = select i1 %13, i8* %36, i8* %19
  %38 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %41 = select i1 %27, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %37, i8* %41, i64 %33) #10
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %35, %20
  %45 = icmp ult i64 %17, %31
  br i1 %45, label %48, label %54

46:                                               ; preds = %35
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %62

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %78

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %84

54:                                               ; preds = %44
  br i1 %34, label %67, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = load i8*, i8** %18, align 8
  %59 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %60 = select i1 %27, i8* %57, i8* %59
  %61 = select i1 %13, i8* %58, i8* %19
  br label %62

62:                                               ; preds = %55, %46
  %63 = phi i8* [ %61, %55 ], [ %37, %46 ]
  %64 = phi i8* [ %60, %55 ], [ %41, %46 ]
  %65 = tail call i32 @memcmp(i8* %64, i8* %63, i64 %33) #10
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %62, %54
  br i1 %32, label %70, label %76

68:                                               ; preds = %62
  %69 = icmp slt i32 %65, 0
  br i1 %69, label %70, label %76

70:                                               ; preds = %67, %68
  %71 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 1
  %72 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  %73 = icmp eq %"class.std::__1::__tree_node_base"* %72, null
  br i1 %73, label %74, label %78

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %75, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %84

76:                                               ; preds = %67, %68
  %77 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %84

78:                                               ; preds = %70, %48
  %79 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %72, %70 ]
  %80 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %71, %70 ]
  %81 = bitcast %"class.std::__1::__tree_node_base"* %79 to %"class.std::__1::__tree_node"*
  br label %20

82:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %84

84:                                               ; preds = %82, %76, %74, %52
  %85 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %71, %74 ], [ %22, %76 ], [ %83, %82 ]
  ret %"class.std::__1::__tree_node_base"** %85
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !23
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !23
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !23
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 2
  %26 = bitcast %"struct.std::__1::__value_type"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #10
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"struct.std::__1::__value_type"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #10
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE12__find_equalIS7_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISJ_EERKT_(%"class.std::__1::__tree.5"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.5", %"class.std::__1::__tree.5"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.46"**
  %6 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.46"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.5", %"class.std::__1::__tree.5"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node.46"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %23, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__value_type.47"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"struct.std::__1::__value_type.47", %"struct.std::__1::__value_type.47"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"struct.std::__1::__value_type.47"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #10
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"struct.std::__1::__value_type.47", %"struct.std::__1::__value_type.47"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"struct.std::__1::__value_type.47"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #10
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node.46"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE7reserveEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.std::__1::basic_string"*
  br i1 %10, label %12, label %62

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  %15 = icmp ugt i64 %1, 768614336404564650
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #12
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 24
  %21 = mul i64 %1, 24
  %22 = tail call i8* @_Znwm(i64 %21) #11
  %23 = bitcast i8* %22 to %"class.std::__1::basic_string"*
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 %20
  %25 = ptrtoint %"class.std::__1::basic_string"* %24 to i64
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 %1
  %27 = ptrtoint %"class.std::__1::basic_string"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.std::__1::basic_string"*
  %29 = icmp eq %"class.std::__1::basic_string"* %28, %11
  br i1 %29, label %30, label %31

30:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %57

31:                                               ; preds = %17, %31
  %32 = phi %"class.std::__1::basic_string"* [ %34, %31 ], [ %24, %17 ]
  %33 = phi %"class.std::__1::basic_string"* [ %35, %31 ], [ %28, %17 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 -1
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 -1
  %36 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %37 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #10
  %38 = icmp eq %"class.std::__1::basic_string"* %35, %11
  br i1 %38, label %39, label %31

39:                                               ; preds = %31
  %40 = ptrtoint %"class.std::__1::basic_string"* %34 to i64
  %41 = load i64, i64* %6, align 8
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %43 = inttoptr i64 %41 to %"class.std::__1::basic_string"*
  store i64 %40, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %42, %43
  br i1 %44, label %57, label %45

45:                                               ; preds = %39, %55
  %46 = phi %"class.std::__1::basic_string"* [ %47, %55 ], [ %42, %39 ]
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 -1
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  tail call void @_ZdlPv(i8* %54) #11
  br label %55

55:                                               ; preds = %52, %45
  %56 = icmp eq %"class.std::__1::basic_string"* %47, %43
  br i1 %56, label %57, label %45

57:                                               ; preds = %55, %30, %39
  %58 = phi i64 [ %7, %30 ], [ %41, %39 ], [ %41, %55 ]
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %57
  %61 = inttoptr i64 %58 to i8*
  tail call void @_ZdlPv(i8* %61) #11
  br label %62

62:                                               ; preds = %60, %57, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE(%"class.std::__1::vector"*, %"struct.std::__1::__split_buffer"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %7 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %1, i64 0, i32 1
  %8 = icmp eq %"class.std::__1::basic_string"* %6, %4
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = ptrtoint %"class.std::__1::basic_string"* %4 to i64
  %11 = bitcast %"class.std::__1::basic_string"** %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %0 to i64*
  br label %31

14:                                               ; preds = %2
  %15 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  br label %16

16:                                               ; preds = %16, %14
  %17 = phi %"class.std::__1::basic_string"* [ %24, %16 ], [ %15, %14 ]
  %18 = phi %"class.std::__1::basic_string"* [ %20, %16 ], [ %6, %14 ]
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 -1
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 -1
  %21 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #10
  %23 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 -1
  store %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"** %7, align 8
  %25 = icmp eq %"class.std::__1::basic_string"* %20, %4
  br i1 %25, label %26, label %16

26:                                               ; preds = %16
  %27 = ptrtoint %"class.std::__1::basic_string"* %24 to i64
  %28 = bitcast %"class.std::__1::vector"* %0 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.std::__1::basic_string"** %7 to i64*
  br label %31

31:                                               ; preds = %9, %26
  %32 = phi i64* [ %11, %9 ], [ %30, %26 ]
  %33 = phi i64* [ %13, %9 ], [ %28, %26 ]
  %34 = phi i64 [ %12, %9 ], [ %27, %26 ]
  %35 = phi i64 [ %10, %9 ], [ %29, %26 ]
  store i64 %34, i64* %33, align 8
  store i64 %35, i64* %32, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %1, i64 0, i32 2
  %37 = bitcast %"class.std::__1::basic_string"** %5 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::basic_string"** %36 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %37, align 8
  store i64 %38, i64* %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %1, i64 0, i32 3, i32 0, i32 0
  %43 = bitcast %"class.std::__1::basic_string"** %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::basic_string"** %42 to i64*
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %43, align 8
  store i64 %44, i64* %45, align 8
  %47 = load i64, i64* %32, align 8
  %48 = bitcast %"struct.std::__1::__split_buffer"* %1 to i64*
  store i64 %47, i64* %48, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #10
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #10
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #11
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #11
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #7 align 2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #10
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 2, i32 0
  %11 = bitcast %"struct.std::__1::pair"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #11
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE14__count_uniqueIS7_EEmRKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %67, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %7, %63
  %21 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %65, %63 ]
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 2
  %23 = bitcast %"struct.std::__1::__value_type"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %25 to i64
  %30 = select i1 %26, i64 %28, i64 %29
  %31 = icmp ult i64 %30, %15
  %32 = select i1 %31, i64 %30, i64 %15
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %20
  %35 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"struct.std::__1::__value_type"* %22 to i8*
  %38 = select i1 %26, i8* %36, i8* %37
  %39 = tail call i32 @memcmp(i8* %19, i8* %38, i64 %32) #10
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %34, %20
  %42 = icmp ult i64 %15, %30
  br i1 %42, label %45, label %47

43:                                               ; preds = %34
  %44 = icmp slt i32 %39, 0
  br i1 %44, label %45, label %53

45:                                               ; preds = %41, %43
  %46 = bitcast %"class.std::__1::__tree_node"* %21 to %"class.std::__1::__tree_node"**
  br label %63

47:                                               ; preds = %41
  br i1 %33, label %57, label %48

48:                                               ; preds = %47
  %49 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = bitcast %"struct.std::__1::__value_type"* %22 to i8*
  %52 = select i1 %26, i8* %50, i8* %51
  br label %53

53:                                               ; preds = %48, %43
  %54 = phi i8* [ %52, %48 ], [ %38, %43 ]
  %55 = tail call i32 @memcmp(i8* %54, i8* %19, i64 %32) #10
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %53, %47
  br i1 %31, label %60, label %67

58:                                               ; preds = %53
  %59 = icmp slt i32 %55, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %57, %58
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 1
  %62 = bitcast %"class.std::__1::__tree_node_base"** %61 to %"class.std::__1::__tree_node"**
  br label %63

63:                                               ; preds = %60, %45
  %64 = phi %"class.std::__1::__tree_node"** [ %46, %45 ], [ %62, %60 ]
  %65 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node"* %65, null
  br i1 %66, label %67, label %20

67:                                               ; preds = %58, %63, %57, %2
  %68 = phi i64 [ 0, %2 ], [ 1, %57 ], [ 0, %63 ], [ 1, %58 ]
  ret i64 %68
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.5"*, %"class.std::__1::__tree_node.46"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.46"* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.46"* %1 to %"class.std::__1::__tree_node.46"**
  %6 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.5"* %0, %"class.std::__1::__tree_node.46"* %6) #10
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.46"**
  %9 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.5"* %0, %"class.std::__1::__tree_node.46"* %9) #10
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %1, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %1, i64 0, i32 1, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #11
  br label %19

19:                                               ; preds = %16, %4
  %20 = bitcast %"struct.std::__1::pair.25"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"struct.std::__1::pair.25", %"struct.std::__1::pair.25"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #11
  br label %27

27:                                               ; preds = %19, %24
  %28 = bitcast %"class.std::__1::__tree_node.46"* %1 to i8*
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %2, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base9SingletonIN8autofill14CountryDataMapENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv(i8*) #0 comdat align 2 {
  %2 = load atomic i64, i64* @_ZN4base9SingletonIN8autofill14CountryDataMapENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E monotonic, align 8
  %3 = inttoptr i64 %2 to %"class.autofill::CountryDataMap"*
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %42, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %3, i64 0, i32 2
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %9 = icmp eq %"class.std::__1::basic_string"* %8, null
  br i1 %9, label %32, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %12 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %3, i64 0, i32 2, i32 0, i32 1
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = icmp eq %"class.std::__1::basic_string"* %13, %8
  br i1 %14, label %30, label %15

15:                                               ; preds = %10, %25
  %16 = phi %"class.std::__1::basic_string"* [ %17, %25 ], [ %13, %10 ]
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 -1
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #11
  br label %25

25:                                               ; preds = %22, %15
  %26 = icmp eq %"class.std::__1::basic_string"* %17, %8
  br i1 %26, label %27, label %15

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::vector"* %6 to i8**
  %29 = load i8*, i8** %28, align 8
  br label %30

30:                                               ; preds = %27, %10
  %31 = phi i8* [ %29, %27 ], [ %11, %10 ]
  store %"class.std::__1::basic_string"* %8, %"class.std::__1::basic_string"** %12, align 8
  tail call void @_ZdlPv(i8* %31) #11
  br label %32

32:                                               ; preds = %5, %30
  %33 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %3, i64 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %3, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %35 = bitcast %"class.std::__1::__tree_end_node"* %34 to %"class.std::__1::__tree_node.46"**
  %36 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** %35, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.5"* %33, %"class.std::__1::__tree_node.46"* %36) #10
  %37 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %3, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.autofill::CountryDataMap", %"class.autofill::CountryDataMap"* %3, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %39 = bitcast %"class.std::__1::__tree_end_node"* %38 to %"class.std::__1::__tree_node"**
  %40 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %39, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %37, %"class.std::__1::__tree_node"* %40) #10
  %41 = inttoptr i64 %2 to i8*
  tail call void @_ZdlPv(i8* %41) #11
  br label %42

42:                                               ; preds = %1, %32
  store i64 0, i64* @_ZN4base9SingletonIN8autofill14CountryDataMapENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE4findIS7_EENS_21__tree_const_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 2
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #10
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #10
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE14__count_uniqueIS7_EEmRKT_(%"class.std::__1::__tree.5"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.5", %"class.std::__1::__tree.5"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.46"**
  %5 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.46"* %5, null
  br i1 %6, label %67, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %7, %63
  %21 = phi %"class.std::__1::__tree_node.46"* [ %5, %7 ], [ %65, %63 ]
  %22 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %21, i64 0, i32 1
  %23 = bitcast %"struct.std::__1::__value_type.47"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %25 to i64
  %30 = select i1 %26, i64 %28, i64 %29
  %31 = icmp ult i64 %30, %15
  %32 = select i1 %31, i64 %30, i64 %15
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %20
  %35 = getelementptr inbounds %"struct.std::__1::__value_type.47", %"struct.std::__1::__value_type.47"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"struct.std::__1::__value_type.47"* %22 to i8*
  %38 = select i1 %26, i8* %36, i8* %37
  %39 = tail call i32 @memcmp(i8* %19, i8* %38, i64 %32) #10
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %34, %20
  %42 = icmp ult i64 %15, %30
  br i1 %42, label %45, label %47

43:                                               ; preds = %34
  %44 = icmp slt i32 %39, 0
  br i1 %44, label %45, label %53

45:                                               ; preds = %41, %43
  %46 = bitcast %"class.std::__1::__tree_node.46"* %21 to %"class.std::__1::__tree_node.46"**
  br label %63

47:                                               ; preds = %41
  br i1 %33, label %57, label %48

48:                                               ; preds = %47
  %49 = getelementptr inbounds %"struct.std::__1::__value_type.47", %"struct.std::__1::__value_type.47"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = bitcast %"struct.std::__1::__value_type.47"* %22 to i8*
  %52 = select i1 %26, i8* %50, i8* %51
  br label %53

53:                                               ; preds = %48, %43
  %54 = phi i8* [ %52, %48 ], [ %38, %43 ]
  %55 = tail call i32 @memcmp(i8* %54, i8* %19, i64 %32) #10
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %53, %47
  br i1 %31, label %60, label %67

58:                                               ; preds = %53
  %59 = icmp slt i32 %55, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %57, %58
  %61 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %21, i64 0, i32 0, i32 1
  %62 = bitcast %"class.std::__1::__tree_node_base"** %61 to %"class.std::__1::__tree_node.46"**
  br label %63

63:                                               ; preds = %60, %45
  %64 = phi %"class.std::__1::__tree_node.46"** [ %46, %45 ], [ %62, %60 ]
  %65 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node.46"* %65, null
  br i1 %66, label %67, label %20

67:                                               ; preds = %58, %63, %57, %2
  %68 = phi i64 [ 0, %2 ], [ 1, %57 ], [ 0, %63 ], [ 1, %58 ]
  ret i64 %68
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNKSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE4findIS7_EENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEERKT_(%"class.std::__1::__tree.5"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.5", %"class.std::__1::__tree.5"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.46"**
  %5 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.46"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node.46"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type.47"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type.47", %"struct.std::__1::__value_type.47"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type.47"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #10
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node.46"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node.46", %"class.std::__1::__tree_node.46"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node.46"* %22 to %"class.std::__1::__tree_node.46"**
  %53 = select i1 %48, %"class.std::__1::__tree_node.46"** %50, %"class.std::__1::__tree_node.46"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node.46"*, %"class.std::__1::__tree_node.46"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node.46"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #10
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN8autofill12_GLOBAL__N_115GetCountryCodesEv: argument 0"}
!4 = distinct !{!4, !"_ZN8autofill12_GLOBAL__N_115GetCountryCodesEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN8autofill12_GLOBAL__N_115GetCountryCodesEv: argument 0"}
!7 = distinct !{!7, !"_ZN8autofill12_GLOBAL__N_115GetCountryCodesEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNSt3__19make_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSA_IT0_E4typeEEEOSB_OSE_: argument 0"}
!10 = distinct !{!10, !"_ZNSt3__19make_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_4pairINS_18__unwrap_ref_decayIT_E4typeENSA_IT0_E4typeEEEOSB_OSE_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJNS_4pairIS7_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_ISN_EEEEEEDpOT_: argument 0"}
!13 = distinct !{!13, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJNS_4pairIS7_S9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_ISN_EEEEEEDpOT_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNSt3__19make_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__19make_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES6_EENS_4pairINS_18__unwrap_ref_decayIT_E4typeENS8_IT0_E4typeEEEOS9_OSC_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJNS_4pairIS7_S7_EEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISL_EEEEEEDpOT_: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES7_EENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS5_IS8_EEE16__construct_nodeIJNS_4pairIS7_S7_EEEEENS_10unique_ptrINS_11__tree_nodeIS8_PvEENS_22__tree_node_destructorINS5_ISL_EEEEEEDpOT_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJNS_4pairIPKcS9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_ISP_EEEEEEDpOT_: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN8autofill30RequiredFieldsForAddressImportEEENS_19__map_value_compareIS7_SA_NS_4lessIS7_EELb1EEENS5_ISA_EEE16__construct_nodeIJNS_4pairIPKcS9_EEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS5_ISP_EEEEEEDpOT_"}
!23 = !{i8 0, i8 2}
