; ModuleID = '../../components/scheduling_metrics/total_duration_metric_reporter.cc'
source_filename = "../../components/scheduling_metrics/total_duration_metric_reporter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.scheduling_metrics::TotalDurationMetricReporter" = type { %"class.absl::optional", %"class.base::HistogramBase"*, %"class.base::HistogramBase"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN18scheduling_metrics27TotalDurationMetricReporterC1EPKcS2_ = hidden unnamed_addr alias void (%"class.scheduling_metrics::TotalDurationMetricReporter"*, i8*, i8*), void (%"class.scheduling_metrics::TotalDurationMetricReporter"*, i8*, i8*)* @_ZN18scheduling_metrics27TotalDurationMetricReporterC2EPKcS2_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18scheduling_metrics27TotalDurationMetricReporterC2EPKcS2_(%"class.scheduling_metrics::TotalDurationMetricReporter"* nocapture, i8*, i8*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.scheduling_metrics::TotalDurationMetricReporter", %"class.scheduling_metrics::TotalDurationMetricReporter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.scheduling_metrics::TotalDurationMetricReporter", %"class.scheduling_metrics::TotalDurationMetricReporter"* %0, i64 0, i32 1
  %6 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* %1, i32 1, i32 3600, i32 50, i32 1) #6
  store %"class.base::HistogramBase"* %6, %"class.base::HistogramBase"** %5, align 8
  %7 = getelementptr inbounds %"class.scheduling_metrics::TotalDurationMetricReporter", %"class.scheduling_metrics::TotalDurationMetricReporter"* %0, i64 0, i32 2
  %8 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* %2, i32 1, i32 3600, i32 50, i32 1) #6
  store %"class.base::HistogramBase"* %8, %"class.base::HistogramBase"** %7, align 8
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN18scheduling_metrics27TotalDurationMetricReporter24RecordAdditionalDurationEN4base9TimeDeltaE(%"class.scheduling_metrics::TotalDurationMetricReporter"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"class.scheduling_metrics::TotalDurationMetricReporter", %"class.scheduling_metrics::TotalDurationMetricReporter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  store i64 0, i64* %4, align 8
  br label %28

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.scheduling_metrics::TotalDurationMetricReporter", %"class.scheduling_metrics::TotalDurationMetricReporter"* %0, i64 0, i32 2
  %12 = load %"class.base::HistogramBase"*, %"class.base::HistogramBase"** %11, align 8
  %13 = getelementptr inbounds %"class.scheduling_metrics::TotalDurationMetricReporter", %"class.scheduling_metrics::TotalDurationMetricReporter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, -9223372036854775807
  %16 = icmp ult i64 %15, 2
  %17 = sdiv i64 %14, 1000000
  %18 = select i1 %16, i64 %14, i64 %17
  %19 = trunc i64 %18 to i32
  %20 = bitcast %"class.base::HistogramBase"* %12 to void (%"class.base::HistogramBase"*, i32)***
  %21 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %21, i64 6
  %23 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %22, align 8
  tail call void %23(%"class.base::HistogramBase"* %12, i32 %19) #6
  %24 = load i8, i8* %5, align 8, !range !2
  %25 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  store i64 0, i64* %4, align 8
  %26 = icmp eq i8 %24, 0
  %27 = getelementptr inbounds %"class.scheduling_metrics::TotalDurationMetricReporter", %"class.scheduling_metrics::TotalDurationMetricReporter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %26, label %28, label %31

28:                                               ; preds = %8, %10
  %29 = phi i8* [ %9, %8 ], [ %25, %10 ]
  %30 = bitcast i64* %4 to %"class.base::TimeDelta"*
  br label %31

31:                                               ; preds = %10, %28
  %32 = phi i8* [ %29, %28 ], [ %25, %10 ]
  %33 = phi i8 [ 0, %28 ], [ 1, %10 ]
  %34 = phi %"class.base::TimeDelta"* [ %30, %28 ], [ %27, %10 ]
  %35 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %34, i64 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %1, -9223372036854775807
  %38 = icmp ult i64 %37, 2
  br i1 %38, label %46, label %39

39:                                               ; preds = %31
  %40 = icmp slt i64 %1, 0
  %41 = select i1 %40, i64 -9223372036854775808, i64 9223372036854775807
  %42 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %36, i64 %1) #6
  %43 = extractvalue { i64, i1 } %42, 1
  %44 = extractvalue { i64, i1 } %42, 0
  %45 = select i1 %43, i64 %41, i64 %44, !prof !3
  br label %55

46:                                               ; preds = %31
  %47 = add i64 %36, -9223372036854775807
  %48 = icmp ugt i64 %47, 1
  %49 = icmp eq i64 %36, %1
  %50 = or i1 %49, %48
  br i1 %50, label %55, label %51

51:                                               ; preds = %46
  %52 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #6
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #6
  %54 = load i8, i8* %5, align 8, !range !2
  br label %55

55:                                               ; preds = %39, %46, %51
  %56 = phi i8 [ %33, %39 ], [ %33, %46 ], [ %54, %51 ]
  %57 = phi i64 [ %45, %39 ], [ %1, %46 ], [ %1, %51 ]
  %58 = icmp eq i8 %56, 0
  %59 = getelementptr inbounds %"class.scheduling_metrics::TotalDurationMetricReporter", %"class.scheduling_metrics::TotalDurationMetricReporter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i64 %57, i64* %59, align 8
  br i1 %58, label %60, label %61

60:                                               ; preds = %55
  store i8 1, i8* %5, align 8
  br label %61

61:                                               ; preds = %60, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32)
  %62 = getelementptr inbounds %"class.scheduling_metrics::TotalDurationMetricReporter", %"class.scheduling_metrics::TotalDurationMetricReporter"* %0, i64 0, i32 1
  %63 = load %"class.base::HistogramBase"*, %"class.base::HistogramBase"** %62, align 8
  %64 = add i64 %57, -9223372036854775807
  %65 = icmp ult i64 %64, 2
  %66 = sdiv i64 %57, 1000000
  %67 = select i1 %65, i64 %57, i64 %66
  %68 = trunc i64 %67 to i32
  %69 = bitcast %"class.base::HistogramBase"* %63 to void (%"class.base::HistogramBase"*, i32)***
  %70 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %70, i64 6
  %72 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %71, align 8
  call void %72(%"class.base::HistogramBase"* %63, i32 %68) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN18scheduling_metrics27TotalDurationMetricReporter5ResetEv(%"class.scheduling_metrics::TotalDurationMetricReporter"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.scheduling_metrics::TotalDurationMetricReporter", %"class.scheduling_metrics::TotalDurationMetricReporter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
