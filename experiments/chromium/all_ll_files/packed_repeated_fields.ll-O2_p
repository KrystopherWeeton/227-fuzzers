; ModuleID = '../../third_party/perfetto/src/protozero/packed_repeated_fields.cc'
source_filename = "../../third_party/perfetto/src/protozero/packed_repeated_fields.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.protozero::PackedBufferBase" = type { i8*, i8*, i8*, %"class.std::__1::unique_ptr", [8160 x i8] }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }

@_ZN9protozero16PackedBufferBase19kOnStackStorageSizeE = hidden local_unnamed_addr constant i64 8160, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9protozero16PackedBufferBase12GrowSlowpathEv(%"class.protozero::PackedBufferBase"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.protozero::PackedBufferBase", %"class.protozero::PackedBufferBase"* %0, i64 0, i32 2
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.protozero::PackedBufferBase", %"class.protozero::PackedBufferBase"* %0, i64 0, i32 0
  %6 = bitcast %"class.protozero::PackedBufferBase"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %4, %7
  %9 = getelementptr inbounds %"class.protozero::PackedBufferBase", %"class.protozero::PackedBufferBase"* %0, i64 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %7
  %13 = icmp ult i64 %12, 65536
  %14 = shl i64 %12, 1
  %15 = mul i64 %12, 3
  %16 = lshr i64 %15, 1
  %17 = select i1 %13, i64 %14, i64 %16
  %18 = add i64 %17, 4095
  %19 = and i64 %18, -4096
  %20 = tail call i8* @_Znam(i64 %19) #4
  %21 = ptrtoint i8* %20 to i64
  %22 = inttoptr i64 %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %20, i8* align 1 %22, i64 %12, i1 false)
  %23 = getelementptr inbounds %"class.protozero::PackedBufferBase", %"class.protozero::PackedBufferBase"* %0, i64 0, i32 3
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::unique_ptr"* %23 to i64*
  store i64 %21, i64* %26, align 8
  %27 = icmp eq i8* %25, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %25) #4
  %29 = load i8*, i8** %24, align 8
  br label %30

30:                                               ; preds = %28, %1
  %31 = phi i8* [ %29, %28 ], [ %20, %1 ]
  store i8* %31, i8** %5, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 %19
  store i8* %32, i8** %9, align 8
  %33 = getelementptr inbounds i8, i8* %31, i64 %8
  store i8* %33, i8** %2, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9protozero16PackedBufferBase5ResetEv(%"class.protozero::PackedBufferBase"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.protozero::PackedBufferBase", %"class.protozero::PackedBufferBase"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  store i8* null, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %3) #4
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.protozero::PackedBufferBase", %"class.protozero::PackedBufferBase"* %0, i64 0, i32 4
  %8 = getelementptr inbounds [8160 x i8], [8160 x i8]* %7, i64 0, i64 0
  %9 = getelementptr inbounds %"class.protozero::PackedBufferBase", %"class.protozero::PackedBufferBase"* %0, i64 0, i32 0
  store i8* %8, i8** %9, align 8
  %10 = getelementptr inbounds %"class.protozero::PackedBufferBase", %"class.protozero::PackedBufferBase"* %0, i64 0, i32 4, i64 8160
  %11 = getelementptr inbounds %"class.protozero::PackedBufferBase", %"class.protozero::PackedBufferBase"* %0, i64 0, i32 1
  store i8* %10, i8** %11, align 8
  %12 = ptrtoint [8160 x i8]* %7 to i64
  %13 = getelementptr inbounds %"class.protozero::PackedBufferBase", %"class.protozero::PackedBufferBase"* %0, i64 0, i32 2
  %14 = bitcast i8** %13 to i64*
  store i64 %12, i64* %14, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
