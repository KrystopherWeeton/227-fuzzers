; ModuleID = '../../third_party/swiftshader/src/OpenGL/libGLESv2/Buffer.cpp'
source_filename = "../../third_party/swiftshader/src/OpenGL/libGLESv2/Buffer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.es2::Buffer" = type <{ %"class.gl::NamedObject", %"class.sw::Resource"*, i64, i32, i8, [3 x i8], i64, i64, i32, [4 x i8] }>
%"class.gl::NamedObject" = type { %"class.gl::Object.base", i32 }
%"class.gl::Object.base" = type <{ i32 (...)**, i32 }>
%"class.sw::Resource" = type { i64, %"class.sw::MutexLock", %"class.sw::Event", i32, i32, i32, i8, i8* }
%"class.sw::MutexLock" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.sw::Event" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%"class.gl::Object" = type <{ i32 (...)**, i32, [4 x i8] }>

@_ZTVN3es26BufferE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object6addRefEv to i8*), i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object7releaseEv to i8*), i8* bitcast (void (%"class.es2::Buffer"*)* @_ZN3es26BufferD2Ev to i8*), i8* bitcast (void (%"class.es2::Buffer"*)* @_ZN3es26BufferD0Ev to i8*)] }, align 8

@_ZN3es26BufferC1Ej = hidden unnamed_addr alias void (%"class.es2::Buffer"*, i32), void (%"class.es2::Buffer"*, i32)* @_ZN3es26BufferC2Ej
@_ZN3es26BufferD1Ev = hidden unnamed_addr alias void (%"class.es2::Buffer"*), void (%"class.es2::Buffer"*)* @_ZN3es26BufferD2Ev

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es26BufferC2Ej(%"class.es2::Buffer"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 0
  tail call void @_ZN2gl11NamedObjectC2Ej(%"class.gl::NamedObject"* %3, i32 %1) #7
  %4 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3es26BufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 3
  %7 = bitcast %"class.sw::Resource"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  store i32 35044, i32* %6, align 8
  %8 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 4
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 6
  %10 = bitcast i64* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: optsize
declare void @_ZN2gl11NamedObjectC2Ej(%"class.gl::NamedObject"*, i32) unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es26BufferD2Ev(%"class.es2::Buffer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN3es26BufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 1
  %4 = load %"class.sw::Resource"*, %"class.sw::Resource"** %3, align 8
  %5 = icmp eq %"class.sw::Resource"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void @_ZN2sw8Resource8destructEv(%"class.sw::Resource"* nonnull %4) #7
  br label %7

7:                                                ; preds = %1, %6
  %8 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 0
  tail call void @_ZN2gl11NamedObjectD2Ev(%"class.gl::NamedObject"* %8) #7
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw8Resource8destructEv(%"class.sw::Resource"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize
declare void @_ZN2gl11NamedObjectD2Ev(%"class.gl::NamedObject"*) unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es26BufferD0Ev(%"class.es2::Buffer"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3es26BufferD2Ev(%"class.es2::Buffer"* %0) #7
  %2 = bitcast %"class.es2::Buffer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es26Buffer10bufferDataEPKvlj(%"class.es2::Buffer"* nocapture, i8* readonly, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 1
  %6 = load %"class.sw::Resource"*, %"class.sw::Resource"** %5, align 8
  %7 = icmp eq %"class.sw::Resource"* %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  tail call void @_ZN2sw8Resource8destructEv(%"class.sw::Resource"* nonnull %6) #7
  store %"class.sw::Resource"* null, %"class.sw::Resource"** %5, align 8
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 2
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 3
  store i32 %3, i32* %11, align 8
  %12 = icmp sgt i64 %2, 0
  br i1 %12, label %13, label %24

13:                                               ; preds = %9
  %14 = tail call i8* @_Znwm(i64 168) #8
  %15 = bitcast i8* %14 to %"class.sw::Resource"*
  %16 = add nuw nsw i64 %2, 1024
  tail call void @_ZN2sw8ResourceC1Em(%"class.sw::Resource"* nonnull %15, i64 %16) #7
  %17 = bitcast %"class.sw::Resource"** %5 to i8**
  store i8* %14, i8** %17, align 8
  %18 = icmp eq i8* %1, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %13
  %20 = tail call i8* @_ZNK2sw8Resource4dataEv(%"class.sw::Resource"* nonnull %15) #7
  %21 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 6
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds i8, i8* %20, i64 %22
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* nonnull align 1 %1, i64 %2, i1 false)
  br label %24

24:                                               ; preds = %19, %13, %9
  ret void
}

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: optsize
declare void @_ZN2sw8ResourceC1Em(%"class.sw::Resource"*, i64) unnamed_addr #1

; Function Attrs: optsize
declare i8* @_ZNK2sw8Resource4dataEv(%"class.sw::Resource"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3es26Buffer13bufferSubDataEPKvll(%"class.es2::Buffer"* nocapture readonly, i8* readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 1
  %6 = load %"class.sw::Resource"*, %"class.sw::Resource"** %5, align 8
  %7 = icmp ne %"class.sw::Resource"* %6, null
  %8 = icmp ne i8* %1, null
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %14

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN2sw8Resource4lockENS_8AccessorE(%"class.sw::Resource"* nonnull %6, i32 0) #7
  %12 = getelementptr inbounds i8, i8* %11, i64 %3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* nonnull align 1 %1, i64 %2, i1 false)
  %13 = load %"class.sw::Resource"*, %"class.sw::Resource"** %5, align 8
  tail call void @_ZN2sw8Resource6unlockEv(%"class.sw::Resource"* %13) #7
  br label %14

14:                                               ; preds = %10, %4
  ret void
}

; Function Attrs: optsize
declare i8* @_ZN2sw8Resource4lockENS_8AccessorE(%"class.sw::Resource"*, i32) local_unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2sw8Resource6unlockEv(%"class.sw::Resource"*) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden i8* @_ZN3es26Buffer8mapRangeEllj(%"class.es2::Buffer"* nocapture, i64, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 1
  %6 = load %"class.sw::Resource"*, %"class.sw::Resource"** %5, align 8
  %7 = icmp eq %"class.sw::Resource"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = tail call i8* @_ZN2sw8Resource4lockENS_8AccessorE(%"class.sw::Resource"* nonnull %6, i32 0) #7
  %10 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 4
  store i8 1, i8* %10, align 4
  %11 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 6
  store i64 %1, i64* %11, align 8
  %12 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 7
  store i64 %2, i64* %12, align 8
  %13 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 8
  store i32 %3, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %9, i64 %1
  br label %15

15:                                               ; preds = %4, %8
  %16 = phi i8* [ %14, %8 ], [ null, %4 ]
  ret i8* %16
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN3es26Buffer5unmapEv(%"class.es2::Buffer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 1
  %3 = load %"class.sw::Resource"*, %"class.sw::Resource"** %2, align 8
  %4 = icmp eq %"class.sw::Resource"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN2sw8Resource6unlockEv(%"class.sw::Resource"* nonnull %3) #7
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 4
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 6
  %9 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false)
  ret i1 true
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden %"class.sw::Resource"* @_ZN3es26Buffer11getResourceEv(%"class.es2::Buffer"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.es2::Buffer", %"class.es2::Buffer"* %0, i64 0, i32 1
  %3 = load %"class.sw::Resource"*, %"class.sw::Resource"** %2, align 8
  ret %"class.sw::Resource"* %3
}

; Function Attrs: optsize
declare void @_ZN2gl6Object6addRefEv(%"class.gl::Object"*) unnamed_addr #1

; Function Attrs: optsize
declare void @_ZN2gl6Object7releaseEv(%"class.gl::Object"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind optsize }
attributes #8 = { builtin nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
