; ModuleID = '../../third_party/libvpx/source/libvpx/vpx_dsp/bitreader.c'
source_filename = "../../third_party/libvpx/source/libvpx/vpx_dsp/bitreader.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.vpx_reader = type { i64, i32, i32, i8*, i8*, void (i8*, i8*, i8*, i32)*, i8*, [9 x i8] }

@vpx_norm = external local_unnamed_addr constant [256 x i8], align 16

; Function Attrs: nounwind ssp uwtable
define hidden i32 @vpx_reader_init(%struct.vpx_reader*, i8*, i64, void (i8*, i8*, i8*, i32)*, i8*) local_unnamed_addr #0 {
  %6 = icmp eq i64 %2, 0
  %7 = icmp ne i8* %1, null
  %8 = or i1 %7, %6
  br i1 %8, label %9, label %49

9:                                                ; preds = %5
  %10 = getelementptr inbounds i8, i8* %1, i64 %2
  %11 = getelementptr inbounds %struct.vpx_reader, %struct.vpx_reader* %0, i64 0, i32 3
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %struct.vpx_reader, %struct.vpx_reader* %0, i64 0, i32 4
  store i8* %1, i8** %12, align 8
  %13 = getelementptr inbounds %struct.vpx_reader, %struct.vpx_reader* %0, i64 0, i32 0
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %struct.vpx_reader, %struct.vpx_reader* %0, i64 0, i32 2
  store i32 -8, i32* %14, align 4
  %15 = getelementptr inbounds %struct.vpx_reader, %struct.vpx_reader* %0, i64 0, i32 1
  store i32 255, i32* %15, align 8
  %16 = getelementptr inbounds %struct.vpx_reader, %struct.vpx_reader* %0, i64 0, i32 5
  store void (i8*, i8*, i8*, i32)* %3, void (i8*, i8*, i8*, i32)** %16, align 8
  %17 = getelementptr inbounds %struct.vpx_reader, %struct.vpx_reader* %0, i64 0, i32 6
  store i8* %4, i8** %17, align 8
  tail call void @vpx_reader_fill(%struct.vpx_reader* %0)
  %18 = load i32, i32* %15, align 8
  %19 = shl i32 %18, 7
  %20 = add i32 %19, 128
  %21 = lshr i32 %20, 8
  %22 = load i32, i32* %14, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %9
  tail call void @vpx_reader_fill(%struct.vpx_reader* %0) #3
  %25 = load i32, i32* %14, align 4
  br label %26

26:                                               ; preds = %24, %9
  %27 = phi i32 [ %25, %24 ], [ %22, %9 ]
  %28 = load i64, i64* %13, align 8
  %29 = zext i32 %21 to i64
  %30 = shl i64 %29, 56
  %31 = icmp ult i64 %28, %30
  br i1 %31, label %36, label %32

32:                                               ; preds = %26
  %33 = load i32, i32* %15, align 8
  %34 = sub i32 %33, %21
  %35 = sub i64 %28, %30
  br label %36

36:                                               ; preds = %26, %32
  %37 = phi i64 [ %35, %32 ], [ %28, %26 ]
  %38 = phi i32 [ %34, %32 ], [ %21, %26 ]
  %39 = phi i32 [ 1, %32 ], [ 0, %26 ]
  %40 = and i32 %38, 255
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds [256 x i8], [256 x i8]* @vpx_norm, i64 0, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = shl i32 %38, %44
  %46 = zext i8 %43 to i64
  %47 = shl i64 %37, %46
  %48 = sub nsw i32 %27, %44
  store i64 %47, i64* %13, align 8
  store i32 %48, i32* %14, align 4
  store i32 %45, i32* %15, align 8
  br label %49

49:                                               ; preds = %5, %36
  %50 = phi i32 [ %39, %36 ], [ 1, %5 ]
  ret i32 %50
}

; Function Attrs: nounwind ssp uwtable
define hidden void @vpx_reader_fill(%struct.vpx_reader*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.vpx_reader, %struct.vpx_reader* %0, i64 0, i32 3
  %3 = bitcast i8** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %struct.vpx_reader, %struct.vpx_reader* %0, i64 0, i32 4
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %struct.vpx_reader, %struct.vpx_reader* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.vpx_reader, %struct.vpx_reader* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = ptrtoint i8* %6 to i64
  %12 = sub i64 %4, %11
  %13 = shl i64 %12, 3
  %14 = sub i32 48, %10
  %15 = getelementptr inbounds %struct.vpx_reader, %struct.vpx_reader* %0, i64 0, i32 5
  %16 = load void (i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i32)** %15, align 8
  %17 = icmp eq void (i8*, i8*, i8*, i32)* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %1
  %19 = icmp ult i64 %12, 9
  %20 = select i1 %19, i64 %12, i64 9
  %21 = getelementptr inbounds %struct.vpx_reader, %struct.vpx_reader* %0, i64 0, i32 6
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %struct.vpx_reader, %struct.vpx_reader* %0, i64 0, i32 7, i64 0
  %24 = trunc i64 %20 to i32
  tail call void %16(i8* %22, i8* %6, i8* %23, i32 %24) #3
  br label %25

25:                                               ; preds = %1, %18
  %26 = phi i8* [ %23, %18 ], [ %6, %1 ]
  %27 = icmp ugt i64 %13, 64
  %28 = sub i32 56, %10
  br i1 %27, label %29, label %46

29:                                               ; preds = %25
  %30 = and i32 %28, -8
  %31 = bitcast i8* %26 to i64*
  %32 = load i64, i64* %31, align 1
  %33 = tail call i64 @llvm.bswap.i64(i64 %32) #3
  %34 = sub nsw i32 64, %30
  %35 = zext i32 %34 to i64
  %36 = lshr i64 %33, %35
  %37 = add nsw i32 %30, %10
  %38 = ashr i32 %28, 3
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %26, i64 %39
  %41 = load i64, i64* %7, align 8
  %42 = and i32 %14, 7
  %43 = zext i32 %42 to i64
  %44 = shl i64 %36, %43
  %45 = or i64 %44, %41
  br label %71

46:                                               ; preds = %25
  %47 = trunc i64 %13 to i32
  %48 = sub nsw i32 %28, %47
  %49 = icmp sgt i32 %48, -1
  %50 = add nsw i32 %10, 1073741824
  %51 = select i1 %49, i32 %50, i32 %10
  %52 = select i1 %49, i32 %48, i32 0
  %53 = icmp eq i64 %13, 0
  %54 = and i1 %49, %53
  %55 = icmp slt i32 %14, %52
  %56 = or i1 %54, %55
  br i1 %56, label %71, label %57

57:                                               ; preds = %46, %57
  %58 = phi i8* [ %63, %57 ], [ %26, %46 ]
  %59 = phi i64 [ %68, %57 ], [ %8, %46 ]
  %60 = phi i32 [ %62, %57 ], [ %51, %46 ]
  %61 = phi i32 [ %69, %57 ], [ %14, %46 ]
  %62 = add nsw i32 %60, 8
  %63 = getelementptr inbounds i8, i8* %58, i64 1
  %64 = load i8, i8* %58, align 1
  %65 = zext i8 %64 to i64
  %66 = zext i32 %61 to i64
  %67 = shl i64 %65, %66
  %68 = or i64 %67, %59
  %69 = add nsw i32 %61, -8
  %70 = icmp slt i32 %69, %52
  br i1 %70, label %71, label %57

71:                                               ; preds = %57, %46, %29
  %72 = phi i32 [ %37, %29 ], [ %51, %46 ], [ %62, %57 ]
  %73 = phi i64 [ %45, %29 ], [ %8, %46 ], [ %68, %57 ]
  %74 = phi i8* [ %40, %29 ], [ %26, %46 ], [ %63, %57 ]
  %75 = ptrtoint i8* %74 to i64
  %76 = ptrtoint i8* %26 to i64
  %77 = sub i64 %75, %76
  %78 = load i8*, i8** %5, align 8
  %79 = getelementptr inbounds i8, i8* %78, i64 %77
  store i8* %79, i8** %5, align 8
  store i64 %73, i64* %7, align 8
  store i32 %72, i32* %9, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @vpx_reader_find_end(%struct.vpx_reader* nocapture) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.vpx_reader, %struct.vpx_reader* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -9
  %5 = icmp ult i32 %4, 55
  %6 = getelementptr inbounds %struct.vpx_reader, %struct.vpx_reader* %0, i64 0, i32 4
  %7 = load i8*, i8** %6, align 8
  br i1 %5, label %8, label %16

8:                                                ; preds = %1, %8
  %9 = phi i8* [ %12, %8 ], [ %7, %1 ]
  %10 = phi i32 [ %11, %8 ], [ %3, %1 ]
  %11 = add nsw i32 %10, -8
  %12 = getelementptr inbounds i8, i8* %9, i64 -1
  %13 = add i32 %10, -17
  %14 = icmp ult i32 %13, 55
  br i1 %14, label %8, label %15

15:                                               ; preds = %8
  store i32 %11, i32* %2, align 4
  store i8* %12, i8** %6, align 8
  br label %16

16:                                               ; preds = %1, %15
  %17 = phi i8* [ %12, %15 ], [ %7, %1 ]
  ret i8* %17
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.bswap.i64(i64) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
