; ModuleID = '../../third_party/blink/renderer/core/xml/xpath_predicate.cc'
source_filename = "../../third_party/blink/renderer/core/xml/xpath_predicate.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::xpath::ValueData"* }
%"class.blink::xpath::ValueData" = type { %"class.WTF::String", %"class.blink::Member.7" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.7" = type { %"class.blink::MemberBase.8" }
%"class.blink::MemberBase.8" = type { %"class.blink::xpath::NodeSet"* }
%"class.blink::xpath::NodeSet" = type { i8, i8, %"class.blink::HeapVector.11" }
%"class.blink::HeapVector.11" = type { %"class.WTF::Vector.14" }
%"class.WTF::Vector.14" = type { %"class.WTF::VectorBuffer.15" }
%"class.WTF::VectorBuffer.15" = type { %"class.WTF::VectorBufferBase.16" }
%"class.WTF::VectorBufferBase.16" = type { %"class.blink::Member.17"*, i32, i32 }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.17", %"class.blink::Member.22", %"class.blink::Member.17", %"class.blink::Member.17", %"class.blink::Member.24" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.28", %"class.blink::Member.30", %"class.blink::Member.22", %"class.blink::Member.32", %"class.blink::Member.32", %"class.blink::Member.52", %"class.blink::Member.54", %"class.blink::Member.56", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.61", %"class.blink::HeapVector.63" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.28" = type { %"class.blink::MemberBase.29" }
%"class.blink::MemberBase.29" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type opaque
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.39" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.39" = type { %"class.blink::MemberBase.40" }
%"class.blink::MemberBase.40" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.43", i32, %"class.blink::HeapVector.45" }
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.blink::HeapVector.45" = type { %"class.WTF::Vector.48" }
%"class.WTF::Vector.48" = type { %"class.WTF::VectorBuffer.49" }
%"class.WTF::VectorBuffer.49" = type { %"class.WTF::VectorBufferBase.50" }
%"class.WTF::VectorBufferBase.50" = type { %"class.blink::Member.43"*, i32, i32 }
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.58" }
%"class.blink::Member.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::HeapHashMap.60"* }
%"class.blink::HeapHashMap.60" = type opaque
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.63" = type { %"class.WTF::Vector.66" }
%"class.WTF::Vector.66" = type { %"class.WTF::VectorBuffer.67" }
%"class.WTF::VectorBuffer.67" = type { %"class.WTF::VectorBufferBase.68" }
%"class.WTF::VectorBufferBase.68" = type { %"class.blink::Member.69"*, i32, i32 }
%"class.blink::Member.69" = type opaque
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.201", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.235", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.242", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.182", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.102" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.102" = type { %"struct.std::__1::__atomic_base.103" }
%"struct.std::__1::__atomic_base.103" = type { %"struct.std::__1::__atomic_base.104" }
%"struct.std::__1::__atomic_base.104" = type { %"struct.std::__1::__cxx_atomic_impl.105" }
%"struct.std::__1::__cxx_atomic_impl.105" = type { %"struct.std::__1::__cxx_atomic_base_impl.106" }
%"struct.std::__1::__cxx_atomic_base_impl.106" = type { i64 }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.102" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.102" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.102" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.102" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.102" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.102" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::Worklist.155"* }
%"class.blink::Worklist.155" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.102" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.162", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.174", %"class.std::__1::__compressed_pair.176", [4 x i8] }>
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164", %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { i64 }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { float }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.185", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.194" }
%"class.WTF::Vector.194" = type { %"class.WTF::VectorBuffer.195" }
%"class.WTF::VectorBuffer.195" = type { %"class.WTF::VectorBufferBase.196" }
%"class.WTF::VectorBufferBase.196" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.209" }
%"class.WTF::VectorBuffer.209" = type { %"class.WTF::VectorBufferBase.210" }
%"class.WTF::VectorBufferBase.210" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.223" }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.141"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.246" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.241 }
%class.scoped_refptr.241 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.242" = type { %"struct.std::__1::__atomic_base.243" }
%"struct.std::__1::__atomic_base.243" = type { %"struct.std::__1::__cxx_atomic_impl.244" }
%"struct.std::__1::__cxx_atomic_impl.244" = type { %"struct.std::__1::__cxx_atomic_base_impl.245" }
%"struct.std::__1::__cxx_atomic_base_impl.245" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.302" }
%"struct.std::__1::atomic.302" = type { %"struct.std::__1::__atomic_base.303" }
%"struct.std::__1::__atomic_base.303" = type { %"struct.std::__1::__atomic_base.304" }
%"struct.std::__1::__atomic_base.304" = type { %"struct.std::__1::__cxx_atomic_impl.305" }
%"struct.std::__1::__cxx_atomic_impl.305" = type { %"struct.std::__1::__cxx_atomic_base_impl.306" }
%"struct.std::__1::__cxx_atomic_base_impl.306" = type { i32 }
%"class.blink::xpath::Number" = type { %"class.blink::xpath::Expression.base", %"class.blink::xpath::Value" }
%"class.blink::xpath::Expression.base" = type <{ %"class.blink::xpath::ParseNode", %"class.blink::HeapVector", i8, i8, i8 }>
%"class.blink::xpath::ParseNode" = type { i32 (...)** }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::xpath::Expression"* }
%"class.blink::xpath::Expression" = type <{ %"class.blink::xpath::ParseNode", %"class.blink::HeapVector", i8, i8, i8, [5 x i8] }>
%"class.blink::xpath::Value" = type { i32, i8, double, %"class.blink::Member.2" }
%"class.blink::xpath::StringExpression" = type { %"class.blink::xpath::Expression.base", %"class.blink::xpath::Value" }
%"class.blink::xpath::NumericOp" = type { %"class.blink::xpath::Expression.base", i32 }
%"class.blink::xpath::EqTestOp" = type { %"class.blink::xpath::Expression.base", i32 }
%"class.blink::xpath::LogicalOp" = type { %"class.blink::xpath::Expression.base", i32 }
%"class.blink::xpath::Predicate" = type { %"class.blink::Member" }
%"struct.blink::xpath::EvaluationContext" = type { %"class.blink::Node"*, i32, i32, %"class.WTF::HashMap.251", i8* }
%"class.WTF::HashMap.251" = type { %"class.WTF::HashTable.252" }
%"class.WTF::HashTable.252" = type <{ %"struct.WTF::KeyValuePair.255"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.255" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::xpath::Negative" = type { %"class.blink::xpath::Expression.base", [5 x i8] }
%"class.blink::xpath::Union" = type { %"class.blink::xpath::Expression.base", [5 x i8] }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.258" }
%"class.WTF::HashTable.258" = type <{ %"class.blink::Member.17"*, i32, i32, i32, [4 x i8] }>
%"class.blink::xpath::Function" = type { %"class.blink::xpath::Expression.base", %"class.WTF::String" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking.311" = type { i8 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapHashTableBacking" = type { i8 }

$_ZN5blink5xpath6NumberD0Ev = comdat any

$_ZNK5blink5xpath6Number10ResultTypeEv = comdat any

$_ZN5blink5xpath16StringExpressionD0Ev = comdat any

$_ZNK5blink5xpath16StringExpression10ResultTypeEv = comdat any

$_ZN5blink5xpath8NegativeD0Ev = comdat any

$_ZNK5blink5xpath8Negative10ResultTypeEv = comdat any

$_ZN5blink5xpath9NumericOpD0Ev = comdat any

$_ZNK5blink5xpath9NumericOp10ResultTypeEv = comdat any

$_ZN5blink5xpath8EqTestOpD0Ev = comdat any

$_ZNK5blink5xpath8EqTestOp10ResultTypeEv = comdat any

$_ZN5blink5xpath9LogicalOpD0Ev = comdat any

$_ZNK5blink5xpath9LogicalOp10ResultTypeEv = comdat any

$_ZN5blink5xpath5UnionD0Ev = comdat any

$_ZNK5blink5xpath5Union10ResultTypeEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_5xpath9ValueDataEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_5xpath9ValueDataEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_5xpath9ValueDataEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_5xpath7NodeSetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_5xpath7NodeSetEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5xpath10ExpressionEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_ = comdat any

$_ZN3WTF12KeyValuePairINS_6StringES1_EaSERKS2_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_5xpath10ExpressionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_5xpath9ParseNodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_5xpath9ParseNodeEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_5xpath9ParseNodeEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath9ValueDataEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath9ValueDataEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink5xpath6NumberE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Expression"*)* @_ZN5blink5xpath10ExpressionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Number"*)* @_ZN5blink5xpath6NumberD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Number"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath6Number5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Number"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath6Number8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::Number"*)* @_ZNK5blink5xpath6Number10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath16StringExpressionE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Expression"*)* @_ZN5blink5xpath10ExpressionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::StringExpression"*)* @_ZN5blink5xpath16StringExpressionD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::StringExpression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath16StringExpression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::StringExpression"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath16StringExpression8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::StringExpression"*)* @_ZNK5blink5xpath16StringExpression10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath9NumericOpE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Expression"*)* @_ZN5blink5xpath10ExpressionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::NumericOp"*)* @_ZN5blink5xpath9NumericOpD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::NumericOp"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath9NumericOp8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::NumericOp"*)* @_ZNK5blink5xpath9NumericOp10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath8EqTestOpE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Expression"*)* @_ZN5blink5xpath10ExpressionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::EqTestOp"*)* @_ZN5blink5xpath8EqTestOpD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::EqTestOp"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath8EqTestOp8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::EqTestOp"*)* @_ZNK5blink5xpath8EqTestOp10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath9LogicalOpE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Expression"*)* @_ZN5blink5xpath10ExpressionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::LogicalOp"*)* @_ZN5blink5xpath9LogicalOpD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::LogicalOp"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath9LogicalOp8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::LogicalOp"*)* @_ZNK5blink5xpath9LogicalOp10ResultTypeEv to i8*)] }, align 8
@__const._ZNK5blink5xpath9Predicate8EvaluateERNS0_17EvaluationContextE.result = private unnamed_addr constant { i32, i8, [3 x i8], double, %"class.blink::Member.2" } { i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF, %"class.blink::Member.2" { %"class.blink::MemberBase.3" { %"class.blink::xpath::ValueData"* inttoptr (i64 -6148914691236517206 to %"class.blink::xpath::ValueData"*) } } }, align 8
@.str = private unnamed_addr constant [9 x i8] c"position\00", align 1
@_ZTVN5blink5xpath8NegativeE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Expression"*)* @_ZN5blink5xpath10ExpressionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Negative"*)* @_ZN5blink5xpath8NegativeD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Negative"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath8Negative8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::Negative"*)* @_ZNK5blink5xpath8Negative10ResultTypeEv to i8*)] }, align 8
@_ZTVN5blink5xpath5UnionE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::xpath::Expression"*)* @_ZN5blink5xpath10ExpressionD2Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Union"*)* @_ZN5blink5xpath5UnionD0Ev to i8*), i8* bitcast (void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)* @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Union"*, %"struct.blink::xpath::EvaluationContext"*)* @_ZNK5blink5xpath5Union8EvaluateERNS0_17EvaluationContextE to i8*), i8* bitcast (i32 (%"class.blink::xpath::Union"*)* @_ZNK5blink5xpath5Union10ResultTypeEv to i8*)] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath9ValueDataEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::xpath::ValueData]\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_5xpath9ValueDataEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_5xpath9ValueDataEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_5xpath9ValueDataEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_5xpath9ValueDataEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_5xpath9ValueDataEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.3 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath7NodeSetEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::xpath::NodeSet]\00", align 1
@_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_5xpath7NodeSetEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_5xpath7NodeSetEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.4 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.5 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.6 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.8 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.10 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_5xpath10ExpressionEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [175 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::xpath::Expression>, WTF::VectorTraits<blink::Member<blink::xpath::Expression> > >]\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.12 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv = private unnamed_addr constant [91 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, WTF::String>]\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4NodeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [149 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Node>, WTF::VectorTraits<blink::Member<blink::Node> > >]\00", align 1
@.str.14 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [316 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::Node>, blink::Member<blink::Node>, WTF::IdentityExtractor, WTF::MemberHash<blink::Node>, WTF::HashTraits<blink::Member<blink::Node> >, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath9ParseNodeEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::xpath::ParseNode]\00", align 1
@_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_5xpath9ParseNodeEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_5xpath9ParseNodeEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_5xpath9ParseNodeEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

@_ZN5blink5xpath6NumberC1Ed = hidden unnamed_addr alias void (%"class.blink::xpath::Number"*, double), void (%"class.blink::xpath::Number"*, double)* @_ZN5blink5xpath6NumberC2Ed
@_ZN5blink5xpath16StringExpressionC1ERKN3WTF6StringE = hidden unnamed_addr alias void (%"class.blink::xpath::StringExpression"*, %"class.WTF::String"*), void (%"class.blink::xpath::StringExpression"*, %"class.WTF::String"*)* @_ZN5blink5xpath16StringExpressionC2ERKN3WTF6StringE
@_ZN5blink5xpath9NumericOpC1ENS1_6OpcodeEPNS0_10ExpressionES4_ = hidden unnamed_addr alias void (%"class.blink::xpath::NumericOp"*, i32, %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"*), void (%"class.blink::xpath::NumericOp"*, i32, %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"*)* @_ZN5blink5xpath9NumericOpC2ENS1_6OpcodeEPNS0_10ExpressionES4_
@_ZN5blink5xpath8EqTestOpC1ENS1_6OpcodeEPNS0_10ExpressionES4_ = hidden unnamed_addr alias void (%"class.blink::xpath::EqTestOp"*, i32, %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"*), void (%"class.blink::xpath::EqTestOp"*, i32, %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"*)* @_ZN5blink5xpath8EqTestOpC2ENS1_6OpcodeEPNS0_10ExpressionES4_
@_ZN5blink5xpath9LogicalOpC1ENS1_6OpcodeEPNS0_10ExpressionES4_ = hidden unnamed_addr alias void (%"class.blink::xpath::LogicalOp"*, i32, %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"*), void (%"class.blink::xpath::LogicalOp"*, i32, %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"*)* @_ZN5blink5xpath9LogicalOpC2ENS1_6OpcodeEPNS0_10ExpressionES4_
@_ZN5blink5xpath9PredicateC1EPNS0_10ExpressionE = hidden unnamed_addr alias void (%"class.blink::xpath::Predicate"*, %"class.blink::xpath::Expression"*), void (%"class.blink::xpath::Predicate"*, %"class.blink::xpath::Expression"*)* @_ZN5blink5xpath9PredicateC2EPNS0_10ExpressionE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5xpath6NumberC2Ed(%"class.blink::xpath::Number"*, double) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::xpath::Number"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %3) #11
  %4 = getelementptr inbounds %"class.blink::xpath::Number", %"class.blink::xpath::Number"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath6NumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::xpath::Number", %"class.blink::xpath::Number"* %0, i64 0, i32 1, i32 0
  store i32 2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::xpath::Number", %"class.blink::xpath::Number"* %0, i64 0, i32 1, i32 1
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"class.blink::xpath::Number", %"class.blink::xpath::Number"* %0, i64 0, i32 1, i32 2
  store double %1, double* %7, align 8
  %8 = getelementptr inbounds %"class.blink::xpath::Number", %"class.blink::xpath::Number"* %0, i64 0, i32 1, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* null, %"class.blink::xpath::ValueData"** %8, align 8
  ret void
}

declare void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath6Number5TraceEPNS_7VisitorE(%"class.blink::xpath::Number"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::xpath::Number", %"class.blink::xpath::Number"* %0, i64 0, i32 1
  tail call void @_ZNK5blink5xpath5Value5TraceEPNS_7VisitorE(%"class.blink::xpath::Value"* %3, %"class.blink::Visitor"* %1) #11
  %4 = bitcast %"class.blink::xpath::Number"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE(%"class.blink::xpath::Expression"* %4, %"class.blink::Visitor"* %1) #11
  ret void
}

declare void @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE(%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath6Number8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::Number"* nocapture readonly, %"struct.blink::xpath::EvaluationContext"* nocapture readnone dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::xpath::Number", %"class.blink::xpath::Number"* %1, i64 0, i32 1
  %5 = bitcast %"class.blink::xpath::Value"* %0 to i8*
  %6 = bitcast %"class.blink::xpath::Value"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false) #11
  %7 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.blink::xpath::Number", %"class.blink::xpath::Number"* %1, i64 0, i32 1, i32 3
  %9 = bitcast %"class.blink::Member.2"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::Member.2"* %7 to i64*
  store i64 %10, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5xpath16StringExpressionC2ERKN3WTF6StringE(%"class.blink::xpath::StringExpression"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::xpath::StringExpression"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %3) #11
  %4 = getelementptr inbounds %"class.blink::xpath::StringExpression", %"class.blink::xpath::StringExpression"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath16StringExpressionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::xpath::StringExpression", %"class.blink::xpath::StringExpression"* %0, i64 0, i32 1, i32 0
  store i32 3, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::xpath::StringExpression", %"class.blink::xpath::StringExpression"* %0, i64 0, i32 1, i32 1
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"class.blink::xpath::StringExpression", %"class.blink::xpath::StringExpression"* %0, i64 0, i32 1, i32 2
  store double 0.000000e+00, double* %7, align 8
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #11
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = bitcast i8* %8 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #11
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #11
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %2, %13, %28
  %31 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #11
  store i8 1, i8* %31, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 1
  store i8 0, i8* %32, align 1
  %33 = getelementptr inbounds i8, i8* %31, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #11
  %34 = getelementptr inbounds i8, i8* %31, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  %38 = getelementptr inbounds i8, i8* %8, i64 8
  %39 = bitcast i8* %38 to i8**
  store i8* %31, i8** %39, align 8
  %40 = getelementptr inbounds i8, i8* %8, i64 -4
  %41 = bitcast i8* %40 to i16*
  %42 = load atomic i16, i16* %41 monotonic, align 2
  %43 = or i16 %42, 1
  store atomic i16 %43, i16* %41 release, align 2
  %44 = getelementptr inbounds %"class.blink::xpath::StringExpression", %"class.blink::xpath::StringExpression"* %0, i64 0, i32 1, i32 3, i32 0, i32 0
  %45 = bitcast %"class.blink::xpath::ValueData"** %44 to i8**
  store i8* %8, i8** %45, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath16StringExpression5TraceEPNS_7VisitorE(%"class.blink::xpath::StringExpression"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::xpath::StringExpression", %"class.blink::xpath::StringExpression"* %0, i64 0, i32 1
  tail call void @_ZNK5blink5xpath5Value5TraceEPNS_7VisitorE(%"class.blink::xpath::Value"* %3, %"class.blink::Visitor"* %1) #11
  %4 = bitcast %"class.blink::xpath::StringExpression"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZNK5blink5xpath10Expression5TraceEPNS_7VisitorE(%"class.blink::xpath::Expression"* %4, %"class.blink::Visitor"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath16StringExpression8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::StringExpression"* nocapture readonly, %"struct.blink::xpath::EvaluationContext"* nocapture readnone dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::xpath::StringExpression", %"class.blink::xpath::StringExpression"* %1, i64 0, i32 1
  %5 = bitcast %"class.blink::xpath::Value"* %0 to i8*
  %6 = bitcast %"class.blink::xpath::Value"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false) #11
  %7 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3
  %8 = getelementptr inbounds %"class.blink::xpath::StringExpression", %"class.blink::xpath::StringExpression"* %1, i64 0, i32 1, i32 3
  %9 = bitcast %"class.blink::Member.2"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.blink::Member.2"* %7 to i64*
  store i64 %10, i64* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath8Negative8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::Negative"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::xpath::Value", align 8
  %5 = bitcast %"class.blink::xpath::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* align 8 bitcast ({ i32, i8, [3 x i8], double, %"class.blink::Member.2" }* @__const._ZNK5blink5xpath9Predicate8EvaluateERNS0_17EvaluationContextE.result to i8*), i64 24, i1 false)
  %6 = getelementptr inbounds %"class.blink::xpath::Negative", %"class.blink::xpath::Negative"* %1, i64 0, i32 0, i32 1, i32 0
  %7 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %6, i32 0) #11
  %8 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %8, align 8
  %10 = bitcast %"class.blink::xpath::Expression"* %9 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %11 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %11, i64 3
  %13 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %12, align 8
  call void %13(%"class.blink::xpath::Value"* nonnull sret %4, %"class.blink::xpath::Expression"* %9, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #11
  %14 = call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* nonnull %4) #11
  %15 = fsub double -0.000000e+00, %14
  %16 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 2, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double %15, double* %18, align 8
  %19 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* null, %"class.blink::xpath::ValueData"** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5xpath9NumericOpC2ENS1_6OpcodeEPNS0_10ExpressionES4_(%"class.blink::xpath::NumericOp"*, i32, %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::xpath::Expression"*, align 8
  %6 = alloca %"class.blink::xpath::Expression"*, align 8
  %7 = bitcast %"class.blink::xpath::NumericOp"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %7) #11
  %8 = getelementptr inbounds %"class.blink::xpath::NumericOp", %"class.blink::xpath::NumericOp"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath9NumericOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::xpath::NumericOp", %"class.blink::xpath::NumericOp"* %0, i64 0, i32 1
  store i32 %1, i32* %9, align 4
  %10 = bitcast %"class.blink::xpath::Expression"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  store %"class.blink::xpath::Expression"* %2, %"class.blink::xpath::Expression"** %6, align 8
  %11 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %2, i64 0, i32 2
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = getelementptr inbounds %"class.blink::xpath::NumericOp", %"class.blink::xpath::NumericOp"* %0, i64 0, i32 0, i32 2
  %14 = load i8, i8* %13, align 8, !range !3
  %15 = or i8 %14, %12
  store i8 %15, i8* %13, align 8
  %16 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %2, i64 0, i32 3
  %17 = load i8, i8* %16, align 1, !range !3
  %18 = getelementptr inbounds %"class.blink::xpath::NumericOp", %"class.blink::xpath::NumericOp"* %0, i64 0, i32 0, i32 3
  %19 = load i8, i8* %18, align 1, !range !3
  %20 = or i8 %19, %17
  store i8 %20, i8* %18, align 1
  %21 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %2, i64 0, i32 4
  %22 = load i8, i8* %21, align 2, !range !3
  %23 = getelementptr inbounds %"class.blink::xpath::NumericOp", %"class.blink::xpath::NumericOp"* %0, i64 0, i32 0, i32 4
  %24 = load i8, i8* %23, align 2, !range !3
  %25 = or i8 %24, %22
  store i8 %25, i8* %23, align 2
  %26 = getelementptr inbounds %"class.blink::xpath::NumericOp", %"class.blink::xpath::NumericOp"* %0, i64 0, i32 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.blink::xpath::NumericOp", %"class.blink::xpath::NumericOp"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::xpath::NumericOp", %"class.blink::xpath::NumericOp"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %47, label %32, !prof !2

32:                                               ; preds = %4
  %33 = ptrtoint %"class.blink::xpath::Expression"* %2 to i64
  %34 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %26, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Member"*, %"class.blink::Member"** %34, align 8
  %36 = zext i32 %28 to i64
  %37 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %35, i64 %36
  %38 = bitcast %"class.blink::Member"* %37 to i64*
  store atomic i64 %33, i64* %38 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %32
  %42 = bitcast %"class.blink::xpath::Expression"* %2 to i8*
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #11
  br label %44

44:                                               ; preds = %41, %32
  %45 = load i32, i32* %27, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %27, align 4
  br label %49

47:                                               ; preds = %4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector"* %26, %"class.blink::xpath::Expression"** nonnull dereferenceable(8) %6) #11
  %48 = load i32, i32* %27, align 4
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi i32 [ %46, %44 ], [ %48, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  %51 = bitcast %"class.blink::xpath::Expression"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51)
  store %"class.blink::xpath::Expression"* %3, %"class.blink::xpath::Expression"** %5, align 8
  %52 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %3, i64 0, i32 2
  %53 = load i8, i8* %52, align 8, !range !3
  %54 = load i8, i8* %13, align 8, !range !3
  %55 = or i8 %54, %53
  store i8 %55, i8* %13, align 8
  %56 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %3, i64 0, i32 3
  %57 = load i8, i8* %56, align 1, !range !3
  %58 = load i8, i8* %18, align 1, !range !3
  %59 = or i8 %58, %57
  store i8 %59, i8* %18, align 1
  %60 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %3, i64 0, i32 4
  %61 = load i8, i8* %60, align 2, !range !3
  %62 = load i8, i8* %23, align 2, !range !3
  %63 = or i8 %62, %61
  store i8 %63, i8* %23, align 2
  %64 = load i32, i32* %29, align 8
  %65 = icmp eq i32 %50, %64
  br i1 %65, label %81, label %66, !prof !2

66:                                               ; preds = %49
  %67 = ptrtoint %"class.blink::xpath::Expression"* %3 to i64
  %68 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %26, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::Member"*, %"class.blink::Member"** %68, align 8
  %70 = zext i32 %50 to i64
  %71 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %69, i64 %70
  %72 = bitcast %"class.blink::Member"* %71 to i64*
  store atomic i64 %67, i64* %72 monotonic, align 8
  %73 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %66
  %76 = bitcast %"class.blink::xpath::Expression"* %3 to i8*
  %77 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #11
  br label %78

78:                                               ; preds = %75, %66
  %79 = load i32, i32* %27, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %27, align 4
  br label %82

81:                                               ; preds = %49
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector"* %26, %"class.blink::xpath::Expression"** nonnull dereferenceable(8) %5) #11
  br label %82

82:                                               ; preds = %78, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath9NumericOp8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias sret, %"class.blink::xpath::NumericOp"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::xpath::EvaluationContext", align 8
  %5 = alloca %"class.blink::xpath::Value", align 8
  %6 = alloca %"class.blink::xpath::Value", align 8
  %7 = bitcast %"struct.blink::xpath::EvaluationContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #11
  %8 = bitcast %"struct.blink::xpath::EvaluationContext"* %2 to i8*
  %9 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 3
  %10 = bitcast %"class.WTF::HashMap.251"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -86, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %8, i64 16, i1 false) #11
  %11 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 3
  %12 = getelementptr inbounds %"class.WTF::HashMap.251", %"class.WTF::HashMap.251"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 2
  %14 = bitcast %"class.WTF::HashMap.251"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #11
  %15 = load i32, i32* %13, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %53, label %17

17:                                               ; preds = %3
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.252"* %12, i32 %15) #11
  %18 = load i32, i32* %13, align 4
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 0
  %21 = load %"struct.WTF::KeyValuePair.255"*, %"struct.WTF::KeyValuePair.255"** %20, align 8
  %22 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %21, i64 %24
  br i1 %19, label %53, label %26

26:                                               ; preds = %17
  %27 = icmp eq i32 %23, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %26, %32
  %29 = phi %"struct.WTF::KeyValuePair.255"* [ %33, %32 ], [ %21, %26 ]
  %30 = bitcast %"struct.WTF::KeyValuePair.255"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  switch i64 %31, label %35 [
    i64 -1, label %32
    i64 0, label %32
  ]

32:                                               ; preds = %28, %28
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %29, i64 1
  %34 = icmp eq %"struct.WTF::KeyValuePair.255"* %33, %25
  br i1 %34, label %53, label %28

35:                                               ; preds = %28, %26
  %36 = phi %"struct.WTF::KeyValuePair.255"* [ %21, %26 ], [ %29, %28 ]
  %37 = icmp eq %"struct.WTF::KeyValuePair.255"* %36, %25
  br i1 %37, label %53, label %38

38:                                               ; preds = %35, %51
  %39 = phi %"struct.WTF::KeyValuePair.255"* [ %45, %51 ], [ %36, %35 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %39, i64 0, i32 0
  %41 = call { %"struct.WTF::KeyValuePair.255"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.252"* %12, %"class.WTF::String"* dereferenceable(8) %40, %"struct.WTF::KeyValuePair.255"* dereferenceable(16) %39) #11
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %39, i64 1
  %43 = icmp eq %"struct.WTF::KeyValuePair.255"* %42, %25
  br i1 %43, label %53, label %44

44:                                               ; preds = %38, %48
  %45 = phi %"struct.WTF::KeyValuePair.255"* [ %49, %48 ], [ %42, %38 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.255"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  switch i64 %47, label %51 [
    i64 -1, label %48
    i64 0, label %48
  ]

48:                                               ; preds = %44, %44
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %45, i64 1
  %50 = icmp eq %"struct.WTF::KeyValuePair.255"* %49, %25
  br i1 %50, label %53, label %44

51:                                               ; preds = %44
  %52 = icmp eq %"struct.WTF::KeyValuePair.255"* %45, %25
  br i1 %52, label %53, label %38

53:                                               ; preds = %32, %38, %51, %48, %3, %17, %35
  %54 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 4
  %55 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 4
  %56 = bitcast i8** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i8** %54 to i64*
  store i64 %57, i64* %58, align 8
  %59 = bitcast %"class.blink::xpath::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 8 bitcast ({ i32, i8, [3 x i8], double, %"class.blink::Member.2" }* @__const._ZNK5blink5xpath9Predicate8EvaluateERNS0_17EvaluationContextE.result to i8*), i64 24, i1 false)
  %60 = getelementptr inbounds %"class.blink::xpath::NumericOp", %"class.blink::xpath::NumericOp"* %1, i64 0, i32 0, i32 1, i32 0
  %61 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %60, i32 0) #11
  %62 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %62, align 8
  %64 = bitcast %"class.blink::xpath::Expression"* %63 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %65 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %65, i64 3
  %67 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %66, align 8
  call void %67(%"class.blink::xpath::Value"* nonnull sret %5, %"class.blink::xpath::Expression"* %63, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #11
  %68 = bitcast %"class.blink::xpath::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* align 8 bitcast ({ i32, i8, [3 x i8], double, %"class.blink::Member.2" }* @__const._ZNK5blink5xpath9Predicate8EvaluateERNS0_17EvaluationContextE.result to i8*), i64 24, i1 false)
  %69 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %60, i32 1) #11
  %70 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %70, align 8
  %72 = bitcast %"class.blink::xpath::Expression"* %71 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %73 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %73, i64 3
  %75 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %74, align 8
  call void %75(%"class.blink::xpath::Value"* nonnull sret %6, %"class.blink::xpath::Expression"* %71, %"struct.blink::xpath::EvaluationContext"* nonnull dereferenceable(48) %4) #11
  %76 = call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* nonnull %5) #11
  %77 = call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* nonnull %6) #11
  %78 = getelementptr inbounds %"class.blink::xpath::NumericOp", %"class.blink::xpath::NumericOp"* %1, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  switch i32 %79, label %110 [
    i32 0, label %80
    i32 1, label %86
    i32 2, label %92
    i32 3, label %98
    i32 4, label %104
  ]

80:                                               ; preds = %53
  %81 = fadd double %76, %77
  %82 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 2, i32* %82, align 8
  %83 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %83, align 4
  %84 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double %81, double* %84, align 8
  %85 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* null, %"class.blink::xpath::ValueData"** %85, align 8
  br label %115

86:                                               ; preds = %53
  %87 = fsub double %76, %77
  %88 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 2, i32* %88, align 8
  %89 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %89, align 4
  %90 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double %87, double* %90, align 8
  %91 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* null, %"class.blink::xpath::ValueData"** %91, align 8
  br label %115

92:                                               ; preds = %53
  %93 = fmul double %76, %77
  %94 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 2, i32* %94, align 8
  %95 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %95, align 4
  %96 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double %93, double* %96, align 8
  %97 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* null, %"class.blink::xpath::ValueData"** %97, align 8
  br label %115

98:                                               ; preds = %53
  %99 = fdiv double %76, %77
  %100 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 2, i32* %100, align 8
  %101 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %101, align 4
  %102 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double %99, double* %102, align 8
  %103 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* null, %"class.blink::xpath::ValueData"** %103, align 8
  br label %115

104:                                              ; preds = %53
  %105 = call double @fmod(double %76, double %77) #11
  %106 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 2, i32* %106, align 8
  %107 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %107, align 4
  %108 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  store double %105, double* %108, align 8
  %109 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::xpath::ValueData"* null, %"class.blink::xpath::ValueData"** %109, align 8
  br label %115

110:                                              ; preds = %53
  %111 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 2, i32* %111, align 8
  %112 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 0, i8* %112, align 4
  %113 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %114 = bitcast double* %113 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 16, i1 false)
  br label %115

115:                                              ; preds = %110, %104, %98, %92, %86, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #11
  %116 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 3, i32 0, i32 0
  %117 = load %"struct.WTF::KeyValuePair.255"*, %"struct.WTF::KeyValuePair.255"** %116, align 8
  %118 = icmp eq %"struct.WTF::KeyValuePair.255"* %117, null
  br i1 %118, label %122, label %119, !prof !4

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 3, i32 0, i32 1
  %121 = load i32, i32* %120, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.255"* nonnull %117, i32 %121) #11
  store %"struct.WTF::KeyValuePair.255"* null, %"struct.WTF::KeyValuePair.255"** %116, align 8
  br label %122

122:                                              ; preds = %115, %119
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nofree nounwind
declare double @fmod(double, double) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5xpath8EqTestOpC2ENS1_6OpcodeEPNS0_10ExpressionES4_(%"class.blink::xpath::EqTestOp"*, i32, %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::xpath::Expression"*, align 8
  %6 = alloca %"class.blink::xpath::Expression"*, align 8
  %7 = bitcast %"class.blink::xpath::EqTestOp"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %7) #11
  %8 = getelementptr inbounds %"class.blink::xpath::EqTestOp", %"class.blink::xpath::EqTestOp"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath8EqTestOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::xpath::EqTestOp", %"class.blink::xpath::EqTestOp"* %0, i64 0, i32 1
  store i32 %1, i32* %9, align 4
  %10 = bitcast %"class.blink::xpath::Expression"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  store %"class.blink::xpath::Expression"* %2, %"class.blink::xpath::Expression"** %6, align 8
  %11 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %2, i64 0, i32 2
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = getelementptr inbounds %"class.blink::xpath::EqTestOp", %"class.blink::xpath::EqTestOp"* %0, i64 0, i32 0, i32 2
  %14 = load i8, i8* %13, align 8, !range !3
  %15 = or i8 %14, %12
  store i8 %15, i8* %13, align 8
  %16 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %2, i64 0, i32 3
  %17 = load i8, i8* %16, align 1, !range !3
  %18 = getelementptr inbounds %"class.blink::xpath::EqTestOp", %"class.blink::xpath::EqTestOp"* %0, i64 0, i32 0, i32 3
  %19 = load i8, i8* %18, align 1, !range !3
  %20 = or i8 %19, %17
  store i8 %20, i8* %18, align 1
  %21 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %2, i64 0, i32 4
  %22 = load i8, i8* %21, align 2, !range !3
  %23 = getelementptr inbounds %"class.blink::xpath::EqTestOp", %"class.blink::xpath::EqTestOp"* %0, i64 0, i32 0, i32 4
  %24 = load i8, i8* %23, align 2, !range !3
  %25 = or i8 %24, %22
  store i8 %25, i8* %23, align 2
  %26 = getelementptr inbounds %"class.blink::xpath::EqTestOp", %"class.blink::xpath::EqTestOp"* %0, i64 0, i32 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.blink::xpath::EqTestOp", %"class.blink::xpath::EqTestOp"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::xpath::EqTestOp", %"class.blink::xpath::EqTestOp"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %47, label %32, !prof !2

32:                                               ; preds = %4
  %33 = ptrtoint %"class.blink::xpath::Expression"* %2 to i64
  %34 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %26, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Member"*, %"class.blink::Member"** %34, align 8
  %36 = zext i32 %28 to i64
  %37 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %35, i64 %36
  %38 = bitcast %"class.blink::Member"* %37 to i64*
  store atomic i64 %33, i64* %38 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %32
  %42 = bitcast %"class.blink::xpath::Expression"* %2 to i8*
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #11
  br label %44

44:                                               ; preds = %41, %32
  %45 = load i32, i32* %27, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %27, align 4
  br label %49

47:                                               ; preds = %4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector"* %26, %"class.blink::xpath::Expression"** nonnull dereferenceable(8) %6) #11
  %48 = load i32, i32* %27, align 4
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi i32 [ %46, %44 ], [ %48, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  %51 = bitcast %"class.blink::xpath::Expression"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51)
  store %"class.blink::xpath::Expression"* %3, %"class.blink::xpath::Expression"** %5, align 8
  %52 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %3, i64 0, i32 2
  %53 = load i8, i8* %52, align 8, !range !3
  %54 = load i8, i8* %13, align 8, !range !3
  %55 = or i8 %54, %53
  store i8 %55, i8* %13, align 8
  %56 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %3, i64 0, i32 3
  %57 = load i8, i8* %56, align 1, !range !3
  %58 = load i8, i8* %18, align 1, !range !3
  %59 = or i8 %58, %57
  store i8 %59, i8* %18, align 1
  %60 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %3, i64 0, i32 4
  %61 = load i8, i8* %60, align 2, !range !3
  %62 = load i8, i8* %23, align 2, !range !3
  %63 = or i8 %62, %61
  store i8 %63, i8* %23, align 2
  %64 = load i32, i32* %29, align 8
  %65 = icmp eq i32 %50, %64
  br i1 %65, label %81, label %66, !prof !2

66:                                               ; preds = %49
  %67 = ptrtoint %"class.blink::xpath::Expression"* %3 to i64
  %68 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %26, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::Member"*, %"class.blink::Member"** %68, align 8
  %70 = zext i32 %50 to i64
  %71 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %69, i64 %70
  %72 = bitcast %"class.blink::Member"* %71 to i64*
  store atomic i64 %67, i64* %72 monotonic, align 8
  %73 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %66
  %76 = bitcast %"class.blink::xpath::Expression"* %3 to i8*
  %77 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #11
  br label %78

78:                                               ; preds = %75, %66
  %79 = load i32, i32* %27, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %27, align 4
  br label %82

81:                                               ; preds = %49
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector"* %26, %"class.blink::xpath::Expression"** nonnull dereferenceable(8) %5) #11
  br label %82

82:                                               ; preds = %78, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink5xpath8EqTestOp7CompareERNS0_17EvaluationContextERKNS0_5ValueES6_(%"class.blink::xpath::EqTestOp"* readonly, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48), %"class.blink::xpath::Value"* dereferenceable(24), %"class.blink::xpath::Value"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::xpath::Value", align 8
  %6 = alloca %"class.blink::xpath::Value", align 8
  %7 = alloca %"class.blink::xpath::Value", align 8
  %8 = alloca %"class.blink::xpath::Value", align 8
  %9 = alloca %"class.blink::xpath::Value", align 8
  %10 = alloca %"class.blink::xpath::Value", align 8
  %11 = alloca %"class.blink::xpath::Value", align 8
  %12 = alloca %"class.blink::xpath::Value", align 8
  %13 = alloca %"class.blink::xpath::Value", align 8
  %14 = alloca %"class.blink::xpath::Value", align 8
  %15 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %2, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %3, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  br label %327

21:                                               ; preds = %4
  %22 = tail call dereferenceable(24) %"class.blink::xpath::NodeSet"* @_ZNK5blink5xpath5Value9ToNodeSetEPNS0_17EvaluationContextE(%"class.blink::xpath::Value"* %2, %"struct.blink::xpath::EvaluationContext"* %1) #11
  %23 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %3, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  switch i32 %24, label %327 [
    i32 0, label %25
    i32 2, label %168
    i32 3, label %246
    i32 1, label %318
  ]

25:                                               ; preds = %21
  %26 = tail call dereferenceable(24) %"class.blink::xpath::NodeSet"* @_ZNK5blink5xpath5Value9ToNodeSetEPNS0_17EvaluationContextE(%"class.blink::xpath::Value"* %3, %"struct.blink::xpath::EvaluationContext"* %1) #11
  %27 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %28, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %569, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %37 = bitcast %"class.blink::xpath::Value"* %5 to i8*
  %38 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %5, i64 0, i32 0
  %39 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %5, i64 0, i32 1
  %40 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %5, i64 0, i32 2
  %41 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %5, i64 0, i32 3, i32 0, i32 0
  %42 = bitcast %"class.blink::xpath::ValueData"** %41 to i8**
  %43 = bitcast %"class.blink::xpath::Value"* %6 to i8*
  %44 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %6, i64 0, i32 0
  %45 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %6, i64 0, i32 1
  %46 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %6, i64 0, i32 2
  %47 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %6, i64 0, i32 3, i32 0, i32 0
  %48 = bitcast %"class.blink::xpath::ValueData"** %47 to i8**
  br label %49

49:                                               ; preds = %34, %165
  %50 = phi %"class.blink::Member.17"* [ %28, %34 ], [ %166, %165 ]
  %51 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %35, align 8
  %52 = load i32, i32* %36, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %51, i64 %53
  %55 = icmp eq i32 %52, 0
  br i1 %55, label %165, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %50, i64 0, i32 0, i32 0
  br label %60

58:                                               ; preds = %163
  %59 = icmp eq %"class.blink::Member.17"* %164, %54
  br i1 %59, label %165, label %60

60:                                               ; preds = %56, %58
  %61 = phi %"class.blink::Member.17"* [ %51, %56 ], [ %164, %58 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #11
  %62 = load %"class.blink::Node"*, %"class.blink::Node"** %57, align 8
  %63 = call %"class.WTF::StringImpl"* @_ZN5blink5xpath11StringValueEPNS_4NodeE(%"class.blink::Node"* %62) #11
  store i32 3, i32* %38, align 8
  store i8 0, i8* %39, align 4
  store double 0.000000e+00, double* %40, align 8
  %64 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #11
  %65 = bitcast i8* %64 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %65, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %66, label %84, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i33
  %76 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %75, i33 1) #11
  %77 = extractvalue { i33, i1 } %76, 1
  %78 = extractvalue { i33, i1 } %76, 0
  %79 = icmp slt i33 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %82, !prof !2

81:                                               ; preds = %72
  call void @llvm.trap() #11
  unreachable

82:                                               ; preds = %72
  %83 = trunc i33 %78 to i32
  store i32 %83, i32* %73, align 4
  br label %84

84:                                               ; preds = %60, %67, %82
  %85 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #11
  store i8 1, i8* %85, align 8
  %86 = getelementptr inbounds i8, i8* %85, i64 1
  store i8 0, i8* %86, align 1
  %87 = getelementptr inbounds i8, i8* %85, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 16, i1 false) #11
  %88 = getelementptr inbounds i8, i8* %85, i64 -4
  %89 = bitcast i8* %88 to i16*
  %90 = load atomic i16, i16* %89 monotonic, align 2
  %91 = or i16 %90, 1
  store atomic i16 %91, i16* %89 release, align 2
  %92 = getelementptr inbounds i8, i8* %64, i64 8
  %93 = bitcast i8* %92 to i8**
  store i8* %85, i8** %93, align 8
  %94 = getelementptr inbounds i8, i8* %64, i64 -4
  %95 = bitcast i8* %94 to i16*
  %96 = load atomic i16, i16* %95 monotonic, align 2
  %97 = or i16 %96, 1
  store atomic i16 %97, i16* %95 release, align 2
  store i8* %64, i8** %42, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #11
  %98 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %61, i64 0, i32 0, i32 0
  %99 = load %"class.blink::Node"*, %"class.blink::Node"** %98, align 8
  %100 = call %"class.WTF::StringImpl"* @_ZN5blink5xpath11StringValueEPNS_4NodeE(%"class.blink::Node"* %99) #11
  store i32 3, i32* %44, align 8
  store i8 0, i8* %45, align 4
  store double 0.000000e+00, double* %46, align 8
  %101 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #11
  %102 = bitcast i8* %101 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %100, %"class.WTF::StringImpl"** %102, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %84
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %121

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = zext i32 %111 to i33
  %113 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #11
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !2

118:                                              ; preds = %109
  call void @llvm.trap() #11
  unreachable

119:                                              ; preds = %109
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %110, align 4
  br label %121

121:                                              ; preds = %84, %104, %119
  %122 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #11
  store i8 1, i8* %122, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 1
  store i8 0, i8* %123, align 1
  %124 = getelementptr inbounds i8, i8* %122, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %124, i8 0, i64 16, i1 false) #11
  %125 = getelementptr inbounds i8, i8* %122, i64 -4
  %126 = bitcast i8* %125 to i16*
  %127 = load atomic i16, i16* %126 monotonic, align 2
  %128 = or i16 %127, 1
  store atomic i16 %128, i16* %126 release, align 2
  %129 = getelementptr inbounds i8, i8* %101, i64 8
  %130 = bitcast i8* %129 to i8**
  store i8* %122, i8** %130, align 8
  %131 = getelementptr inbounds i8, i8* %101, i64 -4
  %132 = bitcast i8* %131 to i16*
  %133 = load atomic i16, i16* %132 monotonic, align 2
  %134 = or i16 %133, 1
  store atomic i16 %134, i16* %132 release, align 2
  store i8* %101, i8** %48, align 8
  %135 = call zeroext i1 @_ZNK5blink5xpath8EqTestOp7CompareERNS0_17EvaluationContextERKNS0_5ValueES6_(%"class.blink::xpath::EqTestOp"* %0, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::xpath::Value"* nonnull dereferenceable(24) %5, %"class.blink::xpath::Value"* nonnull dereferenceable(24) %6)
  br i1 %103, label %149, label %136

136:                                              ; preds = %121
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #11
  br label %149

149:                                              ; preds = %121, %145, %148
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #11
  br i1 %66, label %163, label %150

150:                                              ; preds = %149
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #11
  br label %163

163:                                              ; preds = %149, %159, %162
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #11
  %164 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %61, i64 1
  br i1 %135, label %569, label %58

165:                                              ; preds = %58, %49
  %166 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %50, i64 1
  %167 = icmp eq %"class.blink::Member.17"* %166, %32
  br i1 %167, label %569, label %49

168:                                              ; preds = %21
  %169 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %170 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %169, align 8
  %171 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %172 = load i32, i32* %171, align 4
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %170, i64 %173
  %175 = icmp eq i32 %172, 0
  br i1 %175, label %569, label %176

176:                                              ; preds = %168
  %177 = bitcast %"class.blink::xpath::Value"* %7 to i8*
  %178 = bitcast %"class.blink::xpath::Value"* %8 to i8*
  %179 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %8, i64 0, i32 0
  %180 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %8, i64 0, i32 1
  %181 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %8, i64 0, i32 2
  %182 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %8, i64 0, i32 3, i32 0, i32 0
  %183 = bitcast %"class.blink::xpath::ValueData"** %182 to i8**
  %184 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %7, i64 0, i32 0
  %185 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %7, i64 0, i32 1
  %186 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %7, i64 0, i32 2
  %187 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %7, i64 0, i32 3, i32 0, i32 0
  br label %190

188:                                              ; preds = %244
  %189 = icmp eq %"class.blink::Member.17"* %245, %174
  br i1 %189, label %569, label %190

190:                                              ; preds = %176, %188
  %191 = phi %"class.blink::Member.17"* [ %170, %176 ], [ %245, %188 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %177) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %178) #11
  %192 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %191, i64 0, i32 0, i32 0
  %193 = load %"class.blink::Node"*, %"class.blink::Node"** %192, align 8
  %194 = call %"class.WTF::StringImpl"* @_ZN5blink5xpath11StringValueEPNS_4NodeE(%"class.blink::Node"* %193) #11
  store i32 3, i32* %179, align 8
  store i8 0, i8* %180, align 4
  store double 0.000000e+00, double* %181, align 8
  %195 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #11
  %196 = bitcast i8* %195 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %194, %"class.WTF::StringImpl"** %196, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %197, label %215, label %198

198:                                              ; preds = %190
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %215

203:                                              ; preds = %198
  %204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %205 = load i32, i32* %204, align 4
  %206 = zext i32 %205 to i33
  %207 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %206, i33 1) #11
  %208 = extractvalue { i33, i1 } %207, 1
  %209 = extractvalue { i33, i1 } %207, 0
  %210 = icmp slt i33 %209, 0
  %211 = or i1 %208, %210
  br i1 %211, label %212, label %213, !prof !2

212:                                              ; preds = %203
  call void @llvm.trap() #11
  unreachable

213:                                              ; preds = %203
  %214 = trunc i33 %209 to i32
  store i32 %214, i32* %204, align 4
  br label %215

215:                                              ; preds = %190, %198, %213
  %216 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #11
  store i8 1, i8* %216, align 8
  %217 = getelementptr inbounds i8, i8* %216, i64 1
  store i8 0, i8* %217, align 1
  %218 = getelementptr inbounds i8, i8* %216, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %218, i8 0, i64 16, i1 false) #11
  %219 = getelementptr inbounds i8, i8* %216, i64 -4
  %220 = bitcast i8* %219 to i16*
  %221 = load atomic i16, i16* %220 monotonic, align 2
  %222 = or i16 %221, 1
  store atomic i16 %222, i16* %220 release, align 2
  %223 = getelementptr inbounds i8, i8* %195, i64 8
  %224 = bitcast i8* %223 to i8**
  store i8* %216, i8** %224, align 8
  %225 = getelementptr inbounds i8, i8* %195, i64 -4
  %226 = bitcast i8* %225 to i16*
  %227 = load atomic i16, i16* %226 monotonic, align 2
  %228 = or i16 %227, 1
  store atomic i16 %228, i16* %226 release, align 2
  store i8* %195, i8** %183, align 8
  %229 = call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* nonnull %8) #11
  store i32 2, i32* %184, align 8
  store i8 0, i8* %185, align 4
  store double %229, double* %186, align 8
  store %"class.blink::xpath::ValueData"* null, %"class.blink::xpath::ValueData"** %187, align 8
  %230 = call zeroext i1 @_ZNK5blink5xpath8EqTestOp7CompareERNS0_17EvaluationContextERKNS0_5ValueES6_(%"class.blink::xpath::EqTestOp"* %0, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::xpath::Value"* nonnull dereferenceable(24) %7, %"class.blink::xpath::Value"* dereferenceable(24) %3)
  br i1 %197, label %244, label %231

231:                                              ; preds = %215
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load atomic i32, i32* %232 monotonic, align 4
  %234 = and i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %237 = load i32, i32* %236, align 4
  br i1 %235, label %238, label %240

238:                                              ; preds = %231
  %239 = add i32 %237, -1
  store i32 %239, i32* %236, align 4
  br label %240

240:                                              ; preds = %238, %231
  %241 = phi i32 [ %239, %238 ], [ %237, %231 ]
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %240
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %194) #11
  br label %244

244:                                              ; preds = %215, %240, %243
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %178) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %177) #11
  %245 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %191, i64 1
  br i1 %230, label %569, label %188

246:                                              ; preds = %21
  %247 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %248 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %247, align 8
  %249 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %250 = load i32, i32* %249, align 4
  %251 = zext i32 %250 to i64
  %252 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %248, i64 %251
  %253 = icmp eq i32 %250, 0
  br i1 %253, label %569, label %254

254:                                              ; preds = %246
  %255 = bitcast %"class.blink::xpath::Value"* %9 to i8*
  %256 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %9, i64 0, i32 0
  %257 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %9, i64 0, i32 1
  %258 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %9, i64 0, i32 2
  %259 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %9, i64 0, i32 3, i32 0, i32 0
  %260 = bitcast %"class.blink::xpath::ValueData"** %259 to i8**
  br label %263

261:                                              ; preds = %316
  %262 = icmp eq %"class.blink::Member.17"* %317, %252
  br i1 %262, label %569, label %263

263:                                              ; preds = %254, %261
  %264 = phi %"class.blink::Member.17"* [ %248, %254 ], [ %317, %261 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %255) #11
  %265 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %264, i64 0, i32 0, i32 0
  %266 = load %"class.blink::Node"*, %"class.blink::Node"** %265, align 8
  %267 = call %"class.WTF::StringImpl"* @_ZN5blink5xpath11StringValueEPNS_4NodeE(%"class.blink::Node"* %266) #11
  store i32 3, i32* %256, align 8
  store i8 0, i8* %257, align 4
  store double 0.000000e+00, double* %258, align 8
  %268 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #11
  %269 = bitcast i8* %268 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %267, %"class.WTF::StringImpl"** %269, align 8
  %270 = icmp eq %"class.WTF::StringImpl"* %267, null
  br i1 %270, label %288, label %271

271:                                              ; preds = %263
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load atomic i32, i32* %272 monotonic, align 4
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %288

276:                                              ; preds = %271
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 0
  %278 = load i32, i32* %277, align 4
  %279 = zext i32 %278 to i33
  %280 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %279, i33 1) #11
  %281 = extractvalue { i33, i1 } %280, 1
  %282 = extractvalue { i33, i1 } %280, 0
  %283 = icmp slt i33 %282, 0
  %284 = or i1 %281, %283
  br i1 %284, label %285, label %286, !prof !2

285:                                              ; preds = %276
  call void @llvm.trap() #11
  unreachable

286:                                              ; preds = %276
  %287 = trunc i33 %282 to i32
  store i32 %287, i32* %277, align 4
  br label %288

288:                                              ; preds = %263, %271, %286
  %289 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #11
  store i8 1, i8* %289, align 8
  %290 = getelementptr inbounds i8, i8* %289, i64 1
  store i8 0, i8* %290, align 1
  %291 = getelementptr inbounds i8, i8* %289, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %291, i8 0, i64 16, i1 false) #11
  %292 = getelementptr inbounds i8, i8* %289, i64 -4
  %293 = bitcast i8* %292 to i16*
  %294 = load atomic i16, i16* %293 monotonic, align 2
  %295 = or i16 %294, 1
  store atomic i16 %295, i16* %293 release, align 2
  %296 = getelementptr inbounds i8, i8* %268, i64 8
  %297 = bitcast i8* %296 to i8**
  store i8* %289, i8** %297, align 8
  %298 = getelementptr inbounds i8, i8* %268, i64 -4
  %299 = bitcast i8* %298 to i16*
  %300 = load atomic i16, i16* %299 monotonic, align 2
  %301 = or i16 %300, 1
  store atomic i16 %301, i16* %299 release, align 2
  store i8* %268, i8** %260, align 8
  %302 = call zeroext i1 @_ZNK5blink5xpath8EqTestOp7CompareERNS0_17EvaluationContextERKNS0_5ValueES6_(%"class.blink::xpath::EqTestOp"* %0, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::xpath::Value"* nonnull dereferenceable(24) %9, %"class.blink::xpath::Value"* dereferenceable(24) %3)
  br i1 %270, label %316, label %303

303:                                              ; preds = %288
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = load atomic i32, i32* %304 monotonic, align 4
  %306 = and i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 0
  %309 = load i32, i32* %308, align 4
  br i1 %307, label %310, label %312

310:                                              ; preds = %303
  %311 = add i32 %309, -1
  store i32 %311, i32* %308, align 4
  br label %312

312:                                              ; preds = %310, %303
  %313 = phi i32 [ %311, %310 ], [ %309, %303 ]
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %316

315:                                              ; preds = %312
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %267) #11
  br label %316

316:                                              ; preds = %288, %312, %315
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %255) #11
  %317 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %264, i64 1
  br i1 %302, label %569, label %261

318:                                              ; preds = %21
  %319 = bitcast %"class.blink::xpath::Value"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %319) #11
  %320 = tail call zeroext i1 @_ZNK5blink5xpath5Value9ToBooleanEv(%"class.blink::xpath::Value"* %2) #11
  %321 = zext i1 %320 to i8
  %322 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %10, i64 0, i32 0
  store i32 1, i32* %322, align 8
  %323 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %10, i64 0, i32 1
  store i8 %321, i8* %323, align 4
  %324 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %10, i64 0, i32 2
  %325 = bitcast double* %324 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %325, i8 0, i64 16, i1 false) #11
  %326 = call zeroext i1 @_ZNK5blink5xpath8EqTestOp7CompareERNS0_17EvaluationContextERKNS0_5ValueES6_(%"class.blink::xpath::EqTestOp"* %0, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::xpath::Value"* nonnull dereferenceable(24) %10, %"class.blink::xpath::Value"* dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %319) #11
  br label %569

327:                                              ; preds = %18, %21
  %328 = phi i32 [ %20, %18 ], [ %24, %21 ]
  %329 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %3, i64 0, i32 0
  %330 = icmp eq i32 %328, 0
  br i1 %330, label %331, label %493

331:                                              ; preds = %327
  %332 = tail call dereferenceable(24) %"class.blink::xpath::NodeSet"* @_ZNK5blink5xpath5Value9ToNodeSetEPNS0_17EvaluationContextE(%"class.blink::xpath::Value"* %3, %"struct.blink::xpath::EvaluationContext"* %1) #11
  %333 = load i32, i32* %15, align 8
  switch i32 %333, label %493 [
    i32 2, label %334
    i32 3, label %412
    i32 1, label %484
  ]

334:                                              ; preds = %331
  %335 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %332, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %336 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %335, align 8
  %337 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %332, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %338 = load i32, i32* %337, align 4
  %339 = zext i32 %338 to i64
  %340 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %336, i64 %339
  %341 = icmp eq i32 %338, 0
  br i1 %341, label %569, label %342

342:                                              ; preds = %334
  %343 = bitcast %"class.blink::xpath::Value"* %11 to i8*
  %344 = bitcast %"class.blink::xpath::Value"* %12 to i8*
  %345 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %12, i64 0, i32 0
  %346 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %12, i64 0, i32 1
  %347 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %12, i64 0, i32 2
  %348 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %12, i64 0, i32 3, i32 0, i32 0
  %349 = bitcast %"class.blink::xpath::ValueData"** %348 to i8**
  %350 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %11, i64 0, i32 0
  %351 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %11, i64 0, i32 1
  %352 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %11, i64 0, i32 2
  %353 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %11, i64 0, i32 3, i32 0, i32 0
  br label %356

354:                                              ; preds = %410
  %355 = icmp eq %"class.blink::Member.17"* %411, %340
  br i1 %355, label %569, label %356

356:                                              ; preds = %342, %354
  %357 = phi %"class.blink::Member.17"* [ %336, %342 ], [ %411, %354 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %343) #11
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %344) #11
  %358 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %357, i64 0, i32 0, i32 0
  %359 = load %"class.blink::Node"*, %"class.blink::Node"** %358, align 8
  %360 = call %"class.WTF::StringImpl"* @_ZN5blink5xpath11StringValueEPNS_4NodeE(%"class.blink::Node"* %359) #11
  store i32 3, i32* %345, align 8
  store i8 0, i8* %346, align 4
  store double 0.000000e+00, double* %347, align 8
  %361 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #11
  %362 = bitcast i8* %361 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %360, %"class.WTF::StringImpl"** %362, align 8
  %363 = icmp eq %"class.WTF::StringImpl"* %360, null
  br i1 %363, label %381, label %364

364:                                              ; preds = %356
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = load atomic i32, i32* %365 monotonic, align 4
  %367 = and i32 %366, 2
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %369, label %381

369:                                              ; preds = %364
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 0
  %371 = load i32, i32* %370, align 4
  %372 = zext i32 %371 to i33
  %373 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %372, i33 1) #11
  %374 = extractvalue { i33, i1 } %373, 1
  %375 = extractvalue { i33, i1 } %373, 0
  %376 = icmp slt i33 %375, 0
  %377 = or i1 %374, %376
  br i1 %377, label %378, label %379, !prof !2

378:                                              ; preds = %369
  call void @llvm.trap() #11
  unreachable

379:                                              ; preds = %369
  %380 = trunc i33 %375 to i32
  store i32 %380, i32* %370, align 4
  br label %381

381:                                              ; preds = %356, %364, %379
  %382 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #11
  store i8 1, i8* %382, align 8
  %383 = getelementptr inbounds i8, i8* %382, i64 1
  store i8 0, i8* %383, align 1
  %384 = getelementptr inbounds i8, i8* %382, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %384, i8 0, i64 16, i1 false) #11
  %385 = getelementptr inbounds i8, i8* %382, i64 -4
  %386 = bitcast i8* %385 to i16*
  %387 = load atomic i16, i16* %386 monotonic, align 2
  %388 = or i16 %387, 1
  store atomic i16 %388, i16* %386 release, align 2
  %389 = getelementptr inbounds i8, i8* %361, i64 8
  %390 = bitcast i8* %389 to i8**
  store i8* %382, i8** %390, align 8
  %391 = getelementptr inbounds i8, i8* %361, i64 -4
  %392 = bitcast i8* %391 to i16*
  %393 = load atomic i16, i16* %392 monotonic, align 2
  %394 = or i16 %393, 1
  store atomic i16 %394, i16* %392 release, align 2
  store i8* %361, i8** %349, align 8
  %395 = call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* nonnull %12) #11
  store i32 2, i32* %350, align 8
  store i8 0, i8* %351, align 4
  store double %395, double* %352, align 8
  store %"class.blink::xpath::ValueData"* null, %"class.blink::xpath::ValueData"** %353, align 8
  %396 = call zeroext i1 @_ZNK5blink5xpath8EqTestOp7CompareERNS0_17EvaluationContextERKNS0_5ValueES6_(%"class.blink::xpath::EqTestOp"* %0, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::xpath::Value"* dereferenceable(24) %2, %"class.blink::xpath::Value"* nonnull dereferenceable(24) %11)
  br i1 %363, label %410, label %397

397:                                              ; preds = %381
  %398 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %399 = load atomic i32, i32* %398 monotonic, align 4
  %400 = and i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 0
  %403 = load i32, i32* %402, align 4
  br i1 %401, label %404, label %406

404:                                              ; preds = %397
  %405 = add i32 %403, -1
  store i32 %405, i32* %402, align 4
  br label %406

406:                                              ; preds = %404, %397
  %407 = phi i32 [ %405, %404 ], [ %403, %397 ]
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %410

409:                                              ; preds = %406
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %360) #11
  br label %410

410:                                              ; preds = %381, %406, %409
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %344) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %343) #11
  %411 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %357, i64 1
  br i1 %396, label %569, label %354

412:                                              ; preds = %331
  %413 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %332, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %414 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %413, align 8
  %415 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %332, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %416 = load i32, i32* %415, align 4
  %417 = zext i32 %416 to i64
  %418 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %414, i64 %417
  %419 = icmp eq i32 %416, 0
  br i1 %419, label %569, label %420

420:                                              ; preds = %412
  %421 = bitcast %"class.blink::xpath::Value"* %13 to i8*
  %422 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %13, i64 0, i32 0
  %423 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %13, i64 0, i32 1
  %424 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %13, i64 0, i32 2
  %425 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %13, i64 0, i32 3, i32 0, i32 0
  %426 = bitcast %"class.blink::xpath::ValueData"** %425 to i8**
  br label %429

427:                                              ; preds = %482
  %428 = icmp eq %"class.blink::Member.17"* %483, %418
  br i1 %428, label %569, label %429

429:                                              ; preds = %420, %427
  %430 = phi %"class.blink::Member.17"* [ %414, %420 ], [ %483, %427 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %421) #11
  %431 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %430, i64 0, i32 0, i32 0
  %432 = load %"class.blink::Node"*, %"class.blink::Node"** %431, align 8
  %433 = call %"class.WTF::StringImpl"* @_ZN5blink5xpath11StringValueEPNS_4NodeE(%"class.blink::Node"* %432) #11
  store i32 3, i32* %422, align 8
  store i8 0, i8* %423, align 4
  store double 0.000000e+00, double* %424, align 8
  %434 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64 16) #11
  %435 = bitcast i8* %434 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %433, %"class.WTF::StringImpl"** %435, align 8
  %436 = icmp eq %"class.WTF::StringImpl"* %433, null
  br i1 %436, label %454, label %437

437:                                              ; preds = %429
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %439 = load atomic i32, i32* %438 monotonic, align 4
  %440 = and i32 %439, 2
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %454

442:                                              ; preds = %437
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 0
  %444 = load i32, i32* %443, align 4
  %445 = zext i32 %444 to i33
  %446 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %445, i33 1) #11
  %447 = extractvalue { i33, i1 } %446, 1
  %448 = extractvalue { i33, i1 } %446, 0
  %449 = icmp slt i33 %448, 0
  %450 = or i1 %447, %449
  br i1 %450, label %451, label %452, !prof !2

451:                                              ; preds = %442
  call void @llvm.trap() #11
  unreachable

452:                                              ; preds = %442
  %453 = trunc i33 %448 to i32
  store i32 %453, i32* %443, align 4
  br label %454

454:                                              ; preds = %429, %437, %452
  %455 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64 24) #11
  store i8 1, i8* %455, align 8
  %456 = getelementptr inbounds i8, i8* %455, i64 1
  store i8 0, i8* %456, align 1
  %457 = getelementptr inbounds i8, i8* %455, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %457, i8 0, i64 16, i1 false) #11
  %458 = getelementptr inbounds i8, i8* %455, i64 -4
  %459 = bitcast i8* %458 to i16*
  %460 = load atomic i16, i16* %459 monotonic, align 2
  %461 = or i16 %460, 1
  store atomic i16 %461, i16* %459 release, align 2
  %462 = getelementptr inbounds i8, i8* %434, i64 8
  %463 = bitcast i8* %462 to i8**
  store i8* %455, i8** %463, align 8
  %464 = getelementptr inbounds i8, i8* %434, i64 -4
  %465 = bitcast i8* %464 to i16*
  %466 = load atomic i16, i16* %465 monotonic, align 2
  %467 = or i16 %466, 1
  store atomic i16 %467, i16* %465 release, align 2
  store i8* %434, i8** %426, align 8
  %468 = call zeroext i1 @_ZNK5blink5xpath8EqTestOp7CompareERNS0_17EvaluationContextERKNS0_5ValueES6_(%"class.blink::xpath::EqTestOp"* %0, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::xpath::Value"* dereferenceable(24) %2, %"class.blink::xpath::Value"* nonnull dereferenceable(24) %13)
  br i1 %436, label %482, label %469

469:                                              ; preds = %454
  %470 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %471 = load atomic i32, i32* %470 monotonic, align 4
  %472 = and i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 0
  %475 = load i32, i32* %474, align 4
  br i1 %473, label %476, label %478

476:                                              ; preds = %469
  %477 = add i32 %475, -1
  store i32 %477, i32* %474, align 4
  br label %478

478:                                              ; preds = %476, %469
  %479 = phi i32 [ %477, %476 ], [ %475, %469 ]
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %481, label %482

481:                                              ; preds = %478
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %433) #11
  br label %482

482:                                              ; preds = %454, %478, %481
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %421) #11
  %483 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %430, i64 1
  br i1 %468, label %569, label %427

484:                                              ; preds = %331
  %485 = bitcast %"class.blink::xpath::Value"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %485) #11
  %486 = tail call zeroext i1 @_ZNK5blink5xpath5Value9ToBooleanEv(%"class.blink::xpath::Value"* %3) #11
  %487 = zext i1 %486 to i8
  %488 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %14, i64 0, i32 0
  store i32 1, i32* %488, align 8
  %489 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %14, i64 0, i32 1
  store i8 %487, i8* %489, align 4
  %490 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %14, i64 0, i32 2
  %491 = bitcast double* %490 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %491, i8 0, i64 16, i1 false) #11
  %492 = call zeroext i1 @_ZNK5blink5xpath8EqTestOp7CompareERNS0_17EvaluationContextERKNS0_5ValueES6_(%"class.blink::xpath::EqTestOp"* %0, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1, %"class.blink::xpath::Value"* dereferenceable(24) %2, %"class.blink::xpath::Value"* nonnull dereferenceable(24) %14)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %485) #11
  br label %569

493:                                              ; preds = %331, %327
  %494 = getelementptr inbounds %"class.blink::xpath::EqTestOp", %"class.blink::xpath::EqTestOp"* %0, i64 0, i32 1
  %495 = load i32, i32* %494, align 4
  switch i32 %495, label %569 [
    i32 0, label %496
    i32 1, label %496
    i32 2, label %553
    i32 4, label %557
    i32 3, label %561
    i32 5, label %565
  ]

496:                                              ; preds = %493, %493
  %497 = load i32, i32* %15, align 8
  %498 = icmp eq i32 %497, 1
  br i1 %498, label %502, label %499

499:                                              ; preds = %496
  %500 = load i32, i32* %329, align 8
  %501 = icmp eq i32 %500, 1
  br i1 %501, label %502, label %507

502:                                              ; preds = %499, %496
  %503 = tail call zeroext i1 @_ZNK5blink5xpath5Value9ToBooleanEv(%"class.blink::xpath::Value"* %2) #11
  %504 = tail call zeroext i1 @_ZNK5blink5xpath5Value9ToBooleanEv(%"class.blink::xpath::Value"* %3) #11
  %505 = xor i1 %503, %504
  %506 = xor i1 %505, true
  br label %548

507:                                              ; preds = %499
  %508 = icmp eq i32 %497, 2
  %509 = icmp eq i32 %500, 2
  %510 = or i1 %508, %509
  br i1 %510, label %511, label %515

511:                                              ; preds = %507
  %512 = tail call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* %2) #11
  %513 = tail call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* %3) #11
  %514 = fcmp oeq double %512, %513
  br label %548

515:                                              ; preds = %507
  %516 = tail call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* %2) #11
  %517 = tail call %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"* %3) #11
  %518 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %516, %"class.WTF::StringImpl"* %517) #11
  %519 = icmp eq %"class.WTF::StringImpl"* %517, null
  br i1 %519, label %533, label %520

520:                                              ; preds = %515
  %521 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %517, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %522 = load atomic i32, i32* %521 monotonic, align 4
  %523 = and i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %517, i64 0, i32 0
  %526 = load i32, i32* %525, align 4
  br i1 %524, label %527, label %529

527:                                              ; preds = %520
  %528 = add i32 %526, -1
  store i32 %528, i32* %525, align 4
  br label %529

529:                                              ; preds = %527, %520
  %530 = phi i32 [ %528, %527 ], [ %526, %520 ]
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %532, label %533

532:                                              ; preds = %529
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %517) #11
  br label %533

533:                                              ; preds = %515, %529, %532
  %534 = icmp eq %"class.WTF::StringImpl"* %516, null
  br i1 %534, label %548, label %535

535:                                              ; preds = %533
  %536 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %516, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %537 = load atomic i32, i32* %536 monotonic, align 4
  %538 = and i32 %537, 2
  %539 = icmp eq i32 %538, 0
  %540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %516, i64 0, i32 0
  %541 = load i32, i32* %540, align 4
  br i1 %539, label %542, label %544

542:                                              ; preds = %535
  %543 = add i32 %541, -1
  store i32 %543, i32* %540, align 4
  br label %544

544:                                              ; preds = %542, %535
  %545 = phi i32 [ %543, %542 ], [ %541, %535 ]
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %547, label %548

547:                                              ; preds = %544
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %516) #11
  br label %548

548:                                              ; preds = %547, %544, %533, %511, %502
  %549 = phi i1 [ %506, %502 ], [ %514, %511 ], [ %518, %533 ], [ %518, %544 ], [ %518, %547 ]
  %550 = load i32, i32* %494, align 4
  %551 = icmp ne i32 %550, 0
  %552 = xor i1 %549, %551
  ret i1 %552

553:                                              ; preds = %493
  %554 = tail call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* %2) #11
  %555 = tail call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* %3) #11
  %556 = fcmp ogt double %554, %555
  br label %569

557:                                              ; preds = %493
  %558 = tail call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* %2) #11
  %559 = tail call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* %3) #11
  %560 = fcmp oge double %558, %559
  br label %569

561:                                              ; preds = %493
  %562 = tail call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* %2) #11
  %563 = tail call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* %3) #11
  %564 = fcmp olt double %562, %563
  br label %569

565:                                              ; preds = %493
  %566 = tail call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* %2) #11
  %567 = tail call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* %3) #11
  %568 = fcmp ole double %566, %567
  br label %569

569:                                              ; preds = %261, %316, %188, %244, %165, %163, %427, %482, %354, %410, %246, %168, %25, %412, %334, %484, %318, %493, %565, %561, %557, %553
  %570 = phi i1 [ %568, %565 ], [ %564, %561 ], [ %560, %557 ], [ %556, %553 ], [ false, %493 ], [ %326, %318 ], [ %492, %484 ], [ false, %334 ], [ false, %412 ], [ false, %25 ], [ false, %168 ], [ false, %246 ], [ false, %354 ], [ true, %410 ], [ false, %427 ], [ true, %482 ], [ true, %163 ], [ false, %165 ], [ false, %188 ], [ true, %244 ], [ false, %261 ], [ true, %316 ]
  ret i1 %570
}

declare dereferenceable(24) %"class.blink::xpath::NodeSet"* @_ZNK5blink5xpath5Value9ToNodeSetEPNS0_17EvaluationContextE(%"class.blink::xpath::Value"*, %"struct.blink::xpath::EvaluationContext"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink5xpath11StringValueEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink5xpath5Value9ToBooleanEv(%"class.blink::xpath::Value"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink5xpath5Value8ToStringEv(%"class.blink::xpath::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath8EqTestOp8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::EqTestOp"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::xpath::EvaluationContext", align 8
  %5 = alloca %"class.blink::xpath::Value", align 8
  %6 = alloca %"class.blink::xpath::Value", align 8
  %7 = bitcast %"struct.blink::xpath::EvaluationContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #11
  %8 = bitcast %"struct.blink::xpath::EvaluationContext"* %2 to i8*
  %9 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 3
  %10 = bitcast %"class.WTF::HashMap.251"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -86, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %8, i64 16, i1 false) #11
  %11 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 3
  %12 = getelementptr inbounds %"class.WTF::HashMap.251", %"class.WTF::HashMap.251"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 2
  %14 = bitcast %"class.WTF::HashMap.251"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #11
  %15 = load i32, i32* %13, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %53, label %17

17:                                               ; preds = %3
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.252"* %12, i32 %15) #11
  %18 = load i32, i32* %13, align 4
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 0
  %21 = load %"struct.WTF::KeyValuePair.255"*, %"struct.WTF::KeyValuePair.255"** %20, align 8
  %22 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %21, i64 %24
  br i1 %19, label %53, label %26

26:                                               ; preds = %17
  %27 = icmp eq i32 %23, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %26, %32
  %29 = phi %"struct.WTF::KeyValuePair.255"* [ %33, %32 ], [ %21, %26 ]
  %30 = bitcast %"struct.WTF::KeyValuePair.255"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  switch i64 %31, label %35 [
    i64 -1, label %32
    i64 0, label %32
  ]

32:                                               ; preds = %28, %28
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %29, i64 1
  %34 = icmp eq %"struct.WTF::KeyValuePair.255"* %33, %25
  br i1 %34, label %53, label %28

35:                                               ; preds = %28, %26
  %36 = phi %"struct.WTF::KeyValuePair.255"* [ %21, %26 ], [ %29, %28 ]
  %37 = icmp eq %"struct.WTF::KeyValuePair.255"* %36, %25
  br i1 %37, label %53, label %38

38:                                               ; preds = %35, %51
  %39 = phi %"struct.WTF::KeyValuePair.255"* [ %45, %51 ], [ %36, %35 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %39, i64 0, i32 0
  %41 = call { %"struct.WTF::KeyValuePair.255"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.252"* %12, %"class.WTF::String"* dereferenceable(8) %40, %"struct.WTF::KeyValuePair.255"* dereferenceable(16) %39) #11
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %39, i64 1
  %43 = icmp eq %"struct.WTF::KeyValuePair.255"* %42, %25
  br i1 %43, label %53, label %44

44:                                               ; preds = %38, %48
  %45 = phi %"struct.WTF::KeyValuePair.255"* [ %49, %48 ], [ %42, %38 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.255"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  switch i64 %47, label %51 [
    i64 -1, label %48
    i64 0, label %48
  ]

48:                                               ; preds = %44, %44
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %45, i64 1
  %50 = icmp eq %"struct.WTF::KeyValuePair.255"* %49, %25
  br i1 %50, label %53, label %44

51:                                               ; preds = %44
  %52 = icmp eq %"struct.WTF::KeyValuePair.255"* %45, %25
  br i1 %52, label %53, label %38

53:                                               ; preds = %32, %38, %51, %48, %3, %17, %35
  %54 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 4
  %55 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 4
  %56 = bitcast i8** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i8** %54 to i64*
  store i64 %57, i64* %58, align 8
  %59 = bitcast %"class.blink::xpath::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 8 bitcast ({ i32, i8, [3 x i8], double, %"class.blink::Member.2" }* @__const._ZNK5blink5xpath9Predicate8EvaluateERNS0_17EvaluationContextE.result to i8*), i64 24, i1 false)
  %60 = getelementptr inbounds %"class.blink::xpath::EqTestOp", %"class.blink::xpath::EqTestOp"* %1, i64 0, i32 0, i32 1, i32 0
  %61 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %60, i32 0) #11
  %62 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %62, align 8
  %64 = bitcast %"class.blink::xpath::Expression"* %63 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %65 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %65, i64 3
  %67 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %66, align 8
  call void %67(%"class.blink::xpath::Value"* nonnull sret %5, %"class.blink::xpath::Expression"* %63, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #11
  %68 = bitcast %"class.blink::xpath::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %68, i8* align 8 bitcast ({ i32, i8, [3 x i8], double, %"class.blink::Member.2" }* @__const._ZNK5blink5xpath9Predicate8EvaluateERNS0_17EvaluationContextE.result to i8*), i64 24, i1 false)
  %69 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %60, i32 1) #11
  %70 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %70, align 8
  %72 = bitcast %"class.blink::xpath::Expression"* %71 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %73 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %73, i64 3
  %75 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %74, align 8
  call void %75(%"class.blink::xpath::Value"* nonnull sret %6, %"class.blink::xpath::Expression"* %71, %"struct.blink::xpath::EvaluationContext"* nonnull dereferenceable(48) %4) #11
  %76 = call zeroext i1 @_ZNK5blink5xpath8EqTestOp7CompareERNS0_17EvaluationContextERKNS0_5ValueES6_(%"class.blink::xpath::EqTestOp"* %1, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2, %"class.blink::xpath::Value"* nonnull dereferenceable(24) %5, %"class.blink::xpath::Value"* nonnull dereferenceable(24) %6)
  %77 = zext i1 %76 to i8
  %78 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 1, i32* %78, align 8
  %79 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 %77, i8* %79, align 4
  %80 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %81 = bitcast double* %80 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 16, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #11
  %82 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 3, i32 0, i32 0
  %83 = load %"struct.WTF::KeyValuePair.255"*, %"struct.WTF::KeyValuePair.255"** %82, align 8
  %84 = icmp eq %"struct.WTF::KeyValuePair.255"* %83, null
  br i1 %84, label %88, label %85, !prof !4

85:                                               ; preds = %53
  %86 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 3, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.255"* nonnull %83, i32 %87) #11
  store %"struct.WTF::KeyValuePair.255"* null, %"struct.WTF::KeyValuePair.255"** %82, align 8
  br label %88

88:                                               ; preds = %53, %85
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5xpath9LogicalOpC2ENS1_6OpcodeEPNS0_10ExpressionES4_(%"class.blink::xpath::LogicalOp"*, i32, %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::xpath::Expression"*, align 8
  %6 = alloca %"class.blink::xpath::Expression"*, align 8
  %7 = bitcast %"class.blink::xpath::LogicalOp"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %7) #11
  %8 = getelementptr inbounds %"class.blink::xpath::LogicalOp", %"class.blink::xpath::LogicalOp"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath9LogicalOpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::xpath::LogicalOp", %"class.blink::xpath::LogicalOp"* %0, i64 0, i32 1
  store i32 %1, i32* %9, align 4
  %10 = bitcast %"class.blink::xpath::Expression"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  store %"class.blink::xpath::Expression"* %2, %"class.blink::xpath::Expression"** %6, align 8
  %11 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %2, i64 0, i32 2
  %12 = load i8, i8* %11, align 8, !range !3
  %13 = getelementptr inbounds %"class.blink::xpath::LogicalOp", %"class.blink::xpath::LogicalOp"* %0, i64 0, i32 0, i32 2
  %14 = load i8, i8* %13, align 8, !range !3
  %15 = or i8 %14, %12
  store i8 %15, i8* %13, align 8
  %16 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %2, i64 0, i32 3
  %17 = load i8, i8* %16, align 1, !range !3
  %18 = getelementptr inbounds %"class.blink::xpath::LogicalOp", %"class.blink::xpath::LogicalOp"* %0, i64 0, i32 0, i32 3
  %19 = load i8, i8* %18, align 1, !range !3
  %20 = or i8 %19, %17
  store i8 %20, i8* %18, align 1
  %21 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %2, i64 0, i32 4
  %22 = load i8, i8* %21, align 2, !range !3
  %23 = getelementptr inbounds %"class.blink::xpath::LogicalOp", %"class.blink::xpath::LogicalOp"* %0, i64 0, i32 0, i32 4
  %24 = load i8, i8* %23, align 2, !range !3
  %25 = or i8 %24, %22
  store i8 %25, i8* %23, align 2
  %26 = getelementptr inbounds %"class.blink::xpath::LogicalOp", %"class.blink::xpath::LogicalOp"* %0, i64 0, i32 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.blink::xpath::LogicalOp", %"class.blink::xpath::LogicalOp"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::xpath::LogicalOp", %"class.blink::xpath::LogicalOp"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %47, label %32, !prof !2

32:                                               ; preds = %4
  %33 = ptrtoint %"class.blink::xpath::Expression"* %2 to i64
  %34 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %26, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Member"*, %"class.blink::Member"** %34, align 8
  %36 = zext i32 %28 to i64
  %37 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %35, i64 %36
  %38 = bitcast %"class.blink::Member"* %37 to i64*
  store atomic i64 %33, i64* %38 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %32
  %42 = bitcast %"class.blink::xpath::Expression"* %2 to i8*
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #11
  br label %44

44:                                               ; preds = %41, %32
  %45 = load i32, i32* %27, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %27, align 4
  br label %49

47:                                               ; preds = %4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector"* %26, %"class.blink::xpath::Expression"** nonnull dereferenceable(8) %6) #11
  %48 = load i32, i32* %27, align 4
  br label %49

49:                                               ; preds = %44, %47
  %50 = phi i32 [ %46, %44 ], [ %48, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  %51 = bitcast %"class.blink::xpath::Expression"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51)
  store %"class.blink::xpath::Expression"* %3, %"class.blink::xpath::Expression"** %5, align 8
  %52 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %3, i64 0, i32 2
  %53 = load i8, i8* %52, align 8, !range !3
  %54 = load i8, i8* %13, align 8, !range !3
  %55 = or i8 %54, %53
  store i8 %55, i8* %13, align 8
  %56 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %3, i64 0, i32 3
  %57 = load i8, i8* %56, align 1, !range !3
  %58 = load i8, i8* %18, align 1, !range !3
  %59 = or i8 %58, %57
  store i8 %59, i8* %18, align 1
  %60 = getelementptr inbounds %"class.blink::xpath::Expression", %"class.blink::xpath::Expression"* %3, i64 0, i32 4
  %61 = load i8, i8* %60, align 2, !range !3
  %62 = load i8, i8* %23, align 2, !range !3
  %63 = or i8 %62, %61
  store i8 %63, i8* %23, align 2
  %64 = load i32, i32* %29, align 8
  %65 = icmp eq i32 %50, %64
  br i1 %65, label %81, label %66, !prof !2

66:                                               ; preds = %49
  %67 = ptrtoint %"class.blink::xpath::Expression"* %3 to i64
  %68 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %26, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::Member"*, %"class.blink::Member"** %68, align 8
  %70 = zext i32 %50 to i64
  %71 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %69, i64 %70
  %72 = bitcast %"class.blink::Member"* %71 to i64*
  store atomic i64 %67, i64* %72 monotonic, align 8
  %73 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %78, label %75

75:                                               ; preds = %66
  %76 = bitcast %"class.blink::xpath::Expression"* %3 to i8*
  %77 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #11
  br label %78

78:                                               ; preds = %75, %66
  %79 = load i32, i32* %27, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %27, align 4
  br label %82

81:                                               ; preds = %49
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector"* %26, %"class.blink::xpath::Expression"** nonnull dereferenceable(8) %5) #11
  br label %82

82:                                               ; preds = %78, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink5xpath9LogicalOp14ShortCircuitOnEv(%"class.blink::xpath::LogicalOp"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::xpath::LogicalOp", %"class.blink::xpath::LogicalOp"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp ne i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath9LogicalOp8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias nocapture sret, %"class.blink::xpath::LogicalOp"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::xpath::EvaluationContext", align 8
  %5 = alloca %"class.blink::xpath::Value", align 8
  %6 = alloca %"class.blink::xpath::Value", align 8
  %7 = bitcast %"struct.blink::xpath::EvaluationContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #11
  %8 = bitcast %"struct.blink::xpath::EvaluationContext"* %2 to i8*
  %9 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 3
  %10 = bitcast %"class.WTF::HashMap.251"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 -86, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %8, i64 16, i1 false) #11
  %11 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 3
  %12 = getelementptr inbounds %"class.WTF::HashMap.251", %"class.WTF::HashMap.251"* %11, i64 0, i32 0
  %13 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 2
  %14 = bitcast %"class.WTF::HashMap.251"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 20, i1 false) #11
  %15 = load i32, i32* %13, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %53, label %17

17:                                               ; preds = %3
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.252"* %12, i32 %15) #11
  %18 = load i32, i32* %13, align 4
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 0
  %21 = load %"struct.WTF::KeyValuePair.255"*, %"struct.WTF::KeyValuePair.255"** %20, align 8
  %22 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %21, i64 %24
  br i1 %19, label %53, label %26

26:                                               ; preds = %17
  %27 = icmp eq i32 %23, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %26, %32
  %29 = phi %"struct.WTF::KeyValuePair.255"* [ %33, %32 ], [ %21, %26 ]
  %30 = bitcast %"struct.WTF::KeyValuePair.255"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  switch i64 %31, label %35 [
    i64 -1, label %32
    i64 0, label %32
  ]

32:                                               ; preds = %28, %28
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %29, i64 1
  %34 = icmp eq %"struct.WTF::KeyValuePair.255"* %33, %25
  br i1 %34, label %53, label %28

35:                                               ; preds = %28, %26
  %36 = phi %"struct.WTF::KeyValuePair.255"* [ %21, %26 ], [ %29, %28 ]
  %37 = icmp eq %"struct.WTF::KeyValuePair.255"* %36, %25
  br i1 %37, label %53, label %38

38:                                               ; preds = %35, %51
  %39 = phi %"struct.WTF::KeyValuePair.255"* [ %45, %51 ], [ %36, %35 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %39, i64 0, i32 0
  %41 = call { %"struct.WTF::KeyValuePair.255"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.252"* %12, %"class.WTF::String"* dereferenceable(8) %40, %"struct.WTF::KeyValuePair.255"* dereferenceable(16) %39) #11
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %39, i64 1
  %43 = icmp eq %"struct.WTF::KeyValuePair.255"* %42, %25
  br i1 %43, label %53, label %44

44:                                               ; preds = %38, %48
  %45 = phi %"struct.WTF::KeyValuePair.255"* [ %49, %48 ], [ %42, %38 ]
  %46 = bitcast %"struct.WTF::KeyValuePair.255"* %45 to i64*
  %47 = load i64, i64* %46, align 8
  switch i64 %47, label %51 [
    i64 -1, label %48
    i64 0, label %48
  ]

48:                                               ; preds = %44, %44
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %45, i64 1
  %50 = icmp eq %"struct.WTF::KeyValuePair.255"* %49, %25
  br i1 %50, label %53, label %44

51:                                               ; preds = %44
  %52 = icmp eq %"struct.WTF::KeyValuePair.255"* %45, %25
  br i1 %52, label %53, label %38

53:                                               ; preds = %32, %38, %51, %48, %3, %17, %35
  %54 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 4
  %55 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 4
  %56 = bitcast i8** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast i8** %54 to i64*
  store i64 %57, i64* %58, align 8
  %59 = bitcast %"class.blink::xpath::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %59, i8* align 8 bitcast ({ i32, i8, [3 x i8], double, %"class.blink::Member.2" }* @__const._ZNK5blink5xpath9Predicate8EvaluateERNS0_17EvaluationContextE.result to i8*), i64 24, i1 false)
  %60 = getelementptr inbounds %"class.blink::xpath::LogicalOp", %"class.blink::xpath::LogicalOp"* %1, i64 0, i32 0, i32 1, i32 0
  %61 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %60, i32 0) #11
  %62 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %61, i64 0, i32 0, i32 0
  %63 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %62, align 8
  %64 = bitcast %"class.blink::xpath::Expression"* %63 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %65 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %65, i64 3
  %67 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %66, align 8
  call void %67(%"class.blink::xpath::Value"* nonnull sret %5, %"class.blink::xpath::Expression"* %63, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #11
  %68 = call zeroext i1 @_ZNK5blink5xpath5Value9ToBooleanEv(%"class.blink::xpath::Value"* nonnull %5) #11
  %69 = getelementptr inbounds %"class.blink::xpath::LogicalOp", %"class.blink::xpath::LogicalOp"* %1, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = icmp ne i32 %70, 0
  %72 = xor i1 %68, %71
  br i1 %72, label %76, label %73

73:                                               ; preds = %53
  %74 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %75 = bitcast double* %74 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false) #11
  br label %88

76:                                               ; preds = %53
  %77 = bitcast %"class.blink::xpath::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #11
  %78 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %60, i32 1) #11
  %79 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %78, i64 0, i32 0, i32 0
  %80 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %79, align 8
  %81 = bitcast %"class.blink::xpath::Expression"* %80 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %82 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %82, i64 3
  %84 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %83, align 8
  call void %84(%"class.blink::xpath::Value"* nonnull sret %6, %"class.blink::xpath::Expression"* %80, %"struct.blink::xpath::EvaluationContext"* nonnull dereferenceable(48) %4) #11
  %85 = call zeroext i1 @_ZNK5blink5xpath5Value9ToBooleanEv(%"class.blink::xpath::Value"* nonnull %6) #11
  %86 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 2
  %87 = bitcast double* %86 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 16, i1 false) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #11
  br label %88

88:                                               ; preds = %76, %73
  %89 = phi i1 [ %85, %76 ], [ %68, %73 ]
  %90 = zext i1 %89 to i8
  %91 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 0
  store i32 1, i32* %91, align 8
  %92 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %0, i64 0, i32 1
  store i8 %90, i8* %92, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #11
  %93 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 3, i32 0, i32 0
  %94 = load %"struct.WTF::KeyValuePair.255"*, %"struct.WTF::KeyValuePair.255"** %93, align 8
  %95 = icmp eq %"struct.WTF::KeyValuePair.255"* %94, null
  br i1 %95, label %99, label %96, !prof !4

96:                                               ; preds = %88
  %97 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %4, i64 0, i32 3, i32 0, i32 1
  %98 = load i32, i32* %97, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.255"* nonnull %94, i32 %98) #11
  store %"struct.WTF::KeyValuePair.255"* null, %"struct.WTF::KeyValuePair.255"** %93, align 8
  br label %99

99:                                               ; preds = %88, %96
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath5Union8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* noalias sret, %"class.blink::xpath::Union"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Node"*, align 8
  %5 = alloca %"struct.blink::xpath::EvaluationContext", align 8
  %6 = alloca %"class.blink::xpath::Value", align 8
  %7 = alloca %"class.blink::HeapHashSet", align 8
  %8 = bitcast %"struct.blink::xpath::EvaluationContext"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #11
  %9 = bitcast %"struct.blink::xpath::EvaluationContext"* %2 to i8*
  %10 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashMap.251"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -86, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %9, i64 16, i1 false) #11
  %12 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %5, i64 0, i32 3
  %13 = getelementptr inbounds %"class.WTF::HashMap.251", %"class.WTF::HashMap.251"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 2
  %15 = bitcast %"class.WTF::HashMap.251"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false) #11
  %16 = load i32, i32* %14, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %54, label %18

18:                                               ; preds = %3
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.252"* %13, i32 %16) #11
  %19 = load i32, i32* %14, align 4
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair.255"*, %"struct.WTF::KeyValuePair.255"** %21, align 8
  %23 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 3, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %22, i64 %25
  br i1 %20, label %54, label %27

27:                                               ; preds = %18
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %27, %33
  %30 = phi %"struct.WTF::KeyValuePair.255"* [ %34, %33 ], [ %22, %27 ]
  %31 = bitcast %"struct.WTF::KeyValuePair.255"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  switch i64 %32, label %36 [
    i64 -1, label %33
    i64 0, label %33
  ]

33:                                               ; preds = %29, %29
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %30, i64 1
  %35 = icmp eq %"struct.WTF::KeyValuePair.255"* %34, %26
  br i1 %35, label %54, label %29

36:                                               ; preds = %29, %27
  %37 = phi %"struct.WTF::KeyValuePair.255"* [ %22, %27 ], [ %30, %29 ]
  %38 = icmp eq %"struct.WTF::KeyValuePair.255"* %37, %26
  br i1 %38, label %54, label %39

39:                                               ; preds = %36, %52
  %40 = phi %"struct.WTF::KeyValuePair.255"* [ %46, %52 ], [ %37, %36 ]
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %40, i64 0, i32 0
  %42 = call { %"struct.WTF::KeyValuePair.255"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.252"* %13, %"class.WTF::String"* dereferenceable(8) %41, %"struct.WTF::KeyValuePair.255"* dereferenceable(16) %40) #11
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %40, i64 1
  %44 = icmp eq %"struct.WTF::KeyValuePair.255"* %43, %26
  br i1 %44, label %54, label %45

45:                                               ; preds = %39, %49
  %46 = phi %"struct.WTF::KeyValuePair.255"* [ %50, %49 ], [ %43, %39 ]
  %47 = bitcast %"struct.WTF::KeyValuePair.255"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  switch i64 %48, label %52 [
    i64 -1, label %49
    i64 0, label %49
  ]

49:                                               ; preds = %45, %45
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %46, i64 1
  %51 = icmp eq %"struct.WTF::KeyValuePair.255"* %50, %26
  br i1 %51, label %54, label %45

52:                                               ; preds = %45
  %53 = icmp eq %"struct.WTF::KeyValuePair.255"* %46, %26
  br i1 %53, label %54, label %39

54:                                               ; preds = %33, %39, %52, %49, %3, %18, %36
  %55 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %5, i64 0, i32 4
  %56 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %2, i64 0, i32 4
  %57 = bitcast i8** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast i8** %55 to i64*
  store i64 %58, i64* %59, align 8
  %60 = bitcast %"class.blink::xpath::Value"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 bitcast ({ i32, i8, [3 x i8], double, %"class.blink::Member.2" }* @__const._ZNK5blink5xpath9Predicate8EvaluateERNS0_17EvaluationContextE.result to i8*), i64 24, i1 false)
  %61 = getelementptr inbounds %"class.blink::xpath::Union", %"class.blink::xpath::Union"* %1, i64 0, i32 0, i32 1, i32 0
  %62 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %61, i32 0) #11
  %63 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %63, align 8
  %65 = bitcast %"class.blink::xpath::Expression"* %64 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %66 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %66, i64 3
  %68 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %67, align 8
  call void %68(%"class.blink::xpath::Value"* sret %0, %"class.blink::xpath::Expression"* %64, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #11
  %69 = bitcast %"class.blink::xpath::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 8 bitcast ({ i32, i8, [3 x i8], double, %"class.blink::Member.2" }* @__const._ZNK5blink5xpath9Predicate8EvaluateERNS0_17EvaluationContextE.result to i8*), i64 24, i1 false)
  %70 = call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"* %61, i32 1) #11
  %71 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %70, i64 0, i32 0, i32 0
  %72 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %71, align 8
  %73 = bitcast %"class.blink::xpath::Expression"* %72 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %74 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %74, i64 3
  %76 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %75, align 8
  call void %76(%"class.blink::xpath::Value"* nonnull sret %6, %"class.blink::xpath::Expression"* %72, %"struct.blink::xpath::EvaluationContext"* nonnull dereferenceable(48) %5) #11
  %77 = call dereferenceable(24) %"class.blink::xpath::NodeSet"* @_ZN5blink5xpath5Value17ModifiableNodeSetERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* %0, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %2) #11
  %78 = call dereferenceable(24) %"class.blink::xpath::NodeSet"* @_ZNK5blink5xpath5Value9ToNodeSetEPNS0_17EvaluationContextE(%"class.blink::xpath::Value"* nonnull %6, %"struct.blink::xpath::EvaluationContext"* nonnull %5) #11
  %79 = bitcast %"class.blink::HeapHashSet"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #11
  %80 = bitcast %"class.blink::HeapHashSet"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 20, i1 false) #11
  %81 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %82 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %82, i64 %85
  %87 = icmp eq i32 %84, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %54
  %89 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %7, i64 0, i32 0, i32 0
  br label %104

90:                                               ; preds = %104, %54
  %91 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %92 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %94 = load i32, i32* %93, align 4
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %92, i64 %95
  %97 = icmp eq i32 %94, 0
  br i1 %97, label %109, label %98

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.blink::HeapHashSet", %"class.blink::HeapHashSet"* %7, i64 0, i32 0, i32 0
  %100 = bitcast %"class.blink::Node"** %4 to i8*
  %101 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %77, i64 0, i32 2, i32 0
  %102 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %103 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %101, i64 0, i32 0, i32 0, i32 0
  br label %118

104:                                              ; preds = %88, %104
  %105 = phi %"class.blink::Member.17"* [ %82, %88 ], [ %107, %104 ]
  %106 = call { %"class.blink::Member.17"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.258"* nonnull %89, %"class.blink::Member.17"* dereferenceable(8) %105, %"class.blink::Member.17"* dereferenceable(8) %105) #11
  %107 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %105, i64 1
  %108 = icmp eq %"class.blink::Member.17"* %107, %86
  br i1 %108, label %90, label %104

109:                                              ; preds = %146, %90
  %110 = getelementptr inbounds %"class.blink::xpath::NodeSet", %"class.blink::xpath::NodeSet"* %77, i64 0, i32 0
  store i8 0, i8* %110, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #11
  %111 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %5, i64 0, i32 3, i32 0, i32 0
  %112 = load %"struct.WTF::KeyValuePair.255"*, %"struct.WTF::KeyValuePair.255"** %111, align 8
  %113 = icmp eq %"struct.WTF::KeyValuePair.255"* %112, null
  br i1 %113, label %117, label %114, !prof !4

114:                                              ; preds = %109
  %115 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %5, i64 0, i32 3, i32 0, i32 1
  %116 = load i32, i32* %115, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.255"* nonnull %112, i32 %116) #11
  store %"struct.WTF::KeyValuePair.255"* null, %"struct.WTF::KeyValuePair.255"** %111, align 8
  br label %117

117:                                              ; preds = %109, %114
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #11
  ret void

118:                                              ; preds = %98, %146
  %119 = phi %"class.blink::Member.17"* [ %92, %98 ], [ %147, %146 ]
  %120 = call { %"class.blink::Member.17"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.258"* nonnull %99, %"class.blink::Member.17"* dereferenceable(8) %119, %"class.blink::Member.17"* dereferenceable(8) %119) #11
  %121 = extractvalue { %"class.blink::Member.17"*, i8 } %120, 1
  %122 = and i8 %121, 1
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %146, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %119, i64 0, i32 0, i32 0
  %126 = load %"class.blink::Node"*, %"class.blink::Node"** %125, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100)
  store %"class.blink::Node"* %126, %"class.blink::Node"** %4, align 8
  %127 = load i32, i32* %83, align 4
  %128 = load i32, i32* %102, align 8
  %129 = icmp eq i32 %127, %128
  br i1 %129, label %144, label %130, !prof !2

130:                                              ; preds = %124
  %131 = ptrtoint %"class.blink::Node"* %126 to i64
  %132 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %103, align 8
  %133 = zext i32 %127 to i64
  %134 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %132, i64 %133
  %135 = bitcast %"class.blink::Member.17"* %134 to i64*
  store atomic i64 %131, i64* %135 monotonic, align 8
  %136 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %141, label %138

138:                                              ; preds = %130
  %139 = bitcast %"class.blink::Node"* %126 to i8*
  %140 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %139) #11
  br label %141

141:                                              ; preds = %138, %130
  %142 = load i32, i32* %83, align 4
  %143 = add i32 %142, 1
  store i32 %143, i32* %83, align 4
  br label %145

144:                                              ; preds = %124
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.14"* %101, %"class.blink::Node"** nonnull dereferenceable(8) %4) #11
  br label %145

145:                                              ; preds = %141, %144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100)
  br label %146

146:                                              ; preds = %118, %145
  %147 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %119, i64 1
  %148 = icmp eq %"class.blink::Member.17"* %147, %96
  br i1 %148, label %109, label %118
}

declare dereferenceable(24) %"class.blink::xpath::NodeSet"* @_ZN5blink5xpath5Value17ModifiableNodeSetERNS0_17EvaluationContextE(%"class.blink::xpath::Value"*, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5xpath9PredicateC2EPNS0_10ExpressionE(%"class.blink::xpath::Predicate"* nocapture, %"class.blink::xpath::Expression"*) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.blink::xpath::Predicate", %"class.blink::xpath::Predicate"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::xpath::Expression"* %1, %"class.blink::xpath::Expression"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink5xpath9Predicate5TraceEPNS_7VisitorE(%"class.blink::xpath::Predicate"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::xpath::Predicate"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5xpath10ExpressionEE5TraceEPNS_7VisitorEPKv) #11
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink5xpath9Predicate8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Predicate"* nocapture readonly, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::xpath::EvaluationContext", align 8
  %4 = alloca %"class.blink::xpath::Value", align 8
  %5 = alloca %"class.blink::xpath::Value", align 8
  %6 = alloca %"class.blink::xpath::EqTestOp", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = bitcast %"struct.blink::xpath::EvaluationContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #11
  %9 = bitcast %"struct.blink::xpath::EvaluationContext"* %1 to i8*
  %10 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %3, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashMap.251"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -86, i64 32, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %9, i64 16, i1 false) #11
  %12 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %3, i64 0, i32 3
  %13 = getelementptr inbounds %"class.WTF::HashMap.251", %"class.WTF::HashMap.251"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %1, i64 0, i32 3, i32 0, i32 2
  %15 = bitcast %"class.WTF::HashMap.251"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 20, i1 false) #11
  %16 = load i32, i32* %14, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %54, label %18

18:                                               ; preds = %2
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.252"* %13, i32 %16) #11
  %19 = load i32, i32* %14, align 4
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %1, i64 0, i32 3, i32 0, i32 0
  %22 = load %"struct.WTF::KeyValuePair.255"*, %"struct.WTF::KeyValuePair.255"** %21, align 8
  %23 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %1, i64 0, i32 3, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %22, i64 %25
  br i1 %20, label %54, label %27

27:                                               ; preds = %18
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %27, %33
  %30 = phi %"struct.WTF::KeyValuePair.255"* [ %34, %33 ], [ %22, %27 ]
  %31 = bitcast %"struct.WTF::KeyValuePair.255"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  switch i64 %32, label %36 [
    i64 -1, label %33
    i64 0, label %33
  ]

33:                                               ; preds = %29, %29
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %30, i64 1
  %35 = icmp eq %"struct.WTF::KeyValuePair.255"* %34, %26
  br i1 %35, label %54, label %29

36:                                               ; preds = %29, %27
  %37 = phi %"struct.WTF::KeyValuePair.255"* [ %22, %27 ], [ %30, %29 ]
  %38 = icmp eq %"struct.WTF::KeyValuePair.255"* %37, %26
  br i1 %38, label %54, label %39

39:                                               ; preds = %36, %52
  %40 = phi %"struct.WTF::KeyValuePair.255"* [ %46, %52 ], [ %37, %36 ]
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %40, i64 0, i32 0
  %42 = call { %"struct.WTF::KeyValuePair.255"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.252"* %13, %"class.WTF::String"* dereferenceable(8) %41, %"struct.WTF::KeyValuePair.255"* dereferenceable(16) %40) #11
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %40, i64 1
  %44 = icmp eq %"struct.WTF::KeyValuePair.255"* %43, %26
  br i1 %44, label %54, label %45

45:                                               ; preds = %39, %49
  %46 = phi %"struct.WTF::KeyValuePair.255"* [ %50, %49 ], [ %43, %39 ]
  %47 = bitcast %"struct.WTF::KeyValuePair.255"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  switch i64 %48, label %52 [
    i64 -1, label %49
    i64 0, label %49
  ]

49:                                               ; preds = %45, %45
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %46, i64 1
  %51 = icmp eq %"struct.WTF::KeyValuePair.255"* %50, %26
  br i1 %51, label %54, label %45

52:                                               ; preds = %45
  %53 = icmp eq %"struct.WTF::KeyValuePair.255"* %46, %26
  br i1 %53, label %54, label %39

54:                                               ; preds = %33, %39, %52, %49, %2, %18, %36
  %55 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %3, i64 0, i32 4
  %56 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %1, i64 0, i32 4
  %57 = bitcast i8** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast i8** %55 to i64*
  store i64 %58, i64* %59, align 8
  %60 = bitcast %"class.blink::xpath::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %60, i8* align 8 bitcast ({ i32, i8, [3 x i8], double, %"class.blink::Member.2" }* @__const._ZNK5blink5xpath9Predicate8EvaluateERNS0_17EvaluationContextE.result to i8*), i64 24, i1 false)
  %61 = getelementptr inbounds %"class.blink::xpath::Predicate", %"class.blink::xpath::Predicate"* %0, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::xpath::Expression"*, %"class.blink::xpath::Expression"** %61, align 8
  %63 = bitcast %"class.blink::xpath::Expression"* %62 to void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)***
  %64 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)**, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %64, i64 3
  %66 = load void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)*, void (%"class.blink::xpath::Value"*, %"class.blink::xpath::Expression"*, %"struct.blink::xpath::EvaluationContext"*)** %65, align 8
  call void %66(%"class.blink::xpath::Value"* nonnull sret %4, %"class.blink::xpath::Expression"* %62, %"struct.blink::xpath::EvaluationContext"* nonnull dereferenceable(48) %3) #11
  %67 = getelementptr inbounds %"class.blink::xpath::Value", %"class.blink::xpath::Value"* %4, i64 0, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %68, 2
  br i1 %69, label %70, label %110

70:                                               ; preds = %54
  %71 = bitcast %"class.blink::xpath::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #11
  %72 = bitcast %"class.blink::xpath::EqTestOp"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %72) #11
  %73 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i64 8) #11
  %74 = call %"class.blink::xpath::Function"* @_ZN5blink5xpath14CreateFunctionERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %7) #11
  %75 = bitcast %"class.blink::xpath::Function"* %74 to %"class.blink::xpath::Expression"*
  %76 = call double @_ZNK5blink5xpath5Value8ToNumberEv(%"class.blink::xpath::Value"* nonnull %4) #11
  %77 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64 56) #11
  %78 = bitcast i8* %77 to %"class.blink::xpath::Expression"*
  call void @_ZN5blink5xpath10ExpressionC2Ev(%"class.blink::xpath::Expression"* %78) #11
  %79 = bitcast i8* %77 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5xpath6NumberE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %79, align 8
  %80 = getelementptr inbounds i8, i8* %77, i64 32
  %81 = bitcast i8* %80 to i32*
  store i32 2, i32* %81, align 8
  %82 = getelementptr inbounds i8, i8* %77, i64 36
  store i8 0, i8* %82, align 4
  %83 = getelementptr inbounds i8, i8* %77, i64 40
  %84 = bitcast i8* %83 to double*
  store double %76, double* %84, align 8
  %85 = getelementptr inbounds i8, i8* %77, i64 48
  %86 = bitcast i8* %85 to %"class.blink::xpath::ValueData"**
  store %"class.blink::xpath::ValueData"* null, %"class.blink::xpath::ValueData"** %86, align 8
  %87 = getelementptr inbounds i8, i8* %77, i64 -4
  %88 = bitcast i8* %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = or i16 %89, 1
  store atomic i16 %90, i16* %88 release, align 2
  call void @_ZN5blink5xpath8EqTestOpC2ENS1_6OpcodeEPNS0_10ExpressionES4_(%"class.blink::xpath::EqTestOp"* nonnull %6, i32 0, %"class.blink::xpath::Expression"* %75, %"class.blink::xpath::Expression"* %78)
  call void @_ZNK5blink5xpath8EqTestOp8EvaluateERNS0_17EvaluationContextE(%"class.blink::xpath::Value"* nonnull sret %5, %"class.blink::xpath::EqTestOp"* nonnull %6, %"struct.blink::xpath::EvaluationContext"* dereferenceable(48) %1)
  %91 = call zeroext i1 @_ZNK5blink5xpath5Value9ToBooleanEv(%"class.blink::xpath::Value"* nonnull %5) #11
  %92 = bitcast %"class.blink::xpath::EqTestOp"* %6 to %"class.blink::xpath::Expression"*
  call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* nonnull %92) #11
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %70
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #11
  br label %109

109:                                              ; preds = %70, %105, %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %72) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #11
  br label %112

110:                                              ; preds = %54
  %111 = call zeroext i1 @_ZNK5blink5xpath5Value9ToBooleanEv(%"class.blink::xpath::Value"* nonnull %4) #11
  br label %112

112:                                              ; preds = %110, %109
  %113 = phi i1 [ %91, %109 ], [ %111, %110 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #11
  %114 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %3, i64 0, i32 3, i32 0, i32 0
  %115 = load %"struct.WTF::KeyValuePair.255"*, %"struct.WTF::KeyValuePair.255"** %114, align 8
  %116 = icmp eq %"struct.WTF::KeyValuePair.255"* %115, null
  br i1 %116, label %120, label %117, !prof !4

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"struct.blink::xpath::EvaluationContext", %"struct.blink::xpath::EvaluationContext"* %3, i64 0, i32 3, i32 0, i32 1
  %119 = load i32, i32* %118, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.255"* nonnull %115, i32 %119) #11
  store %"struct.WTF::KeyValuePair.255"* null, %"struct.WTF::KeyValuePair.255"** %114, align 8
  br label %120

120:                                              ; preds = %112, %117
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #11
  ret i1 %113
}

declare %"class.blink::xpath::Function"* @_ZN5blink5xpath14CreateFunctionERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath6NumberD0Ev(%"class.blink::xpath::Number"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::xpath::Number"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath6Number10ResultTypeEv(%"class.blink::xpath::Number"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath16StringExpressionD0Ev(%"class.blink::xpath::StringExpression"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::xpath::StringExpression"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath16StringExpression10ResultTypeEv(%"class.blink::xpath::StringExpression"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath8NegativeD0Ev(%"class.blink::xpath::Negative"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::xpath::Negative"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath8Negative10ResultTypeEv(%"class.blink::xpath::Negative"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath9NumericOpD0Ev(%"class.blink::xpath::NumericOp"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::xpath::NumericOp"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath9NumericOp10ResultTypeEv(%"class.blink::xpath::NumericOp"*) unnamed_addr #0 comdat align 2 {
  ret i32 2
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath8EqTestOpD0Ev(%"class.blink::xpath::EqTestOp"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::xpath::EqTestOp"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath8EqTestOp10ResultTypeEv(%"class.blink::xpath::EqTestOp"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath9LogicalOpD0Ev(%"class.blink::xpath::LogicalOp"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::xpath::LogicalOp"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath9LogicalOp10ResultTypeEv(%"class.blink::xpath::LogicalOp"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind
declare void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5xpath5UnionD0Ev(%"class.blink::xpath::Union"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::xpath::Union"* %0 to %"class.blink::xpath::Expression"*
  tail call void @_ZN5blink5xpath10ExpressionD2Ev(%"class.blink::xpath::Expression"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink5xpath5Union10ResultTypeEv(%"class.blink::xpath::Union"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ValueDataEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath9ValueDataEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_5xpath9ValueDataEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath9ValueDataEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath9ValueDataEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5xpath9ValueDataEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::xpath::ValueData"*
  tail call void @_ZNK5blink5xpath9ValueData5TraceEPNS_7VisitorE(%"class.blink::xpath::ValueData"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_5xpath9ValueDataEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.WTF::StringImpl"**
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #11
  br label %18

18:                                               ; preds = %1, %14, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_5xpath9ValueDataEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZNK5blink5xpath9ValueData5TraceEPNS_7VisitorE(%"class.blink::xpath::ValueData"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath7NodeSetEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath7NodeSetEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath7NodeSetEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5xpath7NodeSetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast i8* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8** %7) #11
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %0, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_5xpath7NodeSetEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.17"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.17"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS4_EEvOT_(%"class.WTF::Vector"*, %"class.blink::xpath::Expression"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #11
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::xpath::Expression"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #11
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5xpath10ExpressionEEEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.311"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking.311"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.311", %"class.blink::HeapVectorBacking.311"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_5xpath10ExpressionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5xpath10ExpressionEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.311"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking.311"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.311"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.311", %"class.blink::HeapVectorBacking.311"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.311", %"class.blink::HeapVectorBacking.311"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_5xpath10ExpressionEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.311"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.311"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.311"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([175 x i8], [175 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_5xpath10ExpressionEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5xpath10ExpressionEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_5xpath10ExpressionEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.252"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.252", %"class.WTF::HashTable.252"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.12, i64 0, i64 0)) #11
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #11
  %30 = bitcast i8* %29 to %"struct.WTF::KeyValuePair.255"*
  %31 = call %"struct.WTF::KeyValuePair.255"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.252"* %0, %"struct.WTF::KeyValuePair.255"* %30, i32 %17, %"struct.WTF::KeyValuePair.255"* null) #11
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.255"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.252"*, %"struct.WTF::KeyValuePair.255"*, i32, %"struct.WTF::KeyValuePair.255"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.252", align 8
  %6 = bitcast %"class.WTF::HashTable.252"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.252", %"class.WTF::HashTable.252"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.252", %"class.WTF::HashTable.252"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.252", %"class.WTF::HashTable.252"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.252", %"class.WTF::HashTable.252"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.252"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.255"* %1, %"struct.WTF::KeyValuePair.255"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.252", %"class.WTF::HashTable.252"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.252", %"class.WTF::HashTable.252"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.255"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.252"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.252"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.255"*, %"struct.WTF::KeyValuePair.255"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.255"* %22 to i64
  br label %42

24:                                               ; preds = %60
  %25 = bitcast %"class.WTF::HashTable.252"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.252"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %61, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.255"* [ null, %16 ], [ %64, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %62, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.255"*
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.255"* nonnull %37, i32 %34) #11
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.252", %"class.WTF::HashTable.252"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair.255"* %33

42:                                               ; preds = %21, %60
  %43 = phi i64 [ %61, %60 ], [ %23, %21 ]
  %44 = phi i32 [ %62, %60 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.255"* [ %63, %60 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.255"* [ %64, %60 ], [ null, %21 ]
  %47 = phi i32 [ %65, %60 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.255"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %60
    i64 0, label %60
  ]

52:                                               ; preds = %42
  %53 = call %"struct.WTF::KeyValuePair.255"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.252"* nonnull %5, %"struct.WTF::KeyValuePair.255"* dereferenceable(16) %49)
  %54 = load %"struct.WTF::KeyValuePair.255"*, %"struct.WTF::KeyValuePair.255"** %15, align 8
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %54, i64 %48
  %56 = icmp eq %"struct.WTF::KeyValuePair.255"* %55, %3
  %57 = select i1 %56, %"struct.WTF::KeyValuePair.255"* %53, %"struct.WTF::KeyValuePair.255"* %46
  %58 = load i32, i32* %12, align 8
  %59 = ptrtoint %"struct.WTF::KeyValuePair.255"* %54 to i64
  br label %60

60:                                               ; preds = %42, %42, %52
  %61 = phi i64 [ %43, %42 ], [ %59, %52 ], [ %43, %42 ]
  %62 = phi i32 [ %44, %42 ], [ %58, %52 ], [ %44, %42 ]
  %63 = phi %"struct.WTF::KeyValuePair.255"* [ %45, %42 ], [ %54, %52 ], [ %45, %42 ]
  %64 = phi %"struct.WTF::KeyValuePair.255"* [ %46, %42 ], [ %57, %52 ], [ %46, %42 ]
  %65 = add i32 %47, 1
  %66 = icmp eq i32 %65, %62
  br i1 %66, label %24, label %42
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.255"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8ReinsertEOS3_(%"class.WTF::HashTable.252"*, %"struct.WTF::KeyValuePair.255"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %1, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.255"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.252"* %0, %"class.WTF::String"* dereferenceable(8) %3)
  %5 = extractvalue { %"struct.WTF::KeyValuePair.255"*, i8 } %4, 0
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #11
  br label %22

22:                                               ; preds = %21, %18, %2
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %5, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #11
  br label %39

39:                                               ; preds = %22, %35, %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"struct.WTF::KeyValuePair.255"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.WTF::KeyValuePair.255"* %5 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %5, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %45, i64 0, i32 0, i32 0
  %47 = bitcast %"class.WTF::String"* %45 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.WTF::String"* %44 to i64*
  store i64 %48, i64* %49, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %46, align 8
  ret %"struct.WTF::KeyValuePair.255"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.255"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.252"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.252", %"class.WTF::HashTable.252"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.255"*, %"struct.WTF::KeyValuePair.255"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.252", %"class.WTF::HashTable.252"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #11
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.255"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.255"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.255"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.255"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.255"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.255"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.255"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.255"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #11
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.255"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.255"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.255"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.255"*, i8 } undef, %"struct.WTF::KeyValuePair.255"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.255"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.255"*, i8 } %77
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.255"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %48, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.255"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #11
  ret void

8:                                                ; preds = %48, %4
  %9 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair.255"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %48, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %0, i64 %9, i32 1, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #11
  br label %31

31:                                               ; preds = %30, %27, %14
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %10, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #11
  br label %48

48:                                               ; preds = %47, %44, %31, %8
  %49 = add nuw nsw i64 %9, 1
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %6, label %8
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.255"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS5_S9_SA_EERKS1_RKS3_EENS_18HashTableAddResultISB_S3_EEOT0_OT1_(%"class.WTF::HashTable.252"*, %"class.WTF::String"* dereferenceable(8), %"struct.WTF::KeyValuePair.255"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.252", %"class.WTF::HashTable.252"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.255"*, %"struct.WTF::KeyValuePair.255"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.255"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.255"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.252"* %0, %"struct.WTF::KeyValuePair.255"* null)
  %9 = load %"struct.WTF::KeyValuePair.255"*, %"struct.WTF::KeyValuePair.255"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.255"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.252", %"class.WTF::HashTable.252"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #11
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.255"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.255"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.255"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #11
  br i1 %57, label %92, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.255"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.255"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.255"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #11
  %72 = getelementptr inbounds %"class.WTF::HashTable.252", %"class.WTF::HashTable.252"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.255"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = tail call dereferenceable(16) %"struct.WTF::KeyValuePair.255"* @_ZN3WTF12KeyValuePairINS_6StringES1_EaSERKS2_(%"struct.WTF::KeyValuePair.255"* %79, %"struct.WTF::KeyValuePair.255"* dereferenceable(16) %2) #11
  %81 = getelementptr inbounds %"class.WTF::HashTable.252", %"class.WTF::HashTable.252"* %0, i64 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = add i32 %82, 1
  store i32 %83, i32* %81, align 4
  %84 = getelementptr inbounds %"class.WTF::HashTable.252", %"class.WTF::HashTable.252"* %0, i64 0, i32 3
  %85 = load i32, i32* %84, align 8
  %86 = add i32 %85, %83
  %87 = shl i32 %86, 1
  %88 = load i32, i32* %12, align 8
  %89 = icmp ult i32 %87, %88
  br i1 %89, label %92, label %90

90:                                               ; preds = %78
  %91 = tail call %"struct.WTF::KeyValuePair.255"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.252"* %0, %"struct.WTF::KeyValuePair.255"* %79)
  br label %92

92:                                               ; preds = %54, %78, %90
  %93 = phi i8 [ 1, %78 ], [ 1, %90 ], [ 0, %54 ]
  %94 = phi %"struct.WTF::KeyValuePair.255"* [ %79, %78 ], [ %91, %90 ], [ %47, %54 ]
  %95 = insertvalue { %"struct.WTF::KeyValuePair.255"*, i8 } undef, %"struct.WTF::KeyValuePair.255"* %94, 0
  %96 = insertvalue { %"struct.WTF::KeyValuePair.255"*, i8 } %95, i8 %93, 1
  ret { %"struct.WTF::KeyValuePair.255"*, i8 } %96
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.255"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE6ExpandEPS3_(%"class.WTF::HashTable.252"*, %"struct.WTF::KeyValuePair.255"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.252", %"class.WTF::HashTable.252"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.252", %"class.WTF::HashTable.252"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringES2_EEEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #11
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.255"*
  %37 = call %"struct.WTF::KeyValuePair.255"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE8RehashToEPS3_jSC_(%"class.WTF::HashTable.252"* %0, %"struct.WTF::KeyValuePair.255"* %36, i32 %32, %"struct.WTF::KeyValuePair.255"* %1) #11
  ret %"struct.WTF::KeyValuePair.255"* %37
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.WTF::KeyValuePair.255"* @_ZN3WTF12KeyValuePairINS_6StringES1_EaSERKS2_(%"struct.WTF::KeyValuePair.255"*, %"struct.WTF::KeyValuePair.255"* dereferenceable(16)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #11
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #11
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"struct.WTF::KeyValuePair.255"* %0 to i64*
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #11
  br label %42

42:                                               ; preds = %23, %38, %41
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.255", %"struct.WTF::KeyValuePair.255"* %1, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #11
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  tail call void @llvm.trap() #11
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %42
  %65 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %66 = bitcast %"class.WTF::String"* %43 to i64*
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #11
  br label %83

83:                                               ; preds = %64, %79, %82
  ret %"struct.WTF::KeyValuePair.255"* %0
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.14"*, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.14"* %0, i32 %14) #11
  %15 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %16, i64 %18
  %20 = bitcast %"class.blink::Node"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.17"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #11
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.14"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %8, align 8
  %10 = icmp eq %"class.blink::Member.17"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %8, align 8
  %26 = icmp eq %"class.blink::Member.17"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.17"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.14"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.14"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.14"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.17"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.17"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.14"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector.14"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.8, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.10, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4NodeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #11
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK5blink5xpath5Value5TraceEPNS_7VisitorE(%"class.blink::xpath::Value"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.17"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.258"*, %"class.blink::Member.17"* dereferenceable(8), %"class.blink::Member.17"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.258", %"class.WTF::HashTable.258"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %4, align 8
  %6 = icmp eq %"class.blink::Member.17"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.17"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.258"* %0, %"class.blink::Member.17"* null)
  %9 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.17"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.258", %"class.WTF::HashTable.258"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Member.17"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Node"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Node"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.17"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.17"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Node"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Node"* %59, inttoptr (i64 -1 to %"class.blink::Node"*)
  %67 = select i1 %66, %"class.blink::Member.17"* %60, %"class.blink::Member.17"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::Node"*, %"class.blink::Node"** %73, align 8
  %75 = icmp eq %"class.blink::Node"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.17"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.17"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #11
  %80 = getelementptr inbounds %"class.WTF::HashTable.258", %"class.WTF::HashTable.258"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.17"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = bitcast %"class.blink::Member.17"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::Member.17"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = inttoptr i64 %89 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #11
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.17"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #11
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.258", %"class.WTF::HashTable.258"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.258", %"class.WTF::HashTable.258"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.17"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.258"* %0, %"class.blink::Member.17"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.17"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.17"*, i8 } undef, %"class.blink::Member.17"* %117, 0
  %119 = insertvalue { %"class.blink::Member.17"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.17"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.17"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.258"*, %"class.blink::Member.17"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.258", %"class.WTF::HashTable.258"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.258", %"class.WTF::HashTable.258"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.17"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.258"* %0, i32 %35, %"class.blink::Member.17"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member.17"*
  %44 = call %"class.blink::Member.17"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.258"* %0, %"class.blink::Member.17"* %43, i32 %40, %"class.blink::Member.17"* %1) #11
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.17"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.17"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.17"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.258"*, i32, %"class.blink::Member.17"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.258", %"class.WTF::HashTable.258"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %31, align 8
  %33 = icmp eq %"class.blink::Member.17"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.17"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.258", %"class.WTF::HashTable.258"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member.17"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.17"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.17"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.17"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.17"* %61, %"class.blink::Member.17"* %55
  %63 = bitcast %"class.blink::Member.17"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.17"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.17"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.258"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #11
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.17"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.17"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.258"* %0, %"class.blink::Member.17"* %42, i32 %1, %"class.blink::Member.17"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.17"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.17"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.17"* %87, %"class.blink::Member.17"* %82
  %89 = bitcast %"class.blink::Member.17"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.17"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.17"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.17"* %99, %"class.blink::Member.17"* %88
  %101 = bitcast %"class.blink::Member.17"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.17"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.17"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.17"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.17"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.258"*, %"class.blink::Member.17"*, i32, %"class.blink::Member.17"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.17"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.258", %"class.WTF::HashTable.258"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.258", %"class.WTF::HashTable.258"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.17"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.17"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #11
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.258", %"class.WTF::HashTable.258"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.258"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.17"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #11
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.17"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.17"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #11
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.258", %"class.WTF::HashTable.258"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.17"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.17"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.17"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.17"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.17"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %70, align 8
  %72 = icmp eq %"class.blink::Node"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::Node"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.17"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.17"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.17"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.17"* %93, null
  %95 = ptrtoint %"class.blink::Member.17"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::Node"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::Node"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::Node"* %99, inttoptr (i64 -1 to %"class.blink::Node"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.17"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::Node"*, %"class.blink::Node"** %113, align 8
  %115 = icmp eq %"class.blink::Node"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.17"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.17"*, %"class.blink::Member.17"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.17"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.17"* %118, %"class.blink::Member.17"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.17"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.17"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.14, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 5, i32 %28, i8* getelementptr inbounds ([316 x i8], [316 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0)) #11
  %30 = bitcast i8* %29 to %"class.blink::HeapHashTableBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.17"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.17", %"class.blink::Member.17"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.17"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #11
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5xpath10ExpressionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::xpath::Expression"*
  %4 = bitcast i8* %1 to void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)**, void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)*, void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)*, void (%"class.blink::xpath::Expression"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::xpath::Expression"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_5xpath9ParseNodeEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_5xpath9ParseNodeEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5xpath9ParseNodeEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5xpath9ParseNodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::xpath::ParseNode"*
  %4 = bitcast i8* %1 to void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)**, void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)*, void (%"class.blink::xpath::ParseNode"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::xpath::ParseNode"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_5xpath9ParseNodeEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::xpath::ParseNode"*
  %3 = bitcast i8* %0 to void (%"class.blink::xpath::ParseNode"*)***
  %4 = load void (%"class.blink::xpath::ParseNode"*)**, void (%"class.blink::xpath::ParseNode"*)*** %3, align 8
  %5 = load void (%"class.blink::xpath::ParseNode"*)*, void (%"class.blink::xpath::ParseNode"*)** %4, align 8
  tail call void %5(%"class.blink::xpath::ParseNode"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_5xpath9ParseNodeEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
