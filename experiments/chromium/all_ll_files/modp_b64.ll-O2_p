; ModuleID = '../../third_party/modp_b64/modp_b64.cc'
source_filename = "../../third_party/modp_b64/modp_b64.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@_ZL2e0 = internal unnamed_addr constant [256 x i8] c"AAAABBBBCCCCDDDDEEEEFFFFGGGGHHHHIIIIJJJJKKKKLLLLMMMMNNNNOOOOPPPPQQQQRRRRSSSSTTTTUUUUVVVVWWWWXXXXYYYYZZZZaaaabbbbccccddddeeeeffffgggghhhhiiiijjjjkkkkllllmmmmnnnnooooppppqqqqrrrrssssttttuuuuvvvvwwwwxxxxyyyyzzzz0000111122223333444455556666777788889999++++////", align 16
@_ZL2e2 = internal unnamed_addr constant [256 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", align 16
@_ZL2d0 = internal unnamed_addr constant [256 x i32] [i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 248, i32 33554431, i32 33554431, i32 33554431, i32 252, i32 208, i32 212, i32 216, i32 220, i32 224, i32 228, i32 232, i32 236, i32 240, i32 244, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 0, i32 4, i32 8, i32 12, i32 16, i32 20, i32 24, i32 28, i32 32, i32 36, i32 40, i32 44, i32 48, i32 52, i32 56, i32 60, i32 64, i32 68, i32 72, i32 76, i32 80, i32 84, i32 88, i32 92, i32 96, i32 100, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 104, i32 108, i32 112, i32 116, i32 120, i32 124, i32 128, i32 132, i32 136, i32 140, i32 144, i32 148, i32 152, i32 156, i32 160, i32 164, i32 168, i32 172, i32 176, i32 180, i32 184, i32 188, i32 192, i32 196, i32 200, i32 204, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431], align 16
@_ZL2d1 = internal unnamed_addr constant [256 x i32] [i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 57347, i32 33554431, i32 33554431, i32 33554431, i32 61443, i32 16387, i32 20483, i32 24579, i32 28675, i32 32771, i32 36867, i32 40963, i32 45059, i32 49155, i32 53251, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 0, i32 4096, i32 8192, i32 12288, i32 16384, i32 20480, i32 24576, i32 28672, i32 32768, i32 36864, i32 40960, i32 45056, i32 49152, i32 53248, i32 57344, i32 61440, i32 1, i32 4097, i32 8193, i32 12289, i32 16385, i32 20481, i32 24577, i32 28673, i32 32769, i32 36865, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 40961, i32 45057, i32 49153, i32 53249, i32 57345, i32 61441, i32 2, i32 4098, i32 8194, i32 12290, i32 16386, i32 20482, i32 24578, i32 28674, i32 32770, i32 36866, i32 40962, i32 45058, i32 49154, i32 53250, i32 57346, i32 61442, i32 3, i32 4099, i32 8195, i32 12291, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431], align 16
@_ZL2d2 = internal unnamed_addr constant [256 x i32] [i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 8392448, i32 33554431, i32 33554431, i32 33554431, i32 12586752, i32 3328, i32 4197632, i32 8391936, i32 12586240, i32 3584, i32 4197888, i32 8392192, i32 12586496, i32 3840, i32 4198144, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 0, i32 4194304, i32 8388608, i32 12582912, i32 256, i32 4194560, i32 8388864, i32 12583168, i32 512, i32 4194816, i32 8389120, i32 12583424, i32 768, i32 4195072, i32 8389376, i32 12583680, i32 1024, i32 4195328, i32 8389632, i32 12583936, i32 1280, i32 4195584, i32 8389888, i32 12584192, i32 1536, i32 4195840, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 8390144, i32 12584448, i32 1792, i32 4196096, i32 8390400, i32 12584704, i32 2048, i32 4196352, i32 8390656, i32 12584960, i32 2304, i32 4196608, i32 8390912, i32 12585216, i32 2560, i32 4196864, i32 8391168, i32 12585472, i32 2816, i32 4197120, i32 8391424, i32 12585728, i32 3072, i32 4197376, i32 8391680, i32 12585984, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431], align 16
@_ZL2d3 = internal unnamed_addr constant [256 x i32] [i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 4063232, i32 33554431, i32 33554431, i32 33554431, i32 4128768, i32 3407872, i32 3473408, i32 3538944, i32 3604480, i32 3670016, i32 3735552, i32 3801088, i32 3866624, i32 3932160, i32 3997696, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 0, i32 65536, i32 131072, i32 196608, i32 262144, i32 327680, i32 393216, i32 458752, i32 524288, i32 589824, i32 655360, i32 720896, i32 786432, i32 851968, i32 917504, i32 983040, i32 1048576, i32 1114112, i32 1179648, i32 1245184, i32 1310720, i32 1376256, i32 1441792, i32 1507328, i32 1572864, i32 1638400, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 1703936, i32 1769472, i32 1835008, i32 1900544, i32 1966080, i32 2031616, i32 2097152, i32 2162688, i32 2228224, i32 2293760, i32 2359296, i32 2424832, i32 2490368, i32 2555904, i32 2621440, i32 2686976, i32 2752512, i32 2818048, i32 2883584, i32 2949120, i32 3014656, i32 3080192, i32 3145728, i32 3211264, i32 3276800, i32 3342336, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431, i32 33554431], align 16

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @modp_b64_encode(i8*, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %4 = icmp ugt i64 %2, 2
  br i1 %4, label %5, label %47

5:                                                ; preds = %3
  %6 = add i64 %2, -2
  br label %7

7:                                                ; preds = %5, %7
  %8 = phi i8* [ %44, %7 ], [ %0, %5 ]
  %9 = phi i64 [ %45, %7 ], [ 0, %5 ]
  %10 = getelementptr inbounds i8, i8* %1, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = add nuw i64 %9, 1
  %13 = getelementptr inbounds i8, i8* %1, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = add i64 %9, 2
  %16 = getelementptr inbounds i8, i8* %1, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = zext i8 %11 to i64
  %19 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL2e0, i64 0, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = getelementptr inbounds i8, i8* %8, i64 1
  store i8 %20, i8* %8, align 1
  %22 = shl i8 %11, 4
  %23 = and i8 %22, 48
  %24 = zext i8 %23 to i32
  %25 = zext i8 %14 to i32
  %26 = lshr i32 %25, 4
  %27 = or i32 %26, %24
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL2e2, i64 0, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = getelementptr inbounds i8, i8* %8, i64 2
  store i8 %30, i8* %21, align 1
  %32 = shl nuw nsw i32 %25, 2
  %33 = and i32 %32, 60
  %34 = lshr i8 %17, 6
  %35 = zext i8 %34 to i32
  %36 = or i32 %33, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL2e2, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = getelementptr inbounds i8, i8* %8, i64 3
  store i8 %39, i8* %31, align 1
  %41 = zext i8 %17 to i64
  %42 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL2e2, i64 0, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 %43, i8* %40, align 1
  %45 = add i64 %9, 3
  %46 = icmp ult i64 %45, %6
  br i1 %46, label %7, label %47

47:                                               ; preds = %7, %3
  %48 = phi i64 [ 0, %3 ], [ %45, %7 ]
  %49 = phi i8* [ %0, %3 ], [ %44, %7 ]
  %50 = sub i64 %2, %48
  switch i64 %50, label %64 [
    i64 0, label %92
    i64 1, label %51
  ]

51:                                               ; preds = %47
  %52 = getelementptr inbounds i8, i8* %1, i64 %48
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL2e0, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = getelementptr inbounds i8, i8* %49, i64 1
  store i8 %56, i8* %49, align 1
  %58 = shl i8 %53, 4
  %59 = and i8 %58, 48
  %60 = zext i8 %59 to i64
  %61 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL2e2, i64 0, i64 %60
  %62 = load i8, i8* %61, align 16
  %63 = getelementptr inbounds i8, i8* %49, i64 2
  store i8 %62, i8* %57, align 1
  store i8 61, i8* %63, align 1
  br label %89

64:                                               ; preds = %47
  %65 = getelementptr inbounds i8, i8* %1, i64 %48
  %66 = load i8, i8* %65, align 1
  %67 = add i64 %48, 1
  %68 = getelementptr inbounds i8, i8* %1, i64 %67
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %66 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL2e0, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = getelementptr inbounds i8, i8* %49, i64 1
  store i8 %72, i8* %49, align 1
  %74 = shl i8 %66, 4
  %75 = and i8 %74, 48
  %76 = zext i8 %75 to i32
  %77 = zext i8 %69 to i32
  %78 = lshr i32 %77, 4
  %79 = or i32 %78, %76
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL2e2, i64 0, i64 %80
  %82 = load i8, i8* %81, align 1
  %83 = getelementptr inbounds i8, i8* %49, i64 2
  store i8 %82, i8* %73, align 1
  %84 = shl nuw nsw i32 %77, 2
  %85 = and i32 %84, 60
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZL2e2, i64 0, i64 %86
  %88 = load i8, i8* %87, align 4
  store i8 %88, i8* %83, align 1
  br label %89

89:                                               ; preds = %51, %64
  %90 = getelementptr inbounds i8, i8* %49, i64 3
  %91 = getelementptr inbounds i8, i8* %49, i64 4
  store i8 61, i8* %90, align 1
  br label %92

92:                                               ; preds = %89, %47
  %93 = phi i8* [ %49, %47 ], [ %91, %89 ]
  store i8 0, i8* %93, align 1
  %94 = ptrtoint i8* %93 to i64
  %95 = ptrtoint i8* %0 to i64
  %96 = sub i64 %94, %95
  ret i64 %96
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @modp_b64_decode(i8* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #0 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %161, label %5

5:                                                ; preds = %3
  %6 = icmp ugt i64 %2, 3
  %7 = and i64 %2, 3
  %8 = icmp eq i64 %7, 0
  %9 = and i1 %6, %8
  br i1 %9, label %10, label %161

10:                                               ; preds = %5
  %11 = add i64 %2, -1
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 61
  br i1 %14, label %15, label %21

15:                                               ; preds = %10
  %16 = add i64 %2, -2
  %17 = getelementptr inbounds i8, i8* %1, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 61
  %20 = select i1 %19, i64 %16, i64 %11
  br label %21

21:                                               ; preds = %15, %10
  %22 = phi i64 [ %2, %10 ], [ %20, %15 ]
  %23 = trunc i64 %22 to i32
  %24 = and i32 %23, 3
  %25 = icmp eq i32 %24, 0
  %26 = lshr i64 %22, 2
  %27 = zext i1 %25 to i64
  %28 = sub nsw i64 %26, %27
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %69, label %30

30:                                               ; preds = %21, %57
  %31 = phi i8* [ %67, %57 ], [ %1, %21 ]
  %32 = phi i8* [ %65, %57 ], [ %0, %21 ]
  %33 = phi i64 [ %66, %57 ], [ 0, %21 ]
  %34 = load i8, i8* %31, align 1
  %35 = zext i8 %34 to i64
  %36 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZL2d0, i64 0, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds i8, i8* %31, i64 1
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i64
  %41 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZL2d1, i64 0, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = or i32 %42, %37
  %44 = getelementptr inbounds i8, i8* %31, i64 2
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i64
  %47 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZL2d2, i64 0, i64 %46
  %48 = load i32, i32* %47, align 4
  %49 = or i32 %43, %48
  %50 = getelementptr inbounds i8, i8* %31, i64 3
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i64
  %53 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZL2d3, i64 0, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = or i32 %49, %54
  %56 = icmp ugt i32 %55, 33554430
  br i1 %56, label %161, label %57

57:                                               ; preds = %30
  %58 = trunc i32 %55 to i8
  %59 = lshr i32 %55, 8
  %60 = trunc i32 %59 to i8
  %61 = lshr i32 %55, 16
  %62 = trunc i32 %61 to i8
  %63 = getelementptr inbounds i8, i8* %32, i64 1
  store i8 %58, i8* %32, align 1
  %64 = getelementptr inbounds i8, i8* %32, i64 2
  store i8 %60, i8* %63, align 1
  %65 = getelementptr inbounds i8, i8* %32, i64 3
  store i8 %62, i8* %64, align 1
  %66 = add nuw i64 %33, 1
  %67 = getelementptr inbounds i8, i8* %31, i64 4
  %68 = icmp eq i64 %66, %28
  br i1 %68, label %69, label %30

69:                                               ; preds = %57, %21
  %70 = phi i8* [ %0, %21 ], [ %65, %57 ]
  %71 = phi i8* [ %1, %21 ], [ %67, %57 ]
  switch i32 %24, label %126 [
    i32 0, label %72
    i32 1, label %106
    i32 2, label %113
  ]

72:                                               ; preds = %69
  %73 = load i8, i8* %71, align 1
  %74 = zext i8 %73 to i64
  %75 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZL2d0, i64 0, i64 %74
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds i8, i8* %71, i64 1
  %78 = load i8, i8* %77, align 1
  %79 = zext i8 %78 to i64
  %80 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZL2d1, i64 0, i64 %79
  %81 = load i32, i32* %80, align 4
  %82 = or i32 %81, %76
  %83 = getelementptr inbounds i8, i8* %71, i64 2
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i64
  %86 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZL2d2, i64 0, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = or i32 %82, %87
  %89 = getelementptr inbounds i8, i8* %71, i64 3
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i64
  %92 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZL2d3, i64 0, i64 %91
  %93 = load i32, i32* %92, align 4
  %94 = or i32 %88, %93
  %95 = icmp ugt i32 %94, 33554430
  br i1 %95, label %161, label %96

96:                                               ; preds = %72
  %97 = trunc i32 %94 to i8
  %98 = lshr i32 %94, 8
  %99 = trunc i32 %98 to i8
  %100 = lshr i32 %94, 16
  %101 = trunc i32 %100 to i8
  %102 = getelementptr inbounds i8, i8* %70, i64 1
  store i8 %97, i8* %70, align 1
  %103 = getelementptr inbounds i8, i8* %70, i64 2
  store i8 %99, i8* %102, align 1
  store i8 %101, i8* %103, align 1
  %104 = mul i64 %28, 3
  %105 = add i64 %104, 3
  br label %161

106:                                              ; preds = %69
  %107 = load i8, i8* %71, align 1
  %108 = zext i8 %107 to i64
  %109 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZL2d0, i64 0, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = trunc i32 %110 to i8
  %112 = lshr i32 %110, 8
  store i8 %111, i8* %70, align 1
  br label %147

113:                                              ; preds = %69
  %114 = load i8, i8* %71, align 1
  %115 = zext i8 %114 to i64
  %116 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZL2d0, i64 0, i64 %115
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds i8, i8* %71, i64 1
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZL2d1, i64 0, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = or i32 %122, %117
  %124 = trunc i32 %123 to i8
  %125 = lshr i32 %123, 8
  store i8 %124, i8* %70, align 1
  br label %147

126:                                              ; preds = %69
  %127 = load i8, i8* %71, align 1
  %128 = zext i8 %127 to i64
  %129 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZL2d0, i64 0, i64 %128
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds i8, i8* %71, i64 1
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i64
  %134 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZL2d1, i64 0, i64 %133
  %135 = load i32, i32* %134, align 4
  %136 = or i32 %135, %130
  %137 = getelementptr inbounds i8, i8* %71, i64 2
  %138 = load i8, i8* %137, align 1
  %139 = zext i8 %138 to i64
  %140 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZL2d2, i64 0, i64 %139
  %141 = load i32, i32* %140, align 4
  %142 = or i32 %136, %141
  %143 = trunc i32 %142 to i8
  %144 = lshr i32 %142, 8
  %145 = trunc i32 %144 to i8
  %146 = getelementptr inbounds i8, i8* %70, i64 1
  store i8 %143, i8* %70, align 1
  store i8 %145, i8* %146, align 1
  br label %147

147:                                              ; preds = %126, %113, %106
  %148 = phi i32 [ %142, %126 ], [ %123, %113 ], [ %110, %106 ]
  %149 = phi i32 [ %144, %126 ], [ %125, %113 ], [ %112, %106 ]
  %150 = shl nuw i32 %149, 8
  %151 = and i32 %150, 65280
  %152 = and i32 %148, -65281
  %153 = or i32 %152, %151
  %154 = icmp ugt i32 %153, 33554430
  br i1 %154, label %161, label %155

155:                                              ; preds = %147
  %156 = mul i64 %28, 3
  %157 = mul nuw nsw i32 %24, 6
  %158 = lshr i32 %157, 3
  %159 = zext i32 %158 to i64
  %160 = add i64 %156, %159
  br label %161

161:                                              ; preds = %30, %96, %155, %72, %147, %5, %3
  %162 = phi i64 [ 0, %3 ], [ -1, %5 ], [ %160, %155 ], [ %105, %96 ], [ -1, %72 ], [ -1, %147 ], [ -1, %30 ]
  ret i64 %162
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
