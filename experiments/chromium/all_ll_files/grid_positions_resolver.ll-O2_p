; ModuleID = '../../third_party/blink/renderer/core/style/grid_positions_resolver.cc'
source_filename = "../../third_party/blink/renderer/core/style/grid_positions_resolver.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::NamedLineCollection" = type { %"class.WTF::Vector"*, %"class.WTF::Vector"*, %"class.WTF::Vector"*, i64, i64, i64, i64 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i64*, i32, i32 }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.684", %"class.std::__1::unique_ptr.686" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.248", %"class.blink::DataRef.396", %"class.blink::DataRef.400", %"class.blink::DataRef.600", %"class.blink::DataRef.667", %"class.blink::DataRef.671", %"class.blink::DataRef.675", %"class.blink::DataRef.679", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.0", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.0" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.2", %"class.blink::Font" }
%"class.WTF::RefCounted.2" = type { %"class.base::RefCounted.3" }
%"class.base::RefCounted.3" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.33 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.7, %class.scoped_refptr.15, %class.scoped_refptr.25, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.32 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1069", [4 x i8] }>
%"class.WTF::RefCounted.1069" = type { %"class.base::RefCounted.1070" }
%"class.base::RefCounted.1070" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.7 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.13", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.8" }
%"class.WTF::Vector.8" = type { %"class.WTF::VectorBuffer.9" }
%"class.WTF::VectorBuffer.9" = type { %"class.WTF::VectorBufferBase.10" }
%"class.WTF::VectorBufferBase.10" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.13" = type { %"class.base::RefCounted.14" }
%"class.base::RefCounted.14" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.15 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.16", %"class.WTF::RefCounted.23", [4 x i8] }>
%"class.blink::FontSettings.16" = type { %"class.WTF::Vector.17" }
%"class.WTF::Vector.17" = type { %"class.WTF::VectorBuffer.18" }
%"class.WTF::VectorBuffer.18" = type { %"class.WTF::VectorBufferBase.19" }
%"class.WTF::VectorBufferBase.19" = type { %"class.blink::FontTagValuePair.20"*, i32, i32 }
%"class.blink::FontTagValuePair.20" = type { i32, float }
%"class.WTF::RefCounted.23" = type { %"class.base::RefCounted.24" }
%"class.base::RefCounted.24" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.25 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.26", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.29, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.29 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.30", [4 x i8] }>
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.32 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.33 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.34", %"class.WTF::Vector.36", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.34" = type { %"class.base::RefCounted.35" }
%"class.base::RefCounted.35" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.36" = type { %"class.WTF::VectorBuffer.37" }
%"class.WTF::VectorBuffer.37" = type { %"class.WTF::VectorBufferBase.38", [8 x i8] }
%"class.WTF::VectorBufferBase.38" = type { %class.scoped_refptr.39*, i32, i32 }
%class.scoped_refptr.39 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.40", [4 x i8] }>
%"class.WTF::RefCounted.40" = type { %"class.base::RefCounted.41" }
%"class.base::RefCounted.41" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.60, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.40" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.44 }
%union.anon.44 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.55, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.45" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.45" }>
%"struct.std::__1::atomic.45" = type { %"struct.std::__1::__atomic_base.46" }
%"struct.std::__1::__atomic_base.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__cxx_atomic_impl.48" }
%"struct.std::__1::__cxx_atomic_impl.48" = type { %"struct.std::__1::__cxx_atomic_base_impl.49" }
%"struct.std::__1::__cxx_atomic_base_impl.49" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.50" }
%"struct.std::__1::atomic.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__cxx_atomic_impl.53" }
%"struct.std::__1::__cxx_atomic_impl.53" = type { %"struct.std::__1::__cxx_atomic_base_impl.54" }
%"struct.std::__1::__cxx_atomic_base_impl.54" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.55 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.58, %class.scoped_refptr.58 }
%class.scoped_refptr.58 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.60 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.61", [4 x i8] }>
%"class.WTF::RefCounted.61" = type { %"class.base::RefCounted.62" }
%"class.base::RefCounted.62" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.63", i32, [4 x i8], %"class.std::__1::unique_ptr.201", %"class.std::__1::unique_ptr.201", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.235", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.242", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.181", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.99" = type { %"struct.std::__1::__atomic_base.100" }
%"struct.std::__1::__atomic_base.100" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__cxx_atomic_impl.102" }
%"struct.std::__1::__cxx_atomic_impl.102" = type { %"struct.std::__1::__cxx_atomic_base_impl.103" }
%"struct.std::__1::__cxx_atomic_base_impl.103" = type { i64 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist.110"* }
%"class.blink::Worklist.110" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::Worklist.117"* }
%"class.blink::Worklist.117" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.99" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.159", %"class.std::__1::__compressed_pair.168", %"class.std::__1::__compressed_pair.173", %"class.std::__1::__compressed_pair.175", [4 x i8] }>
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161", %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { i64 }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { float }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.184", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.193" }
%"class.WTF::Vector.193" = type { %"class.WTF::VectorBuffer.194" }
%"class.WTF::VectorBuffer.194" = type { %"class.WTF::VectorBufferBase.195" }
%"class.WTF::VectorBufferBase.195" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.209" }
%"class.WTF::VectorBuffer.209" = type { %"class.WTF::VectorBufferBase.210" }
%"class.WTF::VectorBufferBase.210" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.223" }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.110"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.117"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1064" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.1065" }
%"struct.std::__1::__compressed_pair_elem.1065" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.241 }
%class.scoped_refptr.241 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.242" = type { %"struct.std::__1::__atomic_base.243" }
%"struct.std::__1::__atomic_base.243" = type { %"struct.std::__1::__cxx_atomic_impl.244" }
%"struct.std::__1::__cxx_atomic_impl.244" = type { %"struct.std::__1::__cxx_atomic_base_impl.245" }
%"struct.std::__1::__cxx_atomic_base_impl.245" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.246 }
%class.scoped_refptr.246 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.45" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.50" }
%"class.blink::Length" = type <{ %union.anon.247, i8, i8, i8, i8 }>
%union.anon.247 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.blink::DataRef.252", %"class.blink::DataRef.284", %"class.WTF::Vector.288", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.293, %class.scoped_refptr.302, %"class.blink::Persistent.310", %"class.blink::Persistent.312", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.252" = type { %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.254", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.256, %class.scoped_refptr.263, %"class.blink::Persistent.274", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.254" = type { %"class.base::RefCounted.255" }
%"class.base::RefCounted.255" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.256 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.257", %"class.WTF::Vector.258" }
%"class.base::RefCountedThreadSafe.257" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.258" = type { %"class.WTF::VectorBuffer.259" }
%"class.WTF::VectorBuffer.259" = type { %"class.WTF::VectorBufferBase.260" }
%"class.WTF::VectorBufferBase.260" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.263 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.264", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.264" = type { %"class.base::RefCounted.265" }
%"class.base::RefCounted.265" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1080 }
%class.scoped_refptr.1080 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1081", %"class.WTF::Vector.583", %"class.WTF::Vector.1083", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1081" = type { %"class.base::RefCounted.1082" }
%"class.base::RefCounted.1082" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.583" = type { %"class.WTF::VectorBuffer.584" }
%"class.WTF::VectorBuffer.584" = type { %"class.WTF::VectorBufferBase.585" }
%"class.WTF::VectorBufferBase.585" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1083" = type { %"class.WTF::VectorBuffer.1084" }
%"class.WTF::VectorBuffer.1084" = type { %"class.WTF::VectorBufferBase.1085" }
%"class.WTF::VectorBufferBase.1085" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1086 }
%union.anon.1086 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.268" }
%"class.blink::PersistentBase.268" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.269" }
%"class.WTF::HashMap.269" = type { %"class.WTF::HashTable.270" }
%"class.WTF::HashTable.270" = type <{ %"struct.WTF::KeyValuePair.272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.272" = type opaque
%"class.blink::PersistentNodePtr.273" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.274" = type { %"class.blink::PersistentBase.275" }
%"class.blink::PersistentBase.275" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.278" }
%"class.WTF::Vector.278" = type { %"class.WTF::VectorBuffer.279" }
%"class.WTF::VectorBuffer.279" = type { %"class.WTF::VectorBufferBase.280" }
%"class.WTF::VectorBufferBase.280" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.284" = type { %class.scoped_refptr.285 }
%class.scoped_refptr.285 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.286", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.286" = type { %"class.base::RefCounted.287" }
%"class.base::RefCounted.287" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.288" = type { %"class.WTF::VectorBuffer.289" }
%"class.WTF::VectorBuffer.289" = type { %"class.WTF::VectorBufferBase.290" }
%"class.WTF::VectorBufferBase.290" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.293 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.294", %"class.WTF::Vector.296" }
%"class.WTF::RefCounted.294" = type { %"class.base::RefCounted.295" }
%"class.base::RefCounted.295" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.296" = type { %"class.WTF::VectorBuffer.297" }
%"class.WTF::VectorBuffer.297" = type { %"class.WTF::VectorBufferBase.298" }
%"class.WTF::VectorBufferBase.298" = type { %"struct.std::__1::pair.299"*, i32, i32 }
%"struct.std::__1::pair.299" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.302 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.303", [4 x i8], %"class.WTF::Vector.305" }
%"class.WTF::RefCounted.303" = type { %"class.base::RefCounted.304" }
%"class.base::RefCounted.304" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.305" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.307", [28 x i8] }>
%"class.WTF::VectorBufferBase.307" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.310" = type { %"class.blink::PersistentBase.311" }
%"class.blink::PersistentBase.311" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::Persistent.312" = type { %"class.blink::PersistentBase.313" }
%"class.blink::PersistentBase.313" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.316", %"class.blink::Member.394" }
%"class.blink::Member.316" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.318", %"class.blink::Member.330", %"class.blink::Member.324", %"class.blink::Member.332", %"class.blink::Member.332", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::Member.378", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.383", %"class.blink::HeapVector.385" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.322", %"class.blink::Member.322" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.322", %"class.blink::Member.324", %"class.blink::Member.322", %"class.blink::Member.322", %"class.blink::Member.326" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::Node"* }
%"class.blink::Member.330" = type { %"class.blink::MemberBase.331" }
%"class.blink::MemberBase.331" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.708", %"class.WTF::Vector.708", i8, i32, %"class.blink::Member.715", %"class.blink::Member.717", %"class.blink::Member.719", %"class.blink::Member.721", %"class.blink::Member.723", %"class.blink::Member.725", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.733", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.739", %"class.blink::Member.741", %"class.blink::Member.391", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.744", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.367", %"class.blink::Member.347", %"class.blink::Member.768", %"class.blink::Member.347", %"class.blink::Member.347", %"class.blink::Member.347", %"class.blink::UserActionElementSet", %"class.blink::Member.777", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.784", i16, i8, %"class.blink::Member.791", %"class.blink::Member.793", %"class.blink::Member.795", %"class.blink::Member.797", %"class.blink::TextLinkColors", %"class.blink::Member.799", i8, [7 x i8], %"class.blink::HeapHashMap.801", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.347", %"class.WTF::Vector.808", %"class.blink::Member.813", %"class.blink::Member.815", i8, %"class.blink::Member.347", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.817", %"class.blink::HeapVector.819", %"class.std::__1::unique_ptr.827", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.833", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.846", %"class.WTF::Vector.848", i8, i8, %"class.std::__1::unique_ptr.853", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.367", %"class.blink::HeapVector.859", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.867", i8, i32, %"class.blink::Member.869", %"class.blink::Member.871", %"class.blink::Member.873", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.875", %"class.WTF::HashMap.877", %"class.blink::Member.882", %"class.blink::Member.884", %"class.blink::Member.886", %"class.blink::Member.888", %"class.blink::Member.330", %"class.blink::Member.330", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.890", i8, i32, %"class.blink::Member.897", %"class.blink::Member.899", i32, %"class.blink::Member.901", %"class.blink::Member.903", %"class.blink::Member.905", %"class.std::__1::unique_ptr.907", i64, %"class.std::__1::unique_ptr.913", i32, i32, %"class.blink::Member.928", %"class.blink::Member.930", %"class.blink::Member.932", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.934", %"class.WTF::Vector.936", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.941", %"class.blink::Member.948", %"class.std::__1::unique_ptr.950", %"class.blink::Member.956", i8, i8, %"class.WTF::String", %"class.blink::Member.958", i8, [7 x i8], %"class.blink::HeapHashMap.960", %"class.blink::HeapObserverSet", %"class.blink::Member.974", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.976", i32, i8, i8, %"class.blink::WeakMember.978", %"class.blink::Member.979" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.701" }
%"class.blink::HeapHashMap.701" = type { %"class.WTF::HashMap.704" }
%"class.WTF::HashMap.704" = type { %"class.WTF::HashTable.705" }
%"class.WTF::HashTable.705" = type <{ %"struct.WTF::KeyValuePair.707"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.707" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.708" = type { %"class.WTF::VectorBuffer.709" }
%"class.WTF::VectorBuffer.709" = type { %"class.WTF::VectorBufferBase.710" }
%"class.WTF::VectorBufferBase.710" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.712", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.712" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.715" = type { %"class.blink::MemberBase.716" }
%"class.blink::MemberBase.716" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.717" = type { %"class.blink::MemberBase.718" }
%"class.blink::MemberBase.718" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.992", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1033", i32, i8, [3 x i8], %"class.blink::HeapVector.1035", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1043", %"class.blink::Member.1045", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1054", %"class.blink::Member.1060", %"class.blink::Member.1062", i8, [7 x i8] }>
%"class.blink::Supplementable.992" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.993" }
%"class.blink::HeapHashMap.993" = type { %"class.WTF::HashMap.996" }
%"class.WTF::HashMap.996" = type { %"class.WTF::HashTable.997" }
%"class.WTF::HashTable.997" = type <{ %"struct.WTF::KeyValuePair.999"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.999" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1008" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1000" }
%"class.blink::HeapObserverSet.1000" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1001" }
%"class.blink::HeapHashSet.1001" = type { %"class.WTF::HashSet.1004" }
%"class.WTF::HashSet.1004" = type { %"class.WTF::HashTable.1005" }
%"class.WTF::HashTable.1005" = type <{ %"class.blink::WeakMember.1007"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1007" = type opaque
%"class.blink::Supplementable.1008" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1009" }
%"class.blink::HeapHashMap.1009" = type { %"class.WTF::HashMap.1012" }
%"class.WTF::HashMap.1012" = type { %"class.WTF::HashTable.1013" }
%"class.WTF::HashTable.1013" = type <{ %"struct.WTF::KeyValuePair.1015"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1015" = type { i8*, %"class.blink::Member.1071" }
%"class.blink::Member.1071" = type { %"class.blink::MemberBase.1072" }
%"class.blink::MemberBase.1072" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1073" }
%"class.blink::Member.1073" = type { %"class.blink::MemberBase.1074" }
%"class.blink::MemberBase.1074" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1016, %"class.std::__1::unique_ptr.1017", %"class.std::__1::unique_ptr.1017", %"class.std::__1::unique_ptr.1023", %"class.std::__1::unique_ptr.1023", %"class.blink::Member.717", i32, [4 x i8], %"class.WTF::HashSet.1029", i32, i32 }
%class.scoped_refptr.1016 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1017" = type { %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1029" = type { %"class.WTF::HashTable.1030" }
%"class.WTF::HashTable.1030" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1033" = type { %"class.blink::MemberBase.1034" }
%"class.blink::MemberBase.1034" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1035" = type { %"class.WTF::Vector.1038" }
%"class.WTF::Vector.1038" = type { %"class.WTF::VectorBuffer.1039" }
%"class.WTF::VectorBuffer.1039" = type { %"class.WTF::VectorBufferBase.1040" }
%"class.WTF::VectorBufferBase.1040" = type { %"class.blink::Member.1041"*, i32, i32 }
%"class.blink::Member.1041" = type opaque
%"class.blink::Member.1043" = type { %"class.blink::MemberBase.1044" }
%"class.blink::MemberBase.1044" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1045" = type { %"class.blink::MemberBase.1046" }
%"class.blink::MemberBase.1046" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1047", i32, i32 }
%"class.blink::HeapHashMap.1047" = type { %"class.WTF::HashMap.1050" }
%"class.WTF::HashMap.1050" = type { %"class.WTF::HashTable.1051" }
%"class.WTF::HashTable.1051" = type <{ %"struct.WTF::KeyValuePair.1053"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1053" = type opaque
%"class.std::__1::unique_ptr.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1060" = type { %"class.blink::MemberBase.1061" }
%"class.blink::MemberBase.1061" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1062" = type { %"class.blink::MemberBase.1063" }
%"class.blink::MemberBase.1063" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.719" = type { %"class.blink::MemberBase.720" }
%"class.blink::MemberBase.720" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.721" = type { %"class.blink::MemberBase.722" }
%"class.blink::MemberBase.722" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.723" = type { %"class.blink::MemberBase.724" }
%"class.blink::MemberBase.724" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.725" = type { %"class.blink::MemberBase.726" }
%"class.blink::MemberBase.726" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.727" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.727" = type { %"class.std::__1::__compressed_pair.728" }
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.729" }
%"struct.std::__1::__compressed_pair_elem.729" = type { %"class.blink::KURL"* }
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.741" = type { %"class.blink::MemberBase.742" }
%"class.blink::MemberBase.742" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.743 }
%class.scoped_refptr.743 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.744" = type { %"class.WTF::VectorBuffer.745" }
%"class.WTF::VectorBuffer.745" = type { %"class.WTF::VectorBufferBase.746" }
%"class.WTF::VectorBufferBase.746" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.747 }
%class.scoped_refptr.747 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.748", i32, i32, %"class.blink::Persistent.750" }
%"class.WTF::RefCounted.748" = type { %"class.base::RefCounted.749" }
%"class.base::RefCounted.749" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.750" = type { %"class.blink::PersistentBase.751" }
%"class.blink::PersistentBase.751" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.754" }
%"class.blink::HeapHashMap.754" = type { %"class.WTF::HashMap.757" }
%"class.WTF::HashMap.757" = type { %"class.WTF::HashTable.758" }
%"class.WTF::HashTable.758" = type <{ %"struct.WTF::KeyValuePair.760"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.760" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.761" }
%"class.blink::MemberBase.761" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.768" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.770" }
%"class.blink::HeapHashMap.770" = type { %"class.WTF::HashMap.773" }
%"class.WTF::HashMap.773" = type { %"class.WTF::HashTable.774" }
%"class.WTF::HashTable.774" = type <{ %"struct.WTF::KeyValuePair.776"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.776" = type opaque
%"class.blink::Member.777" = type { %"class.blink::MemberBase.778" }
%"class.blink::MemberBase.778" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.781" }
%"class.WTF::HashTable.781" = type <{ %"class.blink::WeakMember.783"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.783" = type opaque
%"class.blink::HeapHashSet.784" = type { %"class.WTF::HashSet.787" }
%"class.WTF::HashSet.787" = type { %"class.WTF::HashTable.788" }
%"class.WTF::HashTable.788" = type <{ %"class.blink::WeakMember.790"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.790" = type opaque
%"class.blink::Member.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.793" = type { %"class.blink::MemberBase.794" }
%"class.blink::MemberBase.794" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.795" = type { %"class.blink::MemberBase.796" }
%"class.blink::MemberBase.796" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.797" = type { %"class.blink::MemberBase.798" }
%"class.blink::MemberBase.798" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.799" = type { %"class.blink::MemberBase.800" }
%"class.blink::MemberBase.800" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.801" = type { %"class.WTF::HashMap.804" }
%"class.WTF::HashMap.804" = type { %"class.WTF::HashTable.805" }
%"class.WTF::HashTable.805" = type <{ %"struct.WTF::KeyValuePair.807"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.807" = type opaque
%"class.WTF::Vector.808" = type { %"class.WTF::VectorBuffer.809" }
%"class.WTF::VectorBuffer.809" = type { %"class.WTF::VectorBufferBase.810" }
%"class.WTF::VectorBufferBase.810" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.813" = type { %"class.blink::MemberBase.814" }
%"class.blink::MemberBase.814" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.815" = type { %"class.blink::MemberBase.816" }
%"class.blink::MemberBase.816" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.347" = type { %"class.blink::MemberBase.348" }
%"class.blink::MemberBase.348" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.352" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.349 }
%class.scoped_refptr.349 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.350", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.350" = type { %"class.base::RefCounted.351" }
%"class.base::RefCounted.351" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.352" = type { %"class.blink::MemberBase.353" }
%"class.blink::MemberBase.353" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.356", %"class.blink::Member.358", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.356" = type { %"class.WTF::SingleThreadedBitField.357" }
%"class.WTF::SingleThreadedBitField.357" = type { i32 }
%"class.blink::Member.358" = type { %"class.blink::MemberBase.359" }
%"class.blink::MemberBase.359" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.360 }
%class.scoped_refptr.360 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.361", %"class.WTF::AtomicString", %"class.WTF::Vector.363" }
%"class.WTF::RefCounted.361" = type { %"class.base::RefCounted.362" }
%"class.base::RefCounted.362" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.363" = type { %"class.WTF::VectorBuffer.364" }
%"class.WTF::VectorBuffer.364" = type { %"class.WTF::VectorBufferBase.290", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.819" = type { %"class.WTF::Vector.822" }
%"class.WTF::Vector.822" = type { %"class.WTF::VectorBuffer.823" }
%"class.WTF::VectorBuffer.823" = type { %"class.WTF::VectorBufferBase.824" }
%"class.WTF::VectorBufferBase.824" = type { %"class.blink::Member.825"*, i32, i32 }
%"class.blink::Member.825" = type opaque
%"class.std::__1::unique_ptr.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.829" }
%"struct.std::__1::__compressed_pair_elem.829" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.833" = type { %"class.WTF::HashSet.836" }
%"class.WTF::HashSet.836" = type { %"class.WTF::HashTable.837" }
%"class.WTF::HashTable.837" = type <{ %"class.blink::WeakMember.839"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.839" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.840", i32, [4 x i8] }>
%"class.WTF::Vector.840" = type { %"class.WTF::VectorBuffer.841" }
%"class.WTF::VectorBuffer.841" = type { %"class.WTF::VectorBufferBase.842" }
%"class.WTF::VectorBufferBase.842" = type { %"struct.std::__1::pair.843"*, i32, i32 }
%"struct.std::__1::pair.843" = type opaque
%"class.blink::Member.846" = type { %"class.blink::MemberBase.847" }
%"class.blink::MemberBase.847" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.848" = type { %"class.WTF::VectorBuffer.849" }
%"class.WTF::VectorBuffer.849" = type { %"class.WTF::VectorBufferBase.850" }
%"class.WTF::VectorBufferBase.850" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.853" = type { %"class.std::__1::__compressed_pair.854" }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.367" = type { %"class.WTF::Vector.370" }
%"class.WTF::Vector.370" = type { %"class.WTF::VectorBuffer.371" }
%"class.WTF::VectorBuffer.371" = type { %"class.WTF::VectorBufferBase.372" }
%"class.WTF::VectorBufferBase.372" = type { %"class.blink::Member.347"*, i32, i32 }
%"class.blink::HeapVector.859" = type { %"class.WTF::Vector.862" }
%"class.WTF::Vector.862" = type { %"class.WTF::VectorBuffer.863" }
%"class.WTF::VectorBuffer.863" = type { %"class.WTF::VectorBufferBase.864" }
%"class.WTF::VectorBufferBase.864" = type { %"class.blink::Member.865"*, i32, i32 }
%"class.blink::Member.865" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.330" }
%"class.blink::Member.867" = type { %"class.blink::MemberBase.868" }
%"class.blink::MemberBase.868" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.869" = type { %"class.blink::MemberBase.870" }
%"class.blink::MemberBase.870" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.871" = type { %"class.blink::MemberBase.872" }
%"class.blink::MemberBase.872" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.873" = type { %"class.blink::MemberBase.874" }
%"class.blink::MemberBase.874" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.875" = type { %"class.blink::MemberBase.876" }
%"class.blink::MemberBase.876" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.877" = type { %"class.WTF::HashTable.878" }
%"class.WTF::HashTable.878" = type <{ %"struct.WTF::KeyValuePair.881"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.881" = type opaque
%"class.blink::Member.882" = type { %"class.blink::MemberBase.883" }
%"class.blink::MemberBase.883" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.884" = type { %"class.blink::MemberBase.885" }
%"class.blink::MemberBase.885" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.886" = type { %"class.blink::MemberBase.887" }
%"class.blink::MemberBase.887" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.888" = type { %"class.blink::MemberBase.889" }
%"class.blink::MemberBase.889" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.767", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.764, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.764 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.765" }>
%"class.base::RefCountedThreadSafe.765" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.766 }
%class.scoped_refptr.766 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.767" = type { %"class.blink::MemberBase.331" }
%"class.blink::HeapHashSet.890" = type { %"class.WTF::HashSet.893" }
%"class.WTF::HashSet.893" = type { %"class.WTF::HashTable.894" }
%"class.WTF::HashTable.894" = type <{ %"class.blink::Member.896"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.896" = type opaque
%"class.blink::Member.897" = type { %"class.blink::MemberBase.898" }
%"class.blink::MemberBase.898" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.899" = type { %"class.blink::MemberBase.900" }
%"class.blink::MemberBase.900" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.901" = type { %"class.blink::MemberBase.902" }
%"class.blink::MemberBase.902" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.903" = type { %"class.blink::MemberBase.904" }
%"class.blink::MemberBase.904" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.905" = type { %"class.blink::MemberBase.906" }
%"class.blink::MemberBase.906" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.907" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.909" }
%"struct.std::__1::__compressed_pair_elem.909" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.913" = type { %"class.std::__1::__compressed_pair.914" }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.916", %"class.WTF::HashSet.916", %"class.WTF::HashSet.916", %"class.WTF::HashSet.916", %"class.WTF::HashSet.916", %"class.WTF::HashSet.916", i32, [4 x i8], %"class.WTF::HashMap.920", %"class.WTF::HashMap.920", %"class.WTF::HashMap.920", %"class.WTF::HashMap.920", %"class.WTF::HashMap.920", %"class.WTF::HashMap.920", %"class.WTF::HashMap.920", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.916" = type { %"class.WTF::HashTable.917" }
%"class.WTF::HashTable.917" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.920" = type { %"class.WTF::HashTable.921" }
%"class.WTF::HashTable.921" = type <{ %"struct.WTF::KeyValuePair.924"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.924" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.928" = type { %"class.blink::MemberBase.929" }
%"class.blink::MemberBase.929" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.930" = type { %"class.blink::MemberBase.931" }
%"class.blink::MemberBase.931" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.932" = type { %"class.blink::MemberBase.933" }
%"class.blink::MemberBase.933" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.934" = type { %"class.blink::MemberBase.935" }
%"class.blink::MemberBase.935" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.936" = type { %"class.WTF::VectorBuffer.937" }
%"class.WTF::VectorBuffer.937" = type { %"class.WTF::VectorBufferBase.938" }
%"class.WTF::VectorBufferBase.938" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.941" = type { %"class.WTF::HashMap.944" }
%"class.WTF::HashMap.944" = type { %"class.WTF::HashTable.945" }
%"class.WTF::HashTable.945" = type <{ %"struct.WTF::KeyValuePair.947"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.947" = type opaque
%"class.blink::Member.948" = type { %"class.blink::MemberBase.949" }
%"class.blink::MemberBase.949" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.950" = type { %"class.std::__1::__compressed_pair.951" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.956" = type { %"class.blink::MemberBase.957" }
%"class.blink::MemberBase.957" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.958" = type { %"class.blink::MemberBase.959" }
%"class.blink::MemberBase.959" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.960" = type { %"class.WTF::HashMap.963" }
%"class.WTF::HashMap.963" = type { %"class.WTF::HashTable.964" }
%"class.WTF::HashTable.964" = type <{ %"struct.WTF::KeyValuePair.966"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.966" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.967" }
%"class.blink::HeapHashSet.967" = type { %"class.WTF::HashSet.970" }
%"class.WTF::HashSet.970" = type { %"class.WTF::HashTable.971" }
%"class.WTF::HashTable.971" = type <{ %"class.blink::WeakMember.973"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.973" = type opaque
%"class.blink::Member.974" = type { %"class.blink::MemberBase.975" }
%"class.blink::MemberBase.975" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.330", %"class.blink::HeapHashSet.983", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.990", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.983" = type { %"class.WTF::HashSet.986" }
%"class.WTF::HashSet.986" = type { %"class.WTF::HashTable.987" }
%"class.WTF::HashTable.987" = type <{ %"class.blink::Member.989"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.989" = type opaque
%"class.blink::HeapTaskRunnerTimer.990" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.991", { i64, i64 } }
%"class.blink::WeakMember.991" = type { %"class.blink::MemberBase.977" }
%"class.blink::WeakMember.978" = type { %"class.blink::MemberBase.323" }
%"class.blink::Member.979" = type { %"class.blink::MemberBase.980" }
%"class.blink::MemberBase.980" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.324" = type { %"class.blink::MemberBase.325" }
%"class.blink::MemberBase.325" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.332" = type { %"class.blink::MemberBase.333" }
%"class.blink::MemberBase.333" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.336" }
%"class.blink::HeapHashMap.336" = type { %"class.WTF::HashMap.339" }
%"class.WTF::HashMap.339" = type { %"class.WTF::HashTable.340" }
%"class.WTF::HashTable.340" = type <{ %"struct.WTF::KeyValuePair.342"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.342" = type { %"class.WTF::AtomicString", %"class.blink::Member.343" }
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.347", i32, %"class.blink::HeapVector.367" }
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.380" }
%"class.blink::Member.380" = type { %"class.blink::MemberBase.381" }
%"class.blink::MemberBase.381" = type { %"class.blink::HeapHashMap.382"* }
%"class.blink::HeapHashMap.382" = type opaque
%"class.blink::Member.383" = type { %"class.blink::MemberBase.384" }
%"class.blink::MemberBase.384" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.385" = type { %"class.WTF::Vector.388" }
%"class.WTF::Vector.388" = type { %"class.WTF::VectorBuffer.389" }
%"class.WTF::VectorBuffer.389" = type { %"class.WTF::VectorBufferBase.390" }
%"class.WTF::VectorBufferBase.390" = type { %"class.blink::Member.391"*, i32, i32 }
%"class.blink::Member.394" = type { %"class.blink::MemberBase.395" }
%"class.blink::MemberBase.395" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.396" = type { %class.scoped_refptr.397 }
%class.scoped_refptr.397 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.398", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.398" = type { %"class.base::RefCounted.399" }
%"class.base::RefCounted.399" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.400" = type { %class.scoped_refptr.401 }
%class.scoped_refptr.401 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.402", [4 x i8], %"class.blink::DataRef.404", %"class.blink::DataRef.470", %"class.blink::TransformOperations", %class.scoped_refptr.302, %"class.blink::Persistent.594", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.402" = type { %"class.base::RefCounted.403" }
%"class.base::RefCounted.403" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.404" = type { %class.scoped_refptr.405 }
%class.scoped_refptr.405 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.406", [4 x i8], %"class.blink::DataRef.408", %"class.blink::Persistent.446", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.406" = type { %"class.base::RefCounted.407" }
%"class.base::RefCounted.407" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.408" = type { %class.scoped_refptr.409 }
%class.scoped_refptr.409 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.410", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.428, %class.scoped_refptr.431, %class.scoped_refptr.434, %class.scoped_refptr.437, %class.scoped_refptr.438, %class.scoped_refptr.439, %"class.blink::Persistent.446", %"class.blink::Persistent.461", %"class.absl::optional.465", %"class.absl::optional.465", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.410" = type { %"class.base::RefCounted.411" }
%"class.base::RefCounted.411" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.412", %"class.std::__1::unique_ptr.417" }
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.417" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.420", %"class.WTF::Vector.412", i32, i32 }
%"class.WTF::Vector.420" = type { %"class.WTF::VectorBuffer.421" }
%"class.WTF::VectorBuffer.421" = type { %"class.WTF::VectorBufferBase.422" }
%"class.WTF::VectorBufferBase.422" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.428 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.429", [4 x i8] }>
%"class.WTF::RefCounted.429" = type { %"class.base::RefCounted.430" }
%"class.base::RefCounted.430" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.431 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.432", [4 x i8] }>
%"class.WTF::RefCounted.432" = type { %"class.base::RefCounted.433" }
%"class.base::RefCounted.433" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.434 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.435" }>
%"class.WTF::RefCounted.435" = type { %"class.base::RefCounted.436" }
%"class.base::RefCounted.436" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.437 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.438 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.439 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.440", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.440" = type { %"class.base::RefCounted.441" }
%"class.base::RefCounted.441" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.442" }
%"class.blink::DataRef.442" = type { %class.scoped_refptr.443 }
%class.scoped_refptr.443 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.310", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.444" }
%"class.WTF::RefCounted.444" = type { %"class.base::RefCounted.445" }
%"class.base::RefCounted.445" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.461" = type { %"class.blink::PersistentBase.462" }
%"class.blink::PersistentBase.462" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.431, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.465" = type { %"class.absl::optional_internal::optional_data.466" }
%"class.absl::optional_internal::optional_data.466" = type { %"class.absl::optional_internal::optional_data_base.467" }
%"class.absl::optional_internal::optional_data_base.467" = type { %"class.absl::optional_internal::optional_data_dtor_base.468" }
%"class.absl::optional_internal::optional_data_dtor_base.468" = type { i8, [3 x i8], %union.anon.469 }
%union.anon.469 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.446" = type { %"class.blink::PersistentBase.447" }
%"class.blink::PersistentBase.447" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.450" }
%"class.blink::HeapVector.450" = type { %"class.WTF::Vector.453" }
%"class.WTF::Vector.453" = type { %"class.WTF::VectorBuffer.454" }
%"class.WTF::VectorBuffer.454" = type { %"class.WTF::VectorBufferBase.455" }
%"class.WTF::VectorBufferBase.455" = type { %"class.blink::Member.456"*, i32, i32 }
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.470" = type { %class.scoped_refptr.471 }
%class.scoped_refptr.471 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.472", %"class.blink::DataRef.474", %"class.blink::DataRef.478", %"class.blink::DataRef.487", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.506", %"class.std::__1::unique_ptr.517", %"class.std::__1::unique_ptr.555", %"class.std::__1::unique_ptr.566", %"class.std::__1::unique_ptr.577", %"class.WTF::Vector.583", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.472" = type { %"class.base::RefCounted.473" }
%"class.base::RefCounted.473" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.474" = type { %class.scoped_refptr.475 }
%class.scoped_refptr.475 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.476", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.478" = type { %class.scoped_refptr.479 }
%class.scoped_refptr.479 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.480", [4 x i8], %"class.WTF::Vector.482", i8, [7 x i8] }>
%"class.WTF::RefCounted.480" = type { %"class.base::RefCounted.481" }
%"class.base::RefCounted.481" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.482" = type { %"class.WTF::VectorBuffer.483" }
%"class.WTF::VectorBuffer.483" = type { %"class.WTF::VectorBufferBase.484" }
%"class.WTF::VectorBufferBase.484" = type { i32*, i32, i32 }
%"class.blink::DataRef.487" = type { %class.scoped_refptr.488 }
%class.scoped_refptr.488 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.489", [4 x i8], %"class.WTF::HashMap.491", %"class.WTF::HashMap.491", %"class.WTF::HashMap.491", %"class.WTF::HashMap.491", %"class.WTF::HashMap.491", %"class.WTF::HashMap.491", %"class.WTF::HashMap.496", %"class.WTF::HashMap.496", %"class.WTF::HashMap.496", %"class.WTF::HashMap.496", %"class.WTF::HashMap.501", %"class.WTF::Vector.412", %"class.WTF::Vector.412", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.489" = type { %"class.base::RefCounted.490" }
%"class.base::RefCounted.490" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.491" = type { %"class.WTF::HashTable.492" }
%"class.WTF::HashTable.492" = type <{ %"struct.WTF::KeyValuePair.495"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.495" = type { %"class.WTF::String", %"class.WTF::Vector" }
%"class.WTF::HashMap.496" = type { %"class.WTF::HashTable.497" }
%"class.WTF::HashTable.497" = type <{ %"struct.WTF::KeyValuePair.500"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.500" = type { i64, %"class.WTF::Vector.583" }
%"class.WTF::HashMap.501" = type { %"class.WTF::HashTable.502" }
%"class.WTF::HashTable.502" = type <{ %"struct.WTF::KeyValuePair.505"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.505" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.509" }
%"class.WTF::HashMap.509" = type { %"class.WTF::HashTable.510" }
%"class.WTF::HashTable.510" = type <{ %"struct.WTF::KeyValuePair.513"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.513" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1075", %"class.absl::optional.1075", %"class.absl::optional.1075" }
%"class.absl::optional.1075" = type { %"class.absl::optional_internal::optional_data.1076" }
%"class.absl::optional_internal::optional_data.1076" = type { %"class.absl::optional_internal::optional_data_base.1077" }
%"class.absl::optional_internal::optional_data_base.1077" = type { %"class.absl::optional_internal::optional_data_dtor_base.1078" }
%"class.absl::optional_internal::optional_data_dtor_base.1078" = type { i8, %union.anon.1079 }
%union.anon.1079 = type { i32 }
%"class.std::__1::unique_ptr.517" = type { %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.288", %"class.WTF::Vector.532", %"class.WTF::Vector.520", %"class.WTF::Vector.537", %"class.WTF::Vector.542", %"class.WTF::Vector.547" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.520", %"class.WTF::Vector.520", %"class.WTF::Vector.525" }
%"class.WTF::Vector.525" = type { %"class.WTF::VectorBuffer.526" }
%"class.WTF::VectorBuffer.526" = type { %"class.WTF::VectorBufferBase.527" }
%"class.WTF::VectorBufferBase.527" = type { %class.scoped_refptr.528*, i32, i32 }
%class.scoped_refptr.528 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.529" }
%"class.base::RefCountedThreadSafe.529" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.532" = type { %"class.WTF::VectorBuffer.533" }
%"class.WTF::VectorBuffer.533" = type { %"class.WTF::VectorBufferBase.534" }
%"class.WTF::VectorBufferBase.534" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.520" = type { %"class.WTF::VectorBuffer.521" }
%"class.WTF::VectorBuffer.521" = type { %"class.WTF::VectorBufferBase.522" }
%"class.WTF::VectorBufferBase.522" = type { double*, i32, i32 }
%"class.WTF::Vector.537" = type { %"class.WTF::VectorBuffer.538" }
%"class.WTF::VectorBuffer.538" = type { %"class.WTF::VectorBufferBase.539" }
%"class.WTF::VectorBufferBase.539" = type { i32*, i32, i32 }
%"class.WTF::Vector.542" = type { %"class.WTF::VectorBuffer.543" }
%"class.WTF::VectorBuffer.543" = type { %"class.WTF::VectorBufferBase.544" }
%"class.WTF::VectorBufferBase.544" = type { i32*, i32, i32 }
%"class.WTF::Vector.547" = type { %"class.WTF::VectorBuffer.548" }
%"class.WTF::VectorBuffer.548" = type { %"class.WTF::VectorBufferBase.549" }
%"class.WTF::VectorBufferBase.549" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.558" }
%"class.WTF::Vector.558" = type { %"class.WTF::VectorBuffer.559" }
%"class.WTF::VectorBuffer.559" = type { %"class.WTF::VectorBufferBase.560" }
%"class.WTF::VectorBufferBase.560" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.569" }
%"class.WTF::Vector.569" = type { %"class.WTF::VectorBuffer.570" }
%"class.WTF::VectorBuffer.570" = type { %"class.WTF::VectorBufferBase.571" }
%"class.WTF::VectorBufferBase.571" = type { %"class.blink::Persistent.310"*, i32, i32 }
%"class.std::__1::unique_ptr.577" = type { %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.310", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.588" }
%"class.WTF::Vector.588" = type { %"class.WTF::VectorBuffer.589" }
%"class.WTF::VectorBuffer.589" = type { %"class.WTF::VectorBufferBase.590" }
%"class.WTF::VectorBufferBase.590" = type { %class.scoped_refptr.591*, i32, i32 }
%class.scoped_refptr.591 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.435", [4 x i8] }>
%"class.blink::Persistent.594" = type { %"class.blink::PersistentBase.595" }
%"class.blink::PersistentBase.595" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.598" }
%"class.blink::Member.598" = type { %"class.blink::MemberBase.599" }
%"class.blink::MemberBase.599" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.600" = type { %class.scoped_refptr.601 }
%class.scoped_refptr.601 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.602", [4 x i8], %"class.blink::DataRef.604", %"class.blink::DataRef.608", %"class.blink::DataRef.629", %"class.blink::DataRef.647", %"class.blink::DataRef.659", %"class.blink::DataRef.663", %class.scoped_refptr.633, i32, [4 x i8] }>
%"class.WTF::RefCounted.602" = type { %"class.base::RefCounted.603" }
%"class.base::RefCounted.603" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.604" = type { %class.scoped_refptr.605 }
%class.scoped_refptr.605 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.606", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.606" = type { %"class.base::RefCounted.607" }
%"class.base::RefCounted.607" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.608" = type { %class.scoped_refptr.609 }
%class.scoped_refptr.609 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.610", %class.scoped_refptr.612, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.610" = type { %"class.base::RefCounted.611" }
%"class.base::RefCounted.611" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.612 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.619", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.432" }>
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.619" = type { %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.622, i32, %"struct.std::__1::atomic.50", %"struct.std::__1::atomic.50", i8, i8 }>
%class.sk_sp.622 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.623, %class.SkTDArray.624, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.45" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.623 = type { i8*, i32, i32 }
%class.SkTDArray.624 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.625 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.45", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.625 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.242", [3 x i8] }
%"class.blink::DataRef.629" = type { %class.scoped_refptr.630 }
%class.scoped_refptr.630 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.631", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.631" = type { %"class.base::RefCounted.632" }
%"class.base::RefCounted.632" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.633, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %class.scoped_refptr.651, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.651 = type { %"class.base::RefCountedData.652"* }
%"class.base::RefCountedData.652" = type { %"class.base::RefCountedThreadSafe.653", %"class.WTF::Vector.654" }
%"class.base::RefCountedThreadSafe.653" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.654" = type { %"class.WTF::VectorBuffer.655" }
%"class.WTF::VectorBuffer.655" = type { %"class.WTF::VectorBufferBase.656" }
%"class.WTF::VectorBufferBase.656" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.659" = type { %class.scoped_refptr.660 }
%class.scoped_refptr.660 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.661", %class.scoped_refptr.633, %class.scoped_refptr.633, %class.scoped_refptr.633 }
%"class.WTF::RefCounted.661" = type { %"class.base::RefCounted.662" }
%"class.base::RefCounted.662" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.663" = type { %class.scoped_refptr.664 }
%class.scoped_refptr.664 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.665", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.665" = type { %"class.base::RefCounted.666" }
%"class.base::RefCounted.666" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.633 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.634", %"class.blink::Persistent.636", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.634" = type { %"class.base::RefCounted.635" }
%"class.base::RefCounted.635" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.636" = type { %"class.blink::PersistentBase.637" }
%"class.blink::PersistentBase.637" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.273" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.347", %"class.blink::HeapHashMap.640" }
%"class.blink::HeapHashMap.640" = type { %"class.WTF::HashMap.643" }
%"class.WTF::HashMap.643" = type { %"class.WTF::HashTable.644" }
%"class.WTF::HashTable.644" = type <{ %"struct.WTF::KeyValuePair.646"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.646" = type opaque
%"class.blink::DataRef.667" = type { %class.scoped_refptr.668 }
%class.scoped_refptr.668 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.669", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.669" = type { %"class.base::RefCounted.670" }
%"class.base::RefCounted.670" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.671" = type { %class.scoped_refptr.672 }
%class.scoped_refptr.672 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.673", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.673" = type { %"class.base::RefCounted.674" }
%"class.base::RefCounted.674" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.675" = type { %class.scoped_refptr.676 }
%class.scoped_refptr.676 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.677", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.677" = type { %"class.base::RefCounted.678" }
%"class.base::RefCounted.678" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.679" = type { %class.scoped_refptr.680 }
%class.scoped_refptr.680 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.681", %class.scoped_refptr.683 }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.683 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.699", %"class.blink::StyleVariables", %class.scoped_refptr.683 }
%"class.WTF::RefCounted.699" = type { %"class.base::RefCounted.700" }
%"class.base::RefCounted.700" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.684" = type { %"class.base::RefCounted.685" }
%"class.base::RefCounted.685" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.689" }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.WTF::Vector.692"* }
%"class.WTF::Vector.692" = type { %"class.WTF::VectorBuffer.1090" }
%"class.WTF::VectorBuffer.1090" = type { %"class.WTF::VectorBufferBase.1091", [32 x i8] }
%"class.WTF::VectorBufferBase.1091" = type { %class.scoped_refptr.1092*, i32, i32 }
%class.scoped_refptr.1092 = type { %"class.blink::ComputedStyle"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::StringAppend" = type { %"class.WTF::String", i8* }
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.1096" }
%"class.WTF::StringTypeAdapter.1096" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.1097" = type <{ i8*, i32, [4 x i8] }>

$_ZNK3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E4findERKS1_ = comdat any

@.str = private unnamed_addr constant [71 x i8] c"../../third_party/blink/renderer/core/style/grid_positions_resolver.cc\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"HasNamedLines()\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.2 = private unnamed_addr constant [7 x i8] c"-start\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"-end\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.4 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.5 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

@_ZN5blink19NamedLineCollectionC1ERKNS_13ComputedStyleERKN3WTF6StringENS_24GridTrackSizingDirectionEmm = hidden unnamed_addr alias void (%"class.blink::NamedLineCollection"*, %"class.blink::ComputedStyle"*, %"class.WTF::String"*, i32, i64, i64), void (%"class.blink::NamedLineCollection"*, %"class.blink::ComputedStyle"*, %"class.WTF::String"*, i32, i64, i64)* @_ZN5blink19NamedLineCollectionC2ERKNS_13ComputedStyleERKN3WTF6StringENS_24GridTrackSizingDirectionEmm

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19NamedLineCollectionC2ERKNS_13ComputedStyleERKN3WTF6StringENS_24GridTrackSizingDirectionEmm(%"class.blink::NamedLineCollection"* nocapture, %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), %"class.WTF::String"* dereferenceable(8), i32, i64, i64) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 4
  %10 = bitcast %"class.blink::NamedLineCollection"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false)
  store i64 %4, i64* %9, align 8
  %11 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 5
  store i64 %5, i64* %11, align 8
  %12 = icmp eq i32 %3, 0
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %14, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %16, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %18, i64 0, i32 2
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %18, i64 0, i32 4
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %18, i64 0, i32 6
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %18, i64 0, i32 3
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %18, i64 0, i32 5
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %18, i64 0, i32 7
  %25 = select i1 %12, %"class.WTF::HashMap.491"* %20, %"class.WTF::HashMap.491"* %23
  %26 = select i1 %12, %"class.WTF::HashMap.491"* %19, %"class.WTF::HashMap.491"* %22
  %27 = select i1 %12, %"class.WTF::HashMap.491"* %21, %"class.WTF::HashMap.491"* %24
  %28 = getelementptr inbounds %"class.WTF::HashMap.491", %"class.WTF::HashMap.491"* %26, i64 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %45, label %31

31:                                               ; preds = %6
  %32 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::HashMap.491", %"class.WTF::HashMap.491"* %26, i64 0, i32 0
  %34 = tail call { %"struct.WTF::KeyValuePair.495"*, %"struct.WTF::KeyValuePair.495"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E4findERKS1_(%"class.WTF::HashTable.492"* %33, %"class.WTF::String"* dereferenceable(8) %2) #8
  %35 = extractvalue { %"struct.WTF::KeyValuePair.495"*, %"struct.WTF::KeyValuePair.495"* } %34, 0
  %36 = getelementptr inbounds %"class.WTF::HashMap.491", %"class.WTF::HashMap.491"* %26, i64 0, i32 0, i32 0
  %37 = load %"struct.WTF::KeyValuePair.495"*, %"struct.WTF::KeyValuePair.495"** %36, align 8
  %38 = getelementptr inbounds %"class.WTF::HashMap.491", %"class.WTF::HashMap.491"* %26, i64 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.495", %"struct.WTF::KeyValuePair.495"* %37, i64 %40
  %42 = icmp eq %"struct.WTF::KeyValuePair.495"* %35, %41
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.495", %"struct.WTF::KeyValuePair.495"* %35, i64 0, i32 1
  %44 = select i1 %42, %"class.WTF::Vector"* null, %"class.WTF::Vector"* %43
  store %"class.WTF::Vector"* %44, %"class.WTF::Vector"** %32, align 8
  br label %45

45:                                               ; preds = %31, %6
  %46 = getelementptr inbounds %"class.WTF::HashMap.491", %"class.WTF::HashMap.491"* %25, i64 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %62, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::HashMap.491", %"class.WTF::HashMap.491"* %25, i64 0, i32 0
  %51 = tail call { %"struct.WTF::KeyValuePair.495"*, %"struct.WTF::KeyValuePair.495"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E4findERKS1_(%"class.WTF::HashTable.492"* %50, %"class.WTF::String"* dereferenceable(8) %2) #8
  %52 = extractvalue { %"struct.WTF::KeyValuePair.495"*, %"struct.WTF::KeyValuePair.495"* } %51, 0
  %53 = getelementptr inbounds %"class.WTF::HashMap.491", %"class.WTF::HashMap.491"* %25, i64 0, i32 0, i32 0
  %54 = load %"struct.WTF::KeyValuePair.495"*, %"struct.WTF::KeyValuePair.495"** %53, align 8
  %55 = getelementptr inbounds %"class.WTF::HashMap.491", %"class.WTF::HashMap.491"* %25, i64 0, i32 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.495", %"struct.WTF::KeyValuePair.495"* %54, i64 %57
  %59 = icmp eq %"struct.WTF::KeyValuePair.495"* %52, %58
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.495", %"struct.WTF::KeyValuePair.495"* %52, i64 0, i32 1
  %61 = select i1 %59, %"class.WTF::Vector"* null, %"class.WTF::Vector"* %60
  store %"class.WTF::Vector"* %61, %"class.WTF::Vector"** %7, align 8
  br label %62

62:                                               ; preds = %49, %45
  %63 = getelementptr inbounds %"class.WTF::HashMap.491", %"class.WTF::HashMap.491"* %27, i64 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %79, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.WTF::HashMap.491", %"class.WTF::HashMap.491"* %27, i64 0, i32 0
  %68 = tail call { %"struct.WTF::KeyValuePair.495"*, %"struct.WTF::KeyValuePair.495"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E4findERKS1_(%"class.WTF::HashTable.492"* %67, %"class.WTF::String"* dereferenceable(8) %2) #8
  %69 = extractvalue { %"struct.WTF::KeyValuePair.495"*, %"struct.WTF::KeyValuePair.495"* } %68, 0
  %70 = getelementptr inbounds %"class.WTF::HashMap.491", %"class.WTF::HashMap.491"* %27, i64 0, i32 0, i32 0
  %71 = load %"struct.WTF::KeyValuePair.495"*, %"struct.WTF::KeyValuePair.495"** %70, align 8
  %72 = getelementptr inbounds %"class.WTF::HashMap.491", %"class.WTF::HashMap.491"* %27, i64 0, i32 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = zext i32 %73 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.495", %"struct.WTF::KeyValuePair.495"* %71, i64 %74
  %76 = icmp eq %"struct.WTF::KeyValuePair.495"* %69, %75
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.495", %"struct.WTF::KeyValuePair.495"* %69, i64 0, i32 1
  %78 = select i1 %76, %"class.WTF::Vector"* null, %"class.WTF::Vector"* %77
  store %"class.WTF::Vector"* %78, %"class.WTF::Vector"** %8, align 8
  br label %79

79:                                               ; preds = %66, %62
  %80 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %13, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %80, i64 0, i32 3, i32 0, i32 0
  %82 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %82, i64 0, i32 3, i32 0, i32 0
  %84 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %83, align 8
  br i1 %12, label %85, label %95

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %84, i64 0, i32 17
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 3
  store i64 %87, i64* %88, align 8
  %89 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %13, align 8
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %89, i64 0, i32 3, i32 0, i32 0
  %91 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %91, i64 0, i32 3, i32 0, i32 0
  %93 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %93, i64 0, i32 13, i32 0, i32 0, i32 2
  br label %105

95:                                               ; preds = %79
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %84, i64 0, i32 18
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 3
  store i64 %97, i64* %98, align 8
  %99 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %13, align 8
  %100 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %99, i64 0, i32 3, i32 0, i32 0
  %101 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %101, i64 0, i32 3, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %102, align 8
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %103, i64 0, i32 14, i32 0, i32 0, i32 2
  br label %105

105:                                              ; preds = %95, %85
  %106 = phi i32* [ %94, %85 ], [ %104, %95 ]
  %107 = load i32, i32* %106, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 6
  store i64 %108, i64* %109, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink19NamedLineCollection21HasExplicitNamedLinesEv(%"class.blink::NamedLineCollection"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 0
  %3 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %2, align 8
  %4 = icmp eq %"class.WTF::Vector"* %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 1
  %7 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %6, align 8
  %8 = icmp ne %"class.WTF::Vector"* %7, null
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ true, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink19NamedLineCollection13HasNamedLinesEv(%"class.blink::NamedLineCollection"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 0
  %3 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %2, align 8
  %4 = icmp eq %"class.WTF::Vector"* %3, null
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 1
  %7 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %6, align 8
  %8 = icmp eq %"class.WTF::Vector"* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 2
  %11 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %10, align 8
  %12 = icmp ne %"class.WTF::Vector"* %11, null
  br label %13

13:                                               ; preds = %5, %1, %9
  %14 = phi i1 [ true, %5 ], [ %12, %9 ], [ true, %1 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19NamedLineCollection8ContainsEm(%"class.blink::NamedLineCollection"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 0
  %5 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %6 = icmp eq %"class.WTF::Vector"* %5, null
  br i1 %6, label %7, label %18

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 1
  %9 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %8, align 8
  %10 = icmp eq %"class.WTF::Vector"* %9, null
  br i1 %10, label %11, label %18

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 2
  %13 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %12, align 8
  %14 = icmp eq %"class.WTF::Vector"* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 80, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)) #8
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %18

18:                                               ; preds = %11, %2, %7, %15
  %19 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 4
  %20 = load i64, i64* %19, align 8
  %21 = icmp ult i64 %20, %1
  br i1 %21, label %274, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 2
  %24 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %23, align 8
  %25 = icmp eq %"class.WTF::Vector"* %24, null
  br i1 %25, label %48, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %24, i64 0, i32 0, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %24, i64 0, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i64, i64* %28, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %48, label %34

34:                                               ; preds = %26, %38
  %35 = phi i64* [ %39, %38 ], [ %28, %26 ]
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %1
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds i64, i64* %35, i64 1
  %40 = icmp ult i64* %39, %32
  br i1 %40, label %34, label %48

41:                                               ; preds = %34
  %42 = ptrtoint i64* %35 to i64
  %43 = ptrtoint i64* %28 to i64
  %44 = sub i64 %42, %43
  %45 = lshr exact i64 %44, 3
  %46 = trunc i64 %45 to i32
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %48, label %274

48:                                               ; preds = %38, %41, %26, %22
  %49 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 6
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 3
  %54 = load i64, i64* %53, align 8
  %55 = icmp ugt i64 %54, %1
  br i1 %55, label %56, label %81

56:                                               ; preds = %52, %48
  %57 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %58 = icmp eq %"class.WTF::Vector"* %57, null
  br i1 %58, label %274, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %57, i64 0, i32 0, i32 0, i32 0
  %61 = load i64*, i64** %60, align 8
  %62 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %57, i64 0, i32 0, i32 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds i64, i64* %61, i64 %64
  %66 = icmp eq i32 %63, 0
  br i1 %66, label %274, label %67

67:                                               ; preds = %59, %71
  %68 = phi i64* [ %72, %71 ], [ %61, %59 ]
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, %1
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds i64, i64* %68, i64 1
  %73 = icmp ult i64* %72, %65
  br i1 %73, label %67, label %274

74:                                               ; preds = %67
  %75 = ptrtoint i64* %68 to i64
  %76 = ptrtoint i64* %61 to i64
  %77 = sub i64 %75, %76
  %78 = lshr exact i64 %77, 3
  %79 = trunc i64 %78 to i32
  %80 = icmp ne i32 %79, -1
  br label %274

81:                                               ; preds = %52
  %82 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 5
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, %54
  %85 = icmp ult i64 %84, %1
  br i1 %85, label %86, label %113

86:                                               ; preds = %81
  %87 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %88 = add i64 %1, 1
  %89 = sub i64 %88, %83
  %90 = icmp eq %"class.WTF::Vector"* %87, null
  br i1 %90, label %274, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %87, i64 0, i32 0, i32 0, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %87, i64 0, i32 0, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds i64, i64* %93, i64 %96
  %98 = icmp eq i32 %95, 0
  br i1 %98, label %274, label %99

99:                                               ; preds = %91, %103
  %100 = phi i64* [ %104, %103 ], [ %93, %91 ]
  %101 = load i64, i64* %100, align 8
  %102 = icmp eq i64 %101, %89
  br i1 %102, label %106, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds i64, i64* %100, i64 1
  %105 = icmp ult i64* %104, %97
  br i1 %105, label %99, label %274

106:                                              ; preds = %99
  %107 = ptrtoint i64* %100 to i64
  %108 = ptrtoint i64* %93 to i64
  %109 = sub i64 %107, %108
  %110 = lshr exact i64 %109, 3
  %111 = trunc i64 %110 to i32
  %112 = icmp ne i32 %111, -1
  br label %274

113:                                              ; preds = %81
  %114 = icmp eq i64 %54, %1
  br i1 %114, label %115, label %166

115:                                              ; preds = %113
  %116 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %117 = icmp eq %"class.WTF::Vector"* %116, null
  br i1 %117, label %140, label %118

118:                                              ; preds = %115
  %119 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %116, i64 0, i32 0, i32 0, i32 0
  %120 = load i64*, i64** %119, align 8
  %121 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %116, i64 0, i32 0, i32 0, i32 2
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds i64, i64* %120, i64 %123
  %125 = icmp eq i32 %122, 0
  br i1 %125, label %140, label %126

126:                                              ; preds = %118, %130
  %127 = phi i64* [ %131, %130 ], [ %120, %118 ]
  %128 = load i64, i64* %127, align 8
  %129 = icmp eq i64 %128, %1
  br i1 %129, label %133, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds i64, i64* %127, i64 1
  %132 = icmp ult i64* %131, %124
  br i1 %132, label %126, label %140

133:                                              ; preds = %126
  %134 = ptrtoint i64* %127 to i64
  %135 = ptrtoint i64* %120 to i64
  %136 = sub i64 %134, %135
  %137 = lshr exact i64 %136, 3
  %138 = trunc i64 %137 to i32
  %139 = icmp eq i32 %138, -1
  br i1 %139, label %140, label %274

140:                                              ; preds = %130, %133, %118, %115
  %141 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 1
  %142 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %141, align 8
  %143 = icmp eq %"class.WTF::Vector"* %142, null
  br i1 %143, label %274, label %144

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %142, i64 0, i32 0, i32 0, i32 0
  %146 = load i64*, i64** %145, align 8
  %147 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %142, i64 0, i32 0, i32 0, i32 2
  %148 = load i32, i32* %147, align 4
  %149 = zext i32 %148 to i64
  %150 = getelementptr inbounds i64, i64* %146, i64 %149
  %151 = icmp eq i32 %148, 0
  br i1 %151, label %274, label %152

152:                                              ; preds = %144, %156
  %153 = phi i64* [ %157, %156 ], [ %146, %144 ]
  %154 = load i64, i64* %153, align 8
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %159, label %156

156:                                              ; preds = %152
  %157 = getelementptr inbounds i64, i64* %153, i64 1
  %158 = icmp ult i64* %157, %150
  br i1 %158, label %152, label %274

159:                                              ; preds = %152
  %160 = ptrtoint i64* %153 to i64
  %161 = ptrtoint i64* %146 to i64
  %162 = sub i64 %160, %161
  %163 = lshr exact i64 %162, 3
  %164 = trunc i64 %163 to i32
  %165 = icmp ne i32 %164, -1
  br label %274

166:                                              ; preds = %113
  %167 = icmp eq i64 %84, %1
  br i1 %167, label %168, label %220

168:                                              ; preds = %166
  %169 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 1
  %170 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %169, align 8
  %171 = icmp eq %"class.WTF::Vector"* %170, null
  br i1 %171, label %194, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %170, i64 0, i32 0, i32 0, i32 0
  %174 = load i64*, i64** %173, align 8
  %175 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %170, i64 0, i32 0, i32 0, i32 2
  %176 = load i32, i32* %175, align 4
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds i64, i64* %174, i64 %177
  %179 = icmp eq i32 %176, 0
  br i1 %179, label %194, label %180

180:                                              ; preds = %172, %184
  %181 = phi i64* [ %185, %184 ], [ %174, %172 ]
  %182 = load i64, i64* %181, align 8
  %183 = icmp eq i64 %182, %50
  br i1 %183, label %187, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds i64, i64* %181, i64 1
  %186 = icmp ult i64* %185, %178
  br i1 %186, label %180, label %194

187:                                              ; preds = %180
  %188 = ptrtoint i64* %181 to i64
  %189 = ptrtoint i64* %174 to i64
  %190 = sub i64 %188, %189
  %191 = lshr exact i64 %190, 3
  %192 = trunc i64 %191 to i32
  %193 = icmp eq i32 %192, -1
  br i1 %193, label %194, label %274

194:                                              ; preds = %184, %187, %172, %168
  %195 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %4, align 8
  %196 = add i64 %54, 1
  %197 = icmp eq %"class.WTF::Vector"* %195, null
  br i1 %197, label %274, label %198

198:                                              ; preds = %194
  %199 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %195, i64 0, i32 0, i32 0, i32 0
  %200 = load i64*, i64** %199, align 8
  %201 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %195, i64 0, i32 0, i32 0, i32 2
  %202 = load i32, i32* %201, align 4
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds i64, i64* %200, i64 %203
  %205 = icmp eq i32 %202, 0
  br i1 %205, label %274, label %206

206:                                              ; preds = %198, %210
  %207 = phi i64* [ %211, %210 ], [ %200, %198 ]
  %208 = load i64, i64* %207, align 8
  %209 = icmp eq i64 %208, %196
  br i1 %209, label %213, label %210

210:                                              ; preds = %206
  %211 = getelementptr inbounds i64, i64* %207, i64 1
  %212 = icmp ult i64* %211, %204
  br i1 %212, label %206, label %274

213:                                              ; preds = %206
  %214 = ptrtoint i64* %207 to i64
  %215 = ptrtoint i64* %200 to i64
  %216 = sub i64 %214, %215
  %217 = lshr exact i64 %216, 3
  %218 = trunc i64 %217 to i32
  %219 = icmp ne i32 %218, -1
  br label %274

220:                                              ; preds = %166
  %221 = sub i64 %1, %54
  %222 = urem i64 %221, %50
  %223 = icmp eq i64 %222, 0
  %224 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 1
  %225 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %224, align 8
  br i1 %223, label %226, label %250

226:                                              ; preds = %220
  %227 = icmp eq %"class.WTF::Vector"* %225, null
  br i1 %227, label %274, label %228

228:                                              ; preds = %226
  %229 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %225, i64 0, i32 0, i32 0, i32 0
  %230 = load i64*, i64** %229, align 8
  %231 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %225, i64 0, i32 0, i32 0, i32 2
  %232 = load i32, i32* %231, align 4
  %233 = zext i32 %232 to i64
  %234 = getelementptr inbounds i64, i64* %230, i64 %233
  %235 = icmp eq i32 %232, 0
  br i1 %235, label %252, label %236

236:                                              ; preds = %228, %240
  %237 = phi i64* [ %241, %240 ], [ %230, %228 ]
  %238 = load i64, i64* %237, align 8
  %239 = icmp eq i64 %238, %50
  br i1 %239, label %243, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds i64, i64* %237, i64 1
  %242 = icmp ult i64* %241, %234
  br i1 %242, label %236, label %250

243:                                              ; preds = %236
  %244 = ptrtoint i64* %237 to i64
  %245 = ptrtoint i64* %230 to i64
  %246 = sub i64 %244, %245
  %247 = lshr exact i64 %246, 3
  %248 = trunc i64 %247 to i32
  %249 = icmp eq i32 %248, -1
  br i1 %249, label %250, label %274

250:                                              ; preds = %240, %220, %243
  %251 = icmp eq %"class.WTF::Vector"* %225, null
  br i1 %251, label %274, label %252

252:                                              ; preds = %228, %250
  %253 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %225, i64 0, i32 0, i32 0, i32 0
  %254 = load i64*, i64** %253, align 8
  %255 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %225, i64 0, i32 0, i32 0, i32 2
  %256 = load i32, i32* %255, align 4
  %257 = zext i32 %256 to i64
  %258 = getelementptr inbounds i64, i64* %254, i64 %257
  %259 = icmp eq i32 %256, 0
  br i1 %259, label %274, label %260

260:                                              ; preds = %252, %264
  %261 = phi i64* [ %265, %264 ], [ %254, %252 ]
  %262 = load i64, i64* %261, align 8
  %263 = icmp eq i64 %262, %222
  br i1 %263, label %267, label %264

264:                                              ; preds = %260
  %265 = getelementptr inbounds i64, i64* %261, i64 1
  %266 = icmp ult i64* %265, %258
  br i1 %266, label %260, label %274

267:                                              ; preds = %260
  %268 = ptrtoint i64* %261 to i64
  %269 = ptrtoint i64* %254 to i64
  %270 = sub i64 %268, %269
  %271 = lshr exact i64 %270, 3
  %272 = trunc i64 %271 to i32
  %273 = icmp ne i32 %272, -1
  br label %274

274:                                              ; preds = %264, %210, %156, %103, %71, %226, %41, %133, %187, %243, %267, %252, %250, %213, %198, %194, %159, %144, %140, %106, %91, %86, %74, %59, %56, %18
  %275 = phi i1 [ false, %18 ], [ true, %41 ], [ true, %133 ], [ true, %187 ], [ true, %243 ], [ false, %56 ], [ %80, %74 ], [ false, %59 ], [ false, %86 ], [ %112, %106 ], [ false, %91 ], [ false, %140 ], [ %165, %159 ], [ false, %144 ], [ false, %194 ], [ %219, %213 ], [ false, %198 ], [ false, %250 ], [ %273, %267 ], [ false, %252 ], [ false, %226 ], [ false, %71 ], [ false, %103 ], [ false, %156 ], [ false, %210 ], [ false, %264 ]
  ret i1 %275
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink19NamedLineCollection21FirstExplicitPositionEv(%"class.blink::NamedLineCollection"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 6
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 0
  %7 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %6, align 8
  %8 = icmp eq %"class.WTF::Vector"* %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %5
  %10 = tail call dereferenceable(8) i64* @_ZNK3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %7, i32 0)
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 3
  %13 = load i64, i64* %12, align 8
  %14 = icmp ugt i64 %11, %13
  br i1 %14, label %20, label %15

15:                                               ; preds = %9, %1
  %16 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 0
  %17 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %16, align 8
  %18 = tail call dereferenceable(8) i64* @_ZNK3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %17, i32 0)
  %19 = load i64, i64* %18, align 8
  br label %38

20:                                               ; preds = %9, %5
  %21 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 1
  %22 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %21, align 8
  %23 = icmp eq %"class.WTF::Vector"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %20
  %25 = tail call dereferenceable(8) i64* @_ZNK3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %22, i32 0)
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 3
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, %26
  br label %38

30:                                               ; preds = %20
  %31 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %6, align 8
  %32 = tail call dereferenceable(8) i64* @_ZNK3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %31, i32 0)
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 5
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %33, -1
  %37 = add i64 %36, %35
  br label %38

38:                                               ; preds = %30, %24, %15
  %39 = phi i64 [ %19, %15 ], [ %29, %24 ], [ %37, %30 ]
  ret i64 %39
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) i64* @_ZNK3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i64, i64* %24, i64 %25
  ret i64* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink19NamedLineCollection13FirstPositionEv(%"class.blink::NamedLineCollection"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 0
  %4 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %3, align 8
  %5 = icmp eq %"class.WTF::Vector"* %4, null
  br i1 %5, label %6, label %17

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 1
  %8 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %7, align 8
  %9 = icmp eq %"class.WTF::Vector"* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 2
  %12 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %11, align 8
  %13 = icmp eq %"class.WTF::Vector"* %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %10
  %15 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 141, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0)) #8
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  br label %17

17:                                               ; preds = %10, %1, %6, %14
  %18 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 2
  %19 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %18, align 8
  %20 = icmp eq %"class.WTF::Vector"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = call i64 @_ZN5blink19NamedLineCollection21FirstExplicitPositionEv(%"class.blink::NamedLineCollection"* %0)
  br label %40

23:                                               ; preds = %17
  %24 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %3, align 8
  %25 = icmp eq %"class.WTF::Vector"* %24, null
  br i1 %25, label %26, label %33

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %0, i64 0, i32 1
  %28 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %27, align 8
  %29 = icmp eq %"class.WTF::Vector"* %28, null
  br i1 %29, label %30, label %33

30:                                               ; preds = %26
  %31 = call dereferenceable(8) i64* @_ZNK3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* nonnull %19, i32 0)
  %32 = load i64, i64* %31, align 8
  br label %40

33:                                               ; preds = %26, %23
  %34 = call i64 @_ZN5blink19NamedLineCollection21FirstExplicitPositionEv(%"class.blink::NamedLineCollection"* %0)
  %35 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %18, align 8
  %36 = call dereferenceable(8) i64* @_ZNK3WTF6VectorImLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %35, i32 0)
  %37 = load i64, i64* %36, align 8
  %38 = icmp ult i64 %37, %34
  %39 = select i1 %38, i64 %37, i64 %34
  br label %40

40:                                               ; preds = %33, %30, %21
  %41 = phi i64 [ %39, %33 ], [ %32, %30 ], [ %22, %21 ]
  ret i64 %41
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink21GridPositionsResolver19InitialPositionSideENS_24GridTrackSizingDirectionE(i32) local_unnamed_addr #5 align 2 {
  %2 = icmp eq i32 %0, 0
  %3 = select i1 %2, i32 0, i32 2
  ret i32 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink21GridPositionsResolver17FinalPositionSideENS_24GridTrackSizingDirectionE(i32) local_unnamed_addr #5 align 2 {
  %2 = icmp eq i32 %0, 0
  %3 = select i1 %2, i32 1, i32 3
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink21GridPositionsResolver23ExplicitGridColumnCountERKNS_13ComputedStyleEm(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %8, i64 0, i32 3
  %10 = tail call dereferenceable(16) %"class.WTF::Vector.412"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"* %9) #8
  %11 = getelementptr inbounds %"class.WTF::Vector.412", %"class.WTF::Vector.412"* %10, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = add i64 %13, %1
  %15 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %17, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %19, i64 0, i32 16
  %21 = load i64, i64* %20, align 8
  %22 = icmp ult i64 %14, %21
  %23 = select i1 %22, i64 %21, i64 %14
  %24 = icmp ult i64 %23, 1000
  %25 = select i1 %24, i64 %23, i64 1000
  ret i64 %25
}

declare dereferenceable(16) %"class.WTF::Vector.412"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink21GridPositionsResolver20ExplicitGridRowCountERKNS_13ComputedStyleEm(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %8, i64 0, i32 4
  %10 = tail call dereferenceable(16) %"class.WTF::Vector.412"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"* %9) #8
  %11 = getelementptr inbounds %"class.WTF::Vector.412", %"class.WTF::Vector.412"* %10, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = add i64 %13, %1
  %15 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %17, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %19, i64 0, i32 15
  %21 = load i64, i64* %20, align 8
  %22 = icmp ult i64 %14, %21
  %23 = select i1 %22, i64 %21, i64 %14
  %24 = icmp ult i64 %23, 1000
  %25 = select i1 %24, i64 %23, i64 1000
  ret i64 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink21GridPositionsResolver25SpanSizeForAutoPlacedItemERKNS_13ComputedStyleENS_24GridTrackSizingDirectionE(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::GridPosition", align 8
  %4 = alloca %"class.blink::GridPosition", align 8
  %5 = bitcast %"class.blink::GridPosition"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #8
  %8 = bitcast %"class.blink::GridPosition"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %4, i64 0, i32 0
  %10 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #8
  call fastcc void @_ZN5blinkL33InitialAndFinalPositionsFromStyleERKNS_13ComputedStyleENS_24GridTrackSizingDirectionERNS_12GridPositionES5_(%"class.blink::ComputedStyle"* dereferenceable(104) %0, i32 %1, %"class.blink::GridPosition"* nonnull dereferenceable(16) %3, %"class.blink::GridPosition"* nonnull dereferenceable(16) %4)
  %11 = load i32, i32* %6, align 8
  %12 = load i32, i32* %9, align 8
  %13 = or i32 %12, %11
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %55, label %15

15:                                               ; preds = %2
  %16 = icmp eq i32 %11, 2
  %17 = select i1 %16, %"class.blink::GridPosition"* %3, %"class.blink::GridPosition"* %4
  %18 = bitcast %"class.blink::GridPosition"* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %17, i64 0, i32 2, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %40, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %42

30:                                               ; preds = %23
  %31 = zext i32 %29 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #8
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !2

37:                                               ; preds = %30
  tail call void @llvm.trap() #8
  unreachable

38:                                               ; preds = %30
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %28, align 4
  br label %42

40:                                               ; preds = %15
  %41 = ashr i64 %19, 32
  br label %55

42:                                               ; preds = %23, %38
  %43 = phi i32 [ %39, %38 ], [ %29, %23 ]
  %44 = ashr i64 %19, 32
  %45 = load atomic i32, i32* %24 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %50 = add i32 %43, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %42
  %52 = phi i32 [ %50, %48 ], [ %43, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #8
  br label %55

55:                                               ; preds = %2, %54, %51, %40
  %56 = phi i64 [ %41, %40 ], [ %44, %51 ], [ %44, %54 ], [ 1, %2 ]
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #8
  br label %72

72:                                               ; preds = %55, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #8
  br label %88

88:                                               ; preds = %72, %84, %87
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #8
  ret i64 %56
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL33InitialAndFinalPositionsFromStyleERKNS_13ComputedStyleENS_24GridTrackSizingDirectionERNS_12GridPositionES5_(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), i32, %"class.blink::GridPosition"* nocapture dereferenceable(16), %"class.blink::GridPosition"* nocapture dereferenceable(16)) unnamed_addr #0 {
  %5 = icmp eq i32 %1, 0
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %11, i64 0, i32 6
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %11, i64 0, i32 8
  %14 = select i1 %5, %"class.blink::GridPosition"* %12, %"class.blink::GridPosition"* %13
  %15 = bitcast %"class.blink::GridPosition"* %14 to i64*
  %16 = bitcast %"class.blink::GridPosition"* %2 to i64*
  %17 = load i64, i64* %15, align 8
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %2, i64 0, i32 2
  %19 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %14, i64 0, i32 2, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %39, label %22

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i33
  %31 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %30, i33 1) #8
  %32 = extractvalue { i33, i1 } %31, 1
  %33 = extractvalue { i33, i1 } %31, 0
  %34 = icmp slt i33 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %37, !prof !2

36:                                               ; preds = %27
  tail call void @llvm.trap() #8
  unreachable

37:                                               ; preds = %27
  %38 = trunc i33 %33 to i32
  store i32 %38, i32* %28, align 4
  br label %39

39:                                               ; preds = %37, %22, %4
  %40 = ptrtoint %"class.WTF::StringImpl"* %20 to i64
  %41 = bitcast %"class.WTF::AtomicString"* %18 to i64*
  %42 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %18, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  store i64 %40, i64* %41, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #8
  br label %58

58:                                               ; preds = %39, %54, %57
  %59 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %6, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %59, i64 0, i32 2, i32 0, i32 0
  %61 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %61, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %63, i64 0, i32 5
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %63, i64 0, i32 7
  %66 = select i1 %5, %"class.blink::GridPosition"* %64, %"class.blink::GridPosition"* %65
  %67 = bitcast %"class.blink::GridPosition"* %66 to i64*
  %68 = bitcast %"class.blink::GridPosition"* %3 to i64*
  %69 = load i64, i64* %67, align 8
  store i64 %69, i64* %68, align 8
  %70 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %3, i64 0, i32 2
  %71 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %66, i64 0, i32 2, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %91, label %74

74:                                               ; preds = %58
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i33
  %83 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #8
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !2

88:                                               ; preds = %79
  tail call void @llvm.trap() #8
  unreachable

89:                                               ; preds = %79
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %80, align 4
  br label %91

91:                                               ; preds = %89, %74, %58
  %92 = ptrtoint %"class.WTF::StringImpl"* %72 to i64
  %93 = bitcast %"class.WTF::AtomicString"* %70 to i64*
  %94 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %70, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  store i64 %92, i64* %93, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %110, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %110

109:                                              ; preds = %106
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #8
  br label %110

110:                                              ; preds = %91, %106, %109
  %111 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %2, i64 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp eq i32 %112, 2
  br i1 %113, label %114, label %121

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %3, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = icmp eq i32 %116, 2
  br i1 %117, label %118, label %201

118:                                              ; preds = %114
  store i32 0, i32* %115, align 8
  %119 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %3, i64 0, i32 1
  store i32 0, i32* %119, align 4
  %120 = load i32, i32* %111, align 8
  br label %121

121:                                              ; preds = %118, %110
  %122 = phi i32 [ %112, %110 ], [ %120, %118 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %201

124:                                              ; preds = %121
  %125 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %3, i64 0, i32 0
  %126 = load i32, i32* %125, align 8
  %127 = icmp eq i32 %126, 2
  br i1 %127, label %128, label %201

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %201, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %149

139:                                              ; preds = %132
  %140 = zext i32 %138 to i33
  %141 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %140, i33 1) #8
  %142 = extractvalue { i33, i1 } %141, 1
  %143 = extractvalue { i33, i1 } %141, 0
  %144 = icmp slt i33 %143, 0
  %145 = or i1 %142, %144
  br i1 %145, label %146, label %147, !prof !2

146:                                              ; preds = %139
  tail call void @llvm.trap() #8
  unreachable

147:                                              ; preds = %139
  %148 = trunc i33 %143 to i32
  store i32 %148, i32* %137, align 4
  br label %149

149:                                              ; preds = %132, %147
  %150 = phi i32 [ %148, %147 ], [ %138, %132 ]
  %151 = load atomic i32, i32* %133 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %157

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %156 = add i32 %150, -1
  store i32 %156, i32* %155, align 4
  br label %157

157:                                              ; preds = %154, %149
  %158 = phi i32 [ %156, %154 ], [ %150, %149 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #8
  br label %161

161:                                              ; preds = %157, %160
  %162 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  store i32 2, i32* %125, align 8
  %163 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %3, i64 0, i32 1
  store i32 1, i32* %163, align 4
  %164 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %162, i64 0, i32 0, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %184, label %167

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %184

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = zext i32 %174 to i33
  %176 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %175, i33 1) #8
  %177 = extractvalue { i33, i1 } %176, 1
  %178 = extractvalue { i33, i1 } %176, 0
  %179 = icmp slt i33 %178, 0
  %180 = or i1 %177, %179
  br i1 %180, label %181, label %182, !prof !2

181:                                              ; preds = %172
  tail call void @llvm.trap() #8
  unreachable

182:                                              ; preds = %172
  %183 = trunc i33 %178 to i32
  store i32 %183, i32* %173, align 4
  br label %184

184:                                              ; preds = %182, %167, %161
  %185 = ptrtoint %"class.WTF::StringImpl"* %165 to i64
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  store i64 %185, i64* %93, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %187, label %201, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  br i1 %192, label %195, label %197

195:                                              ; preds = %188
  %196 = add i32 %194, -1
  store i32 %196, i32* %193, align 4
  br label %197

197:                                              ; preds = %195, %188
  %198 = phi i32 [ %196, %195 ], [ %194, %188 ]
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %186) #8
  br label %201

201:                                              ; preds = %114, %128, %124, %121, %200, %197, %184
  %202 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %3, i64 0, i32 0
  %203 = load i32, i32* %202, align 8
  %204 = icmp eq i32 %203, 0
  %205 = load i32, i32* %111, align 8
  %206 = icmp eq i32 %205, 2
  %207 = and i1 %204, %206
  br i1 %207, label %208, label %281

208:                                              ; preds = %201
  %209 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %209, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %211, label %281, label %212

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = and i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 0
  %218 = load i32, i32* %217, align 4
  br i1 %216, label %219, label %229

219:                                              ; preds = %212
  %220 = zext i32 %218 to i33
  %221 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %220, i33 1) #8
  %222 = extractvalue { i33, i1 } %221, 1
  %223 = extractvalue { i33, i1 } %221, 0
  %224 = icmp slt i33 %223, 0
  %225 = or i1 %222, %224
  br i1 %225, label %226, label %227, !prof !2

226:                                              ; preds = %219
  tail call void @llvm.trap() #8
  unreachable

227:                                              ; preds = %219
  %228 = trunc i33 %223 to i32
  store i32 %228, i32* %217, align 4
  br label %229

229:                                              ; preds = %212, %227
  %230 = phi i32 [ %228, %227 ], [ %218, %212 ]
  %231 = load atomic i32, i32* %213 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %237

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 0
  %236 = add i32 %230, -1
  store i32 %236, i32* %235, align 4
  br label %237

237:                                              ; preds = %234, %229
  %238 = phi i32 [ %236, %234 ], [ %230, %229 ]
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %237
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %210) #8
  br label %241

241:                                              ; preds = %237, %240
  %242 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  store i32 2, i32* %111, align 8
  %243 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %2, i64 0, i32 1
  store i32 1, i32* %243, align 4
  %244 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %242, i64 0, i32 0, i32 0, i32 0
  %245 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %244, align 8
  %246 = icmp eq %"class.WTF::StringImpl"* %245, null
  br i1 %246, label %264, label %247

247:                                              ; preds = %241
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load atomic i32, i32* %248 monotonic, align 4
  %250 = and i32 %249, 2
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %264

252:                                              ; preds = %247
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  %255 = zext i32 %254 to i33
  %256 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %255, i33 1) #8
  %257 = extractvalue { i33, i1 } %256, 1
  %258 = extractvalue { i33, i1 } %256, 0
  %259 = icmp slt i33 %258, 0
  %260 = or i1 %257, %259
  br i1 %260, label %261, label %262, !prof !2

261:                                              ; preds = %252
  tail call void @llvm.trap() #8
  unreachable

262:                                              ; preds = %252
  %263 = trunc i33 %258 to i32
  store i32 %263, i32* %253, align 4
  br label %264

264:                                              ; preds = %262, %247, %241
  %265 = ptrtoint %"class.WTF::StringImpl"* %245 to i64
  %266 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  store i64 %265, i64* %41, align 8
  %267 = icmp eq %"class.WTF::StringImpl"* %266, null
  br i1 %267, label %281, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %266, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = load atomic i32, i32* %269 monotonic, align 4
  %271 = and i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %266, i64 0, i32 0
  %274 = load i32, i32* %273, align 4
  br i1 %272, label %275, label %277

275:                                              ; preds = %268
  %276 = add i32 %274, -1
  store i32 %276, i32* %273, align 4
  br label %277

277:                                              ; preds = %275, %268
  %278 = phi i32 [ %276, %275 ], [ %274, %268 ]
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %280, label %281

280:                                              ; preds = %277
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %266) #8
  br label %281

281:                                              ; preds = %208, %201, %280, %277, %264
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN5blink21GridPositionsResolver29ResolveGridPositionsFromStyleERKNS_13ComputedStyleES3_NS_24GridTrackSizingDirectionEm(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), i32, i64) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::GridPosition", align 8
  %6 = alloca %"class.blink::GridPosition", align 8
  %7 = bitcast %"class.blink::GridPosition"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %5, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #8
  %10 = bitcast %"class.blink::GridPosition"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %6, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 16, i1 false) #8
  call fastcc void @_ZN5blinkL33InitialAndFinalPositionsFromStyleERKNS_13ComputedStyleENS_24GridTrackSizingDirectionERNS_12GridPositionES5_(%"class.blink::ComputedStyle"* dereferenceable(104) %1, i32 %2, %"class.blink::GridPosition"* nonnull dereferenceable(16) %5, %"class.blink::GridPosition"* nonnull dereferenceable(16) %6)
  %13 = icmp eq i32 %2, 0
  %14 = select i1 %13, i32 0, i32 2
  %15 = select i1 %13, i32 1, i32 3
  %16 = load i32, i32* %8, align 8
  %17 = and i32 %16, -3
  %18 = icmp eq i32 %17, 0
  %19 = load i32, i32* %11, align 8
  %20 = and i32 %19, -3
  %21 = icmp eq i32 %20, 0
  br i1 %18, label %22, label %28

22:                                               ; preds = %4
  br i1 %21, label %56, label %23

23:                                               ; preds = %22
  %24 = call fastcc i32 @_ZN5blinkL28ResolveGridPositionFromStyleERKNS_13ComputedStyleERKNS_12GridPositionENS_16GridPositionSideEm(%"class.blink::ComputedStyle"* dereferenceable(104) %0, %"class.blink::GridPosition"* nonnull dereferenceable(16) %6, i32 %15, i64 %3)
  %25 = call fastcc { i64, i32 } @_ZN5blinkL42ResolveGridPositionAgainstOppositePositionERKNS_13ComputedStyleEiRKNS_12GridPositionENS_16GridPositionSideEm(%"class.blink::ComputedStyle"* dereferenceable(104) %0, i32 %24, %"class.blink::GridPosition"* nonnull dereferenceable(16) %5, i32 %14, i64 %3)
  %26 = extractvalue { i64, i32 } %25, 0
  %27 = extractvalue { i64, i32 } %25, 1
  br label %56

28:                                               ; preds = %4
  %29 = call fastcc i32 @_ZN5blinkL28ResolveGridPositionFromStyleERKNS_13ComputedStyleERKNS_12GridPositionENS_16GridPositionSideEm(%"class.blink::ComputedStyle"* dereferenceable(104) %0, %"class.blink::GridPosition"* nonnull dereferenceable(16) %5, i32 %14, i64 %3)
  br i1 %21, label %30, label %34

30:                                               ; preds = %28
  %31 = call fastcc { i64, i32 } @_ZN5blinkL42ResolveGridPositionAgainstOppositePositionERKNS_13ComputedStyleEiRKNS_12GridPositionENS_16GridPositionSideEm(%"class.blink::ComputedStyle"* dereferenceable(104) %0, i32 %29, %"class.blink::GridPosition"* nonnull dereferenceable(16) %6, i32 %15, i64 %3)
  %32 = extractvalue { i64, i32 } %31, 0
  %33 = extractvalue { i64, i32 } %31, 1
  br label %56

34:                                               ; preds = %28
  %35 = call fastcc i32 @_ZN5blinkL28ResolveGridPositionFromStyleERKNS_13ComputedStyleERKNS_12GridPositionENS_16GridPositionSideEm(%"class.blink::ComputedStyle"* dereferenceable(104) %0, %"class.blink::GridPosition"* nonnull dereferenceable(16) %6, i32 %15, i64 %3)
  %36 = icmp slt i32 %35, %29
  br i1 %36, label %41, label %37

37:                                               ; preds = %34
  %38 = icmp eq i32 %35, %29
  %39 = add nsw i32 %29, 1
  %40 = select i1 %38, i32 %39, i32 %35
  br label %41

41:                                               ; preds = %37, %34
  %42 = phi i32 [ %35, %34 ], [ %29, %37 ]
  %43 = phi i32 [ %29, %34 ], [ %40, %37 ]
  %44 = icmp sgt i32 %42, -1000
  %45 = select i1 %44, i32 %42, i32 -1000
  %46 = icmp slt i32 %45, 999
  %47 = select i1 %46, i32 %45, i32 999
  %48 = icmp sgt i32 %43, -999
  %49 = select i1 %48, i32 %43, i32 -999
  %50 = icmp slt i32 %49, 1000
  %51 = select i1 %50, i32 %49, i32 1000
  %52 = zext i32 %51 to i64
  %53 = shl nuw i64 %52, 32
  %54 = zext i32 %47 to i64
  %55 = or i64 %53, %54
  br label %56

56:                                               ; preds = %22, %41, %30, %23
  %57 = phi i64 [ %26, %23 ], [ %32, %30 ], [ %55, %41 ], [ 4294967296, %22 ]
  %58 = phi i32 [ %27, %23 ], [ %33, %30 ], [ 0, %41 ], [ 2, %22 ]
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #8
  br label %74

74:                                               ; preds = %56, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #8
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #8
  br label %90

90:                                               ; preds = %74, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  %91 = insertvalue { i64, i32 } undef, i64 %57, 0
  %92 = insertvalue { i64, i32 } %91, i32 %58, 1
  ret { i64, i32 } %92
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5blinkL28ResolveGridPositionFromStyleERKNS_13ComputedStyleERKNS_12GridPositionENS_16GridPositionSideEm(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), %"class.blink::GridPosition"* nocapture readonly dereferenceable(16), i32, i64) unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = alloca %"class.blink::NamedLineCollection", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::NamedLineCollection", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.blink::NamedLineCollection", align 8
  %12 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  switch i32 %13, label %501 [
    i32 1, label %14
    i32 3, label %262
  ]

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %209, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %35

25:                                               ; preds = %18
  %26 = zext i32 %24 to i33
  %27 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %26, i33 1) #8
  %28 = extractvalue { i33, i1 } %27, 1
  %29 = extractvalue { i33, i1 } %27, 0
  %30 = icmp slt i33 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %33, !prof !2

32:                                               ; preds = %25
  tail call void @llvm.trap() #8
  unreachable

33:                                               ; preds = %25
  %34 = trunc i33 %29 to i32
  store i32 %34, i32* %23, align 4
  br label %35

35:                                               ; preds = %18, %33
  %36 = phi i32 [ %34, %33 ], [ %24, %18 ]
  %37 = load atomic i32, i32* %19 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %42 = add i32 %36, -1
  store i32 %42, i32* %41, align 4
  br label %43

43:                                               ; preds = %40, %35
  %44 = phi i32 [ %42, %40 ], [ %36, %35 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #8
  br label %47

47:                                               ; preds = %43, %46
  %48 = icmp ult i32 %2, 2
  %49 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %50 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %50, i64 0, i32 2, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %52, i64 0, i32 2, i32 0, i32 0
  %54 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %53, align 8
  br i1 %48, label %55, label %71

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %54, i64 0, i32 3
  %57 = tail call dereferenceable(16) %"class.WTF::Vector.412"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"* %56) #8
  %58 = getelementptr inbounds %"class.WTF::Vector.412", %"class.WTF::Vector.412"* %57, i64 0, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  %61 = add i64 %60, %3
  %62 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %49, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %62, i64 0, i32 3, i32 0, i32 0
  %64 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %64, i64 0, i32 3, i32 0, i32 0
  %66 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %66, i64 0, i32 16
  %68 = load i64, i64* %67, align 8
  %69 = icmp ult i64 %61, %68
  %70 = select i1 %69, i64 %68, i64 %61
  br label %87

71:                                               ; preds = %47
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %54, i64 0, i32 4
  %73 = tail call dereferenceable(16) %"class.WTF::Vector.412"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"* %72) #8
  %74 = getelementptr inbounds %"class.WTF::Vector.412", %"class.WTF::Vector.412"* %73, i64 0, i32 0, i32 0, i32 2
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i64
  %77 = add i64 %76, %3
  %78 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %49, align 8
  %79 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %78, i64 0, i32 3, i32 0, i32 0
  %80 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %80, i64 0, i32 3, i32 0, i32 0
  %82 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %82, i64 0, i32 15
  %84 = load i64, i64* %83, align 8
  %85 = icmp ult i64 %77, %84
  %86 = select i1 %85, i64 %84, i64 %77
  br label %87

87:                                               ; preds = %71, %55
  %88 = phi i64 [ %86, %71 ], [ %70, %55 ]
  %89 = icmp ult i64 %88, 1000
  %90 = select i1 %89, i64 %88, i64 1000
  %91 = bitcast %"class.blink::NamedLineCollection"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %91) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 56, i1 false) #8
  %92 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #8
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %112, label %95

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %112

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i33
  %104 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #8
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !2

109:                                              ; preds = %100
  tail call void @llvm.trap() #8
  unreachable

110:                                              ; preds = %100
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %101, align 4
  br label %112

112:                                              ; preds = %110, %95, %87
  %113 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %93, %"class.WTF::StringImpl"** %113, align 8
  %114 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0
  %115 = icmp ugt i32 %2, 1
  %116 = zext i1 %115 to i32
  call void @_ZN5blink19NamedLineCollectionC2ERKNS_13ComputedStyleERKN3WTF6StringENS_24GridTrackSizingDirectionEmm(%"class.blink::NamedLineCollection"* nonnull %6, %"class.blink::ComputedStyle"* dereferenceable(104) %0, %"class.WTF::String"* nonnull dereferenceable(8) %114, i32 %116, i64 %90, i64 %3) #8
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #8
  br label %132

132:                                              ; preds = %131, %128, %112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #8
  %133 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %1, i64 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = icmp sgt i32 %134, 0
  br i1 %135, label %136, label %169

136:                                              ; preds = %132
  %137 = zext i32 %134 to i64
  %138 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %6, i64 0, i32 0
  %139 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %138, align 8
  %140 = icmp eq %"class.WTF::Vector"* %139, null
  br i1 %140, label %142, label %141

141:                                              ; preds = %146, %142, %136
  br label %153

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %6, i64 0, i32 1
  %144 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %143, align 8
  %145 = icmp eq %"class.WTF::Vector"* %144, null
  br i1 %145, label %146, label %141

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %6, i64 0, i32 2
  %148 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %147, align 8
  %149 = icmp eq %"class.WTF::Vector"* %148, null
  br i1 %149, label %150, label %141

150:                                              ; preds = %146
  %151 = add nuw nsw i64 %90, 1
  %152 = add nuw nsw i64 %151, %137
  br label %165

153:                                              ; preds = %141, %161
  %154 = phi i64 [ %162, %161 ], [ %137, %141 ]
  %155 = phi i64 [ %163, %161 ], [ 0, %141 ]
  %156 = icmp ugt i64 %155, %90
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  %158 = call zeroext i1 @_ZN5blink19NamedLineCollection8ContainsEm(%"class.blink::NamedLineCollection"* nonnull %6, i64 %155) #8
  br i1 %158, label %159, label %161

159:                                              ; preds = %157, %153
  %160 = add i64 %154, -1
  br label %161

161:                                              ; preds = %159, %157
  %162 = phi i64 [ %160, %159 ], [ %154, %157 ]
  %163 = add i64 %155, 1
  %164 = icmp eq i64 %162, 0
  br i1 %164, label %165, label %153

165:                                              ; preds = %161, %150
  %166 = phi i64 [ %152, %150 ], [ %163, %161 ]
  %167 = trunc i64 %166 to i32
  %168 = add i32 %167, -1
  br label %207

169:                                              ; preds = %132
  %170 = trunc i64 %90 to i32
  %171 = icmp eq i32 %134, 0
  %172 = sub nsw i32 0, %134
  %173 = select i1 %171, i32 0, i32 %172
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %6, i64 0, i32 0
  %176 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %175, align 8
  %177 = icmp eq %"class.WTF::Vector"* %176, null
  br i1 %177, label %178, label %186

178:                                              ; preds = %169
  %179 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %6, i64 0, i32 1
  %180 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %179, align 8
  %181 = icmp eq %"class.WTF::Vector"* %180, null
  br i1 %181, label %182, label %186

182:                                              ; preds = %178
  %183 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %6, i64 0, i32 2
  %184 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %183, align 8
  %185 = icmp eq %"class.WTF::Vector"* %184, null
  br i1 %185, label %188, label %186

186:                                              ; preds = %182, %178, %169
  %187 = icmp eq i32 %173, 0
  br i1 %187, label %204, label %190

188:                                              ; preds = %182
  %189 = xor i32 %173, -1
  br label %204

190:                                              ; preds = %186, %198
  %191 = phi i64 [ %200, %198 ], [ %90, %186 ]
  %192 = phi i64 [ %199, %198 ], [ %174, %186 ]
  %193 = icmp slt i64 %191, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %190
  %195 = call zeroext i1 @_ZN5blink19NamedLineCollection8ContainsEm(%"class.blink::NamedLineCollection"* nonnull %6, i64 %191) #8
  br i1 %195, label %196, label %198

196:                                              ; preds = %194, %190
  %197 = add i64 %192, -1
  br label %198

198:                                              ; preds = %196, %194
  %199 = phi i64 [ %197, %196 ], [ %192, %194 ]
  %200 = add i64 %191, -1
  %201 = icmp eq i64 %199, 0
  br i1 %201, label %202, label %190

202:                                              ; preds = %198
  %203 = trunc i64 %200 to i32
  br label %204

204:                                              ; preds = %202, %188, %186
  %205 = phi i32 [ %189, %188 ], [ %170, %186 ], [ %203, %202 ]
  %206 = add i32 %205, 1
  br label %207

207:                                              ; preds = %165, %204
  %208 = phi i32 [ %168, %165 ], [ %206, %204 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %91) #8
  br label %501

209:                                              ; preds = %14
  %210 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %1, i64 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = icmp sgt i32 %211, 0
  br i1 %212, label %213, label %215

213:                                              ; preds = %209
  %214 = add nsw i32 %211, -1
  br label %501

215:                                              ; preds = %209
  %216 = icmp ult i32 %2, 2
  %217 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %218 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %217, align 8
  %219 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %218, i64 0, i32 2, i32 0, i32 0
  %220 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %219, align 8
  %221 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %220, i64 0, i32 2, i32 0, i32 0
  %222 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %221, align 8
  br i1 %216, label %223, label %239

223:                                              ; preds = %215
  %224 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %222, i64 0, i32 3
  %225 = tail call dereferenceable(16) %"class.WTF::Vector.412"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"* %224) #8
  %226 = getelementptr inbounds %"class.WTF::Vector.412", %"class.WTF::Vector.412"* %225, i64 0, i32 0, i32 0, i32 2
  %227 = load i32, i32* %226, align 4
  %228 = zext i32 %227 to i64
  %229 = add i64 %228, %3
  %230 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %217, align 8
  %231 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %230, i64 0, i32 3, i32 0, i32 0
  %232 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %231, align 8
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %232, i64 0, i32 3, i32 0, i32 0
  %234 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %233, align 8
  %235 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %234, i64 0, i32 16
  %236 = load i64, i64* %235, align 8
  %237 = icmp ult i64 %229, %236
  %238 = select i1 %237, i64 %236, i64 %229
  br label %255

239:                                              ; preds = %215
  %240 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %222, i64 0, i32 4
  %241 = tail call dereferenceable(16) %"class.WTF::Vector.412"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"* %240) #8
  %242 = getelementptr inbounds %"class.WTF::Vector.412", %"class.WTF::Vector.412"* %241, i64 0, i32 0, i32 0, i32 2
  %243 = load i32, i32* %242, align 4
  %244 = zext i32 %243 to i64
  %245 = add i64 %244, %3
  %246 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %217, align 8
  %247 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %246, i64 0, i32 3, i32 0, i32 0
  %248 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %247, align 8
  %249 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %248, i64 0, i32 3, i32 0, i32 0
  %250 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %249, align 8
  %251 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %250, i64 0, i32 15
  %252 = load i64, i64* %251, align 8
  %253 = icmp ult i64 %245, %252
  %254 = select i1 %253, i64 %252, i64 %245
  br label %255

255:                                              ; preds = %223, %239
  %256 = phi i64 [ %238, %223 ], [ %254, %239 ]
  %257 = icmp ult i64 %256, 1000
  %258 = select i1 %257, i64 %256, i64 1000
  %259 = trunc i64 %258 to i32
  %260 = add nsw i32 %211, 1
  %261 = add i32 %260, %259
  br label %501

262:                                              ; preds = %4
  %263 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %263) #8
  %264 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %264, align 8
  %265 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %266 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %265, align 8
  %267 = icmp eq %"class.WTF::StringImpl"* %266, null
  br i1 %267, label %301, label %268

268:                                              ; preds = %262
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %266, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %270 = load atomic i32, i32* %269 monotonic, align 4
  %271 = and i32 %270, 2
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %285

273:                                              ; preds = %268
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %266, i64 0, i32 0
  %275 = load i32, i32* %274, align 4
  %276 = zext i32 %275 to i33
  %277 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %276, i33 1) #8
  %278 = extractvalue { i33, i1 } %277, 1
  %279 = extractvalue { i33, i1 } %277, 0
  %280 = icmp slt i33 %279, 0
  %281 = or i1 %278, %280
  br i1 %281, label %282, label %283, !prof !2

282:                                              ; preds = %273
  tail call void @llvm.trap() #8
  unreachable

283:                                              ; preds = %273
  %284 = trunc i33 %279 to i32
  store i32 %284, i32* %274, align 4
  br label %285

285:                                              ; preds = %268, %283
  store %"class.WTF::StringImpl"* %266, %"class.WTF::StringImpl"** %264, align 8
  %286 = load atomic i32, i32* %269 monotonic, align 4
  %287 = and i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %266, i64 0, i32 0
  %290 = load i32, i32* %289, align 4
  br i1 %288, label %291, label %302

291:                                              ; preds = %285
  %292 = zext i32 %290 to i33
  %293 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %292, i33 1) #8
  %294 = extractvalue { i33, i1 } %293, 1
  %295 = extractvalue { i33, i1 } %293, 0
  %296 = icmp slt i33 %295, 0
  %297 = or i1 %294, %296
  br i1 %297, label %298, label %299, !prof !2

298:                                              ; preds = %291
  tail call void @llvm.trap() #8
  unreachable

299:                                              ; preds = %291
  %300 = trunc i33 %295 to i32
  store i32 %300, i32* %289, align 4
  br label %302

301:                                              ; preds = %262
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %264, align 8
  br label %314

302:                                              ; preds = %285, %299
  %303 = phi i32 [ %300, %299 ], [ %290, %285 ]
  %304 = load atomic i32, i32* %269 monotonic, align 4
  %305 = and i32 %304, 2
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %310

307:                                              ; preds = %302
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %266, i64 0, i32 0
  %309 = add i32 %303, -1
  store i32 %309, i32* %308, align 4
  br label %310

310:                                              ; preds = %307, %302
  %311 = phi i32 [ %309, %307 ], [ %303, %302 ]
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %314

313:                                              ; preds = %310
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %266) #8
  br label %314

314:                                              ; preds = %301, %310, %313
  %315 = icmp ult i32 %2, 2
  %316 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %317 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %316, align 8
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %317, i64 0, i32 2, i32 0, i32 0
  %319 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %318, align 8
  %320 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %319, i64 0, i32 2, i32 0, i32 0
  %321 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %320, align 8
  br i1 %315, label %322, label %338

322:                                              ; preds = %314
  %323 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %321, i64 0, i32 3
  %324 = tail call dereferenceable(16) %"class.WTF::Vector.412"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"* %323) #8
  %325 = getelementptr inbounds %"class.WTF::Vector.412", %"class.WTF::Vector.412"* %324, i64 0, i32 0, i32 0, i32 2
  %326 = load i32, i32* %325, align 4
  %327 = zext i32 %326 to i64
  %328 = add i64 %327, %3
  %329 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %316, align 8
  %330 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %329, i64 0, i32 3, i32 0, i32 0
  %331 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %330, align 8
  %332 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %331, i64 0, i32 3, i32 0, i32 0
  %333 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %332, align 8
  %334 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %333, i64 0, i32 16
  %335 = load i64, i64* %334, align 8
  %336 = icmp ult i64 %328, %335
  %337 = select i1 %336, i64 %335, i64 %328
  br label %354

338:                                              ; preds = %314
  %339 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %321, i64 0, i32 4
  %340 = tail call dereferenceable(16) %"class.WTF::Vector.412"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"* %339) #8
  %341 = getelementptr inbounds %"class.WTF::Vector.412", %"class.WTF::Vector.412"* %340, i64 0, i32 0, i32 0, i32 2
  %342 = load i32, i32* %341, align 4
  %343 = zext i32 %342 to i64
  %344 = add i64 %343, %3
  %345 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %316, align 8
  %346 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %345, i64 0, i32 3, i32 0, i32 0
  %347 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %346, align 8
  %348 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %347, i64 0, i32 3, i32 0, i32 0
  %349 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %348, align 8
  %350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %349, i64 0, i32 15
  %351 = load i64, i64* %350, align 8
  %352 = icmp ult i64 %344, %351
  %353 = select i1 %352, i64 %351, i64 %344
  br label %354

354:                                              ; preds = %322, %338
  %355 = phi i64 [ %337, %322 ], [ %353, %338 ]
  %356 = icmp ult i64 %355, 1000
  %357 = select i1 %356, i64 %355, i64 1000
  %358 = bitcast %"class.blink::NamedLineCollection"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %358) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %358, i8 -86, i64 56, i1 false)
  %359 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %359) #8
  %360 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %360) #8
  %361 = and i32 %2, -3
  %362 = icmp eq i32 %361, 0
  %363 = select i1 %362, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)
  %364 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %264, align 8
  %365 = icmp eq %"class.WTF::StringImpl"* %364, null
  br i1 %365, label %409, label %366

366:                                              ; preds = %354
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %364, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %368 = load atomic i32, i32* %367 monotonic, align 4
  %369 = and i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %364, i64 0, i32 0
  %372 = load i32, i32* %371, align 4
  br i1 %370, label %373, label %383

373:                                              ; preds = %366
  %374 = zext i32 %372 to i33
  %375 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %374, i33 1) #8
  %376 = extractvalue { i33, i1 } %375, 1
  %377 = extractvalue { i33, i1 } %375, 0
  %378 = icmp slt i33 %377, 0
  %379 = or i1 %376, %378
  br i1 %379, label %380, label %381, !prof !2

380:                                              ; preds = %373
  tail call void @llvm.trap() #8
  unreachable

381:                                              ; preds = %373
  %382 = trunc i33 %377 to i32
  store i32 %382, i32* %371, align 4
  br label %383

383:                                              ; preds = %381, %366
  %384 = phi i32 [ %382, %381 ], [ %372, %366 ]
  %385 = load atomic i32, i32* %367 monotonic, align 4
  %386 = and i32 %385, 2
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %398

388:                                              ; preds = %383
  %389 = zext i32 %384 to i33
  %390 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %389, i33 1) #8
  %391 = extractvalue { i33, i1 } %390, 1
  %392 = extractvalue { i33, i1 } %390, 0
  %393 = icmp slt i33 %392, 0
  %394 = or i1 %391, %393
  br i1 %394, label %395, label %396, !prof !2

395:                                              ; preds = %388
  tail call void @llvm.trap() #8
  unreachable

396:                                              ; preds = %388
  %397 = trunc i33 %392 to i32
  store i32 %397, i32* %371, align 4
  br label %398

398:                                              ; preds = %396, %383
  %399 = phi i32 [ %397, %396 ], [ %384, %383 ]
  %400 = load atomic i32, i32* %367 monotonic, align 4
  %401 = and i32 %400, 2
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %405

403:                                              ; preds = %398
  %404 = add i32 %399, -1
  store i32 %404, i32* %371, align 4
  br label %405

405:                                              ; preds = %403, %398
  %406 = phi i32 [ %404, %403 ], [ %399, %398 ]
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %408, label %409

408:                                              ; preds = %405
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %364) #8
  br label %409

409:                                              ; preds = %408, %405, %354
  %410 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %364, %"class.WTF::StringImpl"** %410, align 8
  %411 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1
  store i8* %363, i8** %411, align 8
  %412 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"* nonnull %5) #8
  %413 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %410, align 8
  %414 = icmp eq %"class.WTF::StringImpl"* %413, null
  br i1 %414, label %428, label %415

415:                                              ; preds = %409
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %417 = load atomic i32, i32* %416 monotonic, align 4
  %418 = and i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 0, i32 0
  %421 = load i32, i32* %420, align 4
  br i1 %419, label %422, label %424

422:                                              ; preds = %415
  %423 = add i32 %421, -1
  store i32 %423, i32* %420, align 4
  br label %424

424:                                              ; preds = %422, %415
  %425 = phi i32 [ %423, %422 ], [ %421, %415 ]
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %427, label %428

427:                                              ; preds = %424
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %413) #8
  br label %428

428:                                              ; preds = %409, %424, %427
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %360) #8
  %429 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %412, %"class.WTF::StringImpl"** %429, align 8
  %430 = icmp ugt i32 %2, 1
  %431 = zext i1 %430 to i32
  call void @_ZN5blink19NamedLineCollectionC2ERKNS_13ComputedStyleERKN3WTF6StringENS_24GridTrackSizingDirectionEmm(%"class.blink::NamedLineCollection"* nonnull %9, %"class.blink::ComputedStyle"* dereferenceable(104) %0, %"class.WTF::String"* nonnull dereferenceable(8) %10, i32 %431, i64 %357, i64 %3)
  %432 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %429, align 8
  %433 = icmp eq %"class.WTF::StringImpl"* %432, null
  br i1 %433, label %447, label %434

434:                                              ; preds = %428
  %435 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %432, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %436 = load atomic i32, i32* %435 monotonic, align 4
  %437 = and i32 %436, 2
  %438 = icmp eq i32 %437, 0
  %439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %432, i64 0, i32 0
  %440 = load i32, i32* %439, align 4
  br i1 %438, label %441, label %443

441:                                              ; preds = %434
  %442 = add i32 %440, -1
  store i32 %442, i32* %439, align 4
  br label %443

443:                                              ; preds = %441, %434
  %444 = phi i32 [ %442, %441 ], [ %440, %434 ]
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %446, label %447

446:                                              ; preds = %443
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %432) #8
  br label %447

447:                                              ; preds = %428, %443, %446
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %359) #8
  %448 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %9, i64 0, i32 0
  %449 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %448, align 8
  %450 = icmp eq %"class.WTF::Vector"* %449, null
  br i1 %450, label %451, label %459

451:                                              ; preds = %447
  %452 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %9, i64 0, i32 1
  %453 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %452, align 8
  %454 = icmp eq %"class.WTF::Vector"* %453, null
  br i1 %454, label %455, label %459

455:                                              ; preds = %451
  %456 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %9, i64 0, i32 2
  %457 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %456, align 8
  %458 = icmp eq %"class.WTF::Vector"* %457, null
  br i1 %458, label %462, label %459

459:                                              ; preds = %455, %447, %451
  %460 = call i64 @_ZN5blink19NamedLineCollection13FirstPositionEv(%"class.blink::NamedLineCollection"* nonnull %9)
  %461 = trunc i64 %460 to i32
  br label %483

462:                                              ; preds = %455
  %463 = bitcast %"class.blink::NamedLineCollection"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %463) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %463, i8 -86, i64 56, i1 false)
  call void @_ZN5blink19NamedLineCollectionC2ERKNS_13ComputedStyleERKN3WTF6StringENS_24GridTrackSizingDirectionEmm(%"class.blink::NamedLineCollection"* nonnull %11, %"class.blink::ComputedStyle"* dereferenceable(104) %0, %"class.WTF::String"* nonnull dereferenceable(8) %8, i32 %431, i64 %357, i64 %3)
  %464 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %11, i64 0, i32 0
  %465 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %464, align 8
  %466 = icmp eq %"class.WTF::Vector"* %465, null
  br i1 %466, label %467, label %475

467:                                              ; preds = %462
  %468 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %11, i64 0, i32 1
  %469 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %468, align 8
  %470 = icmp eq %"class.WTF::Vector"* %469, null
  br i1 %470, label %471, label %475

471:                                              ; preds = %467
  %472 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %11, i64 0, i32 2
  %473 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %472, align 8
  %474 = icmp eq %"class.WTF::Vector"* %473, null
  br i1 %474, label %478, label %475

475:                                              ; preds = %471, %462, %467
  %476 = call i64 @_ZN5blink19NamedLineCollection13FirstPositionEv(%"class.blink::NamedLineCollection"* nonnull %11)
  %477 = trunc i64 %476 to i32
  br label %481

478:                                              ; preds = %471
  %479 = trunc i64 %357 to i32
  %480 = add nuw nsw i32 %479, 1
  br label %481

481:                                              ; preds = %478, %475
  %482 = phi i32 [ %477, %475 ], [ %480, %478 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %463) #8
  br label %483

483:                                              ; preds = %481, %459
  %484 = phi i32 [ %461, %459 ], [ %482, %481 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %358) #8
  %485 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %264, align 8
  %486 = icmp eq %"class.WTF::StringImpl"* %485, null
  br i1 %486, label %500, label %487

487:                                              ; preds = %483
  %488 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %485, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %489 = load atomic i32, i32* %488 monotonic, align 4
  %490 = and i32 %489, 2
  %491 = icmp eq i32 %490, 0
  %492 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %485, i64 0, i32 0
  %493 = load i32, i32* %492, align 4
  br i1 %491, label %494, label %496

494:                                              ; preds = %487
  %495 = add i32 %493, -1
  store i32 %495, i32* %492, align 4
  br label %496

496:                                              ; preds = %494, %487
  %497 = phi i32 [ %495, %494 ], [ %493, %487 ]
  %498 = icmp eq i32 %497, 0
  br i1 %498, label %499, label %500

499:                                              ; preds = %496
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %485) #8
  br label %500

500:                                              ; preds = %483, %496, %499
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %263) #8
  br label %501

501:                                              ; preds = %4, %500, %255, %213, %207
  %502 = phi i32 [ %484, %500 ], [ %208, %207 ], [ %214, %213 ], [ %261, %255 ], [ 0, %4 ]
  ret i32 %502
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i64, i32 } @_ZN5blinkL42ResolveGridPositionAgainstOppositePositionERKNS_13ComputedStyleEiRKNS_12GridPositionENS_16GridPositionSideEm(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), i32, %"class.blink::GridPosition"* nocapture readonly dereferenceable(16), i32, i64) unnamed_addr #0 {
  %6 = alloca %"class.blink::NamedLineCollection", align 8
  %7 = alloca %"class.WTF::AtomicString", align 8
  %8 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %2, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %34

11:                                               ; preds = %5
  %12 = and i32 %3, -3
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %24

14:                                               ; preds = %11
  %15 = icmp sgt i32 %1, -999
  %16 = select i1 %15, i32 %1, i32 -999
  %17 = icmp slt i32 %16, 1000
  %18 = select i1 %17, i32 %16, i32 1000
  %19 = add nsw i32 %18, -1
  %20 = zext i32 %18 to i64
  %21 = shl nuw i64 %20, 32
  %22 = zext i32 %19 to i64
  %23 = or i64 %21, %22
  br label %289

24:                                               ; preds = %11
  %25 = icmp sgt i32 %1, -1000
  %26 = select i1 %25, i32 %1, i32 -1000
  %27 = icmp slt i32 %26, 999
  %28 = select i1 %27, i32 %26, i32 999
  %29 = add nsw i32 %28, 1
  %30 = zext i32 %29 to i64
  %31 = shl nuw i64 %30, 32
  %32 = zext i32 %28 to i64
  %33 = or i64 %31, %32
  br label %289

34:                                               ; preds = %5
  %35 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %2, i64 0, i32 2, i32 0, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %256, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %55

45:                                               ; preds = %38
  %46 = zext i32 %44 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #8
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %45
  tail call void @llvm.trap() #8
  unreachable

53:                                               ; preds = %45
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %43, align 4
  br label %55

55:                                               ; preds = %38, %53
  %56 = phi i32 [ %54, %53 ], [ %44, %38 ]
  %57 = load atomic i32, i32* %39 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %62 = add i32 %56, -1
  store i32 %62, i32* %61, align 4
  br label %63

63:                                               ; preds = %60, %55
  %64 = phi i32 [ %62, %60 ], [ %56, %55 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #8
  br label %67

67:                                               ; preds = %63, %66
  %68 = icmp ult i32 %3, 2
  %69 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %70 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %70, i64 0, i32 2, i32 0, i32 0
  %72 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %72, i64 0, i32 2, i32 0, i32 0
  %74 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %73, align 8
  br i1 %68, label %75, label %91

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %74, i64 0, i32 3
  %77 = tail call dereferenceable(16) %"class.WTF::Vector.412"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"* %76) #8
  %78 = getelementptr inbounds %"class.WTF::Vector.412", %"class.WTF::Vector.412"* %77, i64 0, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i64
  %81 = add i64 %80, %4
  %82 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %69, align 8
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %82, i64 0, i32 3, i32 0, i32 0
  %84 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %84, i64 0, i32 3, i32 0, i32 0
  %86 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %86, i64 0, i32 16
  %88 = load i64, i64* %87, align 8
  %89 = icmp ult i64 %81, %88
  %90 = select i1 %89, i64 %88, i64 %81
  br label %107

91:                                               ; preds = %67
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %74, i64 0, i32 4
  %93 = tail call dereferenceable(16) %"class.WTF::Vector.412"* @_ZNK5blink13GridTrackList15LegacyTrackListEv(%"class.blink::GridTrackList"* %92) #8
  %94 = getelementptr inbounds %"class.WTF::Vector.412", %"class.WTF::Vector.412"* %93, i64 0, i32 0, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i64
  %97 = add i64 %96, %4
  %98 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %69, align 8
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %98, i64 0, i32 3, i32 0, i32 0
  %100 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %100, i64 0, i32 3, i32 0, i32 0
  %102 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %102, i64 0, i32 15
  %104 = load i64, i64* %103, align 8
  %105 = icmp ult i64 %97, %104
  %106 = select i1 %105, i64 %104, i64 %97
  br label %107

107:                                              ; preds = %91, %75
  %108 = phi i64 [ %106, %91 ], [ %90, %75 ]
  %109 = icmp ult i64 %108, 1000
  %110 = select i1 %109, i64 %108, i64 1000
  %111 = bitcast %"class.blink::NamedLineCollection"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %111) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 -86, i64 56, i1 false) #8
  %112 = bitcast %"class.WTF::AtomicString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #8
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %132, label %115

115:                                              ; preds = %107
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %132

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i33
  %124 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %123, i33 1) #8
  %125 = extractvalue { i33, i1 } %124, 1
  %126 = extractvalue { i33, i1 } %124, 0
  %127 = icmp slt i33 %126, 0
  %128 = or i1 %125, %127
  br i1 %128, label %129, label %130, !prof !2

129:                                              ; preds = %120
  tail call void @llvm.trap() #8
  unreachable

130:                                              ; preds = %120
  %131 = trunc i33 %126 to i32
  store i32 %131, i32* %121, align 4
  br label %132

132:                                              ; preds = %130, %115, %107
  %133 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %113, %"class.WTF::StringImpl"** %133, align 8
  %134 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0
  %135 = icmp ugt i32 %3, 1
  %136 = zext i1 %135 to i32
  call void @_ZN5blink19NamedLineCollectionC2ERKNS_13ComputedStyleERKN3WTF6StringENS_24GridTrackSizingDirectionEmm(%"class.blink::NamedLineCollection"* nonnull %6, %"class.blink::ComputedStyle"* dereferenceable(104) %0, %"class.WTF::String"* nonnull dereferenceable(8) %134, i32 %136, i64 %110, i64 %4) #8
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %137, null
  br i1 %138, label %152, label %139

139:                                              ; preds = %132
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %137, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  br i1 %143, label %146, label %148

146:                                              ; preds = %139
  %147 = add i32 %145, -1
  store i32 %147, i32* %144, align 4
  br label %148

148:                                              ; preds = %146, %139
  %149 = phi i32 [ %147, %146 ], [ %145, %139 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %137) #8
  br label %152

152:                                              ; preds = %151, %148, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #8
  %153 = trunc i64 %110 to i32
  %154 = and i32 %3, -3
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %199

156:                                              ; preds = %152
  %157 = add nsw i32 %1, -1
  %158 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %2, i64 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = sext i32 %159 to i64
  %161 = icmp sgt i32 %157, %153
  %162 = select i1 %161, i32 %153, i32 %157
  %163 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %6, i64 0, i32 0
  %164 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %163, align 8
  %165 = icmp eq %"class.WTF::Vector"* %164, null
  br i1 %165, label %166, label %174

166:                                              ; preds = %156
  %167 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %6, i64 0, i32 1
  %168 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %167, align 8
  %169 = icmp eq %"class.WTF::Vector"* %168, null
  br i1 %169, label %170, label %174

170:                                              ; preds = %166
  %171 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %6, i64 0, i32 2
  %172 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %171, align 8
  %173 = icmp eq %"class.WTF::Vector"* %172, null
  br i1 %173, label %178, label %174

174:                                              ; preds = %170, %166, %156
  %175 = icmp eq i32 %159, 0
  br i1 %175, label %196, label %176

176:                                              ; preds = %174
  %177 = sext i32 %162 to i64
  br label %182

178:                                              ; preds = %170
  %179 = icmp slt i32 %162, -1
  %180 = select i1 %179, i32 %162, i32 -1
  %181 = sub i32 %180, %159
  br label %196

182:                                              ; preds = %190, %176
  %183 = phi i64 [ %177, %176 ], [ %192, %190 ]
  %184 = phi i64 [ %160, %176 ], [ %191, %190 ]
  %185 = icmp slt i64 %183, 0
  br i1 %185, label %188, label %186

186:                                              ; preds = %182
  %187 = call zeroext i1 @_ZN5blink19NamedLineCollection8ContainsEm(%"class.blink::NamedLineCollection"* nonnull %6, i64 %183) #8
  br i1 %187, label %188, label %190

188:                                              ; preds = %186, %182
  %189 = add i64 %184, -1
  br label %190

190:                                              ; preds = %188, %186
  %191 = phi i64 [ %189, %188 ], [ %184, %186 ]
  %192 = add i64 %183, -1
  %193 = icmp eq i64 %191, 0
  br i1 %193, label %194, label %182

194:                                              ; preds = %190
  %195 = trunc i64 %192 to i32
  br label %196

196:                                              ; preds = %194, %178, %174
  %197 = phi i32 [ %181, %178 ], [ %162, %174 ], [ %195, %194 ]
  %198 = add i32 %197, 1
  br label %241

199:                                              ; preds = %152
  %200 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %2, i64 0, i32 1
  %201 = load i32, i32* %200, align 4
  %202 = sext i32 %201 to i64
  %203 = icmp sgt i32 %1, -1
  %204 = select i1 %203, i32 %1, i32 -1
  %205 = add nsw i32 %204, 1
  %206 = zext i32 %205 to i64
  %207 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %6, i64 0, i32 0
  %208 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %207, align 8
  %209 = icmp eq %"class.WTF::Vector"* %208, null
  br i1 %209, label %210, label %218

210:                                              ; preds = %199
  %211 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %6, i64 0, i32 1
  %212 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %211, align 8
  %213 = icmp eq %"class.WTF::Vector"* %212, null
  br i1 %213, label %214, label %218

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.blink::NamedLineCollection", %"class.blink::NamedLineCollection"* %6, i64 0, i32 2
  %216 = load %"class.WTF::Vector"*, %"class.WTF::Vector"** %215, align 8
  %217 = icmp eq %"class.WTF::Vector"* %216, null
  br i1 %217, label %220, label %218

218:                                              ; preds = %214, %210, %199
  %219 = icmp eq i32 %201, 0
  br i1 %219, label %237, label %225

220:                                              ; preds = %214
  %221 = add nuw nsw i64 %110, 1
  %222 = icmp ugt i64 %221, %206
  %223 = select i1 %222, i64 %221, i64 %206
  %224 = add nsw i64 %223, %202
  br label %237

225:                                              ; preds = %218, %233
  %226 = phi i64 [ %234, %233 ], [ %202, %218 ]
  %227 = phi i64 [ %235, %233 ], [ %206, %218 ]
  %228 = icmp ugt i64 %227, %110
  br i1 %228, label %231, label %229

229:                                              ; preds = %225
  %230 = call zeroext i1 @_ZN5blink19NamedLineCollection8ContainsEm(%"class.blink::NamedLineCollection"* nonnull %6, i64 %227) #8
  br i1 %230, label %231, label %233

231:                                              ; preds = %229, %225
  %232 = add i64 %226, -1
  br label %233

233:                                              ; preds = %231, %229
  %234 = phi i64 [ %232, %231 ], [ %226, %229 ]
  %235 = add i64 %227, 1
  %236 = icmp eq i64 %234, 0
  br i1 %236, label %237, label %225

237:                                              ; preds = %233, %220, %218
  %238 = phi i64 [ %224, %220 ], [ %206, %218 ], [ %235, %233 ]
  %239 = trunc i64 %238 to i32
  %240 = add i32 %239, -1
  br label %241

241:                                              ; preds = %196, %237
  %242 = phi i32 [ %1, %196 ], [ %240, %237 ]
  %243 = phi i32 [ %198, %196 ], [ %1, %237 ]
  %244 = icmp sgt i32 %243, -1000
  %245 = select i1 %244, i32 %243, i32 -1000
  %246 = icmp slt i32 %245, 999
  %247 = select i1 %246, i32 %245, i32 999
  %248 = icmp sgt i32 %242, -999
  %249 = select i1 %248, i32 %242, i32 -999
  %250 = icmp slt i32 %249, 1000
  %251 = select i1 %250, i32 %249, i32 1000
  %252 = zext i32 %251 to i64
  %253 = shl nuw i64 %252, 32
  %254 = zext i32 %247 to i64
  %255 = or i64 %253, %254
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %111) #8
  br label %289

256:                                              ; preds = %34
  %257 = getelementptr inbounds %"class.blink::GridPosition", %"class.blink::GridPosition"* %2, i64 0, i32 1
  %258 = load i32, i32* %257, align 4
  %259 = and i32 %3, -3
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %275

261:                                              ; preds = %256
  %262 = sub i32 %1, %258
  %263 = icmp sgt i32 %262, -1000
  %264 = select i1 %263, i32 %262, i32 -1000
  %265 = icmp slt i32 %264, 999
  %266 = select i1 %265, i32 %264, i32 999
  %267 = icmp sgt i32 %1, -999
  %268 = select i1 %267, i32 %1, i32 -999
  %269 = icmp slt i32 %268, 1000
  %270 = select i1 %269, i32 %268, i32 1000
  %271 = zext i32 %270 to i64
  %272 = shl nuw i64 %271, 32
  %273 = zext i32 %266 to i64
  %274 = or i64 %272, %273
  br label %289

275:                                              ; preds = %256
  %276 = add i32 %258, %1
  %277 = icmp sgt i32 %1, -1000
  %278 = select i1 %277, i32 %1, i32 -1000
  %279 = icmp slt i32 %278, 999
  %280 = select i1 %279, i32 %278, i32 999
  %281 = icmp sgt i32 %276, -999
  %282 = select i1 %281, i32 %276, i32 -999
  %283 = icmp slt i32 %282, 1000
  %284 = select i1 %283, i32 %282, i32 1000
  %285 = zext i32 %284 to i64
  %286 = shl nuw i64 %285, 32
  %287 = zext i32 %280 to i64
  %288 = or i64 %286, %287
  br label %289

289:                                              ; preds = %275, %261, %241, %24, %14
  %290 = phi i64 [ %23, %14 ], [ %33, %24 ], [ %255, %241 ], [ %274, %261 ], [ %288, %275 ]
  %291 = insertvalue { i64, i32 } undef, i64 %290, 0
  %292 = insertvalue { i64, i32 } %291, i32 0, 1
  ret { i64, i32 } %292
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1097", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1097", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.1097", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.1097"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #8
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1097"* nonnull %6, i8* %16) #8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #8
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #8
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.1097"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #8
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1097"* nonnull %5, i8* %45) #8
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1096"* nonnull %46, i8* %25) #8
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1097"* nonnull %5, i8* %49) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #8
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #8
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %58
  call void @llvm.trap() #8
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #8
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #8
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #8
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #8
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.1097"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #8
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1097"* nonnull %3, i8* %105) #8
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1096"* nonnull %106, i16* %85) #8
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1097"* nonnull %3, i16* %109) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #8
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #8
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !2

125:                                              ; preds = %118
  call void @llvm.trap() #8
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #8
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #8
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1097", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.1097"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1097", %"class.WTF::StringTypeAdapter.1097"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.1097"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1097"* nonnull %4, i8* %21) #8
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #8
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i8* %30, i8* %31) #8
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.5, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #8
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #8
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #8
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0), i8* %46, i8* %47) #8
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.5, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #8
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #8
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #8
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1097"*, i8*) unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1096"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1097"*, i8*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1096"*, i16*) local_unnamed_addr #3

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1097"*, i16*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.495"*, %"struct.WTF::KeyValuePair.495"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorImLj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E4findERKS1_(%"class.WTF::HashTable.492"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.492", %"class.WTF::HashTable.492"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.495"*, %"struct.WTF::KeyValuePair.495"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.495"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.492", %"class.WTF::HashTable.492"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #8
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.495", %"struct.WTF::KeyValuePair.495"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.495", %"struct.WTF::KeyValuePair.495"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.495"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.495"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #8
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.495", %"struct.WTF::KeyValuePair.495"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.495", %"struct.WTF::KeyValuePair.495"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.495"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.495"*, %"struct.WTF::KeyValuePair.495"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.492", %"class.WTF::HashTable.492"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.495", %"struct.WTF::KeyValuePair.495"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.495"*, %"struct.WTF::KeyValuePair.495"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.495", %"struct.WTF::KeyValuePair.495"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.495"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.495"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.495"*, %"struct.WTF::KeyValuePair.495"* } undef, %"struct.WTF::KeyValuePair.495"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.495"*, %"struct.WTF::KeyValuePair.495"* } %77, %"struct.WTF::KeyValuePair.495"* %76, 1
  ret { %"struct.WTF::KeyValuePair.495"*, %"struct.WTF::KeyValuePair.495"* } %78
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
