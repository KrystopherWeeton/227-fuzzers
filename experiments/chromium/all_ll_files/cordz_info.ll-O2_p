; ModuleID = '../../third_party/abseil-cpp/absl/strings/internal/cordz_info.cc'
source_filename = "../../third_party/abseil-cpp/absl/strings/internal/cordz_info.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.absl::cord_internal::CordzInfo" = type { %"class.absl::cord_internal::CordzHandle", %"struct.absl::cord_internal::CordzInfo::List"*, %"struct.std::__1::atomic.5", %"struct.std::__1::atomic.5", %"class.absl::Mutex", %"struct.absl::cord_internal::CordRep"*, [64 x i8*], [64 x i8*], i32, i32, i32, i32, %"class.absl::cord_internal::CordzUpdateTracker", %"class.absl::Time" }
%"class.absl::cord_internal::CordzHandle" = type { i32 (...)**, %"struct.absl::cord_internal::CordzHandle::Queue"*, i8, %"class.absl::cord_internal::CordzHandle"*, %"class.absl::cord_internal::CordzHandle"* }
%"struct.absl::cord_internal::CordzHandle::Queue" = type { %"class.absl::base_internal::SpinLock", %"struct.std::__1::atomic.1" }
%"class.absl::base_internal::SpinLock" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl.3" }
%"struct.std::__1::__cxx_atomic_impl.3" = type { %"struct.std::__1::__cxx_atomic_base_impl.4" }
%"struct.std::__1::__cxx_atomic_base_impl.4" = type { %"class.absl::cord_internal::CordzHandle"* }
%"struct.absl::cord_internal::CordzInfo::List" = type { %"class.absl::base_internal::SpinLock", %"struct.std::__1::atomic.5" }
%"struct.std::__1::atomic.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { %"class.absl::cord_internal::CordzInfo"* }
%"class.absl::Mutex" = type { %"struct.std::__1::atomic.9" }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i64 }
%"struct.absl::cord_internal::CordRep" = type <{ i64, %"class.absl::cord_internal::Refcount", i8, [1 x i8], [2 x i8] }>
%"class.absl::cord_internal::Refcount" = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i32 }
%"class.absl::cord_internal::CordzUpdateTracker" = type { [21 x %"class.absl::cord_internal::CordzUpdateTracker::Counter"] }
%"class.absl::cord_internal::CordzUpdateTracker::Counter" = type { %"struct.std::__1::atomic.9" }
%"class.absl::Time" = type { %"class.absl::Duration" }
%"class.absl::Duration" = type <{ i64, i32, [4 x i8] }>
%"class.absl::cord_internal::CordzSnapshot" = type { %"class.absl::cord_internal::CordzHandle" }
%"class.absl::cord_internal::InlineData" = type { %union.anon }
%union.anon = type { %"struct.absl::cord_internal::InlineData::AsTree" }
%"struct.absl::cord_internal::InlineData::AsTree" = type { %union.anon.19, i64 }
%union.anon.19 = type { %"struct.absl::cord_internal::CordRep"* }
%"struct.absl::cord_internal::CordzStatistics" = type { i64, i64, i64, i64, %"struct.absl::cord_internal::CordzStatistics::NodeCounts", i32, i32, %"class.absl::cord_internal::CordzUpdateTracker" }
%"struct.absl::cord_internal::CordzStatistics::NodeCounts" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage" = type { i64, i64 }
%"class.absl::InlinedVector" = type { %"class.absl::inlined_vector_internal::Storage" }
%"class.absl::inlined_vector_internal::Storage" = type { %"class.absl::container_internal::CompressedTuple", %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef, 47, std::__1::allocator<absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef> >::Data" }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.21" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.21" = type { i64 }
%"union.absl::inlined_vector_internal::Storage<absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef, 47, std::__1::allocator<absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef, 47, std::__1::allocator<absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef> >::Allocated", [736 x i8] }
%"struct.absl::inlined_vector_internal::Storage<absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef, 47, std::__1::allocator<absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef> >::Allocated" = type { %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"*, i64 }
%"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef" = type { %"struct.absl::cord_internal::CordRep"*, i64 }
%"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer" = type { %"struct.absl::cord_internal::CordzStatistics"*, %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage" }
%"class.absl::cord_internal::CordRepRing" = type { %"struct.absl::cord_internal::CordRep.base", i32, i32, i32, i64, [8 x i8] }
%"struct.absl::cord_internal::CordRep.base" = type <{ i64, %"class.absl::cord_internal::Refcount", i8, [1 x i8] }>

@_ZN4absl13cord_internal9CordzInfo14kMaxStackDepthE = hidden local_unnamed_addr constant i32 64, align 4
@_ZN4absl13cord_internal9CordzInfo12global_list_E = hidden global { { { { i32 } } }, { { %"class.absl::cord_internal::CordzInfo"* } } } { { { { i32 } } } { { { i32 } } { { i32 } { i32 2 } } }, { { %"class.absl::cord_internal::CordzInfo"* } } zeroinitializer }, align 8
@_ZTVN4absl13cord_internal9CordzInfoE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.absl::cord_internal::CordzInfo"*)* @_ZN4absl13cord_internal9CordzInfoD2Ev to i8*), i8* bitcast (void (%"class.absl::cord_internal::CordzInfo"*)* @_ZN4absl13cord_internal9CordzInfoD0Ev to i8*)] }, align 8

@_ZN4absl13cord_internal9CordzInfoC1EPNS0_7CordRepEPKS1_NS0_18CordzUpdateTracker16MethodIdentifierE = hidden unnamed_addr alias void (%"class.absl::cord_internal::CordzInfo"*, %"struct.absl::cord_internal::CordRep"*, %"class.absl::cord_internal::CordzInfo"*, i32), void (%"class.absl::cord_internal::CordzInfo"*, %"struct.absl::cord_internal::CordRep"*, %"class.absl::cord_internal::CordzInfo"*, i32)* @_ZN4absl13cord_internal9CordzInfoC2EPNS0_7CordRepEPKS1_NS0_18CordzUpdateTracker16MethodIdentifierE
@_ZN4absl13cord_internal9CordzInfoD1Ev = hidden unnamed_addr alias void (%"class.absl::cord_internal::CordzInfo"*), void (%"class.absl::cord_internal::CordzInfo"*)* @_ZN4absl13cord_internal9CordzInfoD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.absl::cord_internal::CordzInfo"* @_ZN4absl13cord_internal9CordzInfo4HeadERKNS0_13CordzSnapshotE(%"class.absl::cord_internal::CordzSnapshot"* nocapture readnone dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %2 = load atomic i64, i64* bitcast (%"class.absl::cord_internal::CordzInfo"** getelementptr inbounds ({ { { { i32 } } }, { { %"class.absl::cord_internal::CordzInfo"* } } }, { { { { i32 } } }, { { %"class.absl::cord_internal::CordzInfo"* } } }* @_ZN4absl13cord_internal9CordzInfo12global_list_E, i64 0, i32 1, i32 0, i32 0) to i64*) acquire, align 8
  %3 = inttoptr i64 %2 to %"class.absl::cord_internal::CordzInfo"*
  ret %"class.absl::cord_internal::CordzInfo"* %3
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.absl::cord_internal::CordzInfo"* @_ZNK4absl13cord_internal9CordzInfo4NextERKNS0_13CordzSnapshotE(%"class.absl::cord_internal::CordzInfo"* nocapture readonly, %"class.absl::cord_internal::CordzSnapshot"* nocapture readnone dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 3, i32 0
  %4 = bitcast %"struct.std::__1::__atomic_base.6"* %3 to i64*
  %5 = load atomic i64, i64* %4 acquire, align 8
  %6 = inttoptr i64 %5 to %"class.absl::cord_internal::CordzInfo"*
  ret %"class.absl::cord_internal::CordzInfo"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13cord_internal9CordzInfo9TrackCordERNS0_10InlineDataENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* nocapture dereferenceable(16), i32) local_unnamed_addr #2 align 2 {
  %3 = tail call i8* @_Znwm(i64 1304) #12
  %4 = bitcast i8* %3 to %"class.absl::cord_internal::CordzInfo"*
  %5 = bitcast %"class.absl::cord_internal::InlineData"* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast i8* %3 to %"class.absl::cord_internal::CordzHandle"*
  tail call void @_ZN4absl13cord_internal11CordzHandleC2Eb(%"class.absl::cord_internal::CordzHandle"* nonnull %7, i1 zeroext false) #13
  %8 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4absl13cord_internal9CordzInfoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 40
  %10 = bitcast i8* %9 to %"struct.absl::cord_internal::CordzInfo::List"**
  store %"struct.absl::cord_internal::CordzInfo::List"* bitcast ({ { { { i32 } } }, { { %"class.absl::cord_internal::CordzInfo"* } } }* @_ZN4absl13cord_internal9CordzInfo12global_list_E to %"struct.absl::cord_internal::CordzInfo::List"*), %"struct.absl::cord_internal::CordzInfo::List"** %10, align 8
  %11 = getelementptr inbounds i8, i8* %3, i64 48
  %12 = getelementptr inbounds i8, i8* %3, i64 72
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #13
  %13 = bitcast i8* %12 to i64*
  store i64 %6, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %3, i64 1104
  %15 = bitcast i8* %14 to i32*
  %16 = getelementptr inbounds i8, i8* %3, i64 80
  %17 = bitcast i8* %16 to i8**
  %18 = tail call i32 @_ZN4absl13GetStackTraceEPPvii(i8** %17, i32 64, i32 1) #13
  store i32 %18, i32* %15, align 8
  %19 = getelementptr inbounds i8, i8* %3, i64 1108
  %20 = bitcast i8* %19 to i32*
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %3, i64 1112
  %22 = bitcast i8* %21 to i32*
  store i32 %1, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %3, i64 1116
  call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 172, i1 false)
  %24 = tail call { i64, i32 } @_ZN4absl3NowEv() #13
  %25 = getelementptr inbounds i8, i8* %3, i64 1288
  %26 = bitcast i8* %25 to i64*
  %27 = extractvalue { i64, i32 } %24, 0
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds i8, i8* %3, i64 1296
  %29 = bitcast i8* %28 to i32*
  %30 = extractvalue { i64, i32 } %24, 1
  store i32 %30, i32* %29, align 8
  %31 = zext i32 %1 to i64
  %32 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %4, i64 0, i32 12, i32 0, i64 %31, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i64, i64* %32 monotonic, align 8
  %34 = add nsw i64 %33, 1
  store atomic i64 %34, i64* %32 monotonic, align 8
  %35 = ptrtoint i8* %3 to i64
  %36 = or i64 %35, 1
  %37 = tail call i64 @llvm.bswap.i64(i64 %36) #13
  %38 = getelementptr inbounds %"class.absl::cord_internal::InlineData", %"class.absl::cord_internal::InlineData"* %0, i64 0, i32 0, i32 0, i32 1
  store i64 %37, i64* %38, align 8
  %39 = load %"struct.absl::cord_internal::CordzInfo::List"*, %"struct.absl::cord_internal::CordzInfo::List"** %10, align 8
  %40 = getelementptr inbounds %"struct.absl::cord_internal::CordzInfo::List", %"struct.absl::cord_internal::CordzInfo::List"* %39, i64 0, i32 0
  %41 = getelementptr inbounds %"struct.absl::cord_internal::CordzInfo::List", %"struct.absl::cord_internal::CordzInfo::List"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 1
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %2
  %46 = or i32 %42, 1
  %47 = cmpxchg i32* %41, i32 %42, i32 %46 acquire monotonic
  %48 = extractvalue { i32, i1 } %47, 0
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51

51:                                               ; preds = %45, %2
  tail call void @_ZN4absl13base_internal8SpinLock8SlowLockEv(%"class.absl::base_internal::SpinLock"* %40) #14
  br label %52

52:                                               ; preds = %51, %45
  %53 = load %"struct.absl::cord_internal::CordzInfo::List"*, %"struct.absl::cord_internal::CordzInfo::List"** %10, align 8
  %54 = getelementptr inbounds %"struct.absl::cord_internal::CordzInfo::List", %"struct.absl::cord_internal::CordzInfo::List"* %53, i64 0, i32 1, i32 0
  %55 = bitcast %"struct.std::__1::__atomic_base.6"* %54 to i64*
  %56 = load atomic i64, i64* %55 acquire, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %62, label %58

58:                                               ; preds = %52
  %59 = inttoptr i64 %56 to %"class.absl::cord_internal::CordzInfo"*
  %60 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %59, i64 0, i32 2, i32 0
  %61 = bitcast %"struct.std::__1::__atomic_base.6"* %60 to i64*
  store atomic i64 %35, i64* %61 release, align 8
  br label %62

62:                                               ; preds = %52, %58
  %63 = getelementptr inbounds i8, i8* %3, i64 56
  %64 = bitcast i8* %63 to i64*
  store atomic i64 %56, i64* %64 release, align 8
  %65 = load %"struct.absl::cord_internal::CordzInfo::List"*, %"struct.absl::cord_internal::CordzInfo::List"** %10, align 8
  %66 = getelementptr inbounds %"struct.absl::cord_internal::CordzInfo::List", %"struct.absl::cord_internal::CordzInfo::List"* %65, i64 0, i32 1, i32 0
  %67 = bitcast %"struct.std::__1::__atomic_base.6"* %66 to i64*
  store atomic i64 %35, i64* %67 release, align 8
  %68 = load atomic i32, i32* %41 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = atomicrmw xchg i32* %41, i32 %69 release
  %71 = icmp ugt i32 %70, 7
  br i1 %71, label %72, label %73

72:                                               ; preds = %62
  tail call void @_ZN4absl13base_internal8SpinLock10SlowUnlockEj(%"class.absl::base_internal::SpinLock"* %40, i32 %70) #14
  br label %73

73:                                               ; preds = %62, %72
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13cord_internal9CordzInfo5TrackEv(%"class.absl::cord_internal::CordzInfo"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 1
  %3 = load %"struct.absl::cord_internal::CordzInfo::List"*, %"struct.absl::cord_internal::CordzInfo::List"** %2, align 8
  %4 = getelementptr inbounds %"struct.absl::cord_internal::CordzInfo::List", %"struct.absl::cord_internal::CordzInfo::List"* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.absl::cord_internal::CordzInfo::List", %"struct.absl::cord_internal::CordzInfo::List"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %1
  %10 = or i32 %6, 1
  %11 = cmpxchg i32* %5, i32 %6, i32 %10 acquire monotonic
  %12 = extractvalue { i32, i1 } %11, 0
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %9, %1
  tail call void @_ZN4absl13base_internal8SpinLock8SlowLockEv(%"class.absl::base_internal::SpinLock"* %4) #14
  br label %16

16:                                               ; preds = %9, %15
  %17 = load %"struct.absl::cord_internal::CordzInfo::List"*, %"struct.absl::cord_internal::CordzInfo::List"** %2, align 8
  %18 = getelementptr inbounds %"struct.absl::cord_internal::CordzInfo::List", %"struct.absl::cord_internal::CordzInfo::List"* %17, i64 0, i32 1, i32 0
  %19 = bitcast %"struct.std::__1::__atomic_base.6"* %18 to i64*
  %20 = load atomic i64, i64* %19 acquire, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = ptrtoint %"class.absl::cord_internal::CordzInfo"* %0 to i64
  br label %29

24:                                               ; preds = %16
  %25 = inttoptr i64 %20 to %"class.absl::cord_internal::CordzInfo"*
  %26 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %25, i64 0, i32 2, i32 0
  %27 = ptrtoint %"class.absl::cord_internal::CordzInfo"* %0 to i64
  %28 = bitcast %"struct.std::__1::__atomic_base.6"* %26 to i64*
  store atomic i64 %27, i64* %28 release, align 8
  br label %29

29:                                               ; preds = %22, %24
  %30 = phi i64 [ %23, %22 ], [ %27, %24 ]
  %31 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 3, i32 0
  %32 = bitcast %"struct.std::__1::__atomic_base.6"* %31 to i64*
  store atomic i64 %20, i64* %32 release, align 8
  %33 = load %"struct.absl::cord_internal::CordzInfo::List"*, %"struct.absl::cord_internal::CordzInfo::List"** %2, align 8
  %34 = getelementptr inbounds %"struct.absl::cord_internal::CordzInfo::List", %"struct.absl::cord_internal::CordzInfo::List"* %33, i64 0, i32 1, i32 0
  %35 = bitcast %"struct.std::__1::__atomic_base.6"* %34 to i64*
  store atomic i64 %30, i64* %35 release, align 8
  %36 = load atomic i32, i32* %5 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = atomicrmw xchg i32* %5, i32 %37 release
  %39 = icmp ugt i32 %38, 7
  br i1 %39, label %40, label %41

40:                                               ; preds = %29
  tail call void @_ZN4absl13base_internal8SpinLock10SlowUnlockEj(%"class.absl::base_internal::SpinLock"* %4, i32 %38) #14
  br label %41

41:                                               ; preds = %29, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13cord_internal9CordzInfo9TrackCordERNS0_10InlineDataERKS2_NS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* nocapture dereferenceable(16), %"class.absl::cord_internal::InlineData"* nocapture readonly dereferenceable(16), i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.absl::cord_internal::InlineData", %"class.absl::cord_internal::InlineData"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = tail call i64 @llvm.bswap.i64(i64 %5) #13
  %7 = add nsw i64 %6, -1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %3
  %10 = inttoptr i64 %7 to %"class.absl::cord_internal::CordzInfo"*
  tail call void @_ZN4absl13cord_internal9CordzInfo7UntrackEv(%"class.absl::cord_internal::CordzInfo"* nonnull %10)
  br label %11

11:                                               ; preds = %3, %9
  %12 = tail call i8* @_Znwm(i64 1304) #12
  %13 = bitcast i8* %12 to %"class.absl::cord_internal::CordzInfo"*
  %14 = getelementptr inbounds %"class.absl::cord_internal::InlineData", %"class.absl::cord_internal::InlineData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %14, align 8
  %16 = getelementptr inbounds %"class.absl::cord_internal::InlineData", %"class.absl::cord_internal::InlineData"* %1, i64 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = tail call i64 @llvm.bswap.i64(i64 %17) #13
  %19 = add nsw i64 %18, -1
  %20 = inttoptr i64 %19 to %"class.absl::cord_internal::CordzInfo"*
  tail call void @_ZN4absl13cord_internal9CordzInfoC2EPNS0_7CordRepEPKS1_NS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::CordzInfo"* nonnull %13, %"struct.absl::cord_internal::CordRep"* %15, %"class.absl::cord_internal::CordzInfo"* %20, i32 %2)
  %21 = ptrtoint i8* %12 to i64
  %22 = or i64 %21, 1
  %23 = tail call i64 @llvm.bswap.i64(i64 %22) #13
  store i64 %23, i64* %4, align 8
  %24 = getelementptr inbounds i8, i8* %12, i64 40
  %25 = bitcast i8* %24 to %"struct.absl::cord_internal::CordzInfo::List"**
  %26 = load %"struct.absl::cord_internal::CordzInfo::List"*, %"struct.absl::cord_internal::CordzInfo::List"** %25, align 8
  %27 = getelementptr inbounds %"struct.absl::cord_internal::CordzInfo::List", %"struct.absl::cord_internal::CordzInfo::List"* %26, i64 0, i32 0
  %28 = getelementptr inbounds %"struct.absl::cord_internal::CordzInfo::List", %"struct.absl::cord_internal::CordzInfo::List"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %38

32:                                               ; preds = %11
  %33 = or i32 %29, 1
  %34 = cmpxchg i32* %28, i32 %29, i32 %33 acquire monotonic
  %35 = extractvalue { i32, i1 } %34, 0
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %32, %11
  tail call void @_ZN4absl13base_internal8SpinLock8SlowLockEv(%"class.absl::base_internal::SpinLock"* %27) #14
  br label %39

39:                                               ; preds = %38, %32
  %40 = load %"struct.absl::cord_internal::CordzInfo::List"*, %"struct.absl::cord_internal::CordzInfo::List"** %25, align 8
  %41 = getelementptr inbounds %"struct.absl::cord_internal::CordzInfo::List", %"struct.absl::cord_internal::CordzInfo::List"* %40, i64 0, i32 1, i32 0
  %42 = bitcast %"struct.std::__1::__atomic_base.6"* %41 to i64*
  %43 = load atomic i64, i64* %42 acquire, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %39
  %46 = inttoptr i64 %43 to %"class.absl::cord_internal::CordzInfo"*
  %47 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %46, i64 0, i32 2, i32 0
  %48 = bitcast %"struct.std::__1::__atomic_base.6"* %47 to i64*
  store atomic i64 %21, i64* %48 release, align 8
  br label %49

49:                                               ; preds = %39, %45
  %50 = getelementptr inbounds i8, i8* %12, i64 56
  %51 = bitcast i8* %50 to i64*
  store atomic i64 %43, i64* %51 release, align 8
  %52 = load %"struct.absl::cord_internal::CordzInfo::List"*, %"struct.absl::cord_internal::CordzInfo::List"** %25, align 8
  %53 = getelementptr inbounds %"struct.absl::cord_internal::CordzInfo::List", %"struct.absl::cord_internal::CordzInfo::List"* %52, i64 0, i32 1, i32 0
  %54 = bitcast %"struct.std::__1::__atomic_base.6"* %53 to i64*
  store atomic i64 %21, i64* %54 release, align 8
  %55 = load atomic i32, i32* %28 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = atomicrmw xchg i32* %28, i32 %56 release
  %58 = icmp ugt i32 %57, 7
  br i1 %58, label %59, label %60

59:                                               ; preds = %49
  tail call void @_ZN4absl13base_internal8SpinLock10SlowUnlockEj(%"class.absl::base_internal::SpinLock"* %27, i32 %57) #14
  br label %60

60:                                               ; preds = %49, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13cord_internal9CordzInfo7UntrackEv(%"class.absl::cord_internal::CordzInfo"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 1
  %3 = load %"struct.absl::cord_internal::CordzInfo::List"*, %"struct.absl::cord_internal::CordzInfo::List"** %2, align 8
  %4 = getelementptr inbounds %"struct.absl::cord_internal::CordzInfo::List", %"struct.absl::cord_internal::CordzInfo::List"* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.absl::cord_internal::CordzInfo::List", %"struct.absl::cord_internal::CordzInfo::List"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %1
  %10 = or i32 %6, 1
  %11 = cmpxchg i32* %5, i32 %6, i32 %10 acquire monotonic
  %12 = extractvalue { i32, i1 } %11, 0
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %9, %1
  tail call void @_ZN4absl13base_internal8SpinLock8SlowLockEv(%"class.absl::base_internal::SpinLock"* %4) #14
  br label %16

16:                                               ; preds = %9, %15
  %17 = load %"struct.absl::cord_internal::CordzInfo::List"*, %"struct.absl::cord_internal::CordzInfo::List"** %2, align 8
  %18 = getelementptr inbounds %"struct.absl::cord_internal::CordzInfo::List", %"struct.absl::cord_internal::CordzInfo::List"* %17, i64 0, i32 1, i32 0
  %19 = bitcast %"struct.std::__1::__atomic_base.6"* %18 to i64*
  %20 = load atomic i64, i64* %19 acquire, align 8
  %21 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 3, i32 0
  %22 = bitcast %"struct.std::__1::__atomic_base.6"* %21 to i64*
  %23 = load atomic i64, i64* %22 acquire, align 8
  %24 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 2, i32 0
  %25 = bitcast %"struct.std::__1::__atomic_base.6"* %24 to i64*
  %26 = load atomic i64, i64* %25 acquire, align 8
  %27 = inttoptr i64 %26 to %"class.absl::cord_internal::CordzInfo"*
  %28 = icmp eq i64 %23, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %16
  %30 = inttoptr i64 %23 to %"class.absl::cord_internal::CordzInfo"*
  %31 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %30, i64 0, i32 2, i32 0
  %32 = bitcast %"struct.std::__1::__atomic_base.6"* %31 to i64*
  store atomic i64 %26, i64* %32 release, align 8
  br label %33

33:                                               ; preds = %16, %29
  %34 = icmp eq i64 %26, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %27, i64 0, i32 3, i32 0
  br label %40

37:                                               ; preds = %33
  %38 = load %"struct.absl::cord_internal::CordzInfo::List"*, %"struct.absl::cord_internal::CordzInfo::List"** %2, align 8
  %39 = getelementptr inbounds %"struct.absl::cord_internal::CordzInfo::List", %"struct.absl::cord_internal::CordzInfo::List"* %38, i64 0, i32 1, i32 0
  br label %40

40:                                               ; preds = %37, %35
  %41 = phi %"struct.std::__1::__atomic_base.6"* [ %39, %37 ], [ %36, %35 ]
  %42 = bitcast %"struct.std::__1::__atomic_base.6"* %41 to i64*
  store atomic i64 %23, i64* %42 release, align 8
  %43 = load atomic i32, i32* %5 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = atomicrmw xchg i32* %5, i32 %44 release
  %46 = icmp ugt i32 %45, 7
  br i1 %46, label %47, label %48

47:                                               ; preds = %40
  tail call void @_ZN4absl13base_internal8SpinLock10SlowUnlockEj(%"class.absl::base_internal::SpinLock"* %4, i32 %45) #14
  br label %48

48:                                               ; preds = %40, %47
  %49 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 0
  %50 = tail call zeroext i1 @_ZNK4absl13cord_internal11CordzHandle12SafeToDeleteEv(%"class.absl::cord_internal::CordzHandle"* %49) #13
  br i1 %50, label %51, label %59

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 5
  store %"struct.absl::cord_internal::CordRep"* null, %"struct.absl::cord_internal::CordRep"** %52, align 8
  %53 = icmp eq %"class.absl::cord_internal::CordzInfo"* %0, null
  br i1 %53, label %68, label %54

54:                                               ; preds = %51
  %55 = bitcast %"class.absl::cord_internal::CordzInfo"* %0 to void (%"class.absl::cord_internal::CordzInfo"*)***
  %56 = load void (%"class.absl::cord_internal::CordzInfo"*)**, void (%"class.absl::cord_internal::CordzInfo"*)*** %55, align 8
  %57 = getelementptr inbounds void (%"class.absl::cord_internal::CordzInfo"*)*, void (%"class.absl::cord_internal::CordzInfo"*)** %56, i64 1
  %58 = load void (%"class.absl::cord_internal::CordzInfo"*)*, void (%"class.absl::cord_internal::CordzInfo"*)** %57, align 8
  tail call void %58(%"class.absl::cord_internal::CordzInfo"* nonnull %0) #13
  br label %68

59:                                               ; preds = %48
  %60 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 4
  tail call void @_ZN4absl5Mutex4LockEv(%"class.absl::Mutex"* %60) #13
  %61 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 5
  %62 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %61, align 8
  %63 = icmp eq %"struct.absl::cord_internal::CordRep"* %62, null
  br i1 %63, label %67, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %62, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 2 monotonic
  br label %67

67:                                               ; preds = %59, %64
  tail call void @_ZN4absl5Mutex6UnlockEv(%"class.absl::Mutex"* %60) #13
  tail call void @_ZN4absl13cord_internal11CordzHandle6DeleteEPS1_(%"class.absl::cord_internal::CordzHandle"* %49) #13
  br label %68

68:                                               ; preds = %51, %54, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13cord_internal9CordzInfo18MaybeTrackCordImplERNS0_10InlineDataERKS2_NS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* nocapture dereferenceable(16), %"class.absl::cord_internal::InlineData"* nocapture readonly dereferenceable(16), i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.absl::cord_internal::InlineData", %"class.absl::cord_internal::InlineData"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 72057594037927936
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  tail call void @_ZN4absl13cord_internal9CordzInfo9TrackCordERNS0_10InlineDataERKS2_NS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::InlineData"* dereferenceable(16) %0, %"class.absl::cord_internal::InlineData"* dereferenceable(16) %1, i32 %2)
  br label %16

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.absl::cord_internal::InlineData", %"class.absl::cord_internal::InlineData"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 72057594037927936
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = tail call i64 @llvm.bswap.i64(i64 %10) #13
  %14 = add nsw i64 %13, -1
  %15 = inttoptr i64 %14 to %"class.absl::cord_internal::CordzInfo"*
  tail call void @_ZN4absl13cord_internal9CordzInfo7UntrackEv(%"class.absl::cord_internal::CordzInfo"* %15)
  store i64 72057594037927936, i64* %9, align 8
  br label %16

16:                                               ; preds = %8, %12, %7
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN4absl13cord_internal9CordzInfo15GetParentMethodEPKS1_(%"class.absl::cord_internal::CordzInfo"* readonly) local_unnamed_addr #4 align 2 {
  %2 = icmp eq %"class.absl::cord_internal::CordzInfo"* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 10
  %9 = load i32, i32* %8, align 8
  br label %10

10:                                               ; preds = %7, %3, %1
  %11 = phi i32 [ 0, %1 ], [ %9, %7 ], [ %5, %3 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4absl13cord_internal9CordzInfo15FillParentStackEPKS1_PPv(%"class.absl::cord_internal::CordzInfo"* readonly, i8** nocapture) local_unnamed_addr #2 align 2 {
  %3 = icmp eq %"class.absl::cord_internal::CordzInfo"* %0, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 9
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = bitcast i8** %1 to i8*
  br i1 %7, label %15, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 7, i64 0
  %11 = bitcast i8** %10 to i8*
  %12 = sext i32 %6 to i64
  %13 = shl nsw i64 %12, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %11, i64 %13, i1 false)
  %14 = load i32, i32* %5, align 4
  br label %23

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 6, i64 0
  %17 = bitcast i8** %16 to i8*
  %18 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 8
  %19 = load i32, i32* %18, align 8
  %20 = sext i32 %19 to i64
  %21 = shl nsw i64 %20, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %17, i64 %21, i1 false)
  %22 = load i32, i32* %18, align 8
  br label %23

23:                                               ; preds = %2, %15, %9
  %24 = phi i32 [ %14, %9 ], [ %22, %15 ], [ 0, %2 ]
  ret i32 %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13cord_internal9CordzInfoC2EPNS0_7CordRepEPKS1_NS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::CordzInfo"*, %"struct.absl::cord_internal::CordRep"*, %"class.absl::cord_internal::CordzInfo"* readonly, i32) unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 0
  tail call void @_ZN4absl13cord_internal11CordzHandleC2Eb(%"class.absl::cord_internal::CordzHandle"* %5, i1 zeroext false) #13
  %6 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4absl13cord_internal9CordzInfoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 1
  store %"struct.absl::cord_internal::CordzInfo::List"* bitcast ({ { { { i32 } } }, { { %"class.absl::cord_internal::CordzInfo"* } } }* @_ZN4absl13cord_internal9CordzInfo12global_list_E to %"struct.absl::cord_internal::CordzInfo::List"*), %"struct.absl::cord_internal::CordzInfo::List"** %7, align 8
  %8 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 5
  %10 = bitcast %"class.absl::cord_internal::CordzInfo"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false)
  store %"struct.absl::cord_internal::CordRep"* %1, %"struct.absl::cord_internal::CordRep"** %9, align 8
  %11 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 8
  %12 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 6, i64 0
  %13 = tail call i32 @_ZN4absl13GetStackTraceEPPvii(i8** %12, i32 64, i32 1) #13
  store i32 %13, i32* %11, align 8
  %14 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 9
  %15 = icmp eq %"class.absl::cord_internal::CordzInfo"* %2, null
  br i1 %15, label %28, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 7, i64 0
  %18 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %2, i64 0, i32 9
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  %21 = bitcast i8** %17 to i8*
  br i1 %20, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %2, i64 0, i32 7, i64 0
  br label %31

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %2, i64 0, i32 6, i64 0
  %26 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %2, i64 0, i32 8
  %27 = load i32, i32* %26, align 8
  br label %31

28:                                               ; preds = %4
  store i32 0, i32* %14, align 4
  %29 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 10
  store i32 %3, i32* %29, align 8
  %30 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 11
  br label %47

31:                                               ; preds = %22, %24
  %32 = phi i32 [ %19, %22 ], [ %27, %24 ]
  %33 = phi i8** [ %23, %22 ], [ %25, %24 ]
  %34 = phi i32* [ %18, %22 ], [ %26, %24 ]
  %35 = bitcast i8** %33 to i8*
  %36 = sext i32 %32 to i64
  %37 = shl nsw i64 %36, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %35, i64 %37, i1 false) #13
  %38 = load i32, i32* %34, align 4
  store i32 %38, i32* %14, align 4
  %39 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 10
  store i32 %3, i32* %39, align 8
  %40 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 11
  %41 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %2, i64 0, i32 11
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %2, i64 0, i32 10
  %46 = load i32, i32* %45, align 8
  br label %47

47:                                               ; preds = %28, %31, %44
  %48 = phi i32* [ %30, %28 ], [ %40, %44 ], [ %40, %31 ]
  %49 = phi i32 [ 0, %28 ], [ %46, %44 ], [ %42, %31 ]
  store i32 %49, i32* %48, align 4
  %50 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 12
  %51 = bitcast %"class.absl::cord_internal::CordzUpdateTracker"* %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 168, i1 false) #13
  %52 = tail call { i64, i32 } @_ZN4absl3NowEv() #13
  %53 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 13, i32 0, i32 0
  %54 = extractvalue { i64, i32 } %52, 0
  store i64 %54, i64* %53, align 8
  %55 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 13, i32 0, i32 1
  %56 = extractvalue { i64, i32 } %52, 1
  store i32 %56, i32* %55, align 8
  %57 = zext i32 %3 to i64
  %58 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 12, i32 0, i64 %57, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i64, i64* %58 monotonic, align 8
  %60 = add nsw i64 %59, 1
  store atomic i64 %60, i64* %58 monotonic, align 8
  br i1 %15, label %73, label %61

61:                                               ; preds = %47, %82
  %62 = phi i64 [ %83, %82 ], [ 0, %47 ]
  %63 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %2, i64 0, i32 12, i32 0, i64 %62, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i64, i64* %63 monotonic, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %70, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 12, i32 0, i64 %62, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i64, i64* %67 monotonic, align 8
  %69 = add nsw i64 %68, %64
  store atomic i64 %69, i64* %67 monotonic, align 8
  br label %70

70:                                               ; preds = %66, %61
  %71 = or i64 %62, 1
  %72 = icmp eq i64 %71, 21
  br i1 %72, label %73, label %74

73:                                               ; preds = %70, %47
  ret void

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %2, i64 0, i32 12, i32 0, i64 %71, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i64, i64* %75 monotonic, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %82, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 12, i32 0, i64 %71, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i64, i64* %79 monotonic, align 8
  %81 = add nsw i64 %80, %76
  store atomic i64 %81, i64* %79 monotonic, align 8
  br label %82

82:                                               ; preds = %78, %74
  %83 = add nuw nsw i64 %62, 2
  br label %61
}

declare i32 @_ZN4absl13GetStackTraceEPPvii(i8**, i32, i32) local_unnamed_addr #5

declare { i64, i32 } @_ZN4absl3NowEv() local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13cord_internal9CordzInfoD2Ev(%"class.absl::cord_internal::CordzInfo"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4absl13cord_internal9CordzInfoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 5
  %4 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %3, align 8
  %5 = icmp eq %"struct.absl::cord_internal::CordRep"* %4, null
  br i1 %5, label %11, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 2 acq_rel
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %10, label %11, !prof !3

10:                                               ; preds = %6
  tail call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* nonnull %4) #13
  br label %11

11:                                               ; preds = %10, %6, %1
  %12 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 4
  tail call void @_ZN4absl5MutexD1Ev(%"class.absl::Mutex"* %12) #13
  %13 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 0
  tail call void @_ZN4absl13cord_internal11CordzHandleD2Ev(%"class.absl::cord_internal::CordzHandle"* %13) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4absl5MutexD1Ev(%"class.absl::Mutex"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4absl13cord_internal11CordzHandleD2Ev(%"class.absl::cord_internal::CordzHandle"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13cord_internal9CordzInfoD0Ev(%"class.absl::cord_internal::CordzInfo"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4absl13cord_internal9CordzInfoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 5
  %4 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %3, align 8
  %5 = icmp eq %"struct.absl::cord_internal::CordRep"* %4, null
  br i1 %5, label %11, label %6, !prof !2

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 2 acq_rel
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %10, label %11, !prof !3

10:                                               ; preds = %6
  tail call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* nonnull %4) #13
  br label %11

11:                                               ; preds = %1, %6, %10
  %12 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 4
  tail call void @_ZN4absl5MutexD1Ev(%"class.absl::Mutex"* %12) #13
  %13 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 0
  tail call void @_ZN4absl13cord_internal11CordzHandleD2Ev(%"class.absl::cord_internal::CordzHandle"* %13) #13
  %14 = bitcast %"class.absl::cord_internal::CordzInfo"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare zeroext i1 @_ZNK4absl13cord_internal11CordzHandle12SafeToDeleteEv(%"class.absl::cord_internal::CordzHandle"*) local_unnamed_addr #5

declare void @_ZN4absl13cord_internal11CordzHandle6DeleteEPS1_(%"class.absl::cord_internal::CordzHandle"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13cord_internal9CordzInfo4LockENS0_18CordzUpdateTracker16MethodIdentifierE(%"class.absl::cord_internal::CordzInfo"*, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 4
  tail call void @_ZN4absl5Mutex4LockEv(%"class.absl::Mutex"* %3) #13
  %4 = zext i32 %1 to i64
  %5 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 12, i32 0, i64 %4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = add nsw i64 %6, 1
  store atomic i64 %7, i64* %5 monotonic, align 8
  ret void
}

declare void @_ZN4absl5Mutex4LockEv(%"class.absl::Mutex"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4absl13cord_internal9CordzInfo6UnlockEv(%"class.absl::cord_internal::CordzInfo"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 5
  %3 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %2, align 8
  %4 = icmp eq %"struct.absl::cord_internal::CordRep"* %3, null
  %5 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 4
  tail call void @_ZN4absl5Mutex6UnlockEv(%"class.absl::Mutex"* %5) #13
  br i1 %4, label %6, label %7

6:                                                ; preds = %1
  tail call void @_ZN4absl13cord_internal9CordzInfo7UntrackEv(%"class.absl::cord_internal::CordzInfo"* %0)
  br label %7

7:                                                ; preds = %1, %6
  ret void
}

declare void @_ZN4absl5Mutex6UnlockEv(%"class.absl::Mutex"*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i8**, i64 } @_ZNK4absl13cord_internal9CordzInfo8GetStackEv(%"class.absl::cord_internal::CordzInfo"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 6, i64 0
  %3 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 8
  %5 = sext i32 %4 to i64
  %6 = insertvalue { i8**, i64 } undef, i8** %2, 0
  %7 = insertvalue { i8**, i64 } %6, i64 %5, 1
  ret { i8**, i64 } %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i8**, i64 } @_ZNK4absl13cord_internal9CordzInfo14GetParentStackEv(%"class.absl::cord_internal::CordzInfo"*) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 7, i64 0
  %3 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %0, i64 0, i32 9
  %4 = load i32, i32* %3, align 4
  %5 = sext i32 %4 to i64
  %6 = insertvalue { i8**, i64 } undef, i8** %2, 0
  %7 = insertvalue { i8**, i64 } %6, i64 %5, 1
  ret { i8**, i64 } %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4absl13cord_internal9CordzInfo18GetCordzStatisticsEv(%"struct.absl::cord_internal::CordzStatistics"* noalias sret, %"class.absl::cord_internal::CordzInfo"*) local_unnamed_addr #2 align 2 {
  %3 = alloca %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage", align 8
  %4 = alloca %"class.absl::InlinedVector", align 8
  %5 = alloca %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef", align 8
  %6 = alloca %"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer", align 8
  %7 = bitcast %"struct.absl::cord_internal::CordzStatistics"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 288, i1 false) #13
  %8 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 10
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 5
  store i32 %9, i32* %10, align 8
  %11 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 11
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 6
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i64, i64* %17 monotonic, align 8
  %19 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i64, i64* %23 monotonic, align 8
  %25 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %27, i64* %28 monotonic, align 8
  %29 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i64, i64* %29 monotonic, align 8
  %31 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i64, i64* %32 monotonic, align 8
  %34 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 6, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i64, i64* %35 monotonic, align 8
  %37 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i64, i64* %38 monotonic, align 8
  %40 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %39, i64* %40 monotonic, align 8
  %41 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %42, i64* %43 monotonic, align 8
  %44 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i64, i64* %44 monotonic, align 8
  %46 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 10, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i64, i64* %47 monotonic, align 8
  %49 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %48, i64* %49 monotonic, align 8
  %50 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i64, i64* %50 monotonic, align 8
  %52 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %51, i64* %52 monotonic, align 8
  %53 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 13, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %54, i64* %55 monotonic, align 8
  %56 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i64, i64* %56 monotonic, align 8
  %58 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 14, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %57, i64* %58 monotonic, align 8
  %59 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i64, i64* %59 monotonic, align 8
  %61 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 15, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %60, i64* %61 monotonic, align 8
  %62 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i64, i64* %62 monotonic, align 8
  %64 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 16, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %63, i64* %64 monotonic, align 8
  %65 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 17, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i64, i64* %65 monotonic, align 8
  %67 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 17, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %66, i64* %67 monotonic, align 8
  %68 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i64, i64* %68 monotonic, align 8
  %70 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %69, i64* %70 monotonic, align 8
  %71 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 19, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i64, i64* %71 monotonic, align 8
  %73 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 19, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %72, i64* %73 monotonic, align 8
  %74 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 12, i32 0, i64 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i64, i64* %74 monotonic, align 8
  %76 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 7, i32 0, i64 20, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 4
  tail call void @_ZN4absl5Mutex4LockEv(%"class.absl::Mutex"* %77) #13
  %78 = getelementptr inbounds %"class.absl::cord_internal::CordzInfo", %"class.absl::cord_internal::CordzInfo"* %1, i64 0, i32 5
  %79 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %78, align 8
  %80 = icmp eq %"struct.absl::cord_internal::CordRep"* %79, null
  br i1 %80, label %81, label %82

81:                                               ; preds = %2
  tail call void @_ZN4absl5Mutex6UnlockEv(%"class.absl::Mutex"* %77) #13
  br label %325

82:                                               ; preds = %2
  %83 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %79, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 2 monotonic
  tail call void @_ZN4absl5Mutex6UnlockEv(%"class.absl::Mutex"* %77) #13
  %85 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %79, i64 0, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %0, i64 0, i32 0
  store i64 %86, i64* %87, align 8
  %88 = bitcast %"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #13
  %89 = getelementptr inbounds %"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer", %"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer"* %6, i64 0, i32 0
  %90 = getelementptr inbounds %"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer", %"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer"* %6, i64 0, i32 1, i32 0
  store %"struct.absl::cord_internal::CordzStatistics"* %0, %"struct.absl::cord_internal::CordzStatistics"** %89, align 8
  %91 = getelementptr inbounds %"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer", %"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer"* %6, i64 0, i32 1
  %92 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage"* %91 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #13
  %93 = load atomic i32, i32* %83 acquire, align 4
  %94 = ashr i32 %93, 1
  %95 = icmp ugt i32 %94, 1
  %96 = add nsw i32 %94, -1
  %97 = select i1 %95, i32 %96, i32 1
  %98 = sext i32 %97 to i64
  %99 = call fastcc { %"struct.absl::cord_internal::CordRep"*, i64 } @_ZN4absl13cord_internal12_GLOBAL__N_115CordRepAnalyzer15CountLinearRepsENS2_6RepRefERNS2_11MemoryUsageE(%"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer"* nonnull %6, %"struct.absl::cord_internal::CordRep"* nonnull %79, i64 %98, %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage"* dereferenceable(16) %91) #13
  %100 = extractvalue { %"struct.absl::cord_internal::CordRep"*, i64 } %99, 0
  %101 = extractvalue { %"struct.absl::cord_internal::CordRep"*, i64 } %99, 1
  %102 = icmp eq %"struct.absl::cord_internal::CordRep"* %100, null
  br i1 %102, label %312, label %103

103:                                              ; preds = %82
  %104 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %100, i64 0, i32 2
  %105 = load i8, i8* %104, align 4
  switch i8 %105, label %312 [
    i8 3, label %106
    i8 0, label %194
  ]

106:                                              ; preds = %103
  %107 = load %"struct.absl::cord_internal::CordzStatistics"*, %"struct.absl::cord_internal::CordzStatistics"** %89, align 8
  %108 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %107, i64 0, i32 3
  %109 = load i64, i64* %108, align 8
  %110 = add nsw i64 %109, 1
  store i64 %110, i64* %108, align 8
  %111 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %107, i64 0, i32 4, i32 9
  %112 = load i64, i64* %111, align 8
  %113 = add i64 %112, 1
  store i64 %113, i64* %111, align 8
  %114 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %114) #13
  %115 = getelementptr inbounds %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage", %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage"* %3, i64 0, i32 0
  %116 = getelementptr inbounds %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage", %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage"* %3, i64 0, i32 1
  %117 = bitcast %"struct.absl::cord_internal::CordRep"* %100 to %"class.absl::cord_internal::CordRepRing"*
  %118 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %100, i64 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = zext i32 %119 to i64
  %121 = mul nuw nsw i64 %120, 20
  %122 = add nuw nsw i64 %121, 40
  store i64 %122, i64* %115, align 8
  store i64 %122, i64* %116, align 8
  %123 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %100, i64 1
  %124 = bitcast %"struct.absl::cord_internal::CordRep"* %123 to i32*
  %125 = load i32, i32* %124, align 8
  %126 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %117, i64 0, i32 2
  %127 = load i32, i32* %126, align 4
  %128 = icmp ugt i32 %127, %125
  %129 = select i1 %128, i32 %127, i32 %119
  %130 = icmp ugt i32 %129, %125
  br i1 %130, label %131, label %146

131:                                              ; preds = %106
  %132 = zext i32 %125 to i64
  %133 = shl nuw nsw i64 %120, 3
  %134 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %117, i64 0, i32 5, i64 %133
  %135 = bitcast i8* %134 to %"struct.absl::cord_internal::CordRep"**
  %136 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %135, i64 %132
  %137 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %136, align 8
  %138 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %137, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 acquire, align 4
  %140 = ashr i32 %139, 1
  %141 = sext i32 %140 to i64
  %142 = call fastcc { %"struct.absl::cord_internal::CordRep"*, i64 } @_ZN4absl13cord_internal12_GLOBAL__N_115CordRepAnalyzer15CountLinearRepsENS2_6RepRefERNS2_11MemoryUsageE(%"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer"* nonnull %6, %"struct.absl::cord_internal::CordRep"* %137, i64 %141, %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage"* nonnull dereferenceable(16) %3) #13
  %143 = add nuw nsw i64 %132, 1
  %144 = trunc i64 %143 to i32
  %145 = icmp eq i32 %129, %144
  br i1 %145, label %146, label %151

146:                                              ; preds = %151, %131, %106
  %147 = icmp ne i32 %127, 0
  %148 = xor i1 %128, %147
  br i1 %148, label %149, label %184

149:                                              ; preds = %146
  %150 = zext i32 %127 to i64
  br label %168

151:                                              ; preds = %131, %151
  %152 = phi i64 [ %165, %151 ], [ %143, %131 ]
  %153 = load i32, i32* %118, align 8
  %154 = zext i32 %153 to i64
  %155 = shl nuw nsw i64 %154, 3
  %156 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %117, i64 0, i32 5, i64 %155
  %157 = bitcast i8* %156 to %"struct.absl::cord_internal::CordRep"**
  %158 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %157, i64 %152
  %159 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %158, align 8
  %160 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %159, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 acquire, align 4
  %162 = ashr i32 %161, 1
  %163 = sext i32 %162 to i64
  %164 = call fastcc { %"struct.absl::cord_internal::CordRep"*, i64 } @_ZN4absl13cord_internal12_GLOBAL__N_115CordRepAnalyzer15CountLinearRepsENS2_6RepRefERNS2_11MemoryUsageE(%"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer"* nonnull %6, %"struct.absl::cord_internal::CordRep"* %159, i64 %163, %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage"* nonnull dereferenceable(16) %3) #13
  %165 = add nuw nsw i64 %152, 1
  %166 = trunc i64 %165 to i32
  %167 = icmp eq i32 %129, %166
  br i1 %167, label %146, label %151

168:                                              ; preds = %168, %149
  %169 = phi i64 [ 0, %149 ], [ %182, %168 ]
  %170 = load i32, i32* %118, align 8
  %171 = zext i32 %170 to i64
  %172 = shl nuw nsw i64 %171, 3
  %173 = getelementptr inbounds %"class.absl::cord_internal::CordRepRing", %"class.absl::cord_internal::CordRepRing"* %117, i64 0, i32 5, i64 %172
  %174 = bitcast i8* %173 to %"struct.absl::cord_internal::CordRep"**
  %175 = getelementptr inbounds %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %174, i64 %169
  %176 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %175, align 8
  %177 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %176, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load atomic i32, i32* %177 acquire, align 4
  %179 = ashr i32 %178, 1
  %180 = sext i32 %179 to i64
  %181 = call fastcc { %"struct.absl::cord_internal::CordRep"*, i64 } @_ZN4absl13cord_internal12_GLOBAL__N_115CordRepAnalyzer15CountLinearRepsENS2_6RepRefERNS2_11MemoryUsageE(%"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer"* nonnull %6, %"struct.absl::cord_internal::CordRep"* %176, i64 %180, %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage"* nonnull dereferenceable(16) %3) #13
  %182 = add nuw nsw i64 %169, 1
  %183 = icmp ult i64 %182, %150
  br i1 %183, label %168, label %184

184:                                              ; preds = %168, %146
  %185 = load i64, i64* %115, align 8
  %186 = load i64, i64* %116, align 8
  %187 = udiv i64 %186, %101
  %188 = bitcast i64* %90 to <2 x i64>*
  %189 = load <2 x i64>, <2 x i64>* %188, align 8
  %190 = insertelement <2 x i64> undef, i64 %185, i32 0
  %191 = insertelement <2 x i64> %190, i64 %187, i32 1
  %192 = add <2 x i64> %189, %191
  %193 = bitcast i64* %90 to <2 x i64>*
  store <2 x i64> %192, <2 x i64>* %193, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %114) #13
  br label %312

194:                                              ; preds = %103
  %195 = bitcast %"class.absl::InlinedVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 760, i8* nonnull %195) #13
  %196 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %4, i64 0, i32 0, i32 1
  %197 = bitcast %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef, 47, std::__1::allocator<absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef> >::Data"* %196 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %197, i8 -86, i64 752, i1 false) #13
  %198 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %198, align 8
  %199 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %5 to i8*
  %200 = getelementptr inbounds %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef", %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %5, i64 0, i32 0
  %201 = getelementptr inbounds %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef", %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %5, i64 0, i32 1
  %202 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %203 = ptrtoint %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef, 47, std::__1::allocator<absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef> >::Data"* %196 to i64
  %204 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %205 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"** %204 to i64*
  %206 = getelementptr inbounds %"class.absl::InlinedVector", %"class.absl::InlinedVector"* %4, i64 0, i32 0
  %207 = bitcast %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef, 47, std::__1::allocator<absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef> >::Data"* %196 to %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"*
  %208 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage"* %91 to <2 x i64>*
  %209 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage"* %91 to <2 x i64>*
  br label %210

210:                                              ; preds = %298, %194
  %211 = phi %"struct.absl::cord_internal::CordRep"* [ %100, %194 ], [ %300, %298 ]
  %212 = phi i64 [ %101, %194 ], [ %299, %298 ]
  %213 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %211, i64 1
  %214 = bitcast %"struct.absl::cord_internal::CordRep"* %213 to %"struct.absl::cord_internal::CordRep"**
  %215 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %214, align 8
  %216 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %215, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load atomic i32, i32* %216 acquire, align 4
  %218 = ashr i32 %217, 1
  %219 = sext i32 %218 to i64
  %220 = mul i64 %212, %219
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %199) #13
  %221 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %211, i64 1, i32 1
  %222 = bitcast %"class.absl::cord_internal::Refcount"* %221 to %"struct.absl::cord_internal::CordRep"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %199, i8 -86, i64 16, i1 false) #13
  %223 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %222, align 8
  %224 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %223, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 acquire, align 4
  %226 = ashr i32 %225, 1
  %227 = sext i32 %226 to i64
  %228 = mul i64 %212, %227
  store %"struct.absl::cord_internal::CordRep"* %223, %"struct.absl::cord_internal::CordRep"** %200, align 8
  store i64 %228, i64* %201, align 8
  %229 = load %"struct.absl::cord_internal::CordzStatistics"*, %"struct.absl::cord_internal::CordzStatistics"** %89, align 8
  %230 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %229, i64 0, i32 3
  %231 = load i64, i64* %230, align 8
  %232 = add nsw i64 %231, 1
  store i64 %232, i64* %230, align 8
  %233 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %229, i64 0, i32 4, i32 8
  %234 = load i64, i64* %233, align 8
  %235 = add i64 %234, 1
  store i64 %235, i64* %233, align 8
  %236 = udiv i64 32, %212
  %237 = load <2 x i64>, <2 x i64>* %208, align 8
  %238 = insertelement <2 x i64> <i64 32, i64 undef>, i64 %236, i32 1
  %239 = add <2 x i64> %237, %238
  store <2 x i64> %239, <2 x i64>* %209, align 8
  %240 = call fastcc { %"struct.absl::cord_internal::CordRep"*, i64 } @_ZN4absl13cord_internal12_GLOBAL__N_115CordRepAnalyzer15CountLinearRepsENS2_6RepRefERNS2_11MemoryUsageE(%"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer"* nonnull %6, %"struct.absl::cord_internal::CordRep"* %223, i64 %228, %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage"* dereferenceable(16) %91) #13
  %241 = extractvalue { %"struct.absl::cord_internal::CordRep"*, i64 } %240, 0
  %242 = icmp eq %"struct.absl::cord_internal::CordRep"* %241, null
  br i1 %242, label %248, label %243

243:                                              ; preds = %210
  %244 = extractvalue { %"struct.absl::cord_internal::CordRep"*, i64 } %240, 1
  %245 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %241, i64 0, i32 2
  %246 = load i8, i8* %245, align 4
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %249, label %248

248:                                              ; preds = %243, %210
  br label %249

249:                                              ; preds = %248, %243
  %250 = phi %"struct.absl::cord_internal::CordRep"* [ null, %248 ], [ %241, %243 ]
  %251 = phi i64 [ 0, %248 ], [ %244, %243 ]
  store %"struct.absl::cord_internal::CordRep"* %250, %"struct.absl::cord_internal::CordRep"** %200, align 8
  store i64 %251, i64* %201, align 8
  %252 = call fastcc { %"struct.absl::cord_internal::CordRep"*, i64 } @_ZN4absl13cord_internal12_GLOBAL__N_115CordRepAnalyzer15CountLinearRepsENS2_6RepRefERNS2_11MemoryUsageE(%"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer"* nonnull %6, %"struct.absl::cord_internal::CordRep"* %215, i64 %220, %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage"* dereferenceable(16) %91) #13
  %253 = extractvalue { %"struct.absl::cord_internal::CordRep"*, i64 } %252, 0
  %254 = extractvalue { %"struct.absl::cord_internal::CordRep"*, i64 } %252, 1
  %255 = icmp eq %"struct.absl::cord_internal::CordRep"* %253, null
  br i1 %255, label %280, label %256

256:                                              ; preds = %249
  %257 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %253, i64 0, i32 2
  %258 = load i8, i8* %257, align 4
  %259 = icmp eq i8 %258, 0
  br i1 %259, label %260, label %280

260:                                              ; preds = %256
  %261 = icmp eq %"struct.absl::cord_internal::CordRep"* %250, null
  br i1 %261, label %298, label %262

262:                                              ; preds = %260
  %263 = load i64, i64* %198, align 8, !noalias !4
  %264 = and i64 %263, 1
  %265 = icmp eq i64 %264, 0
  %266 = load i64, i64* %202, align 8
  %267 = select i1 %265, i64 47, i64 %266
  %268 = lshr i64 %263, 1
  %269 = icmp eq i64 %268, %267
  br i1 %269, label %278, label %270, !prof !3

270:                                              ; preds = %262
  %271 = load i64, i64* %205, align 8
  %272 = select i1 %265, i64 %203, i64 %271
  %273 = inttoptr i64 %272 to %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"*
  %274 = getelementptr inbounds %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef", %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %273, i64 %268
  %275 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %274 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %275, i8* nonnull align 8 %199, i64 16, i1 false) #13
  %276 = load i64, i64* %198, align 8
  %277 = add i64 %276, 2
  store i64 %277, i64* %198, align 8
  br label %298

278:                                              ; preds = %262
  %279 = call fastcc dereferenceable(16) %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* @_ZN4absl23inlined_vector_internal7StorageINS_13cord_internal12_GLOBAL__N_115CordRepAnalyzer6RepRefELm47ENSt3__19allocatorIS5_EEE15EmplaceBackSlowIJRKS5_EEERS5_DpOT_(%"class.absl::inlined_vector_internal::Storage"* nonnull %206, %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* nonnull dereferenceable(16) %5) #13
  br label %298

280:                                              ; preds = %256, %249
  %281 = icmp eq %"struct.absl::cord_internal::CordRep"* %250, null
  br i1 %281, label %282, label %298

282:                                              ; preds = %280
  %283 = load i64, i64* %198, align 8
  %284 = icmp ult i64 %283, 2
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %199) #13
  br label %304

286:                                              ; preds = %282
  %287 = and i64 %283, 1
  %288 = icmp eq i64 %287, 0
  %289 = load %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"*, %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"** %204, align 8
  %290 = select i1 %288, %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %207, %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %289
  %291 = lshr i64 %283, 1
  %292 = add nsw i64 %291, -1
  %293 = getelementptr inbounds %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef", %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %290, i64 %292, i32 0
  %294 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %293, align 8
  %295 = getelementptr inbounds %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef", %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %290, i64 %292, i32 1
  %296 = load i64, i64* %295, align 8
  %297 = add i64 %283, -2
  store i64 %297, i64* %198, align 8
  br label %298

298:                                              ; preds = %286, %280, %278, %270, %260
  %299 = phi i64 [ %296, %286 ], [ %254, %260 ], [ %254, %270 ], [ %254, %278 ], [ %251, %280 ]
  %300 = phi %"struct.absl::cord_internal::CordRep"* [ %294, %286 ], [ %253, %260 ], [ %253, %270 ], [ %253, %278 ], [ %250, %280 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %199) #13
  %301 = icmp eq %"struct.absl::cord_internal::CordRep"* %300, null
  br i1 %301, label %302, label %210

302:                                              ; preds = %298
  %303 = load i64, i64* %198, align 8
  br label %304

304:                                              ; preds = %302, %285
  %305 = phi i64 [ %303, %302 ], [ %283, %285 ]
  %306 = and i64 %305, 1
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %311, label %308

308:                                              ; preds = %304
  %309 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"** %204 to i8**
  %310 = load i8*, i8** %309, align 8
  call void @_ZdlPv(i8* %310) #12
  br label %311

311:                                              ; preds = %308, %304
  call void @llvm.lifetime.end.p0i8(i64 760, i8* nonnull %195) #13
  br label %312

312:                                              ; preds = %82, %103, %184, %311
  %313 = load %"struct.absl::cord_internal::CordzStatistics"*, %"struct.absl::cord_internal::CordzStatistics"** %89, align 8
  %314 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %313, i64 0, i32 1
  %315 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage"* %91 to <2 x i64>*
  %316 = load <2 x i64>, <2 x i64>* %315, align 8
  %317 = bitcast i64* %314 to <2 x i64>*
  %318 = load <2 x i64>, <2 x i64>* %317, align 8
  %319 = add <2 x i64> %318, %316
  %320 = bitcast i64* %314 to <2 x i64>*
  store <2 x i64> %319, <2 x i64>* %320, align 8
  %321 = atomicrmw sub i32* %83, i32 2 acq_rel
  %322 = icmp eq i32 %321, 2
  br i1 %322, label %323, label %324, !prof !3

323:                                              ; preds = %312
  call void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"* nonnull %79) #13
  br label %324

324:                                              ; preds = %312, %323
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #13
  br label %325

325:                                              ; preds = %81, %324
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.bswap.i64(i64) #8

declare void @_ZN4absl13cord_internal11CordzHandleC2Eb(%"class.absl::cord_internal::CordzHandle"*, i1 zeroext) unnamed_addr #5

declare void @_ZN4absl13cord_internal7CordRep7DestroyEPS1_(%"struct.absl::cord_internal::CordRep"*) local_unnamed_addr #5

; Function Attrs: cold
declare void @_ZN4absl13base_internal8SpinLock8SlowLockEv(%"class.absl::base_internal::SpinLock"*) local_unnamed_addr #9

; Function Attrs: cold
declare void @_ZN4absl13base_internal8SpinLock10SlowUnlockEj(%"class.absl::base_internal::SpinLock"*, i32) local_unnamed_addr #9

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc { %"struct.absl::cord_internal::CordRep"*, i64 } @_ZN4absl13cord_internal12_GLOBAL__N_115CordRepAnalyzer15CountLinearRepsENS2_6RepRefERNS2_11MemoryUsageE(%"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer"* nocapture readonly, %"struct.absl::cord_internal::CordRep"*, i64, %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %1, i64 0, i32 2
  %6 = load i8, i8* %5, align 4
  %7 = icmp eq i8 %6, 2
  br i1 %7, label %8, label %38

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer", %"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer"* %0, i64 0, i32 0
  %10 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage"* %3 to <2 x i64>*
  %11 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage"* %3 to <2 x i64>*
  br label %12

12:                                               ; preds = %8, %12
  %13 = phi %"struct.absl::cord_internal::CordRep"* [ %1, %8 ], [ %29, %12 ]
  %14 = phi i64 [ %2, %8 ], [ %34, %12 ]
  %15 = load %"struct.absl::cord_internal::CordzStatistics"*, %"struct.absl::cord_internal::CordzStatistics"** %9, align 8
  %16 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %15, i64 0, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = add nsw i64 %17, 1
  store i64 %18, i64* %16, align 8
  %19 = load %"struct.absl::cord_internal::CordzStatistics"*, %"struct.absl::cord_internal::CordzStatistics"** %9, align 8
  %20 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %19, i64 0, i32 4, i32 7
  %21 = load i64, i64* %20, align 8
  %22 = add i64 %21, 1
  store i64 %22, i64* %20, align 8
  %23 = udiv i64 32, %14
  %24 = load <2 x i64>, <2 x i64>* %10, align 8
  %25 = insertelement <2 x i64> <i64 32, i64 undef>, i64 %23, i32 1
  %26 = add <2 x i64> %24, %25
  store <2 x i64> %26, <2 x i64>* %11, align 8
  %27 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %13, i64 1, i32 1
  %28 = bitcast %"class.absl::cord_internal::Refcount"* %27 to %"struct.absl::cord_internal::CordRep"**
  %29 = load %"struct.absl::cord_internal::CordRep"*, %"struct.absl::cord_internal::CordRep"** %28, align 8
  %30 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %29, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 acquire, align 4
  %32 = ashr i32 %31, 1
  %33 = sext i32 %32 to i64
  %34 = mul i64 %14, %33
  %35 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %29, i64 0, i32 2
  %36 = load i8, i8* %35, align 4
  %37 = icmp eq i8 %36, 2
  br i1 %37, label %12, label %38

38:                                               ; preds = %12, %4
  %39 = phi i64 [ %2, %4 ], [ %34, %12 ]
  %40 = phi %"struct.absl::cord_internal::CordRep"* [ %1, %4 ], [ %29, %12 ]
  %41 = phi i8 [ %6, %4 ], [ %36, %12 ]
  %42 = icmp ugt i8 %41, 3
  br i1 %42, label %43, label %88

43:                                               ; preds = %38
  %44 = zext i8 %41 to i32
  %45 = icmp ult i8 %41, -127
  %46 = shl nuw nsw i32 %44, 3
  %47 = shl nuw nsw i32 %44, 5
  %48 = add nsw i32 %47, -3072
  %49 = select i1 %45, i32 %46, i32 %48
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer", %"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer"* %0, i64 0, i32 0
  %52 = load %"struct.absl::cord_internal::CordzStatistics"*, %"struct.absl::cord_internal::CordzStatistics"** %51, align 8
  %53 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %52, i64 0, i32 3
  %54 = load i64, i64* %53, align 8
  %55 = add nsw i64 %54, 1
  store i64 %55, i64* %53, align 8
  %56 = load %"struct.absl::cord_internal::CordzStatistics"*, %"struct.absl::cord_internal::CordzStatistics"** %51, align 8
  %57 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %56, i64 0, i32 4, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, 1
  store i64 %59, i64* %57, align 8
  %60 = icmp ult i32 %49, 65
  br i1 %60, label %61, label %64

61:                                               ; preds = %43
  %62 = load %"struct.absl::cord_internal::CordzStatistics"*, %"struct.absl::cord_internal::CordzStatistics"** %51, align 8
  %63 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %62, i64 0, i32 4, i32 1
  br label %84

64:                                               ; preds = %43
  %65 = icmp ult i32 %49, 129
  br i1 %65, label %66, label %69

66:                                               ; preds = %64
  %67 = load %"struct.absl::cord_internal::CordzStatistics"*, %"struct.absl::cord_internal::CordzStatistics"** %51, align 8
  %68 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %67, i64 0, i32 4, i32 2
  br label %84

69:                                               ; preds = %64
  %70 = icmp ult i32 %49, 257
  br i1 %70, label %71, label %74

71:                                               ; preds = %69
  %72 = load %"struct.absl::cord_internal::CordzStatistics"*, %"struct.absl::cord_internal::CordzStatistics"** %51, align 8
  %73 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %72, i64 0, i32 4, i32 3
  br label %84

74:                                               ; preds = %69
  %75 = icmp ult i32 %49, 513
  br i1 %75, label %76, label %79

76:                                               ; preds = %74
  %77 = load %"struct.absl::cord_internal::CordzStatistics"*, %"struct.absl::cord_internal::CordzStatistics"** %51, align 8
  %78 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %77, i64 0, i32 4, i32 4
  br label %84

79:                                               ; preds = %74
  %80 = icmp ult i32 %49, 1025
  br i1 %80, label %81, label %103

81:                                               ; preds = %79
  %82 = load %"struct.absl::cord_internal::CordzStatistics"*, %"struct.absl::cord_internal::CordzStatistics"** %51, align 8
  %83 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %82, i64 0, i32 4, i32 5
  br label %84

84:                                               ; preds = %81, %76, %71, %66, %61
  %85 = phi i64* [ %63, %61 ], [ %68, %66 ], [ %73, %71 ], [ %78, %76 ], [ %83, %81 ]
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 1
  store i64 %87, i64* %85, align 8
  br label %103

88:                                               ; preds = %38
  %89 = icmp eq i8 %41, 1
  br i1 %89, label %90, label %112

90:                                               ; preds = %88
  %91 = getelementptr inbounds %"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer", %"class.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer"* %0, i64 0, i32 0
  %92 = load %"struct.absl::cord_internal::CordzStatistics"*, %"struct.absl::cord_internal::CordzStatistics"** %91, align 8
  %93 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %92, i64 0, i32 3
  %94 = load i64, i64* %93, align 8
  %95 = add nsw i64 %94, 1
  store i64 %95, i64* %93, align 8
  %96 = load %"struct.absl::cord_internal::CordzStatistics"*, %"struct.absl::cord_internal::CordzStatistics"** %91, align 8
  %97 = getelementptr inbounds %"struct.absl::cord_internal::CordzStatistics", %"struct.absl::cord_internal::CordzStatistics"* %96, i64 0, i32 4, i32 6
  %98 = load i64, i64* %97, align 8
  %99 = add i64 %98, 1
  store i64 %99, i64* %97, align 8
  %100 = getelementptr inbounds %"struct.absl::cord_internal::CordRep", %"struct.absl::cord_internal::CordRep"* %40, i64 0, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 40
  br label %103

103:                                              ; preds = %79, %84, %90
  %104 = phi i64 [ %102, %90 ], [ %50, %84 ], [ %50, %79 ]
  %105 = udiv i64 %104, %39
  %106 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage"* %3 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8
  %108 = insertelement <2 x i64> undef, i64 %104, i32 0
  %109 = insertelement <2 x i64> %108, i64 %105, i32 1
  %110 = add <2 x i64> %107, %109
  %111 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::MemoryUsage"* %3 to <2 x i64>*
  store <2 x i64> %110, <2 x i64>* %111, align 8
  br label %112

112:                                              ; preds = %103, %88
  %113 = phi %"struct.absl::cord_internal::CordRep"* [ %40, %88 ], [ null, %103 ]
  %114 = phi i64 [ %39, %88 ], [ 0, %103 ]
  %115 = insertvalue { %"struct.absl::cord_internal::CordRep"*, i64 } undef, %"struct.absl::cord_internal::CordRep"* %113, 0
  %116 = insertvalue { %"struct.absl::cord_internal::CordRep"*, i64 } %115, i64 %114, 1
  ret { %"struct.absl::cord_internal::CordRep"*, i64 } %116
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc nonnull dereferenceable(16) %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* @_ZN4absl23inlined_vector_internal7StorageINS_13cord_internal12_GLOBAL__N_115CordRepAnalyzer6RepRefELm47ENSt3__19allocatorIS5_EEE15EmplaceBackSlowIJRKS5_EEERS5_DpOT_(%"class.absl::inlined_vector_internal::Storage"*, %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* nocapture readonly dereferenceable(16)) unnamed_addr #10 align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8, !noalias !7
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1
  %9 = ptrtoint %"union.absl::inlined_vector_internal::Storage<absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef, 47, std::__1::allocator<absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef> >::Data"* %8 to i64
  br label %19

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"** %11 to i64*
  %13 = load i64, i64* %12, align 8, !noalias !7
  %14 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !7
  %16 = shl i64 %15, 1
  %17 = icmp ugt i64 %16, 1152921504606846975
  br i1 %17, label %18, label %19

18:                                               ; preds = %10
  tail call void @abort() #15
  unreachable

19:                                               ; preds = %7, %10
  %20 = phi i64 [ 94, %7 ], [ %16, %10 ]
  %21 = phi i64 [ %9, %7 ], [ %13, %10 ]
  %22 = lshr i64 %4, 1
  %23 = shl i64 %20, 4
  %24 = tail call i8* @_Znwm(i64 %23) #12
  %25 = bitcast i8* %24 to %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"*
  %26 = ptrtoint i8* %24 to i64
  %27 = getelementptr inbounds %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef", %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %25, i64 %22
  %28 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %27 to i8*
  %29 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false) #13
  %30 = icmp eq i64 %22, 0
  br i1 %30, label %85, label %31

31:                                               ; preds = %19
  %32 = inttoptr i64 %21 to %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"*
  %33 = inttoptr i64 %21 to i8*
  %34 = add nsw i64 %22, -1
  %35 = and i64 %22, 3
  %36 = icmp ult i64 %34, 3
  br i1 %36, label %68, label %37

37:                                               ; preds = %31
  %38 = sub nsw i64 %22, %35
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* [ %32, %37 ], [ %61, %39 ]
  %41 = phi i8* [ %33, %37 ], [ %63, %39 ]
  %42 = phi i64 [ 0, %37 ], [ %62, %39 ]
  %43 = phi i64 [ %38, %37 ], [ %64, %39 ]
  %44 = getelementptr inbounds %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef", %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %25, i64 %42
  %45 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %44 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %41, i64 16, i1 false) #13
  %46 = getelementptr inbounds %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef", %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %40, i64 1
  %47 = or i64 %42, 1
  %48 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %46 to i8*
  %49 = getelementptr inbounds %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef", %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %25, i64 %47
  %50 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %48, i64 16, i1 false) #13
  %51 = getelementptr inbounds %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef", %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %40, i64 2
  %52 = or i64 %42, 2
  %53 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %51 to i8*
  %54 = getelementptr inbounds %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef", %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %25, i64 %52
  %55 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %53, i64 16, i1 false) #13
  %56 = getelementptr inbounds %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef", %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %40, i64 3
  %57 = or i64 %42, 3
  %58 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %56 to i8*
  %59 = getelementptr inbounds %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef", %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %25, i64 %57
  %60 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %58, i64 16, i1 false) #13
  %61 = getelementptr inbounds %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef", %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %40, i64 4
  %62 = add nuw nsw i64 %42, 4
  %63 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %61 to i8*
  %64 = add i64 %43, -4
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %39

66:                                               ; preds = %39
  %67 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %61 to i8*
  br label %68

68:                                               ; preds = %66, %31
  %69 = phi %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* [ %32, %31 ], [ %61, %66 ]
  %70 = phi i8* [ %33, %31 ], [ %67, %66 ]
  %71 = phi i64 [ 0, %31 ], [ %62, %66 ]
  %72 = icmp eq i64 %35, 0
  br i1 %72, label %85, label %73

73:                                               ; preds = %68, %73
  %74 = phi %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* [ %80, %73 ], [ %69, %68 ]
  %75 = phi i8* [ %82, %73 ], [ %70, %68 ]
  %76 = phi i64 [ %81, %73 ], [ %71, %68 ]
  %77 = phi i64 [ %83, %73 ], [ %35, %68 ]
  %78 = getelementptr inbounds %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef", %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %25, i64 %76
  %79 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %75, i64 16, i1 false) #13
  %80 = getelementptr inbounds %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef", %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %74, i64 1
  %81 = add nuw nsw i64 %76, 1
  %82 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %80 to i8*
  %83 = add i64 %77, -1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %73, !llvm.loop !10

85:                                               ; preds = %68, %73, %19
  br i1 %6, label %91, label %86

86:                                               ; preds = %85
  %87 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %88 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"** %87 to i8**
  %89 = load i8*, i8** %88, align 8
  tail call void @_ZdlPv(i8* %89) #12
  %90 = load i64, i64* %3, align 8
  br label %91

91:                                               ; preds = %86, %85
  %92 = phi i64 [ %90, %86 ], [ %4, %85 ]
  %93 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 0
  %94 = bitcast %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"** %93 to i64*
  store i64 %26, i64* %94, align 8
  %95 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage", %"class.absl::inlined_vector_internal::Storage"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %20, i64* %95, align 8
  %96 = or i64 %92, 1
  %97 = add i64 %96, 2
  store i64 %97, i64* %3, align 8
  ret %"struct.absl::cord_internal::(anonymous namespace)::CordRepAnalyzer::RepRef"* %27
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { cold nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN4absl23inlined_vector_internal7StorageINS_13cord_internal12_GLOBAL__N_115CordRepAnalyzer6RepRefELm47ENSt3__19allocatorIS5_EEE15MakeStorageViewEv: argument 0"}
!6 = distinct !{!6, !"_ZN4absl23inlined_vector_internal7StorageINS_13cord_internal12_GLOBAL__N_115CordRepAnalyzer6RepRefELm47ENSt3__19allocatorIS5_EEE15MakeStorageViewEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN4absl23inlined_vector_internal7StorageINS_13cord_internal12_GLOBAL__N_115CordRepAnalyzer6RepRefELm47ENSt3__19allocatorIS5_EEE15MakeStorageViewEv: argument 0"}
!9 = distinct !{!9, !"_ZN4absl23inlined_vector_internal7StorageINS_13cord_internal12_GLOBAL__N_115CordRepAnalyzer6RepRefELm47ENSt3__19allocatorIS5_EEE15MakeStorageViewEv"}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
