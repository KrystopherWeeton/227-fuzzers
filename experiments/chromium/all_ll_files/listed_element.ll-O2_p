; ModuleID = '../../third_party/blink/renderer/core/html/forms/listed_element.cc'
source_filename = "../../third_party/blink/renderer/core/html/forms/listed_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.17 }
%class.scoped_refptr.17 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.148", i32, [4 x i8], %"class.std::__1::unique_ptr.284", %"class.std::__1::unique_ptr.284", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.294", %"class.std::__1::unique_ptr.300", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.312", %"class.std::__1::unique_ptr.318", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.325", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.199", %"class.std::__1::unique_ptr.206", %"class.std::__1::unique_ptr.213", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.227", %"class.std::__1::unique_ptr.234", %"class.std::__1::unique_ptr.241", %"class.std::__1::unique_ptr.264", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.184" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__atomic_base.186" }
%"struct.std::__1::__atomic_base.186" = type { %"struct.std::__1::__cxx_atomic_impl.187" }
%"struct.std::__1::__cxx_atomic_impl.187" = type { %"struct.std::__1::__cxx_atomic_base_impl.188" }
%"struct.std::__1::__cxx_atomic_base_impl.188" = type { i64 }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::Worklist.195"* }
%"class.blink::Worklist.195" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.184" }
%"class.std::__1::unique_ptr.199" = type { %"class.std::__1::__compressed_pair.200" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.blink::Worklist.202"* }
%"class.blink::Worklist.202" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.184" }
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::Worklist.209"* }
%"class.blink::Worklist.209" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.184" }
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.blink::Worklist.216"* }
%"class.blink::Worklist.216" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.184" }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.blink::Worklist.223"* }
%"class.blink::Worklist.223" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.184" }
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.blink::Worklist.230"* }
%"class.blink::Worklist.230" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.184" }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::Worklist.237"* }
%"class.blink::Worklist.237" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.184" }
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.244", %"class.std::__1::__compressed_pair.251", %"class.std::__1::__compressed_pair.256", %"class.std::__1::__compressed_pair.258", [4 x i8] }>
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246", %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { i64 }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { float }
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.267", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.267" = type { %"class.std::__1::__compressed_pair.268" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.276" }
%"class.WTF::Vector.276" = type { %"class.WTF::VectorBuffer.277" }
%"class.WTF::VectorBuffer.277" = type { %"class.WTF::VectorBufferBase.278" }
%"class.WTF::VectorBufferBase.278" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.292" }
%"class.WTF::VectorBuffer.292" = type { %"class.WTF::VectorBufferBase.293" }
%"class.WTF::VectorBufferBase.293" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.306" }
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.195"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.202"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.209"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.216"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.223"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.585" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.324 }
%class.scoped_refptr.324 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.325" = type { %"struct.std::__1::__atomic_base.326" }
%"struct.std::__1::__atomic_base.326" = type { %"struct.std::__1::__cxx_atomic_impl.327" }
%"struct.std::__1::__cxx_atomic_impl.327" = type { %"struct.std::__1::__cxx_atomic_base_impl.328" }
%"struct.std::__1::__cxx_atomic_base_impl.328" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.136", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.136" = type { %"class.base::RefCounted.137" }
%"class.base::RefCounted.137" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.140" }
%"class.blink::HeapHashMap.140" = type { %"class.WTF::HashMap.143" }
%"class.WTF::HashMap.143" = type { %"class.WTF::HashTable.144" }
%"class.WTF::HashTable.144" = type <{ %"struct.WTF::KeyValuePair.146"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.146" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.147" }
%"class.blink::MemberBase.147" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.101" }
%"struct.std::__1::atomic.101" = type { %"struct.std::__1::__atomic_base.102" }
%"struct.std::__1::__atomic_base.102" = type { %"struct.std::__1::__atomic_base.103" }
%"struct.std::__1::__atomic_base.103" = type { %"struct.std::__1::__cxx_atomic_impl.104" }
%"struct.std::__1::__cxx_atomic_impl.104" = type { %"struct.std::__1::__cxx_atomic_base_impl.105" }
%"struct.std::__1::__cxx_atomic_base_impl.105" = type { i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::ListedElement" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member", %"class.blink::Member.5", %"class.blink::Member.48", %"class.WTF::String", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type { %"class.blink::IdTargetObserver", %"class.blink::Member.3" }
%"class.blink::IdTargetObserver" = type { i32 (...)**, %"class.blink::Member.0", %"class.WTF::AtomicString" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::ListedElement"* }
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::HTMLFormElement"* }
%"class.blink::HTMLFormElement" = type { %"class.blink::HTMLElement", %"class.blink::FormSubmission::Attributes", %"class.blink::Member.29", %"class.blink::RadioButtonGroupScope", %"class.blink::HeapVector", %"class.blink::HeapVector.40", i32, i8, i8, i8, i8 }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.18" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.9", %"class.blink::Member.9" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.9", %"class.blink::Member.11", %"class.blink::Member.9", %"class.blink::Member.9", %"class.blink::Member.13" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.11" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.50", %"class.blink::Member.52", %"class.blink::Member.11", %"class.blink::Member.54", %"class.blink::Member.54", %"class.blink::Member.0", %"class.blink::Member.75", %"class.blink::Member.77", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.79", %"class.blink::HeapVector.81" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.97", %"class.WTF::Vector.97", i8, i32, %"class.blink::Member.108", %"class.blink::Member.110", %"class.blink::Member.112", %"class.blink::Member.114", %"class.blink::Member.116", %"class.blink::Member.118", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.121", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.127", %"class.blink::Member.129", %"class.blink::Member.87", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.132", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.68", %"class.blink::Member.66", %"class.blink::Member.341", %"class.blink::Member.66", %"class.blink::Member.66", %"class.blink::Member.66", %"class.blink::UserActionElementSet", %"class.blink::Member.350", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.357", i16, i8, %"class.blink::Member.364", %"class.blink::Member.366", %"class.blink::Member.368", %"class.blink::Member.370", %"class.blink::TextLinkColors", %"class.blink::Member.392", i8, [7 x i8], %"class.blink::HeapHashMap.394", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.66", %"class.WTF::Vector.401", %"class.blink::Member.406", %"class.blink::Member.408", i8, %"class.blink::Member.66", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.410", %"class.blink::HeapVector.412", %"class.std::__1::unique_ptr.420", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.426", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.439", %"class.WTF::Vector.441", i8, i8, %"class.std::__1::unique_ptr.446", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.68", %"class.blink::HeapVector.452", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.460", i8, i32, %"class.blink::Member.462", %"class.blink::Member.464", %"class.blink::Member.466", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.468", %"class.WTF::HashMap.470", %"class.blink::Member.475", %"class.blink::Member.477", %"class.blink::Member.479", %"class.blink::Member.481", %"class.blink::Member.52", %"class.blink::Member.52", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.483", i8, i32, %"class.blink::Member.490", %"class.blink::Member.492", i32, %"class.blink::Member.494", %"class.blink::Member.496", %"class.blink::Member.498", %"class.std::__1::unique_ptr.500", i64, %"class.std::__1::unique_ptr.506", i32, i32, %"class.blink::Member.521", %"class.blink::Member.523", %"class.blink::Member.525", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.527", %"class.WTF::Vector.529", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.534", %"class.blink::Member.541", %"class.std::__1::unique_ptr.543", %"class.blink::Member.549", i8, i8, %"class.WTF::String", %"class.blink::Member.551", i8, [7 x i8], %"class.blink::HeapHashMap.553", %"class.blink::HeapObserverSet", %"class.blink::Member.567", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.569", i32, i8, i8, %"class.blink::WeakMember.571", %"class.blink::Member.572" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.90" }
%"class.blink::HeapHashMap.90" = type { %"class.WTF::HashMap.93" }
%"class.WTF::HashMap.93" = type { %"class.WTF::HashTable.94" }
%"class.WTF::HashTable.94" = type <{ %"struct.WTF::KeyValuePair.96"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.96" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.97" = type { %"class.WTF::VectorBuffer.98" }
%"class.WTF::VectorBuffer.98" = type { %"class.WTF::VectorBufferBase.99" }
%"class.WTF::VectorBufferBase.99" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.100 }
%class.scoped_refptr.100 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.101" }
%"class.blink::Member.108" = type { %"class.blink::MemberBase.109" }
%"class.blink::MemberBase.109" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.110" = type { %"class.blink::MemberBase.111" }
%"class.blink::MemberBase.111" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.590", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.666", i32, i8, [3 x i8], %"class.blink::HeapVector.668", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.676", %"class.blink::Member.678", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.687", %"class.blink::Member.815", %"class.blink::Member.817", i8, [7 x i8] }>
%"class.blink::Supplementable.590" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.591" }
%"class.blink::HeapHashMap.591" = type { %"class.WTF::HashMap.594" }
%"class.WTF::HashMap.594" = type { %"class.WTF::HashTable.595" }
%"class.WTF::HashTable.595" = type <{ %"struct.WTF::KeyValuePair.597"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.597" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.606" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.598" }
%"class.blink::HeapObserverSet.598" = type { i32, [4 x i8], %"class.blink::HeapHashSet.599" }
%"class.blink::HeapHashSet.599" = type { %"class.WTF::HashSet.602" }
%"class.WTF::HashSet.602" = type { %"class.WTF::HashTable.603" }
%"class.WTF::HashTable.603" = type <{ %"class.blink::WeakMember.605"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.605" = type opaque
%"class.blink::Supplementable.606" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.607" }
%"class.blink::HeapHashMap.607" = type { %"class.WTF::HashMap.610" }
%"class.WTF::HashMap.610" = type { %"class.WTF::HashTable.611" }
%"class.WTF::HashTable.611" = type <{ %"struct.WTF::KeyValuePair.613"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.613" = type { i8*, %"class.blink::Member.2766" }
%"class.blink::Member.2766" = type { %"class.blink::MemberBase.2767" }
%"class.blink::MemberBase.2767" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2768" }
%"class.blink::Member.2768" = type { %"class.blink::MemberBase.2769" }
%"class.blink::MemberBase.2769" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.614, %"class.std::__1::unique_ptr.618", %"class.std::__1::unique_ptr.618", %"class.std::__1::unique_ptr.648", %"class.std::__1::unique_ptr.648", %"class.blink::Member.110", i32, [4 x i8], %"class.WTF::HashSet.662", i32, i32 }
%class.scoped_refptr.614 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.615", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.617 }
%"class.WTF::RefCounted.615" = type { %"class.base::RefCounted.616" }
%"class.base::RefCounted.616" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.617 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.618" = type { %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.635", %"class.std::__1::map.644"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.622" }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.623 }
%union.anon.623 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.627", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.627" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"struct.std::__1::__compressed_pair_elem.628" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"class.std::__1::map.635" = type { %"class.std::__1::__tree.636" }
%"class.std::__1::__tree.636" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.637", %"class.std::__1::__compressed_pair.641" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"class.std::__1::map.644" = type opaque
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.651" }
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"struct.std::__1::pair.653"*, %"struct.std::__1::pair.653"*, %"class.std::__1::__compressed_pair.654" }
%"struct.std::__1::pair.653" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"struct.std::__1::pair.653"* }
%"class.WTF::HashSet.662" = type { %"class.WTF::HashTable.663" }
%"class.WTF::HashTable.663" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.666" = type { %"class.blink::MemberBase.667" }
%"class.blink::MemberBase.667" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.668" = type { %"class.WTF::Vector.671" }
%"class.WTF::Vector.671" = type { %"class.WTF::VectorBuffer.672" }
%"class.WTF::VectorBuffer.672" = type { %"class.WTF::VectorBufferBase.673" }
%"class.WTF::VectorBufferBase.673" = type { %"class.blink::Member.674"*, i32, i32 }
%"class.blink::Member.674" = type opaque
%"class.blink::Member.676" = type { %"class.blink::MemberBase.677" }
%"class.blink::MemberBase.677" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.680", i32, i32 }
%"class.blink::HeapHashMap.680" = type { %"class.WTF::HashMap.683" }
%"class.WTF::HashMap.683" = type { %"class.WTF::HashTable.684" }
%"class.WTF::HashTable.684" = type <{ %"struct.WTF::KeyValuePair.686"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.686" = type opaque
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.690" }
%"class.std::__1::unique_ptr.690" = type { %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.693" }
%"class.WTF::Vector.693" = type { %"class.WTF::VectorBuffer.694" }
%"class.WTF::VectorBuffer.694" = type { %"class.WTF::VectorBufferBase.695" }
%"class.WTF::VectorBufferBase.695" = type { %"class.mojo::StructPtr.696"*, i32, i32 }
%"class.mojo::StructPtr.696" = type { %"class.std::__1::unique_ptr.697" }
%"class.std::__1::unique_ptr.697" = type { %"class.std::__1::__compressed_pair.698" }
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.699" }
%"struct.std::__1::__compressed_pair_elem.699" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.700", %"class.WTF::HashMap.707", %"class.WTF::HashMap.712", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.717", i32, %"class.mojo::StructPtr.722", %"class.WTF::Vector.717" }
%"class.mojo::StructPtr.700" = type { %"class.std::__1::unique_ptr.701" }
%"class.std::__1::unique_ptr.701" = type { %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.707" = type { %"class.WTF::HashTable.708" }
%"class.WTF::HashTable.708" = type <{ %"struct.WTF::KeyValuePair.711"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.711" = type opaque
%"class.WTF::HashMap.712" = type { %"class.WTF::HashTable.713" }
%"class.WTF::HashTable.713" = type <{ %"struct.WTF::KeyValuePair.716"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.716" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.722" = type { %"class.std::__1::unique_ptr.723" }
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.717", i8, i8, [6 x i8] }>
%"class.WTF::Vector.717" = type { %"class.WTF::VectorBuffer.718" }
%"class.WTF::VectorBuffer.718" = type { %"class.WTF::VectorBufferBase.719" }
%"class.WTF::VectorBufferBase.719" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.806" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.737", i32 }>
%"class.std::__1::unique_ptr.737" = type { %"class.std::__1::__compressed_pair.738" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.739" }
%"struct.std::__1::__compressed_pair_elem.739" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.740", %"class.absl::optional.741", %"class.absl::optional.746", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.759", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.781", %"class.std::__1::map.792", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.801", i8, %class.scoped_refptr.751, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.802" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.740" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.741" = type { %"class.absl::optional_internal::optional_data.742" }
%"class.absl::optional_internal::optional_data.742" = type { %"class.absl::optional_internal::optional_data_base.743" }
%"class.absl::optional_internal::optional_data_base.743" = type { %"class.absl::optional_internal::optional_data_dtor_base.744" }
%"class.absl::optional_internal::optional_data_dtor_base.744" = type { i8, %union.anon.745 }
%union.anon.745 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.746" = type { %"class.absl::optional_internal::optional_data.747" }
%"class.absl::optional_internal::optional_data.747" = type { %"class.absl::optional_internal::optional_data_base.748" }
%"class.absl::optional_internal::optional_data_base.748" = type { %"class.absl::optional_internal::optional_data_dtor_base.749" }
%"class.absl::optional_internal::optional_data_dtor_base.749" = type { i8, %union.anon.750 }
%union.anon.750 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.751, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.752" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.752" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.333 }
%class.scoped_refptr.333 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.334", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.334" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.335" }
%"struct.std::__1::atomic.335" = type { %"struct.std::__1::__atomic_base.336" }
%"struct.std::__1::__atomic_base.336" = type { %"struct.std::__1::__atomic_base.337" }
%"struct.std::__1::__atomic_base.337" = type { %"struct.std::__1::__cxx_atomic_impl.338" }
%"struct.std::__1::__cxx_atomic_impl.338" = type { %"struct.std::__1::__cxx_atomic_base_impl.339" }
%"struct.std::__1::__cxx_atomic_base_impl.339" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.757 }
%class.scoped_refptr.757 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.819", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.751, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.819" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.758 }
%class.scoped_refptr.758 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.762", %class.scoped_refptr.763 }
%"class.base::RepeatingCallback.762" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.763 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.764", [4 x i8] }>
%"class.base::RefCountedThreadSafe.764" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.768", %"class.std::__1::unique_ptr.774", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.780" }
%"class.std::__1::unique_ptr.768" = type { %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.774" = type { %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.780" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.781" = type { %"class.std::__1::__tree.782" }
%"class.std::__1::__tree.782" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.783", %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"class.std::__1::map.792" = type { %"class.std::__1::__tree.793" }
%"class.std::__1::__tree.793" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.794", %"class.std::__1::__compressed_pair.798" }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"class.base::OnceCallback.801" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.751 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.332" }>
%"class.base::RefCountedThreadSafe.332" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.802" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.806" = type { %"class.std::__1::__compressed_pair.807" }
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.808" }
%"struct.std::__1::__compressed_pair_elem.808" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.815" = type { %"class.blink::MemberBase.816" }
%"class.blink::MemberBase.816" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.112" = type { %"class.blink::MemberBase.113" }
%"class.blink::MemberBase.113" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.114" = type { %"class.blink::MemberBase.115" }
%"class.blink::MemberBase.115" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.116" = type { %"class.blink::MemberBase.117" }
%"class.blink::MemberBase.117" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.118" = type { %"class.blink::MemberBase.119" }
%"class.blink::MemberBase.119" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.127" = type { %"class.blink::MemberBase.128" }
%"class.blink::MemberBase.128" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.129" = type { %"class.blink::MemberBase.130" }
%"class.blink::MemberBase.130" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.87" = type { %"class.blink::MemberBase.88" }
%"class.blink::MemberBase.88" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.131 }
%class.scoped_refptr.131 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.132" = type { %"class.WTF::VectorBuffer.133" }
%"class.WTF::VectorBuffer.133" = type { %"class.WTF::VectorBufferBase.134" }
%"class.WTF::VectorBufferBase.134" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.135 }
%class.scoped_refptr.135 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.341" = type { %"class.blink::MemberBase.342" }
%"class.blink::MemberBase.342" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.343" }
%"class.blink::HeapHashMap.343" = type { %"class.WTF::HashMap.346" }
%"class.WTF::HashMap.346" = type { %"class.WTF::HashTable.347" }
%"class.WTF::HashTable.347" = type <{ %"struct.WTF::KeyValuePair.349"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.349" = type opaque
%"class.blink::Member.350" = type { %"class.blink::MemberBase.351" }
%"class.blink::MemberBase.351" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.354" }
%"class.WTF::HashTable.354" = type <{ %"class.blink::WeakMember.356"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.356" = type opaque
%"class.blink::HeapHashSet.357" = type { %"class.WTF::HashSet.360" }
%"class.WTF::HashSet.360" = type { %"class.WTF::HashTable.361" }
%"class.WTF::HashTable.361" = type <{ %"class.blink::WeakMember.363"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.363" = type opaque
%"class.blink::Member.364" = type { %"class.blink::MemberBase.365" }
%"class.blink::MemberBase.365" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.366" = type { %"class.blink::MemberBase.367" }
%"class.blink::MemberBase.367" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.368" = type { %"class.blink::MemberBase.369" }
%"class.blink::MemberBase.369" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type <{ %"class.blink::Member.52", %"class.blink::Member.374", %"class.WTF::HashMap.385", %"class.blink::Member.390", i8, [7 x i8] }>
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type <{ %"class.blink::Member.52", %"class.blink::HeapVector.378", i8, [7 x i8] }>
%"class.blink::HeapVector.378" = type { %"class.WTF::Vector.381" }
%"class.WTF::Vector.381" = type { %"class.WTF::VectorBuffer.382" }
%"class.WTF::VectorBuffer.382" = type { %"class.WTF::VectorBufferBase.38", [512 x i8] }
%"class.WTF::VectorBufferBase.38" = type { %"class.blink::Member.3"*, i32, i32 }
%"class.WTF::HashMap.385" = type { %"class.WTF::HashTable.386" }
%"class.WTF::HashTable.386" = type <{ %"struct.WTF::KeyValuePair.389"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.389" = type opaque
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::FormKeyGenerator"* }
%"class.blink::FormKeyGenerator" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.394" = type { %"class.WTF::HashMap.397" }
%"class.WTF::HashMap.397" = type { %"class.WTF::HashTable.398" }
%"class.WTF::HashTable.398" = type <{ %"struct.WTF::KeyValuePair.400"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.400" = type opaque
%"class.WTF::Vector.401" = type { %"class.WTF::VectorBuffer.402" }
%"class.WTF::VectorBuffer.402" = type { %"class.WTF::VectorBufferBase.403" }
%"class.WTF::VectorBufferBase.403" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.66" = type { %"class.blink::MemberBase.67" }
%"class.blink::MemberBase.67" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.412" = type { %"class.WTF::Vector.415" }
%"class.WTF::Vector.415" = type { %"class.WTF::VectorBuffer.416" }
%"class.WTF::VectorBuffer.416" = type { %"class.WTF::VectorBufferBase.417" }
%"class.WTF::VectorBufferBase.417" = type { %"class.blink::Member.418"*, i32, i32 }
%"class.blink::Member.418" = type opaque
%"class.std::__1::unique_ptr.420" = type { %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.426" = type { %"class.WTF::HashSet.429" }
%"class.WTF::HashSet.429" = type { %"class.WTF::HashTable.430" }
%"class.WTF::HashTable.430" = type <{ %"class.blink::WeakMember.432"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.432" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.433", i32, [4 x i8] }>
%"class.WTF::Vector.433" = type { %"class.WTF::VectorBuffer.434" }
%"class.WTF::VectorBuffer.434" = type { %"class.WTF::VectorBufferBase.435" }
%"class.WTF::VectorBufferBase.435" = type { %"struct.std::__1::pair.436"*, i32, i32 }
%"struct.std::__1::pair.436" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.441" = type { %"class.WTF::VectorBuffer.442" }
%"class.WTF::VectorBuffer.442" = type { %"class.WTF::VectorBufferBase.443" }
%"class.WTF::VectorBufferBase.443" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.68" = type { %"class.WTF::Vector.71" }
%"class.WTF::Vector.71" = type { %"class.WTF::VectorBuffer.72" }
%"class.WTF::VectorBuffer.72" = type { %"class.WTF::VectorBufferBase.73" }
%"class.WTF::VectorBufferBase.73" = type { %"class.blink::Member.66"*, i32, i32 }
%"class.blink::HeapVector.452" = type { %"class.WTF::Vector.455" }
%"class.WTF::Vector.455" = type { %"class.WTF::VectorBuffer.456" }
%"class.WTF::VectorBuffer.456" = type { %"class.WTF::VectorBufferBase.457" }
%"class.WTF::VectorBufferBase.457" = type { %"class.blink::Member.458"*, i32, i32 }
%"class.blink::Member.458" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.52" }
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.470" = type { %"class.WTF::HashTable.471" }
%"class.WTF::HashTable.471" = type <{ %"struct.WTF::KeyValuePair.474"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.474" = type opaque
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.477" = type { %"class.blink::MemberBase.478" }
%"class.blink::MemberBase.478" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.479" = type { %"class.blink::MemberBase.480" }
%"class.blink::MemberBase.480" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.481" = type { %"class.blink::MemberBase.482" }
%"class.blink::MemberBase.482" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.340", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.331, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.331 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.340" = type { %"class.blink::MemberBase.53" }
%"class.blink::HeapHashSet.483" = type { %"class.WTF::HashSet.486" }
%"class.WTF::HashSet.486" = type { %"class.WTF::HashTable.487" }
%"class.WTF::HashTable.487" = type <{ %"class.blink::Member.489"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.489" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.509", %"class.WTF::HashSet.509", %"class.WTF::HashSet.509", %"class.WTF::HashSet.509", %"class.WTF::HashSet.509", %"class.WTF::HashSet.509", i32, [4 x i8], %"class.WTF::HashMap.513", %"class.WTF::HashMap.513", %"class.WTF::HashMap.513", %"class.WTF::HashMap.513", %"class.WTF::HashMap.513", %"class.WTF::HashMap.513", %"class.WTF::HashMap.513", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.509" = type { %"class.WTF::HashTable.510" }
%"class.WTF::HashTable.510" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.513" = type { %"class.WTF::HashTable.514" }
%"class.WTF::HashTable.514" = type <{ %"struct.WTF::KeyValuePair.517"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.517" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.534" = type { %"class.WTF::HashMap.537" }
%"class.WTF::HashMap.537" = type { %"class.WTF::HashTable.538" }
%"class.WTF::HashTable.538" = type <{ %"struct.WTF::KeyValuePair.540"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.540" = type opaque
%"class.blink::Member.541" = type { %"class.blink::MemberBase.542" }
%"class.blink::MemberBase.542" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.543" = type { %"class.std::__1::__compressed_pair.544" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.553" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.559"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.559" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.560" }
%"class.blink::HeapHashSet.560" = type { %"class.WTF::HashSet.563" }
%"class.WTF::HashSet.563" = type { %"class.WTF::HashTable.564" }
%"class.WTF::HashTable.564" = type <{ %"class.blink::WeakMember.566"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.566" = type opaque
%"class.blink::Member.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.569" = type { %"class.blink::MemberBase.570" }
%"class.blink::MemberBase.570" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.52", %"class.blink::HeapHashSet.576", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.583", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.576" = type { %"class.WTF::HashSet.579" }
%"class.WTF::HashSet.579" = type { %"class.WTF::HashTable.580" }
%"class.WTF::HashTable.580" = type <{ %"class.blink::Member.582"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.582" = type opaque
%"class.blink::HeapTaskRunnerTimer.583" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.584", { i64, i64 } }
%"class.blink::WeakMember.584" = type { %"class.blink::MemberBase.570" }
%"class.blink::WeakMember.571" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::Node"* }
%"class.blink::Member.572" = type { %"class.blink::MemberBase.573" }
%"class.blink::MemberBase.573" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.58" }
%"class.blink::HeapHashMap.58" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.62" }
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.66", i32, %"class.blink::HeapVector.68" }
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.81" = type { %"class.WTF::Vector.84" }
%"class.WTF::Vector.84" = type { %"class.WTF::VectorBuffer.85" }
%"class.WTF::VectorBuffer.85" = type { %"class.WTF::VectorBufferBase.86" }
%"class.WTF::VectorBufferBase.86" = type { %"class.blink::Member.87"*, i32, i32 }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.22", %"class.blink::Member.24", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.22" = type { %"class.WTF::SingleThreadedBitField.23" }
%"class.WTF::SingleThreadedBitField.23" = type { i32 }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.26 }
%class.scoped_refptr.26 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.27", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.27" = type { %"class.base::RefCounted.28" }
%"class.base::RefCounted.28" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::FormSubmission::Attributes" = type { i32, i8, %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String" }
%"class.blink::Member.29" = type { %"class.blink::MemberBase.30" }
%"class.blink::MemberBase.30" = type { %"class.blink::HeapHashMap"* }
%"class.blink::HeapHashMap" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.31" }
%"class.blink::Member.31" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::HeapHashMap.33"* }
%"class.blink::HeapHashMap.33" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.36" }
%"class.WTF::Vector.36" = type { %"class.WTF::VectorBuffer.37" }
%"class.WTF::VectorBuffer.37" = type { %"class.WTF::VectorBufferBase.38" }
%"class.blink::HeapVector.40" = type { %"class.WTF::Vector.43" }
%"class.WTF::Vector.43" = type { %"class.WTF::VectorBuffer.44" }
%"class.WTF::VectorBuffer.44" = type { %"class.WTF::VectorBufferBase.45" }
%"class.WTF::VectorBufferBase.45" = type { %"class.blink::Member.46"*, i32, i32 }
%"class.blink::Member.46" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.3" }
%"class.blink::HTMLObjectElement" = type <{ %"class.blink::HTMLPlugInElement.base", [7 x i8], %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::HTMLPlugInElement.base" = type <{ %"class.blink::HTMLFrameOwnerElement.base", [6 x i8], %"class.blink::ActiveScriptWrappable", %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.blink::Member.2758", i8, [7 x i8], %"class.v8::Global", i8, i8, [6 x i8], %"class.blink::Member.2186", i8 }>
%"class.blink::HTMLFrameOwnerElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::FrameOwner", %"class.blink::Member.1437", %"class.blink::Member.2754", %"struct.blink::FramePolicy", %"class.blink::Member.2756", i8, i8 }>
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1437" = type { %"class.blink::MemberBase.1438" }
%"class.blink::MemberBase.1438" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1443", %"class.blink::Member.1541", %"class.blink::Member.1543", i8, i32, i8, i32, %"class.blink::Member.1676", %"class.blink::Member.1566", %"class.blink::FrameLifecycle", %"class.blink::Member.1437", %"class.blink::Member.1437", %"class.blink::Member.1437", %"class.blink::Member.1437", %"class.blink::Member.1437", %"class.blink::Member.1437", %"class.blink::Member.1680", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map.1682", %"class.blink::Member.1692", i8, %"class.base::UnguessableToken", %"class.absl::optional.1694", %"class.absl::optional.1699", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1437", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1443" = type { %"class.blink::MemberBase.1444" }
%"class.blink::MemberBase.1444" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.1423", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.1437", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.1439", %"class.blink::Member.1445", %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", %"class.blink::Member.1453", %"class.blink::Member.1455", %"class.blink::Member.1457", %"class.blink::HeapObserverSet.1459", %"class.blink::Member.1467", %"class.blink::Member.1469", %"class.blink::Member.1471", %"class.blink::Member.1473", %"class.blink::Member.1475", %"class.blink::Member.1477", %"class.blink::Member.1479", %"class.blink::Member.1481", %"class.blink::Member.1483", %"class.blink::Member.1485", %"class.blink::Member.1487", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.1512", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.1519", %"class.blink::Member.1443", %"class.blink::Member.1443", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.1527", %"class.std::__1::unique_ptr.1533", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.1423" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1424" }
%"class.blink::HeapHashMap.1424" = type { %"class.WTF::HashMap.1427" }
%"class.WTF::HashMap.1427" = type { %"class.WTF::HashTable.1428" }
%"class.WTF::HashTable.1428" = type <{ %"struct.WTF::KeyValuePair.1430"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1430" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.1431" }
%"class.std::__1::unique_ptr.1431" = type { %"class.std::__1::__compressed_pair.1432" }
%"class.std::__1::__compressed_pair.1432" = type { %"struct.std::__1::__compressed_pair_elem.1433" }
%"struct.std::__1::__compressed_pair_elem.1433" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.1439" = type { %"class.blink::MemberBase.1440" }
%"class.blink::MemberBase.1440" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.1443", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.1445" = type { %"class.blink::MemberBase.1446" }
%"class.blink::MemberBase.1446" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.1455" = type { %"class.blink::MemberBase.1456" }
%"class.blink::MemberBase.1456" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.1459" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1460" }
%"class.blink::HeapHashSet.1460" = type { %"class.WTF::HashSet.1463" }
%"class.WTF::HashSet.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"class.blink::WeakMember.1466"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.1469" = type { %"class.blink::MemberBase.1470" }
%"class.blink::MemberBase.1470" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.1471" = type { %"class.blink::MemberBase.1472" }
%"class.blink::MemberBase.1472" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.1473" = type { %"class.blink::MemberBase.1474" }
%"class.blink::MemberBase.1474" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.1481" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.1485" = type { %"class.blink::MemberBase.1486" }
%"class.blink::MemberBase.1486" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.1487" = type { %"class.blink::MemberBase.1488" }
%"class.blink::MemberBase.1488" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.1489" }
%"class.WTF::Deque.1489" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1492" }
%"class.WTF::VectorBuffer.1492" = type { %"class.WTF::VectorBufferBase.1493" }
%"class.WTF::VectorBufferBase.1493" = type { %"class.std::__1::unique_ptr.1494"*, i32, i32 }
%"class.std::__1::unique_ptr.1494" = type { %"class.std::__1::__compressed_pair.1495" }
%"class.std::__1::__compressed_pair.1495" = type { %"struct.std::__1::__compressed_pair_elem.1496" }
%"struct.std::__1::__compressed_pair_elem.1496" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.1500", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.1500" = type { %"class.std::__1::__bitset.1501" }
%"class.std::__1::__bitset.1501" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1502" }
%"class.absl::optional.1502" = type { %"class.absl::optional_internal::optional_data.1503" }
%"class.absl::optional_internal::optional_data.1503" = type { %"class.absl::optional_internal::optional_data_base.1504" }
%"class.absl::optional_internal::optional_data_base.1504" = type { %"class.absl::optional_internal::optional_data_dtor_base.1505" }
%"class.absl::optional_internal::optional_data_dtor_base.1505" = type { i8, %union.anon.1506 }
%union.anon.1506 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.1507", i64, %"class.absl::optional.741", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.1507" = type { %"class.absl::optional_internal::optional_data.1508" }
%"class.absl::optional_internal::optional_data.1508" = type { %"class.absl::optional_internal::optional_data_base.1509" }
%"class.absl::optional_internal::optional_data_base.1509" = type { %"class.absl::optional_internal::optional_data_dtor_base.1510" }
%"class.absl::optional_internal::optional_data_dtor_base.1510" = type { i8, %union.anon.1511 }
%union.anon.1511 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.1512" = type { %"class.std::__1::unique_ptr.1513" }
%"class.std::__1::unique_ptr.1513" = type { %"class.std::__1::__compressed_pair.1514" }
%"class.std::__1::__compressed_pair.1514" = type { %"struct.std::__1::__compressed_pair_elem.1515" }
%"struct.std::__1::__compressed_pair_elem.1515" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.1519" = type { %"class.WTF::HashSet.1522" }
%"class.WTF::HashSet.1522" = type { %"class.WTF::HashTable.1523" }
%"class.WTF::HashTable.1523" = type <{ %"class.blink::WeakMember.1525"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1525" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.1526" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.1526" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.883 }
%class.scoped_refptr.883 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::unique_ptr.1527" = type { %"class.std::__1::__compressed_pair.1528" }
%"class.std::__1::__compressed_pair.1528" = type { %"struct.std::__1::__compressed_pair_elem.1529" }
%"struct.std::__1::__compressed_pair_elem.1529" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1533" = type { %"class.std::__1::__compressed_pair.1534" }
%"class.std::__1::__compressed_pair.1534" = type { %"struct.std::__1::__compressed_pair_elem.1535" }
%"struct.std::__1::__compressed_pair_elem.1535" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::Member.1541" = type { %"class.blink::MemberBase.1542" }
%"class.blink::MemberBase.1542" = type { %"class.blink::FrameOwner"* }
%"class.blink::Member.1543" = type { %"class.blink::MemberBase.1544" }
%"class.blink::MemberBase.1544" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.1437", %"class.blink::Member.1566", %"class.blink::Member.1568", %"class.blink::Member.1570", i8, %"class.WTF::Vector.1572" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1559" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1547" }
%"class.blink::HeapVector.1547" = type { %"class.WTF::Vector.1550" }
%"class.WTF::Vector.1550" = type { %"class.WTF::VectorBuffer.1551" }
%"class.WTF::VectorBuffer.1551" = type { %"class.WTF::VectorBufferBase.1552", [32 x i8] }
%"class.WTF::VectorBufferBase.1552" = type { %"struct.std::__1::pair.1553"*, i32, i32 }
%"struct.std::__1::pair.1553" = type { %"class.WTF::AtomicString", %"class.blink::Member.1554" }
%"class.blink::Member.1554" = type { %"class.blink::MemberBase.1555" }
%"class.blink::MemberBase.1555" = type { %"class.blink::HeapVector.1556"* }
%"class.blink::HeapVector.1556" = type opaque
%"class.std::__1::unique_ptr.1559" = type { %"class.std::__1::__compressed_pair.1560" }
%"class.std::__1::__compressed_pair.1560" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"struct.std::__1::__compressed_pair_elem.1561" = type { %"class.WTF::Vector.1562"* }
%"class.WTF::Vector.1562" = type opaque
%"class.blink::Member.1568" = type { %"class.blink::MemberBase.1569" }
%"class.blink::MemberBase.1569" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.1570" = type { %"class.blink::MemberBase.1571" }
%"class.blink::MemberBase.1571" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.1572" = type { %"class.WTF::VectorBuffer.1573" }
%"class.WTF::VectorBuffer.1573" = type { %"class.WTF::VectorBufferBase.1574" }
%"class.WTF::VectorBufferBase.1574" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1668" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.1575, %"class.std::__1::unique_ptr.737", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.751, i32 }>
%class.scoped_refptr.1575 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.751, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.1634", %"class.absl::optional.1639", %"class.absl::optional.1592", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.1659", i8, [7 x i8], %class.scoped_refptr.751, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.764" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.751, %"class.std::__1::unique_ptr.1576", %"class.absl::optional.1586", %"struct.std::__1::atomic.325", i8, i8, i8, i8, i32, i32, %"class.absl::optional.1592", %"class.std::__1::unique_ptr.1597", i8, i64, %class.scoped_refptr.1631, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.1632", %"class.base::WeakPtrFactory.1633" }
%"class.std::__1::unique_ptr.1576" = type { %"class.std::__1::__compressed_pair.1577" }
%"class.std::__1::__compressed_pair.1577" = type { %"struct.std::__1::__compressed_pair_elem.1578" }
%"struct.std::__1::__compressed_pair_elem.1578" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.751, i8, %"class.mojo::ScopedHandleBase.1579", %class.scoped_refptr.1580, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1581", i8*, %"class.base::WeakPtrFactory.1582" }
%"class.mojo::ScopedHandleBase.1579" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.1580 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.1581" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1582" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1586" = type { %"class.absl::optional_internal::optional_data.1587" }
%"class.absl::optional_internal::optional_data.1587" = type { %"class.absl::optional_internal::optional_data_base.1588" }
%"class.absl::optional_internal::optional_data_base.1588" = type { %"class.absl::optional_internal::optional_data_dtor_base.1589" }
%"class.absl::optional_internal::optional_data_dtor_base.1589" = type { i8, %union.anon.1590 }
%union.anon.1590 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.1591", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.1591" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.1597" = type { %"class.std::__1::__compressed_pair.1598" }
%"class.std::__1::__compressed_pair.1598" = type { %"struct.std::__1::__compressed_pair_elem.1599" }
%"struct.std::__1::__compressed_pair_elem.1599" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.1600", i8, i64, %class.scoped_refptr.1601, %class.scoped_refptr.1626 }
%"class.base::RepeatingCallback.1600" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1601 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.1602", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.1604", %"class.std::__1::map.1615", i8, [7 x i8] }>
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.1603 }
%class.scoped_refptr.1603 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.1604" = type { %"class.std::__1::__tree.1605" }
%"class.std::__1::__tree.1605" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1606", %"class.std::__1::__compressed_pair.1610" }
%"class.std::__1::__compressed_pair.1606" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"class.std::__1::__compressed_pair.1610" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"class.std::__1::map.1615" = type { %"class.std::__1::__tree.1616" }
%"class.std::__1::__tree.1616" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1617", %"class.std::__1::__compressed_pair.1621" }
%"class.std::__1::__compressed_pair.1617" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"class.std::__1::__compressed_pair.1621" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%class.scoped_refptr.1626 = type { %"class.base::RefCountedData.1627"* }
%"class.base::RefCountedData.1627" = type opaque
%class.scoped_refptr.1631 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.1632" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.1633" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.1634" = type { %"class.absl::optional_internal::optional_data.1635" }
%"class.absl::optional_internal::optional_data.1635" = type { %"class.absl::optional_internal::optional_data_base.1636" }
%"class.absl::optional_internal::optional_data_base.1636" = type { %"class.absl::optional_internal::optional_data_dtor_base.1637" }
%"class.absl::optional_internal::optional_data_dtor_base.1637" = type { i8, %union.anon.1638 }
%union.anon.1638 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.1639" = type { %"class.absl::optional_internal::optional_data.1640" }
%"class.absl::optional_internal::optional_data.1640" = type { %"class.absl::optional_internal::optional_data_base.1641" }
%"class.absl::optional_internal::optional_data_base.1641" = type { %"class.absl::optional_internal::optional_data_dtor_base.1642" }
%"class.absl::optional_internal::optional_data_dtor_base.1642" = type { i8, [7 x i8], %union.anon.1643 }
%union.anon.1643 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.1592" = type { %"class.absl::optional_internal::optional_data.1593" }
%"class.absl::optional_internal::optional_data.1593" = type { %"class.absl::optional_internal::optional_data_base.1594" }
%"class.absl::optional_internal::optional_data_base.1594" = type { %"class.absl::optional_internal::optional_data_dtor_base.1595" }
%"class.absl::optional_internal::optional_data_dtor_base.1595" = type { i8, %union.anon.1596 }
%union.anon.1596 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.1644 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.1644 = type { %"class.std::__1::map.1647" }
%"class.std::__1::map.1647" = type { %"class.std::__1::__tree.1648" }
%"class.std::__1::__tree.1648" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1649", %"class.std::__1::__compressed_pair.1653" }
%"class.std::__1::__compressed_pair.1649" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"class.std::__1::__compressed_pair.1653" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.1658"*, i64 }
%"class.std::__1::unique_ptr.1658" = type opaque
%"class.std::__1::map.1659" = type { %"class.std::__1::__tree.1660" }
%"class.std::__1::__tree.1660" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1661", %"class.std::__1::__compressed_pair.1665" }
%"class.std::__1::__compressed_pair.1661" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"class.std::__1::__compressed_pair.1665" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.1668" = type { %"class.std::__1::__compressed_pair.1669" }
%"class.std::__1::__compressed_pair.1669" = type { %"struct.std::__1::__compressed_pair_elem.1670" }
%"struct.std::__1::__compressed_pair_elem.1670" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.1676" = type { %"class.blink::MemberBase.1677" }
%"class.blink::MemberBase.1677" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type { i32 (...)** }
%"class.blink::Member.1566" = type { %"class.blink::MemberBase.1567" }
%"class.blink::MemberBase.1567" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1680" = type { %"class.blink::MemberBase.1681" }
%"class.blink::MemberBase.1681" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1711", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1719", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1733", %"class.blink::FrameLoader", %"class.blink::Member.1754", %"class.blink::Member.66", %"class.blink::Member.1756", %"class.blink::Member.1758", %"class.blink::Member.1760", %"class.blink::Member.1762", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1764", %class.scoped_refptr.1984, %"class.blink::Member.1985", %"class.blink::Member.1987", %"class.blink::Member.1989", %"class.blink::Member.1991", %"class.blink::Member.1993", %"class.blink::Member.1997", %"class.blink::Member.1999", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2003", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2024", %"class.std::__1::unique_ptr.2025", %"class.absl::optional.1699", i32, [4 x i8], %"class.std::__1::unique_ptr.2031", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2039", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2044", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2049", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2052", %"class.blink::Member.2054", %"class.blink::Member.2056", %"class.blink::Member.2058", %"class.mojo::StructPtr.2061", %"class.blink::Member.2070", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2072", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1711" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1712" }
%"class.blink::HeapHashMap.1712" = type { %"class.WTF::HashMap.1715" }
%"class.WTF::HashMap.1715" = type { %"class.WTF::HashTable.1716" }
%"class.WTF::HashTable.1716" = type <{ %"struct.WTF::KeyValuePair.1718"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1718" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1719" = type { %"class.std::__1::__compressed_pair.1720" }
%"class.std::__1::__compressed_pair.1720" = type { %"struct.std::__1::__compressed_pair_elem.1721" }
%"struct.std::__1::__compressed_pair_elem.1721" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1722", %"class.base::WeakPtrFactory.1727" }
%"class.WTF::HashMap.1722" = type { %"class.WTF::HashTable.1723" }
%"class.WTF::HashTable.1723" = type <{ %"struct.WTF::KeyValuePair.1726"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1726" = type opaque
%"class.base::WeakPtrFactory.1727" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1731" }
%"class.blink::Member.1731" = type { %"class.blink::MemberBase.1732" }
%"class.blink::MemberBase.1732" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2772" }
%"class.blink::WeakMember.2772" = type { %"class.blink::MemberBase.2773" }
%"class.blink::MemberBase.2773" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2774", i64, %"class.std::__1::map.2775", i8*, i64, %"class.base::WeakPtrFactory.2784" }
%"class.base::RepeatingCallback.2774" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2775" = type { %"class.std::__1::__tree.2776" }
%"class.std::__1::__tree.2776" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2777", %"class.std::__1::__compressed_pair.2781" }
%"class.std::__1::__compressed_pair.2777" = type { %"struct.std::__1::__compressed_pair_elem.628" }
%"class.std::__1::__compressed_pair.2781" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"class.base::WeakPtrFactory.2784" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1733" = type { %"class.WTF::HashSet.1736" }
%"class.WTF::HashSet.1736" = type { %"class.WTF::HashTable.1737" }
%"class.WTF::HashTable.1737" = type <{ %"class.blink::WeakMember.1739"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1739" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1680", %"class.blink::Member.1740", %"class.blink::Member.1742", %"class.std::__1::unique_ptr.1744", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1750" }
%"class.blink::Member.1740" = type { %"class.blink::MemberBase.1741" }
%"class.blink::MemberBase.1741" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1742" = type { %"class.blink::MemberBase.1743" }
%"class.blink::MemberBase.1743" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.2367", %"class.blink::Member.2372", %"class.std::__1::unique_ptr.2374", %"class.std::__1::unique_ptr.687", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.2552, %"class.WTF::AtomicString", i32, %"class.absl::optional.2450", %class.scoped_refptr.617, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.2415", i8, %"class.absl::optional.2422", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.1680", %"class.blink::Member.2553", %"class.blink::Member.114", %"class.blink::Member.2624", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.2626", %class.scoped_refptr.614, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.2639", %"class.std::__1::unique_ptr.2427", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.2641", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.2646, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.2660, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.2661", %"class.blink::Member.2676", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.2689", %"class.WTF::Vector.717", i8, i8, i8, %"class.blink::WebVector.2541", %"class.blink::WebVector.2541", %"class.mojo::Remote.2694" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.2367" = type { %"class.WTF::VectorBuffer.2368" }
%"class.WTF::VectorBuffer.2368" = type { %"class.WTF::VectorBufferBase.2369" }
%"class.WTF::VectorBufferBase.2369" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.2372" = type { %"class.blink::MemberBase.2373" }
%"class.blink::MemberBase.2373" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.2374" = type { %"class.std::__1::__compressed_pair.2375" }
%"class.std::__1::__compressed_pair.2375" = type { %"struct.std::__1::__compressed_pair_elem.2376" }
%"struct.std::__1::__compressed_pair_elem.2376" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.2378", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.2415", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.2422", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.2427", %"class.base::UnguessableToken", %"class.blink::WebVector.2433", %"class.base::TickClock"*, %"class.blink::WebVector.2442", %"class.absl::optional.2450", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.2455", %"class.blink::WebVector", i8, %"class.blink::WebVector.2474", i8, %"class.std::__1::unique_ptr.2482", %"class.blink::WebVector.2541", %"class.blink::WebVector.2541" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr.2377" }
%"class.blink::WebPrivatePtr.2377" = type { i8* }
%"class.blink::WebVector.2378" = type { %"class.std::__1::vector.2379" }
%"class.std::__1::vector.2379" = type { %"class.std::__1::__vector_base.2380" }
%"class.std::__1::__vector_base.2380" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.2410" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.2410" = type { %"struct.std::__1::__compressed_pair_elem.2411" }
%"struct.std::__1::__compressed_pair_elem.2411" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.2381", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.2381" = type { %"class.std::__1::__compressed_pair.2382" }
%"class.std::__1::__compressed_pair.2382" = type { %"struct.std::__1::__compressed_pair_elem.2383" }
%"struct.std::__1::__compressed_pair_elem.2383" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.2421", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.2421" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.2433" = type { %"class.std::__1::vector.2434" }
%"class.std::__1::vector.2434" = type { %"class.std::__1::__vector_base.2435" }
%"class.std::__1::__vector_base.2435" = type { %"class.std::__1::unique_ptr.2436"*, %"class.std::__1::unique_ptr.2436"*, %"class.std::__1::__compressed_pair.2437" }
%"class.std::__1::unique_ptr.2436" = type opaque
%"class.std::__1::__compressed_pair.2437" = type { %"struct.std::__1::__compressed_pair_elem.2438" }
%"struct.std::__1::__compressed_pair_elem.2438" = type { %"class.std::__1::unique_ptr.2436"* }
%"class.blink::WebVector.2442" = type { %"class.std::__1::vector.2443" }
%"class.std::__1::vector.2443" = type { %"class.std::__1::__vector_base.2444" }
%"class.std::__1::__vector_base.2444" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2445" }
%"class.std::__1::__compressed_pair.2445" = type { %"struct.std::__1::__compressed_pair_elem.2446" }
%"struct.std::__1::__compressed_pair_elem.2446" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.absl::optional.2455" = type { %"class.absl::optional_internal::optional_data.2456" }
%"class.absl::optional_internal::optional_data.2456" = type { %"class.absl::optional_internal::optional_data_base.2457" }
%"class.absl::optional_internal::optional_data_base.2457" = type { %"class.absl::optional_internal::optional_data_dtor_base.2458" }
%"class.absl::optional_internal::optional_data_dtor_base.2458" = type { i8, [7 x i8], %union.anon.2459 }
%union.anon.2459 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.2008" }
%"class.std::__1::vector.2008" = type { %"class.std::__1::__vector_base.2009" }
%"class.std::__1::__vector_base.2009" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.2010" }
%"class.std::__1::__compressed_pair.2010" = type { %"struct.std::__1::__compressed_pair_elem.2011" }
%"struct.std::__1::__compressed_pair_elem.2011" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.2474" = type { %"class.std::__1::vector.2475" }
%"class.std::__1::vector.2475" = type { %"class.std::__1::__vector_base.2476" }
%"class.std::__1::__vector_base.2476" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2477" }
%"class.std::__1::__compressed_pair.2477" = type { %"struct.std::__1::__compressed_pair_elem.2478" }
%"struct.std::__1::__compressed_pair_elem.2478" = type { i32* }
%"class.std::__1::unique_ptr.2482" = type { %"class.std::__1::__compressed_pair.2483" }
%"class.std::__1::__compressed_pair.2483" = type { %"struct.std::__1::__compressed_pair_elem.2484" }
%"struct.std::__1::__compressed_pair_elem.2484" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.2485" }
%"class.blink::WebVector.2485" = type { %"class.std::__1::vector.2486" }
%"class.std::__1::vector.2486" = type { %"class.std::__1::__vector_base.2487" }
%"class.std::__1::__vector_base.2487" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.2533" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.2488", %"class.blink::WebVector.2496", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector", i32, [4 x i8], %"class.absl::optional.2528", %"class.blink::WebVector" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.2488" = type { %"class.std::__1::vector.2489" }
%"class.std::__1::vector.2489" = type { %"class.std::__1::__vector_base.2490" }
%"class.std::__1::__vector_base.2490" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.2491" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.2491" = type { %"struct.std::__1::__compressed_pair_elem.2492" }
%"struct.std::__1::__compressed_pair_elem.2492" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.2496" = type { %"class.std::__1::vector.2497" }
%"class.std::__1::vector.2497" = type { %"class.std::__1::__vector_base.2498" }
%"class.std::__1::__vector_base.2498" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.2523" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.2499", %"class.blink::WebVector", %"class.blink::WebVector.2507", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.2499" = type { %"class.std::__1::vector.2500" }
%"class.std::__1::vector.2500" = type { %"class.std::__1::__vector_base.2501" }
%"class.std::__1::__vector_base.2501" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.2502" }
%"class.std::__1::__compressed_pair.2502" = type { %"struct.std::__1::__compressed_pair_elem.2503" }
%"struct.std::__1::__compressed_pair_elem.2503" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.2507" = type { %"class.std::__1::vector.2508" }
%"class.std::__1::vector.2508" = type { %"class.std::__1::__vector_base.2509" }
%"class.std::__1::__vector_base.2509" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.2518" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.2510" }
%"class.blink::WebVector.2510" = type { %"class.std::__1::vector.2511" }
%"class.std::__1::vector.2511" = type { %"class.std::__1::__vector_base.2512" }
%"class.std::__1::__vector_base.2512" = type { i8*, i8*, %"class.std::__1::__compressed_pair.2513" }
%"class.std::__1::__compressed_pair.2513" = type { %"struct.std::__1::__compressed_pair_elem.2514" }
%"struct.std::__1::__compressed_pair_elem.2514" = type { i8* }
%"class.std::__1::__compressed_pair.2518" = type { %"struct.std::__1::__compressed_pair_elem.2519" }
%"struct.std::__1::__compressed_pair_elem.2519" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.2523" = type { %"struct.std::__1::__compressed_pair_elem.2524" }
%"struct.std::__1::__compressed_pair_elem.2524" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.2528" = type { %"class.absl::optional_internal::optional_data.2529" }
%"class.absl::optional_internal::optional_data.2529" = type { %"class.absl::optional_internal::optional_data_base.2530" }
%"class.absl::optional_internal::optional_data_base.2530" = type { %"class.absl::optional_internal::optional_data_dtor_base.2531" }
%"class.absl::optional_internal::optional_data_dtor_base.2531" = type { i8, [7 x i8], %union.anon.2532 }
%union.anon.2532 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.2533" = type { %"struct.std::__1::__compressed_pair_elem.2534" }
%"struct.std::__1::__compressed_pair_elem.2534" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%class.scoped_refptr.2552 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.2450" = type { %"class.absl::optional_internal::optional_data.2451" }
%"class.absl::optional_internal::optional_data.2451" = type { %"class.absl::optional_internal::optional_data_base.2452" }
%"class.absl::optional_internal::optional_data_base.2452" = type { %"class.absl::optional_internal::optional_data_dtor_base.2453" }
%"class.absl::optional_internal::optional_data_dtor_base.2453" = type { i8, %union.anon.2454 }
%union.anon.2454 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector", %"class.blink::WebString", %"class.blink::WebVector", %"class.blink::WebVector" }
%"class.std::__1::unique_ptr.2415" = type { %"class.std::__1::__compressed_pair.2416" }
%"class.std::__1::__compressed_pair.2416" = type { %"struct.std::__1::__compressed_pair_elem.2417" }
%"struct.std::__1::__compressed_pair_elem.2417" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.2422" = type { %"class.absl::optional_internal::optional_data.2423" }
%"class.absl::optional_internal::optional_data.2423" = type { %"class.absl::optional_internal::optional_data_base.2424" }
%"class.absl::optional_internal::optional_data_base.2424" = type { %"class.absl::optional_internal::optional_data_dtor_base.2425" }
%"class.absl::optional_internal::optional_data_dtor_base.2425" = type { i8, %union.anon.2426 }
%union.anon.2426 = type { i32 }
%"class.blink::Member.2553" = type { %"class.blink::MemberBase.2554" }
%"class.blink::MemberBase.2554" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.717", %"class.blink::Member.374", %"class.absl::optional.2557", i64, i64, i32, %class.scoped_refptr.2562, %class.scoped_refptr.2552, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.2562 }
%"class.absl::optional.2557" = type { %"class.absl::optional_internal::optional_data.2558" }
%"class.absl::optional_internal::optional_data.2558" = type { %"class.absl::optional_internal::optional_data_base.2559" }
%"class.absl::optional_internal::optional_data_base.2559" = type { %"class.absl::optional_internal::optional_data_dtor_base.2560" }
%"class.absl::optional_internal::optional_data_dtor_base.2560" = type { i8, %union.anon.2561 }
%union.anon.2561 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%class.scoped_refptr.2562 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.2563", [4 x i8], %"class.std::__1::unique_ptr.2565", i64, %"class.WTF::Vector.2568", %"class.WTF::Vector.2573", %"class.WTF::Vector.2579", %"class.WTF::Vector.2597", %class.scoped_refptr.614, %"class.WTF::HashMap.2603", %"class.WTF::Vector.2608", %"class.WTF::Vector.2568", %"class.WTF::Vector.2614", %"class.WTF::HashMap.2619", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.2563" = type { %"class.base::RefCountedThreadSafe.2564" }
%"class.base::RefCountedThreadSafe.2564" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2565" = type { %"class.std::__1::__compressed_pair.2566" }
%"class.std::__1::__compressed_pair.2566" = type { %"struct.std::__1::__compressed_pair_elem.2514" }
%"class.WTF::Vector.2573" = type { %"class.WTF::VectorBuffer.2574" }
%"class.WTF::VectorBuffer.2574" = type { %"class.WTF::VectorBufferBase.2575", [8 x i8] }
%"class.WTF::VectorBufferBase.2575" = type { %class.scoped_refptr.2576*, i32, i32 }
%class.scoped_refptr.2576 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.2579" = type { %"class.WTF::VectorBuffer.2580" }
%"class.WTF::VectorBuffer.2580" = type { %"class.WTF::VectorBufferBase.2581" }
%"class.WTF::VectorBufferBase.2581" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.2583", %"class.std::__1::unique_ptr.2589" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.2582 }
%class.scoped_refptr.2582 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.2583" = type { %"class.std::__1::__compressed_pair.2584" }
%"class.std::__1::__compressed_pair.2584" = type { %"struct.std::__1::__compressed_pair_elem.2585" }
%"struct.std::__1::__compressed_pair_elem.2585" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2589" = type { %"class.std::__1::__compressed_pair.2590" }
%"class.std::__1::__compressed_pair.2590" = type { %"struct.std::__1::__compressed_pair_elem.2591" }
%"struct.std::__1::__compressed_pair_elem.2591" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.2597" = type { %"class.WTF::VectorBuffer.2598" }
%"class.WTF::VectorBuffer.2598" = type { %"class.WTF::VectorBufferBase.2599" }
%"class.WTF::VectorBufferBase.2599" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.2600", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.2600" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.2603" = type { %"class.WTF::HashTable.2604" }
%"class.WTF::HashTable.2604" = type <{ %"struct.WTF::KeyValuePair.2607"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2607" = type opaque
%"class.WTF::Vector.2608" = type { %"class.WTF::VectorBuffer.2609" }
%"class.WTF::VectorBuffer.2609" = type { %"class.WTF::VectorBufferBase.2610" }
%"class.WTF::VectorBufferBase.2610" = type { %"class.mojo::ScopedHandleBase.2611"*, i32, i32 }
%"class.mojo::ScopedHandleBase.2611" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.2568" = type { %"class.WTF::VectorBuffer.2569" }
%"class.WTF::VectorBuffer.2569" = type { %"class.WTF::VectorBufferBase.2570", [16 x i8] }
%"class.WTF::VectorBufferBase.2570" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.2614" = type { %"class.WTF::VectorBuffer.2615" }
%"class.WTF::VectorBuffer.2615" = type { %"class.WTF::VectorBufferBase.2616" }
%"class.WTF::VectorBufferBase.2616" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.2619" = type { %"class.WTF::HashTable.2620" }
%"class.WTF::HashTable.2620" = type <{ %"struct.WTF::KeyValuePair.2623"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2623" = type { i8**, %"class.std::__1::unique_ptr.2760" }
%"class.std::__1::unique_ptr.2760" = type { %"class.std::__1::__compressed_pair.2761" }
%"class.std::__1::__compressed_pair.2761" = type { %"struct.std::__1::__compressed_pair_elem.2762" }
%"struct.std::__1::__compressed_pair_elem.2762" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::Member.2624" = type { %"class.blink::MemberBase.2625" }
%"class.blink::MemberBase.2625" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.2390", %class.scoped_refptr.2400, %class.scoped_refptr.2401, %"struct.blink::CacheControlHeader", %"class.absl::optional.741", %"class.absl::optional.2357", %"class.absl::optional.2357", %"class.absl::optional.2357", i64, %"class.blink::KURL", %"class.WTF::Vector.2367", %"class.WTF::String", %"class.WTF::Vector.717", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.1699", %"class.WTF::Vector.717", %"class.blink::KURL", %"class.absl::optional.2402" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.2384" }
%"class.WTF::HashMap.2384" = type { %"class.WTF::HashTable.2385" }
%"class.WTF::HashTable.2385" = type <{ %"struct.WTF::KeyValuePair.2388"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2388" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.2389", i8 }
%"struct.std::__1::array.2389" = type { [16 x i8] }
%"class.absl::optional.2390" = type { %"class.absl::optional_internal::optional_data.2391" }
%"class.absl::optional_internal::optional_data.2391" = type { %"class.absl::optional_internal::optional_data_base.2392" }
%"class.absl::optional_internal::optional_data_base.2392" = type { %"class.absl::optional_internal::optional_data_dtor_base.2393" }
%"class.absl::optional_internal::optional_data_dtor_base.2393" = type { i8, %union.anon.2394 }
%union.anon.2394 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.717", %"class.WTF::String", i64, i64, %"class.WTF::Vector.934", %"class.WTF::Vector.2395" }
%"class.WTF::Vector.934" = type { %"class.WTF::VectorBuffer.935" }
%"class.WTF::VectorBuffer.935" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::Vector.2395" = type { %"class.WTF::VectorBuffer.2396" }
%"class.WTF::VectorBuffer.2396" = type { %"class.WTF::VectorBufferBase.2397" }
%"class.WTF::VectorBufferBase.2397" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.2400 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.2401 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.741", %"class.absl::optional.741" }
%"class.absl::optional.2357" = type { %"class.absl::optional_internal::optional_data.2358" }
%"class.absl::optional_internal::optional_data.2358" = type { %"class.absl::optional_internal::optional_data_base.2359" }
%"class.absl::optional_internal::optional_data_base.2359" = type { %"class.absl::optional_internal::optional_data_dtor_base.2360" }
%"class.absl::optional_internal::optional_data_dtor_base.2360" = type { i8, %union.anon.2361 }
%union.anon.2361 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2350" }
%"class.base::time_internal::TimeBase.2350" = type { i64 }
%"class.absl::optional.2402" = type { %"class.absl::optional_internal::optional_data.2403" }
%"class.absl::optional_internal::optional_data.2403" = type { %"class.absl::optional_internal::optional_data_base.2404" }
%"class.absl::optional_internal::optional_data_base.2404" = type { %"class.absl::optional_internal::optional_data_dtor_base.2405" }
%"class.absl::optional_internal::optional_data_dtor_base.2405" = type { i8, %union.anon.2406 }
%union.anon.2406 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.mojo::Remote.2626" = type { %"class.mojo::internal::InterfacePtrState.2627" }
%"class.mojo::internal::InterfacePtrState.2627" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2628" }
%"class.std::__1::unique_ptr.2628" = type { %"class.std::__1::__compressed_pair.2629" }
%"class.std::__1::__compressed_pair.2629" = type { %"struct.std::__1::__compressed_pair_elem.2630" }
%"struct.std::__1::__compressed_pair_elem.2630" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.741", %"class.absl::optional.741", %"class.absl::optional.741", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.2634", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.1742" }
%"class.WTF::Vector.2634" = type { %"class.WTF::VectorBuffer.2635" }
%"class.WTF::VectorBuffer.2635" = type { %"class.WTF::VectorBufferBase.2636" }
%"class.WTF::VectorBufferBase.2636" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.2639" = type { %"class.blink::MemberBase.2640" }
%"class.blink::MemberBase.2640" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.2427" = type { %"class.std::__1::__compressed_pair.2428" }
%"class.std::__1::__compressed_pair.2428" = type { %"struct.std::__1::__compressed_pair_elem.2429" }
%"struct.std::__1::__compressed_pair_elem.2429" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map.1682", %"class.base::flat_map" }
%"class.WTF::Vector.2641" = type { %"class.WTF::VectorBuffer.2642" }
%"class.WTF::VectorBuffer.2642" = type { %"class.WTF::VectorBufferBase.2643" }
%"class.WTF::VectorBufferBase.2643" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.2646 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.2647", i64, %"class.WTF::Vector.2649", %"class.WTF::Vector.2654" }
%"class.WTF::RefCounted.2647" = type { %"class.base::RefCounted.2648" }
%"class.base::RefCounted.2648" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2649" = type { %"class.WTF::VectorBuffer.2650" }
%"class.WTF::VectorBuffer.2650" = type { %"class.WTF::VectorBufferBase.2651" }
%"class.WTF::VectorBufferBase.2651" = type { i8*, i32, i32 }
%"class.WTF::Vector.2654" = type { %"class.WTF::VectorBuffer.2655" }
%"class.WTF::VectorBuffer.2655" = type { %"class.WTF::VectorBufferBase.2656" }
%"class.WTF::VectorBufferBase.2656" = type { %"class.std::__1::unique_ptr.2657"*, i32, i32 }
%"class.std::__1::unique_ptr.2657" = type opaque
%class.scoped_refptr.2660 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::Member.2661" = type { %"class.blink::MemberBase.2662" }
%"class.blink::MemberBase.2662" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.2665", %"class.std::__1::unique_ptr.2670", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.2665" = type { %"class.WTF::HashTable.2666" }
%"class.WTF::HashTable.2666" = type <{ %"struct.WTF::KeyValuePair.2669"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2669" = type { %"class.WTF::Vector.2832", %class.scoped_refptr.2837 }
%"class.WTF::Vector.2832" = type { %"class.WTF::VectorBuffer.2833" }
%"class.WTF::VectorBuffer.2833" = type { %"class.WTF::VectorBufferBase.2834", [32 x i8] }
%"class.WTF::VectorBufferBase.2834" = type { i8*, i32, i32 }
%class.scoped_refptr.2837 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.2838", %"class.WTF::Vector.2840", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.2838" = type { %"class.base::RefCounted.2839" }
%"class.base::RefCounted.2839" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2840" = type { %"class.WTF::VectorBuffer.2841" }
%"class.WTF::VectorBuffer.2841" = type { %"class.WTF::VectorBufferBase.2834" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.2844", i64, %"class.absl::optional.2849" }
%"class.std::__1::unique_ptr.2844" = type { %"class.std::__1::__compressed_pair.2845" }
%"class.std::__1::__compressed_pair.2845" = type { %"struct.std::__1::__compressed_pair_elem.2514" }
%"class.absl::optional.2849" = type { %"class.absl::optional_internal::optional_data.2850" }
%"class.absl::optional_internal::optional_data.2850" = type { %"class.absl::optional_internal::optional_data_base.2851" }
%"class.absl::optional_internal::optional_data_base.2851" = type { %"class.absl::optional_internal::optional_data_dtor_base.2852" }
%"class.absl::optional_internal::optional_data_dtor_base.2852" = type { i8, %union.anon.2853 }
%union.anon.2853 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.2854", %"class.std::__1::unique_ptr.2855" }
%"class.mojo::ScopedHandleBase.2854" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2855" = type { %"class.std::__1::__compressed_pair.2856" }
%"class.std::__1::__compressed_pair.2856" = type { %"struct.std::__1::__compressed_pair_elem.2857" }
%"struct.std::__1::__compressed_pair_elem.2857" = type { i8* }
%"class.std::__1::unique_ptr.2670" = type { %"class.std::__1::__compressed_pair.2671" }
%"class.std::__1::__compressed_pair.2671" = type { %"struct.std::__1::__compressed_pair_elem.2672" }
%"struct.std::__1::__compressed_pair_elem.2672" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.blink::Member.2676" = type { %"class.blink::MemberBase.2677" }
%"class.blink::MemberBase.2677" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.2682" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.2678", %"class.std::__1::bitset.2678", %"class.std::__1::bitset.2680" }
%"class.std::__1::bitset.2678" = type { %"class.std::__1::__bitset.2679" }
%"class.std::__1::__bitset.2679" = type { [11 x i64] }
%"class.std::__1::bitset.2680" = type { %"class.std::__1::__bitset.2681" }
%"class.std::__1::__bitset.2681" = type { [2 x i64] }
%"class.blink::HeapHashSet.2682" = type { %"class.WTF::HashSet.2685" }
%"class.WTF::HashSet.2685" = type { %"class.WTF::HashTable.2686" }
%"class.WTF::HashTable.2686" = type <{ %"class.blink::Member.2688"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2688" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.2689" = type { %"class.WTF::VectorBuffer.2690" }
%"class.WTF::VectorBuffer.2690" = type { %"class.WTF::VectorBufferBase.2691" }
%"class.WTF::VectorBufferBase.2691" = type { i32*, i32, i32 }
%"class.blink::WebVector.2541" = type { %"class.std::__1::vector.2542" }
%"class.std::__1::vector.2542" = type { %"class.std::__1::__vector_base.2543" }
%"class.std::__1::__vector_base.2543" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.2544" }
%"class.std::__1::__compressed_pair.2544" = type { %"struct.std::__1::__compressed_pair_elem.2545" }
%"struct.std::__1::__compressed_pair_elem.2545" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.2694" = type { %"class.mojo::internal::InterfacePtrState.2695" }
%"class.mojo::internal::InterfacePtrState.2695" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2696" }
%"class.std::__1::unique_ptr.2696" = type { %"class.std::__1::__compressed_pair.2697" }
%"class.std::__1::__compressed_pair.2697" = type { %"struct.std::__1::__compressed_pair_elem.2698" }
%"struct.std::__1::__compressed_pair_elem.2698" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1744" = type { %"class.std::__1::__compressed_pair.1745" }
%"class.std::__1::__compressed_pair.1745" = type { %"struct.std::__1::__compressed_pair_elem.1746" }
%"struct.std::__1::__compressed_pair_elem.1746" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.1750" = type { %"class.WTF::HashTable.1751" }
%"class.WTF::HashTable.1751" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1754" = type { %"class.blink::MemberBase.1755" }
%"class.blink::MemberBase.1755" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2151", %"class.blink::Member.1680", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2156", i8, i32, %"class.blink::Color", %"class.absl::optional.2158", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2163", %"class.blink::Member.2165", %"class.blink::Member.2165", %"class.std::__1::unique_ptr.2168", i32, [4 x i8], %"class.WTF::HashSet.2171", %"class.blink::Member.2178", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2180", %"class.blink::HeapHashSet.2188", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2196", i8, %"class.blink::Member.2202", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2214", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2228", i8, %"class.std::__1::unique_ptr.2234", %"class.std::__1::unique_ptr.2315", %"class.WTF::Vector.2321", i32, %class.scoped_refptr.2326, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2327", %"class.blink::Member.2329", %"class.blink::Member.2331", %"class.blink::HeapHashSet.2333", %"class.blink::HeapHashSet.2340", %"class.std::__1::unique_ptr.2347", %"class.std::__1::unique_ptr.2354", %"class.WTF::Vector.97" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.2151" = type { %"class.WTF::HashTable.2152" }
%"class.WTF::HashTable.2152" = type <{ %class.scoped_refptr.2155*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2155 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2156" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2157", { i64, i64 } }
%"class.blink::WeakMember.2157" = type { %"class.blink::MemberBase.1755" }
%"class.absl::optional.2158" = type { %"class.absl::optional_internal::optional_data.2159" }
%"class.absl::optional_internal::optional_data.2159" = type { %"class.absl::optional_internal::optional_data_base.2160" }
%"class.absl::optional_internal::optional_data_base.2160" = type { %"class.absl::optional_internal::optional_data_dtor_base.2161" }
%"class.absl::optional_internal::optional_data_dtor_base.2161" = type { i8, %union.anon.2162 }
%union.anon.2162 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2163" = type { %"class.blink::MemberBase.2164" }
%"class.blink::MemberBase.2164" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2165" = type { %"class.blink::MemberBase.2166" }
%"class.blink::MemberBase.2166" = type { %"class.blink::HeapHashSet.2167"* }
%"class.blink::HeapHashSet.2167" = type opaque
%"class.std::__1::unique_ptr.2168" = type { %"class.std::__1::__compressed_pair.2169" }
%"class.std::__1::__compressed_pair.2169" = type { %"struct.std::__1::__compressed_pair_elem.2170" }
%"struct.std::__1::__compressed_pair_elem.2170" = type { %"class.WTF::HashSet.2171"* }
%"class.WTF::HashSet.2171" = type { %"class.WTF::HashTable.2172" }
%"class.WTF::HashTable.2172" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.820, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr.820 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1248", %"class.std::__1::unique_ptr.1250" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.885", %"class.blink::DataRef.965", %"class.blink::DataRef.969", %"class.blink::DataRef.1164", %"class.blink::DataRef.1231", %"class.blink::DataRef.1235", %"class.blink::DataRef.1239", %"class.blink::DataRef.1243", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.821 }
%class.scoped_refptr.821 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.822", %"class.blink::DataRef.824", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.822" = type { %"class.base::RefCounted.823" }
%"class.base::RefCounted.823" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.824" = type { %class.scoped_refptr.825 }
%class.scoped_refptr.825 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.826", %"class.blink::Font" }
%"class.WTF::RefCounted.826" = type { %"class.base::RefCounted.827" }
%"class.base::RefCounted.827" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.854 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.829, %class.scoped_refptr.837, %class.scoped_refptr.847, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.853 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.828 }
%class.scoped_refptr.828 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1419", [4 x i8] }>
%"class.WTF::RefCounted.1419" = type { %"class.base::RefCounted.1420" }
%"class.base::RefCounted.1420" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.829 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.835", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.830" }
%"class.WTF::Vector.830" = type { %"class.WTF::VectorBuffer.831" }
%"class.WTF::VectorBuffer.831" = type { %"class.WTF::VectorBufferBase.832" }
%"class.WTF::VectorBufferBase.832" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.835" = type { %"class.base::RefCounted.836" }
%"class.base::RefCounted.836" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.837 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.838", %"class.WTF::RefCounted.845", [4 x i8] }>
%"class.blink::FontSettings.838" = type { %"class.WTF::Vector.839" }
%"class.WTF::Vector.839" = type { %"class.WTF::VectorBuffer.840" }
%"class.WTF::VectorBuffer.840" = type { %"class.WTF::VectorBufferBase.841" }
%"class.WTF::VectorBufferBase.841" = type { %"class.blink::FontTagValuePair.842"*, i32, i32 }
%"class.blink::FontTagValuePair.842" = type { i32, float }
%"class.WTF::RefCounted.845" = type { %"class.base::RefCounted.846" }
%"class.base::RefCounted.846" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.847 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.848", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.850, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.848" = type { %"class.base::RefCounted.849" }
%"class.base::RefCounted.849" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.850 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.851", [4 x i8] }>
%"class.WTF::RefCounted.851" = type { %"class.base::RefCounted.852" }
%"class.base::RefCounted.852" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.853 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.854 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.855", %"class.WTF::Vector.857", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.855" = type { %"class.base::RefCounted.856" }
%"class.base::RefCounted.856" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.857" = type { %"class.WTF::VectorBuffer.858" }
%"class.WTF::VectorBuffer.858" = type { %"class.WTF::VectorBufferBase.859", [8 x i8] }
%"class.WTF::VectorBufferBase.859" = type { %class.scoped_refptr.860*, i32, i32 }
%class.scoped_refptr.860 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.861", [4 x i8] }>
%"class.WTF::RefCounted.861" = type { %"class.base::RefCounted.862" }
%"class.base::RefCounted.862" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.871", %class.scoped_refptr.878, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.861" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.865", %"class.absl::optional.865", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.865" = type { %"class.absl::optional_internal::optional_data.866" }
%"class.absl::optional_internal::optional_data.866" = type { %"class.absl::optional_internal::optional_data_base.867" }
%"class.absl::optional_internal::optional_data_base.867" = type { %"class.absl::optional_internal::optional_data_dtor_base.868" }
%"class.absl::optional_internal::optional_data_dtor_base.868" = type { i8, %union.anon.869 }
%union.anon.869 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.870, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.101" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.101" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.335" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.870 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.871" = type { %"class.std::__1::__compressed_pair.872" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.873" }
%"struct.std::__1::__compressed_pair_elem.873" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.874, %class.scoped_refptr.874 }
%class.scoped_refptr.874 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.878 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.879", [4 x i8] }>
%"class.WTF::RefCounted.879" = type { %"class.base::RefCounted.880" }
%"class.base::RefCounted.880" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.881" }
%"class.blink::PersistentBase.881" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.882" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.882" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::Length" = type <{ %union.anon.884, i8, i8, i8, i8 }>
%union.anon.884 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.885" = type { %class.scoped_refptr.886 }
%class.scoped_refptr.886 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.887", [4 x i8], %"class.blink::DataRef.889", %"class.blink::DataRef.930", %"class.WTF::Vector.934", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.938, %class.scoped_refptr.947, %"class.blink::Persistent.955", %"class.blink::Persistent.957", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.887" = type { %"class.base::RefCounted.888" }
%"class.base::RefCounted.888" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.889" = type { %class.scoped_refptr.890 }
%class.scoped_refptr.890 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.891", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.893, %class.scoped_refptr.900, %"class.blink::Persistent.917", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.891" = type { %"class.base::RefCounted.892" }
%"class.base::RefCounted.892" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.893 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.894", %"class.WTF::Vector.895" }
%"class.base::RefCountedThreadSafe.894" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.895" = type { %"class.WTF::VectorBuffer.896" }
%"class.WTF::VectorBuffer.896" = type { %"class.WTF::VectorBufferBase.897" }
%"class.WTF::VectorBufferBase.897" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.900 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.901", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.901" = type { %"class.base::RefCounted.902" }
%"class.base::RefCounted.902" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.903", %"class.blink::Persistent.908" }
%"class.WTF::HashMap.903" = type { %"class.WTF::HashTable.904" }
%"class.WTF::HashTable.904" = type <{ %"struct.WTF::KeyValuePair.907"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.907" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2873 }
%class.scoped_refptr.2873 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2874", %"class.WTF::Vector.717", %"class.WTF::Vector.2876", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2874" = type { %"class.base::RefCounted.2875" }
%"class.base::RefCounted.2875" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2876" = type { %"class.WTF::VectorBuffer.2877" }
%"class.WTF::VectorBuffer.2877" = type { %"class.WTF::VectorBufferBase.2878" }
%"class.WTF::VectorBufferBase.2878" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2879 }
%union.anon.2879 = type { double }
%"class.blink::Persistent.908" = type { %"class.blink::PersistentBase.909" }
%"class.blink::PersistentBase.909" = type { %"class.blink::HeapHashMap.910"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.910" = type { %"class.WTF::HashMap.913" }
%"class.WTF::HashMap.913" = type { %"class.WTF::HashTable.914" }
%"class.WTF::HashTable.914" = type <{ %"struct.WTF::KeyValuePair.916"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.916" = type opaque
%"class.blink::Persistent.917" = type { %"class.blink::PersistentBase.918" }
%"class.blink::PersistentBase.918" = type { %"class.blink::HeapVector.919"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.919" = type { %"class.WTF::Vector.922" }
%"class.WTF::Vector.922" = type { %"class.WTF::VectorBuffer.923" }
%"class.WTF::VectorBuffer.923" = type { %"class.WTF::VectorBufferBase.924" }
%"class.WTF::VectorBufferBase.924" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.925", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.925" = type { %"class.blink::MemberBase.926" }
%"class.blink::MemberBase.926" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.930" = type { %class.scoped_refptr.931 }
%class.scoped_refptr.931 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.932", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.932" = type { %"class.base::RefCounted.933" }
%"class.base::RefCounted.933" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.938 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.939", %"class.WTF::Vector.941" }
%"class.WTF::RefCounted.939" = type { %"class.base::RefCounted.940" }
%"class.base::RefCounted.940" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.941" = type { %"class.WTF::VectorBuffer.942" }
%"class.WTF::VectorBuffer.942" = type { %"class.WTF::VectorBufferBase.943" }
%"class.WTF::VectorBufferBase.943" = type { %"struct.std::__1::pair.944"*, i32, i32 }
%"struct.std::__1::pair.944" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.947 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.948", [4 x i8], %"class.WTF::Vector.950" }
%"class.WTF::RefCounted.948" = type { %"class.base::RefCounted.949" }
%"class.base::RefCounted.949" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.950" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.952", [28 x i8] }>
%"class.WTF::VectorBufferBase.952" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.955" = type { %"class.blink::PersistentBase.956" }
%"class.blink::PersistentBase.956" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.957" = type { %"class.blink::PersistentBase.958" }
%"class.blink::PersistentBase.958" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.961", %"class.blink::Member.963" }
%"class.blink::Member.961" = type { %"class.blink::MemberBase.962" }
%"class.blink::MemberBase.962" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.963" = type { %"class.blink::MemberBase.964" }
%"class.blink::MemberBase.964" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.965" = type { %class.scoped_refptr.966 }
%class.scoped_refptr.966 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.967", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.967" = type { %"class.base::RefCounted.968" }
%"class.base::RefCounted.968" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.969" = type { %class.scoped_refptr.970 }
%class.scoped_refptr.970 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.971", [4 x i8], %"class.blink::DataRef.973", %"class.blink::DataRef.1039", %"class.blink::TransformOperations", %class.scoped_refptr.947, %"class.blink::Persistent.1158", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.971" = type { %"class.base::RefCounted.972" }
%"class.base::RefCounted.972" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.973" = type { %class.scoped_refptr.974 }
%class.scoped_refptr.974 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.975", [4 x i8], %"class.blink::DataRef.977", %"class.blink::Persistent.1015", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.975" = type { %"class.base::RefCounted.976" }
%"class.base::RefCounted.976" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.977" = type { %class.scoped_refptr.978 }
%class.scoped_refptr.978 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.979", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.997, %class.scoped_refptr.1000, %class.scoped_refptr.1003, %class.scoped_refptr.1006, %class.scoped_refptr.1007, %class.scoped_refptr.1008, %"class.blink::Persistent.1015", %"class.blink::Persistent.1030", %"class.absl::optional.1034", %"class.absl::optional.1034", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.979" = type { %"class.base::RefCounted.980" }
%"class.base::RefCounted.980" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.981", %"class.std::__1::unique_ptr.986" }
%"class.WTF::Vector.981" = type { %"class.WTF::VectorBuffer.982" }
%"class.WTF::VectorBuffer.982" = type { %"class.WTF::VectorBufferBase.983" }
%"class.WTF::VectorBufferBase.983" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.986" = type { %"class.std::__1::__compressed_pair.987" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.988" }
%"struct.std::__1::__compressed_pair_elem.988" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.989", %"class.WTF::Vector.981", i32, i32 }
%"class.WTF::Vector.989" = type { %"class.WTF::VectorBuffer.990" }
%"class.WTF::VectorBuffer.990" = type { %"class.WTF::VectorBufferBase.991" }
%"class.WTF::VectorBufferBase.991" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.997 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.998", [4 x i8] }>
%"class.WTF::RefCounted.998" = type { %"class.base::RefCounted.999" }
%"class.base::RefCounted.999" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1000 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1001", [4 x i8] }>
%"class.WTF::RefCounted.1001" = type { %"class.base::RefCounted.1002" }
%"class.base::RefCounted.1002" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1003 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1004" }>
%"class.WTF::RefCounted.1004" = type { %"class.base::RefCounted.1005" }
%"class.base::RefCounted.1005" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1006 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1007 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1008 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1009", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1009" = type { %"class.base::RefCounted.1010" }
%"class.base::RefCounted.1010" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1011" }
%"class.blink::DataRef.1011" = type { %class.scoped_refptr.1012 }
%class.scoped_refptr.1012 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.955", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1013" }
%"class.WTF::RefCounted.1013" = type { %"class.base::RefCounted.1014" }
%"class.base::RefCounted.1014" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1030" = type { %"class.blink::PersistentBase.1031" }
%"class.blink::PersistentBase.1031" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1000, %"class.blink::Member.925", i32, [4 x i8] }>
%"class.absl::optional.1034" = type { %"class.absl::optional_internal::optional_data.1035" }
%"class.absl::optional_internal::optional_data.1035" = type { %"class.absl::optional_internal::optional_data_base.1036" }
%"class.absl::optional_internal::optional_data_base.1036" = type { %"class.absl::optional_internal::optional_data_dtor_base.1037" }
%"class.absl::optional_internal::optional_data_dtor_base.1037" = type { i8, [3 x i8], %union.anon.1038 }
%union.anon.1038 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.1015" = type { %"class.blink::PersistentBase.1016" }
%"class.blink::PersistentBase.1016" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1019" }
%"class.blink::HeapVector.1019" = type { %"class.WTF::Vector.1022" }
%"class.WTF::Vector.1022" = type { %"class.WTF::VectorBuffer.1023" }
%"class.WTF::VectorBuffer.1023" = type { %"class.WTF::VectorBufferBase.1024" }
%"class.WTF::VectorBufferBase.1024" = type { %"class.blink::Member.1025"*, i32, i32 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1039" = type { %class.scoped_refptr.1040 }
%class.scoped_refptr.1040 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1041", %"class.blink::DataRef.1043", %"class.blink::DataRef.1047", %"class.blink::DataRef.1056", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1075", %"class.std::__1::unique_ptr.1086", %"class.std::__1::unique_ptr.1124", %"class.std::__1::unique_ptr.1135", %"class.std::__1::unique_ptr.1146", %"class.WTF::Vector.717", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1041" = type { %"class.base::RefCounted.1042" }
%"class.base::RefCounted.1042" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1043" = type { %class.scoped_refptr.1044 }
%class.scoped_refptr.1044 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1045", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1045" = type { %"class.base::RefCounted.1046" }
%"class.base::RefCounted.1046" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1047" = type { %class.scoped_refptr.1048 }
%class.scoped_refptr.1048 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1049", [4 x i8], %"class.WTF::Vector.1051", i8, [7 x i8] }>
%"class.WTF::RefCounted.1049" = type { %"class.base::RefCounted.1050" }
%"class.base::RefCounted.1050" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1051" = type { %"class.WTF::VectorBuffer.1052" }
%"class.WTF::VectorBuffer.1052" = type { %"class.WTF::VectorBufferBase.1053" }
%"class.WTF::VectorBufferBase.1053" = type { i32*, i32, i32 }
%"class.blink::DataRef.1056" = type { %class.scoped_refptr.1057 }
%class.scoped_refptr.1057 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1058", [4 x i8], %"class.WTF::HashMap.1060", %"class.WTF::HashMap.1060", %"class.WTF::HashMap.1060", %"class.WTF::HashMap.1060", %"class.WTF::HashMap.1060", %"class.WTF::HashMap.1060", %"class.WTF::HashMap.1065", %"class.WTF::HashMap.1065", %"class.WTF::HashMap.1065", %"class.WTF::HashMap.1065", %"class.WTF::HashMap.1070", %"class.WTF::Vector.981", %"class.WTF::Vector.981", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1058" = type { %"class.base::RefCounted.1059" }
%"class.base::RefCounted.1059" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1060" = type { %"class.WTF::HashTable.1061" }
%"class.WTF::HashTable.1061" = type <{ %"struct.WTF::KeyValuePair.1064"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1064" = type { %"class.WTF::String", %"class.WTF::Vector.2863" }
%"class.WTF::Vector.2863" = type { %"class.WTF::VectorBuffer.2864" }
%"class.WTF::VectorBuffer.2864" = type { %"class.WTF::VectorBufferBase.2865" }
%"class.WTF::VectorBufferBase.2865" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1065" = type { %"class.WTF::HashTable.1066" }
%"class.WTF::HashTable.1066" = type <{ %"struct.WTF::KeyValuePair.1069"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1069" = type { i64, %"class.WTF::Vector.717" }
%"class.WTF::HashMap.1070" = type { %"class.WTF::HashTable.1071" }
%"class.WTF::HashTable.1071" = type <{ %"struct.WTF::KeyValuePair.1074"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1074" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1078" }
%"class.WTF::HashMap.1078" = type { %"class.WTF::HashTable.1079" }
%"class.WTF::HashTable.1079" = type <{ %"struct.WTF::KeyValuePair.1082"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1082" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2868", %"class.absl::optional.2868", %"class.absl::optional.2868" }
%"class.absl::optional.2868" = type { %"class.absl::optional_internal::optional_data.2869" }
%"class.absl::optional_internal::optional_data.2869" = type { %"class.absl::optional_internal::optional_data_base.2870" }
%"class.absl::optional_internal::optional_data_base.2870" = type { %"class.absl::optional_internal::optional_data_dtor_base.2871" }
%"class.absl::optional_internal::optional_data_dtor_base.2871" = type { i8, %union.anon.2872 }
%union.anon.2872 = type { i32 }
%"class.std::__1::unique_ptr.1086" = type { %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.934", %"class.WTF::Vector.1101", %"class.WTF::Vector.1089", %"class.WTF::Vector.1106", %"class.WTF::Vector.1111", %"class.WTF::Vector.1116" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1089", %"class.WTF::Vector.1089", %"class.WTF::Vector.1094" }
%"class.WTF::Vector.1094" = type { %"class.WTF::VectorBuffer.1095" }
%"class.WTF::VectorBuffer.1095" = type { %"class.WTF::VectorBufferBase.1096" }
%"class.WTF::VectorBufferBase.1096" = type { %class.scoped_refptr.1097*, i32, i32 }
%class.scoped_refptr.1097 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1098" }
%"class.base::RefCountedThreadSafe.1098" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1101" = type { %"class.WTF::VectorBuffer.1102" }
%"class.WTF::VectorBuffer.1102" = type { %"class.WTF::VectorBufferBase.1103" }
%"class.WTF::VectorBufferBase.1103" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1089" = type { %"class.WTF::VectorBuffer.1090" }
%"class.WTF::VectorBuffer.1090" = type { %"class.WTF::VectorBufferBase.1091" }
%"class.WTF::VectorBufferBase.1091" = type { double*, i32, i32 }
%"class.WTF::Vector.1106" = type { %"class.WTF::VectorBuffer.1107" }
%"class.WTF::VectorBuffer.1107" = type { %"class.WTF::VectorBufferBase.1108" }
%"class.WTF::VectorBufferBase.1108" = type { i32*, i32, i32 }
%"class.WTF::Vector.1111" = type { %"class.WTF::VectorBuffer.1112" }
%"class.WTF::VectorBuffer.1112" = type { %"class.WTF::VectorBufferBase.1113" }
%"class.WTF::VectorBufferBase.1113" = type { i32*, i32, i32 }
%"class.WTF::Vector.1116" = type { %"class.WTF::VectorBuffer.1117" }
%"class.WTF::VectorBuffer.1117" = type { %"class.WTF::VectorBufferBase.1118" }
%"class.WTF::VectorBufferBase.1118" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1124" = type { %"class.std::__1::__compressed_pair.1125" }
%"class.std::__1::__compressed_pair.1125" = type { %"struct.std::__1::__compressed_pair_elem.1126" }
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1127" }
%"class.WTF::Vector.1127" = type { %"class.WTF::VectorBuffer.1128" }
%"class.WTF::VectorBuffer.1128" = type { %"class.WTF::VectorBufferBase.1129" }
%"class.WTF::VectorBufferBase.1129" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1135" = type { %"class.std::__1::__compressed_pair.1136" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1138" }
%"class.WTF::Vector.1138" = type { %"class.WTF::VectorBuffer.1139" }
%"class.WTF::VectorBuffer.1139" = type { %"class.WTF::VectorBufferBase.1140" }
%"class.WTF::VectorBufferBase.1140" = type { %"class.blink::Persistent.955"*, i32, i32 }
%"class.std::__1::unique_ptr.1146" = type { %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.955", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1152" }
%"class.WTF::Vector.1152" = type { %"class.WTF::VectorBuffer.1153" }
%"class.WTF::VectorBuffer.1153" = type { %"class.WTF::VectorBufferBase.1154" }
%"class.WTF::VectorBufferBase.1154" = type { %class.scoped_refptr.1155*, i32, i32 }
%class.scoped_refptr.1155 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1004", [4 x i8] }>
%"class.blink::Persistent.1158" = type { %"class.blink::PersistentBase.1159" }
%"class.blink::PersistentBase.1159" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1162" }
%"class.blink::Member.1162" = type { %"class.blink::MemberBase.1163" }
%"class.blink::MemberBase.1163" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1164" = type { %class.scoped_refptr.1165 }
%class.scoped_refptr.1165 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1166", [4 x i8], %"class.blink::DataRef.1168", %"class.blink::DataRef.1172", %"class.blink::DataRef.1193", %"class.blink::DataRef.1211", %"class.blink::DataRef.1223", %"class.blink::DataRef.1227", %class.scoped_refptr.1197, i32, [4 x i8] }>
%"class.WTF::RefCounted.1166" = type { %"class.base::RefCounted.1167" }
%"class.base::RefCounted.1167" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1168" = type { %class.scoped_refptr.1169 }
%class.scoped_refptr.1169 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1170", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1170" = type { %"class.base::RefCounted.1171" }
%"class.base::RefCounted.1171" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1172" = type { %class.scoped_refptr.1173 }
%class.scoped_refptr.1173 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1174", %class.scoped_refptr.1176, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1174" = type { %"class.base::RefCounted.1175" }
%"class.base::RefCounted.1175" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1176 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1177", %"class.std::__1::unique_ptr.1183", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1001" }>
%"class.std::__1::unique_ptr.1177" = type { %"class.std::__1::__compressed_pair.1178" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1183" = type { %"class.std::__1::__compressed_pair.1184" }
%"class.std::__1::__compressed_pair.1184" = type { %"struct.std::__1::__compressed_pair_elem.1185" }
%"struct.std::__1::__compressed_pair_elem.1185" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1186, i32, %"struct.std::__1::atomic.335", %"struct.std::__1::atomic.335", i8, i8 }>
%class.sk_sp.1186 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1187, %class.SkTDArray.1188, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.101" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1187 = type { i8*, i32, i32 }
%class.SkTDArray.1188 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1189 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.101", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1189 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.325", [3 x i8] }
%"class.blink::DataRef.1193" = type { %class.scoped_refptr.1194 }
%class.scoped_refptr.1194 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1195", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1195" = type { %"class.base::RefCounted.1196" }
%"class.base::RefCounted.1196" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1197, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1211" = type { %class.scoped_refptr.1212 }
%class.scoped_refptr.1212 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1213", [4 x i8], %class.scoped_refptr.1215, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1213" = type { %"class.base::RefCounted.1214" }
%"class.base::RefCounted.1214" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1215 = type { %"class.base::RefCountedData.1216"* }
%"class.base::RefCountedData.1216" = type { %"class.base::RefCountedThreadSafe.1217", %"class.WTF::Vector.1218" }
%"class.base::RefCountedThreadSafe.1217" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1218" = type { %"class.WTF::VectorBuffer.1219" }
%"class.WTF::VectorBuffer.1219" = type { %"class.WTF::VectorBufferBase.1220" }
%"class.WTF::VectorBufferBase.1220" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1223" = type { %class.scoped_refptr.1224 }
%class.scoped_refptr.1224 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1225", %class.scoped_refptr.1197, %class.scoped_refptr.1197, %class.scoped_refptr.1197 }
%"class.WTF::RefCounted.1225" = type { %"class.base::RefCounted.1226" }
%"class.base::RefCounted.1226" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1227" = type { %class.scoped_refptr.1228 }
%class.scoped_refptr.1228 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1229", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1229" = type { %"class.base::RefCounted.1230" }
%"class.base::RefCounted.1230" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1197 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1198", %"class.blink::Persistent.1200", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1198" = type { %"class.base::RefCounted.1199" }
%"class.base::RefCounted.1199" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1200" = type { %"class.blink::PersistentBase.1201" }
%"class.blink::PersistentBase.1201" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.66", %"class.blink::HeapHashMap.1204" }
%"class.blink::HeapHashMap.1204" = type { %"class.WTF::HashMap.1207" }
%"class.WTF::HashMap.1207" = type { %"class.WTF::HashTable.1208" }
%"class.WTF::HashTable.1208" = type <{ %"struct.WTF::KeyValuePair.1210"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1210" = type opaque
%"class.blink::DataRef.1231" = type { %class.scoped_refptr.1232 }
%class.scoped_refptr.1232 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1233", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1233" = type { %"class.base::RefCounted.1234" }
%"class.base::RefCounted.1234" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1235" = type { %class.scoped_refptr.1236 }
%class.scoped_refptr.1236 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1237", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1237" = type { %"class.base::RefCounted.1238" }
%"class.base::RefCounted.1238" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1239" = type { %class.scoped_refptr.1240 }
%class.scoped_refptr.1240 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1241", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1241" = type { %"class.base::RefCounted.1242" }
%"class.base::RefCounted.1242" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1243" = type { %class.scoped_refptr.1244 }
%class.scoped_refptr.1244 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1245", %class.scoped_refptr.1247 }
%"class.WTF::RefCounted.1245" = type { %"class.base::RefCounted.1246" }
%"class.base::RefCounted.1246" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1247 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1417", %"class.blink::StyleVariables", %class.scoped_refptr.1247 }
%"class.WTF::RefCounted.1417" = type { %"class.base::RefCounted.1418" }
%"class.base::RefCounted.1418" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1248" = type { %"class.base::RefCounted.1249" }
%"class.base::RefCounted.1249" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1250" = type { %"class.std::__1::__compressed_pair.1251" }
%"class.std::__1::__compressed_pair.1251" = type { %"struct.std::__1::__compressed_pair_elem.1252" }
%"struct.std::__1::__compressed_pair_elem.1252" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1253" }
%"class.std::__1::unique_ptr.1253" = type { %"class.std::__1::__compressed_pair.1254" }
%"class.std::__1::__compressed_pair.1254" = type { %"struct.std::__1::__compressed_pair_elem.1255" }
%"struct.std::__1::__compressed_pair_elem.1255" = type { %"class.WTF::Vector.1256"* }
%"class.WTF::Vector.1256" = type { %"class.WTF::VectorBuffer.2883" }
%"class.WTF::VectorBuffer.2883" = type { %"class.WTF::VectorBufferBase.2884", [32 x i8] }
%"class.WTF::VectorBufferBase.2884" = type { %class.scoped_refptr.820*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1263" }
%"class.blink::MemberBase.1263" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1264" }
%"class.std::__1::unique_ptr.1264" = type { %"class.std::__1::__compressed_pair.1265" }
%"class.std::__1::__compressed_pair.1265" = type { %"struct.std::__1::__compressed_pair_elem.1266" }
%"struct.std::__1::__compressed_pair_elem.1266" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1267", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1273", %"class.std::__1::unique_ptr.1397", i8, %"class.absl::optional.1403", %class.scoped_refptr.1379, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1408" }
%"class.std::__1::unique_ptr.1267" = type { %"class.std::__1::__compressed_pair.1268" }
%"class.std::__1::__compressed_pair.1268" = type { %"struct.std::__1::__compressed_pair_elem.1269" }
%"struct.std::__1::__compressed_pair_elem.1269" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1276, %class.scoped_refptr.1276, %class.scoped_refptr.1276, %class.scoped_refptr.1276, %class.scoped_refptr.1276, %class.scoped_refptr.1276, %class.scoped_refptr.1311, %class.scoped_refptr.1327, %class.scoped_refptr.1328, %class.scoped_refptr.1328, %class.scoped_refptr.1328, %class.scoped_refptr.1328, %class.scoped_refptr.1328, %class.scoped_refptr.1328, %class.scoped_refptr.1369, %class.scoped_refptr.1370, %class.scoped_refptr.1370, %class.scoped_refptr.1370, %class.scoped_refptr.1370, %class.scoped_refptr.1370, %class.scoped_refptr.1370, %class.scoped_refptr.1370, %class.scoped_refptr.1370, %class.scoped_refptr.1393 }
%class.scoped_refptr.1276 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1293" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1277", i8, i8, %class.scoped_refptr.1279, i32, i32 }
%"class.WTF::RefCounted.1277" = type { %"class.base::RefCounted.1278" }
%"class.base::RefCounted.1278" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1279 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1286, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1287", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1280" }
%"class.std::__1::unique_ptr.1280" = type { %"class.std::__1::__compressed_pair.1281" }
%"class.std::__1::__compressed_pair.1281" = type { %"struct.std::__1::__compressed_pair_elem.1282" }
%"struct.std::__1::__compressed_pair_elem.1282" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.1286 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1312", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1312" = type { %"class.WTF::RefCounted.1313", i8, i8, %class.scoped_refptr.1286, i32, i32 }
%"class.WTF::RefCounted.1313" = type { %"class.base::RefCounted.1314" }
%"class.base::RefCounted.1314" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1315" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1315" = type { %"class.absl::optional_internal::optional_data.1316" }
%"class.absl::optional_internal::optional_data.1316" = type { %"class.absl::optional_internal::optional_data_base.1317" }
%"class.absl::optional_internal::optional_data_base.1317" = type { %"class.absl::optional_internal::optional_data_dtor_base.1318" }
%"class.absl::optional_internal::optional_data_dtor_base.1318" = type { i8, %union.anon.1319 }
%union.anon.1319 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1320", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1320" = type { %"class.std::__1::__vector_base.1321" }
%"class.std::__1::__vector_base.1321" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1322" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1322" = type { %"struct.std::__1::__compressed_pair_elem.1323" }
%"struct.std::__1::__compressed_pair_elem.1323" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1287" = type { %"class.std::__1::__compressed_pair.1288" }
%"class.std::__1::__compressed_pair.1288" = type { %"struct.std::__1::__compressed_pair_elem.1289" }
%"struct.std::__1::__compressed_pair_elem.1289" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1293" = type { %"class.std::__1::__compressed_pair.1294" }
%"class.std::__1::__compressed_pair.1294" = type { %"struct.std::__1::__compressed_pair_elem.1295" }
%"struct.std::__1::__compressed_pair_elem.1295" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1296", %"class.std::__1::unique_ptr.1302", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1296" = type { %"class.std::__1::__compressed_pair.1297" }
%"class.std::__1::__compressed_pair.1297" = type { %"struct.std::__1::__compressed_pair_elem.1298" }
%"struct.std::__1::__compressed_pair_elem.1298" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1302" = type { %"class.std::__1::__compressed_pair.1303" }
%"class.std::__1::__compressed_pair.1303" = type { %"struct.std::__1::__compressed_pair_elem.1304" }
%"struct.std::__1::__compressed_pair_elem.1304" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1311 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1327 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1328 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1329" }
%"class.blink::PaintPropertyNode.1329" = type { %"class.WTF::RefCounted.1330", i8, i8, %class.scoped_refptr.1332, i32, i32 }
%"class.WTF::RefCounted.1330" = type { %"class.base::RefCounted.1331" }
%"class.base::RefCounted.1331" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1332 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1279, %class.scoped_refptr.1333, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1355", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1333 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1371" }
%"class.blink::PaintPropertyNode.1371" = type { %"class.WTF::RefCounted.1372", i8, i8, %class.scoped_refptr.1333, i32, i32 }
%"class.WTF::RefCounted.1372" = type { %"class.base::RefCounted.1373" }
%"class.base::RefCounted.1373" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1334" }
%"class.std::__1::vector.1334" = type { %"class.std::__1::__vector_base.1335" }
%"class.std::__1::__vector_base.1335" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1350" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1336, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1343", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1336 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1337, i32, %"class.absl::optional.1338", i8, i32 }
%class.sk_sp.1337 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1338" = type { %"class.absl::optional_internal::optional_data.1339" }
%"class.absl::optional_internal::optional_data.1339" = type { %"class.absl::optional_internal::optional_data_base.1340" }
%"class.absl::optional_internal::optional_data_base.1340" = type { %"class.absl::optional_internal::optional_data_dtor_base.1341" }
%"class.absl::optional_internal::optional_data_dtor_base.1341" = type { i8, %union.anon.1342 }
%union.anon.1342 = type { %struct.SkRect }
%"class.std::__1::vector.1343" = type { %"class.std::__1::__vector_base.1344" }
%"class.std::__1::__vector_base.1344" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1345" }
%"class.std::__1::__compressed_pair.1345" = type { %"struct.std::__1::__compressed_pair_elem.1346" }
%"struct.std::__1::__compressed_pair_elem.1346" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1350" = type { %"struct.std::__1::__compressed_pair_elem.1351" }
%"struct.std::__1::__compressed_pair_elem.1351" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1355" = type { %"class.std::__1::__compressed_pair.1356" }
%"class.std::__1::__compressed_pair.1356" = type { %"struct.std::__1::__compressed_pair_elem.1357" }
%"struct.std::__1::__compressed_pair_elem.1357" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.1361" }
%"class.base::internal::flat_tree.1361" = type { %"class.std::__1::vector.1362" }
%"class.std::__1::vector.1362" = type { %"class.std::__1::__vector_base.1363" }
%"class.std::__1::__vector_base.1363" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1364" }
%"class.std::__1::__compressed_pair.1364" = type { %"struct.std::__1::__compressed_pair_elem.1365" }
%"struct.std::__1::__compressed_pair_elem.1365" = type { i32* }
%class.scoped_refptr.1369 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1370 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1382" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1279, %"class.absl::optional.1374", %class.scoped_refptr.1379, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1374" = type { %"class.absl::optional_internal::optional_data.1375" }
%"class.absl::optional_internal::optional_data.1375" = type { %"class.absl::optional_internal::optional_data_base.1376" }
%"class.absl::optional_internal::optional_data_base.1376" = type { %"class.absl::optional_internal::optional_data_dtor_base.1377" }
%"class.absl::optional_internal::optional_data_dtor_base.1377" = type { i8, [3 x i8], %union.anon.1378 }
%union.anon.1378 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1382" = type { %"class.std::__1::__compressed_pair.1383" }
%"class.std::__1::__compressed_pair.1383" = type { %"struct.std::__1::__compressed_pair_elem.1384" }
%"struct.std::__1::__compressed_pair_elem.1384" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1385", i32, [4 x i8] }>
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1393 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1397" = type { %"class.std::__1::__compressed_pair.1398" }
%"class.std::__1::__compressed_pair.1398" = type { %"struct.std::__1::__compressed_pair_elem.1399" }
%"struct.std::__1::__compressed_pair_elem.1399" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1279, %class.scoped_refptr.1333, %class.scoped_refptr.1332 }
%"class.absl::optional.1403" = type { %"class.absl::optional_internal::optional_data.1404" }
%"class.absl::optional_internal::optional_data.1404" = type { %"class.absl::optional_internal::optional_data_base.1405" }
%"class.absl::optional_internal::optional_data_base.1405" = type { %"class.absl::optional_internal::optional_data_dtor_base.1406" }
%"class.absl::optional_internal::optional_data_dtor_base.1406" = type { i8, %union.anon.1407 }
%union.anon.1407 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1379 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1380", [4 x i8] }
%"class.WTF::RefCounted.1380" = type { %"class.base::RefCounted.1381" }
%"class.base::RefCounted.1381" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1408" = type { %"class.std::__1::__compressed_pair.1409" }
%"class.std::__1::__compressed_pair.1409" = type { %"struct.std::__1::__compressed_pair_elem.1410" }
%"struct.std::__1::__compressed_pair_elem.1410" = type { %"class.blink::FragmentData"* }
%"class.blink::Member.2178" = type { %"class.blink::MemberBase.2179" }
%"class.blink::MemberBase.2179" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2180" = type { %"class.WTF::HashSet.2183" }
%"class.WTF::HashSet.2183" = type { %"class.WTF::HashTable.2184" }
%"class.WTF::HashTable.2184" = type <{ %"class.blink::Member.2186"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashSet.2188" = type { %"class.WTF::HashSet.2191" }
%"class.WTF::HashSet.2191" = type { %"class.WTF::HashTable.2192" }
%"class.WTF::HashTable.2192" = type <{ %"class.blink::Member.2194"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2194" = type { %"class.blink::MemberBase.2195" }
%"class.blink::MemberBase.2195" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.2196" = type { %"class.std::__1::__compressed_pair.2197" }
%"class.std::__1::__compressed_pair.2197" = type { %"struct.std::__1::__compressed_pair_elem.2198" }
%"struct.std::__1::__compressed_pair_elem.2198" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2202" = type { %"class.blink::MemberBase.2203" }
%"class.blink::MemberBase.2203" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2206", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2206" = type { %"class.WTF::HashTable.2207" }
%"class.WTF::HashTable.2207" = type <{ %"struct.WTF::KeyValuePair.2209"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2209" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2210", i32, i32 }
%"class.WTF::Vector.2210" = type { %"class.WTF::VectorBuffer.2211" }
%"class.WTF::VectorBuffer.2211" = type { %"class.WTF::VectorBufferBase.2212" }
%"class.WTF::VectorBufferBase.2212" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2214" = type { %"class.WTF::LinkedHashSet.2217" }
%"class.WTF::LinkedHashSet.2217" = type { %"class.WTF::HashMap.2218", %"class.WTF::VectorBackedLinkedList.2222" }
%"class.WTF::HashMap.2218" = type { %"class.WTF::HashTable.2219" }
%"class.WTF::HashTable.2219" = type <{ %"struct.WTF::KeyValuePair.2221"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2221" = type opaque
%"class.WTF::VectorBackedLinkedList.2222" = type { %"class.WTF::Vector.2223", i32, i32 }
%"class.WTF::Vector.2223" = type { %"class.WTF::VectorBuffer.2224" }
%"class.WTF::VectorBuffer.2224" = type { %"class.WTF::VectorBufferBase.2225" }
%"class.WTF::VectorBufferBase.2225" = type { %"class.WTF::VectorBackedLinkedListNode.2226"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2226" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2228" = type { %"class.std::__1::__compressed_pair.2229" }
%"class.std::__1::__compressed_pair.2229" = type { %"struct.std::__1::__compressed_pair_elem.2230" }
%"struct.std::__1::__compressed_pair_elem.2230" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2234" = type { %"class.std::__1::__compressed_pair.2235" }
%"class.std::__1::__compressed_pair.2235" = type { %"struct.std::__1::__compressed_pair_elem.2236" }
%"struct.std::__1::__compressed_pair_elem.2236" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2237, %class.scoped_refptr.2237, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2292", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2297", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2237 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2238", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2245" }
%"class.WTF::RefCounted.2238" = type { %"class.base::RefCounted.2239" }
%"class.base::RefCounted.2239" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2240", i32, [4 x i8] }>
%"class.WTF::Vector.2240" = type { %"class.WTF::VectorBuffer.2241" }
%"class.WTF::VectorBuffer.2241" = type { %"class.WTF::VectorBufferBase.2242" }
%"class.WTF::VectorBufferBase.2242" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2245" = type { %"class.WTF::VectorBuffer.2246" }
%"class.WTF::VectorBuffer.2246" = type { %"class.WTF::VectorBufferBase.2247" }
%"class.WTF::VectorBufferBase.2247" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2248", %"class.std::__1::unique_ptr.2264", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2248" = type { %"class.std::__1::__compressed_pair.2249" }
%"class.std::__1::__compressed_pair.2249" = type { %"struct.std::__1::__compressed_pair_elem.2250" }
%"struct.std::__1::__compressed_pair_elem.2250" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2251", %"class.WTF::Vector.2256", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2251" = type { %"class.WTF::VectorBuffer.2252" }
%"class.WTF::VectorBuffer.2252" = type { %"class.WTF::VectorBufferBase.2253" }
%"class.WTF::VectorBufferBase.2253" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2256" = type { %"class.WTF::VectorBuffer.2257" }
%"class.WTF::VectorBuffer.2257" = type { %"class.WTF::VectorBufferBase.2258" }
%"class.WTF::VectorBufferBase.2258" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2264" = type { %"class.std::__1::__compressed_pair.2265" }
%"class.std::__1::__compressed_pair.2265" = type { %"struct.std::__1::__compressed_pair_elem.2266" }
%"struct.std::__1::__compressed_pair_elem.2266" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2267", %"class.absl::optional.2267" }
%"class.absl::optional.2267" = type { %"class.absl::optional_internal::optional_data.2268" }
%"class.absl::optional_internal::optional_data.2268" = type { %"class.absl::optional_internal::optional_data_base.2269" }
%"class.absl::optional_internal::optional_data_base.2269" = type { %"class.absl::optional_internal::optional_data_dtor_base.2270" }
%"class.absl::optional_internal::optional_data_dtor_base.2270" = type { i8, [3 x i8], %union.anon.2271 }
%union.anon.2271 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2245"*, %"class.absl::optional.2277", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2277" = type { %"class.absl::optional_internal::optional_data.2278" }
%"class.absl::optional_internal::optional_data.2278" = type { %"class.absl::optional_internal::optional_data_base.2279" }
%"class.absl::optional_internal::optional_data_base.2279" = type { %"class.absl::optional_internal::optional_data_dtor_base.2280" }
%"class.absl::optional_internal::optional_data_dtor_base.2280" = type { i8, %union.anon.2281 }
%union.anon.2281 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2282", %"class.WTF::Vector.2287" }
%"class.WTF::Vector.2282" = type { %"class.WTF::VectorBuffer.2283" }
%"class.WTF::VectorBuffer.2283" = type { %"class.WTF::VectorBufferBase.2284", [128 x i8] }
%"class.WTF::VectorBufferBase.2284" = type { i32*, i32, i32 }
%"class.WTF::Vector.2287" = type { %"class.WTF::VectorBuffer.2288" }
%"class.WTF::VectorBuffer.2288" = type { %"class.WTF::VectorBufferBase.2289", [128 x i8] }
%"class.WTF::VectorBufferBase.2289" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2292" = type { %"class.WTF::VectorBuffer.2293" }
%"class.WTF::VectorBuffer.2293" = type { %"class.WTF::VectorBufferBase.2294" }
%"class.WTF::VectorBufferBase.2294" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2297" = type { %"class.WTF::HashTable.2298" }
%"class.WTF::HashTable.2298" = type <{ %"struct.WTF::KeyValuePair.2301"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2301" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2302", %"class.WTF::Vector.2307" }
%"class.WTF::HashMap.2302" = type { %"class.WTF::HashTable.2303" }
%"class.WTF::HashTable.2303" = type <{ %"struct.WTF::KeyValuePair.2306"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2306" = type opaque
%"class.WTF::Vector.2307" = type { %"class.WTF::VectorBuffer.2308" }
%"class.WTF::VectorBuffer.2308" = type { %"class.WTF::VectorBufferBase.2309" }
%"class.WTF::VectorBufferBase.2309" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2315" = type { %"class.std::__1::__compressed_pair.2316" }
%"class.std::__1::__compressed_pair.2316" = type { %"struct.std::__1::__compressed_pair_elem.2317" }
%"struct.std::__1::__compressed_pair_elem.2317" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2321" = type { %"class.WTF::VectorBuffer.2322" }
%"class.WTF::VectorBuffer.2322" = type { %"class.WTF::VectorBufferBase.2323" }
%"class.WTF::VectorBufferBase.2323" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2326 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2327" = type { %"class.blink::MemberBase.2328" }
%"class.blink::MemberBase.2328" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2329" = type { %"class.blink::MemberBase.2330" }
%"class.blink::MemberBase.2330" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2331" = type { %"class.blink::MemberBase.2332" }
%"class.blink::MemberBase.2332" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2333" = type { %"class.WTF::HashSet.2336" }
%"class.WTF::HashSet.2336" = type { %"class.WTF::HashTable.2337" }
%"class.WTF::HashTable.2337" = type <{ %"class.blink::WeakMember.2339"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2339" = type opaque
%"class.blink::HeapHashSet.2340" = type { %"class.WTF::HashSet.2343" }
%"class.WTF::HashSet.2343" = type { %"class.WTF::HashTable.2344" }
%"class.WTF::HashTable.2344" = type <{ %"class.blink::WeakMember.2346"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2346" = type opaque
%"class.std::__1::unique_ptr.2347" = type { %"class.std::__1::__compressed_pair.2348" }
%"class.std::__1::__compressed_pair.2348" = type { %"struct.std::__1::__compressed_pair_elem.2349" }
%"struct.std::__1::__compressed_pair_elem.2349" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2354" = type { %"class.std::__1::__compressed_pair.2355" }
%"class.std::__1::__compressed_pair.2355" = type { %"struct.std::__1::__compressed_pair_elem.2356" }
%"struct.std::__1::__compressed_pair_elem.2356" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2357", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.1756" = type { %"class.blink::MemberBase.1757" }
%"class.blink::MemberBase.1757" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1758" = type { %"class.blink::MemberBase.1759" }
%"class.blink::MemberBase.1759" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1760" = type { %"class.blink::MemberBase.1761" }
%"class.blink::MemberBase.1761" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1762" = type { %"class.blink::MemberBase.1763" }
%"class.blink::MemberBase.1763" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1764" = type { %"class.blink::MemberBase.1765" }
%"class.blink::MemberBase.1765" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.1775", %"class.blink::HeapListHashSet.1786", %"class.blink::HeapListHashSet.1797", %"class.blink::HeapListHashSet.1808", %"class.blink::HeapListHashSet.1819", %"class.blink::HeapListHashSet.1830", %"class.blink::HeapListHashSet.1841", %"class.blink::HeapListHashSet.1852", %"class.blink::HeapListHashSet.1863", %"class.blink::HeapListHashSet.1874", %"class.blink::HeapListHashSet.1885", %"class.blink::HeapListHashSet.1896", %"class.blink::HeapListHashSet.1907", %"class.blink::HeapListHashSet.1918", %"class.blink::HeapListHashSet.1929", %"class.blink::HeapListHashSet.1940", %"class.blink::HeapListHashSet.1951", %"class.blink::HeapListHashSet.1962", %"class.blink::HeapListHashSet.1973" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1771", %"class.blink::Member.1773", %"class.blink::Member.1773", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1771" = type <{ %"class.blink::Member.1773"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1773" = type { %"class.blink::MemberBase.1774" }
%"class.blink::MemberBase.1774" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1987", %"class.blink::Member.1773", %"class.blink::Member.1773" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.1775" = type { %"class.WTF::ListHashSet.base.1785", [7 x i8] }
%"class.WTF::ListHashSet.base.1785" = type <{ %"class.WTF::HashTable.1780", %"class.blink::Member.1782", %"class.blink::Member.1782", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1780" = type <{ %"class.blink::Member.1782"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1782" = type { %"class.blink::MemberBase.1783" }
%"class.blink::MemberBase.1783" = type { %"class.blink::HeapListHashSetNode.1784"* }
%"class.blink::HeapListHashSetNode.1784" = type { %"class.blink::Member.2145", %"class.blink::Member.1782", %"class.blink::Member.1782" }
%"class.blink::Member.2145" = type { %"class.blink::MemberBase.2146" }
%"class.blink::MemberBase.2146" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.1786" = type { %"class.WTF::ListHashSet.base.1796", [7 x i8] }
%"class.WTF::ListHashSet.base.1796" = type <{ %"class.WTF::HashTable.1791", %"class.blink::Member.1793", %"class.blink::Member.1793", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1791" = type <{ %"class.blink::Member.1793"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1793" = type { %"class.blink::MemberBase.1794" }
%"class.blink::MemberBase.1794" = type { %"class.blink::HeapListHashSetNode.1795"* }
%"class.blink::HeapListHashSetNode.1795" = type { %"class.blink::Member.2141", %"class.blink::Member.1793", %"class.blink::Member.1793" }
%"class.blink::Member.2141" = type { %"class.blink::MemberBase.2142" }
%"class.blink::MemberBase.2142" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.1797" = type { %"class.WTF::ListHashSet.base.1807", [7 x i8] }
%"class.WTF::ListHashSet.base.1807" = type <{ %"class.WTF::HashTable.1802", %"class.blink::Member.1804", %"class.blink::Member.1804", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1802" = type <{ %"class.blink::Member.1804"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1804" = type { %"class.blink::MemberBase.1805" }
%"class.blink::MemberBase.1805" = type { %"class.blink::HeapListHashSetNode.1806"* }
%"class.blink::HeapListHashSetNode.1806" = type { %"class.blink::Member.2137", %"class.blink::Member.1804", %"class.blink::Member.1804" }
%"class.blink::Member.2137" = type { %"class.blink::MemberBase.2138" }
%"class.blink::MemberBase.2138" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.1808" = type { %"class.WTF::ListHashSet.base.1818", [7 x i8] }
%"class.WTF::ListHashSet.base.1818" = type <{ %"class.WTF::HashTable.1813", %"class.blink::Member.1815", %"class.blink::Member.1815", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1813" = type <{ %"class.blink::Member.1815"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1815" = type { %"class.blink::MemberBase.1816" }
%"class.blink::MemberBase.1816" = type { %"class.blink::HeapListHashSetNode.1817"* }
%"class.blink::HeapListHashSetNode.1817" = type { %"class.blink::Member.2133", %"class.blink::Member.1815", %"class.blink::Member.1815" }
%"class.blink::Member.2133" = type { %"class.blink::MemberBase.2134" }
%"class.blink::MemberBase.2134" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.1819" = type { %"class.WTF::ListHashSet.base.1829", [7 x i8] }
%"class.WTF::ListHashSet.base.1829" = type <{ %"class.WTF::HashTable.1824", %"class.blink::Member.1826", %"class.blink::Member.1826", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1824" = type <{ %"class.blink::Member.1826"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1826" = type { %"class.blink::MemberBase.1827" }
%"class.blink::MemberBase.1827" = type { %"class.blink::HeapListHashSetNode.1828"* }
%"class.blink::HeapListHashSetNode.1828" = type { %"class.blink::Member.2129", %"class.blink::Member.1826", %"class.blink::Member.1826" }
%"class.blink::Member.2129" = type { %"class.blink::MemberBase.2130" }
%"class.blink::MemberBase.2130" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.1830" = type { %"class.WTF::ListHashSet.base.1840", [7 x i8] }
%"class.WTF::ListHashSet.base.1840" = type <{ %"class.WTF::HashTable.1835", %"class.blink::Member.1837", %"class.blink::Member.1837", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1835" = type <{ %"class.blink::Member.1837"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1837" = type { %"class.blink::MemberBase.1838" }
%"class.blink::MemberBase.1838" = type { %"class.blink::HeapListHashSetNode.1839"* }
%"class.blink::HeapListHashSetNode.1839" = type { %"class.blink::Member.2125", %"class.blink::Member.1837", %"class.blink::Member.1837" }
%"class.blink::Member.2125" = type { %"class.blink::MemberBase.2126" }
%"class.blink::MemberBase.2126" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.1841" = type { %"class.WTF::ListHashSet.base.1851", [7 x i8] }
%"class.WTF::ListHashSet.base.1851" = type <{ %"class.WTF::HashTable.1846", %"class.blink::Member.1848", %"class.blink::Member.1848", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1846" = type <{ %"class.blink::Member.1848"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1848" = type { %"class.blink::MemberBase.1849" }
%"class.blink::MemberBase.1849" = type { %"class.blink::HeapListHashSetNode.1850"* }
%"class.blink::HeapListHashSetNode.1850" = type { %"class.blink::Member.2121", %"class.blink::Member.1848", %"class.blink::Member.1848" }
%"class.blink::Member.2121" = type { %"class.blink::MemberBase.2122" }
%"class.blink::MemberBase.2122" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.1852" = type { %"class.WTF::ListHashSet.base.1862", [7 x i8] }
%"class.WTF::ListHashSet.base.1862" = type <{ %"class.WTF::HashTable.1857", %"class.blink::Member.1859", %"class.blink::Member.1859", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1857" = type <{ %"class.blink::Member.1859"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1859" = type { %"class.blink::MemberBase.1860" }
%"class.blink::MemberBase.1860" = type { %"class.blink::HeapListHashSetNode.1861"* }
%"class.blink::HeapListHashSetNode.1861" = type { %"class.blink::Member.2117", %"class.blink::Member.1859", %"class.blink::Member.1859" }
%"class.blink::Member.2117" = type { %"class.blink::MemberBase.2118" }
%"class.blink::MemberBase.2118" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1863" = type { %"class.WTF::ListHashSet.base.1873", [7 x i8] }
%"class.WTF::ListHashSet.base.1873" = type <{ %"class.WTF::HashTable.1868", %"class.blink::Member.1870", %"class.blink::Member.1870", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1868" = type <{ %"class.blink::Member.1870"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1870" = type { %"class.blink::MemberBase.1871" }
%"class.blink::MemberBase.1871" = type { %"class.blink::HeapListHashSetNode.1872"* }
%"class.blink::HeapListHashSetNode.1872" = type { %"class.blink::Member.2113", %"class.blink::Member.1870", %"class.blink::Member.1870" }
%"class.blink::Member.2113" = type { %"class.blink::MemberBase.2114" }
%"class.blink::MemberBase.2114" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1874" = type { %"class.WTF::ListHashSet.base.1884", [7 x i8] }
%"class.WTF::ListHashSet.base.1884" = type <{ %"class.WTF::HashTable.1879", %"class.blink::Member.1881", %"class.blink::Member.1881", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1879" = type <{ %"class.blink::Member.1881"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1881" = type { %"class.blink::MemberBase.1882" }
%"class.blink::MemberBase.1882" = type { %"class.blink::HeapListHashSetNode.1883"* }
%"class.blink::HeapListHashSetNode.1883" = type { %"class.blink::Member.1991", %"class.blink::Member.1881", %"class.blink::Member.1881" }
%"class.blink::HeapListHashSet.1885" = type { %"class.WTF::ListHashSet.base.1895", [7 x i8] }
%"class.WTF::ListHashSet.base.1895" = type <{ %"class.WTF::HashTable.1890", %"class.blink::Member.1892", %"class.blink::Member.1892", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1890" = type <{ %"class.blink::Member.1892"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1892" = type { %"class.blink::MemberBase.1893" }
%"class.blink::MemberBase.1893" = type { %"class.blink::HeapListHashSetNode.1894"* }
%"class.blink::HeapListHashSetNode.1894" = type { %"class.blink::Member.2107", %"class.blink::Member.1892", %"class.blink::Member.1892" }
%"class.blink::Member.2107" = type { %"class.blink::MemberBase.2108" }
%"class.blink::MemberBase.2108" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.1896" = type { %"class.WTF::ListHashSet.base.1906", [7 x i8] }
%"class.WTF::ListHashSet.base.1906" = type <{ %"class.WTF::HashTable.1901", %"class.blink::Member.1903", %"class.blink::Member.1903", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1901" = type <{ %"class.blink::Member.1903"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1903" = type { %"class.blink::MemberBase.1904" }
%"class.blink::MemberBase.1904" = type { %"class.blink::HeapListHashSetNode.1905"* }
%"class.blink::HeapListHashSetNode.1905" = type { %"class.blink::Member.2103", %"class.blink::Member.1903", %"class.blink::Member.1903" }
%"class.blink::Member.2103" = type { %"class.blink::MemberBase.2104" }
%"class.blink::MemberBase.2104" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.1907" = type { %"class.WTF::ListHashSet.base.1917", [7 x i8] }
%"class.WTF::ListHashSet.base.1917" = type <{ %"class.WTF::HashTable.1912", %"class.blink::Member.1914", %"class.blink::Member.1914", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1912" = type <{ %"class.blink::Member.1914"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1914" = type { %"class.blink::MemberBase.1915" }
%"class.blink::MemberBase.1915" = type { %"class.blink::HeapListHashSetNode.1916"* }
%"class.blink::HeapListHashSetNode.1916" = type { %"class.blink::Member.2099", %"class.blink::Member.1914", %"class.blink::Member.1914" }
%"class.blink::Member.2099" = type { %"class.blink::MemberBase.2100" }
%"class.blink::MemberBase.2100" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.1918" = type { %"class.WTF::ListHashSet.base.1928", [7 x i8] }
%"class.WTF::ListHashSet.base.1928" = type <{ %"class.WTF::HashTable.1923", %"class.blink::Member.1925", %"class.blink::Member.1925", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1923" = type <{ %"class.blink::Member.1925"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1925" = type { %"class.blink::MemberBase.1926" }
%"class.blink::MemberBase.1926" = type { %"class.blink::HeapListHashSetNode.1927"* }
%"class.blink::HeapListHashSetNode.1927" = type { %"class.blink::Member.2095", %"class.blink::Member.1925", %"class.blink::Member.1925" }
%"class.blink::Member.2095" = type { %"class.blink::MemberBase.2096" }
%"class.blink::MemberBase.2096" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.1929" = type { %"class.WTF::ListHashSet.base.1939", [7 x i8] }
%"class.WTF::ListHashSet.base.1939" = type <{ %"class.WTF::HashTable.1934", %"class.blink::Member.1936", %"class.blink::Member.1936", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1934" = type <{ %"class.blink::Member.1936"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1936" = type { %"class.blink::MemberBase.1937" }
%"class.blink::MemberBase.1937" = type { %"class.blink::HeapListHashSetNode.1938"* }
%"class.blink::HeapListHashSetNode.1938" = type { %"class.blink::Member.2091", %"class.blink::Member.1936", %"class.blink::Member.1936" }
%"class.blink::Member.2091" = type { %"class.blink::MemberBase.2092" }
%"class.blink::MemberBase.2092" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.1940" = type { %"class.WTF::ListHashSet.base.1950", [7 x i8] }
%"class.WTF::ListHashSet.base.1950" = type <{ %"class.WTF::HashTable.1945", %"class.blink::Member.1947", %"class.blink::Member.1947", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1945" = type <{ %"class.blink::Member.1947"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1947" = type { %"class.blink::MemberBase.1948" }
%"class.blink::MemberBase.1948" = type { %"class.blink::HeapListHashSetNode.1949"* }
%"class.blink::HeapListHashSetNode.1949" = type { %"class.blink::Member.2087", %"class.blink::Member.1947", %"class.blink::Member.1947" }
%"class.blink::Member.2087" = type { %"class.blink::MemberBase.2088" }
%"class.blink::MemberBase.2088" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.1951" = type { %"class.WTF::ListHashSet.base.1961", [7 x i8] }
%"class.WTF::ListHashSet.base.1961" = type <{ %"class.WTF::HashTable.1956", %"class.blink::Member.1958", %"class.blink::Member.1958", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1956" = type <{ %"class.blink::Member.1958"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1958" = type { %"class.blink::MemberBase.1959" }
%"class.blink::MemberBase.1959" = type { %"class.blink::HeapListHashSetNode.1960"* }
%"class.blink::HeapListHashSetNode.1960" = type { %"class.blink::Member.2083", %"class.blink::Member.1958", %"class.blink::Member.1958" }
%"class.blink::Member.2083" = type { %"class.blink::MemberBase.2084" }
%"class.blink::MemberBase.2084" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.1962" = type { %"class.WTF::ListHashSet.base.1972", [7 x i8] }
%"class.WTF::ListHashSet.base.1972" = type <{ %"class.WTF::HashTable.1967", %"class.blink::Member.1969", %"class.blink::Member.1969", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1967" = type <{ %"class.blink::Member.1969"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1969" = type { %"class.blink::MemberBase.1970" }
%"class.blink::MemberBase.1970" = type { %"class.blink::HeapListHashSetNode.1971"* }
%"class.blink::HeapListHashSetNode.1971" = type { %"class.blink::Member.1993", %"class.blink::Member.1969", %"class.blink::Member.1969" }
%"class.blink::HeapListHashSet.1973" = type { %"class.WTF::ListHashSet.base.1983", [7 x i8] }
%"class.WTF::ListHashSet.base.1983" = type <{ %"class.WTF::HashTable.1978", %"class.blink::Member.1980", %"class.blink::Member.1980", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1978" = type <{ %"class.blink::Member.1980"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1980" = type { %"class.blink::MemberBase.1981" }
%"class.blink::MemberBase.1981" = type { %"class.blink::HeapListHashSetNode.1982"* }
%"class.blink::HeapListHashSetNode.1982" = type { %"class.blink::Member.1985", %"class.blink::Member.1980", %"class.blink::Member.1980" }
%class.scoped_refptr.1984 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1985" = type { %"class.blink::MemberBase.1986" }
%"class.blink::MemberBase.1986" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1987" = type { %"class.blink::MemberBase.1988" }
%"class.blink::MemberBase.1988" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1989" = type { %"class.blink::MemberBase.1990" }
%"class.blink::MemberBase.1990" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1991" = type { %"class.blink::MemberBase.1992" }
%"class.blink::MemberBase.1992" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1993" = type { %"class.blink::MemberBase.1994" }
%"class.blink::MemberBase.1994" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.1997" = type { %"class.blink::MemberBase.1998" }
%"class.blink::MemberBase.1998" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1999" = type { %"class.blink::MemberBase.2000" }
%"class.blink::MemberBase.2000" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2001" }
%"class.blink::Member.2001" = type { %"class.blink::MemberBase.2002" }
%"class.blink::MemberBase.2002" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2787" }
%"class.mojo::Remote.2787" = type { %"class.mojo::internal::InterfacePtrState.2788" }
%"class.mojo::internal::InterfacePtrState.2788" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2789" }
%"class.std::__1::unique_ptr.2789" = type { %"class.std::__1::__compressed_pair.2790" }
%"class.std::__1::__compressed_pair.2790" = type { %"struct.std::__1::__compressed_pair_elem.2791" }
%"struct.std::__1::__compressed_pair_elem.2791" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2003" = type { %"class.std::__1::__compressed_pair.2004" }
%"class.std::__1::__compressed_pair.2004" = type { %"struct.std::__1::__compressed_pair_elem.2005" }
%"struct.std::__1::__compressed_pair_elem.2005" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type { i32 (...)**, %class.scoped_refptr.2006, %"class.blink::WebVector", %"class.base::WaitableEvent"* }
%class.scoped_refptr.2006 = type { %"class.network::SharedURLLoaderFactory"* }
%"class.network::SharedURLLoaderFactory" = type <{ %"class.network::mojom::URLLoaderFactory", %"class.base::RefCounted.2007", [4 x i8] }>
%"class.network::mojom::URLLoaderFactory" = type { i32 (...)** }
%"class.base::RefCounted.2007" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.2015, i8, [7 x i8] }>
%class.scoped_refptr.2015 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.2016", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.2016" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2017" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2017" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2024" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2025" = type { %"class.std::__1::__compressed_pair.2026" }
%"class.std::__1::__compressed_pair.2026" = type { %"struct.std::__1::__compressed_pair_elem.2027" }
%"struct.std::__1::__compressed_pair_elem.2027" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.2031" = type { %"class.std::__1::__compressed_pair.2032" }
%"class.std::__1::__compressed_pair.2032" = type { %"struct.std::__1::__compressed_pair_elem.2033" }
%"struct.std::__1::__compressed_pair_elem.2033" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2037" }
%"class.blink::Member.2037" = type { %"class.blink::MemberBase.2038" }
%"class.blink::MemberBase.2038" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2797" }
%"class.mojo::AssociatedRemote.2797" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2798" }
%"class.mojo::internal::AssociatedInterfacePtrState.2798" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2799" }
%"class.std::__1::unique_ptr.2799" = type { %"class.std::__1::__compressed_pair.2800" }
%"class.std::__1::__compressed_pair.2800" = type { %"struct.std::__1::__compressed_pair_elem.2801" }
%"struct.std::__1::__compressed_pair_elem.2801" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2039" = type { %"class.blink::Member.2040" }
%"class.blink::Member.2040" = type { %"class.blink::MemberBase.2041" }
%"class.blink::MemberBase.2041" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2807" }
%"class.mojo::AssociatedRemote.2807" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2808" }
%"class.mojo::internal::AssociatedInterfacePtrState.2808" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2809" }
%"class.std::__1::unique_ptr.2809" = type { %"class.std::__1::__compressed_pair.2810" }
%"class.std::__1::__compressed_pair.2810" = type { %"struct.std::__1::__compressed_pair_elem.2811" }
%"struct.std::__1::__compressed_pair_elem.2811" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2042" }
%"class.blink::Member.2042" = type { %"class.blink::MemberBase.2043" }
%"class.blink::MemberBase.2043" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1680", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2817" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.737" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2817" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2044" = type { %"class.blink::Member.2045" }
%"class.blink::Member.2045" = type { %"class.blink::MemberBase.2046" }
%"class.blink::MemberBase.2046" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2820", %"class.blink::Member.1680", %"class.mojo::AssociatedReceiver.2821" }
%"class.blink::ThreadState::PrefinalizerRegistration.2820" = type { i8 }
%"class.mojo::AssociatedReceiver.2821" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2822" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2822" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2047" }
%"class.blink::Member.2047" = type { %"class.blink::MemberBase.2048" }
%"class.blink::MemberBase.2048" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2825", %"class.blink::Member.1680", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2825" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.1575, %"class.std::__1::unique_ptr.737", %"class.base::WeakPtrFactory.2826" }
%"class.base::WeakPtrFactory.2826" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2049" = type { %"class.blink::Member.2050" }
%"class.blink::Member.2050" = type { %"class.blink::MemberBase.2051" }
%"class.blink::MemberBase.2051" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2829", %"class.blink::Member.1680", %"class.mojo::AssociatedReceiver.2830" }
%"class.blink::ThreadState::PrefinalizerRegistration.2829" = type { i8 }
%"class.mojo::AssociatedReceiver.2830" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2831" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2831" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2052" = type { %"class.blink::MemberBase.2053" }
%"class.blink::MemberBase.2053" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2054" = type { %"class.blink::MemberBase.2055" }
%"class.blink::MemberBase.2055" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2056" = type { %"class.blink::MemberBase.2057" }
%"class.blink::MemberBase.2057" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2058" = type { %"class.blink::MemberBase.2059" }
%"class.blink::MemberBase.2059" = type { %"class.blink::HeapHashMap.2060"* }
%"class.blink::HeapHashMap.2060" = type opaque
%"class.mojo::StructPtr.2061" = type { %"class.std::__1::unique_ptr.2062" }
%"class.std::__1::unique_ptr.2062" = type { %"class.std::__1::__compressed_pair.2063" }
%"class.std::__1::__compressed_pair.2063" = type { %"struct.std::__1::__compressed_pair_elem.2064" }
%"struct.std::__1::__compressed_pair_elem.2064" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2065", %"class.mojo::InlinedStructPtr.2066" }
%"class.mojo::InlinedStructPtr.2065" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2066" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2070" = type { %"class.blink::MemberBase.2071" }
%"class.blink::MemberBase.2071" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2072" = type { %"class.absl::optional_internal::optional_data.2073" }
%"class.absl::optional_internal::optional_data.2073" = type { %"class.absl::optional_internal::optional_data_base.2074" }
%"class.absl::optional_internal::optional_data_base.2074" = type { %"class.absl::optional_internal::optional_data_dtor_base.2075" }
%"class.absl::optional_internal::optional_data_dtor_base.2075" = type { i8, %union.anon.2076 }
%union.anon.2076 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1437", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map.1682" = type { %"class.base::internal::flat_tree.1683" }
%"class.base::internal::flat_tree.1683" = type { %"class.std::__1::vector.1684" }
%"class.std::__1::vector.1684" = type { %"class.std::__1::__vector_base.1685" }
%"class.std::__1::__vector_base.1685" = type { %"struct.std::__1::pair.1686"*, %"struct.std::__1::pair.1686"*, %"class.std::__1::__compressed_pair.1687" }
%"struct.std::__1::pair.1686" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"struct.std::__1::pair.1686"* }
%"class.blink::Member.1692" = type { %"class.blink::MemberBase.1693" }
%"class.blink::MemberBase.1693" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1694" = type { %"class.absl::optional_internal::optional_data.1695" }
%"class.absl::optional_internal::optional_data.1695" = type { %"class.absl::optional_internal::optional_data_base.1696" }
%"class.absl::optional_internal::optional_data_base.1696" = type { %"class.absl::optional_internal::optional_data_dtor_base.1697" }
%"class.absl::optional_internal::optional_data_dtor_base.1697" = type { i8, %union.anon.1698 }
%union.anon.1698 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1699" = type { %"class.absl::optional_internal::optional_data.1700" }
%"class.absl::optional_internal::optional_data.1700" = type { %"class.absl::optional_internal::optional_data_base.1701" }
%"class.absl::optional_internal::optional_data_base.1701" = type { %"class.absl::optional_internal::optional_data_dtor_base.1702" }
%"class.absl::optional_internal::optional_data_dtor_base.1702" = type { i8, %union.anon.1703 }
%union.anon.1703 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1704" }
%"class.blink::HeapHashSet.1704" = type { %"class.WTF::HashSet.1707" }
%"class.WTF::HashSet.1707" = type { %"class.WTF::HashTable.1708" }
%"class.WTF::HashTable.1708" = type <{ %"class.blink::WeakMember.1710"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1710" = type opaque
%"class.blink::Member.2754" = type { %"class.blink::MemberBase.2755" }
%"class.blink::MemberBase.2755" = type { %"class.blink::EmbeddedContentView"* }
%"class.blink::EmbeddedContentView" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8, [5 x i8] }>
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.2460", %"class.base::flat_map.1682", i8, [7 x i8] }>
%"class.std::__1::vector.2460" = type { %"class.std::__1::__vector_base.2461" }
%"class.std::__1::__vector_base.2461" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.2469" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.2462", i8, i8, [6 x i8] }>
%"class.std::__1::vector.2462" = type { %"class.std::__1::__vector_base.2463" }
%"class.std::__1::__vector_base.2463" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.2464" }
%"class.std::__1::__compressed_pair.2464" = type { %"struct.std::__1::__compressed_pair_elem.2465" }
%"struct.std::__1::__compressed_pair_elem.2465" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.2469" = type { %"struct.std::__1::__compressed_pair_elem.2470" }
%"struct.std::__1::__compressed_pair_elem.2470" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.2756" = type { %"class.blink::MemberBase.2757" }
%"class.blink::MemberBase.2757" = type { %"class.blink::LazyLoadFrameObserver"* }
%"class.blink::LazyLoadFrameObserver" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2758" = type { %"class.blink::MemberBase.2759" }
%"class.blink::MemberBase.2759" = type { %"class.blink::HTMLImageLoader"* }
%"class.blink::HTMLImageLoader" = type opaque
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Object"* }
%"class.blink::Member.2186" = type { %"class.blink::MemberBase.2187" }
%"class.blink::MemberBase.2187" = type { %"class.blink::WebPluginContainerImpl"* }
%"class.blink::WebPluginContainerImpl" = type opaque
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member", %"class.blink::Member.5", %"class.blink::Member.48", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.24", %"class.WTF::Vector.2887" }
%"class.WTF::Vector.2887" = type { %"class.WTF::VectorBuffer.2888" }
%"class.WTF::VectorBuffer.2888" = type { %"class.WTF::VectorBufferBase.2889", [64 x i8] }
%"class.WTF::VectorBufferBase.2889" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::ShadowRoot" = type opaque
%"class.blink::HTMLFieldSetElement" = type { %"class.blink::HTMLFormControlElement.base", [3 x i8] }
%"class.blink::HTMLFormControlElement.base" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8 }>
%"class.blink::Persistent.2732" = type { %"class.blink::PersistentBase.2733" }
%"class.blink::PersistentBase.2733" = type { %"class.blink::ListedElement"*, %"class.blink::PersistentNodePtr" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.332", [4 x i8] }>
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::Persistent.2732" }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2893", %"class.blink::Member.2895", %"class.blink::Member.2897", %"class.blink::Member.2916", %"class.blink::Member.2918" }
%"class.blink::Member.2893" = type { %"class.blink::MemberBase.2894" }
%"class.blink::MemberBase.2894" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.820 }
%"class.blink::Member.2895" = type { %"class.blink::MemberBase.2896" }
%"class.blink::MemberBase.2896" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2897" = type { %"class.blink::MemberBase.2898" }
%"class.blink::MemberBase.2898" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2901", %"class.blink::HeapHashSet.2910" }
%"class.blink::HeapVector.2901" = type { %"class.WTF::Vector.2904" }
%"class.WTF::Vector.2904" = type { %"class.WTF::VectorBuffer.2905" }
%"class.WTF::VectorBuffer.2905" = type { %"class.WTF::VectorBufferBase.2906" }
%"class.WTF::VectorBufferBase.2906" = type { %"class.blink::Member.2907"*, i32, i32 }
%"class.blink::Member.2907" = type { %"class.blink::MemberBase.2908" }
%"class.blink::MemberBase.2908" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2910" = type { %"class.WTF::HashSet.2913" }
%"class.WTF::HashSet.2913" = type { %"class.WTF::HashTable.2914" }
%"class.WTF::HashTable.2914" = type <{ %"class.blink::Member.2907"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2916" = type { %"class.blink::MemberBase.2917" }
%"class.blink::MemberBase.2917" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2918" = type { %"class.blink::MemberBase.2919" }
%"class.blink::MemberBase.2919" = type { %"class.blink::HeapHashSet.2920"* }
%"class.blink::HeapHashSet.2920" = type opaque
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.885", %"class.blink::DataRef.965", %"class.blink::DataRef.969", %"class.blink::DataRef.1164", %"class.blink::DataRef.1231", %"class.blink::DataRef.1235", %"class.blink::DataRef.1239", %"class.blink::DataRef.1243", [20 x i8], [4 x i8] }>
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.2707", %"class.blink::Member.2707", %"class.blink::Member.2709", %"class.blink::Member.2711", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.2702" }
%"class.absl::optional.2702" = type { %"class.absl::optional_internal::optional_data.2703" }
%"class.absl::optional_internal::optional_data.2703" = type { %"class.absl::optional_internal::optional_data_base.2704" }
%"class.absl::optional_internal::optional_data_base.2704" = type { %"class.absl::optional_internal::optional_data_dtor_base.2705" }
%"class.absl::optional_internal::optional_data_dtor_base.2705" = type { i8, %union.anon.2706 }
%union.anon.2706 = type { i64 }
%"class.blink::Member.2707" = type { %"class.blink::MemberBase.2708" }
%"class.blink::MemberBase.2708" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.2709" = type { %"class.blink::MemberBase.2710" }
%"class.blink::MemberBase.2710" = type { %"class.blink::Event"* }
%"class.blink::Member.2711" = type { %"class.blink::MemberBase.2712" }
%"class.blink::MemberBase.2712" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.2715", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.2727", %"class.WTF::Vector.2728" }
%"class.std::__1::unique_ptr.2715" = type { %"class.std::__1::__compressed_pair.2716" }
%"class.std::__1::__compressed_pair.2716" = type { %"struct.std::__1::__compressed_pair_elem.2717" }
%"struct.std::__1::__compressed_pair_elem.2717" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.2718", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2718" = type { %"class.std::__1::__compressed_pair.2719" }
%"class.std::__1::__compressed_pair.2719" = type { %"struct.std::__1::__compressed_pair_elem.2720" }
%"struct.std::__1::__compressed_pair_elem.2720" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.2727" = type { %"class.blink::MemberBase.1681" }
%"class.WTF::Vector.2728" = type { %"class.WTF::VectorBuffer.2729" }
%"class.WTF::VectorBuffer.2729" = type { %"class.WTF::VectorBufferBase.2284" }
%"class.blink::HTMLLegendElement" = type { %"class.blink::HTMLElement" }
%"class.blink::FormControlState" = type { i32, %"class.WTF::Vector.717" }
%"class.blink::LocalFrameClient" = type { %"class.blink::FrameClient" }
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::ElementInternals" = type { %"class.blink::ScriptWrappable", %"class.blink::ListedElement.base", %"class.blink::Member.2734", %"class.blink::Member.2736", %"class.blink::Member.2736", i8, %"class.blink::Member.2738", %"class.blink::Member.66", %"class.blink::Member.2740", %"class.WTF::HashMap.2742", %"class.blink::HeapHashMap.2747" }
%"class.blink::Member.2734" = type { %"class.blink::MemberBase.2735" }
%"class.blink::MemberBase.2735" = type { %"class.blink::HTMLElement"* }
%"class.blink::Member.2736" = type { %"class.blink::MemberBase.2737" }
%"class.blink::MemberBase.2737" = type { %"class.blink::V8UnionFileOrFormDataOrUSVString"* }
%"class.blink::V8UnionFileOrFormDataOrUSVString" = type opaque
%"class.blink::Member.2738" = type { %"class.blink::MemberBase.2739" }
%"class.blink::MemberBase.2739" = type { %"class.blink::ValidityStateFlags"* }
%"class.blink::ValidityStateFlags" = type opaque
%"class.blink::Member.2740" = type { %"class.blink::MemberBase.2741" }
%"class.blink::MemberBase.2741" = type { %"class.blink::CustomStateSet"* }
%"class.blink::CustomStateSet" = type opaque
%"class.WTF::HashMap.2742" = type { %"class.WTF::HashTable.2743" }
%"class.WTF::HashTable.2743" = type <{ %"struct.WTF::KeyValuePair.2746"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2746" = type opaque
%"class.blink::HeapHashMap.2747" = type { %"class.WTF::HashMap.2750" }
%"class.WTF::HashMap.2750" = type { %"class.WTF::HashTable.2751" }
%"class.WTF::HashTable.2751" = type <{ %"struct.WTF::KeyValuePair.2753"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2753" = type opaque
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.2922", %"class.blink::FreeList", %"class.WTF::Vector.2927" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.2921" }
%"struct.std::__1::array.2921" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.2922" = type { %"class.WTF::VectorBuffer.2923" }
%"class.WTF::VectorBuffer.2923" = type { %"class.WTF::VectorBufferBase.2924" }
%"class.WTF::VectorBufferBase.2924" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.2927" = type { %"class.WTF::VectorBuffer.2928" }
%"class.WTF::VectorBuffer.2928" = type { %"class.WTF::VectorBufferBase.2929" }
%"class.WTF::VectorBufferBase.2929" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::FormData" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.2958, %"class.blink::Member.2959", %"class.blink::SelfKeepAlive", %"class.util::TokenType.2963" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase.2957" }
%"class.v8::PersistentBase.2957" = type { %"class.v8::Context"* }
%class.scoped_refptr.2958 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.2959" = type { %"class.blink::MemberBase.2960" }
%"class.blink::MemberBase.2960" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.2961" }
%"class.blink::Persistent.2961" = type { %"class.blink::PersistentBase.2962" }
%"class.blink::PersistentBase.2962" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType.2963" = type { %"class.base::StrongAlias.2964" }
%"class.base::StrongAlias.2964" = type { %"class.base::UnguessableToken" }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN5blink13ListedElement16AppendToFormDataERNS_8FormDataE = comdat any

$_ZN5blink13ListedElement27DisabledStateMightBeChangedEv = comdat any

$_ZN5blink27FormAttributeTargetObserverD0Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_27FormAttributeTargetObserverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13ValidityStateEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK5blink13ValidityState5TraceEPNS_7VisitorE = comdat any

$_ZN5blink15ScriptWrappableD2Ev = comdat any

$_ZN5blink13ValidityStateD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink13ValidityState18GetWrapperTypeInfoEv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ListedElementEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_13ListedElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZNK5blink14PersistentBaseINS_13ListedElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE15TracePersistentEPNS_7VisitorE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink13ListedElementEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink13ListedElementEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink13ListedElementEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16IdTargetObserverEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16IdTargetObserverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16IdTargetObserverEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16IdTargetObserverEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink13ValidityStateE = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_16IdTargetObserverEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16IdTargetObserverEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink13ListedElementE = hidden unnamed_addr constant { [34 x i8*] } { [34 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ListedElement"*, %"class.blink::Visitor"*)* @_ZNK5blink13ListedElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ListedElement"*)* @_ZN5blink13ListedElementD2Ev to i8*), i8* bitcast (void (%"class.blink::ListedElement"*)* @_ZN5blink13ListedElementD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement29IsFormControlElementWithStateEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement18IsElementInternalsEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement7GetNameEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*, %"class.blink::FormData"*)* @_ZN5blink13ListedElement16AppendToFormDataERNS_8FormDataE to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement11CustomErrorEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement11HasBadInputEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement15PatternMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement13RangeOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement14RangeUnderflowEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement12StepMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement7TooLongEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement8TooShortEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement12TypeMismatchEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement12ValueMissingEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement17validationMessageEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement20ValidationSubMessageEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*, %"class.WTF::String"*)* @_ZN5blink13ListedElement17setCustomValidityERKN3WTF6StringE to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement16ValidationAnchorEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*)* @_ZN5blink13ListedElement24DisabledAttributeChangedEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*)* @_ZN5blink13ListedElement27DisabledStateMightBeChangedEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement25ClassSupportsStateRestoreEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement36ShouldSaveAndRestoreFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::FormControlState"*, %"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement20SaveFormControlStateEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*, %"class.blink::FormControlState"*)* @_ZN5blink13ListedElement23RestoreFormControlStateERKNS_16FormControlStateE to i8*), i8* bitcast (void (%"class.blink::ListedElement"*)* @_ZN5blink13ListedElement14WillChangeFormEv to i8*), i8* bitcast (void (%"class.blink::ListedElement"*)* @_ZN5blink13ListedElement13DidChangeFormEv to i8*), i8* bitcast (i1 (%"class.blink::ListedElement"*)* @_ZNK5blink13ListedElement18RecalcWillValidateEv to i8*)] }, align 8
@_ZN5blink10html_names9kFormAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names13kReadonlyAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names8kInvalidE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [60 x i8] c"An invalid form control with name='%name' is not focusable.\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"%name\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"SetNeedsValidityCheck\00", align 1
@.str.3 = private unnamed_addr constant [67 x i8] c"../../third_party/blink/renderer/core/html/forms/listed_element.cc\00", align 1
@_ZN5blink10html_names13kDisabledAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF12g_empty_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZTVN5blink27FormAttributeTargetObserverE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::IdTargetObserver"*)* @_ZN5blink16IdTargetObserverD2Ev to i8*), i8* bitcast (void (%"class.blink::FormAttributeTargetObserver"*)* @_ZN5blink27FormAttributeTargetObserverD0Ev to i8*), i8* bitcast (void (%"class.blink::FormAttributeTargetObserver"*, %"class.blink::Visitor"*)* @_ZNK5blink27FormAttributeTargetObserver5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::FormAttributeTargetObserver"*)* @_ZN5blink27FormAttributeTargetObserver15IdTargetChangedEv to i8*), i8* bitcast (void (%"class.blink::IdTargetObserver"*)* @_ZN5blink16IdTargetObserver10UnregisterEv to i8*)] }, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink10html_names9kNameAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZTVN5blink13ValidityStateE = linkonce_odr hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::ValidityState"*)* @_ZN5blink13ValidityStateD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ValidityState"*, %"class.blink::Visitor"*)* @_ZNK5blink13ValidityState5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::ValidityState"*)* @_ZNK5blink13ValidityState18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*)] }, comdat, align 8
@_ZN5blink13ValidityState18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink10html_names8kFormTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kFieldsetTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names12kDatalistTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str.6 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.9 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.11 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.12 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13ListedElementEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [167 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::ListedElement>, WTF::VectorTraits<blink::Member<blink::ListedElement> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ConsoleMessage]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink10html_names10kLegendTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16IdTargetObserverEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IdTargetObserver]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16IdTargetObserverEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16IdTargetObserverEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16IdTargetObserverEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16IdTargetObserverEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16IdTargetObserverEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink10html_names10kObjectTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8

@_ZN5blink13ListedElementD1Ev = hidden unnamed_addr alias void (%"class.blink::ListedElement"*), void (%"class.blink::ListedElement"*)* @_ZN5blink13ListedElementD2Ev
@_ZN5blink27FormAttributeTargetObserverC1ERKN3WTF12AtomicStringEPNS_13ListedElementE = hidden unnamed_addr alias void (%"class.blink::FormAttributeTargetObserver"*, %"class.WTF::AtomicString"*, %"class.blink::ListedElement"*), void (%"class.blink::FormAttributeTargetObserver"*, %"class.WTF::AtomicString"*, %"class.blink::ListedElement"*)* @_ZN5blink27FormAttributeTargetObserverC2ERKN3WTF12AtomicStringEPNS_13ListedElementE

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElementC2Ev(%"class.blink::ListedElement"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN5blink13ListedElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 1
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 7
  %6 = bitcast %"class.blink::FormAttributeTargetObserver"** %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false)
  %7 = load i8, i8* %5, align 8
  %8 = and i8 %7, -64
  %9 = or i8 %8, 24
  store i8 %9, i8* %5, align 8
  %10 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 9
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 10
  store i32 0, i32* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElementD2Ev(%"class.blink::ListedElement"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN5blink13ListedElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 6, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #14
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElementD0Ev(%"class.blink::ListedElement"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13ListedElement5TraceEPNS_7VisitorE(%"class.blink::ListedElement"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_27FormAttributeTargetObserverEE5TraceEPNS_7VisitorEPKv) #14
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 4
  %15 = bitcast %"class.blink::Member.5"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv) #14
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 5
  %26 = bitcast %"class.blink::Member.48"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13ValidityStateEE5TraceEPNS_7VisitorEPKv) #14
  br label %35

35:                                               ; preds = %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ValidityState"* @_ZN5blink13ListedElement8validityEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.blink::Member.48", %"class.blink::Member.48"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.blink::ValidityState"*, %"class.blink::ValidityState"** %3, align 8
  %5 = icmp eq %"class.blink::ValidityState"* %4, null
  br i1 %5, label %6, label %26

6:                                                ; preds = %1
  %7 = ptrtoint %"class.blink::ListedElement"* %0 to i64
  %8 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 24) #14
  %9 = bitcast i8* %8 to i32 (...)***
  %10 = getelementptr inbounds i8, i8* %8, i64 8
  %11 = bitcast i8* %10 to i64**
  store i64* null, i64** %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink13ValidityStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 16
  %13 = bitcast i8* %12 to i64*
  store i64 %7, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 -4
  %15 = bitcast i8* %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = or i16 %16, 1
  store atomic i16 %17, i16* %15 release, align 2
  %18 = ptrtoint i8* %8 to i64
  %19 = bitcast %"class.blink::Member.48"* %2 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  %22 = bitcast i8* %8 to %"class.blink::ValidityState"*
  br i1 %21, label %26, label %23

23:                                               ; preds = %6
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %8) #14
  %25 = load %"class.blink::ValidityState"*, %"class.blink::ValidityState"** %3, align 8
  br label %26

26:                                               ; preds = %1, %23, %6
  %27 = phi %"class.blink::ValidityState"* [ %4, %1 ], [ %25, %23 ], [ %22, %6 ]
  ret %"class.blink::ValidityState"* %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::ListedElement"*, %"class.blink::Document"* nocapture readnone dereferenceable(2848)) local_unnamed_addr #1 align 2 {
  %3 = icmp eq %"class.blink::ListedElement"* %0, null
  %4 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %3, label %13, label %5

5:                                                ; preds = %2
  %6 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %4, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, i64 3
  %8 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %12 = bitcast %"class.blink::Member.5"* %11 to %"class.blink::HTMLElement"*
  br label %26

13:                                               ; preds = %5, %2
  %14 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %4, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %14, i64 5
  %16 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::ListedElement"* %0) #14
  br i1 %17, label %18, label %23

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %20 = getelementptr inbounds i8, i8* %19, i64 80
  %21 = bitcast i8* %20 to %"class.blink::HTMLElement"**
  %22 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %21, align 8
  br label %26

23:                                               ; preds = %13
  %24 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %25 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %24, i64 0, i32 0, i32 0, i32 0
  br label %26

26:                                               ; preds = %10, %18, %23
  %27 = phi %"class.blink::HTMLElement"* [ %22, %18 ], [ %25, %23 ], [ %12, %10 ]
  %28 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kFormAttrE, align 8
  %29 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %27, i64 0, i32 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %29, align 8
  %31 = icmp eq %"class.blink::ElementData"* %30, null
  br i1 %31, label %99, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %30, i64 0, i32 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = and i32 %34, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.blink::ElementData"* %30 to %"class.blink::UniqueElementData"*
  %39 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %30, i64 1, i32 1
  %40 = bitcast %"class.blink::Member.24"* %39 to %"class.blink::Attribute"**
  %41 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %38, i64 0, i32 2, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  br label %49

44:                                               ; preds = %32
  %45 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %30, i64 1
  %46 = bitcast %"class.blink::ElementData"* %45 to %"class.blink::Attribute"*
  %47 = lshr i32 %34, 1
  %48 = and i32 %47, 268435455
  br label %49

49:                                               ; preds = %44, %37
  %50 = phi %"class.blink::Attribute"* [ %46, %44 ], [ %41, %37 ]
  %51 = phi i32 [ %48, %44 ], [ %43, %37 ]
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %50, i64 %52
  %54 = icmp eq i32 %51, 0
  br i1 %54, label %99, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %28, i64 0, i32 0, i32 0
  %57 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 3, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %57, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %60

60:                                               ; preds = %76, %55
  %61 = phi %"class.blink::Attribute"* [ %50, %55 ], [ %77, %76 ]
  %62 = phi i32 [ 0, %55 ], [ %78, %76 ]
  %63 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %61, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  %65 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %64, %57
  br i1 %65, label %80, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %64, i64 0, i32 3, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %68, %69
  br i1 %70, label %71, label %76

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %64, i64 0, i32 4, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %73, %74
  br i1 %75, label %80, label %76

76:                                               ; preds = %71, %66
  %77 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %61, i64 1
  %78 = add i32 %62, 1
  %79 = icmp eq %"class.blink::Attribute"* %77, %53
  br i1 %79, label %99, label %60

80:                                               ; preds = %60, %71
  %81 = icmp eq i32 %62, -1
  br i1 %81, label %99, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 3
  %84 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %83, i64 0, i32 0, i32 0
  %85 = load %"class.blink::FormAttributeTargetObserver"*, %"class.blink::FormAttributeTargetObserver"** %84, align 8
  %86 = icmp eq %"class.blink::FormAttributeTargetObserver"* %85, null
  br i1 %86, label %93, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.blink::FormAttributeTargetObserver", %"class.blink::FormAttributeTargetObserver"* %85, i64 0, i32 0
  %89 = bitcast %"class.blink::FormAttributeTargetObserver"* %85 to void (%"class.blink::IdTargetObserver"*)***
  %90 = load void (%"class.blink::IdTargetObserver"*)**, void (%"class.blink::IdTargetObserver"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::IdTargetObserver"*)*, void (%"class.blink::IdTargetObserver"*)** %90, i64 4
  %92 = load void (%"class.blink::IdTargetObserver"*)*, void (%"class.blink::IdTargetObserver"*)** %91, align 8
  tail call void %92(%"class.blink::IdTargetObserver"* %88) #14
  br label %93

93:                                               ; preds = %87, %82
  %94 = bitcast %"class.blink::Member"* %83 to i64*
  store atomic i64 0, i64* %94 monotonic, align 8
  %95 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %99, label %97

97:                                               ; preds = %93
  %98 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #14
  br label %99

99:                                               ; preds = %76, %80, %49, %26, %97, %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(104) %"class.blink::HTMLElement"* @_ZN5blink13ListedElement13ToHTMLElementEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = icmp eq %"class.blink::ListedElement"* %0, null
  %3 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %2, label %12, label %4

4:                                                ; preds = %1
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 3
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %11 = bitcast %"class.blink::Member.5"* %10 to %"class.blink::HTMLElement"*
  br label %25

12:                                               ; preds = %4, %1
  %13 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %13, i64 5
  %15 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::ListedElement"* %0) #14
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %19 = getelementptr inbounds i8, i8* %18, i64 80
  %20 = bitcast i8* %19 to %"class.blink::HTMLElement"**
  %21 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %20, align 8
  br label %25

22:                                               ; preds = %12
  %23 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %24 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %23, i64 0, i32 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %9, %17, %22
  %26 = phi %"class.blink::HTMLElement"* [ %21, %17 ], [ %24, %22 ], [ %11, %9 ]
  ret %"class.blink::HTMLElement"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement30SetFormAttributeTargetObserverEPNS_27FormAttributeTargetObserverE(%"class.blink::ListedElement"* nocapture, %"class.blink::FormAttributeTargetObserver"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::FormAttributeTargetObserver"*, %"class.blink::FormAttributeTargetObserver"** %4, align 8
  %6 = icmp eq %"class.blink::FormAttributeTargetObserver"* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::FormAttributeTargetObserver", %"class.blink::FormAttributeTargetObserver"* %5, i64 0, i32 0
  %9 = bitcast %"class.blink::FormAttributeTargetObserver"* %5 to void (%"class.blink::IdTargetObserver"*)***
  %10 = load void (%"class.blink::IdTargetObserver"*)**, void (%"class.blink::IdTargetObserver"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::IdTargetObserver"*)*, void (%"class.blink::IdTargetObserver"*)** %10, i64 4
  %12 = load void (%"class.blink::IdTargetObserver"*)*, void (%"class.blink::IdTargetObserver"*)** %11, align 8
  tail call void %12(%"class.blink::IdTargetObserver"* %8) #14
  br label %13

13:                                               ; preds = %2, %7
  %14 = ptrtoint %"class.blink::FormAttributeTargetObserver"* %1 to i64
  %15 = bitcast %"class.blink::Member"* %3 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.blink::FormAttributeTargetObserver"* %1 to i8*
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #14
  br label %21

21:                                               ; preds = %13, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::ListedElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 9
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 1
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 10
  store i32 0, i32* %5, align 8
  tail call void @_ZN5blink13ListedElement23UpdateWillValidateCacheEv(%"class.blink::ListedElement"* %0)
  %6 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 7
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %39, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 4, i32 0, i32 0
  %12 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %11, align 8
  %13 = icmp eq %"class.blink::HTMLFormElement"* %12, null
  br i1 %13, label %39, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %16 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %15) #14
  %17 = icmp eq %"class.blink::ContainerNode"* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %14, %18
  %19 = phi %"class.blink::Node"* [ %21, %18 ], [ %15, %14 ]
  %20 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %19) #14
  %21 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %20, i64 0, i32 0
  %22 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %21) #14
  %23 = icmp eq %"class.blink::ContainerNode"* %22, null
  br i1 %23, label %24, label %18

24:                                               ; preds = %18, %14
  %25 = phi %"class.blink::Node"* [ %15, %14 ], [ %21, %18 ]
  %26 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %11, align 8
  %27 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %27) #14
  %29 = icmp eq %"class.blink::ContainerNode"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %24, %30
  %31 = phi %"class.blink::Node"* [ %33, %30 ], [ %27, %24 ]
  %32 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %31) #14
  %33 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %32, i64 0, i32 0
  %34 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %33) #14
  %35 = icmp eq %"class.blink::ContainerNode"* %34, null
  br i1 %35, label %36, label %30

36:                                               ; preds = %30, %24
  %37 = phi %"class.blink::Node"* [ %27, %24 ], [ %33, %30 ]
  %38 = icmp eq %"class.blink::Node"* %25, %37
  br i1 %38, label %40, label %39

39:                                               ; preds = %36, %10, %2
  tail call void @_ZN5blink13ListedElement14ResetFormOwnerEv(%"class.blink::ListedElement"* %0)
  br label %40

40:                                               ; preds = %36, %39
  %41 = icmp eq %"class.blink::ListedElement"* %0, null
  %42 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %41, label %51, label %43

43:                                               ; preds = %40
  %44 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %42, align 8
  %45 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %44, i64 3
  %46 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %45, align 8
  %47 = tail call zeroext i1 %46(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %50 = bitcast %"class.blink::Member.5"* %49 to %"class.blink::HTMLElement"*
  br label %64

51:                                               ; preds = %43, %40
  %52 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %42, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %52, i64 5
  %54 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::ListedElement"* %0) #14
  br i1 %55, label %56, label %61

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %58 = getelementptr inbounds i8, i8* %57, i64 80
  %59 = bitcast i8* %58 to %"class.blink::HTMLElement"**
  %60 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %59, align 8
  br label %64

61:                                               ; preds = %51
  %62 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %63 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %62, i64 0, i32 0, i32 0, i32 0
  br label %64

64:                                               ; preds = %48, %56, %61
  %65 = phi %"class.blink::HTMLElement"* [ %60, %56 ], [ %63, %61 ], [ %50, %48 ]
  %66 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  %67 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %68, 256
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %127, label %71

71:                                               ; preds = %64
  %72 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kFormAttrE, align 8
  %73 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %65, i64 0, i32 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %73, align 8
  %75 = icmp eq %"class.blink::ElementData"* %74, null
  br i1 %75, label %127, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %74, i64 0, i32 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = and i32 %78, 1
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %88, label %81

81:                                               ; preds = %76
  %82 = bitcast %"class.blink::ElementData"* %74 to %"class.blink::UniqueElementData"*
  %83 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %74, i64 1, i32 1
  %84 = bitcast %"class.blink::Member.24"* %83 to %"class.blink::Attribute"**
  %85 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %82, i64 0, i32 2, i32 0, i32 0, i32 2
  %87 = load i32, i32* %86, align 4
  br label %93

88:                                               ; preds = %76
  %89 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %74, i64 1
  %90 = bitcast %"class.blink::ElementData"* %89 to %"class.blink::Attribute"*
  %91 = lshr i32 %78, 1
  %92 = and i32 %91, 268435455
  br label %93

93:                                               ; preds = %88, %81
  %94 = phi %"class.blink::Attribute"* [ %90, %88 ], [ %85, %81 ]
  %95 = phi i32 [ %92, %88 ], [ %87, %81 ]
  %96 = zext i32 %95 to i64
  %97 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %94, i64 %96
  %98 = icmp eq i32 %95, 0
  br i1 %98, label %127, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %72, i64 0, i32 0, i32 0
  %101 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 3, i32 0, i32 0, i32 0
  %103 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %104

104:                                              ; preds = %120, %99
  %105 = phi %"class.blink::Attribute"* [ %94, %99 ], [ %121, %120 ]
  %106 = phi i32 [ 0, %99 ], [ %122, %120 ]
  %107 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %105, i64 0, i32 0, i32 0, i32 0
  %108 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %107, align 8
  %109 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %108, %101
  br i1 %109, label %124, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %108, i64 0, i32 3, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %112, %113
  br i1 %114, label %115, label %120

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %108, i64 0, i32 4, i32 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %117, %118
  br i1 %119, label %124, label %120

120:                                              ; preds = %115, %110
  %121 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %105, i64 1
  %122 = add i32 %106, 1
  %123 = icmp eq %"class.blink::Attribute"* %121, %97
  br i1 %123, label %127, label %104

124:                                              ; preds = %104, %115
  %125 = icmp eq i32 %106, -1
  br i1 %125, label %127, label %126

126:                                              ; preds = %124
  tail call void @_ZN5blink13ListedElement32ResetFormAttributeTargetObserverEv(%"class.blink::ListedElement"* %0)
  br label %127

127:                                              ; preds = %120, %124, %64, %93, %71, %126
  tail call void @_ZN5blink13ListedElement38FieldSetAncestorsSetNeedsValidityCheckEPNS_4NodeE(%"class.blink::ListedElement"* %0, %"class.blink::Node"* %66)
  %128 = bitcast %"class.blink::ListedElement"* %0 to void (%"class.blink::ListedElement"*)***
  %129 = load void (%"class.blink::ListedElement"*)**, void (%"class.blink::ListedElement"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %129, i64 24
  %131 = load void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %130, align 8
  tail call void %131(%"class.blink::ListedElement"* %0) #14
  %132 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %42, align 8
  %133 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %132, i64 25
  %134 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %133, align 8
  %135 = tail call zeroext i1 %134(%"class.blink::ListedElement"* %0) #14
  br i1 %135, label %136, label %150

136:                                              ; preds = %127
  %137 = load i32, i32* %67, align 8
  %138 = and i32 %137, 256
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %150, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %65, i64 0, i32 0, i32 0, i32 0
  %142 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %141) #14
  %143 = icmp eq %"class.blink::ShadowRoot"* %142, null
  br i1 %143, label %144, label %150

144:                                              ; preds = %140
  %145 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %65, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %146 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %145, align 8
  %147 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %146, i64 0, i32 2, i32 0, i32 0
  %148 = load %"class.blink::Document"*, %"class.blink::Document"** %147, align 8
  %149 = tail call dereferenceable(56) %"class.blink::FormController"* @_ZN5blink8Document17GetFormControllerEv(%"class.blink::Document"* %148) #14
  tail call void @_ZN5blink14FormController33InvalidateStatefulFormControlListEv(%"class.blink::FormController"* %149) #14
  br label %150

150:                                              ; preds = %136, %140, %144, %127
  %151 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 4, i32 0, i32 0
  %152 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %151, align 8
  %153 = icmp eq %"class.blink::HTMLFormElement"* %152, null
  br i1 %153, label %154, label %164

154:                                              ; preds = %150
  %155 = load i32, i32* %67, align 8
  %156 = and i32 %155, 256
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %164, label %158

158:                                              ; preds = %154
  %159 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %65, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %160 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %159, align 8
  %161 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %160, i64 0, i32 2, i32 0, i32 0
  %162 = load %"class.blink::Document"*, %"class.blink::Document"** %161, align 8
  %163 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %65, i64 0, i32 0
  tail call void @_ZN5blink8Document23DidAssociateFormControlEPNS_7ElementE(%"class.blink::Document"* %162, %"class.blink::Element"* %163) #14
  br label %164

164:                                              ; preds = %154, %150, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement23UpdateWillValidateCacheEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  %3 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %3, i64 31
  %5 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::ListedElement"* %0) #14
  %7 = zext i1 %6 to i8
  %8 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 7
  %9 = load i8, i8* %8, align 8
  %10 = and i8 %9, 4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %1
  %13 = lshr i8 %9, 3
  %14 = and i8 %13, 1
  %15 = zext i8 %14 to i32
  %16 = zext i1 %6 to i32
  %17 = icmp eq i32 %15, %16
  br i1 %17, label %71, label %18

18:                                               ; preds = %1, %12
  %19 = shl nuw nsw i8 %7, 3
  %20 = and i8 %9, -45
  %21 = or i8 %19, %20
  %22 = or i8 %21, 4
  store i8 %22, i8* %8, align 8
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %0)
  %23 = load i8, i8* %8, align 8
  %24 = and i8 %23, 9
  %25 = icmp eq i8 %24, 1
  br i1 %25, label %26, label %71

26:                                               ; preds = %18
  %27 = icmp eq %"class.blink::ListedElement"* %0, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %26
  %29 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %2, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %29, i64 3
  %31 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %35 = bitcast %"class.blink::Member.5"* %34 to %"class.blink::HTMLElement"*
  br label %49

36:                                               ; preds = %28, %26
  %37 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %2, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %37, i64 5
  %39 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::ListedElement"* %0) #14
  br i1 %40, label %41, label %46

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %43 = getelementptr inbounds i8, i8* %42, i64 80
  %44 = bitcast i8* %43 to %"class.blink::HTMLElement"**
  %45 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %44, align 8
  br label %49

46:                                               ; preds = %36
  %47 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %48 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %47, i64 0, i32 0, i32 0, i32 0
  br label %49

49:                                               ; preds = %46, %41, %33
  %50 = phi %"class.blink::HTMLElement"* [ %45, %41 ], [ %48, %46 ], [ %35, %33 ]
  %51 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %50, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %52 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %52, i64 0, i32 2, i32 0, i32 0
  %54 = load %"class.blink::Document"*, %"class.blink::Document"** %53, align 8
  %55 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %54) #14
  %56 = icmp eq %"class.blink::Page"* %55, null
  br i1 %56, label %71, label %57

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %55, i64 0, i32 24, i32 0, i32 0
  %59 = load %"class.blink::ValidationMessageClient"*, %"class.blink::ValidationMessageClient"** %58, align 8
  %60 = icmp eq %"class.blink::ValidationMessageClient"* %59, null
  br i1 %60, label %71, label %61

61:                                               ; preds = %57
  %62 = bitcast %"class.blink::ListedElement"* %0 to %"class.blink::Element"* (%"class.blink::ListedElement"*)***
  %63 = load %"class.blink::Element"* (%"class.blink::ListedElement"*)**, %"class.blink::Element"* (%"class.blink::ListedElement"*)*** %62, align 8
  %64 = getelementptr inbounds %"class.blink::Element"* (%"class.blink::ListedElement"*)*, %"class.blink::Element"* (%"class.blink::ListedElement"*)** %63, i64 22
  %65 = load %"class.blink::Element"* (%"class.blink::ListedElement"*)*, %"class.blink::Element"* (%"class.blink::ListedElement"*)** %64, align 8
  %66 = tail call dereferenceable(104) %"class.blink::Element"* %65(%"class.blink::ListedElement"* %0) #14
  %67 = bitcast %"class.blink::ValidationMessageClient"* %59 to void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)***
  %68 = load void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)**, void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)*, void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)** %68, i64 4
  %70 = load void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)*, void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)** %69, align 8
  tail call void %70(%"class.blink::ValidationMessageClient"* nonnull %59, %"class.blink::Element"* dereferenceable(104) %66) #14
  br label %71

71:                                               ; preds = %18, %61, %57, %49, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement14ResetFormOwnerEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, -3
  store i8 %4, i8* %2, align 8
  %5 = icmp eq %"class.blink::ListedElement"* %0, null
  %6 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %5, label %15, label %7

7:                                                ; preds = %1
  %8 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %6, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %8, i64 3
  %10 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %14 = bitcast %"class.blink::Member.5"* %13 to %"class.blink::HTMLElement"*
  br label %28

15:                                               ; preds = %7, %1
  %16 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %6, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %16, i64 5
  %18 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::ListedElement"* %0) #14
  br i1 %19, label %20, label %25

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %22 = getelementptr inbounds i8, i8* %21, i64 80
  %23 = bitcast i8* %22 to %"class.blink::HTMLElement"**
  %24 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %23, align 8
  br label %28

25:                                               ; preds = %15
  %26 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %27 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %26, i64 0, i32 0, i32 0, i32 0
  br label %28

28:                                               ; preds = %12, %20, %25
  %29 = phi %"class.blink::HTMLElement"* [ %24, %20 ], [ %27, %25 ], [ %14, %12 ]
  %30 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kFormAttrE, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %29, i64 0, i32 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %31, align 8
  %33 = icmp eq %"class.blink::ElementData"* %32, null
  br i1 %33, label %84, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %32, i64 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::ElementData"* %32 to %"class.blink::UniqueElementData"*
  %41 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %32, i64 1, i32 1
  %42 = bitcast %"class.blink::Member.24"* %41 to %"class.blink::Attribute"**
  %43 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %40, i64 0, i32 2, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  br label %51

46:                                               ; preds = %34
  %47 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %32, i64 1
  %48 = bitcast %"class.blink::ElementData"* %47 to %"class.blink::Attribute"*
  %49 = lshr i32 %36, 1
  %50 = and i32 %49, 268435455
  br label %51

51:                                               ; preds = %46, %39
  %52 = phi %"class.blink::Attribute"* [ %48, %46 ], [ %43, %39 ]
  %53 = phi i32 [ %50, %46 ], [ %45, %39 ]
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %52, i64 %54
  %56 = icmp eq i32 %53, 0
  br i1 %56, label %84, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %30, i64 0, i32 0, i32 0
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %62

62:                                               ; preds = %77, %57
  %63 = phi %"class.blink::Attribute"* [ %52, %57 ], [ %78, %77 ]
  %64 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %64, align 8
  %66 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %65, %59
  br i1 %66, label %80, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %69, %70
  br i1 %71, label %72, label %77

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 4, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %74, %75
  br i1 %76, label %80, label %77

77:                                               ; preds = %72, %67
  %78 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 1
  %79 = icmp eq %"class.blink::Attribute"* %78, %55
  br i1 %79, label %84, label %62

80:                                               ; preds = %72, %62
  %81 = icmp eq %"class.blink::Attribute"* %63, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %63, i64 0, i32 1
  br label %86

84:                                               ; preds = %77, %80, %51, %28
  %85 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %86

86:                                               ; preds = %82, %84
  %87 = phi %"class.WTF::AtomicString"* [ %85, %84 ], [ %83, %82 ]
  %88 = tail call %"class.blink::HTMLFormElement"* @_ZNK5blink11HTMLElement16FindFormAncestorEv(%"class.blink::HTMLElement"* %29) #14
  %89 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 4, i32 0, i32 0
  %90 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %89, align 8
  %91 = icmp eq %"class.blink::HTMLFormElement"* %90, null
  %92 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 0, i32 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  br i1 %91, label %98, label %94

94:                                               ; preds = %86
  %95 = icmp eq %"class.WTF::StringImpl"* %93, null
  %96 = icmp eq %"class.blink::HTMLFormElement"* %90, %88
  %97 = and i1 %96, %95
  br i1 %97, label %163, label %98

98:                                               ; preds = %86, %94
  %99 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %99, label %130, label %100

100:                                              ; preds = %98
  %101 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %29, i64 0, i32 0, i32 0, i32 0, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = and i32 %102, 256
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %130, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %29, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %107 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %106, align 8
  %108 = tail call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %107, %"class.WTF::AtomicString"* dereferenceable(8) %87) #14
  %109 = icmp eq %"class.blink::Element"* %108, null
  br i1 %109, label %130, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %108, i64 0, i32 0, i32 0, i32 1
  %112 = load i32, i32* %111, align 8
  %113 = and i32 %112, 48
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %130

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %108, i64 0, i32 0, i32 0
  %117 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFormTagE, align 8
  %118 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %117, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %116, i64 1, i32 2
  %121 = bitcast %"class.blink::Member.9"* %120 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %122 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %122, i64 0, i32 3, i32 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %119, i64 0, i32 3, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %124, %126
  %128 = bitcast %"class.blink::Element"* %108 to %"class.blink::HTMLFormElement"*
  %129 = select i1 %127, %"class.blink::HTMLFormElement"* %128, %"class.blink::HTMLFormElement"* null
  br label %130

130:                                              ; preds = %98, %100, %105, %110, %115
  %131 = phi %"class.blink::HTMLFormElement"* [ %88, %100 ], [ %88, %98 ], [ %129, %115 ], [ null, %110 ], [ null, %105 ]
  %132 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 4
  %133 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %132, i64 0, i32 0, i32 0
  %134 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %133, align 8
  %135 = icmp eq %"class.blink::HTMLFormElement"* %134, %131
  br i1 %135, label %163, label %136

136:                                              ; preds = %130
  %137 = bitcast %"class.blink::ListedElement"* %0 to void (%"class.blink::ListedElement"*)***
  %138 = load void (%"class.blink::ListedElement"*)**, void (%"class.blink::ListedElement"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %138, i64 29
  %140 = load void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %139, align 8
  tail call void %140(%"class.blink::ListedElement"* %0) #14
  %141 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %133, align 8
  %142 = icmp eq %"class.blink::HTMLFormElement"* %141, null
  br i1 %142, label %144, label %143

143:                                              ; preds = %136
  tail call void @_ZN5blink15HTMLFormElement12DisassociateERNS_13ListedElementE(%"class.blink::HTMLFormElement"* nonnull %141, %"class.blink::ListedElement"* dereferenceable(64) %0) #14
  br label %144

144:                                              ; preds = %143, %136
  %145 = icmp eq %"class.blink::HTMLFormElement"* %131, null
  br i1 %145, label %157, label %146

146:                                              ; preds = %144
  %147 = ptrtoint %"class.blink::HTMLFormElement"* %131 to i64
  %148 = bitcast %"class.blink::Member.5"* %132 to i64*
  store atomic i64 %147, i64* %148 monotonic, align 8
  %149 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %155, label %151

151:                                              ; preds = %146
  %152 = bitcast %"class.blink::HTMLFormElement"* %131 to i8*
  %153 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %152) #14
  %154 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %133, align 8
  br label %155

155:                                              ; preds = %151, %146
  %156 = phi %"class.blink::HTMLFormElement"* [ %131, %146 ], [ %154, %151 ]
  tail call void @_ZN5blink15HTMLFormElement9AssociateERNS_13ListedElementE(%"class.blink::HTMLFormElement"* %156, %"class.blink::ListedElement"* dereferenceable(64) %0) #14
  br label %159

157:                                              ; preds = %144
  %158 = bitcast %"class.blink::Member.5"* %132 to i64*
  store atomic i64 0, i64* %158 monotonic, align 8
  br label %159

159:                                              ; preds = %157, %155
  %160 = load void (%"class.blink::ListedElement"*)**, void (%"class.blink::ListedElement"*)*** %137, align 8
  %161 = getelementptr inbounds void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %160, i64 30
  %162 = load void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %161, align 8
  tail call void %162(%"class.blink::ListedElement"* %0) #14
  br label %163

163:                                              ; preds = %94, %159, %130
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement32ResetFormAttributeTargetObserverEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = icmp eq %"class.blink::ListedElement"* %0, null
  %3 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %2, label %12, label %4

4:                                                ; preds = %1
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 3
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %11 = bitcast %"class.blink::Member.5"* %10 to %"class.blink::HTMLElement"*
  br label %25

12:                                               ; preds = %4, %1
  %13 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %13, i64 5
  %15 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::ListedElement"* %0) #14
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %19 = getelementptr inbounds i8, i8* %18, i64 80
  %20 = bitcast i8* %19 to %"class.blink::HTMLElement"**
  %21 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %20, align 8
  br label %25

22:                                               ; preds = %12
  %23 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %24 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %23, i64 0, i32 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %9, %17, %22
  %26 = phi %"class.blink::HTMLElement"* [ %21, %17 ], [ %24, %22 ], [ %11, %9 ]
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kFormAttrE, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %26, i64 0, i32 0, i32 3, i32 0, i32 0
  %29 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %28, align 8
  %30 = icmp eq %"class.blink::ElementData"* %29, null
  br i1 %30, label %81, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %29, i64 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.blink::ElementData"* %29 to %"class.blink::UniqueElementData"*
  %38 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %29, i64 1, i32 1
  %39 = bitcast %"class.blink::Member.24"* %38 to %"class.blink::Attribute"**
  %40 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %37, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  br label %48

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %29, i64 1
  %45 = bitcast %"class.blink::ElementData"* %44 to %"class.blink::Attribute"*
  %46 = lshr i32 %33, 1
  %47 = and i32 %46, 268435455
  br label %48

48:                                               ; preds = %43, %36
  %49 = phi %"class.blink::Attribute"* [ %45, %43 ], [ %40, %36 ]
  %50 = phi i32 [ %47, %43 ], [ %42, %36 ]
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %49, i64 %51
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %81, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %56 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %59

59:                                               ; preds = %74, %54
  %60 = phi %"class.blink::Attribute"* [ %49, %54 ], [ %75, %74 ]
  %61 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %62, %56
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %66, %67
  br i1 %68, label %69, label %74

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 4, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %71, %72
  br i1 %73, label %77, label %74

74:                                               ; preds = %69, %64
  %75 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 1
  %76 = icmp eq %"class.blink::Attribute"* %75, %52
  br i1 %76, label %81, label %59

77:                                               ; preds = %69, %59
  %78 = icmp eq %"class.blink::Attribute"* %60, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 0, i32 1
  br label %83

81:                                               ; preds = %74, %77, %48, %25
  %82 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %83

83:                                               ; preds = %79, %81
  %84 = phi %"class.WTF::AtomicString"* [ %82, %81 ], [ %80, %79 ]
  %85 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %147, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %26, i64 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = and i32 %90, 256
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %147, label %93

93:                                               ; preds = %88
  %94 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16IdTargetObserverEEEPhm(i64 32) #14
  %95 = bitcast i8* %94 to %"class.blink::IdTargetObserver"*
  br i1 %2, label %104, label %96

96:                                               ; preds = %93
  %97 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %98 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %97, i64 3
  %99 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %98, align 8
  %100 = tail call zeroext i1 %99(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %100, label %101, label %104

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %103 = bitcast %"class.blink::Member.5"* %102 to %"class.blink::HTMLElement"*
  br label %117

104:                                              ; preds = %96, %93
  %105 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %106 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %105, i64 5
  %107 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %106, align 8
  %108 = tail call zeroext i1 %107(%"class.blink::ListedElement"* %0) #14
  br i1 %108, label %109, label %114

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %111 = getelementptr inbounds i8, i8* %110, i64 80
  %112 = bitcast i8* %111 to %"class.blink::HTMLElement"**
  %113 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %112, align 8
  br label %117

114:                                              ; preds = %104
  %115 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %116 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %115, i64 0, i32 0, i32 0, i32 0
  br label %117

117:                                              ; preds = %101, %109, %114
  %118 = phi %"class.blink::HTMLElement"* [ %113, %109 ], [ %116, %114 ], [ %103, %101 ]
  %119 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %118, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %120 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %120, i64 0, i32 6, i32 0, i32 0
  %122 = load %"class.blink::IdTargetObserverRegistry"*, %"class.blink::IdTargetObserverRegistry"** %121, align 8
  tail call void @_ZN5blink16IdTargetObserverC2ERNS_24IdTargetObserverRegistryERKN3WTF12AtomicStringE(%"class.blink::IdTargetObserver"* %95, %"class.blink::IdTargetObserverRegistry"* %122, %"class.WTF::AtomicString"* dereferenceable(8) %84) #14
  %123 = bitcast i8* %94 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink27FormAttributeTargetObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %123, align 8
  %124 = getelementptr inbounds i8, i8* %94, i64 24
  %125 = bitcast i8* %124 to %"class.blink::ListedElement"**
  store %"class.blink::ListedElement"* %0, %"class.blink::ListedElement"** %125, align 8
  %126 = getelementptr inbounds i8, i8* %94, i64 -4
  %127 = bitcast i8* %126 to i16*
  %128 = load atomic i16, i16* %127 monotonic, align 2
  %129 = or i16 %128, 1
  store atomic i16 %129, i16* %127 release, align 2
  %130 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 3
  %131 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %130, i64 0, i32 0, i32 0
  %132 = load %"class.blink::FormAttributeTargetObserver"*, %"class.blink::FormAttributeTargetObserver"** %131, align 8
  %133 = icmp eq %"class.blink::FormAttributeTargetObserver"* %132, null
  br i1 %133, label %140, label %134

134:                                              ; preds = %117
  %135 = getelementptr inbounds %"class.blink::FormAttributeTargetObserver", %"class.blink::FormAttributeTargetObserver"* %132, i64 0, i32 0
  %136 = bitcast %"class.blink::FormAttributeTargetObserver"* %132 to void (%"class.blink::IdTargetObserver"*)***
  %137 = load void (%"class.blink::IdTargetObserver"*)**, void (%"class.blink::IdTargetObserver"*)*** %136, align 8
  %138 = getelementptr inbounds void (%"class.blink::IdTargetObserver"*)*, void (%"class.blink::IdTargetObserver"*)** %137, i64 4
  %139 = load void (%"class.blink::IdTargetObserver"*)*, void (%"class.blink::IdTargetObserver"*)** %138, align 8
  tail call void %139(%"class.blink::IdTargetObserver"* %135) #14
  br label %140

140:                                              ; preds = %134, %117
  %141 = ptrtoint i8* %94 to i64
  %142 = bitcast %"class.blink::Member"* %130 to i64*
  store atomic i64 %141, i64* %142 monotonic, align 8
  %143 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %164, label %145

145:                                              ; preds = %140
  %146 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #14
  br label %164

147:                                              ; preds = %88, %83
  %148 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 3
  %149 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %148, i64 0, i32 0, i32 0
  %150 = load %"class.blink::FormAttributeTargetObserver"*, %"class.blink::FormAttributeTargetObserver"** %149, align 8
  %151 = icmp eq %"class.blink::FormAttributeTargetObserver"* %150, null
  br i1 %151, label %158, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.blink::FormAttributeTargetObserver", %"class.blink::FormAttributeTargetObserver"* %150, i64 0, i32 0
  %154 = bitcast %"class.blink::FormAttributeTargetObserver"* %150 to void (%"class.blink::IdTargetObserver"*)***
  %155 = load void (%"class.blink::IdTargetObserver"*)**, void (%"class.blink::IdTargetObserver"*)*** %154, align 8
  %156 = getelementptr inbounds void (%"class.blink::IdTargetObserver"*)*, void (%"class.blink::IdTargetObserver"*)** %155, i64 4
  %157 = load void (%"class.blink::IdTargetObserver"*)*, void (%"class.blink::IdTargetObserver"*)** %156, align 8
  tail call void %157(%"class.blink::IdTargetObserver"* %153) #14
  br label %158

158:                                              ; preds = %152, %147
  %159 = bitcast %"class.blink::Member"* %148 to i64*
  store atomic i64 0, i64* %159 monotonic, align 8
  %160 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %158
  %163 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #14
  br label %164

164:                                              ; preds = %162, %158, %145, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement38FieldSetAncestorsSetNeedsValidityCheckEPNS_4NodeE(%"class.blink::ListedElement"* nocapture readonly, %"class.blink::Node"*) local_unnamed_addr #1 align 2 {
  %3 = icmp eq %"class.blink::Node"* %1, null
  br i1 %3, label %93, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %93, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 48
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %27

13:                                               ; preds = %8
  %14 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFieldsetTagE, align 8
  %15 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1, i64 1, i32 2
  %18 = bitcast %"class.blink::Member.9"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  br i1 %24, label %25, label %27

25:                                               ; preds = %13
  %26 = bitcast %"class.blink::Node"* %1 to %"class.blink::HTMLFieldSetElement"*
  br label %56

27:                                               ; preds = %8, %13
  %28 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* nonnull %1) #14
  %29 = icmp eq %"class.blink::ContainerNode"* %28, null
  br i1 %29, label %53, label %30

30:                                               ; preds = %27
  %31 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFieldsetTagE, align 8
  %32 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %31, i64 0, i32 0, i32 0, i32 0
  br label %33

33:                                               ; preds = %50, %30
  %34 = phi %"class.blink::ContainerNode"* [ %28, %30 ], [ %51, %50 ]
  %35 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %34, i64 0, i32 0
  %36 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %34, i64 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 48
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %50

40:                                               ; preds = %33
  %41 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %42 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %35, i64 1, i32 2
  %43 = bitcast %"class.blink::Member.9"* %42 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %46, %48
  br i1 %49, label %53, label %50

50:                                               ; preds = %40, %33
  %51 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %35) #14
  %52 = icmp eq %"class.blink::ContainerNode"* %51, null
  br i1 %52, label %53, label %33

53:                                               ; preds = %50, %40, %27
  %54 = phi %"class.blink::ContainerNode"* [ null, %27 ], [ null, %50 ], [ %34, %40 ]
  %55 = bitcast %"class.blink::ContainerNode"* %54 to %"class.blink::HTMLFieldSetElement"*
  br label %56

56:                                               ; preds = %25, %53
  %57 = phi %"class.blink::HTMLFieldSetElement"* [ %26, %25 ], [ %55, %53 ]
  %58 = icmp eq %"class.blink::HTMLFieldSetElement"* %57, null
  br i1 %58, label %93, label %59

59:                                               ; preds = %56
  %60 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFieldsetTagE, align 8
  %61 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.blink::HTMLFieldSetElement", %"class.blink::HTMLFieldSetElement"* %57, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %62, i32 42) #14
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %62, i32 43) #14
  %63 = getelementptr inbounds %"class.blink::HTMLFieldSetElement", %"class.blink::HTMLFieldSetElement"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %63) #14
  %65 = icmp eq %"class.blink::ContainerNode"* %64, null
  br i1 %65, label %93, label %66

66:                                               ; preds = %59, %86
  %67 = phi %"class.blink::ContainerNode"* [ %87, %86 ], [ %64, %59 ]
  %68 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %67, i64 0, i32 0
  %69 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %67, i64 0, i32 0, i32 1
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, 48
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %83

73:                                               ; preds = %66
  %74 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %75 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %68, i64 1, i32 2
  %76 = bitcast %"class.blink::Member.9"* %75 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %77 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %77, i64 0, i32 3, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %74, i64 0, i32 3, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %79, %81
  br i1 %82, label %88, label %83

83:                                               ; preds = %73, %66
  %84 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %68) #14
  %85 = icmp eq %"class.blink::ContainerNode"* %84, null
  br i1 %85, label %93, label %86

86:                                               ; preds = %83, %88
  %87 = phi %"class.blink::ContainerNode"* [ %84, %83 ], [ %91, %88 ]
  br label %66

88:                                               ; preds = %73
  %89 = bitcast %"class.blink::ContainerNode"* %67 to %"class.blink::Element"*
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %89, i32 42) #14
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %89, i32 43) #14
  %90 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %67, i64 0, i32 0
  %91 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %90) #14
  %92 = icmp eq %"class.blink::ContainerNode"* %91, null
  br i1 %92, label %93, label %86

93:                                               ; preds = %88, %83, %59, %56, %4, %2
  ret void
}

declare %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"*) local_unnamed_addr #5

declare dereferenceable(56) %"class.blink::FormController"* @_ZN5blink8Document17GetFormControllerEv(%"class.blink::Document"*) local_unnamed_addr #5

declare void @_ZN5blink14FormController33InvalidateStatefulFormControlListEv(%"class.blink::FormController"*) local_unnamed_addr #5

declare void @_ZN5blink8Document23DidAssociateFormControlEPNS_7ElementE(%"class.blink::Document"*, %"class.blink::Element"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::ListedElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0
  tail call void @_ZN5blink13ListedElement38FieldSetAncestorsSetNeedsValidityCheckEPNS_4NodeE(%"class.blink::ListedElement"* %0, %"class.blink::Node"* %3)
  %4 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 7
  %5 = load i8, i8* %4, align 8
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br label %56

10:                                               ; preds = %2
  %11 = icmp eq %"class.blink::ListedElement"* %0, null
  %12 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %11, label %21, label %13

13:                                               ; preds = %10
  %14 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %12, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %14, i64 3
  %16 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %20 = bitcast %"class.blink::Member.5"* %19 to %"class.blink::HTMLElement"*
  br label %34

21:                                               ; preds = %13, %10
  %22 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %12, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %22, i64 5
  %24 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::ListedElement"* %0) #14
  br i1 %25, label %26, label %31

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %28 = getelementptr inbounds i8, i8* %27, i64 80
  %29 = bitcast i8* %28 to %"class.blink::HTMLElement"**
  %30 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %29, align 8
  br label %34

31:                                               ; preds = %21
  %32 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %33 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %32, i64 0, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %31, %26, %18
  %35 = phi %"class.blink::HTMLElement"* [ %30, %26 ], [ %33, %31 ], [ %20, %18 ]
  %36 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %35, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %37 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %37, i64 0, i32 2, i32 0, i32 0
  %39 = load %"class.blink::Document"*, %"class.blink::Document"** %38, align 8
  %40 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %39) #14
  %41 = icmp eq %"class.blink::Page"* %40, null
  br i1 %41, label %56, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %40, i64 0, i32 24, i32 0, i32 0
  %44 = load %"class.blink::ValidationMessageClient"*, %"class.blink::ValidationMessageClient"** %43, align 8
  %45 = icmp eq %"class.blink::ValidationMessageClient"* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %42
  %47 = bitcast %"class.blink::ListedElement"* %0 to %"class.blink::Element"* (%"class.blink::ListedElement"*)***
  %48 = load %"class.blink::Element"* (%"class.blink::ListedElement"*)**, %"class.blink::Element"* (%"class.blink::ListedElement"*)*** %47, align 8
  %49 = getelementptr inbounds %"class.blink::Element"* (%"class.blink::ListedElement"*)*, %"class.blink::Element"* (%"class.blink::ListedElement"*)** %48, i64 22
  %50 = load %"class.blink::Element"* (%"class.blink::ListedElement"*)*, %"class.blink::Element"* (%"class.blink::ListedElement"*)** %49, align 8
  %51 = tail call dereferenceable(104) %"class.blink::Element"* %50(%"class.blink::ListedElement"* %0) #14
  %52 = bitcast %"class.blink::ValidationMessageClient"* %44 to void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)***
  %53 = load void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)**, void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)*, void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)** %53, i64 4
  %55 = load void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)*, void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)** %54, align 8
  tail call void %55(%"class.blink::ValidationMessageClient"* nonnull %44, %"class.blink::Element"* dereferenceable(104) %51) #14
  br label %56

56:                                               ; preds = %8, %34, %42, %46
  %57 = phi i1 (%"class.blink::ListedElement"*)*** [ %9, %8 ], [ %12, %34 ], [ %12, %42 ], [ %12, %46 ]
  %58 = load i8, i8* %4, align 8
  %59 = and i8 %58, -2
  store i8 %59, i8* %4, align 8
  %60 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 9
  store i32 0, i32* %60, align 4
  %61 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 10
  store i32 0, i32* %61, align 8
  tail call void @_ZN5blink13ListedElement23UpdateWillValidateCacheEv(%"class.blink::ListedElement"* %0)
  %62 = icmp eq %"class.blink::ListedElement"* %0, null
  br i1 %62, label %71, label %63

63:                                               ; preds = %56
  %64 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %57, align 8
  %65 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %64, i64 3
  %66 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %65, align 8
  %67 = tail call zeroext i1 %66(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %67, label %68, label %71

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %70 = bitcast %"class.blink::Member.5"* %69 to %"class.blink::HTMLElement"*
  br label %84

71:                                               ; preds = %63, %56
  %72 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %57, align 8
  %73 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %72, i64 5
  %74 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %73, align 8
  %75 = tail call zeroext i1 %74(%"class.blink::ListedElement"* %0) #14
  br i1 %75, label %76, label %81

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %78 = getelementptr inbounds i8, i8* %77, i64 80
  %79 = bitcast i8* %78 to %"class.blink::HTMLElement"**
  %80 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %79, align 8
  br label %84

81:                                               ; preds = %71
  %82 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %83 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %82, i64 0, i32 0, i32 0, i32 0
  br label %84

84:                                               ; preds = %68, %76, %81
  %85 = phi %"class.blink::HTMLElement"* [ %80, %76 ], [ %83, %81 ], [ %70, %68 ]
  %86 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = and i32 %87, 256
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %163, label %90

90:                                               ; preds = %84
  %91 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kFormAttrE, align 8
  %92 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %85, i64 0, i32 0, i32 3, i32 0, i32 0
  %93 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %92, align 8
  %94 = icmp eq %"class.blink::ElementData"* %93, null
  br i1 %94, label %163, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %93, i64 0, i32 0, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %107, label %100

100:                                              ; preds = %95
  %101 = bitcast %"class.blink::ElementData"* %93 to %"class.blink::UniqueElementData"*
  %102 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %93, i64 1, i32 1
  %103 = bitcast %"class.blink::Member.24"* %102 to %"class.blink::Attribute"**
  %104 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %101, i64 0, i32 2, i32 0, i32 0, i32 2
  %106 = load i32, i32* %105, align 4
  br label %112

107:                                              ; preds = %95
  %108 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %93, i64 1
  %109 = bitcast %"class.blink::ElementData"* %108 to %"class.blink::Attribute"*
  %110 = lshr i32 %97, 1
  %111 = and i32 %110, 268435455
  br label %112

112:                                              ; preds = %107, %100
  %113 = phi %"class.blink::Attribute"* [ %109, %107 ], [ %104, %100 ]
  %114 = phi i32 [ %111, %107 ], [ %106, %100 ]
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %113, i64 %115
  %117 = icmp eq i32 %114, 0
  br i1 %117, label %163, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %91, i64 0, i32 0, i32 0
  %120 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %120, i64 0, i32 3, i32 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %120, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %123

123:                                              ; preds = %139, %118
  %124 = phi %"class.blink::Attribute"* [ %113, %118 ], [ %140, %139 ]
  %125 = phi i32 [ 0, %118 ], [ %141, %139 ]
  %126 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %124, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %126, align 8
  %128 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %127, %120
  br i1 %128, label %143, label %129

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %127, i64 0, i32 3, i32 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %131, %132
  br i1 %133, label %134, label %139

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %127, i64 0, i32 4, i32 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %138 = icmp eq %"class.WTF::StringImpl"* %136, %137
  br i1 %138, label %143, label %139

139:                                              ; preds = %134, %129
  %140 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %124, i64 1
  %141 = add i32 %125, 1
  %142 = icmp eq %"class.blink::Attribute"* %140, %116
  br i1 %142, label %163, label %123

143:                                              ; preds = %123, %134
  %144 = icmp eq i32 %125, -1
  br i1 %144, label %163, label %145

145:                                              ; preds = %143
  %146 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 3
  %147 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %146, i64 0, i32 0, i32 0
  %148 = load %"class.blink::FormAttributeTargetObserver"*, %"class.blink::FormAttributeTargetObserver"** %147, align 8
  %149 = icmp eq %"class.blink::FormAttributeTargetObserver"* %148, null
  br i1 %149, label %156, label %150

150:                                              ; preds = %145
  %151 = getelementptr inbounds %"class.blink::FormAttributeTargetObserver", %"class.blink::FormAttributeTargetObserver"* %148, i64 0, i32 0
  %152 = bitcast %"class.blink::FormAttributeTargetObserver"* %148 to void (%"class.blink::IdTargetObserver"*)***
  %153 = load void (%"class.blink::IdTargetObserver"*)**, void (%"class.blink::IdTargetObserver"*)*** %152, align 8
  %154 = getelementptr inbounds void (%"class.blink::IdTargetObserver"*)*, void (%"class.blink::IdTargetObserver"*)** %153, i64 4
  %155 = load void (%"class.blink::IdTargetObserver"*)*, void (%"class.blink::IdTargetObserver"*)** %154, align 8
  tail call void %155(%"class.blink::IdTargetObserver"* %151) #14
  br label %156

156:                                              ; preds = %150, %145
  %157 = bitcast %"class.blink::Member"* %146 to i64*
  store atomic i64 0, i64* %157 monotonic, align 8
  %158 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %162, label %160

160:                                              ; preds = %156
  %161 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #14
  br label %162

162:                                              ; preds = %156, %160
  tail call void @_ZN5blink13ListedElement14ResetFormOwnerEv(%"class.blink::ListedElement"* %0)
  br label %193

163:                                              ; preds = %139, %143, %84, %112, %90
  %164 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 4, i32 0, i32 0
  %165 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %164, align 8
  %166 = icmp eq %"class.blink::HTMLFormElement"* %165, null
  br i1 %166, label %193, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %85, i64 0, i32 0, i32 0, i32 0
  %169 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %168) #14
  %170 = icmp eq %"class.blink::ContainerNode"* %169, null
  br i1 %170, label %177, label %171

171:                                              ; preds = %167, %171
  %172 = phi %"class.blink::Node"* [ %174, %171 ], [ %168, %167 ]
  %173 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %172) #14
  %174 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %173, i64 0, i32 0
  %175 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %174) #14
  %176 = icmp eq %"class.blink::ContainerNode"* %175, null
  br i1 %176, label %177, label %171

177:                                              ; preds = %171, %167
  %178 = phi %"class.blink::Node"* [ %168, %167 ], [ %174, %171 ]
  %179 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %164, align 8
  %180 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %179, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %180) #14
  %182 = icmp eq %"class.blink::ContainerNode"* %181, null
  br i1 %182, label %189, label %183

183:                                              ; preds = %177, %183
  %184 = phi %"class.blink::Node"* [ %186, %183 ], [ %180, %177 ]
  %185 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %184) #14
  %186 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %185, i64 0, i32 0
  %187 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %186) #14
  %188 = icmp eq %"class.blink::ContainerNode"* %187, null
  br i1 %188, label %189, label %183

189:                                              ; preds = %183, %177
  %190 = phi %"class.blink::Node"* [ %180, %177 ], [ %186, %183 ]
  %191 = icmp eq %"class.blink::Node"* %178, %190
  br i1 %191, label %193, label %192

192:                                              ; preds = %189
  tail call void @_ZN5blink13ListedElement14ResetFormOwnerEv(%"class.blink::ListedElement"* %0)
  br label %193

193:                                              ; preds = %189, %163, %192, %162
  %194 = bitcast %"class.blink::ListedElement"* %0 to void (%"class.blink::ListedElement"*)***
  %195 = load void (%"class.blink::ListedElement"*)**, void (%"class.blink::ListedElement"*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %195, i64 24
  %197 = load void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %196, align 8
  tail call void %197(%"class.blink::ListedElement"* %0) #14
  %198 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %57, align 8
  %199 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %198, i64 25
  %200 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %199, align 8
  %201 = tail call zeroext i1 %200(%"class.blink::ListedElement"* %0) #14
  br i1 %201, label %202, label %219

202:                                              ; preds = %193
  %203 = load i32, i32* %86, align 8
  %204 = and i32 %203, 256
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %219, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %85, i64 0, i32 0, i32 0, i32 0
  %208 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %207) #14
  %209 = icmp eq %"class.blink::ShadowRoot"* %208, null
  br i1 %209, label %210, label %219

210:                                              ; preds = %206
  %211 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink4Node20ContainingShadowRootEv(%"class.blink::Node"* %3) #14
  %212 = icmp eq %"class.blink::ShadowRoot"* %211, null
  br i1 %212, label %213, label %219

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %85, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %215 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %214, align 8
  %216 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %215, i64 0, i32 2, i32 0, i32 0
  %217 = load %"class.blink::Document"*, %"class.blink::Document"** %216, align 8
  %218 = tail call dereferenceable(56) %"class.blink::FormController"* @_ZN5blink8Document17GetFormControllerEv(%"class.blink::Document"* %217) #14
  tail call void @_ZN5blink14FormController33InvalidateStatefulFormControlListEv(%"class.blink::FormController"* %218) #14
  br label %219

219:                                              ; preds = %202, %210, %206, %213, %193
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement28HideVisibleValidationMessageEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %52, label %6

6:                                                ; preds = %1
  %7 = icmp eq %"class.blink::ListedElement"* %0, null
  %8 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %7, label %17, label %9

9:                                                ; preds = %6
  %10 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %8, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %10, i64 3
  %12 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %16 = bitcast %"class.blink::Member.5"* %15 to %"class.blink::HTMLElement"*
  br label %30

17:                                               ; preds = %9, %6
  %18 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %8, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %18, i64 5
  %20 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::ListedElement"* %0) #14
  br i1 %21, label %22, label %27

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %24 = getelementptr inbounds i8, i8* %23, i64 80
  %25 = bitcast i8* %24 to %"class.blink::HTMLElement"**
  %26 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %25, align 8
  br label %30

27:                                               ; preds = %17
  %28 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %29 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %28, i64 0, i32 0, i32 0, i32 0
  br label %30

30:                                               ; preds = %27, %22, %14
  %31 = phi %"class.blink::HTMLElement"* [ %26, %22 ], [ %29, %27 ], [ %16, %14 ]
  %32 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %31, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %33, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::Document"*, %"class.blink::Document"** %34, align 8
  %36 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %35) #14
  %37 = icmp eq %"class.blink::Page"* %36, null
  br i1 %37, label %52, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %36, i64 0, i32 24, i32 0, i32 0
  %40 = load %"class.blink::ValidationMessageClient"*, %"class.blink::ValidationMessageClient"** %39, align 8
  %41 = icmp eq %"class.blink::ValidationMessageClient"* %40, null
  br i1 %41, label %52, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.blink::ListedElement"* %0 to %"class.blink::Element"* (%"class.blink::ListedElement"*)***
  %44 = load %"class.blink::Element"* (%"class.blink::ListedElement"*)**, %"class.blink::Element"* (%"class.blink::ListedElement"*)*** %43, align 8
  %45 = getelementptr inbounds %"class.blink::Element"* (%"class.blink::ListedElement"*)*, %"class.blink::Element"* (%"class.blink::ListedElement"*)** %44, i64 22
  %46 = load %"class.blink::Element"* (%"class.blink::ListedElement"*)*, %"class.blink::Element"* (%"class.blink::ListedElement"*)** %45, align 8
  %47 = tail call dereferenceable(104) %"class.blink::Element"* %46(%"class.blink::ListedElement"* %0) #14
  %48 = bitcast %"class.blink::ValidationMessageClient"* %40 to void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)***
  %49 = load void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)**, void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)*, void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)** %49, i64 4
  %51 = load void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)*, void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)** %50, align 8
  tail call void %51(%"class.blink::ValidationMessageClient"* nonnull %40, %"class.blink::Element"* dereferenceable(104) %47) #14
  br label %52

52:                                               ; preds = %30, %42, %38, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HTMLFormElement"* @_ZN5blink13ListedElement18FindAssociatedFormEPKNS_11HTMLElementERKN3WTF12AtomicStringEPNS_15HTMLFormElementE(%"class.blink::HTMLElement"* nocapture readonly, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::HTMLFormElement"* readnone) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %37, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 256
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %37, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %14 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %13, align 8
  %15 = tail call %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"* %14, %"class.WTF::AtomicString"* dereferenceable(8) %1) #14
  %16 = icmp eq %"class.blink::Element"* %15, null
  br i1 %16, label %37, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 48
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %37

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %15, i64 0, i32 0, i32 0
  %24 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kFormTagE, align 8
  %25 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %23, i64 1, i32 2
  %28 = bitcast %"class.blink::Member.9"* %27 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %31, %33
  %35 = bitcast %"class.blink::Element"* %15 to %"class.blink::HTMLFormElement"*
  %36 = select i1 %34, %"class.blink::HTMLFormElement"* %35, %"class.blink::HTMLFormElement"* null
  br label %37

37:                                               ; preds = %7, %22, %17, %12, %3
  %38 = phi %"class.blink::HTMLFormElement"* [ %2, %7 ], [ %2, %3 ], [ %36, %22 ], [ null, %17 ], [ null, %12 ]
  ret %"class.blink::HTMLFormElement"* %38
}

declare %"class.blink::Element"* @_ZNK5blink9TreeScope14getElementByIdERKN3WTF12AtomicStringE(%"class.blink::TreeScope"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement19FormRemovedFromTreeERKNS_4NodeE(%"class.blink::ListedElement"*, %"class.blink::Node"* readnone dereferenceable(64)) local_unnamed_addr #1 align 2 {
  %3 = icmp eq %"class.blink::ListedElement"* %0, null
  %4 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %3, label %13, label %5

5:                                                ; preds = %2
  %6 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %4, align 8
  %7 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, i64 3
  %8 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %9, label %10, label %13

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %12 = bitcast %"class.blink::Member.5"* %11 to %"class.blink::HTMLElement"*
  br label %26

13:                                               ; preds = %5, %2
  %14 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %4, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %14, i64 5
  %16 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::ListedElement"* %0) #14
  br i1 %17, label %18, label %23

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %20 = getelementptr inbounds i8, i8* %19, i64 80
  %21 = bitcast i8* %20 to %"class.blink::HTMLElement"**
  %22 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %21, align 8
  br label %26

23:                                               ; preds = %13
  %24 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %25 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %24, i64 0, i32 0, i32 0, i32 0
  br label %26

26:                                               ; preds = %10, %18, %23
  %27 = phi %"class.blink::HTMLElement"* [ %22, %18 ], [ %25, %23 ], [ %12, %10 ]
  %28 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %28) #14
  %30 = icmp eq %"class.blink::ContainerNode"* %29, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %26, %31
  %32 = phi %"class.blink::Node"* [ %34, %31 ], [ %28, %26 ]
  %33 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %32) #14
  %34 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %33, i64 0, i32 0
  %35 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %34) #14
  %36 = icmp eq %"class.blink::ContainerNode"* %35, null
  br i1 %36, label %37, label %31

37:                                               ; preds = %31, %26
  %38 = phi %"class.blink::Node"* [ %28, %26 ], [ %34, %31 ]
  %39 = icmp eq %"class.blink::Node"* %38, %1
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  tail call void @_ZN5blink13ListedElement14ResetFormOwnerEv(%"class.blink::ListedElement"* %0)
  br label %41

41:                                               ; preds = %37, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement17AssociateByParserEPNS_15HTMLFormElementE(%"class.blink::ListedElement"*, %"class.blink::HTMLFormElement"*) local_unnamed_addr #1 align 2 {
  %3 = icmp eq %"class.blink::HTMLFormElement"* %1, null
  br i1 %3, label %40, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 256
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %40, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 7
  %11 = load i8, i8* %10, align 8
  %12 = or i8 %11, 2
  store i8 %12, i8* %10, align 8
  %13 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 4
  %14 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %14, align 8
  %16 = icmp eq %"class.blink::HTMLFormElement"* %15, %1
  br i1 %16, label %39, label %17

17:                                               ; preds = %9
  %18 = bitcast %"class.blink::ListedElement"* %0 to void (%"class.blink::ListedElement"*)***
  %19 = load void (%"class.blink::ListedElement"*)**, void (%"class.blink::ListedElement"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %19, i64 29
  %21 = load void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %20, align 8
  tail call void %21(%"class.blink::ListedElement"* %0) #14
  %22 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %14, align 8
  %23 = icmp eq %"class.blink::HTMLFormElement"* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %17
  tail call void @_ZN5blink15HTMLFormElement12DisassociateERNS_13ListedElementE(%"class.blink::HTMLFormElement"* nonnull %22, %"class.blink::ListedElement"* dereferenceable(64) %0) #14
  br label %25

25:                                               ; preds = %17, %24
  %26 = ptrtoint %"class.blink::HTMLFormElement"* %1 to i64
  %27 = bitcast %"class.blink::Member.5"* %13 to i64*
  store atomic i64 %26, i64* %27 monotonic, align 8
  %28 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %25
  %31 = bitcast %"class.blink::HTMLFormElement"* %1 to i8*
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %31) #14
  %33 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %14, align 8
  br label %34

34:                                               ; preds = %25, %30
  %35 = phi %"class.blink::HTMLFormElement"* [ %1, %25 ], [ %33, %30 ]
  tail call void @_ZN5blink15HTMLFormElement9AssociateERNS_13ListedElementE(%"class.blink::HTMLFormElement"* %35, %"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %36 = load void (%"class.blink::ListedElement"*)**, void (%"class.blink::ListedElement"*)*** %18, align 8
  %37 = getelementptr inbounds void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %36, i64 30
  %38 = load void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %37, align 8
  tail call void %38(%"class.blink::ListedElement"* %0) #14
  br label %39

39:                                               ; preds = %9, %34
  tail call void @_ZN5blink15HTMLFormElement20DidAssociateByParserEv(%"class.blink::HTMLFormElement"* nonnull %1) #14
  br label %40

40:                                               ; preds = %4, %2, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement7SetFormEPNS_15HTMLFormElementE(%"class.blink::ListedElement"*, %"class.blink::HTMLFormElement"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %4, align 8
  %6 = icmp eq %"class.blink::HTMLFormElement"* %5, %1
  br i1 %6, label %34, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::ListedElement"* %0 to void (%"class.blink::ListedElement"*)***
  %9 = load void (%"class.blink::ListedElement"*)**, void (%"class.blink::ListedElement"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %9, i64 29
  %11 = load void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %10, align 8
  tail call void %11(%"class.blink::ListedElement"* %0) #14
  %12 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %4, align 8
  %13 = icmp eq %"class.blink::HTMLFormElement"* %12, null
  br i1 %13, label %15, label %14

14:                                               ; preds = %7
  tail call void @_ZN5blink15HTMLFormElement12DisassociateERNS_13ListedElementE(%"class.blink::HTMLFormElement"* nonnull %12, %"class.blink::ListedElement"* dereferenceable(64) %0) #14
  br label %15

15:                                               ; preds = %7, %14
  %16 = icmp eq %"class.blink::HTMLFormElement"* %1, null
  br i1 %16, label %28, label %17

17:                                               ; preds = %15
  %18 = ptrtoint %"class.blink::HTMLFormElement"* %1 to i64
  %19 = bitcast %"class.blink::Member.5"* %3 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.blink::HTMLFormElement"* %1 to i8*
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %23) #14
  %25 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %4, align 8
  br label %26

26:                                               ; preds = %17, %22
  %27 = phi %"class.blink::HTMLFormElement"* [ %1, %17 ], [ %25, %22 ]
  tail call void @_ZN5blink15HTMLFormElement9AssociateERNS_13ListedElementE(%"class.blink::HTMLFormElement"* %27, %"class.blink::ListedElement"* dereferenceable(64) %0) #14
  br label %30

28:                                               ; preds = %15
  %29 = bitcast %"class.blink::Member.5"* %3 to i64*
  store atomic i64 0, i64* %29 monotonic, align 8
  br label %30

30:                                               ; preds = %28, %26
  %31 = load void (%"class.blink::ListedElement"*)**, void (%"class.blink::ListedElement"*)*** %8, align 8
  %32 = getelementptr inbounds void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %31, i64 30
  %33 = load void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %32, align 8
  tail call void %33(%"class.blink::ListedElement"* %0) #14
  br label %34

34:                                               ; preds = %2, %30
  ret void
}

declare void @_ZN5blink15HTMLFormElement20DidAssociateByParserEv(%"class.blink::HTMLFormElement"*) local_unnamed_addr #5

declare void @_ZN5blink15HTMLFormElement12DisassociateERNS_13ListedElementE(%"class.blink::HTMLFormElement"*, %"class.blink::ListedElement"* dereferenceable(64)) local_unnamed_addr #5

declare void @_ZN5blink15HTMLFormElement9AssociateERNS_13ListedElementE(%"class.blink::HTMLFormElement"*, %"class.blink::ListedElement"* dereferenceable(64)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement14WillChangeFormEv(%"class.blink::ListedElement"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %2, align 8
  %4 = icmp eq %"class.blink::HTMLFormElement"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %6, i32 42) #14
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %6, i32 43) #14
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement30FormOwnerSetNeedsValidityCheckEv(%"class.blink::ListedElement"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %2, align 8
  %4 = icmp eq %"class.blink::HTMLFormElement"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %3, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %6, i32 42) #14
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %6, i32 43) #14
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement13DidChangeFormEv(%"class.blink::ListedElement"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %46

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 4, i32 0, i32 0
  %8 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %7, align 8
  %9 = icmp eq %"class.blink::HTMLFormElement"* %8, null
  br i1 %9, label %46, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %46, label %15

15:                                               ; preds = %10
  %16 = icmp eq %"class.blink::ListedElement"* %0, null
  %17 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %16, label %26, label %18

18:                                               ; preds = %15
  %19 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %17, align 8
  %20 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %19, i64 3
  %21 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %20, align 8
  %22 = tail call zeroext i1 %21(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %22, label %23, label %26

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %25 = bitcast %"class.blink::Member.5"* %24 to %"class.blink::HTMLElement"*
  br label %39

26:                                               ; preds = %18, %15
  %27 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %17, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %27, i64 5
  %29 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::ListedElement"* %0) #14
  br i1 %30, label %31, label %36

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %33 = getelementptr inbounds i8, i8* %32, i64 80
  %34 = bitcast i8* %33 to %"class.blink::HTMLElement"**
  %35 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %34, align 8
  br label %39

36:                                               ; preds = %26
  %37 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %38 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %37, i64 0, i32 0, i32 0, i32 0
  br label %39

39:                                               ; preds = %23, %31, %36
  %40 = phi %"class.blink::HTMLElement"* [ %35, %31 ], [ %38, %36 ], [ %25, %23 ]
  %41 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %40, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %42 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %42, i64 0, i32 2, i32 0, i32 0
  %44 = load %"class.blink::Document"*, %"class.blink::Document"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %40, i64 0, i32 0
  tail call void @_ZN5blink8Document23DidAssociateFormControlEPNS_7ElementE(%"class.blink::Document"* %44, %"class.blink::Element"* %45) #14
  br label %46

46:                                               ; preds = %10, %6, %1, %39
  %47 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 4, i32 0, i32 0
  %48 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %47, align 8
  %49 = icmp eq %"class.blink::HTMLFormElement"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %48, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %51, i32 42) #14
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %51, i32 43) #14
  br label %52

52:                                               ; preds = %46, %50
  ret void
}

declare void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"*, i32) local_unnamed_addr #5

declare %"class.blink::HTMLFormElement"* @_ZNK5blink11HTMLElement16FindFormAncestorEv(%"class.blink::HTMLElement"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement20FormAttributeChangedEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN5blink13ListedElement14ResetFormOwnerEv(%"class.blink::ListedElement"* %0)
  tail call void @_ZN5blink13ListedElement32ResetFormAttributeTargetObserverEv(%"class.blink::ListedElement"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ListedElement18RecalcWillValidateEv(%"class.blink::ListedElement"*) unnamed_addr #1 align 2 {
  %2 = icmp eq %"class.blink::ListedElement"* %0, null
  %3 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %2, label %12, label %4

4:                                                ; preds = %1
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 3
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %11 = bitcast %"class.blink::Member.5"* %10 to %"class.blink::HTMLElement"*
  br label %25

12:                                               ; preds = %4, %1
  %13 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %13, i64 5
  %15 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::ListedElement"* %0) #14
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %19 = getelementptr inbounds i8, i8* %18, i64 80
  %20 = bitcast i8* %19 to %"class.blink::HTMLElement"**
  %21 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %20, align 8
  br label %25

22:                                               ; preds = %12
  %23 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %24 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %23, i64 0, i32 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %9, %17, %22
  %26 = phi %"class.blink::HTMLElement"* [ %21, %17 ], [ %24, %22 ], [ %11, %9 ]
  %27 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 10
  %28 = load i32, i32* %27, align 8
  switch i32 %28, label %120 [
    i32 0, label %29
    i32 2, label %58
  ]

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %26, i64 0, i32 0, i32 0, i32 0
  %31 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %30) #14
  %32 = icmp eq %"class.blink::ContainerNode"* %31, null
  br i1 %32, label %57, label %33

33:                                               ; preds = %29
  %34 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kDatalistTagE, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %34, i64 0, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %53, %33
  %37 = phi %"class.blink::ContainerNode"* [ %31, %33 ], [ %54, %53 ]
  %38 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %37, i64 0, i32 0
  %39 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %37, i64 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 48
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %53

43:                                               ; preds = %36
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %45 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %38, i64 1, i32 2
  %46 = bitcast %"class.blink::Member.9"* %45 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %47 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %47, i64 0, i32 3, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %49, %51
  br i1 %52, label %56, label %53

53:                                               ; preds = %43, %36
  %54 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %38) #14
  %55 = icmp eq %"class.blink::ContainerNode"* %54, null
  br i1 %55, label %57, label %36

56:                                               ; preds = %43
  store i32 1, i32* %27, align 8
  br label %120

57:                                               ; preds = %53, %29
  store i32 2, i32* %27, align 8
  br label %58

58:                                               ; preds = %25, %57
  %59 = bitcast %"class.blink::HTMLElement"* %26 to i1 (%"class.blink::HTMLElement"*)***
  %60 = load i1 (%"class.blink::HTMLElement"*)**, i1 (%"class.blink::HTMLElement"*)*** %59, align 8
  %61 = getelementptr inbounds i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %60, i64 138
  %62 = load i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %61, align 8
  %63 = tail call zeroext i1 %62(%"class.blink::HTMLElement"* %26) #14
  br i1 %63, label %120, label %64

64:                                               ; preds = %58
  %65 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kReadonlyAttrE, align 8
  %66 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %26, i64 0, i32 0, i32 3, i32 0, i32 0
  %67 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %66, align 8
  %68 = icmp eq %"class.blink::ElementData"* %67, null
  br i1 %68, label %120, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %67, i64 0, i32 0, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = and i32 %71, 1
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %81, label %74

74:                                               ; preds = %69
  %75 = bitcast %"class.blink::ElementData"* %67 to %"class.blink::UniqueElementData"*
  %76 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %67, i64 1, i32 1
  %77 = bitcast %"class.blink::Member.24"* %76 to %"class.blink::Attribute"**
  %78 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %75, i64 0, i32 2, i32 0, i32 0, i32 2
  %80 = load i32, i32* %79, align 4
  br label %86

81:                                               ; preds = %69
  %82 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %67, i64 1
  %83 = bitcast %"class.blink::ElementData"* %82 to %"class.blink::Attribute"*
  %84 = lshr i32 %71, 1
  %85 = and i32 %84, 268435455
  br label %86

86:                                               ; preds = %81, %74
  %87 = phi %"class.blink::Attribute"* [ %83, %81 ], [ %78, %74 ]
  %88 = phi i32 [ %85, %81 ], [ %80, %74 ]
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %87, i64 %89
  %91 = icmp eq i32 %88, 0
  br i1 %91, label %117, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %65, i64 0, i32 0, i32 0
  %94 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %94, i64 0, i32 3, i32 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %94, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %97

97:                                               ; preds = %113, %92
  %98 = phi %"class.blink::Attribute"* [ %87, %92 ], [ %114, %113 ]
  %99 = phi i32 [ 0, %92 ], [ %115, %113 ]
  %100 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %98, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %100, align 8
  %102 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %101, %94
  br i1 %102, label %117, label %103

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 3, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %95, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, %106
  br i1 %107, label %108, label %113

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 4, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %110, %111
  br i1 %112, label %117, label %113

113:                                              ; preds = %108, %103
  %114 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %98, i64 1
  %115 = add i32 %99, 1
  %116 = icmp eq %"class.blink::Attribute"* %114, %90
  br i1 %116, label %117, label %97

117:                                              ; preds = %113, %108, %97, %86
  %118 = phi i32 [ -1, %86 ], [ %99, %97 ], [ %99, %108 ], [ -1, %113 ]
  %119 = icmp eq i32 %118, -1
  br label %120

120:                                              ; preds = %117, %64, %25, %56, %58
  %121 = phi i1 [ false, %58 ], [ false, %56 ], [ false, %25 ], [ true, %64 ], [ %119, %117 ]
  ret i1 %121
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(104) %"class.blink::HTMLElement"* @_ZNK5blink13ListedElement13ToHTMLElementEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = icmp eq %"class.blink::ListedElement"* %0, null
  %3 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %2, label %13, label %4

4:                                                ; preds = %1
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 3
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %8, label %9, label %13

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %11 = icmp eq %"class.blink::Member.5"* %10, null
  %12 = bitcast %"class.blink::Member.5"* %10 to %"class.blink::HTMLElement"*
  br i1 %11, label %13, label %26

13:                                               ; preds = %1, %4, %9
  %14 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %15 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %14, i64 5
  %16 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %15, align 8
  %17 = tail call zeroext i1 %16(%"class.blink::ListedElement"* %0) #14
  br i1 %17, label %18, label %23

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %20 = getelementptr inbounds i8, i8* %19, i64 80
  %21 = bitcast i8* %20 to %"class.blink::HTMLElement"**
  %22 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %21, align 8
  br label %26

23:                                               ; preds = %13
  %24 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %25 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %24, i64 0, i32 0, i32 0, i32 0
  br label %26

26:                                               ; preds = %9, %23, %18
  %27 = phi %"class.blink::HTMLElement"* [ %22, %18 ], [ %25, %23 ], [ %12, %9 ]
  ret %"class.blink::HTMLElement"* %27
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ListedElement12WillValidateEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 10
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %1, %6
  tail call void @_ZN5blink13ListedElement23UpdateWillValidateCacheEv(%"class.blink::ListedElement"* %0)
  %11 = load i8, i8* %2, align 8
  br label %12

12:                                               ; preds = %6, %10
  %13 = phi i8 [ %3, %6 ], [ %11, %10 ]
  %14 = and i8 %13, 8
  %15 = icmp ne i8 %14, 0
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::Location", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to { i64, i64 }*
  %6 = alloca %"class.blink::Persistent.2732", align 8
  %7 = icmp eq %"class.blink::ListedElement"* %0, null
  %8 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %7, label %17, label %9

9:                                                ; preds = %1
  %10 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %8, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %10, i64 3
  %12 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %16 = bitcast %"class.blink::Member.5"* %15 to %"class.blink::HTMLElement"*
  br label %30

17:                                               ; preds = %9, %1
  %18 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %8, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %18, i64 5
  %20 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::ListedElement"* %0) #14
  br i1 %21, label %22, label %27

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %24 = getelementptr inbounds i8, i8* %23, i64 80
  %25 = bitcast i8* %24 to %"class.blink::HTMLElement"**
  %26 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %25, align 8
  br label %30

27:                                               ; preds = %17
  %28 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %29 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %28, i64 0, i32 0, i32 0, i32 0
  br label %30

30:                                               ; preds = %14, %22, %27
  %31 = phi %"class.blink::HTMLElement"* [ %26, %22 ], [ %29, %27 ], [ %16, %14 ]
  %32 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 7
  %33 = load i8, i8* %32, align 8
  %34 = and i8 %33, 32
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %49

36:                                               ; preds = %30
  %37 = or i8 %33, 32
  store i8 %37, i8* %32, align 8
  %38 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 4, i32 0, i32 0
  %39 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %38, align 8
  %40 = icmp eq %"class.blink::HTMLFormElement"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::HTMLFormElement", %"class.blink::HTMLFormElement"* %39, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %42, i32 42) #14
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %42, i32 43) #14
  br label %43

43:                                               ; preds = %36, %41
  %44 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %31, i64 0, i32 0, i32 0, i32 0
  %45 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %44) #14
  %46 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %45, i64 0, i32 0
  tail call void @_ZN5blink13ListedElement38FieldSetAncestorsSetNeedsValidityCheckEPNS_4NodeE(%"class.blink::ListedElement"* %0, %"class.blink::Node"* %46)
  %47 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %31, i64 0, i32 0
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %47, i32 42) #14
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %47, i32 43) #14
  %48 = load i8, i8* %32, align 8
  br label %49

49:                                               ; preds = %30, %43
  %50 = phi i8 [ %33, %30 ], [ %48, %43 ]
  %51 = and i8 %50, 1
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %175, label %53

53:                                               ; preds = %49
  br i1 %7, label %62, label %54

54:                                               ; preds = %53
  %55 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %8, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %55, i64 3
  %57 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %61 = bitcast %"class.blink::Member.5"* %60 to %"class.blink::HTMLElement"*
  br label %75

62:                                               ; preds = %54, %53
  %63 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %8, align 8
  %64 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %63, i64 5
  %65 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %64, align 8
  %66 = tail call zeroext i1 %65(%"class.blink::ListedElement"* %0) #14
  br i1 %66, label %67, label %72

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %69 = getelementptr inbounds i8, i8* %68, i64 80
  %70 = bitcast i8* %69 to %"class.blink::HTMLElement"**
  %71 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %70, align 8
  br label %75

72:                                               ; preds = %62
  %73 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %74 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %73, i64 0, i32 0, i32 0, i32 0
  br label %75

75:                                               ; preds = %72, %67, %59
  %76 = phi %"class.blink::HTMLElement"* [ %71, %67 ], [ %74, %72 ], [ %61, %59 ]
  %77 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %76, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %78 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %78, i64 0, i32 2, i32 0, i32 0
  %80 = load %"class.blink::Document"*, %"class.blink::Document"** %79, align 8
  %81 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %80) #14
  %82 = icmp eq %"class.blink::Page"* %81, null
  br i1 %82, label %175, label %83

83:                                               ; preds = %75
  %84 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %81, i64 0, i32 24, i32 0, i32 0
  %85 = load %"class.blink::ValidationMessageClient"*, %"class.blink::ValidationMessageClient"** %84, align 8
  %86 = icmp eq %"class.blink::ValidationMessageClient"* %85, null
  br i1 %86, label %175, label %87

87:                                               ; preds = %83
  %88 = bitcast %"class.blink::ListedElement"* %0 to %"class.blink::Element"* (%"class.blink::ListedElement"*)***
  %89 = load %"class.blink::Element"* (%"class.blink::ListedElement"*)**, %"class.blink::Element"* (%"class.blink::ListedElement"*)*** %88, align 8
  %90 = getelementptr inbounds %"class.blink::Element"* (%"class.blink::ListedElement"*)*, %"class.blink::Element"* (%"class.blink::ListedElement"*)** %89, i64 22
  %91 = load %"class.blink::Element"* (%"class.blink::ListedElement"*)*, %"class.blink::Element"* (%"class.blink::ListedElement"*)** %90, align 8
  %92 = tail call dereferenceable(104) %"class.blink::Element"* %91(%"class.blink::ListedElement"* %0) #14
  %93 = bitcast %"class.blink::ValidationMessageClient"* %85 to i1 (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)***
  %94 = load i1 (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)**, i1 (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)*** %93, align 8
  %95 = getelementptr inbounds i1 (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)*, i1 (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)** %94, i64 5
  %96 = load i1 (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)*, i1 (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)** %95, align 8
  %97 = tail call zeroext i1 %96(%"class.blink::ValidationMessageClient"* nonnull %85, %"class.blink::Element"* dereferenceable(104) %92) #14
  br i1 %97, label %98, label %175

98:                                               ; preds = %87
  %99 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %31, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %100 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %100, i64 0, i32 2, i32 0, i32 0
  %102 = load %"class.blink::Document"*, %"class.blink::Document"** %101, align 8
  %103 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"* %102, i8 zeroext 1) #14
  %104 = bitcast %"class.base::SingleThreadTaskRunner"* %103 to %"class.base::TaskRunner"*
  %105 = bitcast %"class.base::Location"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %105) #14
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.3, i64 0, i64 0), i32 549) #14
  %106 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #14
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ListedElement"*)* @_ZN5blink13ListedElement30UpdateVisibleValidationMessageEv to i64), i64 0>, <2 x i64>* %4, align 16
  %107 = bitcast %"class.blink::Persistent.2732"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107) #14
  %108 = getelementptr inbounds %"class.blink::Persistent.2732", %"class.blink::Persistent.2732"* %6, i64 0, i32 0
  %109 = getelementptr inbounds %"class.blink::Persistent.2732", %"class.blink::Persistent.2732"* %6, i64 0, i32 0, i32 0
  store %"class.blink::ListedElement"* %0, %"class.blink::ListedElement"** %109, align 8, !alias.scope !3
  %110 = getelementptr inbounds %"class.blink::Persistent.2732", %"class.blink::Persistent.2732"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %110, align 8, !alias.scope !3
  %111 = ptrtoint %"class.blink::ListedElement"* %0 to i64
  switch i64 %111, label %112 [
    i64 0, label %138
    i64 -1, label %138
  ]

112:                                              ; preds = %98
  %113 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !3
  %114 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %113, i64 0, i32 1
  %115 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %114) #14, !noalias !3
  %116 = icmp eq i8* %115, null
  br i1 %116, label %117, label %119, !prof !6

117:                                              ; preds = %112
  %118 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %114, i8* %118) #14
  br label %119

119:                                              ; preds = %117, %112
  %120 = phi i8* [ %118, %117 ], [ %115, %112 ]
  %121 = bitcast i8* %120 to %"class.blink::ThreadState"**
  %122 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %121, align 8, !noalias !3
  %123 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %122, i64 0, i32 3, i32 0, i32 0, i32 0
  %124 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %123, align 8, !noalias !3
  %125 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %124, i64 0, i32 0, i32 0
  %126 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %125, align 8, !noalias !3
  %127 = icmp eq %"class.blink::PersistentNode"* %126, null
  br i1 %127, label %128, label %131, !prof !6

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %124, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %129) #14
  %130 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %125, align 8
  br label %131

131:                                              ; preds = %128, %119
  %132 = phi %"class.blink::PersistentNode"* [ %130, %128 ], [ %126, %119 ]
  %133 = bitcast %"class.blink::PersistentNode"* %132 to i64*
  %134 = load i64, i64* %133, align 8, !noalias !3
  %135 = bitcast %"class.blink::PersistentRegion"* %124 to i64*
  store i64 %134, i64* %135, align 8, !noalias !3
  %136 = bitcast %"class.blink::PersistentNode"* %132 to %"class.blink::PersistentBase.2733"**
  store %"class.blink::PersistentBase.2733"* %108, %"class.blink::PersistentBase.2733"** %136, align 8, !noalias !3
  %137 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %132, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_13ListedElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %137, align 8
  store %"class.blink::PersistentNode"* %132, %"class.blink::PersistentNode"** %110, align 8, !alias.scope !3
  br label %138

138:                                              ; preds = %98, %98, %131
  %139 = call i8* @_Znwm(i64 64) #16, !noalias !7
  %140 = bitcast i8* %139 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink13ListedElementEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %140, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink13ListedElementEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %5, %"class.blink::Persistent.2732"* nonnull dereferenceable(16) %6) #14, !noalias !7
  %141 = bitcast %"class.base::OnceCallback"* %3 to i8**
  store i8* %139, i8** %141, align 8, !alias.scope !7
  %142 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %104, %"class.base::Location"* nonnull dereferenceable(32) %2, %"class.base::OnceCallback"* nonnull %3) #14
  %143 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %143) #14
  %144 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %110, align 8
  %145 = icmp eq %"class.blink::PersistentNode"* %144, null
  br i1 %145, label %165, label %146

146:                                              ; preds = %138
  %147 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %148 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %147, i64 0, i32 1
  %149 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %148) #14
  %150 = icmp eq i8* %149, null
  br i1 %150, label %151, label %153, !prof !6

151:                                              ; preds = %146
  %152 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %148, i8* %152) #14
  br label %153

153:                                              ; preds = %151, %146
  %154 = phi i8* [ %152, %151 ], [ %149, %146 ]
  %155 = bitcast i8* %154 to %"class.blink::ThreadState"**
  %156 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %155, align 8
  %157 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %156, i64 0, i32 3, i32 0, i32 0, i32 0
  %158 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %157, align 8
  %159 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %110, align 8
  %160 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %158, i64 0, i32 0, i32 0
  %161 = bitcast %"class.blink::PersistentRegion"* %158 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = bitcast %"class.blink::PersistentNode"* %159 to i64*
  store i64 %162, i64* %163, align 8
  %164 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %159, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %164, align 8
  store %"class.blink::PersistentNode"* %159, %"class.blink::PersistentNode"** %160, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %110, align 8
  br label %165

165:                                              ; preds = %138, %153
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %105) #14
  %166 = icmp eq %"class.base::SingleThreadTaskRunner"* %103, null
  br i1 %166, label %175, label %167

167:                                              ; preds = %165
  %168 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %103, i64 0, i32 0, i32 0, i32 1
  %169 = getelementptr inbounds %"class.base::RefCountedThreadSafe.332", %"class.base::RefCountedThreadSafe.332"* %168, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = atomicrmw sub i32* %169, i32 1 acq_rel
  %171 = icmp eq i32 %170, 1
  br i1 %171, label %172, label %175

172:                                              ; preds = %167
  %173 = getelementptr inbounds %"class.base::RefCountedThreadSafe.332", %"class.base::RefCountedThreadSafe.332"* %168, i64 -2
  %174 = bitcast %"class.base::RefCountedThreadSafe.332"* %173 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %174) #14
  br label %175

175:                                              ; preds = %49, %75, %83, %172, %167, %165, %87
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ListedElement11CustomErrorEv(%"class.blink::ListedElement"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp ne i32 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ListedElement11HasBadInputEv(%"class.blink::ListedElement"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ListedElement15PatternMismatchEv(%"class.blink::ListedElement"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ListedElement13RangeOverflowEv(%"class.blink::ListedElement"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ListedElement14RangeUnderflowEv(%"class.blink::ListedElement"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ListedElement12StepMismatchEv(%"class.blink::ListedElement"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ListedElement7TooLongEv(%"class.blink::ListedElement"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ListedElement8TooShortEv(%"class.blink::ListedElement"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ListedElement12TypeMismatchEv(%"class.blink::ListedElement"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ListedElement5ValidEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  %3 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %3, i64 17
  %5 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::ListedElement"* %0) #14
  br i1 %6, label %53, label %7

7:                                                ; preds = %1
  %8 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %2, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %8, i64 14
  %10 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::ListedElement"* %0) #14
  br i1 %11, label %53, label %12

12:                                               ; preds = %7
  %13 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %2, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %13, i64 13
  %15 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::ListedElement"* %0) #14
  br i1 %16, label %53, label %17

17:                                               ; preds = %12
  %18 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %2, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %18, i64 12
  %20 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::ListedElement"* %0) #14
  br i1 %21, label %53, label %22

22:                                               ; preds = %17
  %23 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %2, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %23, i64 15
  %25 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::ListedElement"* %0) #14
  br i1 %26, label %53, label %27

27:                                               ; preds = %22
  %28 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %2, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %28, i64 16
  %30 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::ListedElement"* %0) #14
  br i1 %31, label %53, label %32

32:                                               ; preds = %27
  %33 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %2, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %33, i64 11
  %35 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::ListedElement"* %0) #14
  br i1 %36, label %53, label %37

37:                                               ; preds = %32
  %38 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %2, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %38, i64 18
  %40 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::ListedElement"* %0) #14
  br i1 %41, label %53, label %42

42:                                               ; preds = %37
  %43 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %2, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %43, i64 10
  %45 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::ListedElement"* %0) #14
  br i1 %46, label %53, label %47

47:                                               ; preds = %42
  %48 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %2, align 8
  %49 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %48, i64 9
  %50 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %49, align 8
  %51 = tail call zeroext i1 %50(%"class.blink::ListedElement"* %0) #14
  %52 = xor i1 %51, true
  br label %53

53:                                               ; preds = %47, %42, %37, %32, %27, %22, %17, %12, %7, %1
  %54 = phi i1 [ false, %42 ], [ false, %37 ], [ false, %32 ], [ false, %27 ], [ false, %22 ], [ false, %17 ], [ false, %12 ], [ false, %7 ], [ false, %1 ], [ %52, %47 ]
  ret i1 %54
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ListedElement12ValueMissingEv(%"class.blink::ListedElement"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement23CustomValidationMessageEv(%"class.blink::ListedElement"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 6, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #14
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !6

19:                                               ; preds = %10
  tail call void @llvm.trap() #14
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement26SetCustomValidationMessageERKN3WTF6StringE(%"class.blink::ListedElement"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #14
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !6

21:                                               ; preds = %12
  tail call void @llvm.trap() #14
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %2
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"class.WTF::String"* %3 to i64*
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #14
  br label %43

43:                                               ; preds = %24, %39, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement17validationMessageEv(%"class.blink::ListedElement"*) unnamed_addr #1 align 2 {
  %2 = icmp eq %"class.blink::ListedElement"* %0, null
  %3 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %2, label %12, label %4

4:                                                ; preds = %1
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 3
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %11 = bitcast %"class.blink::Member.5"* %10 to %"class.blink::HTMLElement"*
  br label %25

12:                                               ; preds = %4, %1
  %13 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %13, i64 5
  %15 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::ListedElement"* %0) #14
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %19 = getelementptr inbounds i8, i8* %18, i64 80
  %20 = bitcast i8* %19 to %"class.blink::HTMLElement"**
  %21 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %20, align 8
  br label %25

22:                                               ; preds = %12
  %23 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %24 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %23, i64 0, i32 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %9, %17, %22
  %26 = phi %"class.blink::HTMLElement"* [ %21, %17 ], [ %24, %22 ], [ %11, %9 ]
  %27 = bitcast %"class.blink::HTMLElement"* %26 to i1 (%"class.blink::HTMLElement"*)***
  %28 = load i1 (%"class.blink::HTMLElement"*)**, i1 (%"class.blink::HTMLElement"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %28, i64 129
  %30 = load i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::HTMLElement"* %26) #14
  br i1 %31, label %32, label %59

32:                                               ; preds = %25
  %33 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %33, i64 9
  %35 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::ListedElement"* %0) #14
  br i1 %36, label %37, label %59

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 6, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %59, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i33
  %51 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #14
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !6

56:                                               ; preds = %47
  tail call void @llvm.trap() #14
  unreachable

57:                                               ; preds = %47
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %48, align 4
  br label %59

59:                                               ; preds = %25, %32, %57, %42, %37
  %60 = phi i64 [ %40, %37 ], [ %40, %42 ], [ %40, %57 ], [ 0, %32 ], [ 0, %25 ]
  %61 = inttoptr i64 %60 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %61
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13ListedElement20ValidationSubMessageEv(%"class.blink::ListedElement"* nocapture readnone) unnamed_addr #7 align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement17setCustomValidityERKN3WTF6StringE(%"class.blink::ListedElement"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 6
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #14
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !6

21:                                               ; preds = %12
  tail call void @llvm.trap() #14
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %2
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"class.WTF::String"* %3 to i64*
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #14
  br label %43

43:                                               ; preds = %24, %39, %42
  tail call void @_ZN5blink13ListedElement21SetNeedsValidityCheckEv(%"class.blink::ListedElement"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement40FindCustomValidationMessageTextDirectionERKN3WTF6StringERNS_13TextDirectionERS2_S6_(%"class.blink::ListedElement"*, %"class.WTF::String"* dereferenceable(8), i8* nocapture dereferenceable(1), %"class.WTF::String"* nocapture readonly dereferenceable(8), i8* nocapture dereferenceable(1)) local_unnamed_addr #1 align 2 {
  %6 = tail call zeroext i8 @_ZN5blink23DetermineDirectionalityERKN3WTF6StringEPb(%"class.WTF::String"* dereferenceable(8) %1, i8* null) #14
  store i8 %6, i8* %2, align 1
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %65, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %65, label %14

14:                                               ; preds = %10
  %15 = icmp eq %"class.blink::ListedElement"* %0, null
  %16 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %15, label %25, label %17

17:                                               ; preds = %14
  %18 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %16, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %18, i64 3
  %20 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %21, label %22, label %25

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %24 = bitcast %"class.blink::Member.5"* %23 to %"class.blink::HTMLElement"*
  br label %38

25:                                               ; preds = %17, %14
  %26 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %16, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %26, i64 5
  %28 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::ListedElement"* %0) #14
  br i1 %29, label %30, label %35

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %32 = getelementptr inbounds i8, i8* %31, i64 80
  %33 = bitcast i8* %32 to %"class.blink::HTMLElement"**
  %34 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %33, align 8
  br label %38

35:                                               ; preds = %25
  %36 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %37 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %36, i64 0, i32 0, i32 0, i32 0
  br label %38

38:                                               ; preds = %22, %30, %35
  %39 = phi %"class.blink::HTMLElement"* [ %34, %30 ], [ %37, %35 ], [ %24, %22 ]
  %40 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %39, i64 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = and i32 %41, 1
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %39, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %43, label %49, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.blink::NodeData"** %44 to %"class.blink::NodeRareData"**
  %47 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %47, i64 0, i32 1, i32 0, i32 0
  br label %51

49:                                               ; preds = %38
  %50 = bitcast %"class.blink::NodeData"** %44 to %"class.blink::NodeRenderingData"**
  br label %51

51:                                               ; preds = %45, %49
  %52 = phi %"class.blink::NodeRenderingData"** [ %48, %45 ], [ %50, %49 ]
  %53 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %53, i64 0, i32 1
  %55 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %55, i64 0, i32 5, i32 0
  %57 = bitcast %"class.blink::ComputedStyle"** %56 to %"class.blink::ComputedStyleBase"**
  %58 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %58, i64 0, i32 9
  %60 = bitcast [20 x i8]* %59 to i160*
  %61 = load i160, i160* %60, align 8
  %62 = lshr i160 %61, 115
  %63 = trunc i160 %62 to i8
  %64 = and i8 %63, 1
  store i8 %64, i8* %4, align 1
  br label %65

65:                                               ; preds = %5, %51, %10
  ret void
}

declare zeroext i8 @_ZN5blink23DetermineDirectionalityERKN3WTF6StringEPb(%"class.WTF::String"* dereferenceable(8), i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement30UpdateVisibleValidationMessageEv(%"class.blink::ListedElement"*) #1 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.blink::ListedElement"* %0 to %"class.blink::Element"* (%"class.blink::ListedElement"*)***
  %7 = load %"class.blink::Element"* (%"class.blink::ListedElement"*)**, %"class.blink::Element"* (%"class.blink::ListedElement"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Element"* (%"class.blink::ListedElement"*)*, %"class.blink::Element"* (%"class.blink::ListedElement"*)** %7, i64 22
  %9 = load %"class.blink::Element"* (%"class.blink::ListedElement"*)*, %"class.blink::Element"* (%"class.blink::ListedElement"*)** %8, align 8
  %10 = tail call dereferenceable(104) %"class.blink::Element"* %9(%"class.blink::ListedElement"* %0) #14
  %11 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %10, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %10, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %13, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::Document"*, %"class.blink::Document"** %14, align 8
  %16 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %15) #14
  %17 = icmp eq %"class.blink::Page"* %16, null
  br i1 %17, label %275, label %18

18:                                               ; preds = %1
  %19 = tail call zeroext i1 @_ZNK5blink4Page13IsPageVisibleEv(%"class.blink::Page"* nonnull %16) #14
  br i1 %19, label %20, label %275

20:                                               ; preds = %18
  %21 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %12, align 8
  %22 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %23, i64 0, i32 85
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %25, 4
  br i1 %26, label %275, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %16, i64 0, i32 35
  %29 = load i8, i8* %28, align 2, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %275

31:                                               ; preds = %27
  %32 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #14
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %10, i64 0, i32 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 1
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %10, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %39 = bitcast %"class.blink::NodeData"** %38 to %"class.blink::NodeRareData"**
  %40 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %40, i64 0, i32 1, i32 0, i32 0
  %42 = bitcast %"class.blink::NodeData"** %38 to %"class.blink::NodeRenderingData"**
  %43 = select i1 %37, %"class.blink::NodeRenderingData"** %42, %"class.blink::NodeRenderingData"** %41
  %44 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %44, i64 0, i32 1
  %46 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %45, align 8
  %47 = icmp eq %"class.blink::LayoutObject"* %46, null
  br i1 %47, label %134, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 7
  %50 = load i8, i8* %49, align 8
  %51 = and i8 %50, 4
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 10
  %55 = load i32, i32* %54, align 8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %53, %48
  tail call void @_ZN5blink13ListedElement23UpdateWillValidateCacheEv(%"class.blink::ListedElement"* %0) #14
  %58 = load i8, i8* %49, align 8
  br label %59

59:                                               ; preds = %53, %57
  %60 = phi i8 [ %50, %53 ], [ %58, %57 ]
  %61 = and i8 %60, 8
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %134, label %63

63:                                               ; preds = %59
  %64 = icmp eq %"class.blink::ListedElement"* %0, null
  %65 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %64, label %74, label %66

66:                                               ; preds = %63
  %67 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %65, align 8
  %68 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %67, i64 3
  %69 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %68, align 8
  %70 = tail call zeroext i1 %69(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %73 = bitcast %"class.blink::Member.5"* %72 to %"class.blink::HTMLElement"*
  br label %87

74:                                               ; preds = %66, %63
  %75 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %65, align 8
  %76 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %75, i64 5
  %77 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %76, align 8
  %78 = tail call zeroext i1 %77(%"class.blink::ListedElement"* %0) #14
  br i1 %78, label %79, label %84

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %81 = getelementptr inbounds i8, i8* %80, i64 80
  %82 = bitcast i8* %81 to %"class.blink::HTMLElement"**
  %83 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %82, align 8
  br label %87

84:                                               ; preds = %74
  %85 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %86 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %85, i64 0, i32 0, i32 0, i32 0
  br label %87

87:                                               ; preds = %71, %79, %84
  %88 = phi %"class.blink::HTMLElement"* [ %83, %79 ], [ %86, %84 ], [ %73, %71 ]
  %89 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = tail call zeroext i1 @_ZNK5blink4Node36IsShadowIncludingInclusiveAncestorOfERKS0_(%"class.blink::Node"* %89, %"class.blink::Node"* dereferenceable(64) %11) #14
  br i1 %90, label %91, label %134

91:                                               ; preds = %87
  %92 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #14
  %93 = bitcast %"class.blink::ListedElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)***
  %94 = load %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)*** %93, align 8
  %95 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)** %94, i64 19
  %96 = load %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)** %95, align 8
  %97 = tail call %"class.WTF::StringImpl"* %96(%"class.blink::ListedElement"* %0) #14
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %98, align 8
  %99 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %3) #14
  %100 = ptrtoint %"class.WTF::StringImpl"* %99 to i64
  %101 = bitcast %"class.WTF::String"* %2 to i64*
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  store i64 %100, i64* %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %91
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %102, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %113

111:                                              ; preds = %104
  %112 = add i32 %110, -1
  store i32 %112, i32* %109, align 4
  br label %113

113:                                              ; preds = %111, %104
  %114 = phi i32 [ %112, %111 ], [ %110, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %102) #14
  br label %117

117:                                              ; preds = %116, %113, %91
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %133, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  br i1 %124, label %127, label %129

127:                                              ; preds = %120
  %128 = add i32 %126, -1
  store i32 %128, i32* %125, align 4
  br label %129

129:                                              ; preds = %127, %120
  %130 = phi i32 [ %128, %127 ], [ %126, %120 ]
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %118) #14
  br label %133

133:                                              ; preds = %117, %129, %132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #14
  br label %134

134:                                              ; preds = %59, %31, %133, %87
  %135 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 7
  %136 = load i8, i8* %135, align 8
  %137 = or i8 %136, 1
  store i8 %137, i8* %135, align 8
  %138 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %16, i64 0, i32 24, i32 0, i32 0
  %139 = load %"class.blink::ValidationMessageClient"*, %"class.blink::ValidationMessageClient"** %138, align 8
  %140 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #14
  %141 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %142 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #14
  %143 = bitcast %"class.blink::ListedElement"* %0 to %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)***
  %144 = load %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)*** %143, align 8
  %145 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)** %144, i64 20
  %146 = load %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::ListedElement"*)** %145, align 8
  %147 = call %"class.WTF::StringImpl"* %146(%"class.blink::ListedElement"* %0) #14
  %148 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %147, %"class.WTF::StringImpl"** %148, align 8
  %149 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %5) #14
  store %"class.WTF::StringImpl"* %149, %"class.WTF::StringImpl"** %141, align 8
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %165, label %152

152:                                              ; preds = %134
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %150) #14
  br label %165

165:                                              ; preds = %134, %161, %164
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #14
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %167 = icmp eq %"class.WTF::StringImpl"* %166, null
  br i1 %167, label %172, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %166, i64 0, i32 1
  %170 = load i32, i32* %169, align 4
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %177

172:                                              ; preds = %165, %168
  %173 = bitcast %"class.blink::ValidationMessageClient"* %139 to void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)***
  %174 = load void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)**, void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)*, void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)** %174, i64 4
  %176 = load void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)*, void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)** %175, align 8
  call void %176(%"class.blink::ValidationMessageClient"* %139, %"class.blink::Element"* dereferenceable(104) %10) #14
  br label %236

177:                                              ; preds = %168
  %178 = call zeroext i8 @_ZN5blink23DetermineDirectionalityERKN3WTF6StringEPb(%"class.WTF::String"* nonnull dereferenceable(8) %2, i8* null) #14
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %236, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 1
  %183 = load i32, i32* %182, align 4
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %236, label %185

185:                                              ; preds = %181
  %186 = icmp eq %"class.blink::ListedElement"* %0, null
  %187 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %186, label %196, label %188

188:                                              ; preds = %185
  %189 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %187, align 8
  %190 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %189, i64 3
  %191 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %190, align 8
  %192 = call zeroext i1 %191(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %192, label %193, label %196

193:                                              ; preds = %188
  %194 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %195 = bitcast %"class.blink::Member.5"* %194 to %"class.blink::HTMLElement"*
  br label %209

196:                                              ; preds = %188, %185
  %197 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %187, align 8
  %198 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %197, i64 5
  %199 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %198, align 8
  %200 = call zeroext i1 %199(%"class.blink::ListedElement"* %0) #14
  br i1 %200, label %201, label %206

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %203 = getelementptr inbounds i8, i8* %202, i64 80
  %204 = bitcast i8* %203 to %"class.blink::HTMLElement"**
  %205 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %204, align 8
  br label %209

206:                                              ; preds = %196
  %207 = call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %208 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %207, i64 0, i32 0, i32 0, i32 0
  br label %209

209:                                              ; preds = %206, %201, %193
  %210 = phi %"class.blink::HTMLElement"* [ %205, %201 ], [ %208, %206 ], [ %195, %193 ]
  %211 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %210, i64 0, i32 0, i32 0, i32 0, i32 1
  %212 = load i32, i32* %211, align 8
  %213 = and i32 %212, 1
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %210, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %214, label %220, label %216

216:                                              ; preds = %209
  %217 = bitcast %"class.blink::NodeData"** %215 to %"class.blink::NodeRareData"**
  %218 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %217, align 8
  %219 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %218, i64 0, i32 1, i32 0, i32 0
  br label %222

220:                                              ; preds = %209
  %221 = bitcast %"class.blink::NodeData"** %215 to %"class.blink::NodeRenderingData"**
  br label %222

222:                                              ; preds = %220, %216
  %223 = phi %"class.blink::NodeRenderingData"** [ %219, %216 ], [ %221, %220 ]
  %224 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %223, align 8
  %225 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %224, i64 0, i32 1
  %226 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %225, align 8
  %227 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %226, i64 0, i32 5, i32 0
  %228 = bitcast %"class.blink::ComputedStyle"** %227 to %"class.blink::ComputedStyleBase"**
  %229 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %228, align 8
  %230 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %229, i64 0, i32 9
  %231 = bitcast [20 x i8]* %230 to i160*
  %232 = load i160, i160* %231, align 8
  %233 = lshr i160 %232, 115
  %234 = trunc i160 %233 to i8
  %235 = and i8 %234, 1
  br label %236

236:                                              ; preds = %222, %181, %177, %172
  %237 = phi i8 [ 0, %172 ], [ %178, %177 ], [ %178, %181 ], [ %178, %222 ]
  %238 = phi i8 [ 0, %172 ], [ 0, %177 ], [ 0, %181 ], [ %235, %222 ]
  %239 = bitcast %"class.blink::ValidationMessageClient"* %139 to void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*, %"class.WTF::String"*, i8, %"class.WTF::String"*, i8)***
  %240 = load void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*, %"class.WTF::String"*, i8, %"class.WTF::String"*, i8)**, void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*, %"class.WTF::String"*, i8, %"class.WTF::String"*, i8)*** %239, align 8
  %241 = getelementptr inbounds void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*, %"class.WTF::String"*, i8, %"class.WTF::String"*, i8)*, void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*, %"class.WTF::String"*, i8, %"class.WTF::String"*, i8)** %240, i64 3
  %242 = load void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*, %"class.WTF::String"*, i8, %"class.WTF::String"*, i8)*, void (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*, %"class.WTF::String"*, i8, %"class.WTF::String"*, i8)** %241, align 8
  call void %242(%"class.blink::ValidationMessageClient"* %139, %"class.blink::Element"* dereferenceable(104) %10, %"class.WTF::String"* nonnull dereferenceable(8) %2, i8 zeroext %237, %"class.WTF::String"* nonnull dereferenceable(8) %4, i8 zeroext %238) #14
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %141, align 8
  %244 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %244, label %258, label %245

245:                                              ; preds = %236
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  br i1 %249, label %252, label %254

252:                                              ; preds = %245
  %253 = add i32 %251, -1
  store i32 %253, i32* %250, align 4
  br label %254

254:                                              ; preds = %252, %245
  %255 = phi i32 [ %253, %252 ], [ %251, %245 ]
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %258

257:                                              ; preds = %254
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %243) #14
  br label %258

258:                                              ; preds = %236, %254, %257
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #14
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %260 = icmp eq %"class.WTF::StringImpl"* %259, null
  br i1 %260, label %274, label %261

261:                                              ; preds = %258
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 0
  %267 = load i32, i32* %266, align 4
  br i1 %265, label %268, label %270

268:                                              ; preds = %261
  %269 = add i32 %267, -1
  store i32 %269, i32* %266, align 4
  br label %270

270:                                              ; preds = %268, %261
  %271 = phi i32 [ %269, %268 ], [ %267, %261 ]
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %274

273:                                              ; preds = %270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %259) #14
  br label %274

274:                                              ; preds = %258, %270, %273
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #14
  br label %275

275:                                              ; preds = %27, %18, %20, %1, %274
  ret void
}

declare %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink4Page13IsPageVisibleEv(%"class.blink::Page"*) local_unnamed_addr #5

declare zeroext i1 @_ZNK5blink4Node36IsShadowIncludingInclusiveAncestorOfERKS0_(%"class.blink::Node"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #5

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ValidationMessageClient"* @_ZNK5blink13ListedElement26GetValidationMessageClientEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = icmp eq %"class.blink::ListedElement"* %0, null
  %3 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %2, label %12, label %4

4:                                                ; preds = %1
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 3
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %11 = bitcast %"class.blink::Member.5"* %10 to %"class.blink::HTMLElement"*
  br label %25

12:                                               ; preds = %4, %1
  %13 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %13, i64 5
  %15 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::ListedElement"* %0) #14
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %19 = getelementptr inbounds i8, i8* %18, i64 80
  %20 = bitcast i8* %19 to %"class.blink::HTMLElement"**
  %21 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %20, align 8
  br label %25

22:                                               ; preds = %12
  %23 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %24 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %23, i64 0, i32 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %9, %17, %22
  %26 = phi %"class.blink::HTMLElement"* [ %21, %17 ], [ %24, %22 ], [ %11, %9 ]
  %27 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %26, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  %31 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %30) #14
  %32 = icmp eq %"class.blink::Page"* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %31, i64 0, i32 24, i32 0, i32 0
  %35 = load %"class.blink::ValidationMessageClient"*, %"class.blink::ValidationMessageClient"** %34, align 8
  br label %36

36:                                               ; preds = %25, %33
  %37 = phi %"class.blink::ValidationMessageClient"* [ %35, %33 ], [ null, %25 ]
  ret %"class.blink::ValidationMessageClient"* %37
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ListedElement26IsValidationMessageVisibleEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %53, label %6

6:                                                ; preds = %1
  %7 = icmp eq %"class.blink::ListedElement"* %0, null
  %8 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %7, label %17, label %9

9:                                                ; preds = %6
  %10 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %8, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %10, i64 3
  %12 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %16 = bitcast %"class.blink::Member.5"* %15 to %"class.blink::HTMLElement"*
  br label %30

17:                                               ; preds = %9, %6
  %18 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %8, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %18, i64 5
  %20 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::ListedElement"* %0) #14
  br i1 %21, label %22, label %27

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %24 = getelementptr inbounds i8, i8* %23, i64 80
  %25 = bitcast i8* %24 to %"class.blink::HTMLElement"**
  %26 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %25, align 8
  br label %30

27:                                               ; preds = %17
  %28 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %29 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %28, i64 0, i32 0, i32 0, i32 0
  br label %30

30:                                               ; preds = %27, %22, %14
  %31 = phi %"class.blink::HTMLElement"* [ %26, %22 ], [ %29, %27 ], [ %16, %14 ]
  %32 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %31, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %33, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::Document"*, %"class.blink::Document"** %34, align 8
  %36 = tail call %"class.blink::Page"* @_ZNK5blink8Document7GetPageEv(%"class.blink::Document"* %35) #14
  %37 = icmp eq %"class.blink::Page"* %36, null
  br i1 %37, label %53, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %36, i64 0, i32 24, i32 0, i32 0
  %40 = load %"class.blink::ValidationMessageClient"*, %"class.blink::ValidationMessageClient"** %39, align 8
  %41 = icmp eq %"class.blink::ValidationMessageClient"* %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.blink::ListedElement"* %0 to %"class.blink::Element"* (%"class.blink::ListedElement"*)***
  %44 = load %"class.blink::Element"* (%"class.blink::ListedElement"*)**, %"class.blink::Element"* (%"class.blink::ListedElement"*)*** %43, align 8
  %45 = getelementptr inbounds %"class.blink::Element"* (%"class.blink::ListedElement"*)*, %"class.blink::Element"* (%"class.blink::ListedElement"*)** %44, i64 22
  %46 = load %"class.blink::Element"* (%"class.blink::ListedElement"*)*, %"class.blink::Element"* (%"class.blink::ListedElement"*)** %45, align 8
  %47 = tail call dereferenceable(104) %"class.blink::Element"* %46(%"class.blink::ListedElement"* %0) #14
  %48 = bitcast %"class.blink::ValidationMessageClient"* %40 to i1 (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)***
  %49 = load i1 (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)**, i1 (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)*** %48, align 8
  %50 = getelementptr inbounds i1 (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)*, i1 (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)** %49, i64 5
  %51 = load i1 (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)*, i1 (%"class.blink::ValidationMessageClient"*, %"class.blink::Element"*)** %50, align 8
  %52 = tail call zeroext i1 %51(%"class.blink::ValidationMessageClient"* nonnull %40, %"class.blink::Element"* dereferenceable(104) %47) #14
  br label %53

53:                                               ; preds = %1, %30, %38, %42
  %54 = phi i1 [ %52, %42 ], [ false, %38 ], [ false, %30 ], [ false, %1 ]
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(104) %"class.blink::Element"* @_ZNK5blink13ListedElement16ValidationAnchorEv(%"class.blink::ListedElement"*) unnamed_addr #1 align 2 {
  %2 = icmp eq %"class.blink::ListedElement"* %0, null
  %3 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %2, label %12, label %4

4:                                                ; preds = %1
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 3
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %11 = bitcast %"class.blink::Member.5"* %10 to %"class.blink::HTMLElement"*
  br label %25

12:                                               ; preds = %4, %1
  %13 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %13, i64 5
  %15 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::ListedElement"* %0) #14
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %19 = getelementptr inbounds i8, i8* %18, i64 80
  %20 = bitcast i8* %19 to %"class.blink::HTMLElement"**
  %21 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %20, align 8
  br label %25

22:                                               ; preds = %12
  %23 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %24 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %23, i64 0, i32 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %9, %17, %22
  %26 = phi %"class.blink::HTMLElement"* [ %21, %17 ], [ %24, %22 ], [ %11, %9 ]
  %27 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %26, i64 0, i32 0
  ret %"class.blink::Element"* %27
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ListedElement33ValidationAnchorOrHostIsFocusableEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.blink::ListedElement"* %0 to %"class.blink::Element"* (%"class.blink::ListedElement"*)***
  %3 = load %"class.blink::Element"* (%"class.blink::ListedElement"*)**, %"class.blink::Element"* (%"class.blink::ListedElement"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Element"* (%"class.blink::ListedElement"*)*, %"class.blink::Element"* (%"class.blink::ListedElement"*)** %3, i64 22
  %5 = load %"class.blink::Element"* (%"class.blink::ListedElement"*)*, %"class.blink::Element"* (%"class.blink::ListedElement"*)** %4, align 8
  %6 = tail call dereferenceable(104) %"class.blink::Element"* %5(%"class.blink::ListedElement"* %0) #14
  %7 = icmp eq %"class.blink::ListedElement"* %0, null
  %8 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %7, label %17, label %9

9:                                                ; preds = %1
  %10 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %8, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %10, i64 3
  %12 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %16 = bitcast %"class.blink::Member.5"* %15 to %"class.blink::HTMLElement"*
  br label %30

17:                                               ; preds = %9, %1
  %18 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %8, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %18, i64 5
  %20 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::ListedElement"* %0) #14
  br i1 %21, label %22, label %27

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %24 = getelementptr inbounds i8, i8* %23, i64 80
  %25 = bitcast i8* %24 to %"class.blink::HTMLElement"**
  %26 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %25, align 8
  br label %30

27:                                               ; preds = %17
  %28 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %29 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %28, i64 0, i32 0, i32 0, i32 0
  br label %30

30:                                               ; preds = %14, %22, %27
  %31 = phi %"class.blink::HTMLElement"* [ %26, %22 ], [ %29, %27 ], [ %16, %14 ]
  %32 = tail call zeroext i1 @_ZNK5blink7Element11IsFocusableEv(%"class.blink::Element"* %6) #14
  br i1 %32, label %38, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %31, i64 0, i32 0
  %35 = icmp eq %"class.blink::Element"* %6, %34
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = tail call zeroext i1 @_ZNK5blink7Element11IsFocusableEv(%"class.blink::Element"* %34) #14
  br label %38

38:                                               ; preds = %33, %30, %36
  %39 = phi i1 [ %37, %36 ], [ true, %30 ], [ false, %33 ]
  ret i1 %39
}

declare zeroext i1 @_ZNK5blink7Element11IsFocusableEv(%"class.blink::Element"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13ListedElement13checkValidityEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::ListedElement"*, %"class.blink::HeapVector"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::ListedElement"*, align 8
  %4 = icmp eq %"class.blink::ListedElement"* %0, null
  %5 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %4, label %14, label %6

6:                                                ; preds = %2
  %7 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %5, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %7, i64 3
  %9 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %13 = bitcast %"class.blink::Member.5"* %12 to %"class.blink::HTMLElement"*
  br label %27

14:                                               ; preds = %6, %2
  %15 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %5, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %15, i64 5
  %17 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::ListedElement"* %0) #14
  br i1 %18, label %19, label %24

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %21 = getelementptr inbounds i8, i8* %20, i64 80
  %22 = bitcast i8* %21 to %"class.blink::HTMLElement"**
  %23 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %22, align 8
  br label %27

24:                                               ; preds = %14
  %25 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %26 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %25, i64 0, i32 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %24, %19, %11
  %28 = phi %"class.blink::HTMLElement"* [ %23, %19 ], [ %26, %24 ], [ %13, %11 ]
  %29 = bitcast %"class.blink::HTMLElement"* %28 to i1 (%"class.blink::HTMLElement"*)***
  %30 = load i1 (%"class.blink::HTMLElement"*)**, i1 (%"class.blink::HTMLElement"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %30, i64 129
  %32 = load i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::HTMLElement"* %28) #14
  br i1 %33, label %34, label %111

34:                                               ; preds = %27
  %35 = tail call zeroext i1 @_ZN5blink13ListedElement14IsValidElementEv(%"class.blink::ListedElement"* %0) #14
  br i1 %35, label %111, label %36

36:                                               ; preds = %34
  br i1 %4, label %45, label %37

37:                                               ; preds = %36
  %38 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %5, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %38, i64 3
  %40 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %41, label %42, label %45

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %44 = bitcast %"class.blink::Member.5"* %43 to %"class.blink::HTMLElement"*
  br label %58

45:                                               ; preds = %37, %36
  %46 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %5, align 8
  %47 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %46, i64 5
  %48 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.blink::ListedElement"* %0) #14
  br i1 %49, label %50, label %55

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %52 = getelementptr inbounds i8, i8* %51, i64 80
  %53 = bitcast i8* %52 to %"class.blink::HTMLElement"**
  %54 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %53, align 8
  br label %58

55:                                               ; preds = %45
  %56 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %57 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %56, i64 0, i32 0, i32 0, i32 0
  br label %58

58:                                               ; preds = %42, %50, %55
  %59 = phi %"class.blink::HTMLElement"* [ %54, %50 ], [ %57, %55 ], [ %44, %42 ]
  %60 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %59, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %61 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %61, i64 0, i32 2, i32 0, i32 0
  %63 = load %"class.blink::Document"*, %"class.blink::Document"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %59, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names8kInvalidE, align 8
  %66 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 104) #14
  %67 = bitcast i8* %66 to %"class.blink::Event"*
  tail call void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"* %67, %"class.WTF::AtomicString"* dereferenceable(8) %65, i32 1, i32 0, i32 1) #14
  %68 = getelementptr inbounds i8, i8* %66, i64 -4
  %69 = bitcast i8* %68 to i16*
  %70 = load atomic i16, i16* %69 monotonic, align 2
  %71 = or i16 %70, 1
  store atomic i16 %71, i16* %69 release, align 2
  %72 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %64, %"class.blink::Event"* dereferenceable(104) %67) #14
  %73 = icmp eq i32 %72, 0
  %74 = icmp ne %"class.blink::HeapVector"* %1, null
  %75 = and i1 %74, %73
  br i1 %75, label %76, label %111

76:                                               ; preds = %58
  %77 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %59, i64 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = and i32 %78, 256
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %111, label %81

81:                                               ; preds = %76
  %82 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %60, align 8
  %83 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %82, i64 0, i32 2, i32 0, i32 0
  %84 = load %"class.blink::Document"*, %"class.blink::Document"** %83, align 8
  %85 = icmp eq %"class.blink::Document"* %63, %84
  br i1 %85, label %86, label %111

86:                                               ; preds = %81
  %87 = bitcast %"class.blink::ListedElement"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #14
  store %"class.blink::ListedElement"* %0, %"class.blink::ListedElement"** %3, align 8
  %88 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = icmp eq i32 %89, %91
  br i1 %92, label %108, label %93, !prof !6

93:                                               ; preds = %86
  %94 = ptrtoint %"class.blink::ListedElement"* %0 to i64
  %95 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %95, align 8
  %97 = zext i32 %89 to i64
  %98 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %96, i64 %97
  %99 = bitcast %"class.blink::Member.3"* %98 to i64*
  store atomic i64 %94, i64* %99 monotonic, align 8
  %100 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %93
  %103 = bitcast %"class.blink::ListedElement"* %0 to i8*
  %104 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %103) #14
  br label %105

105:                                              ; preds = %102, %93
  %106 = load i32, i32* %88, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %88, align 4
  br label %110

108:                                              ; preds = %86
  %109 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.36"* %109, %"class.blink::ListedElement"** nonnull dereferenceable(8) %3) #14
  br label %110

110:                                              ; preds = %105, %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #14
  br label %111

111:                                              ; preds = %76, %27, %58, %81, %110, %34
  %112 = phi i1 [ true, %34 ], [ false, %110 ], [ false, %81 ], [ false, %76 ], [ false, %58 ], [ true, %27 ]
  ret i1 %112
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13ListedElement21IsNotCandidateOrValidEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = icmp eq %"class.blink::ListedElement"* %0, null
  %3 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %2, label %12, label %4

4:                                                ; preds = %1
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 3
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %11 = bitcast %"class.blink::Member.5"* %10 to %"class.blink::HTMLElement"*
  br label %25

12:                                               ; preds = %4, %1
  %13 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %13, i64 5
  %15 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::ListedElement"* %0) #14
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %19 = getelementptr inbounds i8, i8* %18, i64 80
  %20 = bitcast i8* %19 to %"class.blink::HTMLElement"**
  %21 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %20, align 8
  br label %25

22:                                               ; preds = %12
  %23 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %24 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %23, i64 0, i32 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %9, %17, %22
  %26 = phi %"class.blink::HTMLElement"* [ %21, %17 ], [ %24, %22 ], [ %11, %9 ]
  %27 = bitcast %"class.blink::HTMLElement"* %26 to i1 (%"class.blink::HTMLElement"*)***
  %28 = load i1 (%"class.blink::HTMLElement"*)**, i1 (%"class.blink::HTMLElement"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %28, i64 129
  %30 = load i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::HTMLElement"* %26) #14
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = tail call zeroext i1 @_ZN5blink13ListedElement14IsValidElementEv(%"class.blink::ListedElement"* %0)
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i1 [ true, %25 ], [ %33, %32 ]
  ret i1 %35
}

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement21ShowValidationMessageEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.blink::ListedElement"* %0 to %"class.blink::Element"* (%"class.blink::ListedElement"*)***
  %3 = load %"class.blink::Element"* (%"class.blink::ListedElement"*)**, %"class.blink::Element"* (%"class.blink::ListedElement"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::Element"* (%"class.blink::ListedElement"*)*, %"class.blink::Element"* (%"class.blink::ListedElement"*)** %3, i64 22
  %5 = load %"class.blink::Element"* (%"class.blink::ListedElement"*)*, %"class.blink::Element"* (%"class.blink::ListedElement"*)** %4, align 8
  %6 = tail call dereferenceable(104) %"class.blink::Element"* %5(%"class.blink::ListedElement"* %0) #14
  tail call void @_ZN5blink7Element22scrollIntoViewIfNeededEb(%"class.blink::Element"* %6, i1 zeroext false) #14
  %7 = tail call zeroext i1 @_ZNK5blink7Element11IsFocusableEv(%"class.blink::Element"* %6) #14
  br i1 %7, label %35, label %8

8:                                                ; preds = %1
  %9 = icmp eq %"class.blink::ListedElement"* %0, null
  %10 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %9, label %19, label %11

11:                                               ; preds = %8
  %12 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %10, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %12, i64 3
  %14 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %18 = bitcast %"class.blink::Member.5"* %17 to %"class.blink::HTMLElement"*
  br label %32

19:                                               ; preds = %11, %8
  %20 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %10, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %20, i64 5
  %22 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::ListedElement"* %0) #14
  br i1 %23, label %24, label %29

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %26 = getelementptr inbounds i8, i8* %25, i64 80
  %27 = bitcast i8* %26 to %"class.blink::HTMLElement"**
  %28 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %27, align 8
  br label %32

29:                                               ; preds = %19
  %30 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %31 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %30, i64 0, i32 0, i32 0, i32 0
  br label %32

32:                                               ; preds = %16, %24, %29
  %33 = phi %"class.blink::HTMLElement"* [ %28, %24 ], [ %31, %29 ], [ %18, %16 ]
  %34 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %33, i64 0, i32 0
  br label %35

35:                                               ; preds = %1, %32
  %36 = phi %"class.blink::Element"* [ %34, %32 ], [ %6, %1 ]
  tail call void @_ZN5blink7Element5focusEv(%"class.blink::Element"* %36) #14
  tail call void @_ZN5blink13ListedElement30UpdateVisibleValidationMessageEv(%"class.blink::ListedElement"* %0)
  ret void
}

declare void @_ZN5blink7Element22scrollIntoViewIfNeededEb(%"class.blink::Element"*, i1 zeroext) local_unnamed_addr #5

declare void @_ZN5blink7Element5focusEv(%"class.blink::Element"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13ListedElement14reportValidityEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.blink::HeapVector", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = bitcast %"class.blink::HeapVector"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #14
  %7 = call zeroext i1 @_ZN5blink13ListedElement13checkValidityEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::ListedElement"* %0, %"class.blink::HeapVector"* nonnull %2)
  br i1 %7, label %130, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %130, label %12

12:                                               ; preds = %8
  %13 = icmp eq %"class.blink::ListedElement"* %0, null
  %14 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %13, label %23, label %15

15:                                               ; preds = %12
  %16 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %14, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %16, i64 3
  %18 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %17, align 8
  %19 = call zeroext i1 %18(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %22 = bitcast %"class.blink::Member.5"* %21 to %"class.blink::HTMLElement"*
  br label %36

23:                                               ; preds = %15, %12
  %24 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %14, align 8
  %25 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %24, i64 5
  %26 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %25, align 8
  %27 = call zeroext i1 %26(%"class.blink::ListedElement"* %0) #14
  br i1 %27, label %28, label %33

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %30 = getelementptr inbounds i8, i8* %29, i64 80
  %31 = bitcast i8* %30 to %"class.blink::HTMLElement"**
  %32 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %31, align 8
  br label %36

33:                                               ; preds = %23
  %34 = call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %35 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %34, i64 0, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %20, %28, %33
  %37 = phi %"class.blink::HTMLElement"* [ %32, %28 ], [ %35, %33 ], [ %22, %20 ]
  %38 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %37, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %39 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %39, i64 0, i32 2, i32 0, i32 0
  %41 = load %"class.blink::Document"*, %"class.blink::Document"** %40, align 8
  call void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"* %41, i32 10) #14
  %42 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %37, i64 0, i32 0
  %43 = call zeroext i1 @_ZNK5blink7Element11IsFocusableEv(%"class.blink::Element"* %42) #14
  br i1 %43, label %44, label %45

44:                                               ; preds = %36
  call void @_ZN5blink13ListedElement21ShowValidationMessageEv(%"class.blink::ListedElement"* %0)
  br label %130

45:                                               ; preds = %36
  %46 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %38, align 8
  %47 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %46, i64 0, i32 2, i32 0, i32 0
  %48 = load %"class.blink::Document"*, %"class.blink::Document"** %47, align 8
  %49 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %48) #14
  %50 = icmp eq %"class.blink::LocalFrame"* %49, null
  br i1 %50, label %130, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #14
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %53, align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i64 59) #14
  %54 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #14
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %56 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8** %57, align 8
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 5, i32* %58, align 8
  %59 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #14
  %60 = bitcast %"class.blink::ListedElement"* %0 to %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)***
  %61 = load %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)**, %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)*** %60, align 8
  %62 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)** %61, i64 7
  %63 = load %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)*, %"class.WTF::AtomicString"* (%"class.blink::ListedElement"*)** %62, align 8
  %64 = call dereferenceable(8) %"class.WTF::AtomicString"* %63(%"class.blink::ListedElement"* %0) #14
  %65 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %72

68:                                               ; preds = %51
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %69, align 8
  %70 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %71 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %70, i64* %71, align 8
  br label %79

72:                                               ; preds = %51
  %73 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %73, align 8
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 1
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %78 = bitcast i8** %77 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %78, align 8
  br label %79

79:                                               ; preds = %68, %72
  %80 = phi i32 [ %75, %72 ], [ 0, %68 ]
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %80, i32* %81, align 8
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %103, label %84

84:                                               ; preds = %79
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceERKNS_10StringViewES3_(%"class.WTF::StringImpl"* nonnull %82, %"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #14
  %86 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %87 = bitcast %"class.WTF::String"* %3 to i64*
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  store i64 %86, i64* %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #14
  br label %103

103:                                              ; preds = %79, %84, %99, %102
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #14
  %104 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %38, align 8
  %105 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %104, i64 0, i32 2, i32 0, i32 0
  %106 = load %"class.blink::Document"*, %"class.blink::Document"** %105, align 8
  %107 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #14
  %108 = bitcast i8* %107 to %"class.blink::ConsoleMessage"*
  %109 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #14
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %108, i32 6, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::SourceLocation"* %109) #14
  %110 = getelementptr inbounds i8, i8* %107, i64 -4
  %111 = bitcast i8* %110 to i16*
  %112 = load atomic i16, i16* %111 monotonic, align 2
  %113 = or i16 %112, 1
  store atomic i16 %113, i16* %111 release, align 2
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %106, %"class.blink::ConsoleMessage"* %108, i1 zeroext false) #14
  %114 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %115 = icmp eq %"class.WTF::StringImpl"* %114, null
  br i1 %115, label %129, label %116

116:                                              ; preds = %103
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = and i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %114, i64 0, i32 0
  %122 = load i32, i32* %121, align 4
  br i1 %120, label %123, label %125

123:                                              ; preds = %116
  %124 = add i32 %122, -1
  store i32 %124, i32* %121, align 4
  br label %125

125:                                              ; preds = %123, %116
  %126 = phi i32 [ %124, %123 ], [ %122, %116 ]
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %129

128:                                              ; preds = %125
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %114) #14
  br label %129

129:                                              ; preds = %103, %125, %128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #14
  br label %130

130:                                              ; preds = %44, %45, %129, %1, %8
  %131 = phi i1 [ false, %8 ], [ true, %1 ], [ false, %129 ], [ false, %45 ], [ false, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret i1 %131
}

declare void @_ZN5blink8Document20UpdateStyleAndLayoutENS_20DocumentUpdateReasonE(%"class.blink::Document"*, i32) local_unnamed_addr #5

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #5

declare void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"*, %"class.blink::ConsoleMessage"*, i1 zeroext) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13ListedElement14IsValidElementEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 32
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %78, label %6

6:                                                ; preds = %1
  %7 = and i8 %3, 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 10
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %9, %6
  tail call void @_ZN5blink13ListedElement23UpdateWillValidateCacheEv(%"class.blink::ListedElement"* %0) #14
  %14 = load i8, i8* %2, align 8
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi i8 [ %3, %9 ], [ %14, %13 ]
  %17 = and i8 %16, 8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %73, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  %21 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %21, i64 17
  %23 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::ListedElement"* %0) #14
  br i1 %24, label %73, label %25

25:                                               ; preds = %19
  %26 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %20, align 8
  %27 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %26, i64 14
  %28 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.blink::ListedElement"* %0) #14
  br i1 %29, label %73, label %30

30:                                               ; preds = %25
  %31 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %20, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %31, i64 13
  %33 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::ListedElement"* %0) #14
  br i1 %34, label %73, label %35

35:                                               ; preds = %30
  %36 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %20, align 8
  %37 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %36, i64 12
  %38 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %37, align 8
  %39 = tail call zeroext i1 %38(%"class.blink::ListedElement"* %0) #14
  br i1 %39, label %73, label %40

40:                                               ; preds = %35
  %41 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %20, align 8
  %42 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %41, i64 15
  %43 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %42, align 8
  %44 = tail call zeroext i1 %43(%"class.blink::ListedElement"* %0) #14
  br i1 %44, label %73, label %45

45:                                               ; preds = %40
  %46 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %20, align 8
  %47 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %46, i64 16
  %48 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.blink::ListedElement"* %0) #14
  br i1 %49, label %73, label %50

50:                                               ; preds = %45
  %51 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %20, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %51, i64 11
  %53 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::ListedElement"* %0) #14
  br i1 %54, label %73, label %55

55:                                               ; preds = %50
  %56 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %20, align 8
  %57 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %56, i64 18
  %58 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %57, align 8
  %59 = tail call zeroext i1 %58(%"class.blink::ListedElement"* %0) #14
  br i1 %59, label %73, label %60

60:                                               ; preds = %55
  %61 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %20, align 8
  %62 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %61, i64 10
  %63 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %62, align 8
  %64 = tail call zeroext i1 %63(%"class.blink::ListedElement"* %0) #14
  br i1 %64, label %73, label %65

65:                                               ; preds = %60
  %66 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %20, align 8
  %67 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %66, i64 9
  %68 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %67, align 8
  %69 = tail call zeroext i1 %68(%"class.blink::ListedElement"* %0) #14
  %70 = xor i1 %69, true
  %71 = zext i1 %70 to i8
  %72 = shl nuw nsw i8 %71, 4
  br label %73

73:                                               ; preds = %65, %60, %55, %50, %45, %40, %35, %30, %25, %19, %15
  %74 = phi i8 [ 16, %15 ], [ 0, %60 ], [ 0, %55 ], [ 0, %50 ], [ 0, %45 ], [ 0, %40 ], [ 0, %35 ], [ 0, %30 ], [ 0, %25 ], [ 0, %19 ], [ %72, %65 ]
  %75 = load i8, i8* %2, align 8
  %76 = and i8 %75, -49
  %77 = or i8 %76, %74
  store i8 %77, i8* %2, align 8
  br label %78

78:                                               ; preds = %1, %73
  %79 = phi i8 [ %3, %1 ], [ %77, %73 ]
  %80 = and i8 %79, 16
  %81 = icmp ne i8 %80, 0
  ret i1 %81
}

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #5

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink8Document13GetTaskRunnerENS_8TaskTypeE(%"class.blink::Document"*, i8 zeroext) local_unnamed_addr #5

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement24DisabledAttributeChangedEv(%"class.blink::ListedElement"*) unnamed_addr #1 align 2 {
  tail call void @_ZN5blink13ListedElement23UpdateWillValidateCacheEv(%"class.blink::ListedElement"* %0)
  %2 = icmp eq %"class.blink::ListedElement"* %0, null
  %3 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %2, label %12, label %4

4:                                                ; preds = %1
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 3
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %11 = bitcast %"class.blink::Member.5"* %10 to %"class.blink::HTMLElement"*
  br label %25

12:                                               ; preds = %4, %1
  %13 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %13, i64 5
  %15 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::ListedElement"* %0) #14
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %19 = getelementptr inbounds i8, i8* %18, i64 80
  %20 = bitcast i8* %19 to %"class.blink::HTMLElement"**
  %21 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %20, align 8
  br label %25

22:                                               ; preds = %12
  %23 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %24 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %23, i64 0, i32 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %9, %17, %22
  %26 = phi %"class.blink::HTMLElement"* [ %21, %17 ], [ %24, %22 ], [ %11, %9 ]
  %27 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %26, i64 0, i32 0
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %27, i32 36) #14
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* %27, i32 33) #14
  %28 = bitcast %"class.blink::ListedElement"* %0 to void (%"class.blink::ListedElement"*)***
  %29 = load void (%"class.blink::ListedElement"*)**, void (%"class.blink::ListedElement"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %29, i64 24
  %31 = load void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %30, align 8
  tail call void %31(%"class.blink::ListedElement"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13ListedElement27UpdateAncestorDisabledStateEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %113, label %5

5:                                                ; preds = %1
  store i8 0, i8* %2, align 8
  %6 = icmp eq %"class.blink::ListedElement"* %0, null
  %7 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %6, label %16, label %8

8:                                                ; preds = %5
  %9 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %7, align 8
  %10 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %9, i64 3
  %11 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %12, label %13, label %16

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %15 = bitcast %"class.blink::Member.5"* %14 to %"class.blink::HTMLElement"*
  br label %29

16:                                               ; preds = %8, %5
  %17 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %7, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %17, i64 5
  %19 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::ListedElement"* %0) #14
  br i1 %20, label %21, label %26

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %23 = getelementptr inbounds i8, i8* %22, i64 80
  %24 = bitcast i8* %23 to %"class.blink::HTMLElement"**
  %25 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %24, align 8
  br label %29

26:                                               ; preds = %16
  %27 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %28 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %27, i64 0, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %13, %21, %26
  %30 = phi %"class.blink::HTMLElement"* [ %25, %21 ], [ %28, %26 ], [ %15, %13 ]
  %31 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %31) #14
  %33 = icmp eq %"class.blink::ContainerNode"* %32, null
  br i1 %33, label %109, label %34

34:                                               ; preds = %29, %40
  %35 = phi %"class.blink::ContainerNode"* [ %42, %40 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %35, i64 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 48
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %35, i64 0, i32 0
  %42 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %41) #14
  %43 = icmp eq %"class.blink::ContainerNode"* %42, null
  br i1 %43, label %109, label %34

44:                                               ; preds = %34
  %45 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kLegendTagE, align 8
  %46 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names12kFieldsetTagE, align 8
  %48 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %47, i64 0, i32 0, i32 0, i32 0
  br label %49

49:                                               ; preds = %95, %44
  %50 = phi %"class.blink::ContainerNode"* [ %35, %44 ], [ %96, %95 ]
  %51 = phi %"class.blink::ContainerNode"* [ null, %44 ], [ %92, %95 ]
  %52 = bitcast %"class.blink::ContainerNode"* %50 to %"class.blink::HTMLElement"*
  %53 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %50, i64 0, i32 0
  %54 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %50, i64 0, i32 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, 48
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %91

58:                                               ; preds = %49
  %59 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %46, align 8
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 1, i32 2
  %61 = bitcast %"class.blink::Member.9"* %60 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %59, i64 0, i32 3, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %64, %66
  br i1 %67, label %91, label %68

68:                                               ; preds = %58
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %48, align 8
  %70 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 1, i32 2
  %71 = bitcast %"class.blink::Member.9"* %70 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %72 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %72, i64 0, i32 3, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %69, i64 0, i32 3, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %74, %76
  br i1 %77, label %78, label %91

78:                                               ; preds = %68
  store i8 1, i8* %2, align 8
  %79 = bitcast %"class.blink::ContainerNode"* %50 to i1 (%"class.blink::HTMLElement"*)***
  %80 = load i1 (%"class.blink::HTMLElement"*)**, i1 (%"class.blink::HTMLElement"*)*** %79, align 8
  %81 = getelementptr inbounds i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %80, i64 138
  %82 = load i1 (%"class.blink::HTMLElement"*)*, i1 (%"class.blink::HTMLElement"*)** %81, align 8
  %83 = tail call zeroext i1 %82(%"class.blink::HTMLElement"* nonnull %52) #14
  br i1 %83, label %84, label %91

84:                                               ; preds = %78
  %85 = icmp eq %"class.blink::ContainerNode"* %51, null
  %86 = bitcast %"class.blink::ContainerNode"* %50 to %"class.blink::HTMLFieldSetElement"*
  br i1 %85, label %107, label %87

87:                                               ; preds = %84
  %88 = tail call %"class.blink::HTMLLegendElement"* @_ZNK5blink19HTMLFieldSetElement6LegendEv(%"class.blink::HTMLFieldSetElement"* nonnull %86) #14
  %89 = getelementptr inbounds %"class.blink::HTMLLegendElement", %"class.blink::HTMLLegendElement"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = icmp eq %"class.blink::ContainerNode"* %51, %89
  br i1 %90, label %91, label %105

91:                                               ; preds = %49, %58, %87, %78, %68
  %92 = phi %"class.blink::ContainerNode"* [ %51, %78 ], [ %51, %68 ], [ %51, %87 ], [ %50, %58 ], [ %51, %49 ]
  %93 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %53) #14
  %94 = icmp eq %"class.blink::ContainerNode"* %93, null
  br i1 %94, label %109, label %95

95:                                               ; preds = %91, %101
  %96 = phi %"class.blink::ContainerNode"* [ %103, %101 ], [ %93, %91 ]
  %97 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %96, i64 0, i32 0, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = and i32 %98, 48
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %49, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %96, i64 0, i32 0
  %103 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %102) #14
  %104 = icmp eq %"class.blink::ContainerNode"* %103, null
  br i1 %104, label %109, label %95

105:                                              ; preds = %87
  %106 = bitcast %"class.blink::ContainerNode"* %50 to %"class.blink::HTMLFieldSetElement"*
  br label %109

107:                                              ; preds = %84
  %108 = bitcast %"class.blink::ContainerNode"* %50 to %"class.blink::HTMLFieldSetElement"*
  br label %109

109:                                              ; preds = %40, %107, %91, %101, %105, %29
  %110 = phi %"class.blink::HTMLFieldSetElement"* [ null, %29 ], [ %106, %105 ], [ null, %101 ], [ %108, %107 ], [ null, %91 ], [ null, %40 ]
  %111 = icmp eq %"class.blink::HTMLFieldSetElement"* %110, null
  %112 = select i1 %111, i32 1, i32 2
  br label %113

113:                                              ; preds = %1, %109
  %114 = phi i32 [ %112, %109 ], [ 1, %1 ]
  %115 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 9
  store i32 %114, i32* %115, align 4
  ret void
}

declare %"class.blink::HTMLLegendElement"* @_ZNK5blink19HTMLFieldSetElement6LegendEv(%"class.blink::HTMLFieldSetElement"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement31AncestorDisabledStateWasChangedEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 9
  store i32 0, i32* %2, align 4
  %3 = bitcast %"class.blink::ListedElement"* %0 to void (%"class.blink::ListedElement"*)***
  %4 = load void (%"class.blink::ListedElement"*)**, void (%"class.blink::ListedElement"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %4, i64 23
  %6 = load void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %5, align 8
  tail call void %6(%"class.blink::ListedElement"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ListedElement18IsActuallyDisabledEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = icmp eq %"class.blink::ListedElement"* %0, null
  %3 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %2, label %12, label %4

4:                                                ; preds = %1
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 3
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %11 = bitcast %"class.blink::Member.5"* %10 to %"class.blink::HTMLElement"*
  br label %25

12:                                               ; preds = %4, %1
  %13 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %13, i64 5
  %15 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::ListedElement"* %0) #14
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %19 = getelementptr inbounds i8, i8* %18, i64 80
  %20 = bitcast i8* %19 to %"class.blink::HTMLElement"**
  %21 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %20, align 8
  br label %25

22:                                               ; preds = %12
  %23 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %24 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %23, i64 0, i32 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %9, %17, %22
  %26 = phi %"class.blink::HTMLElement"* [ %21, %17 ], [ %24, %22 ], [ %11, %9 ]
  %27 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kDisabledAttrE, align 8
  %28 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %26, i64 0, i32 0, i32 3, i32 0, i32 0
  %29 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %28, align 8
  %30 = icmp eq %"class.blink::ElementData"* %29, null
  br i1 %30, label %81, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %29, i64 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.blink::ElementData"* %29 to %"class.blink::UniqueElementData"*
  %38 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %29, i64 1, i32 1
  %39 = bitcast %"class.blink::Member.24"* %38 to %"class.blink::Attribute"**
  %40 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %37, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  br label %48

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %29, i64 1
  %45 = bitcast %"class.blink::ElementData"* %44 to %"class.blink::Attribute"*
  %46 = lshr i32 %33, 1
  %47 = and i32 %46, 268435455
  br label %48

48:                                               ; preds = %43, %36
  %49 = phi %"class.blink::Attribute"* [ %45, %43 ], [ %40, %36 ]
  %50 = phi i32 [ %47, %43 ], [ %42, %36 ]
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %49, i64 %51
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %81, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %27, i64 0, i32 0, i32 0
  %56 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %56, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %59

59:                                               ; preds = %75, %54
  %60 = phi %"class.blink::Attribute"* [ %49, %54 ], [ %76, %75 ]
  %61 = phi i32 [ 0, %54 ], [ %77, %75 ]
  %62 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %62, align 8
  %64 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %63, %56
  br i1 %64, label %79, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %63, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %67, %68
  br i1 %69, label %70, label %75

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %63, i64 0, i32 4, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %72, %73
  br i1 %74, label %79, label %75

75:                                               ; preds = %70, %65
  %76 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %60, i64 1
  %77 = add i32 %61, 1
  %78 = icmp eq %"class.blink::Attribute"* %76, %52
  br i1 %78, label %81, label %59

79:                                               ; preds = %59, %70
  %80 = icmp eq i32 %61, -1
  br i1 %80, label %81, label %90

81:                                               ; preds = %75, %79, %48, %25
  %82 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 0, i32 9
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %81
  tail call void @_ZNK5blink13ListedElement27UpdateAncestorDisabledStateEv(%"class.blink::ListedElement"* %0)
  %86 = load i32, i32* %82, align 4
  br label %87

87:                                               ; preds = %85, %81
  %88 = phi i32 [ %86, %85 ], [ %83, %81 ]
  %89 = icmp eq i32 %88, 2
  br label %90

90:                                               ; preds = %79, %87
  %91 = phi i1 [ %89, %87 ], [ true, %79 ]
  ret i1 %91
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ListedElement25ClassSupportsStateRestoreEv(%"class.blink::ListedElement"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ListedElement36ShouldSaveAndRestoreFormControlStateEv(%"class.blink::ListedElement"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13ListedElement20SaveFormControlStateEv(%"class.blink::FormControlState"* noalias nocapture sret, %"class.blink::ListedElement"* nocapture readnone) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 0
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.blink::FormControlState", %"class.blink::FormControlState"* %0, i64 0, i32 1
  %5 = bitcast %"class.WTF::Vector.717"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #14
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink13ListedElement23RestoreFormControlStateERKNS_16FormControlStateE(%"class.blink::ListedElement"* nocapture, %"class.blink::FormControlState"* nocapture dereferenceable(24)) unnamed_addr #7 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement22NotifyFormStateChangedEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = icmp eq %"class.blink::ListedElement"* %0, null
  %3 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %2, label %12, label %4

4:                                                ; preds = %1
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 3
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %11 = bitcast %"class.blink::Member.5"* %10 to %"class.blink::HTMLElement"*
  br label %25

12:                                               ; preds = %4, %1
  %13 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %13, i64 5
  %15 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::ListedElement"* %0) #14
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %19 = getelementptr inbounds i8, i8* %18, i64 80
  %20 = bitcast i8* %19 to %"class.blink::HTMLElement"**
  %21 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %20, align 8
  br label %25

22:                                               ; preds = %12
  %23 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %24 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %23, i64 0, i32 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %9, %17, %22
  %26 = phi %"class.blink::HTMLElement"* [ %21, %17 ], [ %24, %22 ], [ %11, %9 ]
  %27 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %26, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %28, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %30, i64 0, i32 5, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = add i32 %32, -2
  %34 = icmp ult i32 %33, 18
  br i1 %34, label %35, label %42

35:                                               ; preds = %25
  %36 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %30) #14
  %37 = tail call %"class.blink::LocalFrameClient"* @_ZNK5blink10LocalFrame6ClientEv(%"class.blink::LocalFrame"* %36) #14
  %38 = bitcast %"class.blink::LocalFrameClient"* %37 to void (%"class.blink::LocalFrameClient"*)***
  %39 = load void (%"class.blink::LocalFrameClient"*)**, void (%"class.blink::LocalFrameClient"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::LocalFrameClient"*)*, void (%"class.blink::LocalFrameClient"*)** %39, i64 60
  %41 = load void (%"class.blink::LocalFrameClient"*)*, void (%"class.blink::LocalFrameClient"*)** %40, align 8
  tail call void %41(%"class.blink::LocalFrameClient"* %37) #14
  br label %42

42:                                               ; preds = %25, %35
  ret void
}

declare %"class.blink::LocalFrameClient"* @_ZNK5blink10LocalFrame6ClientEv(%"class.blink::LocalFrame"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement19TakeStateAndRestoreEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  %3 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %3, i64 25
  %5 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %4, align 8
  %6 = tail call zeroext i1 %5(%"class.blink::ListedElement"* %0) #14
  br i1 %6, label %7, label %37

7:                                                ; preds = %1
  %8 = icmp eq %"class.blink::ListedElement"* %0, null
  br i1 %8, label %17, label %9

9:                                                ; preds = %7
  %10 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %2, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %10, i64 3
  %12 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %16 = bitcast %"class.blink::Member.5"* %15 to %"class.blink::HTMLElement"*
  br label %30

17:                                               ; preds = %9, %7
  %18 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %2, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %18, i64 5
  %20 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::ListedElement"* %0) #14
  br i1 %21, label %22, label %27

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %24 = getelementptr inbounds i8, i8* %23, i64 80
  %25 = bitcast i8* %24 to %"class.blink::HTMLElement"**
  %26 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %25, align 8
  br label %30

27:                                               ; preds = %17
  %28 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %29 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %28, i64 0, i32 0, i32 0, i32 0
  br label %30

30:                                               ; preds = %14, %22, %27
  %31 = phi %"class.blink::HTMLElement"* [ %26, %22 ], [ %29, %27 ], [ %16, %14 ]
  %32 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %31, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %33, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::Document"*, %"class.blink::Document"** %34, align 8
  %36 = tail call dereferenceable(56) %"class.blink::FormController"* @_ZN5blink8Document17GetFormControllerEv(%"class.blink::Document"* %35) #14
  tail call void @_ZN5blink14FormController22RestoreControlStateForERNS_13ListedElementE(%"class.blink::FormController"* %36, %"class.blink::ListedElement"* dereferenceable(64) %0) #14
  br label %37

37:                                               ; preds = %30, %1
  ret void
}

declare void @_ZN5blink14FormController22RestoreControlStateForERNS_13ListedElementE(%"class.blink::FormController"*, %"class.blink::ListedElement"* dereferenceable(64)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13ListedElement26FormAttributeTargetChangedEv(%"class.blink::ListedElement"*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN5blink13ListedElement14ResetFormOwnerEv(%"class.blink::ListedElement"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink13ListedElement7GetNameEv(%"class.blink::ListedElement"*) unnamed_addr #1 align 2 {
  %2 = icmp eq %"class.blink::ListedElement"* %0, null
  %3 = bitcast %"class.blink::ListedElement"* %0 to i1 (%"class.blink::ListedElement"*)***
  br i1 %2, label %12, label %4

4:                                                ; preds = %1
  %5 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %5, i64 3
  %7 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::ListedElement"* nonnull %0) #14
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -2, i32 4
  %11 = bitcast %"class.blink::Member.5"* %10 to %"class.blink::HTMLElement"*
  br label %25

12:                                               ; preds = %4, %1
  %13 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %3, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %13, i64 5
  %15 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::ListedElement"* %0) #14
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %0, i64 -1, i32 7
  %19 = getelementptr inbounds i8, i8* %18, i64 80
  %20 = bitcast i8* %19 to %"class.blink::HTMLElement"**
  %21 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %20, align 8
  br label %25

22:                                               ; preds = %12
  %23 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %0) #14
  %24 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %23, i64 0, i32 0, i32 0, i32 0
  br label %25

25:                                               ; preds = %9, %17, %22
  %26 = phi %"class.blink::HTMLElement"* [ %21, %17 ], [ %24, %22 ], [ %11, %9 ]
  %27 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %26, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 1048576
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %88, label %31

31:                                               ; preds = %25
  %32 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kNameAttrE, align 8
  %33 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %26, i64 0, i32 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %33, align 8
  %35 = icmp eq %"class.blink::ElementData"* %34, null
  br i1 %35, label %86, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %34, i64 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.blink::ElementData"* %34 to %"class.blink::UniqueElementData"*
  %43 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %34, i64 1, i32 1
  %44 = bitcast %"class.blink::Member.24"* %43 to %"class.blink::Attribute"**
  %45 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %42, i64 0, i32 2, i32 0, i32 0, i32 2
  %47 = load i32, i32* %46, align 4
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %34, i64 1
  %50 = bitcast %"class.blink::ElementData"* %49 to %"class.blink::Attribute"*
  %51 = lshr i32 %38, 1
  %52 = and i32 %51, 268435455
  br label %53

53:                                               ; preds = %48, %41
  %54 = phi %"class.blink::Attribute"* [ %50, %48 ], [ %45, %41 ]
  %55 = phi i32 [ %52, %48 ], [ %47, %41 ]
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %54, i64 %56
  %58 = icmp eq i32 %55, 0
  br i1 %58, label %86, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %32, i64 0, i32 0, i32 0
  %61 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 3, i32 0, i32 0, i32 0
  %63 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %61, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %64

64:                                               ; preds = %79, %59
  %65 = phi %"class.blink::Attribute"* [ %54, %59 ], [ %80, %79 ]
  %66 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %66, align 8
  %68 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %67, %61
  br i1 %68, label %82, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 3, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %71, %72
  br i1 %73, label %74, label %79

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 4, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %76, %77
  br i1 %78, label %82, label %79

79:                                               ; preds = %74, %69
  %80 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %65, i64 1
  %81 = icmp eq %"class.blink::Attribute"* %80, %57
  br i1 %81, label %86, label %64

82:                                               ; preds = %74, %64
  %83 = icmp eq %"class.blink::Attribute"* %65, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %65, i64 0, i32 1
  br label %90

86:                                               ; preds = %79, %82, %53, %31
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %90

88:                                               ; preds = %25
  %89 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %90

90:                                               ; preds = %84, %86, %88
  %91 = phi %"class.WTF::AtomicString"* [ %89, %88 ], [ %87, %86 ], [ %85, %84 ]
  %92 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  %95 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF12g_empty_atomE, align 8
  %96 = select i1 %94, %"class.WTF::AtomicString"* %95, %"class.WTF::AtomicString"* %91
  ret %"class.WTF::AtomicString"* %96
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ListedElement29IsFormControlElementWithStateEv(%"class.blink::ListedElement"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink13ListedElement18IsElementInternalsEv(%"class.blink::ListedElement"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ListedElement"* @_ZN5blink13ListedElement4FromERNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 48
  %5 = icmp ne i32 %4, 0
  %6 = bitcast %"class.blink::Element"* %0 to %"class.blink::HTMLElement"*
  %7 = icmp eq %"class.blink::Element"* %0, null
  %8 = or i1 %7, %5
  br i1 %8, label %53, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.blink::Element"* %0 to i1 (%"class.blink::Element"*)***
  %11 = load i1 (%"class.blink::Element"*)**, i1 (%"class.blink::Element"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %11, i64 124
  %13 = load i1 (%"class.blink::Element"*)*, i1 (%"class.blink::Element"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::Element"* nonnull %0) #14
  %15 = bitcast %"class.blink::Element"* %0 to %"class.blink::HTMLFormControlElement"*
  %16 = select i1 %14, %"class.blink::HTMLFormControlElement"* %15, %"class.blink::HTMLFormControlElement"* null
  %17 = icmp eq %"class.blink::HTMLFormControlElement"* %16, null
  %18 = getelementptr inbounds %"class.blink::HTMLFormControlElement", %"class.blink::HTMLFormControlElement"* %16, i64 0, i32 1
  %19 = bitcast %"class.blink::ListedElement.base"* %18 to %"class.blink::ListedElement"*
  br i1 %17, label %20, label %53

20:                                               ; preds = %9
  %21 = tail call zeroext i1 @_ZNK5blink11HTMLElement29IsFormAssociatedCustomElementEv(%"class.blink::HTMLElement"* nonnull %6) #14
  br i1 %21, label %22, label %28

22:                                               ; preds = %20
  %23 = tail call dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"* nonnull %0) #14
  %24 = icmp eq %"class.blink::ElementInternals"* %23, null
  %25 = getelementptr inbounds %"class.blink::ElementInternals", %"class.blink::ElementInternals"* %23, i64 0, i32 1
  %26 = bitcast %"class.blink::ListedElement.base"* %25 to %"class.blink::ListedElement"*
  %27 = select i1 %24, %"class.blink::ListedElement"* null, %"class.blink::ListedElement"* %26
  br label %53

28:                                               ; preds = %20
  %29 = load i32, i32* %2, align 8
  %30 = and i32 %29, 48
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %47

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0
  %34 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names10kObjectTagE, align 8
  %35 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 1, i32 2
  %38 = bitcast %"class.blink::Member.9"* %37 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %39 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %39, i64 0, i32 3, i32 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %36, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %41, %43
  %45 = bitcast %"class.blink::Element"* %0 to %"class.blink::HTMLObjectElement"*
  %46 = select i1 %44, %"class.blink::HTMLObjectElement"* %45, %"class.blink::HTMLObjectElement"* null
  br label %47

47:                                               ; preds = %28, %32
  %48 = phi %"class.blink::HTMLObjectElement"* [ %46, %32 ], [ null, %28 ]
  %49 = icmp eq %"class.blink::HTMLObjectElement"* %48, null
  %50 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %48, i64 0, i32 2
  %51 = bitcast %"class.blink::ListedElement.base"* %50 to %"class.blink::ListedElement"*
  %52 = select i1 %49, %"class.blink::ListedElement"* null, %"class.blink::ListedElement"* %51
  ret %"class.blink::ListedElement"* %52

53:                                               ; preds = %1, %9, %22
  %54 = phi %"class.blink::ListedElement"* [ %27, %22 ], [ %19, %9 ], [ null, %1 ]
  ret %"class.blink::ListedElement"* %54
}

declare zeroext i1 @_ZNK5blink11HTMLElement29IsFormAssociatedCustomElementEv(%"class.blink::HTMLElement"*) local_unnamed_addr #5

declare dereferenceable(184) %"class.blink::ElementInternals"* @_ZN5blink7Element22EnsureElementInternalsEv(%"class.blink::Element"*) local_unnamed_addr #5

declare dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27FormAttributeTargetObserverC2ERKN3WTF12AtomicStringEPNS_13ListedElementE(%"class.blink::FormAttributeTargetObserver"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::ListedElement"*) unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::FormAttributeTargetObserver", %"class.blink::FormAttributeTargetObserver"* %0, i64 0, i32 0
  %5 = icmp eq %"class.blink::ListedElement"* %2, null
  %6 = bitcast %"class.blink::ListedElement"* %2 to i1 (%"class.blink::ListedElement"*)***
  br i1 %5, label %15, label %7

7:                                                ; preds = %3
  %8 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %6, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %8, i64 3
  %10 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::ListedElement"* nonnull %2) #14
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %2, i64 -2, i32 4
  %14 = bitcast %"class.blink::Member.5"* %13 to %"class.blink::HTMLElement"*
  br label %28

15:                                               ; preds = %7, %3
  %16 = load i1 (%"class.blink::ListedElement"*)**, i1 (%"class.blink::ListedElement"*)*** %6, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %16, i64 5
  %18 = load i1 (%"class.blink::ListedElement"*)*, i1 (%"class.blink::ListedElement"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::ListedElement"* %2) #14
  br i1 %19, label %20, label %25

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::ListedElement", %"class.blink::ListedElement"* %2, i64 -1, i32 7
  %22 = getelementptr inbounds i8, i8* %21, i64 80
  %23 = bitcast i8* %22 to %"class.blink::HTMLElement"**
  %24 = load %"class.blink::HTMLElement"*, %"class.blink::HTMLElement"** %23, align 8
  br label %28

25:                                               ; preds = %15
  %26 = tail call dereferenceable(480) %"class.blink::HTMLObjectElement"* @_ZN5blink36ToHTMLObjectElementFromListedElementERKNS_13ListedElementE(%"class.blink::ListedElement"* dereferenceable(64) %2) #14
  %27 = getelementptr inbounds %"class.blink::HTMLObjectElement", %"class.blink::HTMLObjectElement"* %26, i64 0, i32 0, i32 0, i32 0
  br label %28

28:                                               ; preds = %12, %20, %25
  %29 = phi %"class.blink::HTMLElement"* [ %24, %20 ], [ %27, %25 ], [ %14, %12 ]
  %30 = getelementptr inbounds %"class.blink::HTMLElement", %"class.blink::HTMLElement"* %29, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %31 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %31, i64 0, i32 6, i32 0, i32 0
  %33 = load %"class.blink::IdTargetObserverRegistry"*, %"class.blink::IdTargetObserverRegistry"** %32, align 8
  tail call void @_ZN5blink16IdTargetObserverC2ERNS_24IdTargetObserverRegistryERKN3WTF12AtomicStringE(%"class.blink::IdTargetObserver"* %4, %"class.blink::IdTargetObserverRegistry"* %33, %"class.WTF::AtomicString"* dereferenceable(8) %1) #14
  %34 = getelementptr inbounds %"class.blink::FormAttributeTargetObserver", %"class.blink::FormAttributeTargetObserver"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink27FormAttributeTargetObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds %"class.blink::FormAttributeTargetObserver", %"class.blink::FormAttributeTargetObserver"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::ListedElement"* %2, %"class.blink::ListedElement"** %35, align 8
  ret void
}

declare void @_ZN5blink16IdTargetObserverC2ERNS_24IdTargetObserverRegistryERKN3WTF12AtomicStringE(%"class.blink::IdTargetObserver"*, %"class.blink::IdTargetObserverRegistry"*, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink27FormAttributeTargetObserver5TraceEPNS_7VisitorE(%"class.blink::FormAttributeTargetObserver"*, %"class.blink::Visitor"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::FormAttributeTargetObserver", %"class.blink::FormAttributeTargetObserver"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.3"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #14, !range !14
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68) #14
  br label %73

73:                                               ; preds = %2, %54
  %74 = getelementptr inbounds %"class.blink::FormAttributeTargetObserver", %"class.blink::FormAttributeTargetObserver"* %0, i64 0, i32 0
  tail call void @_ZNK5blink16IdTargetObserver5TraceEPNS_7VisitorE(%"class.blink::IdTargetObserver"* %74, %"class.blink::Visitor"* %1) #14
  ret void
}

declare void @_ZNK5blink16IdTargetObserver5TraceEPNS_7VisitorE(%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink27FormAttributeTargetObserver15IdTargetChangedEv(%"class.blink::FormAttributeTargetObserver"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::FormAttributeTargetObserver", %"class.blink::FormAttributeTargetObserver"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %2, align 8
  tail call void @_ZN5blink13ListedElement14ResetFormOwnerEv(%"class.blink::ListedElement"* %3) #14
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13ListedElement16AppendToFormDataERNS_8FormDataE(%"class.blink::ListedElement"*, %"class.blink::FormData"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13ListedElement27DisabledStateMightBeChangedEv(%"class.blink::ListedElement"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink16IdTargetObserverD2Ev(%"class.blink::IdTargetObserver"*) unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink27FormAttributeTargetObserverD0Ev(%"class.blink::FormAttributeTargetObserver"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FormAttributeTargetObserver", %"class.blink::FormAttributeTargetObserver"* %0, i64 0, i32 0
  tail call void @_ZN5blink16IdTargetObserverD2Ev(%"class.blink::IdTargetObserver"* %2) #14
  ret void
}

declare void @_ZN5blink16IdTargetObserver10UnregisterEv(%"class.blink::IdTargetObserver"*) unnamed_addr #5

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

declare void @_ZN5blink5EventC1ERKN3WTF12AtomicStringENS0_7BubblesENS0_10CancelableENS0_12ComposedModeE(%"class.blink::Event"*, %"class.WTF::AtomicString"* dereferenceable(8), i32, i32, i32) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #9 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #14
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %21, i8* %22) #14
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #14
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #14
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !6

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #14
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #5

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #5

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #5

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #5

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #8

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #14
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #5

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #5

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceERKNS_10StringViewES3_(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #5

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_27FormAttributeTargetObserverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FormAttributeTargetObserver"*
  %4 = bitcast i8* %1 to void (%"class.blink::FormAttributeTargetObserver"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FormAttributeTargetObserver"*, %"class.blink::Visitor"*)**, void (%"class.blink::FormAttributeTargetObserver"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FormAttributeTargetObserver"*, %"class.blink::Visitor"*)*, void (%"class.blink::FormAttributeTargetObserver"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::FormAttributeTargetObserver"*, %"class.blink::Visitor"*)*, void (%"class.blink::FormAttributeTargetObserver"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FormAttributeTargetObserver"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLFormElement"*
  tail call void @_ZNK5blink15HTMLFormElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFormElement"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

declare void @_ZNK5blink15HTMLFormElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFormElement"*, %"class.blink::Visitor"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13ValidityStateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ValidityState"*
  tail call void @_ZNK5blink13ValidityState5TraceEPNS_7VisitorE(%"class.blink::ValidityState"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink13ValidityState5TraceEPNS_7VisitorE(%"class.blink::ValidityState"*, %"class.blink::Visitor"*) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ValidityState", %"class.blink::ValidityState"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.3"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #14, !range !14
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68) #14
  br label %73

73:                                               ; preds = %2, %54
  %74 = getelementptr inbounds %"class.blink::ValidityState", %"class.blink::ValidityState"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %74, %"class.blink::Visitor"* %1) #14
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #5

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ScriptWrappableD2Ev(%"class.blink::ScriptWrappable"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13ValidityStateD0Ev(%"class.blink::ValidityState"*) unnamed_addr #9 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink13ValidityState18GetWrapperTypeInfoEv(%"class.blink::ValidityState"*) unnamed_addr #1 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink13ValidityState18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #5

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #5

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.36"*, %"class.blink::ListedElement"** dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.36"* %0, i32 %14) #14
  %15 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %16, i64 %18
  %20 = bitcast %"class.blink::ListedElement"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.3"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #14
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.36"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !15

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %8, align 8
  %10 = icmp eq %"class.blink::Member.3"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ListedElementEEEEEmm(i64 %11) #14
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #14
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.36"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #14
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %8, align 8
  %26 = icmp eq %"class.blink::Member.3"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.3"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #14
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #14
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !6

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #14
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #14
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #14
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.36"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13ListedElementEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.36"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.36"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.36"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #14
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #14
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ListedElementEEEEEmm(i64 %14) #14
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #14
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.3"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.3"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !15

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.36"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #14
  %33 = bitcast %"class.WTF::Vector.36"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #14
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #14
  %42 = bitcast %"class.WTF::Vector.36"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.36", %"class.WTF::Vector.36"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #14
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13ListedElementEEEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.9, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.11, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13ListedElementEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.3"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !6

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %101, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %25, %98
  %28 = phi i64 [ %99, %98 ], [ 0, %25 ]
  %29 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.3"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %98, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = and i64 %31, -131072
  %36 = inttoptr i64 %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 4138
  %38 = load i8, i8* %37, align 2
  %39 = icmp eq i8 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %33
  %41 = getelementptr inbounds i8, i8* %36, i64 4160
  br label %80

42:                                               ; preds = %33
  %43 = getelementptr inbounds i8, i8* %36, i64 4096
  %44 = bitcast i8* %43 to %"class.blink::NormalPage"*
  %45 = getelementptr inbounds i8, i8* %36, i64 4400
  %46 = bitcast i8* %45 to i8**
  %47 = bitcast i8* %45 to i64*
  %48 = load i64, i64* %47, align 16
  %49 = sub i64 %31, %48
  %50 = lshr i64 %49, 3
  %51 = lshr i64 %49, 6
  %52 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %44, i64 0, i32 2, i32 0, i32 1, i64 %51
  %53 = load atomic i8, i8* %52 acquire, align 1
  %54 = trunc i64 %50 to i32
  %55 = and i32 %54, 7
  %56 = shl i32 2, %55
  %57 = trunc i32 %56 to i8
  %58 = add i8 %57, -1
  %59 = and i8 %58, %53
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %67

61:                                               ; preds = %42, %61
  %62 = phi i64 [ %63, %61 ], [ %51, %42 ]
  %63 = add i64 %62, -1
  %64 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %44, i64 0, i32 2, i32 0, i32 1, i64 %63
  %65 = load atomic i8, i8* %64 acquire, align 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %61, label %67

67:                                               ; preds = %61, %42
  %68 = phi i64 [ %51, %42 ], [ %63, %61 ]
  %69 = phi i8 [ %59, %42 ], [ %65, %61 ]
  %70 = zext i8 %69 to i32
  %71 = tail call i32 @llvm.ctlz.i32(i32 %70, i1 true) #14, !range !14
  %72 = add nsw i32 %71, -24
  %73 = shl i64 %68, 3
  %74 = or i64 %73, 7
  %75 = sext i32 %72 to i64
  %76 = sub i64 %74, %75
  %77 = shl i64 %76, 3
  %78 = load i8*, i8** %46, align 16
  %79 = getelementptr inbounds i8, i8* %78, i64 %77
  br label %80

80:                                               ; preds = %67, %40
  %81 = phi i8* [ %41, %40 ], [ %79, %67 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 8
  %83 = getelementptr inbounds i8, i8* %81, i64 4
  %84 = bitcast i8* %83 to i16*
  %85 = load atomic i16, i16* %84 acquire, align 2
  %86 = lshr i16 %85, 2
  %87 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %88 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %87, i64 0, i32 0
  %89 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %88, align 8
  %90 = zext i16 %86 to i64
  %91 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %89, i64 %90
  %92 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %91, align 8
  %93 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %92, i64 0, i32 0
  %94 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %93, align 8
  %95 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %96 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %95, i64 5
  %97 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %96, align 8
  tail call void %97(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* %82, void (%"class.blink::Visitor"*, i8*)* %94) #14
  br label %98

98:                                               ; preds = %27, %80
  %99 = add nuw nsw i64 %28, 1
  %100 = icmp eq i64 %99, %23
  br i1 %100, label %101, label %27

101:                                              ; preds = %98, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13ListedElementEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #5

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #5

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #5

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #5

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #5

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14ConsoleMessageEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_13ListedElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PersistentBase.2733"*
  tail call void @_ZNK5blink14PersistentBaseINS_13ListedElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE15TracePersistentEPNS_7VisitorE(%"class.blink::PersistentBase.2733"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink14PersistentBaseINS_13ListedElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE15TracePersistentEPNS_7VisitorE(%"class.blink::PersistentBase.2733"*, %"class.blink::Visitor"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = getelementptr inbounds %"class.blink::PersistentBase.2733", %"class.blink::PersistentBase.2733"* %0, i64 0, i32 0
  %5 = load %"class.blink::ListedElement"*, %"class.blink::ListedElement"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #14
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #14
  %7 = icmp eq %"class.blink::ListedElement"* %5, null
  br i1 %7, label %75, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::ListedElement"* %5 to i8*
  %10 = ptrtoint %"class.blink::ListedElement"* %5 to i64
  %11 = and i64 %10, -131072
  %12 = inttoptr i64 %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 4138
  %14 = load i8, i8* %13, align 2
  %15 = icmp eq i8 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %8
  %17 = getelementptr inbounds i8, i8* %12, i64 4160
  br label %56

18:                                               ; preds = %8
  %19 = getelementptr inbounds i8, i8* %12, i64 4096
  %20 = bitcast i8* %19 to %"class.blink::NormalPage"*
  %21 = getelementptr inbounds i8, i8* %12, i64 4400
  %22 = bitcast i8* %21 to i8**
  %23 = bitcast i8* %21 to i64*
  %24 = load i64, i64* %23, align 16
  %25 = sub i64 %10, %24
  %26 = lshr i64 %25, 3
  %27 = lshr i64 %25, 6
  %28 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %20, i64 0, i32 2, i32 0, i32 1, i64 %27
  %29 = load atomic i8, i8* %28 acquire, align 1
  %30 = trunc i64 %26 to i32
  %31 = and i32 %30, 7
  %32 = shl i32 2, %31
  %33 = trunc i32 %32 to i8
  %34 = add i8 %33, -1
  %35 = and i8 %34, %29
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %18, %37
  %38 = phi i64 [ %39, %37 ], [ %27, %18 ]
  %39 = add i64 %38, -1
  %40 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %20, i64 0, i32 2, i32 0, i32 1, i64 %39
  %41 = load atomic i8, i8* %40 acquire, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %37, label %43

43:                                               ; preds = %37, %18
  %44 = phi i64 [ %27, %18 ], [ %39, %37 ]
  %45 = phi i8 [ %35, %18 ], [ %41, %37 ]
  %46 = zext i8 %45 to i32
  %47 = call i32 @llvm.ctlz.i32(i32 %46, i1 true) #14, !range !14
  %48 = add nsw i32 %47, -24
  %49 = shl i64 %44, 3
  %50 = or i64 %49, 7
  %51 = sext i32 %48 to i64
  %52 = sub i64 %50, %51
  %53 = shl i64 %52, 3
  %54 = load i8*, i8** %22, align 16
  %55 = getelementptr inbounds i8, i8* %54, i64 %53
  br label %56

56:                                               ; preds = %43, %16
  %57 = phi i8* [ %17, %16 ], [ %55, %43 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 8
  %59 = getelementptr inbounds i8, i8* %57, i64 4
  %60 = bitcast i8* %59 to i16*
  %61 = load atomic i16, i16* %60 acquire, align 2
  %62 = lshr i16 %61, 2
  %63 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %64 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %63, i64 0, i32 0
  %65 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %64, align 8
  %66 = zext i16 %62 to i64
  %67 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, i64 %66
  %68 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %67, align 8
  %69 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %68, i64 0, i32 0
  %70 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %69, align 8
  %71 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %71, align 8
  %73 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %72, i64 8
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %73, align 8
  call void %74(%"class.blink::Visitor"* %1, i8* nonnull %9, i8* %58, void (%"class.blink::Visitor"*, i8*)* %70, %"class.base::Location"* nonnull dereferenceable(32) %3) #14
  br label %75

75:                                               ; preds = %2, %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #14
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #5

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink13ListedElementEFvvEJNS3_10PersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::ListedElement"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::ListedElement"*)**
  %21 = load void (%"class.blink::ListedElement"*)*, void (%"class.blink::ListedElement"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::ListedElement"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::ListedElement"*)* [ %21, %15 ], [ %23, %22 ]
  tail call void %25(%"class.blink::ListedElement"* %12) #14
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink13ListedElementEFvvEJNS2_10PersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::Persistent.2732"* dereferenceable(16)) unnamed_addr #1 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink13ListedElementEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #14
  %6 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::Persistent.2732"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #14
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !6

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #14
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !6

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #14
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase.2733"**
  store %"class.blink::PersistentBase.2733"* %11, %"class.blink::PersistentBase.2733"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_13ListedElementELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink13ListedElementEFvvEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #14
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !6

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #14
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #16
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16IdTargetObserverEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #14
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !6

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16IdTargetObserverEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16IdTargetObserverEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16IdTargetObserverEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #14
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16IdTargetObserverEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16IdTargetObserverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IdTargetObserver"*
  %4 = bitcast i8* %1 to void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)**, void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)*, void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)*, void (%"class.blink::IdTargetObserver"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IdTargetObserver"* %3, %"class.blink::Visitor"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16IdTargetObserverEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IdTargetObserver"*
  %3 = bitcast i8* %0 to void (%"class.blink::IdTargetObserver"*)***
  %4 = load void (%"class.blink::IdTargetObserver"*)**, void (%"class.blink::IdTargetObserver"*)*** %3, align 8
  %5 = load void (%"class.blink::IdTargetObserver"*)*, void (%"class.blink::IdTargetObserver"*)** %4, align 8
  tail call void %5(%"class.blink::IdTargetObserver"* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16IdTargetObserverEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i8 1 }
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink22WrapPersistentInternalINS_13ListedElementEEENS_10PersistentIT_EEPS3_: argument 0"}
!5 = distinct !{!5, !"_ZN5blink22WrapPersistentInternalINS_13ListedElementEEENS_10PersistentIT_EEPS3_"}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!8, !10, !12}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink13ListedElementEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink13ListedElementEFvvEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIMN5blink13ListedElementEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIMN5blink13ListedElementEFvvEJNS1_10PersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!12 = distinct !{!12, !13, !"_ZN3WTF4BindIMN5blink13ListedElementEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!13 = distinct !{!13, !"_ZN3WTF4BindIMN5blink13ListedElementEFvvEJNS1_10PersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!14 = !{i32 24, i32 33}
!15 = !{!"branch_weights", i32 2000, i32 1}
