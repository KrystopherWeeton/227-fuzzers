; ModuleID = '../../v8/src/wasm/baseline/liftoff-assembler.cc'
source_filename = "../../v8/src/wasm/baseline/liftoff-assembler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::wasm::LiftoffRegList" = type { i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::wasm::LiftoffAssembler" = type { %"class.v8::internal::TurboAssembler.base", i32, %union.anon.1218, %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", i32, i32, i8, i8* }
%"class.v8::internal::TurboAssembler.base" = type { %"class.v8::internal::SharedTurboAssembler.base" }
%"class.v8::internal::SharedTurboAssembler.base" = type { %"class.v8::internal::TurboAssemblerBase.base" }
%"class.v8::internal::TurboAssemblerBase.base" = type <{ %"class.v8::internal::Assembler", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.54", i8, i8, i8, i8, i32, i8 }>
%"class.v8::internal::Assembler" = type { %"class.v8::internal::AssemblerBase", %"class.v8::internal::RelocInfoWriter", %"class.std::__1::deque", i32, %"class.std::__1::deque", %"class.std::__1::map", %"class.v8::internal::ConstPool" }
%"class.v8::internal::AssemblerBase" = type { i32 (...)**, %"class.std::__1::unique_ptr.21", i8*, %"class.std::__1::forward_list", i8*, %"class.v8::internal::CodeCommentsWriter", %"class.std::__1::vector.45", %"class.std::__1::vector.52", %"class.std::__1::unordered_map", %"struct.v8::internal::AssemblerOptions", i64, i8, i8, %"class.v8::internal::JumpOptimizationInfo"* }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.v8::internal::AssemblerBuffer"* }
%"class.std::__1::forward_list" = type { %"class.std::__1::__forward_list_base" }
%"class.std::__1::__forward_list_base" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::__forward_begin_node" }
%"struct.std::__1::__forward_begin_node" = type { %"struct.std::__1::__forward_list_node"* }
%"struct.std::__1::__forward_list_node" = type opaque
%"class.v8::internal::CodeCommentsWriter" = type { i32, %"class.std::__1::vector.32" }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"struct.v8::internal::CodeCommentEntry"*, %"struct.v8::internal::CodeCommentEntry"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::CodeCommentEntry" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.36 }
%union.anon.36 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::CodeCommentEntry"* }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"class.v8::internal::Handle"*, %"class.v8::internal::Handle"*, %"class.std::__1::__compressed_pair.47" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.v8::internal::Handle"* }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"class.v8::internal::Handle.54"*, %"class.v8::internal::Handle.54"*, %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.v8::internal::Handle.54"* }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.60", %"class.std::__1::__compressed_pair.68", %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.75", [4 x i8] }>
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62", %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { float }
%"struct.v8::internal::AssemblerOptions" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i64, i8, i8, i8, [5 x i8] }>
%"class.v8::internal::JumpOptimizationInfo" = type { i32, i8, %"class.std::__1::vector.78", i64 }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { i32*, i32*, %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { i32* }
%"class.v8::internal::RelocInfoWriter" = type { i8*, i8* }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.90" }
%"struct.std::__1::__split_buffer" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { i32** }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.94" }
%"class.std::__1::__tree.94" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::ConstPool" = type { %"class.v8::internal::Assembler"*, %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.101" }
%"class.std::__1::__tree.101" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.102", %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.117", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.753", %"class.std::__1::unique_ptr.774", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.784", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.919", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.928", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.938", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.943", %"struct.std::__1::atomic.278", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.1018", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.52"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1065", i32, i8, i8, i32, i32, %"class.std::__1::vector.1071", %"class.std::__1::vector.1071", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1078", i64, %"class.std::__1::unordered_map.1079", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.649", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.286", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1135", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1173", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1207", %"class.std::__1::vector.1211", %"class.std::__1::vector.1211", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.111", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.111" = type { %"struct.std::__1::__atomic_base.112" }
%"struct.std::__1::__atomic_base.112" = type { %"struct.std::__1::__cxx_atomic_impl.113" }
%"struct.std::__1::__cxx_atomic_impl.113" = type { %"struct.std::__1::__cxx_atomic_base_impl.114" }
%"struct.std::__1::__cxx_atomic_base_impl.114" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.115", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.115" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map.123", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.153", %"class.std::__1::vector.157", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.287", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.291", %"class.std::__1::vector.291", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.298", %"class.std::__1::unique_ptr.304", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.440", %"class.std::__1::unique_ptr.446", %"class.std::__1::unique_ptr.485", %"class.std::__1::unique_ptr.524", %"class.std::__1::unique_ptr.554", %"class.std::__1::unique_ptr.560", %"class.std::__1::unique_ptr.570", %"class.std::__1::unique_ptr.576", %"class.std::__1::unique_ptr.576", %"class.std::__1::unique_ptr.582", %"class.std::__1::unique_ptr.588", %"class.std::__1::unique_ptr.588", %"class.std::__1::unique_ptr.594", %"class.std::__1::unique_ptr.600", %"class.std::__1::shared_ptr.606", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.611", %"class.std::__1::unique_ptr.637", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.643", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.656", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.456", i8, [7 x i8], %"class.std::__1::unordered_map.662", %"class.std::__1::unordered_map.688", %"class.std::__1::unordered_map.662", %"class.std::__1::unordered_map.712", %"class.std::__1::vector.740", i8, %"class.std::__1::unique_ptr.747", i32, i32 }
%"class.std::__1::unordered_map.123" = type { %"class.std::__1::__hash_table.124" }
%"class.std::__1::__hash_table.124" = type <{ %"class.std::__1::unique_ptr.125", %"class.std::__1::__compressed_pair.135", %"class.std::__1::__compressed_pair.140", %"class.std::__1::__compressed_pair.143", [4 x i8] }>
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127", %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.std::__1::__hash_node_base.128"** }
%"struct.std::__1::__hash_node_base.128" = type { %"struct.std::__1::__hash_node_base.128"* }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.std::__1::__bucket_list_deallocator.130" }
%"class.std::__1::__bucket_list_deallocator.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"struct.std::__1::__hash_node_base.128" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.148", %"struct.std::__1::atomic.148", %"struct.std::__1::atomic.148" }
%"struct.std::__1::atomic.148" = type { %"struct.std::__1::__atomic_base.149" }
%"struct.std::__1::__atomic_base.149" = type { %"struct.std::__1::__atomic_base.150" }
%"struct.std::__1::__atomic_base.150" = type { %"struct.std::__1::__cxx_atomic_impl.151" }
%"struct.std::__1::__cxx_atomic_impl.151" = type { %"struct.std::__1::__cxx_atomic_base_impl.152" }
%"struct.std::__1::__cxx_atomic_base_impl.152" = type { i64 }
%"struct.std::__1::atomic.153" = type { %"struct.std::__1::__atomic_base.154" }
%"struct.std::__1::__atomic_base.154" = type { %"struct.std::__1::__cxx_atomic_impl.155" }
%"struct.std::__1::__cxx_atomic_impl.155" = type { %"struct.std::__1::__cxx_atomic_base_impl.156" }
%"struct.std::__1::__cxx_atomic_base_impl.156" = type { i32 }
%"class.std::__1::vector.157" = type { %"class.std::__1::__vector_base.158" }
%"class.std::__1::__vector_base.158" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.159" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.230" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.224" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.164", %"class.std::__1::vector.164", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.164" = type { %"class.std::__1::__vector_base.165" }
%"class.std::__1::__vector_base.165" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.166" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.171" }
%"class.std::__1::__hash_table.171" = type <{ %"class.std::__1::unique_ptr.172", %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.187", %"class.std::__1::__compressed_pair.189", [4 x i8] }>
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174", %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.std::__1::__hash_node_base.175"** }
%"struct.std::__1::__hash_node_base.175" = type { %"struct.std::__1::__hash_node_base.175"* }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.std::__1::__bucket_list_deallocator.177" }
%"class.std::__1::__bucket_list_deallocator.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.std::__1::__hash_node_base.175" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.148", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.205"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.213", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.148", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.148", %"struct.std::__1::atomic.194", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.194" = type { %"struct.std::__1::__atomic_base.195" }
%"struct.std::__1::__atomic_base.195" = type { %"struct.std::__1::__cxx_atomic_impl.196" }
%"struct.std::__1::__cxx_atomic_impl.196" = type { %"struct.std::__1::__cxx_atomic_base_impl.197" }
%"struct.std::__1::__cxx_atomic_base_impl.197" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.198" }
%"class.std::__1::vector.198" = type { %"class.std::__1::__vector_base.199" }
%"class.std::__1::__vector_base.199" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.200" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.205" = type { %"class.std::__1::__tree.206" }
%"class.std::__1::__tree.206" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.207", %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.213" = type { %"struct.std::__1::__atomic_base.214" }
%"struct.std::__1::__atomic_base.214" = type { %"struct.std::__1::__cxx_atomic_impl.215" }
%"struct.std::__1::__cxx_atomic_impl.215" = type { %"struct.std::__1::__cxx_atomic_base_impl.216" }
%"struct.std::__1::__cxx_atomic_base_impl.216" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.217", i8, [7 x i8] }>
%"class.std::__1::vector.217" = type { %"class.std::__1::__vector_base.218" }
%"class.std::__1::__vector_base.218" = type { i64*, i64*, %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.230" = type { %"class.std::__1::__vector_base.231" }
%"class.std::__1::__vector_base.231" = type { %"struct.std::__1::pair.232"*, %"struct.std::__1::pair.232"*, %"class.std::__1::__compressed_pair.233" }
%"struct.std::__1::pair.232" = type { i32, i64 }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"struct.std::__1::pair.232"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.238" }
%"class.std::__1::unordered_map.238" = type { %"class.std::__1::__hash_table.239" }
%"class.std::__1::__hash_table.239" = type <{ %"class.std::__1::unique_ptr.240", %"class.std::__1::__compressed_pair.250", %"class.std::__1::__compressed_pair.255", %"class.std::__1::__compressed_pair.260", [4 x i8] }>
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242", %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.243"** }
%"struct.std::__1::__hash_node_base.243" = type { %"struct.std::__1::__hash_node_base.243"* }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.std::__1::__bucket_list_deallocator.245" }
%"class.std::__1::__bucket_list_deallocator.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"struct.std::__1::__hash_node_base.243" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.265", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.265" = type { %"class.std::__1::__vector_base.266" }
%"class.std::__1::__vector_base.266" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.267" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1140", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1144", %"class.std::__1::unique_ptr.1150", %"class.std::__1::unique_ptr.600", %"class.std::__1::vector.1156", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1140" = type { %"struct.std::__1::__atomic_base.1141" }
%"struct.std::__1::__atomic_base.1141" = type { %"struct.std::__1::__cxx_atomic_impl.1142" }
%"struct.std::__1::__cxx_atomic_impl.1142" = type { %"struct.std::__1::__cxx_atomic_base_impl.1143" }
%"struct.std::__1::__cxx_atomic_base_impl.1143" = type { i32 }
%"class.std::__1::unique_ptr.1144" = type { %"class.std::__1::__compressed_pair.1145" }
%"class.std::__1::__compressed_pair.1145" = type { %"struct.std::__1::__compressed_pair_elem.1146" }
%"struct.std::__1::__compressed_pair_elem.1146" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.912" }
%"class.std::__1::vector.912" = type { %"class.std::__1::__vector_base.913" }
%"class.std::__1::__vector_base.913" = type { i64**, i64**, %"class.std::__1::__compressed_pair.914" }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.915" = type { i64** }
%"class.std::__1::unique_ptr.1150" = type { %"class.std::__1::__compressed_pair.1151" }
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.1152" }
%"struct.std::__1::__compressed_pair_elem.1152" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.912", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1156" = type { %"class.std::__1::__vector_base.1157" }
%"class.std::__1::__vector_base.1157" = type { %"struct.std::__1::pair.1158"*, %"struct.std::__1::pair.1158"*, %"class.std::__1::__compressed_pair.1159" }
%"struct.std::__1::pair.1158" = type opaque
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"struct.std::__1::pair.1158"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.278", %"struct.std::__1::atomic.282", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.282" = type { %"struct.std::__1::__atomic_base.283" }
%"struct.std::__1::__atomic_base.283" = type { %"struct.std::__1::__cxx_atomic_impl.284" }
%"struct.std::__1::__cxx_atomic_impl.284" = type { %"struct.std::__1::__cxx_atomic_base_impl.285" }
%"struct.std::__1::__cxx_atomic_base_impl.285" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.286" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.287" = type { %"struct.std::__1::__atomic_base.288" }
%"struct.std::__1::__atomic_base.288" = type { %"struct.std::__1::__cxx_atomic_impl.289" }
%"struct.std::__1::__cxx_atomic_impl.289" = type { %"struct.std::__1::__cxx_atomic_base_impl.290" }
%"struct.std::__1::__cxx_atomic_base_impl.290" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.291" = type { %"class.std::__1::__vector_base.292" }
%"class.std::__1::__vector_base.292" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.293" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.346", %"class.std::__1::unique_ptr.352", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.406", %"class.std::__1::vector.406", %"class.std::__1::vector.406", %"class.std::__1::vector.413", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.307", %"class.std::__1::vector.308", %"class.std::__1::vector.315", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.307" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.308" = type { %"class.std::__1::__vector_base.309" }
%"class.std::__1::__vector_base.309" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.310" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.315" = type { %"class.std::__1::__vector_base.316" }
%"class.std::__1::__vector_base.316" = type { %"class.std::__1::unique_ptr.317"*, %"class.std::__1::unique_ptr.317"*, %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::unique_ptr.317" = type opaque
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.std::__1::unique_ptr.317"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.323", %"class.v8::internal::Worklist.325", %"class.v8::internal::Worklist.325", %"class.v8::internal::Worklist.325", %"class.v8::internal::Worklist.327", %"class.v8::internal::Worklist.329", %"class.v8::internal::Worklist.331", %"class.v8::internal::Worklist.333", %"class.v8::internal::Worklist.335", %"class.v8::internal::Worklist.337" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.323" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.325" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.327" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.329" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.331" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.333" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.335" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.337" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.339", i8, i64 }
%"class.std::__1::vector.339" = type { %"class.std::__1::__vector_base.340" }
%"class.std::__1::__vector_base.340" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.355" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.307"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.355" = type { %"class.std::__1::__hash_table.356" }
%"class.std::__1::__hash_table.356" = type <{ %"class.std::__1::unique_ptr.357", %"class.std::__1::__compressed_pair.367", %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.375", [4 x i8] }>
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359", %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"struct.std::__1::__hash_node_base.360"** }
%"struct.std::__1::__hash_node_base.360" = type { %"struct.std::__1::__hash_node_base.360"* }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.std::__1::__bucket_list_deallocator.362" }
%"class.std::__1::__bucket_list_deallocator.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"struct.std::__1::__hash_node_base.360" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.382" }
%"class.std::__1::unordered_map.382" = type { %"class.std::__1::__hash_table.383" }
%"class.std::__1::__hash_table.383" = type <{ %"class.std::__1::unique_ptr.384", %"class.std::__1::__compressed_pair.394", %"class.std::__1::__compressed_pair.399", %"class.std::__1::__compressed_pair.402", [4 x i8] }>
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386", %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.387"** }
%"struct.std::__1::__hash_node_base.387" = type { %"struct.std::__1::__hash_node_base.387"* }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.std::__1::__bucket_list_deallocator.389" }
%"class.std::__1::__bucket_list_deallocator.389" = type { %"class.std::__1::__compressed_pair.390" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"struct.std::__1::__hash_node_base.387" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.std::__1::vector.406" = type { %"class.std::__1::__vector_base.407" }
%"class.std::__1::__vector_base.407" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.413" = type { %"class.std::__1::__vector_base.414" }
%"class.std::__1::__vector_base.414" = type { %"struct.std::__1::pair.415"*, %"struct.std::__1::pair.415"*, %"class.std::__1::__compressed_pair.416" }
%"struct.std::__1::pair.415" = type opaque
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"struct.std::__1::pair.415"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.421", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.406"], [3 x %"class.std::__1::vector.406"], i8, %"struct.std::__1::atomic.278", [6 x i8], %"class.std::__1::vector.406", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.431"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.406", %"class.std::__1::vector.406", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.431" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.456", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.449"], %"class.std::__1::unique_ptr.421" }
%"class.std::__1::vector.449" = type { %"class.std::__1::__vector_base.450" }
%"class.std::__1::__vector_base.450" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.488", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.492", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.497" }
%"struct.std::__1::atomic.488" = type { %"struct.std::__1::__atomic_base.489" }
%"struct.std::__1::__atomic_base.489" = type { %"struct.std::__1::__cxx_atomic_impl.490" }
%"struct.std::__1::__cxx_atomic_impl.490" = type { %"struct.std::__1::__cxx_atomic_base_impl.491" }
%"struct.std::__1::__cxx_atomic_base_impl.491" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.492" = type { %"struct.std::__1::__atomic_base.493" }
%"struct.std::__1::__atomic_base.493" = type { %"struct.std::__1::__cxx_atomic_impl.494" }
%"struct.std::__1::__cxx_atomic_impl.494" = type { %"struct.std::__1::__cxx_atomic_base_impl.495" }
%"struct.std::__1::__cxx_atomic_base_impl.495" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.497" = type { %"class.std::__1::__hash_table.498" }
%"class.std::__1::__hash_table.498" = type <{ %"class.std::__1::unique_ptr.499", %"class.std::__1::__compressed_pair.509", %"class.std::__1::__compressed_pair.514", %"class.std::__1::__compressed_pair.517", [4 x i8] }>
%"class.std::__1::unique_ptr.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501", %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"struct.std::__1::__hash_node_base.502"** }
%"struct.std::__1::__hash_node_base.502" = type { %"struct.std::__1::__hash_node_base.502"* }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.std::__1::__bucket_list_deallocator.504" }
%"class.std::__1::__bucket_list_deallocator.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"struct.std::__1::__hash_node_base.502" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.std::__1::unique_ptr.524" = type { %"class.std::__1::__compressed_pair.525" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.421", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.278", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.527", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.527" = type { %"class.std::__1::__hash_table.528" }
%"class.std::__1::__hash_table.528" = type <{ %"class.std::__1::unique_ptr.529", %"class.std::__1::__compressed_pair.539", %"class.std::__1::__compressed_pair.544", %"class.std::__1::__compressed_pair.547", [4 x i8] }>
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531", %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.std::__1::__hash_node_base.532"** }
%"struct.std::__1::__hash_node_base.532" = type { %"struct.std::__1::__hash_node_base.532"* }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"class.std::__1::__bucket_list_deallocator.534" }
%"class.std::__1::__bucket_list_deallocator.534" = type { %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"struct.std::__1::__hash_node_base.532" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.std::__1::unique_ptr.554" = type { %"class.std::__1::__compressed_pair.555" }
%"class.std::__1::__compressed_pair.555" = type { %"struct.std::__1::__compressed_pair_elem.556" }
%"struct.std::__1::__compressed_pair_elem.556" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.560" = type { %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.563" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.563" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.588" = type { %"class.std::__1::__compressed_pair.589" }
%"class.std::__1::__compressed_pair.589" = type { %"struct.std::__1::__compressed_pair_elem.590" }
%"struct.std::__1::__compressed_pair_elem.590" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.594" = type { %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.600" = type { %"class.std::__1::__compressed_pair.601" }
%"class.std::__1::__compressed_pair.601" = type { %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.606" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.607", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.5", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.14" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::set.14" = type { %"class.std::__1::__tree.15" }
%"class.std::__1::__tree.15" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.8", %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::atomic.607" = type { %"struct.std::__1::__atomic_base.608" }
%"struct.std::__1::__atomic_base.608" = type { %"struct.std::__1::__cxx_atomic_impl.609" }
%"struct.std::__1::__cxx_atomic_impl.609" = type { %"struct.std::__1::__cxx_atomic_base_impl.610" }
%"struct.std::__1::__cxx_atomic_base_impl.610" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.611" = type { %"class.std::__1::__hash_table.612" }
%"class.std::__1::__hash_table.612" = type <{ %"class.std::__1::unique_ptr.613", %"class.std::__1::__compressed_pair.623", %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.631", [4 x i8] }>
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615", %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"struct.std::__1::__hash_node_base.616"** }
%"struct.std::__1::__hash_node_base.616" = type { %"struct.std::__1::__hash_node_base.616"* }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"class.std::__1::__bucket_list_deallocator.618" }
%"class.std::__1::__bucket_list_deallocator.618" = type { %"class.std::__1::__compressed_pair.619" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"struct.std::__1::__hash_node_base.616" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.std::__1::unique_ptr.637" = type { %"class.std::__1::__compressed_pair.638" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.643" = type { %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.649", %"class.std::__1::vector.649" }
%"class.std::__1::unique_ptr.656" = type { %"class.std::__1::__compressed_pair.657" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.456" = type { %"class.std::__1::__hash_table.457" }
%"class.std::__1::__hash_table.457" = type <{ %"class.std::__1::unique_ptr.458", %"class.std::__1::__compressed_pair.468", %"class.std::__1::__compressed_pair.473", %"class.std::__1::__compressed_pair.477", [4 x i8] }>
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460", %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"struct.std::__1::__hash_node_base.461"** }
%"struct.std::__1::__hash_node_base.461" = type { %"struct.std::__1::__hash_node_base.461"* }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.std::__1::__bucket_list_deallocator.463" }
%"class.std::__1::__bucket_list_deallocator.463" = type { %"class.std::__1::__compressed_pair.464" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"struct.std::__1::__hash_node_base.461" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.std::__1::unordered_map.688" = type { %"class.std::__1::__hash_table.689" }
%"class.std::__1::__hash_table.689" = type <{ %"class.std::__1::unique_ptr.690", %"class.std::__1::__compressed_pair.700", %"class.std::__1::__compressed_pair.705", %"class.std::__1::__compressed_pair.708", [4 x i8] }>
%"class.std::__1::unique_ptr.690" = type { %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692", %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"struct.std::__1::__hash_node_base.693"** }
%"struct.std::__1::__hash_node_base.693" = type { %"struct.std::__1::__hash_node_base.693"* }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.std::__1::__bucket_list_deallocator.695" }
%"class.std::__1::__bucket_list_deallocator.695" = type { %"class.std::__1::__compressed_pair.696" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.693" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.std::__1::unordered_map.662" = type { %"class.std::__1::__hash_table.663" }
%"class.std::__1::__hash_table.663" = type <{ %"class.std::__1::unique_ptr.664", %"class.std::__1::__compressed_pair.674", %"class.std::__1::__compressed_pair.679", %"class.std::__1::__compressed_pair.682", [4 x i8] }>
%"class.std::__1::unique_ptr.664" = type { %"class.std::__1::__compressed_pair.665" }
%"class.std::__1::__compressed_pair.665" = type { %"struct.std::__1::__compressed_pair_elem.666", %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.666" = type { %"struct.std::__1::__hash_node_base.667"** }
%"struct.std::__1::__hash_node_base.667" = type { %"struct.std::__1::__hash_node_base.667"* }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.std::__1::__bucket_list_deallocator.669" }
%"class.std::__1::__bucket_list_deallocator.669" = type { %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.674" = type { %"struct.std::__1::__compressed_pair_elem.675" }
%"struct.std::__1::__compressed_pair_elem.675" = type { %"struct.std::__1::__hash_node_base.667" }
%"class.std::__1::__compressed_pair.679" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.std::__1::unordered_map.712" = type { %"class.std::__1::__hash_table.713" }
%"class.std::__1::__hash_table.713" = type <{ %"class.std::__1::unique_ptr.714", %"class.std::__1::__compressed_pair.724", %"class.std::__1::__compressed_pair.729", %"class.std::__1::__compressed_pair.734", [4 x i8] }>
%"class.std::__1::unique_ptr.714" = type { %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716", %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"struct.std::__1::__hash_node_base.717"** }
%"struct.std::__1::__hash_node_base.717" = type { %"struct.std::__1::__hash_node_base.717"* }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.std::__1::__bucket_list_deallocator.719" }
%"class.std::__1::__bucket_list_deallocator.719" = type { %"class.std::__1::__compressed_pair.720" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"struct.std::__1::__hash_node_base.717" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.std::__1::vector.740" = type { %"class.std::__1::__vector_base.741" }
%"class.std::__1::__vector_base.741" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.742" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.649" }
%"class.std::__1::shared_ptr.753" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.265", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.768" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.757" }
%"class.std::__1::vector.757" = type { %"class.std::__1::__vector_base.758" }
%"class.std::__1::__vector_base.758" = type { %"class.std::__1::unique_ptr.759"*, %"class.std::__1::unique_ptr.759"*, %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.1228" }
%"class.std::__1::__compressed_pair.1228" = type { %"struct.std::__1::__compressed_pair_elem.1229" }
%"struct.std::__1::__compressed_pair_elem.1229" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.std::__1::unique_ptr.759"* }
%"class.std::__1::unique_ptr.768" = type { %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.774" = type { %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.777", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.777" = type { %"struct.std::__1::__atomic_base.778" }
%"struct.std::__1::__atomic_base.778" = type { %"struct.std::__1::__cxx_atomic_impl.779" }
%"struct.std::__1::__cxx_atomic_impl.779" = type { %"struct.std::__1::__cxx_atomic_base_impl.780" }
%"struct.std::__1::__cxx_atomic_base_impl.780" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.784" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.785", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.785" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.786", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.786" = type { %"class.std::__1::__vector_base.787" }
%"class.std::__1::__vector_base.787" = type { %"class.std::__1::unique_ptr.788"*, %"class.std::__1::unique_ptr.788"*, %"class.std::__1::__compressed_pair.789" }
%"class.std::__1::unique_ptr.788" = type opaque
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"class.std::__1::unique_ptr.788"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.794 }
%union.anon.794 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.795", %"class.std::__1::unique_ptr.801", %"struct.std::__1::atomic.278", %"class.std::__1::unique_ptr.807", %"class.std::__1::unique_ptr.813", %"class.std::__1::unique_ptr.819", %"class.std::__1::unique_ptr.825", %"class.std::__1::unique_ptr.831", %"class.std::__1::set.837", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.795" = type { %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.801" = type { %"class.std::__1::__compressed_pair.802" }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.807" = type { %"class.std::__1::__compressed_pair.808" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.813" = type { %"class.std::__1::__compressed_pair.814" }
%"class.std::__1::__compressed_pair.814" = type { %"struct.std::__1::__compressed_pair_elem.815" }
%"struct.std::__1::__compressed_pair_elem.815" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.819" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.825" = type { %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.831" = type { %"class.std::__1::__compressed_pair.832" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.837" = type { %"class.std::__1::__tree.838" }
%"class.std::__1::__tree.838" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.839", %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.847" }
%"class.v8::internal::TaggedImpl.847" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.846" }
%"class.v8::internal::TaggedImpl.846" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.848", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.848" = type { %"class.std::__1::__compressed_pair.849" }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.850" }
%"struct.std::__1::__compressed_pair_elem.850" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.854", %"class.v8::internal::DetachableVector.855", %"class.v8::internal::DetachableVector.854", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.855" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.854" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.5" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.856", %"class.std::__1::vector.862", %"class.std::__1::unique_ptr.869", %"class.std::__1::vector.876", %"class.std::__1::unique_ptr.883", i64, %"class.std::__1::vector.889", %"class.std::__1::vector.897", %"class.std::__1::vector.905", i8, i8, i32 }
%"class.std::__1::unique_ptr.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.858" }
%"struct.std::__1::__compressed_pair_elem.858" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.862" = type { %"class.std::__1::__vector_base.863" }
%"class.std::__1::__vector_base.863" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.864" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.865" }
%"struct.std::__1::__compressed_pair_elem.865" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.869" = type { %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"class.v8::internal::GlobalHandles::NodeSpace.872"* }
%"class.v8::internal::GlobalHandles::NodeSpace.872" = type opaque
%"class.std::__1::vector.876" = type { %"class.std::__1::__vector_base.877" }
%"class.std::__1::__vector_base.877" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.878" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"struct.std::__1::pair.891"*, %"struct.std::__1::pair.891"*, %"class.std::__1::__compressed_pair.892" }
%"struct.std::__1::pair.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"struct.std::__1::pair.891"* }
%"class.std::__1::vector.897" = type { %"class.std::__1::__vector_base.898" }
%"class.std::__1::__vector_base.898" = type { %"struct.std::__1::pair.899"*, %"struct.std::__1::pair.899"*, %"class.std::__1::__compressed_pair.900" }
%"struct.std::__1::pair.899" = type opaque
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.901" }
%"struct.std::__1::__compressed_pair_elem.901" = type { %"struct.std::__1::pair.899"* }
%"class.std::__1::vector.905" = type { %"class.std::__1::__vector_base.906" }
%"class.std::__1::__vector_base.906" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.907" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908" }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.912", %"class.std::__1::vector.919" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.922" }
%"class.std::__1::unique_ptr.922" = type { %"class.std::__1::__compressed_pair.923" }
%"class.std::__1::__compressed_pair.923" = type { %"struct.std::__1::__compressed_pair_elem.924" }
%"struct.std::__1::__compressed_pair_elem.924" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.919" = type { %"class.std::__1::__vector_base.920" }
%"class.std::__1::__vector_base.920" = type { i32*, i32*, %"class.std::__1::__compressed_pair.921" }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.928" = type { %"struct.std::__1::__atomic_base.929" }
%"struct.std::__1::__atomic_base.929" = type { %"struct.std::__1::__cxx_atomic_impl.930" }
%"struct.std::__1::__cxx_atomic_impl.930" = type { %"struct.std::__1::__cxx_atomic_base_impl.931" }
%"struct.std::__1::__cxx_atomic_base_impl.931" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.938" = type { %"struct.std::__1::__atomic_base.939" }
%"struct.std::__1::__atomic_base.939" = type { %"struct.std::__1::__cxx_atomic_impl.940" }
%"struct.std::__1::__cxx_atomic_impl.940" = type { %"struct.std::__1::__cxx_atomic_base_impl.941" }
%"struct.std::__1::__cxx_atomic_base_impl.941" = type { i32 }
%"class.std::__1::unordered_map.943" = type { %"class.std::__1::__hash_table.944" }
%"class.std::__1::__hash_table.944" = type <{ %"class.std::__1::unique_ptr.945", %"class.std::__1::__compressed_pair.955", %"class.std::__1::__compressed_pair.960", %"class.std::__1::__compressed_pair.963", [4 x i8] }>
%"class.std::__1::unique_ptr.945" = type { %"class.std::__1::__compressed_pair.946" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.947", %"struct.std::__1::__compressed_pair_elem.949" }
%"struct.std::__1::__compressed_pair_elem.947" = type { %"struct.std::__1::__hash_node_base.948"** }
%"struct.std::__1::__hash_node_base.948" = type { %"struct.std::__1::__hash_node_base.948"* }
%"struct.std::__1::__compressed_pair_elem.949" = type { %"class.std::__1::__bucket_list_deallocator.950" }
%"class.std::__1::__bucket_list_deallocator.950" = type { %"class.std::__1::__compressed_pair.951" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"struct.std::__1::__hash_node_base.948" }
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::atomic.278" = type { %"struct.std::__1::__atomic_base.279" }
%"struct.std::__1::__atomic_base.279" = type { %"struct.std::__1::__cxx_atomic_impl.280" }
%"struct.std::__1::__cxx_atomic_impl.280" = type { %"struct.std::__1::__cxx_atomic_base_impl.281" }
%"struct.std::__1::__cxx_atomic_base_impl.281" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.969", %"class.v8::internal::Handle.975", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.976", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.969" = type { %"class.std::__1::__compressed_pair.970" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.975" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.976" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.977", %"class.std::__1::vector.983", %"class.std::__1::unique_ptr.991", %"class.std::__1::unique_ptr.997", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.1003", %"class.std::__1::vector.1009", %"struct.std::__1::pair.1017" }
%"class.std::__1::unique_ptr.977" = type { %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.983" = type { %"class.std::__1::__vector_base.984" }
%"class.std::__1::__vector_base.984" = type { %"class.std::__1::unique_ptr.985"*, %"class.std::__1::unique_ptr.985"*, %"class.std::__1::__compressed_pair.986" }
%"class.std::__1::unique_ptr.985" = type opaque
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.987" }
%"struct.std::__1::__compressed_pair_elem.987" = type { %"class.std::__1::unique_ptr.985"* }
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.997" = type { %"class.std::__1::__compressed_pair.998" }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.1003" = type { %"class.std::__1::__compressed_pair.1004" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.1005" }
%"struct.std::__1::__compressed_pair_elem.1005" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.1009" = type { %"class.std::__1::__vector_base.1010" }
%"class.std::__1::__vector_base.1010" = type { %"struct.std::__1::pair.1011"*, %"struct.std::__1::pair.1011"*, %"class.std::__1::__compressed_pair.1012" }
%"struct.std::__1::pair.1011" = type opaque
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.1013" }
%"struct.std::__1::__compressed_pair_elem.1013" = type { %"struct.std::__1::pair.1011"* }
%"struct.std::__1::pair.1017" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.116"*, i16, i8*)*, i8* }
%"class.v8::Local.116" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.1018" = type { %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.1021", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.1021" = type { %"class.std::__1::__hash_table.1022" }
%"class.std::__1::__hash_table.1022" = type <{ %"class.std::__1::unique_ptr.1023", %"class.std::__1::__compressed_pair.1033", %"class.std::__1::__compressed_pair.1038", %"class.std::__1::__compressed_pair.1042", [4 x i8] }>
%"class.std::__1::unique_ptr.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.1025", %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1025" = type { %"struct.std::__1::__hash_node_base.1026"** }
%"struct.std::__1::__hash_node_base.1026" = type { %"struct.std::__1::__hash_node_base.1026"* }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"class.std::__1::__bucket_list_deallocator.1028" }
%"class.std::__1::__bucket_list_deallocator.1028" = type { %"class.std::__1::__compressed_pair.1029" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"struct.std::__1::__hash_node_base.1026" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1042" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque.1050" }
%"class.std::__1::deque.1050" = type { %"class.std::__1::__deque_base.1051" }
%"class.std::__1::__deque_base.1051" = type { %"struct.std::__1::__split_buffer.1052", i64, %"class.std::__1::__compressed_pair.1059" }
%"struct.std::__1::__split_buffer.1052" = type { %"struct.std::__1::pair.1053"**, %"struct.std::__1::pair.1053"**, %"struct.std::__1::pair.1053"**, %"class.std::__1::__compressed_pair.1054" }
%"struct.std::__1::pair.1053" = type opaque
%"class.std::__1::__compressed_pair.1054" = type { %"struct.std::__1::__compressed_pair_elem.1055" }
%"struct.std::__1::__compressed_pair_elem.1055" = type { %"struct.std::__1::pair.1053"** }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector.1064", [128 x i8] }
%"class.v8::internal::Vector.1064" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.933", i32, %"class.v8::Local.116" }
%"class.v8::Local.933" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1065" = type { %"class.std::__1::__compressed_pair.1066" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.1067" }
%"struct.std::__1::__compressed_pair_elem.1067" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1071" = type { %"class.std::__1::__vector_base.1072" }
%"class.std::__1::__vector_base.1072" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1073" }
%"class.std::__1::__compressed_pair.1073" = type { %"struct.std::__1::__compressed_pair_elem.1074" }
%"struct.std::__1::__compressed_pair_elem.1074" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1078" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1079" = type { %"class.std::__1::__hash_table.1080" }
%"class.std::__1::__hash_table.1080" = type <{ %"class.std::__1::unique_ptr.1081", %"class.std::__1::__compressed_pair.1091", %"class.std::__1::__compressed_pair.1096", %"class.std::__1::__compressed_pair.1099", [4 x i8] }>
%"class.std::__1::unique_ptr.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083", %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"struct.std::__1::__hash_node_base.1084"** }
%"struct.std::__1::__hash_node_base.1084" = type { %"struct.std::__1::__hash_node_base.1084"* }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.std::__1::__bucket_list_deallocator.1086" }
%"class.std::__1::__bucket_list_deallocator.1086" = type { %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"struct.std::__1::__hash_node_base.1084" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.651" }
%"class.std::__1::__compressed_pair.651" = type { %"struct.std::__1::__compressed_pair_elem.652" }
%"struct.std::__1::__compressed_pair_elem.652" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.286" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1103", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1132", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1133", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1103" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1128, %union.anon.1130, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1128 = type { i64 }
%union.anon.1130 = type { i64 }
%"class.std::__1::weak_ptr.1132" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1133" = type { %"class.v8::PersistentBase.1134" }
%"class.v8::PersistentBase.1134" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1104", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1104" = type { %"class.std::__1::__hash_table.1105" }
%"class.std::__1::__hash_table.1105" = type <{ %"class.std::__1::unique_ptr.1106", %"class.std::__1::__compressed_pair.1116", %"class.std::__1::__compressed_pair.1121", %"class.std::__1::__compressed_pair.1124", [4 x i8] }>
%"class.std::__1::unique_ptr.1106" = type { %"class.std::__1::__compressed_pair.1107" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.1108", %"struct.std::__1::__compressed_pair_elem.1110" }
%"struct.std::__1::__compressed_pair_elem.1108" = type { %"struct.std::__1::__hash_node_base.1109"** }
%"struct.std::__1::__hash_node_base.1109" = type { %"struct.std::__1::__hash_node_base.1109"* }
%"struct.std::__1::__compressed_pair_elem.1110" = type { %"class.std::__1::__bucket_list_deallocator.1111" }
%"class.std::__1::__bucket_list_deallocator.1111" = type { %"class.std::__1::__compressed_pair.1112" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1116" = type { %"struct.std::__1::__compressed_pair_elem.1117" }
%"struct.std::__1::__compressed_pair_elem.1117" = type { %"struct.std::__1::__hash_node_base.1109" }
%"class.std::__1::__compressed_pair.1121" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1124" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1135" = type { %"class.std::__1::__compressed_pair.1136" }
%"class.std::__1::__compressed_pair.1136" = type { %"struct.std::__1::__compressed_pair_elem.1137" }
%"struct.std::__1::__compressed_pair_elem.1137" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1164", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1164" = type { %"class.std::__1::__compressed_pair.1165" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1173" = type { %"class.std::__1::__compressed_pair.1174" }
%"class.std::__1::__compressed_pair.1174" = type { %"struct.std::__1::__compressed_pair_elem.1175" }
%"struct.std::__1::__compressed_pair_elem.1175" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.934", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.934" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1181" }
%"class.std::__1::unordered_map.1181" = type { %"class.std::__1::__hash_table.1182" }
%"class.std::__1::__hash_table.1182" = type <{ %"class.std::__1::unique_ptr.1183", %"class.std::__1::__compressed_pair.1193", %"class.std::__1::__compressed_pair.1198", %"class.std::__1::__compressed_pair.1201", [4 x i8] }>
%"class.std::__1::unique_ptr.1183" = type { %"class.std::__1::__compressed_pair.1184" }
%"class.std::__1::__compressed_pair.1184" = type { %"struct.std::__1::__compressed_pair_elem.1185", %"struct.std::__1::__compressed_pair_elem.1187" }
%"struct.std::__1::__compressed_pair_elem.1185" = type { %"struct.std::__1::__hash_node_base.1186"** }
%"struct.std::__1::__hash_node_base.1186" = type { %"struct.std::__1::__hash_node_base.1186"* }
%"struct.std::__1::__compressed_pair_elem.1187" = type { %"class.std::__1::__bucket_list_deallocator.1188" }
%"class.std::__1::__bucket_list_deallocator.1188" = type { %"class.std::__1::__compressed_pair.1189" }
%"class.std::__1::__compressed_pair.1189" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1193" = type { %"struct.std::__1::__compressed_pair_elem.1194" }
%"struct.std::__1::__compressed_pair_elem.1194" = type { %"struct.std::__1::__hash_node_base.1186" }
%"class.std::__1::__compressed_pair.1198" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1207" = type { %"struct.std::__1::__atomic_base.1208" }
%"struct.std::__1::__atomic_base.1208" = type { %"struct.std::__1::__cxx_atomic_impl.1209" }
%"struct.std::__1::__cxx_atomic_impl.1209" = type { %"struct.std::__1::__cxx_atomic_base_impl.1210" }
%"struct.std::__1::__cxx_atomic_base_impl.1210" = type { %"class.std::__1::vector.1211"* }
%"class.std::__1::vector.1211" = type { %"class.std::__1::__vector_base.1212" }
%"class.std::__1::__vector_base.1212" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1213" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1213" = type { %"struct.std::__1::__compressed_pair_elem.1214" }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"struct.v8::MemoryRange"* }
%"class.v8::internal::Handle.54" = type { %"class.v8::internal::HandleBase" }
%union.anon.1218 = type { i8*, [8 x i8] }
%"struct.v8::internal::wasm::LiftoffAssembler::CacheState" = type <{ %"class.v8::base::SmallVector", %"class.v8::internal::wasm::LiftoffRegList", [18 x i32], %"class.v8::internal::wasm::LiftoffRegList", %"class.v8::internal::Register", [4 x i8] }>
%"class.v8::base::SmallVector" = type { %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"struct.std::__1::aligned_storage<96, 4>::type" }
%"class.v8::internal::wasm::LiftoffAssembler::VarState" = type { i8, i8, %union.anon, i32 }
%union.anon = type { i32 }
%"struct.std::__1::aligned_storage<96, 4>::type" = type { [96 x i8] }
%"class.v8::internal::Register" = type { %"class.v8::internal::RegisterBase" }
%"class.v8::internal::RegisterBase" = type { i32 }
%"class.v8::internal::AssemblerBuffer" = type { i32 (...)** }
%"class.v8::internal::wasm::(anonymous namespace)::RegisterReuseMap" = type { %"class.v8::base::SmallVector.1233" }
%"class.v8::base::SmallVector.1233" = type { %"class.v8::internal::wasm::LiftoffRegister"*, %"class.v8::internal::wasm::LiftoffRegister"*, %"class.v8::internal::wasm::LiftoffRegister"*, %"struct.std::__1::aligned_storage<8, 1>::type" }
%"class.v8::internal::wasm::LiftoffRegister" = type { i8 }
%"struct.std::__1::aligned_storage<8, 1>::type" = type { [8 x i8] }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.0" }
%"struct.std::__1::__compressed_pair_elem.0" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::Safepoint" = type { %"class.v8::internal::ZoneChunkList"*, i32* }
%"class.v8::internal::ZoneChunkList" = type { %"class.v8::internal::Zone"*, i64, %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"* }
%"struct.v8::internal::ZoneChunkList<int>::Chunk" = type { i32, i32, %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"* }
%"class.v8::internal::TurboAssemblerBase" = type <{ %"class.v8::internal::Assembler", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.54", i8, i8, i8, i8, i32, i8, [7 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1240" }
%"struct.std::__1::pair.1240" = type <{ i64, i32, [4 x i8] }>
%"class.std::__1::__tree_node.1241" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1242" }
%"struct.std::__1::__value_type.1242" = type { %"struct.std::__1::pair.1243" }
%"struct.std::__1::pair.1243" = type { %"class.v8::internal::Label"*, %"class.std::__1::vector.919" }
%"class.v8::internal::Label" = type { i32, i32 }
%"class.v8::internal::TurboAssembler" = type { %"class.v8::internal::SharedTurboAssembler.base", [7 x i8] }
%"class.v8::internal::SharedTurboAssembler" = type { %"class.v8::internal::TurboAssemblerBase.base", [7 x i8] }
%"class.v8::internal::Vector.1219" = type { %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, i64 }
%"class.v8::internal::wasm::WasmValue" = type { %"class.v8::internal::wasm::ValueType", [16 x i8] }
%"class.v8::internal::wasm::ValueType" = type { i32 }
%"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe" = type { %"struct.std::__1::aligned_storage<36, 1>::type", %"struct.std::__1::aligned_storage<144, 4>::type", [18 x i32], %"class.v8::internal::wasm::LiftoffRegList", %"class.v8::internal::wasm::LiftoffRegList", %"class.v8::internal::wasm::LiftoffAssembler"* }
%"struct.std::__1::aligned_storage<36, 1>::type" = type { [36 x i8] }
%"struct.std::__1::aligned_storage<144, 4>::type" = type { [144 x i8] }
%"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad" = type { i8, i8, i32 }
%"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove" = type { %"class.v8::internal::wasm::LiftoffRegister", i8 }
%"class.v8::internal::Signature" = type { i64, i64, i8* }
%"class.v8::internal::compiler::CallDescriptor" = type { i32, %"class.v8::internal::MachineType", [2 x i8], %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::Signature.1221"*, i64, i64, %"class.v8::base::Flags", i32, i32, i32, %"class.v8::base::Flags.1222", i32, i8*, %"class.v8::CFunctionInfo"* }
%"class.v8::internal::MachineType" = type { i8, i8 }
%"class.v8::internal::compiler::LinkageLocation" = type <{ i32, %"class.v8::internal::MachineType", [2 x i8] }>
%"class.v8::internal::Signature.1221" = type { i64, i64, %"class.v8::internal::compiler::LinkageLocation"* }
%"class.v8::base::Flags" = type { i8 }
%"class.v8::base::Flags.1222" = type { i32 }
%"class.v8::CFunctionInfo" = type opaque
%"class.v8::internal::wasm::LiftoffStackSlots" = type { %"class.v8::base::SmallVector.1224", %"class.v8::internal::wasm::LiftoffAssembler"* }
%"class.v8::base::SmallVector.1224" = type { %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %"struct.std::__1::aligned_storage<192, 4>::type" }
%"struct.v8::internal::wasm::LiftoffStackSlots::Slot" = type { %"class.v8::internal::wasm::LiftoffAssembler::VarState", i32, i8, i32 }
%"struct.std::__1::aligned_storage<192, 4>::type" = type { [192 x i8] }
%class.anon = type { i8 }
%"struct.v8::internal::wasm::LiftoffAssembler::ParallelRegisterMoveTuple" = type { %"class.v8::internal::wasm::LiftoffRegister", %"class.v8::internal::wasm::LiftoffRegister", i8 }
%"class.v8::internal::Signature.1227" = type { i64, i64, %"class.v8::internal::wasm::ValueType"* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.v8::internal::ExternalReference" = type { i64 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_9WasmValueE = comdat any

$_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_15LiftoffRegisterENS1_9ValueKindE = comdat any

$_ZN2v88internal4wasm17LiftoffStackSlots9ConstructEi = comdat any

$_ZN2v88internal13AssemblerBase21AbortedCodeGenerationEv = comdat any

$_ZN2v84base11SmallVectorINS_8internal4wasm15LiftoffRegisterELm8EE4GrowEv = comdat any

$_ZN2v84base11SmallVectorINS_8internal4wasm15LiftoffRegisterELm8EE4GrowEm = comdat any

$_ZN2v88internal13ZoneChunkListIiE9push_backERKi = comdat any

$_ZNSt3__112__deque_baseIiNS_9allocatorIiEEED2Ev = comdat any

$_ZN2v88internal9AssemblerD2Ev = comdat any

$_ZN2v88internal9AssemblerD0Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeImiEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPN2v88internal5LabelENS_6vectorIiNS_9allocatorIiEEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

$_ZN2v88internal14TurboAssembler4MoveENS0_8RegisterEl = comdat any

$_ZN2v88internal4wasm7liftoff4LoadEPNS1_16LiftoffAssemblerENS1_15LiftoffRegisterENS0_7OperandENS1_9ValueKindE = comdat any

$_ZN2v84base11SmallVectorINS_8internal4wasm17LiftoffStackSlots4SlotELm8EE4GrowEv = comdat any

$_ZN2v84base11SmallVectorINS_8internal4wasm17LiftoffStackSlots4SlotELm8EE4GrowEm = comdat any

$_ZN2v88internal4wasm7liftoff4pushEPNS1_16LiftoffAssemblerENS1_15LiftoffRegisterENS1_9ValueKindEi = comdat any

$_ZNSt3__16__sortIRZN2v88internal4wasm17LiftoffStackSlots15SortInPushOrderEvEUlRKNS4_4SlotES7_E_PS5_EEvT0_SB_T_ = comdat any

$_ZNSt3__17__sort4IRZN2v88internal4wasm17LiftoffStackSlots15SortInPushOrderEvEUlRKNS4_4SlotES7_E_PS5_EEjT0_SB_SB_SB_T_ = comdat any

$_ZNSt3__127__insertion_sort_incompleteIRZN2v88internal4wasm17LiftoffStackSlots15SortInPushOrderEvEUlRKNS4_4SlotES7_E_PS5_EEbT0_SB_T_ = comdat any

$_ZN2v84base11SmallVectorINS_8internal4wasm16LiftoffAssembler8VarStateELm8EE4GrowEv = comdat any

$_ZN2v84base11SmallVectorINS_8internal4wasm16LiftoffAssembler8VarStateELm8EE4GrowEm = comdat any

$_ZN2v88internal4wasm7liftoff5StoreEPNS1_16LiftoffAssemblerENS0_7OperandENS1_15LiftoffRegisterENS1_9ValueKindE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZTVN2v88internal9AssemblerE = comdat any

$_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names = comdat any

$_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names = comdat any

@_ZN2v88internal4wasm16LiftoffAssembler12kPointerKindE = hidden local_unnamed_addr constant i8 2, align 1
@_ZN2v88internal4wasm16LiftoffAssembler11kTaggedKindE = hidden local_unnamed_addr constant i8 1, align 1
@_ZN2v88internal4wasm16LiftoffAssembler8kSmiKindE = hidden local_unnamed_addr constant i8 1, align 1
@_ZTVN2v88internal4wasm16LiftoffAssemblerE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::wasm::LiftoffAssembler"*)* @_ZN2v88internal4wasm16LiftoffAssemblerD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::wasm::LiftoffAssembler"*)* @_ZN2v88internal4wasm16LiftoffAssemblerD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::AssemblerBase"*)* @_ZN2v88internal13AssemblerBase21AbortedCodeGenerationEv to i8*), i8* bitcast (void (%"class.v8::internal::TurboAssembler"*, %"class.v8::internal::ExternalReference"*)* @_ZN2v88internal14TurboAssembler4JumpERKNS0_17ExternalReferenceE to i8*), i8* bitcast (void (%"class.v8::internal::TurboAssembler"*, i32)* @_ZN2v88internal14TurboAssembler18CallBuiltinByIndexENS0_8RegisterE to i8*), i8* bitcast (void (%"class.v8::internal::TurboAssembler"*, i32)* @_ZN2v88internal14TurboAssembler14CallCodeObjectENS0_8RegisterE to i8*), i8* bitcast (void (%"class.v8::internal::TurboAssembler"*, i32, i32)* @_ZN2v88internal14TurboAssembler14JumpCodeObjectENS0_8RegisterENS0_8JumpModeE to i8*), i8* bitcast (void (%"class.v8::internal::TurboAssembler"*, i32, i32)* @_ZN2v88internal14TurboAssembler19LoadCodeObjectEntryENS0_8RegisterES2_ to i8*), i8* bitcast (void (%"class.v8::internal::TurboAssembler"*, i32, i32)* @_ZN2v88internal14TurboAssembler22LoadFromConstantsTableENS0_8RegisterEi to i8*), i8* bitcast (void (%"class.v8::internal::TurboAssembler"*, i32, i64)* @_ZN2v88internal14TurboAssembler22LoadRootRegisterOffsetENS0_8RegisterEl to i8*), i8* bitcast (void (%"class.v8::internal::TurboAssembler"*, i32, i32)* @_ZN2v88internal14TurboAssembler16LoadRootRelativeENS0_8RegisterEi to i8*), i8* bitcast (void (%"class.v8::internal::TurboAssembler"*, i32, i16)* @_ZN2v88internal14TurboAssembler8LoadRootENS0_8RegisterENS0_9RootIndexE to i8*), i8* bitcast (void (%"class.v8::internal::TurboAssembler"*)* @_ZN2v88internal14TurboAssembler4TrapEv to i8*), i8* bitcast (void (%"class.v8::internal::TurboAssembler"*)* @_ZN2v88internal14TurboAssembler10DebugBreakEv to i8*)] }, align 8
@_ZN2v88internal4wasmL15kGpCacheRegListE = internal unnamed_addr constant %"class.v8::internal::wasm::LiftoffRegList" { i32 719 }, align 4
@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"kNeedS128RegPair\00", align 1
@_ZN2v88internal4wasmL15kFpCacheRegListE = internal unnamed_addr constant %"class.v8::internal::wasm::LiftoffRegList" { i32 261120 }, align 4
@.str.2 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.7 = private unnamed_addr constant [53 x i8] c"Fatal process out of memory: base::SmallVector::Grow\00", align 1
@_ZTVN2v88internal9AssemblerE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::Assembler"*)* @_ZN2v88internal9AssemblerD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::Assembler"*)* @_ZN2v88internal9AssemblerD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::AssemblerBase"*)* @_ZN2v88internal13AssemblerBase21AbortedCodeGenerationEv to i8*)] }, comdat, align 8
@_ZN2v88internal11CpuFeatures10supported_E = external local_unnamed_addr global i32, align 4
@_ZZN2v88internal4wasm18element_size_bytesENS1_9ValueKindEE12kElementSize = internal unnamed_addr constant [13 x i8] c"\FF\04\08\04\08\10\01\02\04\04\04\04\FF", align 1
@_ZZN2v88internal4wasm4nameENS1_9ValueKindEE9kKindName = internal unnamed_addr constant [13 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i32 0, i32 0)], align 16
@.str.17 = private unnamed_addr constant [7 x i8] c"<void>\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"i32\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"i64\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"f32\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"f64\00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c"s128\00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c"i8\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"i16\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"rtt\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"ref\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"ref null\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"<bot>\00", align 1
@_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names = linkonce_odr hidden local_unnamed_addr constant [16 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i32 0, i32 0)], comdat, align 16
@.str.29 = private unnamed_addr constant [4 x i8] c"rax\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"rcx\00", align 1
@.str.31 = private unnamed_addr constant [4 x i8] c"rdx\00", align 1
@.str.32 = private unnamed_addr constant [4 x i8] c"rbx\00", align 1
@.str.33 = private unnamed_addr constant [4 x i8] c"rsp\00", align 1
@.str.34 = private unnamed_addr constant [4 x i8] c"rbp\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"rsi\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"rdi\00", align 1
@.str.37 = private unnamed_addr constant [3 x i8] c"r8\00", align 1
@.str.38 = private unnamed_addr constant [3 x i8] c"r9\00", align 1
@.str.39 = private unnamed_addr constant [4 x i8] c"r10\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"r11\00", align 1
@.str.41 = private unnamed_addr constant [4 x i8] c"r12\00", align 1
@.str.42 = private unnamed_addr constant [4 x i8] c"r13\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c"r14\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"r15\00", align 1
@.str.45 = private unnamed_addr constant [8 x i8] c"invalid\00", align 1
@_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names = linkonce_odr hidden local_unnamed_addr constant [16 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.61, i32 0, i32 0)], comdat, align 16
@.str.46 = private unnamed_addr constant [5 x i8] c"xmm0\00", align 1
@.str.47 = private unnamed_addr constant [5 x i8] c"xmm1\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"xmm2\00", align 1
@.str.49 = private unnamed_addr constant [5 x i8] c"xmm3\00", align 1
@.str.50 = private unnamed_addr constant [5 x i8] c"xmm4\00", align 1
@.str.51 = private unnamed_addr constant [5 x i8] c"xmm5\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"xmm6\00", align 1
@.str.53 = private unnamed_addr constant [5 x i8] c"xmm7\00", align 1
@.str.54 = private unnamed_addr constant [5 x i8] c"xmm8\00", align 1
@.str.55 = private unnamed_addr constant [5 x i8] c"xmm9\00", align 1
@.str.56 = private unnamed_addr constant [6 x i8] c"xmm10\00", align 1
@.str.57 = private unnamed_addr constant [6 x i8] c"xmm11\00", align 1
@.str.58 = private unnamed_addr constant [6 x i8] c"xmm12\00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"xmm13\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"xmm14\00", align 1
@.str.61 = private unnamed_addr constant [6 x i8] c"xmm15\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@switch.table._ZN2v88internal4wasm16LiftoffAssembler10FinishCallEPKNS0_9SignatureINS1_9ValueKindEEEPNS0_8compiler14CallDescriptorE = private unnamed_addr constant [11 x i8] c"\00\00\01\01\01\00\00\00\00\00\00", align 1

@_ZN2v88internal4wasm16LiftoffAssemblerC1ENSt3__110unique_ptrINS0_15AssemblerBufferENS3_14default_deleteIS5_EEEE = hidden unnamed_addr alias void (%"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::AssemblerBuffer"*), void (%"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::AssemblerBuffer"*)* @_ZN2v88internal4wasm16LiftoffAssemblerC2ENSt3__110unique_ptrINS0_15AssemblerBufferENS3_14default_deleteIS5_EEEE
@_ZN2v88internal4wasm16LiftoffAssemblerD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::wasm::LiftoffAssembler"*), void (%"class.v8::internal::wasm::LiftoffAssembler"*)* @_ZN2v88internal4wasm16LiftoffAssemblerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler10CacheState9InitMergeERKS3_jjj(%"struct.v8::internal::wasm::LiftoffAssembler::CacheState"*, %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* nocapture readonly dereferenceable(208), i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1, i64 0, i32 4, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %18, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 4, i32 0, i32 0
  store i32 %7, i32* %10, align 8
  %11 = and i32 %7, 255
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 2, i64 %12
  store i32 1, i32* %13, align 4
  %14 = shl i32 1, %11
  %15 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 1, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = or i32 %16, %14
  store i32 %17, i32* %15, align 4
  br label %18

18:                                               ; preds = %5, %9
  %19 = add i32 %4, %2
  %20 = add i32 %19, %3
  %21 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1, i64 0, i32 0, i32 1
  %22 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = sdiv exact i64 %26, 12
  %28 = trunc i64 %27 to i32
  %29 = sub i32 %28, %20
  %30 = zext i32 %20 to i64
  %31 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 0, i32 2
  %32 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = sdiv exact i64 %36, 12
  %38 = icmp ult i64 %37, %30
  %39 = inttoptr i64 %35 to %"class.v8::internal::wasm::LiftoffAssembler::VarState"*
  br i1 %38, label %40, label %45

40:                                               ; preds = %18
  %41 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 0
  %42 = tail call %"class.v8::internal::wasm::LiftoffAssembler::VarState"* @_ZN2v84base11SmallVectorINS_8internal4wasm16LiftoffAssembler8VarStateELm8EE4GrowEm(%"class.v8::base::SmallVector"* %41, i64 %30) #15
  %43 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 0, i32 0
  %44 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %43, align 8
  br label %45

45:                                               ; preds = %18, %40
  %46 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %44, %40 ], [ %39, %18 ]
  %47 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i64 %30
  %48 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 0, i32 1
  store %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %47, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %48, align 8
  %49 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1, i64 0, i32 0, i32 0
  %50 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %49, align 8
  %51 = zext i32 %2 to i64
  %52 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %50, i64 %51
  %53 = icmp eq i32 %2, 0
  br i1 %53, label %54, label %63

54:                                               ; preds = %76, %45
  %55 = phi i32 [ 0, %45 ], [ %77, %76 ]
  %56 = zext i32 %19 to i64
  %57 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %50, i64 %56
  %58 = zext i32 %29 to i64
  %59 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %57, i64 %58
  %60 = zext i32 %3 to i64
  %61 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %59, i64 %60
  %62 = icmp eq i32 %3, 0
  br i1 %62, label %80, label %85

63:                                               ; preds = %45, %76
  %64 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %78, %76 ], [ %50, %45 ]
  %65 = phi i32 [ %77, %76 ], [ 0, %45 ]
  %66 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %64, i64 0, i32 0
  %67 = load i8, i8* %66, align 4
  %68 = icmp eq i8 %67, 1
  br i1 %68, label %69, label %76

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %64, i64 0, i32 2
  %71 = bitcast %union.anon* %70 to i8*
  %72 = load i8, i8* %71, align 4
  %73 = zext i8 %72 to i32
  %74 = shl i32 1, %73
  %75 = or i32 %74, %65
  br label %76

76:                                               ; preds = %69, %63
  %77 = phi i32 [ %75, %69 ], [ %65, %63 ]
  %78 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %64, i64 1
  %79 = icmp eq %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %78, %52
  br i1 %79, label %54, label %63

80:                                               ; preds = %98, %54
  %81 = phi i32 [ %55, %54 ], [ %99, %98 ]
  %82 = icmp eq i32 %29, 0
  %83 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i64 %56
  tail call fastcc void @_ZN2v88internal4wasm12_GLOBAL__N_115InitMergeRegionEPNS1_16LiftoffAssembler10CacheStateEPKNS3_8VarStateEPS6_jNS2_19MergeKeepStackSlotsENS2_19MergeAllowConstantsENS2_14ReuseRegistersENS1_14LiftoffRegListE(%"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %59, %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %83, i32 %3, i1 zeroext %82, i1 zeroext false, i1 zeroext false, i32 %81)
  tail call fastcc void @_ZN2v88internal4wasm12_GLOBAL__N_115InitMergeRegionEPNS1_16LiftoffAssembler10CacheStateEPKNS3_8VarStateEPS6_jNS2_19MergeKeepStackSlotsENS2_19MergeAllowConstantsENS2_14ReuseRegistersENS1_14LiftoffRegListE(%"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %50, %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i32 %2, i1 zeroext true, i1 zeroext false, i1 zeroext false, i32 %81)
  %84 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i64 %51
  tail call fastcc void @_ZN2v88internal4wasm12_GLOBAL__N_115InitMergeRegionEPNS1_16LiftoffAssembler10CacheStateEPKNS3_8VarStateEPS6_jNS2_19MergeKeepStackSlotsENS2_19MergeAllowConstantsENS2_14ReuseRegistersENS1_14LiftoffRegListE(%"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %52, %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %84, i32 %4, i1 zeroext true, i1 zeroext true, i1 zeroext true, i32 %81)
  ret void

85:                                               ; preds = %54, %98
  %86 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %100, %98 ], [ %59, %54 ]
  %87 = phi i32 [ %99, %98 ], [ %55, %54 ]
  %88 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %86, i64 0, i32 0
  %89 = load i8, i8* %88, align 4
  %90 = icmp eq i8 %89, 1
  br i1 %90, label %91, label %98

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %86, i64 0, i32 2
  %93 = bitcast %union.anon* %92 to i8*
  %94 = load i8, i8* %93, align 4
  %95 = zext i8 %94 to i32
  %96 = shl i32 1, %95
  %97 = or i32 %96, %87
  br label %98

98:                                               ; preds = %91, %85
  %99 = phi i32 [ %97, %91 ], [ %87, %85 ]
  %100 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %86, i64 1
  %101 = icmp eq %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %100, %61
  br i1 %101, label %80, label %85
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal4wasm12_GLOBAL__N_115InitMergeRegionEPNS1_16LiftoffAssembler10CacheStateEPKNS3_8VarStateEPS6_jNS2_19MergeKeepStackSlotsENS2_19MergeAllowConstantsENS2_14ReuseRegistersENS1_14LiftoffRegListE(%"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* nocapture, %"class.v8::internal::wasm::LiftoffAssembler::VarState"* readonly, %"class.v8::internal::wasm::LiftoffAssembler::VarState"* nocapture, i32, i1 zeroext, i1 zeroext, i1 zeroext, i32) unnamed_addr #0 {
  %9 = alloca %"class.v8::internal::wasm::(anonymous namespace)::RegisterReuseMap", align 8
  %10 = alloca [6 x i8], align 2
  %11 = alloca [3 x i8], align 1
  %12 = bitcast %"class.v8::internal::wasm::(anonymous namespace)::RegisterReuseMap"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::RegisterReuseMap", %"class.v8::internal::wasm::(anonymous namespace)::RegisterReuseMap"* %9, i64 0, i32 0, i32 3
  %14 = bitcast %"class.v8::internal::wasm::(anonymous namespace)::RegisterReuseMap"* %9 to %"struct.std::__1::aligned_storage<8, 1>::type"**
  store %"struct.std::__1::aligned_storage<8, 1>::type"* %13, %"struct.std::__1::aligned_storage<8, 1>::type"** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::RegisterReuseMap", %"class.v8::internal::wasm::(anonymous namespace)::RegisterReuseMap"* %9, i64 0, i32 0, i32 1
  %16 = bitcast %"class.v8::internal::wasm::LiftoffRegister"** %15 to %"struct.std::__1::aligned_storage<8, 1>::type"**
  store %"struct.std::__1::aligned_storage<8, 1>::type"* %13, %"struct.std::__1::aligned_storage<8, 1>::type"** %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::RegisterReuseMap", %"class.v8::internal::wasm::(anonymous namespace)::RegisterReuseMap"* %9, i64 0, i32 0, i32 2
  %18 = getelementptr inbounds %"struct.std::__1::aligned_storage<8, 1>::type", %"struct.std::__1::aligned_storage<8, 1>::type"* %13, i64 1
  %19 = bitcast %"class.v8::internal::wasm::LiftoffRegister"** %17 to %"struct.std::__1::aligned_storage<8, 1>::type"**
  store %"struct.std::__1::aligned_storage<8, 1>::type"* %18, %"struct.std::__1::aligned_storage<8, 1>::type"** %19, align 8
  %20 = zext i32 %3 to i64
  %21 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %1, i64 %20
  %22 = icmp eq i32 %3, 0
  %23 = bitcast %"struct.std::__1::aligned_storage<8, 1>::type"* %13 to %"class.v8::internal::wasm::LiftoffRegister"*
  br i1 %22, label %39, label %24

24:                                               ; preds = %8
  %25 = xor i1 %4, true
  %26 = xor i1 %5, true
  %27 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 1, i32 0
  %28 = xor i1 %6, true
  %29 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::RegisterReuseMap", %"class.v8::internal::wasm::(anonymous namespace)::RegisterReuseMap"* %9, i64 0, i32 0, i32 0
  %30 = xor i32 %7, -1
  %31 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::RegisterReuseMap", %"class.v8::internal::wasm::(anonymous namespace)::RegisterReuseMap"* %9, i64 0, i32 0
  %32 = getelementptr inbounds [3 x i8], [3 x i8]* %11, i64 0, i64 0
  %33 = getelementptr inbounds [6 x i8], [6 x i8]* %10, i64 0, i64 0
  br label %40

34:                                               ; preds = %171
  %35 = load %"class.v8::internal::wasm::LiftoffRegister"*, %"class.v8::internal::wasm::LiftoffRegister"** %29, align 8
  %36 = icmp eq %"class.v8::internal::wasm::LiftoffRegister"* %35, %23
  br i1 %36, label %39, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegister", %"class.v8::internal::wasm::LiftoffRegister"* %35, i64 0, i32 0
  call void @free(i8* %38) #15
  br label %39

39:                                               ; preds = %8, %34, %37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #15
  ret void

40:                                               ; preds = %24, %171
  %41 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %1, %24 ], [ %172, %171 ]
  %42 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %2, %24 ], [ %173, %171 ]
  %43 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %41, i64 0, i32 0
  %44 = load i8, i8* %43, align 4
  %45 = icmp ne i8 %44, 0
  %46 = or i1 %45, %25
  %47 = icmp ne i8 %44, 2
  %48 = or i1 %47, %26
  %49 = and i1 %46, %48
  br i1 %49, label %52, label %50

50:                                               ; preds = %40
  %51 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %42, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %43, i64 12, i1 false)
  br label %171

52:                                               ; preds = %40
  %53 = icmp eq i8 %44, 1
  br i1 %53, label %54, label %65

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %41, i64 0, i32 2
  %56 = bitcast %union.anon* %55 to i8*
  %57 = load i8, i8* %56, align 4
  %58 = load i32, i32* %27, align 4
  %59 = zext i8 %57 to i32
  %60 = shl i32 1, %59
  %61 = and i32 %60, %58
  %62 = icmp eq i32 %61, 0
  %63 = or i1 %62, %28
  %64 = select i1 %62, i8 %57, i8 0
  br i1 %63, label %86, label %70

65:                                               ; preds = %52
  br i1 %6, label %66, label %86

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %41, i64 0, i32 2
  %68 = bitcast %union.anon* %67 to i8*
  %69 = load i8, i8* %68, align 4
  br label %70

70:                                               ; preds = %66, %54
  %71 = phi i8 [ %69, %66 ], [ %57, %54 ]
  %72 = load %"class.v8::internal::wasm::LiftoffRegister"*, %"class.v8::internal::wasm::LiftoffRegister"** %29, align 8
  %73 = load %"class.v8::internal::wasm::LiftoffRegister"*, %"class.v8::internal::wasm::LiftoffRegister"** %15, align 8
  %74 = icmp eq %"class.v8::internal::wasm::LiftoffRegister"* %72, %73
  br i1 %74, label %86, label %75

75:                                               ; preds = %70, %80
  %76 = phi %"class.v8::internal::wasm::LiftoffRegister"* [ %81, %80 ], [ %72, %70 ]
  %77 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegister", %"class.v8::internal::wasm::LiftoffRegister"* %76, i64 0, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp eq i8 %78, %71
  br i1 %79, label %83, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegister", %"class.v8::internal::wasm::LiftoffRegister"* %76, i64 2
  %82 = icmp eq %"class.v8::internal::wasm::LiftoffRegister"* %81, %73
  br i1 %82, label %86, label %75

83:                                               ; preds = %75
  %84 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegister", %"class.v8::internal::wasm::LiftoffRegister"* %76, i64 1, i32 0
  %85 = load i8, i8* %84, align 1
  br label %86

86:                                               ; preds = %80, %83, %70, %54, %65
  %87 = phi i1 [ false, %65 ], [ %62, %54 ], [ true, %83 ], [ false, %70 ], [ false, %80 ]
  %88 = phi i8 [ 0, %65 ], [ %64, %54 ], [ %85, %83 ], [ 0, %70 ], [ 0, %80 ]
  %89 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %41, i64 0, i32 1
  %90 = load i8, i8* %89, align 1
  %91 = add i8 %90, -1
  %92 = icmp ult i8 %91, 11
  br i1 %92, label %93, label %97

93:                                               ; preds = %86
  %94 = sext i8 %91 to i64
  %95 = getelementptr inbounds [11 x i8], [11 x i8]* @switch.table._ZN2v88internal4wasm16LiftoffAssembler10FinishCallEPKNS0_9SignatureINS1_9ValueKindEEEPNS0_8compiler14CallDescriptorE, i64 0, i64 %94
  %96 = load i8, i8* %95, align 1
  br label %97

97:                                               ; preds = %86, %93
  %98 = phi i8 [ %96, %93 ], [ 2, %86 ]
  br i1 %87, label %119, label %99

99:                                               ; preds = %97
  %100 = icmp eq i8 %98, 1
  %101 = select i1 %100, %"class.v8::internal::wasm::LiftoffRegList"* @_ZN2v88internal4wasmL15kFpCacheRegListE, %"class.v8::internal::wasm::LiftoffRegList"* @_ZN2v88internal4wasmL15kGpCacheRegListE
  %102 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegList", %"class.v8::internal::wasm::LiftoffRegList"* %101, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = and i32 %103, %30
  %105 = load i32, i32* %27, align 8
  %106 = xor i32 %105, -1
  %107 = and i32 %104, %106
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %112, label %109

109:                                              ; preds = %99
  %110 = call i32 @llvm.cttz.i32(i32 %107, i1 false) #15, !range !2
  %111 = trunc i32 %110 to i8
  br label %119

112:                                              ; preds = %99
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %33)
  %113 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %41, i64 0, i32 3
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %42, i64 0, i32 0
  store i8 0, i8* %115, align 4
  %116 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %42, i64 0, i32 1
  store i8 %90, i8* %116, align 1
  %117 = getelementptr inbounds i8, i8* %115, i64 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %117, i8* nonnull align 2 %33, i64 6, i1 false)
  %118 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %42, i64 0, i32 3
  store i32 %114, i32* %118, align 4
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %33)
  br label %171

119:                                              ; preds = %97, %109
  %120 = phi i8 [ %111, %109 ], [ %88, %97 ]
  br i1 %6, label %121, label %153

121:                                              ; preds = %119
  %122 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %41, i64 0, i32 2
  %123 = bitcast %union.anon* %122 to i8*
  %124 = load i8, i8* %123, align 4
  %125 = load %"class.v8::internal::wasm::LiftoffRegister"*, %"class.v8::internal::wasm::LiftoffRegister"** %29, align 8
  %126 = load %"class.v8::internal::wasm::LiftoffRegister"*, %"class.v8::internal::wasm::LiftoffRegister"** %15, align 8
  %127 = icmp eq %"class.v8::internal::wasm::LiftoffRegister"* %125, %126
  br i1 %127, label %136, label %128

128:                                              ; preds = %121, %133
  %129 = phi %"class.v8::internal::wasm::LiftoffRegister"* [ %134, %133 ], [ %125, %121 ]
  %130 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegister", %"class.v8::internal::wasm::LiftoffRegister"* %129, i64 0, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = icmp eq i8 %131, %124
  br i1 %132, label %153, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegister", %"class.v8::internal::wasm::LiftoffRegister"* %129, i64 2
  %135 = icmp eq %"class.v8::internal::wasm::LiftoffRegister"* %134, %126
  br i1 %135, label %136, label %128

136:                                              ; preds = %133, %121
  %137 = load %"class.v8::internal::wasm::LiftoffRegister"*, %"class.v8::internal::wasm::LiftoffRegister"** %17, align 8
  %138 = icmp eq %"class.v8::internal::wasm::LiftoffRegister"* %126, %137
  br i1 %138, label %139, label %141, !prof !3

139:                                              ; preds = %136
  %140 = call %"class.v8::internal::wasm::LiftoffRegister"* @_ZN2v84base11SmallVectorINS_8internal4wasm15LiftoffRegisterELm8EE4GrowEv(%"class.v8::base::SmallVector.1233"* nonnull %31) #15
  br label %141

141:                                              ; preds = %139, %136
  %142 = phi %"class.v8::internal::wasm::LiftoffRegister"* [ %140, %139 ], [ %126, %136 ]
  %143 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegister", %"class.v8::internal::wasm::LiftoffRegister"* %142, i64 0, i32 0
  store i8 %124, i8* %143, align 1
  %144 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegister", %"class.v8::internal::wasm::LiftoffRegister"* %142, i64 1
  store %"class.v8::internal::wasm::LiftoffRegister"* %144, %"class.v8::internal::wasm::LiftoffRegister"** %15, align 8
  %145 = load %"class.v8::internal::wasm::LiftoffRegister"*, %"class.v8::internal::wasm::LiftoffRegister"** %17, align 8
  %146 = icmp eq %"class.v8::internal::wasm::LiftoffRegister"* %144, %145
  br i1 %146, label %147, label %149, !prof !3

147:                                              ; preds = %141
  %148 = call %"class.v8::internal::wasm::LiftoffRegister"* @_ZN2v84base11SmallVectorINS_8internal4wasm15LiftoffRegisterELm8EE4GrowEv(%"class.v8::base::SmallVector.1233"* nonnull %31) #15
  br label %149

149:                                              ; preds = %147, %141
  %150 = phi %"class.v8::internal::wasm::LiftoffRegister"* [ %148, %147 ], [ %144, %141 ]
  %151 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegister", %"class.v8::internal::wasm::LiftoffRegister"* %150, i64 0, i32 0
  store i8 %120, i8* %151, align 1
  %152 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegister", %"class.v8::internal::wasm::LiftoffRegister"* %150, i64 1
  store %"class.v8::internal::wasm::LiftoffRegister"* %152, %"class.v8::internal::wasm::LiftoffRegister"** %15, align 8
  br label %153

153:                                              ; preds = %128, %149, %119
  %154 = zext i8 %120 to i32
  %155 = shl i32 1, %154
  %156 = load i32, i32* %27, align 4
  %157 = or i32 %156, %155
  store i32 %157, i32* %27, align 4
  %158 = zext i8 %120 to i64
  %159 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 2, i64 %158
  %160 = load i32, i32* %159, align 4
  %161 = add i32 %160, 1
  store i32 %161, i32* %159, align 4
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %32)
  %162 = load i8, i8* %89, align 1
  %163 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %41, i64 0, i32 3
  %164 = load i32, i32* %163, align 4
  %165 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %42, i64 0, i32 0
  store i8 1, i8* %165, align 4
  %166 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %42, i64 0, i32 1
  store i8 %162, i8* %166, align 1
  %167 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %42, i64 0, i32 2
  %168 = bitcast %union.anon* %167 to i8*
  store i8 %120, i8* %168, align 4
  %169 = getelementptr inbounds i8, i8* %165, i64 5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %169, i8* nonnull align 1 %32, i64 3, i1 false)
  %170 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %42, i64 0, i32 3
  store i32 %164, i32* %170, align 4
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %32)
  br label %171

171:                                              ; preds = %112, %153, %50
  %172 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %41, i64 1
  %173 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %42, i64 1
  %174 = icmp ult %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %172, %21
  br i1 %174, label %40, label %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler10CacheState5StealERKS3_(%"struct.v8::internal::wasm::LiftoffAssembler::CacheState"*, %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* readonly dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, %1
  br i1 %3, label %43, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1, i64 0, i32 0, i32 1
  %6 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 12
  %12 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 0, i32 2
  %13 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 12
  %19 = icmp ult i64 %18, %11
  %20 = inttoptr i64 %16 to i8*
  br i1 %19, label %23, label %21

21:                                               ; preds = %4
  %22 = inttoptr i64 %9 to i8*
  br label %36

23:                                               ; preds = %4
  %24 = inttoptr i64 %16 to %"class.v8::internal::wasm::LiftoffAssembler::VarState"*
  %25 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 0, i32 3
  %26 = bitcast %"struct.std::__1::aligned_storage<96, 4>::type"* %25 to %"class.v8::internal::wasm::LiftoffAssembler::VarState"*
  %27 = icmp eq %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %24, %26
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  tail call void @free(i8* %20) #15
  br label %29

29:                                               ; preds = %28, %23
  %30 = bitcast %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0 to i8**
  %31 = tail call noalias i8* @malloc(i64 %10) #15
  %32 = bitcast i8* %31 to %"class.v8::internal::wasm::LiftoffAssembler::VarState"*
  store i8* %31, i8** %30, align 8
  %33 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %32, i64 %11
  store %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %33, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %12, align 8
  %34 = bitcast %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %29, %21
  %37 = phi i8* [ %35, %29 ], [ %22, %21 ]
  %38 = phi i8* [ %31, %29 ], [ %20, %21 ]
  %39 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %37, i64 %10, i1 false) #15
  %40 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %40, i64 %11
  %42 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 0, i32 1
  store %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %41, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %42, align 8
  br label %43

43:                                               ; preds = %2, %36
  %44 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1, i64 0, i32 1
  %46 = bitcast %"class.v8::internal::wasm::LiftoffRegList"* %44 to i8*
  %47 = bitcast %"class.v8::internal::wasm::LiftoffRegList"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 84, i1 false) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler10CacheState5SplitERKS3_(%"struct.v8::internal::wasm::LiftoffAssembler::CacheState"*, %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* readonly dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, %1
  br i1 %3, label %43, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1, i64 0, i32 0, i32 1
  %6 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 12
  %12 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 0, i32 2
  %13 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 12
  %19 = icmp ult i64 %18, %11
  %20 = inttoptr i64 %16 to i8*
  br i1 %19, label %23, label %21

21:                                               ; preds = %4
  %22 = inttoptr i64 %9 to i8*
  br label %36

23:                                               ; preds = %4
  %24 = inttoptr i64 %16 to %"class.v8::internal::wasm::LiftoffAssembler::VarState"*
  %25 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 0, i32 3
  %26 = bitcast %"struct.std::__1::aligned_storage<96, 4>::type"* %25 to %"class.v8::internal::wasm::LiftoffAssembler::VarState"*
  %27 = icmp eq %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %24, %26
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  tail call void @free(i8* %20) #15
  br label %29

29:                                               ; preds = %28, %23
  %30 = bitcast %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0 to i8**
  %31 = tail call noalias i8* @malloc(i64 %10) #15
  %32 = bitcast i8* %31 to %"class.v8::internal::wasm::LiftoffAssembler::VarState"*
  store i8* %31, i8** %30, align 8
  %33 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %32, i64 %11
  store %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %33, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %12, align 8
  %34 = bitcast %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %29, %21
  %37 = phi i8* [ %35, %29 ], [ %22, %21 ]
  %38 = phi i8* [ %31, %29 ], [ %20, %21 ]
  %39 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %38, i8* align 1 %37, i64 %10, i1 false) #15
  %40 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %40, i64 %11
  %42 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 0, i32 1
  store %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %41, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %42, align 8
  br label %43

43:                                               ; preds = %2, %36
  %44 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1, i64 0, i32 1
  %46 = bitcast %"class.v8::internal::wasm::LiftoffRegList"* %44 to i8*
  %47 = bitcast %"class.v8::internal::wasm::LiftoffRegList"* %45 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 84, i1 false) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler10CacheState24GetTaggedSlotsForOOLCodeEPNS0_10ZoneVectorIiEEPNS1_14LiftoffRegListENS3_13SpillLocationE(%"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* nocapture readonly, %"class.v8::internal::ZoneVector"*, %"class.v8::internal::wasm::LiftoffRegList"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %5, align 8
  %7 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %7, align 8
  %9 = icmp eq %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %6, %8
  br i1 %9, label %255, label %10

10:                                               ; preds = %4
  %11 = icmp eq i32 %3, 0
  %12 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast i32** %12 to i64*
  %15 = bitcast %"class.v8::internal::ZoneVector"* %1 to i64*
  %16 = bitcast i32** %13 to i64*
  %17 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::ZoneVector", %"class.v8::internal::ZoneVector"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegList", %"class.v8::internal::wasm::LiftoffRegList"* %2, i64 0, i32 0
  br i1 %11, label %20, label %256

20:                                               ; preds = %10, %252
  %21 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %253, %252 ], [ %6, %10 ]
  %22 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %21, i64 0, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = and i8 %23, -4
  %25 = icmp eq i8 %24, 8
  br i1 %25, label %26, label %252

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %21, i64 0, i32 0
  %28 = load i8, i8* %27, align 4
  %29 = icmp eq i8 %28, 1
  br i1 %29, label %244, label %30

30:                                               ; preds = %26
  %31 = getelementptr %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %21, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = add nsw i32 %32, 8
  %34 = sdiv i32 %33, 8
  %35 = load i32*, i32** %12, align 8
  %36 = load i32*, i32** %13, align 8
  %37 = icmp ult i32* %35, %36
  %38 = ptrtoint i32* %36 to i64
  br i1 %37, label %241, label %39

39:                                               ; preds = %30
  %40 = ptrtoint i32* %35 to i64
  %41 = load i64, i64* %15, align 8
  %42 = sub i64 %40, %41
  %43 = ashr exact i64 %42, 2
  %44 = add nsw i64 %43, 1
  %45 = icmp ugt i64 %44, 536870911
  br i1 %45, label %281, label %46

46:                                               ; preds = %39
  %47 = sub i64 %38, %41
  %48 = ashr exact i64 %47, 2
  %49 = icmp ult i64 %48, 268435455
  br i1 %49, label %50, label %55

50:                                               ; preds = %46
  %51 = ashr exact i64 %47, 1
  %52 = icmp ult i64 %51, %44
  %53 = select i1 %52, i64 %44, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %74, label %55

55:                                               ; preds = %50, %46
  %56 = phi i64 [ %53, %50 ], [ 536870911, %46 ]
  %57 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %17, align 8
  %58 = shl i64 %56, 2
  %59 = add i64 %58, 7
  %60 = and i64 %59, -8
  %61 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %57, i64 0, i32 2
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %57, i64 0, i32 3
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %64, %62
  %66 = icmp ugt i64 %60, %65
  br i1 %66, label %69, label %67, !prof !3

67:                                               ; preds = %55
  %68 = add i64 %60, %62
  store i64 %68, i64* %61, align 8
  br label %71

69:                                               ; preds = %55
  %70 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %57, i64 %60) #15
  br label %71

71:                                               ; preds = %69, %67
  %72 = phi i64 [ %70, %69 ], [ %62, %67 ]
  %73 = inttoptr i64 %72 to i32*
  br label %74

74:                                               ; preds = %71, %50
  %75 = phi i64 [ %56, %71 ], [ 0, %50 ]
  %76 = phi i32* [ %73, %71 ], [ null, %50 ]
  %77 = getelementptr inbounds i32, i32* %76, i64 %43
  %78 = getelementptr inbounds i32, i32* %76, i64 %75
  %79 = ptrtoint i32* %78 to i64
  store i32 %34, i32* %77, align 4
  %80 = getelementptr inbounds i32, i32* %77, i64 1
  %81 = ptrtoint i32* %80 to i64
  %82 = load i32*, i32** %18, align 8
  %83 = ptrtoint i32* %82 to i64
  %84 = load i32*, i32** %12, align 8
  %85 = icmp eq i32* %84, %82
  br i1 %85, label %238, label %86

86:                                               ; preds = %74
  %87 = getelementptr i32, i32* %84, i64 -1
  %88 = ptrtoint i32* %87 to i64
  %89 = sub i64 %88, %83
  %90 = lshr i64 %89, 2
  %91 = add nuw nsw i64 %90, 1
  %92 = icmp ult i64 %91, 8
  br i1 %92, label %186, label %93

93:                                               ; preds = %86
  %94 = getelementptr i32, i32* %76, i64 -1
  %95 = getelementptr i32, i32* %84, i64 -1
  %96 = ptrtoint i32* %95 to i64
  %97 = sub i64 %96, %83
  %98 = lshr i64 %97, 2
  %99 = sub nsw i64 %43, %98
  %100 = getelementptr i32, i32* %94, i64 %99
  %101 = getelementptr i32, i32* %84, i64 -1
  %102 = sub nsw i64 0, %98
  %103 = getelementptr i32, i32* %101, i64 %102
  %104 = icmp ult i32* %100, %84
  %105 = icmp ult i32* %103, %77
  %106 = and i1 %104, %105
  br i1 %106, label %186, label %107

107:                                              ; preds = %93
  %108 = and i64 %91, 9223372036854775800
  %109 = sub nsw i64 0, %108
  %110 = getelementptr i32, i32* %77, i64 %109
  %111 = sub nsw i64 0, %108
  %112 = getelementptr i32, i32* %84, i64 %111
  %113 = add nsw i64 %108, -8
  %114 = lshr exact i64 %113, 3
  %115 = add nuw nsw i64 %114, 1
  %116 = and i64 %115, 1
  %117 = icmp eq i64 %113, 0
  br i1 %117, label %162, label %118

118:                                              ; preds = %107
  %119 = sub nuw nsw i64 %115, %116
  %120 = getelementptr i32, i32* %77, i64 -1
  %121 = getelementptr i32, i32* %84, i64 -1
  %122 = getelementptr i32, i32* %77, i64 -1
  %123 = getelementptr i32, i32* %84, i64 -1
  br label %124

124:                                              ; preds = %124, %118
  %125 = phi i64 [ 0, %118 ], [ %159, %124 ]
  %126 = phi i64 [ %119, %118 ], [ %160, %124 ]
  %127 = sub i64 0, %125
  %128 = sub i64 0, %125
  %129 = getelementptr inbounds i32, i32* %120, i64 %127
  %130 = getelementptr inbounds i32, i32* %121, i64 %128
  %131 = getelementptr inbounds i32, i32* %130, i64 -3
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4, !alias.scope !4
  %134 = getelementptr inbounds i32, i32* %130, i64 -4
  %135 = getelementptr inbounds i32, i32* %134, i64 -3
  %136 = bitcast i32* %135 to <4 x i32>*
  %137 = load <4 x i32>, <4 x i32>* %136, align 4, !alias.scope !4
  %138 = getelementptr inbounds i32, i32* %129, i64 -3
  %139 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %139, align 4, !alias.scope !7, !noalias !4
  %140 = getelementptr inbounds i32, i32* %129, i64 -4
  %141 = getelementptr inbounds i32, i32* %140, i64 -3
  %142 = bitcast i32* %141 to <4 x i32>*
  store <4 x i32> %137, <4 x i32>* %142, align 4, !alias.scope !7, !noalias !4
  %143 = sub nuw nsw i64 -8, %125
  %144 = sub nuw nsw i64 -8, %125
  %145 = getelementptr inbounds i32, i32* %122, i64 %143
  %146 = getelementptr inbounds i32, i32* %123, i64 %144
  %147 = getelementptr inbounds i32, i32* %146, i64 -3
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4, !alias.scope !4
  %150 = getelementptr inbounds i32, i32* %146, i64 -4
  %151 = getelementptr inbounds i32, i32* %150, i64 -3
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !4
  %154 = getelementptr inbounds i32, i32* %145, i64 -3
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %155, align 4, !alias.scope !7, !noalias !4
  %156 = getelementptr inbounds i32, i32* %145, i64 -4
  %157 = getelementptr inbounds i32, i32* %156, i64 -3
  %158 = bitcast i32* %157 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %158, align 4, !alias.scope !7, !noalias !4
  %159 = add i64 %125, 16
  %160 = add i64 %126, -2
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %124, !llvm.loop !9

162:                                              ; preds = %124, %107
  %163 = phi i64 [ 0, %107 ], [ %159, %124 ]
  %164 = icmp eq i64 %116, 0
  br i1 %164, label %184, label %165

165:                                              ; preds = %162
  %166 = sub i64 0, %163
  %167 = getelementptr i32, i32* %77, i64 -1
  %168 = sub i64 0, %163
  %169 = getelementptr i32, i32* %84, i64 -1
  %170 = getelementptr inbounds i32, i32* %167, i64 %166
  %171 = getelementptr inbounds i32, i32* %169, i64 %168
  %172 = getelementptr inbounds i32, i32* %171, i64 -3
  %173 = bitcast i32* %172 to <4 x i32>*
  %174 = load <4 x i32>, <4 x i32>* %173, align 4, !alias.scope !4
  %175 = getelementptr inbounds i32, i32* %171, i64 -4
  %176 = getelementptr inbounds i32, i32* %175, i64 -3
  %177 = bitcast i32* %176 to <4 x i32>*
  %178 = load <4 x i32>, <4 x i32>* %177, align 4, !alias.scope !4
  %179 = getelementptr inbounds i32, i32* %170, i64 -3
  %180 = bitcast i32* %179 to <4 x i32>*
  store <4 x i32> %174, <4 x i32>* %180, align 4, !alias.scope !7, !noalias !4
  %181 = getelementptr inbounds i32, i32* %170, i64 -4
  %182 = getelementptr inbounds i32, i32* %181, i64 -3
  %183 = bitcast i32* %182 to <4 x i32>*
  store <4 x i32> %178, <4 x i32>* %183, align 4, !alias.scope !7, !noalias !4
  br label %184

184:                                              ; preds = %162, %165
  %185 = icmp eq i64 %91, %108
  br i1 %185, label %238, label %186

186:                                              ; preds = %184, %93, %86
  %187 = phi i32* [ %77, %93 ], [ %77, %86 ], [ %110, %184 ]
  %188 = phi i32* [ %84, %93 ], [ %84, %86 ], [ %112, %184 ]
  %189 = getelementptr i32, i32* %188, i64 -1
  %190 = ptrtoint i32* %189 to i64
  %191 = sub i64 %190, %83
  %192 = lshr i64 %191, 2
  %193 = add nuw nsw i64 %192, 1
  %194 = and i64 %193, 7
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %205, label %196

196:                                              ; preds = %186, %196
  %197 = phi i32* [ %200, %196 ], [ %187, %186 ]
  %198 = phi i32* [ %201, %196 ], [ %188, %186 ]
  %199 = phi i64 [ %203, %196 ], [ %194, %186 ]
  %200 = getelementptr inbounds i32, i32* %197, i64 -1
  %201 = getelementptr inbounds i32, i32* %198, i64 -1
  %202 = load i32, i32* %201, align 4
  store i32 %202, i32* %200, align 4
  %203 = add i64 %199, -1
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %196, !llvm.loop !11

205:                                              ; preds = %196, %186
  %206 = phi i32* [ undef, %186 ], [ %200, %196 ]
  %207 = phi i32* [ %187, %186 ], [ %200, %196 ]
  %208 = phi i32* [ %188, %186 ], [ %201, %196 ]
  %209 = icmp ult i64 %191, 28
  br i1 %209, label %238, label %210

210:                                              ; preds = %205, %210
  %211 = phi i32* [ %234, %210 ], [ %207, %205 ]
  %212 = phi i32* [ %235, %210 ], [ %208, %205 ]
  %213 = getelementptr inbounds i32, i32* %211, i64 -1
  %214 = getelementptr inbounds i32, i32* %212, i64 -1
  %215 = load i32, i32* %214, align 4
  store i32 %215, i32* %213, align 4
  %216 = getelementptr inbounds i32, i32* %211, i64 -2
  %217 = getelementptr inbounds i32, i32* %212, i64 -2
  %218 = load i32, i32* %217, align 4
  store i32 %218, i32* %216, align 4
  %219 = getelementptr inbounds i32, i32* %211, i64 -3
  %220 = getelementptr inbounds i32, i32* %212, i64 -3
  %221 = load i32, i32* %220, align 4
  store i32 %221, i32* %219, align 4
  %222 = getelementptr inbounds i32, i32* %211, i64 -4
  %223 = getelementptr inbounds i32, i32* %212, i64 -4
  %224 = load i32, i32* %223, align 4
  store i32 %224, i32* %222, align 4
  %225 = getelementptr inbounds i32, i32* %211, i64 -5
  %226 = getelementptr inbounds i32, i32* %212, i64 -5
  %227 = load i32, i32* %226, align 4
  store i32 %227, i32* %225, align 4
  %228 = getelementptr inbounds i32, i32* %211, i64 -6
  %229 = getelementptr inbounds i32, i32* %212, i64 -6
  %230 = load i32, i32* %229, align 4
  store i32 %230, i32* %228, align 4
  %231 = getelementptr inbounds i32, i32* %211, i64 -7
  %232 = getelementptr inbounds i32, i32* %212, i64 -7
  %233 = load i32, i32* %232, align 4
  store i32 %233, i32* %231, align 4
  %234 = getelementptr inbounds i32, i32* %211, i64 -8
  %235 = getelementptr inbounds i32, i32* %212, i64 -8
  %236 = load i32, i32* %235, align 4
  store i32 %236, i32* %234, align 4
  %237 = icmp eq i32* %235, %82
  br i1 %237, label %238, label %210, !llvm.loop !13

238:                                              ; preds = %205, %210, %184, %74
  %239 = phi i32* [ %77, %74 ], [ %110, %184 ], [ %206, %205 ], [ %234, %210 ]
  %240 = ptrtoint i32* %239 to i64
  store i64 %240, i64* %15, align 8
  store i64 %81, i64* %14, align 8
  store i64 %79, i64* %16, align 8
  br label %252

241:                                              ; preds = %30
  store i32 %34, i32* %35, align 4
  %242 = getelementptr inbounds i32, i32* %35, i64 1
  %243 = ptrtoint i32* %242 to i64
  store i64 %243, i64* %14, align 8
  br label %252

244:                                              ; preds = %26
  %245 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %21, i64 0, i32 2
  %246 = bitcast %union.anon* %245 to i8*
  %247 = load i8, i8* %246, align 4
  %248 = zext i8 %247 to i32
  %249 = shl i32 1, %248
  %250 = load i32, i32* %19, align 4
  %251 = or i32 %249, %250
  store i32 %251, i32* %19, align 4
  br label %252

252:                                              ; preds = %244, %241, %238, %20
  %253 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %21, i64 1
  %254 = icmp eq %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %253, %8
  br i1 %254, label %255, label %20

255:                                              ; preds = %478, %252, %4
  ret void

256:                                              ; preds = %10, %478
  %257 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %479, %478 ], [ %6, %10 ]
  %258 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %257, i64 0, i32 1
  %259 = load i8, i8* %258, align 1
  %260 = and i8 %259, -4
  %261 = icmp eq i8 %260, 8
  br i1 %261, label %262, label %478

262:                                              ; preds = %256
  %263 = getelementptr %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %257, i64 0, i32 3
  %264 = load i32, i32* %263, align 4
  %265 = add nsw i32 %264, 8
  %266 = sdiv i32 %265, 8
  %267 = load i32*, i32** %12, align 8
  %268 = load i32*, i32** %13, align 8
  %269 = icmp ult i32* %267, %268
  %270 = ptrtoint i32* %268 to i64
  br i1 %269, label %271, label %274

271:                                              ; preds = %262
  store i32 %266, i32* %267, align 4
  %272 = getelementptr inbounds i32, i32* %267, i64 1
  %273 = ptrtoint i32* %272 to i64
  store i64 %273, i64* %14, align 8
  br label %478

274:                                              ; preds = %262
  %275 = ptrtoint i32* %267 to i64
  %276 = load i64, i64* %15, align 8
  %277 = sub i64 %275, %276
  %278 = ashr exact i64 %277, 2
  %279 = add nsw i64 %278, 1
  %280 = icmp ugt i64 %279, 536870911
  br i1 %280, label %281, label %283

281:                                              ; preds = %274, %39
  %282 = bitcast %"class.v8::internal::ZoneVector"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %282) #16
  unreachable

283:                                              ; preds = %274
  %284 = sub i64 %270, %276
  %285 = ashr exact i64 %284, 2
  %286 = icmp ult i64 %285, 268435455
  br i1 %286, label %287, label %292

287:                                              ; preds = %283
  %288 = ashr exact i64 %284, 1
  %289 = icmp ult i64 %288, %279
  %290 = select i1 %289, i64 %279, i64 %288
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %311, label %292

292:                                              ; preds = %287, %283
  %293 = phi i64 [ %290, %287 ], [ 536870911, %283 ]
  %294 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %17, align 8
  %295 = shl i64 %293, 2
  %296 = add i64 %295, 7
  %297 = and i64 %296, -8
  %298 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %294, i64 0, i32 2
  %299 = load i64, i64* %298, align 8
  %300 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %294, i64 0, i32 3
  %301 = load i64, i64* %300, align 8
  %302 = sub i64 %301, %299
  %303 = icmp ugt i64 %297, %302
  br i1 %303, label %304, label %306, !prof !3

304:                                              ; preds = %292
  %305 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %294, i64 %297) #15
  br label %308

306:                                              ; preds = %292
  %307 = add i64 %297, %299
  store i64 %307, i64* %298, align 8
  br label %308

308:                                              ; preds = %306, %304
  %309 = phi i64 [ %305, %304 ], [ %299, %306 ]
  %310 = inttoptr i64 %309 to i32*
  br label %311

311:                                              ; preds = %308, %287
  %312 = phi i64 [ %293, %308 ], [ 0, %287 ]
  %313 = phi i32* [ %310, %308 ], [ null, %287 ]
  %314 = getelementptr inbounds i32, i32* %313, i64 %278
  %315 = getelementptr inbounds i32, i32* %313, i64 %312
  %316 = ptrtoint i32* %315 to i64
  store i32 %266, i32* %314, align 4
  %317 = getelementptr inbounds i32, i32* %314, i64 1
  %318 = ptrtoint i32* %317 to i64
  %319 = load i32*, i32** %18, align 8
  %320 = ptrtoint i32* %319 to i64
  %321 = load i32*, i32** %12, align 8
  %322 = icmp eq i32* %321, %319
  br i1 %322, label %475, label %323

323:                                              ; preds = %311
  %324 = getelementptr i32, i32* %321, i64 -1
  %325 = ptrtoint i32* %324 to i64
  %326 = sub i64 %325, %320
  %327 = lshr i64 %326, 2
  %328 = add nuw nsw i64 %327, 1
  %329 = icmp ult i64 %328, 8
  br i1 %329, label %423, label %330

330:                                              ; preds = %323
  %331 = getelementptr i32, i32* %313, i64 -1
  %332 = getelementptr i32, i32* %321, i64 -1
  %333 = ptrtoint i32* %332 to i64
  %334 = sub i64 %333, %320
  %335 = lshr i64 %334, 2
  %336 = sub nsw i64 %278, %335
  %337 = getelementptr i32, i32* %331, i64 %336
  %338 = getelementptr i32, i32* %321, i64 -1
  %339 = sub nsw i64 0, %335
  %340 = getelementptr i32, i32* %338, i64 %339
  %341 = icmp ult i32* %337, %321
  %342 = icmp ult i32* %340, %314
  %343 = and i1 %341, %342
  br i1 %343, label %423, label %344

344:                                              ; preds = %330
  %345 = and i64 %328, 9223372036854775800
  %346 = sub nsw i64 0, %345
  %347 = getelementptr i32, i32* %314, i64 %346
  %348 = sub nsw i64 0, %345
  %349 = getelementptr i32, i32* %321, i64 %348
  %350 = add nsw i64 %345, -8
  %351 = lshr exact i64 %350, 3
  %352 = add nuw nsw i64 %351, 1
  %353 = and i64 %352, 1
  %354 = icmp eq i64 %350, 0
  br i1 %354, label %399, label %355

355:                                              ; preds = %344
  %356 = sub nuw nsw i64 %352, %353
  %357 = getelementptr i32, i32* %314, i64 -1
  %358 = getelementptr i32, i32* %321, i64 -1
  %359 = getelementptr i32, i32* %314, i64 -1
  %360 = getelementptr i32, i32* %321, i64 -1
  br label %361

361:                                              ; preds = %361, %355
  %362 = phi i64 [ 0, %355 ], [ %396, %361 ]
  %363 = phi i64 [ %356, %355 ], [ %397, %361 ]
  %364 = sub i64 0, %362
  %365 = sub i64 0, %362
  %366 = getelementptr inbounds i32, i32* %357, i64 %364
  %367 = getelementptr inbounds i32, i32* %358, i64 %365
  %368 = getelementptr inbounds i32, i32* %367, i64 -3
  %369 = bitcast i32* %368 to <4 x i32>*
  %370 = load <4 x i32>, <4 x i32>* %369, align 4, !alias.scope !14
  %371 = getelementptr inbounds i32, i32* %367, i64 -4
  %372 = getelementptr inbounds i32, i32* %371, i64 -3
  %373 = bitcast i32* %372 to <4 x i32>*
  %374 = load <4 x i32>, <4 x i32>* %373, align 4, !alias.scope !14
  %375 = getelementptr inbounds i32, i32* %366, i64 -3
  %376 = bitcast i32* %375 to <4 x i32>*
  store <4 x i32> %370, <4 x i32>* %376, align 4, !alias.scope !17, !noalias !14
  %377 = getelementptr inbounds i32, i32* %366, i64 -4
  %378 = getelementptr inbounds i32, i32* %377, i64 -3
  %379 = bitcast i32* %378 to <4 x i32>*
  store <4 x i32> %374, <4 x i32>* %379, align 4, !alias.scope !17, !noalias !14
  %380 = sub nuw nsw i64 -8, %362
  %381 = sub nuw nsw i64 -8, %362
  %382 = getelementptr inbounds i32, i32* %359, i64 %380
  %383 = getelementptr inbounds i32, i32* %360, i64 %381
  %384 = getelementptr inbounds i32, i32* %383, i64 -3
  %385 = bitcast i32* %384 to <4 x i32>*
  %386 = load <4 x i32>, <4 x i32>* %385, align 4, !alias.scope !14
  %387 = getelementptr inbounds i32, i32* %383, i64 -4
  %388 = getelementptr inbounds i32, i32* %387, i64 -3
  %389 = bitcast i32* %388 to <4 x i32>*
  %390 = load <4 x i32>, <4 x i32>* %389, align 4, !alias.scope !14
  %391 = getelementptr inbounds i32, i32* %382, i64 -3
  %392 = bitcast i32* %391 to <4 x i32>*
  store <4 x i32> %386, <4 x i32>* %392, align 4, !alias.scope !17, !noalias !14
  %393 = getelementptr inbounds i32, i32* %382, i64 -4
  %394 = getelementptr inbounds i32, i32* %393, i64 -3
  %395 = bitcast i32* %394 to <4 x i32>*
  store <4 x i32> %390, <4 x i32>* %395, align 4, !alias.scope !17, !noalias !14
  %396 = add i64 %362, 16
  %397 = add i64 %363, -2
  %398 = icmp eq i64 %397, 0
  br i1 %398, label %399, label %361, !llvm.loop !19

399:                                              ; preds = %361, %344
  %400 = phi i64 [ 0, %344 ], [ %396, %361 ]
  %401 = icmp eq i64 %353, 0
  br i1 %401, label %421, label %402

402:                                              ; preds = %399
  %403 = sub i64 0, %400
  %404 = getelementptr i32, i32* %314, i64 -1
  %405 = sub i64 0, %400
  %406 = getelementptr i32, i32* %321, i64 -1
  %407 = getelementptr inbounds i32, i32* %404, i64 %403
  %408 = getelementptr inbounds i32, i32* %406, i64 %405
  %409 = getelementptr inbounds i32, i32* %408, i64 -3
  %410 = bitcast i32* %409 to <4 x i32>*
  %411 = load <4 x i32>, <4 x i32>* %410, align 4, !alias.scope !14
  %412 = getelementptr inbounds i32, i32* %408, i64 -4
  %413 = getelementptr inbounds i32, i32* %412, i64 -3
  %414 = bitcast i32* %413 to <4 x i32>*
  %415 = load <4 x i32>, <4 x i32>* %414, align 4, !alias.scope !14
  %416 = getelementptr inbounds i32, i32* %407, i64 -3
  %417 = bitcast i32* %416 to <4 x i32>*
  store <4 x i32> %411, <4 x i32>* %417, align 4, !alias.scope !17, !noalias !14
  %418 = getelementptr inbounds i32, i32* %407, i64 -4
  %419 = getelementptr inbounds i32, i32* %418, i64 -3
  %420 = bitcast i32* %419 to <4 x i32>*
  store <4 x i32> %415, <4 x i32>* %420, align 4, !alias.scope !17, !noalias !14
  br label %421

421:                                              ; preds = %399, %402
  %422 = icmp eq i64 %328, %345
  br i1 %422, label %475, label %423

423:                                              ; preds = %421, %330, %323
  %424 = phi i32* [ %314, %330 ], [ %314, %323 ], [ %347, %421 ]
  %425 = phi i32* [ %321, %330 ], [ %321, %323 ], [ %349, %421 ]
  %426 = getelementptr i32, i32* %425, i64 -1
  %427 = ptrtoint i32* %426 to i64
  %428 = sub i64 %427, %320
  %429 = lshr i64 %428, 2
  %430 = add nuw nsw i64 %429, 1
  %431 = and i64 %430, 7
  %432 = icmp eq i64 %431, 0
  br i1 %432, label %442, label %433

433:                                              ; preds = %423, %433
  %434 = phi i32* [ %437, %433 ], [ %424, %423 ]
  %435 = phi i32* [ %438, %433 ], [ %425, %423 ]
  %436 = phi i64 [ %440, %433 ], [ %431, %423 ]
  %437 = getelementptr inbounds i32, i32* %434, i64 -1
  %438 = getelementptr inbounds i32, i32* %435, i64 -1
  %439 = load i32, i32* %438, align 4
  store i32 %439, i32* %437, align 4
  %440 = add i64 %436, -1
  %441 = icmp eq i64 %440, 0
  br i1 %441, label %442, label %433, !llvm.loop !20

442:                                              ; preds = %433, %423
  %443 = phi i32* [ undef, %423 ], [ %437, %433 ]
  %444 = phi i32* [ %424, %423 ], [ %437, %433 ]
  %445 = phi i32* [ %425, %423 ], [ %438, %433 ]
  %446 = icmp ult i64 %428, 28
  br i1 %446, label %475, label %447

447:                                              ; preds = %442, %447
  %448 = phi i32* [ %471, %447 ], [ %444, %442 ]
  %449 = phi i32* [ %472, %447 ], [ %445, %442 ]
  %450 = getelementptr inbounds i32, i32* %448, i64 -1
  %451 = getelementptr inbounds i32, i32* %449, i64 -1
  %452 = load i32, i32* %451, align 4
  store i32 %452, i32* %450, align 4
  %453 = getelementptr inbounds i32, i32* %448, i64 -2
  %454 = getelementptr inbounds i32, i32* %449, i64 -2
  %455 = load i32, i32* %454, align 4
  store i32 %455, i32* %453, align 4
  %456 = getelementptr inbounds i32, i32* %448, i64 -3
  %457 = getelementptr inbounds i32, i32* %449, i64 -3
  %458 = load i32, i32* %457, align 4
  store i32 %458, i32* %456, align 4
  %459 = getelementptr inbounds i32, i32* %448, i64 -4
  %460 = getelementptr inbounds i32, i32* %449, i64 -4
  %461 = load i32, i32* %460, align 4
  store i32 %461, i32* %459, align 4
  %462 = getelementptr inbounds i32, i32* %448, i64 -5
  %463 = getelementptr inbounds i32, i32* %449, i64 -5
  %464 = load i32, i32* %463, align 4
  store i32 %464, i32* %462, align 4
  %465 = getelementptr inbounds i32, i32* %448, i64 -6
  %466 = getelementptr inbounds i32, i32* %449, i64 -6
  %467 = load i32, i32* %466, align 4
  store i32 %467, i32* %465, align 4
  %468 = getelementptr inbounds i32, i32* %448, i64 -7
  %469 = getelementptr inbounds i32, i32* %449, i64 -7
  %470 = load i32, i32* %469, align 4
  store i32 %470, i32* %468, align 4
  %471 = getelementptr inbounds i32, i32* %448, i64 -8
  %472 = getelementptr inbounds i32, i32* %449, i64 -8
  %473 = load i32, i32* %472, align 4
  store i32 %473, i32* %471, align 4
  %474 = icmp eq i32* %472, %319
  br i1 %474, label %475, label %447, !llvm.loop !21

475:                                              ; preds = %442, %447, %421, %311
  %476 = phi i32* [ %314, %311 ], [ %347, %421 ], [ %443, %442 ], [ %471, %447 ]
  %477 = ptrtoint i32* %476 to i64
  store i64 %477, i64* %15, align 8
  store i64 %318, i64* %14, align 8
  store i64 %316, i64* %16, align 8
  br label %478

478:                                              ; preds = %475, %271, %256
  %479 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %257, i64 1
  %480 = icmp eq %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %479, %8
  br i1 %480, label %255, label %256
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler10CacheState15DefineSafepointERNS0_9SafepointE(%"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* nocapture readonly, %"class.v8::internal::Safepoint"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %6, align 8
  %8 = icmp eq %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %5, %7
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = bitcast i32* %3 to i8*
  %11 = getelementptr inbounds %"class.v8::internal::Safepoint", %"class.v8::internal::Safepoint"* %1, i64 0, i32 0
  br label %13

12:                                               ; preds = %25, %2
  ret void

13:                                               ; preds = %9, %25
  %14 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %5, %9 ], [ %26, %25 ]
  %15 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %14, i64 0, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = and i8 %16, -4
  %18 = icmp eq i8 %17, 8
  br i1 %18, label %19, label %25

19:                                               ; preds = %13
  %20 = getelementptr %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %14, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = add nsw i32 %21, 8
  %23 = sdiv i32 %22, 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10)
  store i32 %23, i32* %3, align 4
  %24 = load %"class.v8::internal::ZoneChunkList"*, %"class.v8::internal::ZoneChunkList"** %11, align 8
  call void @_ZN2v88internal13ZoneChunkListIiE9push_backERKi(%"class.v8::internal::ZoneChunkList"* %24, i32* nonnull dereferenceable(4) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10)
  br label %25

25:                                               ; preds = %19, %13
  %26 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %14, i64 1
  %27 = icmp eq %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %26, %7
  br i1 %27, label %12, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler10CacheState39DefineSafepointWithCalleeSavedRegistersERNS0_9SafepointE(%"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* nocapture readonly, %"class.v8::internal::Safepoint"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %4, align 8
  %6 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %6, align 8
  %8 = icmp eq %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %5, %7
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Safepoint", %"class.v8::internal::Safepoint"* %1, i64 0, i32 1
  %11 = bitcast i32* %3 to i8*
  %12 = getelementptr inbounds %"class.v8::internal::Safepoint", %"class.v8::internal::Safepoint"* %1, i64 0, i32 0
  br label %14

13:                                               ; preds = %39, %2
  ret void

14:                                               ; preds = %9, %39
  %15 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %5, %9 ], [ %40, %39 ]
  %16 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %15, i64 0, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = and i8 %17, -4
  %19 = icmp eq i8 %18, 8
  br i1 %19, label %20, label %39

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %15, i64 0, i32 0
  %22 = load i8, i8* %21, align 4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = getelementptr %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %15, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = add nsw i32 %26, 8
  %28 = sdiv i32 %27, 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11)
  store i32 %28, i32* %3, align 4
  %29 = load %"class.v8::internal::ZoneChunkList"*, %"class.v8::internal::ZoneChunkList"** %12, align 8
  call void @_ZN2v88internal13ZoneChunkListIiE9push_backERKi(%"class.v8::internal::ZoneChunkList"* %29, i32* nonnull dereferenceable(4) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11)
  br label %39

30:                                               ; preds = %20
  %31 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %15, i64 0, i32 2
  %32 = bitcast %union.anon* %31 to i8*
  %33 = load i8, i8* %32, align 4
  %34 = zext i8 %33 to i32
  %35 = shl i32 1, %34
  %36 = load i32*, i32** %10, align 8
  %37 = load i32, i32* %36, align 4
  %38 = or i32 %37, %35
  store i32 %38, i32* %36, align 4
  br label %39

39:                                               ; preds = %24, %30, %14
  %40 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %15, i64 1
  %41 = icmp eq %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %40, %7
  br i1 %41, label %13, label %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2v88internal4wasm16LiftoffAssembler27GetTotalFrameSlotCountForGCEv(%"class.v8::internal::wasm::LiftoffAssembler"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = add nsw i32 %3, 16
  %5 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 5
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %4, %6
  %8 = sdiv i32 %7, 8
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssemblerC2ENSt3__110unique_ptrINS0_15AssemblerBufferENS3_14default_deleteIS5_EEEE(%"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::AssemblerBuffer"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.v8::internal::AssemblerOptions", align 8
  %4 = getelementptr inbounds %"struct.v8::internal::AssemblerOptions", %"struct.v8::internal::AssemblerOptions"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #15
  store i8 1, i8* %4, align 8, !alias.scope !22
  %5 = getelementptr inbounds %"struct.v8::internal::AssemblerOptions", %"struct.v8::internal::AssemblerOptions"* %3, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.v8::internal::AssemblerOptions", %"struct.v8::internal::AssemblerOptions"* %3, i64 0, i32 5
  %7 = bitcast i8* %5 to i32*
  store i32 0, i32* %7, align 1, !alias.scope !22
  store i8 1, i8* %6, align 1, !alias.scope !22
  %8 = getelementptr inbounds %"struct.v8::internal::AssemblerOptions", %"struct.v8::internal::AssemblerOptions"* %3, i64 0, i32 6
  store i8 0, i8* %8, align 2, !alias.scope !22
  %9 = getelementptr inbounds %"struct.v8::internal::AssemblerOptions", %"struct.v8::internal::AssemblerOptions"* %3, i64 0, i32 8
  %10 = bitcast i64* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 11, i1 false) #15, !alias.scope !22
  %11 = bitcast %"class.v8::internal::wasm::LiftoffAssembler"* %0 to %"class.v8::internal::TurboAssemblerBase"*
  call void @_ZN2v88internal18TurboAssemblerBaseC2EPNS0_7IsolateERKNS0_16AssemblerOptionsENS0_18CodeObjectRequiredENSt3__110unique_ptrINS0_15AssemblerBufferENS8_14default_deleteISA_EEEE(%"class.v8::internal::TurboAssemblerBase"* %11, %"class.v8::internal::Isolate"* null, %"struct.v8::internal::AssemblerOptions"* nonnull dereferenceable(24) %3, i32 0, %"class.v8::internal::AssemblerBuffer"* %1) #15
  %12 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN2v88internal4wasm16LiftoffAssemblerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 1
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 3
  %16 = bitcast %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %14 to %"struct.std::__1::aligned_storage<96, 4>::type"**
  store %"struct.std::__1::aligned_storage<96, 4>::type"* %15, %"struct.std::__1::aligned_storage<96, 4>::type"** %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %17 to %"struct.std::__1::aligned_storage<96, 4>::type"**
  store %"struct.std::__1::aligned_storage<96, 4>::type"* %15, %"struct.std::__1::aligned_storage<96, 4>::type"** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 2
  %20 = getelementptr inbounds %"struct.std::__1::aligned_storage<96, 4>::type", %"struct.std::__1::aligned_storage<96, 4>::type"* %15, i64 1
  %21 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %19 to %"struct.std::__1::aligned_storage<96, 4>::type"**
  store %"struct.std::__1::aligned_storage<96, 4>::type"* %20, %"struct.std::__1::aligned_storage<96, 4>::type"** %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 4, i32 0, i32 0
  %24 = bitcast i32* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 80, i1 false) #15
  store i32 -1, i32* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 4
  store i32 24, i32* %25, align 8
  %26 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 5
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 6
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 7
  store i8* null, i8** %28, align 8
  %29 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 5
  store i8 1, i8* %29, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssemblerD2Ev(%"class.v8::internal::wasm::LiftoffAssembler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN2v88internal4wasm16LiftoffAssemblerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp ugt i32 %4, 16
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 2, i32 0
  %8 = load i8*, i8** %7, align 8
  tail call void @free(i8* %8) #15
  br label %9

9:                                                ; preds = %6, %1
  %10 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 3
  %13 = bitcast %"struct.std::__1::aligned_storage<96, 4>::type"* %12 to %"class.v8::internal::wasm::LiftoffAssembler::VarState"*
  %14 = icmp eq %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %11, %13
  br i1 %14, label %17, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %11, i64 0, i32 0
  tail call void @free(i8* %16) #15
  br label %17

17:                                               ; preds = %9, %15
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal9AssemblerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %18 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 1, i32 0
  %19 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 1, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_end_node"* %19 to %"class.std::__1::__tree_node"**
  %21 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImiEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.101"* %18, %"class.std::__1::__tree_node"* %21) #15
  %22 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.std::__1::__tree_node.1241"**
  %25 = load %"class.std::__1::__tree_node.1241"*, %"class.std::__1::__tree_node.1241"** %24, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal5LabelENS_6vectorIiNS_9allocatorIiEEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.94"* %22, %"class.std::__1::__tree_node.1241"* %25) #15
  %26 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4, i32 0
  tail call void @_ZNSt3__112__deque_baseIiNS_9allocatorIiEEED2Ev(%"class.std::__1::__deque_base"* %26) #15
  %27 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNSt3__112__deque_baseIiNS_9allocatorIiEEED2Ev(%"class.std::__1::__deque_base"* %27) #15
  %28 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal13AssemblerBaseD2Ev(%"class.v8::internal::AssemblerBase"* %28) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssemblerD0Ev(%"class.v8::internal::wasm::LiftoffAssembler"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal4wasm16LiftoffAssemblerD2Ev(%"class.v8::internal::wasm::LiftoffAssembler"* %0) #15
  %2 = bitcast %"class.v8::internal::wasm::LiftoffAssembler"* %0 to i8*
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88internal8MalloceddlEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8 @_ZN2v88internal4wasm16LiftoffAssembler14LoadToRegisterENS2_8VarStateENS1_14LiftoffRegListE(%"class.v8::internal::wasm::LiftoffAssembler"*, i64, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = trunc i64 %1 to i8
  %6 = lshr i64 %1, 8
  %7 = trunc i64 %6 to i8
  %8 = lshr i64 %1, 32
  %9 = trunc i64 %8 to i8
  %10 = icmp eq i8 %5, 1
  br i1 %10, label %77, label %11

11:                                               ; preds = %4
  %12 = add i8 %7, -3
  %13 = icmp ult i8 %12, 3
  %14 = select i1 %13, %"class.v8::internal::wasm::LiftoffRegList"* @_ZN2v88internal4wasmL15kFpCacheRegListE, %"class.v8::internal::wasm::LiftoffRegList"* @_ZN2v88internal4wasmL15kGpCacheRegListE
  %15 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegList", %"class.v8::internal::wasm::LiftoffRegList"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = xor i32 %3, -1
  %18 = and i32 %16, %17
  %19 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = xor i32 %20, -1
  %22 = and i32 %18, %21
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %11
  %25 = tail call i32 @llvm.cttz.i32(i32 %22, i1 false) #15, !range !2
  %26 = trunc i32 %25 to i8
  br label %44

27:                                               ; preds = %11
  %28 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 4, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %42, label %31

31:                                               ; preds = %27
  %32 = and i32 %29, 255
  %33 = shl i32 1, %32
  %34 = and i32 %33, %18
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = trunc i32 %29 to i8
  %38 = zext i32 %32 to i64
  %39 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %38
  store i32 0, i32* %39, align 4
  %40 = xor i32 %33, -1
  %41 = and i32 %20, %40
  store i32 %41, i32* %19, align 4
  store i32 -1, i32* %28, align 8
  br label %44

42:                                               ; preds = %31, %27
  %43 = tail call i8 @_ZN2v88internal4wasm16LiftoffAssembler16SpillOneRegisterENS1_14LiftoffRegListE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i32 %18) #15
  br label %44

44:                                               ; preds = %24, %36, %42
  %45 = phi i8 [ %26, %24 ], [ %37, %36 ], [ %43, %42 ]
  %46 = icmp eq i8 %5, 2
  br i1 %46, label %47, label %63

47:                                               ; preds = %44
  %48 = icmp eq i8 %7, 1
  %49 = trunc i64 %8 to i32
  br i1 %48, label %50, label %56

50:                                               ; preds = %47
  %51 = icmp eq i32 %49, 0
  %52 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = zext i8 %45 to i32
  br i1 %51, label %54, label %55

54:                                               ; preds = %50
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %52, i8 zeroext 51, i32 %53, i32 %53, i32 4) #15
  br label %77

55:                                               ; preds = %50
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %52, i32 %53, i64 %8, i32 4) #15
  br label %77

56:                                               ; preds = %47
  %57 = ashr i32 %49, 31
  %58 = bitcast %"class.v8::internal::wasm::LiftoffAssembler"* %0 to %"class.v8::internal::TurboAssembler"*
  %59 = zext i8 %45 to i32
  %60 = zext i32 %57 to i64
  %61 = shl nuw i64 %60, 32
  %62 = or i64 %61, %8
  tail call void @_ZN2v88internal14TurboAssembler4MoveENS0_8RegisterEl(%"class.v8::internal::TurboAssembler"* %58, i32 %59, i64 %62) #15
  br label %77

63:                                               ; preds = %44
  %64 = sub nsw i32 0, %2
  %65 = sext i32 %64 to i64
  %66 = add nsw i64 %65, 128
  %67 = icmp ult i64 %66, 256
  %68 = and i32 %64, -256
  %69 = select i1 %67, i32 0, i32 %68
  %70 = select i1 %67, i32 131072, i32 327680
  %71 = select i1 %67, i64 17664, i64 34048
  %72 = and i32 %64, 255
  %73 = or i32 %69, %72
  %74 = zext i32 %73 to i64
  %75 = shl nuw nsw i64 %74, 16
  %76 = or i64 %75, %71
  tail call void @_ZN2v88internal4wasm7liftoff4LoadEPNS1_16LiftoffAssemblerENS1_15LiftoffRegisterENS0_7OperandENS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i8 %45, i64 %76, i32 %70, i8 zeroext %7) #15
  br label %77

77:                                               ; preds = %56, %55, %54, %4, %63
  %78 = phi i8 [ %45, %63 ], [ %9, %4 ], [ %45, %54 ], [ %45, %55 ], [ %45, %56 ]
  ret i8 %78
}

; Function Attrs: nounwind ssp uwtable
define hidden i8 @_ZN2v88internal4wasm16LiftoffAssembler23LoadI64HalfIntoRegisterENS2_8VarStateENS1_11RegPairHalfE(%"class.v8::internal::wasm::LiftoffAssembler"*, i64, i32, i8 zeroext) local_unnamed_addr #0 align 2 {
  %5 = trunc i64 %1 to i8
  %6 = lshr i64 %1, 32
  %7 = trunc i64 %6 to i8
  %8 = icmp eq i8 %5, 1
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = icmp eq i8 %3, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %9
  %12 = and i8 %7, 15
  br label %61

13:                                               ; preds = %9
  %14 = lshr i64 %1, 36
  %15 = trunc i64 %14 to i8
  %16 = and i8 %15, 15
  br label %61

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 719
  %21 = xor i32 %20, 719
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = tail call i32 @llvm.cttz.i32(i32 %21, i1 false) #15, !range !2
  %25 = trunc i32 %24 to i8
  br label %43

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 4, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %41, label %30

30:                                               ; preds = %26
  %31 = and i32 %28, 255
  %32 = shl i32 1, %31
  %33 = and i32 %32, 719
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %30
  %36 = trunc i32 %28 to i8
  %37 = zext i32 %31 to i64
  %38 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %37
  store i32 0, i32* %38, align 4
  %39 = xor i32 %32, -1
  %40 = and i32 %19, %39
  store i32 %40, i32* %18, align 4
  store i32 -1, i32* %27, align 8
  br label %43

41:                                               ; preds = %30, %26
  %42 = tail call i8 @_ZN2v88internal4wasm16LiftoffAssembler16SpillOneRegisterENS1_14LiftoffRegListE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i32 719) #15
  br label %43

43:                                               ; preds = %23, %35, %41
  %44 = phi i8 [ %25, %23 ], [ %36, %35 ], [ %42, %41 ]
  %45 = icmp eq i8 %5, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

47:                                               ; preds = %43
  %48 = icmp eq i8 %3, 0
  %49 = and i64 %1, 65280
  %50 = icmp eq i64 %49, 256
  %51 = trunc i64 %6 to i32
  %52 = ashr i32 %51, 31
  %53 = zext i32 %52 to i64
  %54 = select i1 %50, i64 0, i64 %53
  %55 = select i1 %48, i64 %6, i64 %54
  %56 = icmp eq i64 %55, 0
  %57 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = zext i8 %44 to i32
  br i1 %56, label %59, label %60

59:                                               ; preds = %47
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %57, i8 zeroext 51, i32 %58, i32 %58, i32 4) #15
  br label %61

60:                                               ; preds = %47
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %57, i32 %58, i64 %55, i32 4) #15
  br label %61

61:                                               ; preds = %59, %60, %11, %13
  %62 = phi i8 [ %12, %11 ], [ %16, %13 ], [ %44, %60 ], [ %44, %59 ]
  ret i8 %62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i8 @_ZN2v88internal4wasm16LiftoffAssembler14PeekToRegisterEiNS1_14LiftoffRegListE(%"class.v8::internal::wasm::LiftoffAssembler"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 1
  %5 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %4, align 8
  %6 = xor i32 %1, -1
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %5, i64 %7
  %9 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %8, i64 0, i32 0
  %10 = load i8, i8* %9, align 4
  %11 = icmp eq i8 %10, 1
  br i1 %11, label %12, label %16

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %5, i64 %7, i32 2
  %14 = bitcast %union.anon* %13 to i8*
  %15 = load i8, i8* %14, align 4
  br label %33

16:                                               ; preds = %3
  %17 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %8 to i64*
  %18 = load i64, i64* %17, align 4
  %19 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %5, i64 %7, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = tail call i8 @_ZN2v88internal4wasm16LiftoffAssembler14LoadToRegisterENS2_8VarStateENS1_14LiftoffRegListE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 %18, i32 %20, i32 %2)
  %22 = zext i8 %21 to i32
  %23 = shl i32 1, %22
  %24 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = or i32 %23, %25
  store i32 %26, i32* %24, align 4
  %27 = zext i8 %21 to i64
  %28 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %28, align 4
  store i8 1, i8* %9, align 4
  %31 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %5, i64 %7, i32 2
  %32 = bitcast %union.anon* %31 to i8*
  store i8 %21, i8* %32, align 4
  br label %33

33:                                               ; preds = %16, %12
  %34 = phi i8 [ %15, %12 ], [ %21, %16 ]
  ret i8 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler10DropValuesEi(%"class.v8::internal::wasm::LiftoffAssembler"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp sgt i32 %1, 0
  br i1 %3, label %4, label %8

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 1
  %6 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  %7 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %5, align 8
  br label %9

8:                                                ; preds = %31, %2
  ret void

9:                                                ; preds = %31, %4
  %10 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %7, %4 ], [ %17, %31 ]
  %11 = phi i32 [ 0, %4 ], [ %32, %31 ]
  %12 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %10, i64 -1, i32 0
  %13 = load i8, i8* %12, align 4
  %14 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %10, i64 0, i32 0
  %15 = getelementptr inbounds i8, i8* %14, i64 -8
  %16 = load i8, i8* %15, align 4
  %17 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %10, i64 -1
  store %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %17, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %5, align 8
  %18 = icmp eq i8 %13, 1
  br i1 %18, label %19, label %31

19:                                               ; preds = %9
  %20 = zext i8 %16 to i64
  %21 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = add i32 %22, -1
  store i32 %23, i32* %21, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %19
  %26 = zext i8 %16 to i32
  %27 = shl i32 1, %26
  %28 = xor i32 %27, -1
  %29 = load i32, i32* %6, align 4
  %30 = and i32 %29, %28
  store i32 %30, i32* %6, align 4
  br label %31

31:                                               ; preds = %25, %19, %9
  %32 = add nuw nsw i32 %11, 1
  %33 = icmp eq i32 %32, %1
  br i1 %33, label %8, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler9DropValueEi(%"class.v8::internal::wasm::LiftoffAssembler"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %3, align 8
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %4, i64 %5
  %7 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %6, i64 0, i32 0
  %8 = load i8, i8* %7, align 4
  %9 = icmp eq i8 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %4, i64 %5, i32 2
  %12 = bitcast %union.anon* %11 to i8*
  %13 = load i8, i8* %12, align 4
  %14 = zext i8 %13 to i64
  %15 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = add i32 %16, -1
  store i32 %17, i32* %15, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %26

19:                                               ; preds = %10
  %20 = zext i8 %13 to i32
  %21 = shl i32 1, %20
  %22 = xor i32 %21, -1
  %23 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = and i32 %24, %22
  store i32 %25, i32* %23, align 4
  br label %26

26:                                               ; preds = %19, %10, %2
  %27 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %6, i64 1
  %28 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 1
  %29 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = ptrtoint %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %27 to i64
  %32 = sub i64 %30, %31
  %33 = icmp eq i64 %32, 0
  %34 = inttoptr i64 %30 to %"class.v8::internal::wasm::LiftoffAssembler::VarState"*
  br i1 %33, label %38, label %35

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %27, i64 0, i32 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %36, i64 %32, i1 false) #15
  %37 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %28, align 8
  br label %38

38:                                               ; preds = %26, %35
  %39 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %34, %26 ], [ %37, %35 ]
  %40 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %39, i64 -1
  store %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %40, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %28, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler15PrepareLoopArgsEi(%"class.v8::internal::wasm::LiftoffAssembler"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp sgt i32 %1, 0
  br i1 %3, label %4, label %11

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 1
  %6 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  %7 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 4, i32 0, i32 0
  %8 = bitcast %"class.v8::internal::wasm::LiftoffAssembler"* %0 to %"class.v8::internal::TurboAssembler"*
  %9 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = zext i32 %1 to i64
  br label %12

11:                                               ; preds = %156, %2
  ret void

12:                                               ; preds = %156, %4
  %13 = phi i64 [ 0, %4 ], [ %157, %156 ]
  %14 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %5, align 8
  %15 = xor i64 %13, -1
  %16 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %14, i64 %15, i32 0
  %17 = load i8, i8* %16, align 4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %156, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %14, i64 %15, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = add i8 %21, -1
  %23 = icmp ult i8 %22, 11
  br i1 %23, label %24, label %28

24:                                               ; preds = %19
  %25 = sext i8 %22 to i64
  %26 = getelementptr inbounds [11 x i8], [11 x i8]* @switch.table._ZN2v88internal4wasm16LiftoffAssembler10FinishCallEPKNS0_9SignatureINS1_9ValueKindEEEPNS0_8compiler14CallDescriptorE, i64 0, i64 %25
  %27 = load i8, i8* %26, align 1
  br label %28

28:                                               ; preds = %19, %24
  %29 = phi i8 [ %27, %24 ], [ 2, %19 ]
  %30 = icmp eq i8 %17, 1
  br i1 %30, label %31, label %98

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %14, i64 %15, i32 2
  %33 = bitcast %union.anon* %32 to i8*
  %34 = load i8, i8* %33, align 4
  %35 = zext i8 %34 to i64
  %36 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %35
  %37 = load i32, i32* %36, align 4
  %38 = icmp ugt i32 %37, 1
  br i1 %38, label %39, label %156

39:                                               ; preds = %31
  %40 = zext i8 %34 to i32
  %41 = shl i32 1, %40
  %42 = icmp eq i8 %29, 1
  %43 = select i1 %42, %"class.v8::internal::wasm::LiftoffRegList"* @_ZN2v88internal4wasmL15kFpCacheRegListE, %"class.v8::internal::wasm::LiftoffRegList"* @_ZN2v88internal4wasmL15kGpCacheRegListE
  %44 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegList", %"class.v8::internal::wasm::LiftoffRegList"* %43, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = xor i32 %41, -1
  %47 = and i32 %45, %46
  %48 = load i32, i32* %6, align 8
  %49 = xor i32 %48, -1
  %50 = and i32 %47, %49
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %39
  %53 = tail call i32 @llvm.cttz.i32(i32 %50, i1 false) #15, !range !2
  %54 = trunc i32 %53 to i8
  br label %71

55:                                               ; preds = %39
  %56 = load i32, i32* %7, align 4
  %57 = icmp eq i32 %56, -1
  br i1 %57, label %69, label %58

58:                                               ; preds = %55
  %59 = and i32 %56, 255
  %60 = shl i32 1, %59
  %61 = and i32 %60, %47
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %69, label %63

63:                                               ; preds = %58
  %64 = trunc i32 %56 to i8
  %65 = zext i32 %59 to i64
  %66 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %65
  store i32 0, i32* %66, align 4
  %67 = xor i32 %60, -1
  %68 = and i32 %48, %67
  store i32 %68, i32* %6, align 4
  store i32 -1, i32* %7, align 8
  br label %71

69:                                               ; preds = %58, %55
  %70 = tail call i8 @_ZN2v88internal4wasm16LiftoffAssembler16SpillOneRegisterENS1_14LiftoffRegListE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i32 %47) #15
  br label %71

71:                                               ; preds = %52, %63, %69
  %72 = phi i8 [ %54, %52 ], [ %64, %63 ], [ %70, %69 ]
  %73 = load i8, i8* %33, align 4
  %74 = load i8, i8* %20, align 1
  tail call void @_ZN2v88internal4wasm16LiftoffAssembler4MoveENS1_15LiftoffRegisterES3_NS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i8 %72, i8 %73, i8 zeroext %74)
  %75 = load i8, i8* %33, align 4
  %76 = zext i8 %75 to i64
  %77 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = add i32 %78, -1
  store i32 %79, i32* %77, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %71
  %82 = load i32, i32* %6, align 4
  br label %89

83:                                               ; preds = %71
  %84 = zext i8 %75 to i32
  %85 = shl i32 1, %84
  %86 = xor i32 %85, -1
  %87 = load i32, i32* %6, align 4
  %88 = and i32 %87, %86
  store i32 %88, i32* %6, align 4
  br label %89

89:                                               ; preds = %81, %83
  %90 = phi i32 [ %82, %81 ], [ %88, %83 ]
  %91 = zext i8 %72 to i32
  %92 = shl i32 1, %91
  %93 = or i32 %90, %92
  store i32 %93, i32* %6, align 4
  %94 = zext i8 %72 to i64
  %95 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %95, align 4
  store i8 1, i8* %16, align 4
  store i8 %72, i8* %33, align 4
  br label %156

98:                                               ; preds = %28
  %99 = icmp eq i8 %29, 1
  %100 = select i1 %99, %"class.v8::internal::wasm::LiftoffRegList"* @_ZN2v88internal4wasmL15kFpCacheRegListE, %"class.v8::internal::wasm::LiftoffRegList"* @_ZN2v88internal4wasmL15kGpCacheRegListE
  %101 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegList", %"class.v8::internal::wasm::LiftoffRegList"* %100, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = load i32, i32* %6, align 8
  %104 = xor i32 %103, -1
  %105 = and i32 %102, %104
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %110, label %107

107:                                              ; preds = %98
  %108 = tail call i32 @llvm.cttz.i32(i32 %105, i1 false) #15, !range !2
  %109 = trunc i32 %108 to i8
  br label %126

110:                                              ; preds = %98
  %111 = load i32, i32* %7, align 4
  %112 = icmp eq i32 %111, -1
  br i1 %112, label %124, label %113

113:                                              ; preds = %110
  %114 = and i32 %111, 255
  %115 = shl i32 1, %114
  %116 = and i32 %115, %102
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %124, label %118

118:                                              ; preds = %113
  %119 = trunc i32 %111 to i8
  %120 = zext i32 %114 to i64
  %121 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %120
  store i32 0, i32* %121, align 4
  %122 = xor i32 %115, -1
  %123 = and i32 %103, %122
  store i32 %123, i32* %6, align 4
  store i32 -1, i32* %7, align 8
  br label %126

124:                                              ; preds = %113, %110
  %125 = tail call i8 @_ZN2v88internal4wasm16LiftoffAssembler16SpillOneRegisterENS1_14LiftoffRegListE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i32 %102) #15
  br label %126

126:                                              ; preds = %107, %118, %124
  %127 = phi i8 [ %109, %107 ], [ %119, %118 ], [ %125, %124 ]
  %128 = load i8, i8* %20, align 1, !noalias !25
  %129 = icmp eq i8 %128, 1
  %130 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %14, i64 %15, i32 2, i32 0
  %131 = load i32, i32* %130, align 4, !noalias !25
  br i1 %129, label %132, label %138

132:                                              ; preds = %126
  %133 = icmp eq i32 %131, 0
  %134 = zext i8 %127 to i32
  br i1 %133, label %135, label %136

135:                                              ; preds = %132
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %9, i8 zeroext 51, i32 %134, i32 %134, i32 4) #15
  br label %145

136:                                              ; preds = %132
  %137 = zext i32 %131 to i64
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %9, i32 %134, i64 %137, i32 4) #15
  br label %145

138:                                              ; preds = %126
  %139 = ashr i32 %131, 31
  %140 = zext i8 %127 to i32
  %141 = zext i32 %139 to i64
  %142 = shl nuw i64 %141, 32
  %143 = zext i32 %131 to i64
  %144 = or i64 %142, %143
  tail call void @_ZN2v88internal14TurboAssembler4MoveENS0_8RegisterEl(%"class.v8::internal::TurboAssembler"* %8, i32 %140, i64 %144) #15
  br label %145

145:                                              ; preds = %135, %136, %138
  %146 = phi i32 [ %134, %135 ], [ %134, %136 ], [ %140, %138 ]
  store i8 1, i8* %16, align 4
  %147 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %14, i64 %15, i32 2
  %148 = bitcast %union.anon* %147 to i8*
  store i8 %127, i8* %148, align 4
  %149 = shl i32 1, %146
  %150 = load i32, i32* %6, align 4
  %151 = or i32 %150, %149
  store i32 %151, i32* %6, align 4
  %152 = zext i8 %127 to i64
  %153 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %152
  %154 = load i32, i32* %153, align 4
  %155 = add i32 %154, 1
  store i32 %155, i32* %153, align 4
  br label %156

156:                                              ; preds = %145, %89, %31, %12
  %157 = add nuw nsw i64 %13, 1
  %158 = icmp eq i64 %157, %10
  br i1 %158, label %11, label %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler4MoveENS1_15LiftoffRegisterES3_NS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"*, i8, i8, i8 zeroext) local_unnamed_addr #0 align 2 {
  %5 = icmp ult i8 %1, 10
  %6 = zext i8 %1 to i32
  br i1 %5, label %7, label %13

7:                                                ; preds = %4
  %8 = zext i8 %2 to i32
  %9 = icmp eq i8 %3, 1
  %10 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %9, label %11, label %12

11:                                               ; preds = %7
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %10, i32 %6, i32 %8, i32 4) #15
  br label %33

12:                                               ; preds = %7
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %10, i32 %6, i32 %8, i32 8) #15
  br label %33

13:                                               ; preds = %4
  %14 = add nsw i32 %6, -10
  %15 = zext i8 %2 to i32
  %16 = add nsw i32 %15, -10
  switch i8 %3, label %31 [
    i8 3, label %17
    i8 4, label %24
  ]

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20 = and i32 %19, 32
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %17
  tail call void @_ZN2v88internal9Assembler3vssEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"* %18, i8 zeroext 16, i32 %14, i32 %14, i32 %16) #15
  br label %33

23:                                               ; preds = %17
  tail call void @_ZN2v88internal9Assembler5movssENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %18, i32 %14, i32 %16) #15
  br label %33

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %27 = and i32 %26, 32
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %24
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %25, i8 zeroext 16, i32 %14, i32 %14, i32 %16, i32 3, i32 1, i32 0, i32 5) #15
  br label %33

30:                                               ; preds = %24
  tail call void @_ZN2v88internal9Assembler5movsdENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"* %25, i32 %14, i32 %16) #15
  br label %33

31:                                               ; preds = %13
  %32 = bitcast %"class.v8::internal::wasm::LiftoffAssembler"* %0 to %"class.v8::internal::SharedTurboAssembler"*
  tail call void @_ZN2v88internal20SharedTurboAssembler6MovapdENS0_11XMMRegisterES2_(%"class.v8::internal::SharedTurboAssembler"* %32, i32 %14, i32 %16) #15
  br label %33

33:                                               ; preds = %31, %30, %29, %23, %22, %12, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler26MaterializeMergedConstantsEj(%"class.v8::internal::wasm::LiftoffAssembler"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca [2 x %"class.v8::internal::Vector.1219"], align 8
  %4 = alloca %"class.v8::internal::wasm::WasmValue", align 8
  %5 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %5, align 8
  %7 = bitcast [2 x %"class.v8::internal::Vector.1219"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #15
  %8 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = ptrtoint %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %6 to i64
  %12 = sub i64 %10, %11
  %13 = sdiv exact i64 %12, 12
  %14 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %6, i64 %13
  %15 = zext i32 %1 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %14, i64 %16
  %18 = getelementptr inbounds [2 x %"class.v8::internal::Vector.1219"], [2 x %"class.v8::internal::Vector.1219"]* %3, i64 0, i64 0, i32 0
  store %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %17, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %18, align 8
  %19 = getelementptr inbounds [2 x %"class.v8::internal::Vector.1219"], [2 x %"class.v8::internal::Vector.1219"]* %3, i64 0, i64 0, i32 1
  store i64 %15, i64* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds [2 x %"class.v8::internal::Vector.1219"], [2 x %"class.v8::internal::Vector.1219"]* %3, i64 0, i64 1, i32 0
  store %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %6, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %23, align 8
  %24 = getelementptr inbounds [2 x %"class.v8::internal::Vector.1219"], [2 x %"class.v8::internal::Vector.1219"]* %3, i64 0, i64 1, i32 1
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  %26 = bitcast %"class.v8::internal::wasm::LiftoffAssembler"* %0 to %"class.v8::internal::TurboAssembler"*
  %27 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %4, i64 0, i32 1, i64 0
  %29 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %4, i64 0, i32 1, i64 8
  %30 = bitcast i8* %29 to i64*
  %31 = bitcast i8* %28 to i64*
  %32 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %4, i64 0, i32 1, i64 4
  %33 = bitcast i8* %28 to i32*
  %34 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %4, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %17, i64 %15
  %36 = icmp eq i32 %1, 0
  br i1 %36, label %42, label %47

37:                                               ; preds = %102
  %38 = getelementptr inbounds [2 x %"class.v8::internal::Vector.1219"], [2 x %"class.v8::internal::Vector.1219"]* %3, i64 0, i64 1, i32 0
  %39 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %38, align 8
  %40 = getelementptr inbounds [2 x %"class.v8::internal::Vector.1219"], [2 x %"class.v8::internal::Vector.1219"]* %3, i64 0, i64 1, i32 1
  %41 = load i64, i64* %40, align 8
  br label %42

42:                                               ; preds = %37, %2
  %43 = phi i64 [ %22, %2 ], [ %41, %37 ]
  %44 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %6, %2 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %44, i64 %43
  %46 = icmp eq i64 %43, 0
  br i1 %46, label %163, label %105

47:                                               ; preds = %2, %102
  %48 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %103, %102 ], [ %17, %2 ]
  %49 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %48, i64 0, i32 0
  %50 = load i8, i8* %49, align 4
  %51 = icmp eq i8 %50, 2
  br i1 %51, label %52, label %102

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %48, i64 0, i32 1
  %54 = load i8, i8* %53, align 1
  %55 = add i8 %54, -3
  %56 = icmp ult i8 %55, 3
  %57 = select i1 %56, %"class.v8::internal::wasm::LiftoffRegList"* @_ZN2v88internal4wasmL15kFpCacheRegListE, %"class.v8::internal::wasm::LiftoffRegList"* @_ZN2v88internal4wasmL15kGpCacheRegListE
  %58 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegList", %"class.v8::internal::wasm::LiftoffRegList"* %57, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = load i32, i32* %25, align 8
  %61 = xor i32 %60, -1
  %62 = and i32 %59, %61
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %91, label %64

64:                                               ; preds = %52
  %65 = call i32 @llvm.cttz.i32(i32 %62, i1 false) #15, !range !2
  %66 = trunc i32 %65 to i8
  %67 = icmp eq i8 %54, 1
  %68 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %48, i64 0, i32 2, i32 0
  %69 = load i32, i32* %68, align 4, !noalias !28
  br i1 %67, label %70, label %75

70:                                               ; preds = %64
  %71 = icmp eq i32 %69, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %70
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %27, i8 zeroext 51, i32 %65, i32 %65, i32 4) #15
  br label %81

73:                                               ; preds = %70
  %74 = zext i32 %69 to i64
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %27, i32 %65, i64 %74, i32 4) #15
  br label %81

75:                                               ; preds = %64
  %76 = ashr i32 %69, 31
  %77 = zext i32 %76 to i64
  %78 = shl nuw i64 %77, 32
  %79 = zext i32 %69 to i64
  %80 = or i64 %78, %79
  call void @_ZN2v88internal14TurboAssembler4MoveENS0_8RegisterEl(%"class.v8::internal::TurboAssembler"* %26, i32 %65, i64 %80) #15
  br label %81

81:                                               ; preds = %72, %73, %75
  %82 = shl i32 1, %65
  %83 = load i32, i32* %25, align 4
  %84 = or i32 %83, %82
  store i32 %84, i32* %25, align 4
  %85 = zext i32 %65 to i64
  %86 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = add i32 %87, 1
  store i32 %88, i32* %86, align 4
  store i8 1, i8* %49, align 4
  %89 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %48, i64 0, i32 2
  %90 = bitcast %union.anon* %89 to i8*
  store i8 %66, i8* %90, align 4
  br label %102

91:                                               ; preds = %52
  %92 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %48, i64 0, i32 3
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i8 %54, 1
  %95 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %48, i64 0, i32 2, i32 0
  %96 = load i32, i32* %95, align 4, !noalias !31
  br i1 %94, label %97, label %98

97:                                               ; preds = %91
  call void @llvm.memset.p0i8.i64(i8* align 4 %32, i8 0, i64 12, i1 false) #15, !alias.scope !31
  store i32 %96, i32* %33, align 4, !alias.scope !31
  br label %100

98:                                               ; preds = %91
  %99 = sext i32 %96 to i64
  store i64 0, i64* %30, align 4, !alias.scope !31
  store i64 %99, i64* %31, align 4, !alias.scope !31
  br label %100

100:                                              ; preds = %97, %98
  %101 = phi i32 [ 2, %98 ], [ 1, %97 ]
  store i32 %101, i32* %34, align 8, !alias.scope !31
  call void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_9WasmValueE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i32 %93, %"class.v8::internal::wasm::WasmValue"* nonnull byval(%"class.v8::internal::wasm::WasmValue") align 8 %4)
  store i8 0, i8* %49, align 4
  br label %102

102:                                              ; preds = %81, %100, %47
  %103 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %48, i64 1
  %104 = icmp eq %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %103, %35
  br i1 %104, label %37, label %47

105:                                              ; preds = %42, %160
  %106 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %161, %160 ], [ %44, %42 ]
  %107 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %106, i64 0, i32 0
  %108 = load i8, i8* %107, align 4
  %109 = icmp eq i8 %108, 2
  br i1 %109, label %110, label %160

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %106, i64 0, i32 1
  %112 = load i8, i8* %111, align 1
  %113 = add i8 %112, -3
  %114 = icmp ult i8 %113, 3
  %115 = select i1 %114, %"class.v8::internal::wasm::LiftoffRegList"* @_ZN2v88internal4wasmL15kFpCacheRegListE, %"class.v8::internal::wasm::LiftoffRegList"* @_ZN2v88internal4wasmL15kGpCacheRegListE
  %116 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegList", %"class.v8::internal::wasm::LiftoffRegList"* %115, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = load i32, i32* %25, align 8
  %119 = xor i32 %118, -1
  %120 = and i32 %117, %119
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %149, label %122

122:                                              ; preds = %110
  %123 = call i32 @llvm.cttz.i32(i32 %120, i1 false) #15, !range !2
  %124 = trunc i32 %123 to i8
  %125 = icmp eq i8 %112, 1
  %126 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %106, i64 0, i32 2, i32 0
  %127 = load i32, i32* %126, align 4, !noalias !28
  br i1 %125, label %134, label %128

128:                                              ; preds = %122
  %129 = ashr i32 %127, 31
  %130 = zext i32 %129 to i64
  %131 = shl nuw i64 %130, 32
  %132 = zext i32 %127 to i64
  %133 = or i64 %131, %132
  call void @_ZN2v88internal14TurboAssembler4MoveENS0_8RegisterEl(%"class.v8::internal::TurboAssembler"* %26, i32 %123, i64 %133) #15
  br label %139

134:                                              ; preds = %122
  %135 = icmp eq i32 %127, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = zext i32 %127 to i64
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %27, i32 %123, i64 %137, i32 4) #15
  br label %139

138:                                              ; preds = %134
  call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %27, i8 zeroext 51, i32 %123, i32 %123, i32 4) #15
  br label %139

139:                                              ; preds = %138, %136, %128
  %140 = shl i32 1, %123
  %141 = load i32, i32* %25, align 4
  %142 = or i32 %141, %140
  store i32 %142, i32* %25, align 4
  %143 = zext i32 %123 to i64
  %144 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %143
  %145 = load i32, i32* %144, align 4
  %146 = add i32 %145, 1
  store i32 %146, i32* %144, align 4
  store i8 1, i8* %107, align 4
  %147 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %106, i64 0, i32 2
  %148 = bitcast %union.anon* %147 to i8*
  store i8 %124, i8* %148, align 4
  br label %160

149:                                              ; preds = %110
  %150 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %106, i64 0, i32 3
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i8 %112, 1
  %153 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %106, i64 0, i32 2, i32 0
  %154 = load i32, i32* %153, align 4, !noalias !31
  br i1 %152, label %157, label %155

155:                                              ; preds = %149
  %156 = sext i32 %154 to i64
  store i64 0, i64* %30, align 4, !alias.scope !31
  store i64 %156, i64* %31, align 4, !alias.scope !31
  br label %158

157:                                              ; preds = %149
  call void @llvm.memset.p0i8.i64(i8* align 4 %32, i8 0, i64 12, i1 false) #15, !alias.scope !31
  store i32 %154, i32* %33, align 4, !alias.scope !31
  br label %158

158:                                              ; preds = %157, %155
  %159 = phi i32 [ 2, %155 ], [ 1, %157 ]
  store i32 %159, i32* %34, align 8, !alias.scope !31
  call void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_9WasmValueE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i32 %151, %"class.v8::internal::wasm::WasmValue"* nonnull byval(%"class.v8::internal::wasm::WasmValue") align 8 %4)
  store i8 0, i8* %107, align 4
  br label %160

160:                                              ; preds = %158, %139, %105
  %161 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %106, i64 1
  %162 = icmp eq %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %161, %45
  br i1 %162, label %163, label %105

163:                                              ; preds = %160, %42
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_9WasmValueE(%"class.v8::internal::wasm::LiftoffAssembler"*, i32, %"class.v8::internal::wasm::WasmValue"* byval(%"class.v8::internal::wasm::WasmValue") align 8) local_unnamed_addr #4 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 8
  %6 = icmp sgt i32 %5, %1
  br i1 %6, label %8, label %7

7:                                                ; preds = %3
  store i32 %1, i32* %4, align 8
  br label %8

8:                                                ; preds = %3, %7
  %9 = sub nsw i32 0, %1
  %10 = sext i32 %9 to i64
  %11 = add nsw i64 %10, 128
  %12 = icmp ult i64 %11, 256
  %13 = and i32 %9, -256
  %14 = select i1 %12, i32 0, i32 %13
  %15 = select i1 %12, i32 131072, i32 327680
  %16 = select i1 %12, i64 17664, i64 34048
  %17 = and i32 %9, 255
  %18 = or i32 %14, %17
  %19 = zext i32 %18 to i64
  %20 = shl nuw nsw i64 %19, 16
  %21 = or i64 %20, %16
  %22 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %2, i64 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = trunc i32 %23 to i8
  %25 = and i8 %24, 31
  switch i8 %25, label %47 [
    i8 1, label %26
    i8 2, label %32
  ]

26:                                               ; preds = %8
  %27 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %2, i64 0, i32 1, i64 0
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i64
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %27, i64 %21, i32 %15, i64 %31, i32 4) #15
  br label %48

32:                                               ; preds = %8
  %33 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %2, i64 0, i32 1, i64 0
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 4
  %36 = add i64 %35, 2147483648
  %37 = icmp ult i64 %36, 4294967296
  br i1 %37, label %38, label %41

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = and i64 %35, 4294967295
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %39, i64 %21, i32 %15, i64 %40, i32 8) #15
  br label %48

41:                                               ; preds = %32
  %42 = icmp ult i64 %35, 4294967296
  %43 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %42, label %44, label %46

44:                                               ; preds = %41
  %45 = and i64 %35, 4294967295
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %43, i32 10, i64 %45, i32 4) #15
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %43, i64 %21, i32 %15, i32 10, i32 8) #15
  br label %48

46:                                               ; preds = %41
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_11Immediate64Ei(%"class.v8::internal::Assembler"* %43, i32 10, i64 %35, i8 0, i32 8) #15
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %43, i64 %21, i32 %15, i32 10, i32 8) #15
  br label %48

47:                                               ; preds = %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

48:                                               ; preds = %38, %46, %44, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler18MergeFullStackWithERNS2_10CacheStateERKS3_(%"class.v8::internal::wasm::LiftoffAssembler"*, %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* nocapture dereferenceable(208), %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* nocapture readonly dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::wasm::WasmValue", align 8
  %5 = alloca %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", align 8
  %6 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %5, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %5, i64 0, i32 2, i64 0
  %8 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %5, i64 0, i32 5
  %9 = bitcast i32* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 80, i1 false) #15
  store %"class.v8::internal::wasm::LiftoffAssembler"* %0, %"class.v8::internal::wasm::LiftoffAssembler"** %8, align 8
  %10 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %2, i64 0, i32 0, i32 1
  %11 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = sdiv exact i64 %15, 12
  %17 = trunc i64 %16 to i32
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %37, label %19

19:                                               ; preds = %3
  %20 = inttoptr i64 %14 to %"class.v8::internal::wasm::LiftoffAssembler::VarState"*
  %21 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %2, i64 0, i32 0, i32 0
  %23 = bitcast %"class.v8::internal::wasm::WasmValue"* %4 to i8*
  %24 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %5, i64 0, i32 4, i32 0
  %25 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %5, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::aligned_storage<144, 4>::type"* %25 to %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"*
  %27 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %5, i64 0, i32 3, i32 0
  %28 = bitcast %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %5 to %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"*
  %29 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %4, i64 0, i32 1, i64 0
  %30 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %4, i64 0, i32 1, i64 8
  %31 = bitcast i8* %30 to i64*
  %32 = bitcast i8* %29 to i64*
  %33 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %4, i64 0, i32 1, i64 4
  %34 = bitcast i8* %29 to i32*
  %35 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %4, i64 0, i32 0, i32 0
  %36 = and i64 %16, 4294967295
  br label %45

37:                                               ; preds = %196, %3
  %38 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1, i64 0, i32 4, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %2, i64 0, i32 4, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, %39
  %43 = icmp eq i32 %39, -1
  %44 = or i1 %43, %42
  br i1 %44, label %212, label %201

45:                                               ; preds = %199, %19
  %46 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %20, %19 ], [ %200, %199 ]
  %47 = phi i64 [ 0, %19 ], [ %197, %199 ]
  %48 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %21, align 8
  %49 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i64 %47
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %23)
  %50 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %48, i64 %47, i32 0
  %51 = load i8, i8* %50, align 4
  switch i8 %51, label %127 [
    i8 1, label %52
    i8 2, label %196
  ]

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %48, i64 %47, i32 2
  %54 = bitcast %union.anon* %53 to i8*
  %55 = load i8, i8* %54, align 4
  %56 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i64 %47, i32 3
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %49, i64 0, i32 0
  %59 = load i8, i8* %58, align 4
  switch i8 %59, label %196 [
    i8 0, label %60
    i8 1, label %79
    i8 2, label %110
  ]

60:                                               ; preds = %52
  %61 = load i32, i32* %24, align 8
  %62 = zext i8 %55 to i32
  %63 = shl i32 1, %62
  %64 = and i32 %61, %63
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %196

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i64 %47, i32 1
  %68 = load i8, i8* %67, align 1
  %69 = or i32 %61, %63
  store i32 %69, i32* %24, align 8
  %70 = zext i32 %57 to i64
  %71 = shl nuw i64 %70, 32
  %72 = zext i8 %68 to i64
  %73 = shl nuw nsw i64 %72, 8
  %74 = or i64 %71, %73
  %75 = or i64 %74, 2
  %76 = zext i8 %55 to i64
  %77 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %26, i64 %76
  %78 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %77 to i64*
  store i64 %75, i64* %78, align 4
  br label %196

79:                                               ; preds = %52
  %80 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i64 %47, i32 2
  %81 = bitcast %union.anon* %80 to i8*
  %82 = load i8, i8* %81, align 4
  %83 = icmp eq i8 %82, %55
  br i1 %83, label %196, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i64 %47, i32 1
  %86 = load i8, i8* %85, align 1
  %87 = load i32, i32* %27, align 4
  %88 = zext i8 %55 to i32
  %89 = shl i32 1, %88
  %90 = and i32 %87, %89
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %97, label %92

92:                                               ; preds = %84
  %93 = icmp eq i8 %86, 4
  br i1 %93, label %94, label %196

94:                                               ; preds = %92
  %95 = zext i8 %55 to i64
  %96 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %28, i64 %95, i32 1
  store i8 4, i8* %96, align 1
  br label %196

97:                                               ; preds = %84
  %98 = or i32 %87, %89
  store i32 %98, i32* %27, align 4
  %99 = zext i8 %82 to i64
  %100 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %5, i64 0, i32 2, i64 %99
  %101 = load i32, i32* %100, align 4
  %102 = add nsw i32 %101, 1
  store i32 %102, i32* %100, align 4
  %103 = zext i8 %55 to i64
  %104 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %28, i64 %103
  %105 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %104 to i16*
  %106 = zext i8 %86 to i16
  %107 = shl nuw i16 %106, 8
  %108 = zext i8 %82 to i16
  %109 = or i16 %107, %108
  store i16 %109, i16* %105, align 2
  br label %196

110:                                              ; preds = %52
  %111 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i64 %47, i32 1
  %112 = load i8, i8* %111, align 1, !noalias !34
  %113 = icmp eq i8 %112, 1
  %114 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i64 %47, i32 2, i32 0
  %115 = load i32, i32* %114, align 4, !noalias !34
  %116 = zext i32 %115 to i64
  %117 = zext i8 %55 to i32
  %118 = shl i32 1, %117
  %119 = load i32, i32* %24, align 8
  %120 = or i32 %119, %118
  store i32 %120, i32* %24, align 8
  %121 = shl nuw i64 %116, 32
  %122 = select i1 %113, i64 257, i64 513
  %123 = or i64 %121, %122
  %124 = zext i8 %55 to i64
  %125 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %26, i64 %124
  %126 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %125 to i64*
  store i64 %123, i64* %126, align 4
  br label %196

127:                                              ; preds = %45
  %128 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %49, i64 0, i32 0
  %129 = load i8, i8* %128, align 4
  switch i8 %129, label %196 [
    i8 0, label %130
    i8 1, label %173
    i8 2, label %182
  ]

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i64 %47, i32 3
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %48, i64 %47, i32 3
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %132, %134
  br i1 %135, label %196, label %136

136:                                              ; preds = %130
  %137 = load %"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::wasm::LiftoffAssembler"** %8, align 8
  %138 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i64 %47, i32 1
  %139 = load i8, i8* %138, align 1
  %140 = sub nsw i32 0, %134
  %141 = sext i32 %140 to i64
  %142 = add nsw i64 %141, 128
  %143 = icmp ult i64 %142, 256
  %144 = and i32 %140, -256
  %145 = select i1 %143, i32 0, i32 %144
  %146 = select i1 %143, i32 131072, i32 327680
  %147 = select i1 %143, i64 17664, i64 34048
  %148 = and i32 %140, 255
  %149 = or i32 %145, %148
  %150 = zext i32 %149 to i64
  %151 = shl nuw nsw i64 %150, 16
  %152 = or i64 %151, %147
  %153 = sub nsw i32 0, %132
  %154 = sext i32 %153 to i64
  %155 = add nsw i64 %154, 128
  %156 = icmp ult i64 %155, 256
  %157 = and i32 %153, -256
  %158 = select i1 %156, i32 0, i32 %157
  %159 = select i1 %156, i32 131072, i32 327680
  %160 = select i1 %156, i64 17664, i64 34048
  %161 = and i32 %153, 255
  %162 = or i32 %158, %161
  %163 = zext i32 %162 to i64
  %164 = shl nuw nsw i64 %163, 16
  %165 = or i64 %164, %160
  %166 = zext i8 %139 to i64
  %167 = lshr i64 3850, %166
  %168 = and i64 %167, 1
  %169 = icmp eq i64 %168, 0
  %170 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %137, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %169, label %172, label %171

171:                                              ; preds = %136
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %170, i32 10, i64 %165, i32 %159, i32 4) #15
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %170, i64 %152, i32 %146, i32 10, i32 4) #15
  br label %196

172:                                              ; preds = %136
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %170, i32 10, i64 %165, i32 %159, i32 8) #15
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %170, i64 %152, i32 %146, i32 10, i32 8) #15
  br label %196

173:                                              ; preds = %127
  %174 = load %"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::wasm::LiftoffAssembler"** %8, align 8
  %175 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %48, i64 %47, i32 3
  %176 = load i32, i32* %175, align 4
  %177 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i64 %47, i32 2
  %178 = bitcast %union.anon* %177 to i8*
  %179 = load i8, i8* %178, align 4
  %180 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i64 %47, i32 1
  %181 = load i8, i8* %180, align 1
  tail call void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_15LiftoffRegisterENS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"* %174, i32 %176, i8 %179, i8 zeroext %181) #15
  br label %196

182:                                              ; preds = %127
  %183 = load %"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::wasm::LiftoffAssembler"** %8, align 8
  %184 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %48, i64 %47, i32 3
  %185 = load i32, i32* %184, align 4
  %186 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i64 %47, i32 1
  %187 = load i8, i8* %186, align 1, !noalias !37
  %188 = icmp eq i8 %187, 1
  %189 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i64 %47, i32 2, i32 0
  %190 = load i32, i32* %189, align 4, !noalias !37
  br i1 %188, label %191, label %192

191:                                              ; preds = %182
  call void @llvm.memset.p0i8.i64(i8* align 4 %33, i8 0, i64 12, i1 false) #15, !alias.scope !37
  store i32 %190, i32* %34, align 4, !alias.scope !37
  br label %194

192:                                              ; preds = %182
  %193 = sext i32 %190 to i64
  store i64 0, i64* %31, align 4, !alias.scope !37
  store i64 %193, i64* %32, align 4, !alias.scope !37
  br label %194

194:                                              ; preds = %192, %191
  %195 = phi i32 [ 2, %192 ], [ 1, %191 ]
  store i32 %195, i32* %35, align 8, !alias.scope !37
  tail call void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_9WasmValueE(%"class.v8::internal::wasm::LiftoffAssembler"* %183, i32 %185, %"class.v8::internal::wasm::WasmValue"* nonnull byval(%"class.v8::internal::wasm::WasmValue") align 8 %4) #15
  br label %196

196:                                              ; preds = %45, %52, %60, %66, %79, %92, %94, %97, %110, %127, %130, %171, %172, %173, %194
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %23)
  %197 = add nuw nsw i64 %47, 1
  %198 = icmp eq i64 %197, %36
  br i1 %198, label %37, label %199

199:                                              ; preds = %196
  %200 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %22, align 8
  br label %45

201:                                              ; preds = %37
  %202 = and i32 %39, 255
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1, i64 0, i32 2, i64 %203
  store i32 0, i32* %204, align 4
  %205 = load i32, i32* %38, align 8
  %206 = and i32 %205, 255
  %207 = shl i32 1, %206
  %208 = xor i32 %207, -1
  %209 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1, i64 0, i32 1, i32 0
  %210 = load i32, i32* %209, align 4
  %211 = and i32 %210, %208
  store i32 %211, i32* %209, align 4
  store i32 -1, i32* %38, align 8
  br label %212

212:                                              ; preds = %37, %201
  call fastcc void @_ZN2v88internal4wasm12_GLOBAL__N_119StackTransferRecipe7ExecuteEv(%"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %6) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler14MergeStackWithERNS2_10CacheStateEjNS2_13JumpDirectionE(%"class.v8::internal::wasm::LiftoffAssembler"*, %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* nocapture dereferenceable(208), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::wasm::WasmValue", align 8
  %6 = alloca %"class.v8::internal::wasm::WasmValue", align 8
  %7 = alloca %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", align 8
  %8 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = sdiv exact i64 %14, 12
  %16 = trunc i64 %15 to i32
  %17 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1, i64 0, i32 0, i32 1
  %18 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = sdiv exact i64 %22, 12
  %24 = trunc i64 %23 to i32
  %25 = sub i32 %16, %2
  %26 = sub i32 %24, %2
  %27 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %27) #15
  %28 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 2, i64 0
  %29 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 5
  %30 = bitcast i32* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 80, i1 false) #15
  store %"class.v8::internal::wasm::LiftoffAssembler"* %0, %"class.v8::internal::wasm::LiftoffAssembler"** %29, align 8
  %31 = icmp eq i32 %26, 0
  br i1 %31, label %51, label %32

32:                                               ; preds = %4
  %33 = inttoptr i64 %13 to %"class.v8::internal::wasm::LiftoffAssembler::VarState"*
  %34 = inttoptr i64 %21 to %"class.v8::internal::wasm::LiftoffAssembler::VarState"*
  %35 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %8, i64 0, i32 0, i32 0
  %37 = bitcast %"class.v8::internal::wasm::WasmValue"* %5 to i8*
  %38 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 4, i32 0
  %39 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 1
  %40 = bitcast %"struct.std::__1::aligned_storage<144, 4>::type"* %39 to %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"*
  %41 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 3, i32 0
  %42 = bitcast %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7 to %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"*
  %43 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %5, i64 0, i32 1, i64 0
  %44 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %5, i64 0, i32 1, i64 8
  %45 = bitcast i8* %44 to i64*
  %46 = bitcast i8* %43 to i64*
  %47 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %5, i64 0, i32 1, i64 4
  %48 = bitcast i8* %43 to i32*
  %49 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %5, i64 0, i32 0, i32 0
  %50 = zext i32 %26 to i64
  br label %70

51:                                               ; preds = %221, %4
  %52 = icmp eq i32 %2, 0
  br i1 %52, label %227, label %53

53:                                               ; preds = %51
  %54 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %8, i64 0, i32 0, i32 0
  %56 = bitcast %"class.v8::internal::wasm::WasmValue"* %6 to i8*
  %57 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 4, i32 0
  %58 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 1
  %59 = bitcast %"struct.std::__1::aligned_storage<144, 4>::type"* %58 to %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"*
  %60 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 3, i32 0
  %61 = bitcast %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7 to %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"*
  %62 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %6, i64 0, i32 1, i64 0
  %63 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %6, i64 0, i32 1, i64 8
  %64 = bitcast i8* %63 to i64*
  %65 = bitcast i8* %62 to i64*
  %66 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %6, i64 0, i32 1, i64 4
  %67 = bitcast i8* %62 to i32*
  %68 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %6, i64 0, i32 0, i32 0
  %69 = zext i32 %2 to i64
  br label %235

70:                                               ; preds = %224, %32
  %71 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %33, %32 ], [ %226, %224 ]
  %72 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %34, %32 ], [ %225, %224 ]
  %73 = phi i64 [ 0, %32 ], [ %222, %224 ]
  %74 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %71, i64 %73
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %37)
  %75 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %72, i64 %73, i32 0
  %76 = load i8, i8* %75, align 4
  switch i8 %76, label %152 [
    i8 1, label %77
    i8 2, label %221
  ]

77:                                               ; preds = %70
  %78 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %72, i64 %73, i32 2
  %79 = bitcast %union.anon* %78 to i8*
  %80 = load i8, i8* %79, align 4
  %81 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %71, i64 %73, i32 3
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %74, i64 0, i32 0
  %84 = load i8, i8* %83, align 4
  switch i8 %84, label %221 [
    i8 0, label %85
    i8 1, label %104
    i8 2, label %135
  ]

85:                                               ; preds = %77
  %86 = load i32, i32* %38, align 8
  %87 = zext i8 %80 to i32
  %88 = shl i32 1, %87
  %89 = and i32 %86, %88
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %221

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %71, i64 %73, i32 1
  %93 = load i8, i8* %92, align 1
  %94 = or i32 %86, %88
  store i32 %94, i32* %38, align 8
  %95 = zext i32 %82 to i64
  %96 = shl nuw i64 %95, 32
  %97 = zext i8 %93 to i64
  %98 = shl nuw nsw i64 %97, 8
  %99 = or i64 %96, %98
  %100 = or i64 %99, 2
  %101 = zext i8 %80 to i64
  %102 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %40, i64 %101
  %103 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %102 to i64*
  store i64 %100, i64* %103, align 4
  br label %221

104:                                              ; preds = %77
  %105 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %71, i64 %73, i32 2
  %106 = bitcast %union.anon* %105 to i8*
  %107 = load i8, i8* %106, align 4
  %108 = icmp eq i8 %107, %80
  br i1 %108, label %221, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %71, i64 %73, i32 1
  %111 = load i8, i8* %110, align 1
  %112 = load i32, i32* %41, align 4
  %113 = zext i8 %80 to i32
  %114 = shl i32 1, %113
  %115 = and i32 %112, %114
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %122, label %117

117:                                              ; preds = %109
  %118 = icmp eq i8 %111, 4
  br i1 %118, label %119, label %221

119:                                              ; preds = %117
  %120 = zext i8 %80 to i64
  %121 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %42, i64 %120, i32 1
  store i8 4, i8* %121, align 1
  br label %221

122:                                              ; preds = %109
  %123 = or i32 %112, %114
  store i32 %123, i32* %41, align 4
  %124 = zext i8 %107 to i64
  %125 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 2, i64 %124
  %126 = load i32, i32* %125, align 4
  %127 = add nsw i32 %126, 1
  store i32 %127, i32* %125, align 4
  %128 = zext i8 %80 to i64
  %129 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %42, i64 %128
  %130 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %129 to i16*
  %131 = zext i8 %111 to i16
  %132 = shl nuw i16 %131, 8
  %133 = zext i8 %107 to i16
  %134 = or i16 %132, %133
  store i16 %134, i16* %130, align 2
  br label %221

135:                                              ; preds = %77
  %136 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %71, i64 %73, i32 1
  %137 = load i8, i8* %136, align 1, !noalias !40
  %138 = icmp eq i8 %137, 1
  %139 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %71, i64 %73, i32 2, i32 0
  %140 = load i32, i32* %139, align 4, !noalias !40
  %141 = zext i32 %140 to i64
  %142 = zext i8 %80 to i32
  %143 = shl i32 1, %142
  %144 = load i32, i32* %38, align 8
  %145 = or i32 %144, %143
  store i32 %145, i32* %38, align 8
  %146 = shl nuw i64 %141, 32
  %147 = select i1 %138, i64 257, i64 513
  %148 = or i64 %146, %147
  %149 = zext i8 %80 to i64
  %150 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %40, i64 %149
  %151 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %150 to i64*
  store i64 %148, i64* %151, align 4
  br label %221

152:                                              ; preds = %70
  %153 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %74, i64 0, i32 0
  %154 = load i8, i8* %153, align 4
  switch i8 %154, label %221 [
    i8 0, label %155
    i8 1, label %198
    i8 2, label %207
  ]

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %71, i64 %73, i32 3
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %72, i64 %73, i32 3
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %157, %159
  br i1 %160, label %221, label %161

161:                                              ; preds = %155
  %162 = load %"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::wasm::LiftoffAssembler"** %29, align 8
  %163 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %71, i64 %73, i32 1
  %164 = load i8, i8* %163, align 1
  %165 = sub nsw i32 0, %159
  %166 = sext i32 %165 to i64
  %167 = add nsw i64 %166, 128
  %168 = icmp ult i64 %167, 256
  %169 = and i32 %165, -256
  %170 = select i1 %168, i32 0, i32 %169
  %171 = select i1 %168, i32 131072, i32 327680
  %172 = select i1 %168, i64 17664, i64 34048
  %173 = and i32 %165, 255
  %174 = or i32 %170, %173
  %175 = zext i32 %174 to i64
  %176 = shl nuw nsw i64 %175, 16
  %177 = or i64 %176, %172
  %178 = sub nsw i32 0, %157
  %179 = sext i32 %178 to i64
  %180 = add nsw i64 %179, 128
  %181 = icmp ult i64 %180, 256
  %182 = and i32 %178, -256
  %183 = select i1 %181, i32 0, i32 %182
  %184 = select i1 %181, i32 131072, i32 327680
  %185 = select i1 %181, i64 17664, i64 34048
  %186 = and i32 %178, 255
  %187 = or i32 %183, %186
  %188 = zext i32 %187 to i64
  %189 = shl nuw nsw i64 %188, 16
  %190 = or i64 %189, %185
  %191 = zext i8 %164 to i64
  %192 = lshr i64 3850, %191
  %193 = and i64 %192, 1
  %194 = icmp eq i64 %193, 0
  %195 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %162, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %194, label %197, label %196

196:                                              ; preds = %161
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %195, i32 10, i64 %190, i32 %184, i32 4) #15
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %195, i64 %177, i32 %171, i32 10, i32 4) #15
  br label %221

197:                                              ; preds = %161
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %195, i32 10, i64 %190, i32 %184, i32 8) #15
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %195, i64 %177, i32 %171, i32 10, i32 8) #15
  br label %221

198:                                              ; preds = %152
  %199 = load %"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::wasm::LiftoffAssembler"** %29, align 8
  %200 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %72, i64 %73, i32 3
  %201 = load i32, i32* %200, align 4
  %202 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %71, i64 %73, i32 2
  %203 = bitcast %union.anon* %202 to i8*
  %204 = load i8, i8* %203, align 4
  %205 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %71, i64 %73, i32 1
  %206 = load i8, i8* %205, align 1
  tail call void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_15LiftoffRegisterENS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"* %199, i32 %201, i8 %204, i8 zeroext %206) #15
  br label %221

207:                                              ; preds = %152
  %208 = load %"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::wasm::LiftoffAssembler"** %29, align 8
  %209 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %72, i64 %73, i32 3
  %210 = load i32, i32* %209, align 4
  %211 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %71, i64 %73, i32 1
  %212 = load i8, i8* %211, align 1, !noalias !43
  %213 = icmp eq i8 %212, 1
  %214 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %71, i64 %73, i32 2, i32 0
  %215 = load i32, i32* %214, align 4, !noalias !43
  br i1 %213, label %216, label %217

216:                                              ; preds = %207
  call void @llvm.memset.p0i8.i64(i8* align 4 %47, i8 0, i64 12, i1 false) #15, !alias.scope !43
  store i32 %215, i32* %48, align 4, !alias.scope !43
  br label %219

217:                                              ; preds = %207
  %218 = sext i32 %215 to i64
  store i64 0, i64* %45, align 4, !alias.scope !43
  store i64 %218, i64* %46, align 4, !alias.scope !43
  br label %219

219:                                              ; preds = %217, %216
  %220 = phi i32 [ 2, %217 ], [ 1, %216 ]
  store i32 %220, i32* %49, align 8, !alias.scope !43
  tail call void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_9WasmValueE(%"class.v8::internal::wasm::LiftoffAssembler"* %208, i32 %210, %"class.v8::internal::wasm::WasmValue"* nonnull byval(%"class.v8::internal::wasm::WasmValue") align 8 %5) #15
  br label %221

221:                                              ; preds = %70, %77, %85, %91, %104, %117, %119, %122, %135, %152, %155, %196, %197, %198, %219
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %37)
  %222 = add nuw nsw i64 %73, 1
  %223 = icmp eq i64 %222, %50
  br i1 %223, label %51, label %224

224:                                              ; preds = %221
  %225 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %35, align 8
  %226 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %36, align 8
  br label %70

227:                                              ; preds = %391, %51
  %228 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1, i64 0, i32 4, i32 0, i32 0
  %229 = load i32, i32* %228, align 8
  %230 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 4, i32 0, i32 0
  %231 = load i32, i32* %230, align 4
  %232 = icmp eq i32 %231, %229
  %233 = icmp eq i32 %229, -1
  %234 = or i1 %232, %233
  br i1 %234, label %412, label %394

235:                                              ; preds = %391, %53
  %236 = phi i64 [ 0, %53 ], [ %392, %391 ]
  %237 = trunc i64 %236 to i32
  %238 = add i32 %26, %237
  %239 = zext i32 %238 to i64
  %240 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %54, align 8
  %241 = add i32 %25, %237
  %242 = zext i32 %241 to i64
  %243 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %55, align 8
  %244 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %243, i64 %242
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %56)
  %245 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %240, i64 %239, i32 0
  %246 = load i8, i8* %245, align 4
  switch i8 %246, label %322 [
    i8 1, label %247
    i8 2, label %391
  ]

247:                                              ; preds = %235
  %248 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %240, i64 %239, i32 2
  %249 = bitcast %union.anon* %248 to i8*
  %250 = load i8, i8* %249, align 4
  %251 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %243, i64 %242, i32 3
  %252 = load i32, i32* %251, align 4
  %253 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %244, i64 0, i32 0
  %254 = load i8, i8* %253, align 4
  switch i8 %254, label %391 [
    i8 0, label %255
    i8 1, label %274
    i8 2, label %305
  ]

255:                                              ; preds = %247
  %256 = load i32, i32* %57, align 8
  %257 = zext i8 %250 to i32
  %258 = shl i32 1, %257
  %259 = and i32 %256, %258
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %391

261:                                              ; preds = %255
  %262 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %243, i64 %242, i32 1
  %263 = load i8, i8* %262, align 1
  %264 = or i32 %256, %258
  store i32 %264, i32* %57, align 8
  %265 = zext i32 %252 to i64
  %266 = shl nuw i64 %265, 32
  %267 = zext i8 %263 to i64
  %268 = shl nuw nsw i64 %267, 8
  %269 = or i64 %266, %268
  %270 = or i64 %269, 2
  %271 = zext i8 %250 to i64
  %272 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %59, i64 %271
  %273 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %272 to i64*
  store i64 %270, i64* %273, align 4
  br label %391

274:                                              ; preds = %247
  %275 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %243, i64 %242, i32 2
  %276 = bitcast %union.anon* %275 to i8*
  %277 = load i8, i8* %276, align 4
  %278 = icmp eq i8 %277, %250
  br i1 %278, label %391, label %279

279:                                              ; preds = %274
  %280 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %243, i64 %242, i32 1
  %281 = load i8, i8* %280, align 1
  %282 = load i32, i32* %60, align 4
  %283 = zext i8 %250 to i32
  %284 = shl i32 1, %283
  %285 = and i32 %282, %284
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %292, label %287

287:                                              ; preds = %279
  %288 = icmp eq i8 %281, 4
  br i1 %288, label %289, label %391

289:                                              ; preds = %287
  %290 = zext i8 %250 to i64
  %291 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %61, i64 %290, i32 1
  store i8 4, i8* %291, align 1
  br label %391

292:                                              ; preds = %279
  %293 = or i32 %282, %284
  store i32 %293, i32* %60, align 4
  %294 = zext i8 %277 to i64
  %295 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 2, i64 %294
  %296 = load i32, i32* %295, align 4
  %297 = add nsw i32 %296, 1
  store i32 %297, i32* %295, align 4
  %298 = zext i8 %250 to i64
  %299 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %61, i64 %298
  %300 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %299 to i16*
  %301 = zext i8 %281 to i16
  %302 = shl nuw i16 %301, 8
  %303 = zext i8 %277 to i16
  %304 = or i16 %302, %303
  store i16 %304, i16* %300, align 2
  br label %391

305:                                              ; preds = %247
  %306 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %243, i64 %242, i32 1
  %307 = load i8, i8* %306, align 1, !noalias !46
  %308 = icmp eq i8 %307, 1
  %309 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %243, i64 %242, i32 2, i32 0
  %310 = load i32, i32* %309, align 4, !noalias !46
  %311 = zext i32 %310 to i64
  %312 = zext i8 %250 to i32
  %313 = shl i32 1, %312
  %314 = load i32, i32* %57, align 8
  %315 = or i32 %314, %313
  store i32 %315, i32* %57, align 8
  %316 = shl nuw i64 %311, 32
  %317 = select i1 %308, i64 257, i64 513
  %318 = or i64 %316, %317
  %319 = zext i8 %250 to i64
  %320 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %59, i64 %319
  %321 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %320 to i64*
  store i64 %318, i64* %321, align 4
  br label %391

322:                                              ; preds = %235
  %323 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %244, i64 0, i32 0
  %324 = load i8, i8* %323, align 4
  switch i8 %324, label %391 [
    i8 0, label %325
    i8 1, label %368
    i8 2, label %377
  ]

325:                                              ; preds = %322
  %326 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %243, i64 %242, i32 3
  %327 = load i32, i32* %326, align 4
  %328 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %240, i64 %239, i32 3
  %329 = load i32, i32* %328, align 4
  %330 = icmp eq i32 %327, %329
  br i1 %330, label %391, label %331

331:                                              ; preds = %325
  %332 = load %"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::wasm::LiftoffAssembler"** %29, align 8
  %333 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %243, i64 %242, i32 1
  %334 = load i8, i8* %333, align 1
  %335 = sub nsw i32 0, %329
  %336 = sext i32 %335 to i64
  %337 = add nsw i64 %336, 128
  %338 = icmp ult i64 %337, 256
  %339 = and i32 %335, -256
  %340 = select i1 %338, i32 0, i32 %339
  %341 = select i1 %338, i32 131072, i32 327680
  %342 = select i1 %338, i64 17664, i64 34048
  %343 = and i32 %335, 255
  %344 = or i32 %340, %343
  %345 = zext i32 %344 to i64
  %346 = shl nuw nsw i64 %345, 16
  %347 = or i64 %346, %342
  %348 = sub nsw i32 0, %327
  %349 = sext i32 %348 to i64
  %350 = add nsw i64 %349, 128
  %351 = icmp ult i64 %350, 256
  %352 = and i32 %348, -256
  %353 = select i1 %351, i32 0, i32 %352
  %354 = select i1 %351, i32 131072, i32 327680
  %355 = select i1 %351, i64 17664, i64 34048
  %356 = and i32 %348, 255
  %357 = or i32 %353, %356
  %358 = zext i32 %357 to i64
  %359 = shl nuw nsw i64 %358, 16
  %360 = or i64 %359, %355
  %361 = zext i8 %334 to i64
  %362 = lshr i64 3850, %361
  %363 = and i64 %362, 1
  %364 = icmp eq i64 %363, 0
  %365 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %332, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %364, label %367, label %366

366:                                              ; preds = %331
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %365, i32 10, i64 %360, i32 %354, i32 4) #15
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %365, i64 %347, i32 %341, i32 10, i32 4) #15
  br label %391

367:                                              ; preds = %331
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %365, i32 10, i64 %360, i32 %354, i32 8) #15
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %365, i64 %347, i32 %341, i32 10, i32 8) #15
  br label %391

368:                                              ; preds = %322
  %369 = load %"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::wasm::LiftoffAssembler"** %29, align 8
  %370 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %240, i64 %239, i32 3
  %371 = load i32, i32* %370, align 4
  %372 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %243, i64 %242, i32 2
  %373 = bitcast %union.anon* %372 to i8*
  %374 = load i8, i8* %373, align 4
  %375 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %243, i64 %242, i32 1
  %376 = load i8, i8* %375, align 1
  tail call void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_15LiftoffRegisterENS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"* %369, i32 %371, i8 %374, i8 zeroext %376) #15
  br label %391

377:                                              ; preds = %322
  %378 = load %"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::wasm::LiftoffAssembler"** %29, align 8
  %379 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %240, i64 %239, i32 3
  %380 = load i32, i32* %379, align 4
  %381 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %243, i64 %242, i32 1
  %382 = load i8, i8* %381, align 1, !noalias !49
  %383 = icmp eq i8 %382, 1
  %384 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %243, i64 %242, i32 2, i32 0
  %385 = load i32, i32* %384, align 4, !noalias !49
  br i1 %383, label %386, label %387

386:                                              ; preds = %377
  call void @llvm.memset.p0i8.i64(i8* align 4 %66, i8 0, i64 12, i1 false) #15, !alias.scope !49
  store i32 %385, i32* %67, align 4, !alias.scope !49
  br label %389

387:                                              ; preds = %377
  %388 = sext i32 %385 to i64
  store i64 0, i64* %64, align 4, !alias.scope !49
  store i64 %388, i64* %65, align 4, !alias.scope !49
  br label %389

389:                                              ; preds = %387, %386
  %390 = phi i32 [ 2, %387 ], [ 1, %386 ]
  store i32 %390, i32* %68, align 8, !alias.scope !49
  tail call void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_9WasmValueE(%"class.v8::internal::wasm::LiftoffAssembler"* %378, i32 %380, %"class.v8::internal::wasm::WasmValue"* nonnull byval(%"class.v8::internal::wasm::WasmValue") align 8 %6) #15
  br label %391

391:                                              ; preds = %235, %247, %255, %261, %274, %287, %289, %292, %305, %322, %325, %366, %367, %368, %389
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %56)
  %392 = add nuw nsw i64 %236, 1
  %393 = icmp eq i64 %392, %69
  br i1 %393, label %227, label %235

394:                                              ; preds = %227
  %395 = icmp eq i32 %3, 0
  br i1 %395, label %396, label %407

396:                                              ; preds = %394
  %397 = and i32 %229, 255
  %398 = zext i32 %397 to i64
  %399 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1, i64 0, i32 2, i64 %398
  store i32 0, i32* %399, align 4
  %400 = load i32, i32* %228, align 8
  %401 = and i32 %400, 255
  %402 = shl i32 1, %401
  %403 = xor i32 %402, -1
  %404 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %1, i64 0, i32 1, i32 0
  %405 = load i32, i32* %404, align 4
  %406 = and i32 %405, %403
  store i32 %406, i32* %404, align 4
  store i32 -1, i32* %228, align 8
  br label %412

407:                                              ; preds = %394
  %408 = icmp eq i32 %231, -1
  %409 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %408, label %410, label %411

410:                                              ; preds = %407
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %409, i32 %229, i64 15746304, i32 131072, i32 8) #15
  br label %412

411:                                              ; preds = %407
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %409, i32 %229, i32 %231, i32 8) #15
  br label %412

412:                                              ; preds = %227, %396, %411, %410
  call fastcc void @_ZN2v88internal4wasm12_GLOBAL__N_119StackTransferRecipe7ExecuteEv(%"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %27) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEPNS2_8VarStateE(%"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::wasm::WasmValue", align 8
  %4 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %1, i64 0, i32 0
  %5 = load i8, i8* %4, align 4
  switch i8 %5, label %48 [
    i8 0, label %49
    i8 1, label %6
    i8 2, label %27
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %1, i64 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %1, i64 0, i32 2
  %10 = bitcast %union.anon* %9 to i8*
  %11 = load i8, i8* %10, align 4
  %12 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %1, i64 0, i32 1
  %13 = load i8, i8* %12, align 1
  tail call void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_15LiftoffRegisterENS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i32 %8, i8 %11, i8 zeroext %13)
  %14 = load i8, i8* %10, align 4
  %15 = zext i8 %14 to i64
  %16 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, -1
  store i32 %18, i32* %16, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %48

20:                                               ; preds = %6
  %21 = zext i8 %14 to i32
  %22 = shl i32 1, %21
  %23 = xor i32 %22, -1
  %24 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, %23
  store i32 %26, i32* %24, align 4
  br label %48

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %1, i64 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %1, i64 0, i32 1
  %31 = load i8, i8* %30, align 1, !noalias !52
  %32 = icmp eq i8 %31, 1
  %33 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %1, i64 0, i32 2, i32 0
  %34 = load i32, i32* %33, align 4, !noalias !52
  br i1 %32, label %35, label %39

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %3, i64 0, i32 1, i64 0
  %37 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %3, i64 0, i32 1, i64 4
  call void @llvm.memset.p0i8.i64(i8* align 4 %37, i8 0, i64 12, i1 false) #15, !alias.scope !52
  %38 = bitcast i8* %36 to i32*
  store i32 %34, i32* %38, align 4, !alias.scope !52
  br label %45

39:                                               ; preds = %27
  %40 = sext i32 %34 to i64
  %41 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %3, i64 0, i32 1, i64 0
  %42 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %3, i64 0, i32 1, i64 8
  %43 = bitcast i8* %42 to i64*
  store i64 0, i64* %43, align 4, !alias.scope !52
  %44 = bitcast i8* %41 to i64*
  store i64 %40, i64* %44, align 4, !alias.scope !52
  br label %45

45:                                               ; preds = %35, %39
  %46 = phi i32 [ 2, %39 ], [ 1, %35 ]
  %47 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %3, i64 0, i32 0, i32 0
  store i32 %46, i32* %47, align 8, !alias.scope !52
  tail call void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_9WasmValueE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i32 %29, %"class.v8::internal::wasm::WasmValue"* nonnull byval(%"class.v8::internal::wasm::WasmValue") align 8 %3)
  br label %48

48:                                               ; preds = %20, %6, %2, %45
  store i8 0, i8* %4, align 4
  br label %49

49:                                               ; preds = %2, %48
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_15LiftoffRegisterENS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"*, i32, i8, i8 zeroext) local_unnamed_addr #4 comdat align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, %1
  br i1 %7, label %9, label %8

8:                                                ; preds = %4
  store i32 %1, i32* %5, align 8
  br label %9

9:                                                ; preds = %4, %8
  %10 = sub nsw i32 0, %1
  %11 = sext i32 %10 to i64
  %12 = add nsw i64 %11, 128
  %13 = icmp ult i64 %12, 256
  %14 = and i32 %10, -256
  %15 = select i1 %13, i32 0, i32 %14
  %16 = select i1 %13, i32 131072, i32 327680
  %17 = select i1 %13, i64 17664, i64 34048
  %18 = and i32 %10, 255
  %19 = or i32 %15, %18
  %20 = zext i32 %19 to i64
  %21 = shl nuw nsw i64 %20, 16
  %22 = or i64 %21, %17
  switch i8 %3, label %56 [
    i8 1, label %23
    i8 2, label %26
    i8 11, label %26
    i8 10, label %26
    i8 8, label %26
    i8 9, label %26
    i8 3, label %29
    i8 4, label %38
    i8 5, label %47
  ]

23:                                               ; preds = %9
  %24 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = zext i8 %2 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %24, i64 %22, i32 %16, i32 %25, i32 4) #15
  br label %57

26:                                               ; preds = %9, %9, %9, %9, %9
  %27 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = zext i8 %2 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %27, i64 %22, i32 %16, i32 %28, i32 8) #15
  br label %57

29:                                               ; preds = %9
  %30 = zext i8 %2 to i32
  %31 = add nsw i32 %30, -10
  %32 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %34 = and i32 %33, 32
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %29
  tail call void @_ZN2v88internal9Assembler3vssEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %32, i8 zeroext 17, i32 %31, i32 0, i64 %22, i32 %16) #15
  br label %57

37:                                               ; preds = %29
  tail call void @_ZN2v88internal9Assembler5movssENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %32, i64 %22, i32 %16, i32 %31) #15
  br label %57

38:                                               ; preds = %9
  %39 = zext i8 %2 to i32
  %40 = add nsw i32 %39, -10
  %41 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %43 = and i32 %42, 32
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %41, i8 zeroext 17, i32 %40, i32 0, i64 %22, i32 %16, i32 3, i32 1, i32 0, i32 5) #15
  br label %57

46:                                               ; preds = %38
  tail call void @_ZN2v88internal9Assembler5movsdENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %41, i64 %22, i32 %16, i32 %40) #15
  br label %57

47:                                               ; preds = %9
  %48 = zext i8 %2 to i32
  %49 = add nsw i32 %48, -10
  %50 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %51 = and i32 %50, 32
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %52, label %55, label %54

54:                                               ; preds = %47
  tail call void @_ZN2v88internal9Assembler7vmovdquENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %53, i64 %22, i32 %16, i32 %49) #15
  br label %57

55:                                               ; preds = %47
  tail call void @_ZN2v88internal9Assembler6movupsENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %53, i64 %22, i32 %16, i32 %49) #15
  br label %57

56:                                               ; preds = %9
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

57:                                               ; preds = %55, %54, %46, %45, %37, %36, %26, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler11SpillLocalsEv(%"class.v8::internal::wasm::LiftoffAssembler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::wasm::WasmValue", align 8
  %3 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = bitcast %"class.v8::internal::wasm::WasmValue"* %2 to i8*
  %9 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %2, i64 0, i32 1, i64 0
  %10 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %2, i64 0, i32 1, i64 8
  %11 = bitcast i8* %10 to i64*
  %12 = bitcast i8* %9 to i64*
  %13 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %2, i64 0, i32 1, i64 4
  %14 = bitcast i8* %9 to i32*
  %15 = getelementptr inbounds %"class.v8::internal::wasm::WasmValue", %"class.v8::internal::wasm::WasmValue"* %2, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  br label %18

17:                                               ; preds = %59, %1
  ret void

18:                                               ; preds = %6, %59
  %19 = phi i32 [ %4, %6 ], [ %60, %59 ]
  %20 = phi i64 [ 0, %6 ], [ %61, %59 ]
  %21 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %8)
  %22 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %21, i64 %20, i32 0
  %23 = load i8, i8* %22, align 4
  switch i8 %23, label %57 [
    i8 0, label %59
    i8 1, label %24
    i8 2, label %44
  ]

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %21, i64 %20, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %21, i64 %20, i32 2
  %28 = bitcast %union.anon* %27 to i8*
  %29 = load i8, i8* %28, align 4
  %30 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %21, i64 %20, i32 1
  %31 = load i8, i8* %30, align 1
  tail call void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_15LiftoffRegisterENS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i32 %26, i8 %29, i8 zeroext %31) #15
  %32 = load i8, i8* %28, align 4
  %33 = zext i8 %32 to i64
  %34 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = add i32 %35, -1
  store i32 %36, i32* %34, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %57

38:                                               ; preds = %24
  %39 = zext i8 %32 to i32
  %40 = shl i32 1, %39
  %41 = xor i32 %40, -1
  %42 = load i32, i32* %16, align 4
  %43 = and i32 %42, %41
  store i32 %43, i32* %16, align 4
  br label %57

44:                                               ; preds = %18
  %45 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %21, i64 %20, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %21, i64 %20, i32 1
  %48 = load i8, i8* %47, align 1, !noalias !55
  %49 = icmp eq i8 %48, 1
  %50 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %21, i64 %20, i32 2, i32 0
  %51 = load i32, i32* %50, align 4, !noalias !55
  br i1 %49, label %52, label %53

52:                                               ; preds = %44
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 12, i1 false) #15, !alias.scope !55
  store i32 %51, i32* %14, align 4, !alias.scope !55
  br label %55

53:                                               ; preds = %44
  %54 = sext i32 %51 to i64
  store i64 0, i64* %11, align 4, !alias.scope !55
  store i64 %54, i64* %12, align 4, !alias.scope !55
  br label %55

55:                                               ; preds = %53, %52
  %56 = phi i32 [ 2, %53 ], [ 1, %52 ]
  store i32 %56, i32* %15, align 8, !alias.scope !55
  tail call void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_9WasmValueE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i32 %46, %"class.v8::internal::wasm::WasmValue"* nonnull byval(%"class.v8::internal::wasm::WasmValue") align 8 %2) #15
  br label %57

57:                                               ; preds = %55, %38, %24, %18
  store i8 0, i8* %22, align 4
  %58 = load i32, i32* %3, align 4
  br label %59

59:                                               ; preds = %18, %57
  %60 = phi i32 [ %19, %18 ], [ %58, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %8)
  %61 = add nuw nsw i64 %20, 1
  %62 = zext i32 %60 to i64
  %63 = icmp ult i64 %61, %62
  br i1 %63, label %18, label %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler17SpillAllRegistersEv(%"class.v8::internal::wasm::LiftoffAssembler"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 1
  %4 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 12
  %10 = trunc i64 %9 to i32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %1
  %13 = inttoptr i64 %7 to %"class.v8::internal::wasm::LiftoffAssembler::VarState"*
  %14 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %2, i64 0, i32 0, i32 0
  %15 = and i64 %9, 4294967295
  br label %34

16:                                               ; preds = %48, %1
  %17 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 4, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %31, label %20

20:                                               ; preds = %16
  %21 = and i32 %18, 255
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %22
  store i32 0, i32* %23, align 4
  %24 = load i32, i32* %17, align 8
  %25 = and i32 %24, 255
  %26 = shl i32 1, %25
  %27 = xor i32 %26, -1
  %28 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, %27
  store i32 %30, i32* %28, align 4
  store i32 -1, i32* %17, align 8
  br label %31

31:                                               ; preds = %16, %20
  %32 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  %33 = bitcast i32* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 76, i1 false) #15
  ret void

34:                                               ; preds = %51, %12
  %35 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %13, %12 ], [ %52, %51 ]
  %36 = phi i64 [ 0, %12 ], [ %49, %51 ]
  %37 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %35, i64 %36, i32 0
  %38 = load i8, i8* %37, align 4
  %39 = icmp eq i8 %38, 1
  br i1 %39, label %40, label %48

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %35, i64 %36, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %35, i64 %36, i32 2
  %44 = bitcast %union.anon* %43 to i8*
  %45 = load i8, i8* %44, align 4
  %46 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %35, i64 %36, i32 1
  %47 = load i8, i8* %46, align 1
  tail call void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_15LiftoffRegisterENS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i32 %42, i8 %45, i8 zeroext %47)
  store i8 0, i8* %37, align 4
  br label %48

48:                                               ; preds = %34, %40
  %49 = add nuw nsw i64 %36, 1
  %50 = icmp eq i64 %49, %15
  br i1 %50, label %16, label %51

51:                                               ; preds = %48
  %52 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %14, align 8
  br label %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler13ClearRegisterENS0_8RegisterESt16initializer_listIPS3_ENS1_14LiftoffRegListE(%"class.v8::internal::wasm::LiftoffAssembler"*, i32, %"class.v8::internal::Register"**, i64, i32) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 4, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, %1
  br i1 %9, label %10, label %23

10:                                               ; preds = %5
  %11 = icmp eq i32 %1, -1
  br i1 %11, label %128, label %12

12:                                               ; preds = %10
  %13 = and i32 %1, 255
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %14
  store i32 0, i32* %15, align 4
  %16 = load i32, i32* %7, align 8
  %17 = and i32 %16, 255
  %18 = shl i32 1, %17
  %19 = xor i32 %18, -1
  %20 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, %19
  store i32 %22, i32* %20, align 4
  store i32 -1, i32* %7, align 8
  br label %128

23:                                               ; preds = %5
  %24 = trunc i32 %1 to i8
  %25 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %1, 255
  %28 = shl i32 1, %27
  %29 = and i32 %26, %28
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %79, label %31

31:                                               ; preds = %23
  %32 = zext i32 %27 to i64
  %33 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 1
  %36 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %6 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = sub i64 %37, %39
  %41 = sdiv exact i64 %40, 12
  %42 = trunc i64 %41 to i32
  %43 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %6, i64 0, i32 0, i32 0
  %44 = inttoptr i64 %39 to %"class.v8::internal::wasm::LiftoffAssembler::VarState"*
  br label %45

45:                                               ; preds = %70, %31
  %46 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %71, %70 ], [ %44, %31 ]
  %47 = phi i32 [ %51, %70 ], [ %42, %31 ]
  %48 = phi i32 [ %68, %70 ], [ %34, %31 ]
  br label %49

49:                                               ; preds = %61, %45
  %50 = phi i32 [ %47, %45 ], [ %51, %61 ]
  %51 = add i32 %50, -1
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i64 %52, i32 0
  %54 = load i8, i8* %53, align 4
  %55 = icmp eq i8 %54, 1
  br i1 %55, label %56, label %61

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i64 %52, i32 2
  %58 = bitcast %union.anon* %57 to i8*
  %59 = load i8, i8* %58, align 4
  %60 = icmp eq i8 %59, %24
  br i1 %60, label %62, label %61

61:                                               ; preds = %56, %49
  br label %49

62:                                               ; preds = %56
  %63 = zext i32 %51 to i64
  %64 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i64 %63, i32 3
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %46, i64 %63, i32 1
  %67 = load i8, i8* %66, align 1
  tail call void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_15LiftoffRegisterENS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i32 %65, i8 %24, i8 zeroext %67) #15
  store i8 0, i8* %53, align 4
  %68 = add nsw i32 %48, -1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %62
  %71 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %43, align 8
  br label %45

72:                                               ; preds = %62
  store i32 0, i32* %33, align 4
  %73 = xor i32 %28, -1
  %74 = load i32, i32* %25, align 4
  %75 = and i32 %74, %73
  store i32 %75, i32* %25, align 4
  %76 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 3, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = or i32 %77, %28
  store i32 %78, i32* %76, align 4
  br label %79

79:                                               ; preds = %23, %72
  %80 = getelementptr inbounds %"class.v8::internal::Register"*, %"class.v8::internal::Register"** %2, i64 %3
  %81 = icmp eq i64 %3, 0
  br i1 %81, label %128, label %82

82:                                               ; preds = %79
  %83 = and i32 %4, 719
  %84 = xor i32 %83, 719
  %85 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %86

86:                                               ; preds = %82, %124
  %87 = phi %"class.v8::internal::Register"** [ %2, %82 ], [ %126, %124 ]
  %88 = phi i32 [ -1, %82 ], [ %125, %124 ]
  %89 = load %"class.v8::internal::Register"*, %"class.v8::internal::Register"** %87, align 8
  %90 = getelementptr inbounds %"class.v8::internal::Register", %"class.v8::internal::Register"* %89, i64 0, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, %1
  br i1 %92, label %93, label %124

93:                                               ; preds = %86
  %94 = icmp eq i32 %88, -1
  br i1 %94, label %95, label %122

95:                                               ; preds = %93
  %96 = load i32, i32* %25, align 8
  %97 = xor i32 %96, -1
  %98 = and i32 %84, %97
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = tail call i32 @llvm.cttz.i32(i32 %98, i1 false) #15, !range !2
  %102 = trunc i32 %101 to i8
  br label %119

103:                                              ; preds = %95
  %104 = load i32, i32* %7, align 4
  %105 = icmp eq i32 %104, -1
  br i1 %105, label %117, label %106

106:                                              ; preds = %103
  %107 = and i32 %104, 255
  %108 = shl i32 1, %107
  %109 = and i32 %108, %84
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %117, label %111

111:                                              ; preds = %106
  %112 = trunc i32 %104 to i8
  %113 = zext i32 %107 to i64
  %114 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %113
  store i32 0, i32* %114, align 4
  %115 = xor i32 %108, -1
  %116 = and i32 %96, %115
  store i32 %116, i32* %25, align 4
  store i32 -1, i32* %7, align 8
  br label %119

117:                                              ; preds = %106, %103
  %118 = tail call i8 @_ZN2v88internal4wasm16LiftoffAssembler16SpillOneRegisterENS1_14LiftoffRegListE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i32 %84) #15
  br label %119

119:                                              ; preds = %100, %111, %117
  %120 = phi i8 [ %102, %100 ], [ %112, %111 ], [ %118, %117 ]
  %121 = zext i8 %120 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %85, i32 %121, i32 %1, i32 8) #15
  br label %122

122:                                              ; preds = %119, %93
  %123 = phi i32 [ %121, %119 ], [ %88, %93 ]
  store i32 %123, i32* %90, align 4
  br label %124

124:                                              ; preds = %86, %122
  %125 = phi i32 [ %88, %86 ], [ %123, %122 ]
  %126 = getelementptr inbounds %"class.v8::internal::Register"*, %"class.v8::internal::Register"** %87, i64 1
  %127 = icmp eq %"class.v8::internal::Register"** %126, %80
  br i1 %127, label %128, label %86

128:                                              ; preds = %124, %79, %12, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler13SpillRegisterENS1_15LiftoffRegisterE(%"class.v8::internal::wasm::LiftoffAssembler"*, i8) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3
  %4 = zext i8 %1 to i64
  %5 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %4
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 12
  %14 = trunc i64 %13 to i32
  %15 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %3, i64 0, i32 0, i32 0
  %16 = inttoptr i64 %11 to %"class.v8::internal::wasm::LiftoffAssembler::VarState"*
  br label %17

17:                                               ; preds = %42, %2
  %18 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %43, %42 ], [ %16, %2 ]
  %19 = phi i32 [ %23, %42 ], [ %14, %2 ]
  %20 = phi i32 [ %40, %42 ], [ %6, %2 ]
  br label %21

21:                                               ; preds = %33, %17
  %22 = phi i32 [ %19, %17 ], [ %23, %33 ]
  %23 = add i32 %22, -1
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %18, i64 %24, i32 0
  %26 = load i8, i8* %25, align 4
  %27 = icmp eq i8 %26, 1
  br i1 %27, label %28, label %33

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %18, i64 %24, i32 2
  %30 = bitcast %union.anon* %29 to i8*
  %31 = load i8, i8* %30, align 4
  %32 = icmp eq i8 %31, %1
  br i1 %32, label %34, label %33

33:                                               ; preds = %28, %21
  br label %21

34:                                               ; preds = %28
  %35 = zext i32 %23 to i64
  %36 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %18, i64 %35, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %18, i64 %35, i32 1
  %39 = load i8, i8* %38, align 1
  tail call void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_15LiftoffRegisterENS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i32 %37, i8 %1, i8 zeroext %39)
  store i8 0, i8* %25, align 4
  %40 = add nsw i32 %20, -1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %34
  %43 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %15, align 8
  br label %17

44:                                               ; preds = %34
  %45 = zext i8 %1 to i32
  store i32 0, i32* %5, align 4
  %46 = shl i32 1, %45
  %47 = xor i32 %46, -1
  %48 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = and i32 %49, %47
  store i32 %50, i32* %48, align 4
  %51 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 3, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = or i32 %52, %46
  store i32 %53, i32* %51, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler18PrepareBuiltinCallEPKNS0_9SignatureINS1_9ValueKindEEEPNS0_8compiler14CallDescriptorESt16initializer_listINS2_8VarStateEE(%"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::Signature"* nocapture readonly, %"class.v8::internal::compiler::CallDescriptor"* nocapture readonly, %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, i64) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::wasm::LiftoffStackSlots", align 8
  %7 = alloca %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", align 8
  %8 = alloca %"class.v8::internal::wasm::LiftoffRegList", align 4
  %9 = bitcast %"class.v8::internal::wasm::LiftoffStackSlots"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffStackSlots", %"class.v8::internal::wasm::LiftoffStackSlots"* %6, i64 0, i32 0, i32 3
  %11 = bitcast %"class.v8::internal::wasm::LiftoffStackSlots"* %6 to %"struct.std::__1::aligned_storage<192, 4>::type"**
  store %"struct.std::__1::aligned_storage<192, 4>::type"* %10, %"struct.std::__1::aligned_storage<192, 4>::type"** %11, align 8
  %12 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffStackSlots", %"class.v8::internal::wasm::LiftoffStackSlots"* %6, i64 0, i32 0, i32 1
  %13 = bitcast %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %12 to %"struct.std::__1::aligned_storage<192, 4>::type"**
  store %"struct.std::__1::aligned_storage<192, 4>::type"* %10, %"struct.std::__1::aligned_storage<192, 4>::type"** %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffStackSlots", %"class.v8::internal::wasm::LiftoffStackSlots"* %6, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"struct.std::__1::aligned_storage<192, 4>::type", %"struct.std::__1::aligned_storage<192, 4>::type"* %10, i64 1
  %16 = bitcast %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %14 to %"struct.std::__1::aligned_storage<192, 4>::type"**
  store %"struct.std::__1::aligned_storage<192, 4>::type"* %15, %"struct.std::__1::aligned_storage<192, 4>::type"** %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffStackSlots", %"class.v8::internal::wasm::LiftoffStackSlots"* %6, i64 0, i32 1
  store %"class.v8::internal::wasm::LiftoffAssembler"* %0, %"class.v8::internal::wasm::LiftoffAssembler"** %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %18) #15
  %19 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 2, i64 0
  %20 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 5
  %21 = bitcast i32* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %21, i8 0, i64 80, i1 false) #15
  store %"class.v8::internal::wasm::LiftoffAssembler"* %0, %"class.v8::internal::wasm::LiftoffAssembler"** %20, align 8
  %22 = bitcast %"class.v8::internal::wasm::LiftoffRegList"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #15
  %23 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegList", %"class.v8::internal::wasm::LiftoffRegList"* %8, i64 0, i32 0
  store i32 0, i32* %23, align 4
  call fastcc void @_ZN2v88internal4wasm12_GLOBAL__N_121PrepareStackTransfersEPKNS0_9SignatureINS1_9ValueKindEEEPNS0_8compiler14CallDescriptorEPKNS1_16LiftoffAssembler8VarStateEPNS1_17LiftoffStackSlotsEPNS2_19StackTransferRecipeEPNS1_14LiftoffRegListE(%"class.v8::internal::Signature"* %1, %"class.v8::internal::compiler::CallDescriptor"* %2, %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %3, %"class.v8::internal::wasm::LiftoffStackSlots"* nonnull %6, %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* nonnull %7, %"class.v8::internal::wasm::LiftoffRegList"* nonnull %8)
  %24 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3
  %25 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 1
  %26 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = sdiv exact i64 %30, 12
  %32 = trunc i64 %31 to i32
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %5
  %35 = inttoptr i64 %29 to %"class.v8::internal::wasm::LiftoffAssembler::VarState"*
  %36 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %24, i64 0, i32 0, i32 0
  %37 = and i64 %31, 4294967295
  br label %53

38:                                               ; preds = %67, %5
  %39 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 4, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, -1
  br i1 %41, label %72, label %42

42:                                               ; preds = %38
  %43 = and i32 %40, 255
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %44
  store i32 0, i32* %45, align 4
  %46 = load i32, i32* %39, align 8
  %47 = and i32 %46, 255
  %48 = shl i32 1, %47
  %49 = xor i32 %48, -1
  %50 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = and i32 %51, %49
  store i32 %52, i32* %50, align 4
  store i32 -1, i32* %39, align 8
  br label %72

53:                                               ; preds = %70, %34
  %54 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %35, %34 ], [ %71, %70 ]
  %55 = phi i64 [ 0, %34 ], [ %68, %70 ]
  %56 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %54, i64 %55, i32 0
  %57 = load i8, i8* %56, align 4
  %58 = icmp eq i8 %57, 1
  br i1 %58, label %59, label %67

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %54, i64 %55, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %54, i64 %55, i32 2
  %63 = bitcast %union.anon* %62 to i8*
  %64 = load i8, i8* %63, align 4
  %65 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %54, i64 %55, i32 1
  %66 = load i8, i8* %65, align 1
  call void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_15LiftoffRegisterENS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i32 %61, i8 %64, i8 zeroext %66) #15
  store i8 0, i8* %56, align 4
  br label %67

67:                                               ; preds = %59, %53
  %68 = add nuw nsw i64 %55, 1
  %69 = icmp eq i64 %68, %37
  br i1 %69, label %38, label %70

70:                                               ; preds = %67
  %71 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %36, align 8
  br label %53

72:                                               ; preds = %38, %42
  %73 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  %74 = bitcast i32* %73 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 76, i1 false) #15
  %75 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %2, i64 0, i32 5
  %76 = load i64, i64* %75, align 8
  %77 = trunc i64 %76 to i32
  %78 = icmp sgt i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %72
  call void @_ZN2v88internal4wasm17LiftoffStackSlots9ConstructEi(%"class.v8::internal::wasm::LiftoffStackSlots"* nonnull %6, i32 %77)
  br label %80

80:                                               ; preds = %79, %72
  call fastcc void @_ZN2v88internal4wasm12_GLOBAL__N_119StackTransferRecipe7ExecuteEv(%"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* nonnull %7)
  call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 76, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #15
  call fastcc void @_ZN2v88internal4wasm12_GLOBAL__N_119StackTransferRecipe7ExecuteEv(%"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %18) #15
  %81 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffStackSlots", %"class.v8::internal::wasm::LiftoffStackSlots"* %6, i64 0, i32 0, i32 0
  %82 = load %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %81, align 8
  %83 = bitcast %"struct.std::__1::aligned_storage<192, 4>::type"* %10 to %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*
  %84 = icmp eq %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %82, %83
  br i1 %84, label %87, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %82, i64 0, i32 0, i32 0
  call void @free(i8* %86) #15
  br label %87

87:                                               ; preds = %80, %85
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %9) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal4wasm12_GLOBAL__N_121PrepareStackTransfersEPKNS0_9SignatureINS1_9ValueKindEEEPNS0_8compiler14CallDescriptorEPKNS1_16LiftoffAssembler8VarStateEPNS1_17LiftoffStackSlotsEPNS2_19StackTransferRecipeEPNS1_14LiftoffRegListE(%"class.v8::internal::Signature"* nocapture readonly, %"class.v8::internal::compiler::CallDescriptor"* nocapture readonly, %"class.v8::internal::wasm::LiftoffAssembler::VarState"* nocapture readonly, %"class.v8::internal::wasm::LiftoffStackSlots"*, %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* nocapture, %"class.v8::internal::wasm::LiftoffRegList"* nocapture) unnamed_addr #0 {
  %7 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %1, i64 0, i32 4
  %8 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %0, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i32
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %34, label %12

12:                                               ; preds = %6
  %13 = load %"class.v8::internal::Signature.1221"*, %"class.v8::internal::Signature.1221"** %7, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Signature.1221", %"class.v8::internal::Signature.1221"* %13, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = trunc i64 %15 to i32
  %17 = add i32 %16, 1
  %18 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %0, i64 0, i32 2
  %19 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %0, i64 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %1, i64 0, i32 3
  %21 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffStackSlots", %"class.v8::internal::wasm::LiftoffStackSlots"* %3, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffStackSlots", %"class.v8::internal::wasm::LiftoffStackSlots"* %3, i64 0, i32 0, i32 2
  %23 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffStackSlots", %"class.v8::internal::wasm::LiftoffStackSlots"* %3, i64 0, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegList", %"class.v8::internal::wasm::LiftoffRegList"* %5, i64 0, i32 0
  %25 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 4, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 1
  %27 = bitcast %"struct.std::__1::aligned_storage<144, 4>::type"* %26 to %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"*
  %28 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 3, i32 0
  %29 = bitcast %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4 to %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"*
  %30 = and i64 %9, 4294967295
  br label %35

31:                                               ; preds = %247, %180, %187, %191, %200, %208, %210, %213, %226, %144, %140, %127, %124, %122, %114, %101, %92, %85
  %32 = icmp eq i32 %39, 0
  %33 = add nsw i64 %36, -1
  br i1 %32, label %34, label %35

34:                                               ; preds = %31, %6
  ret void

35:                                               ; preds = %12, %31
  %36 = phi i64 [ %30, %12 ], [ %33, %31 ]
  %37 = phi i32 [ %17, %12 ], [ %57, %31 ]
  %38 = trunc i64 %36 to i32
  %39 = add i32 %38, -1
  %40 = zext i32 %39 to i64
  %41 = load i8*, i8** %18, align 8
  %42 = load i64, i64* %19, align 8
  %43 = add i64 %42, %40
  %44 = getelementptr inbounds i8, i8* %41, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %2, i64 %40, i32 3
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %2, i64 %40, i32 0
  %49 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %2, i64 %40, i32 1
  %50 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %2, i64 %40, i32 2, i32 0
  %51 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %2, i64 %40, i32 2
  %52 = bitcast %union.anon* %51 to i8*
  %53 = zext i32 %47 to i64
  %54 = shl nuw i64 %53, 32
  %55 = or i64 %54, 2
  %56 = icmp eq i8 %45, 3
  %57 = add i32 %37, -1
  %58 = icmp eq i32 %57, 0
  br i1 %56, label %59, label %153

59:                                               ; preds = %35
  br i1 %58, label %70, label %60

60:                                               ; preds = %59
  %61 = zext i32 %57 to i64
  %62 = load %"class.v8::internal::Signature.1221"*, %"class.v8::internal::Signature.1221"** %7, align 8
  %63 = add nsw i64 %61, -1
  %64 = getelementptr inbounds %"class.v8::internal::Signature.1221", %"class.v8::internal::Signature.1221"* %62, i64 0, i32 2
  %65 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Signature.1221", %"class.v8::internal::Signature.1221"* %62, i64 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %63, %67
  %69 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %65, i64 %68
  br label %70

70:                                               ; preds = %59, %60
  %71 = phi %"class.v8::internal::compiler::LinkageLocation"* [ %69, %60 ], [ %20, %59 ]
  %72 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %71 to i64*
  %73 = load i64, i64* %72, align 4
  %74 = trunc i64 %73 to i32
  %75 = and i32 %74, 1
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %70
  %78 = ashr i32 %74, 1
  %79 = xor i32 %78, -1
  %80 = load %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %21, align 8
  %81 = load %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %22, align 8
  %82 = icmp eq %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %80, %81
  br i1 %82, label %83, label %85, !prof !3

83:                                               ; preds = %77
  %84 = tail call %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* @_ZN2v84base11SmallVectorINS_8internal4wasm17LiftoffStackSlots4SlotELm8EE4GrowEv(%"class.v8::base::SmallVector.1224"* %23) #15
  br label %85

85:                                               ; preds = %83, %77
  %86 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %84, %83 ], [ %80, %77 ]
  %87 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %86, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* align 4 %48, i64 12, i1 false) #15
  %88 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %86, i64 0, i32 1
  store i32 %47, i32* %88, align 4
  %89 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %86, i64 0, i32 2
  store i8 0, i8* %89, align 4
  %90 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %86, i64 0, i32 3
  store i32 %79, i32* %90, align 4
  %91 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %86, i64 1
  store %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %91, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %21, align 8
  br label %31

92:                                               ; preds = %70
  %93 = lshr i32 %74, 1
  %94 = trunc i32 %93 to i8
  %95 = add i8 %94, 10
  %96 = zext i8 %95 to i32
  %97 = shl i32 1, %96
  %98 = load i32, i32* %24, align 4
  %99 = or i32 %97, %98
  store i32 %99, i32* %24, align 4
  %100 = load i8, i8* %48, align 4
  switch i8 %100, label %31 [
    i8 0, label %140
    i8 1, label %114
    i8 2, label %101
  ]

101:                                              ; preds = %92
  %102 = load i8, i8* %49, align 1, !noalias !58
  %103 = icmp eq i8 %102, 1
  %104 = load i32, i32* %50, align 4, !noalias !58
  %105 = zext i32 %104 to i64
  %106 = load i32, i32* %25, align 4
  %107 = or i32 %106, %97
  store i32 %107, i32* %25, align 4
  %108 = shl nuw i64 %105, 32
  %109 = select i1 %103, i64 257, i64 513
  %110 = or i64 %108, %109
  %111 = zext i8 %95 to i64
  %112 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %27, i64 %111
  %113 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %112 to i64*
  store i64 %110, i64* %113, align 4
  br label %31

114:                                              ; preds = %92
  %115 = load i8, i8* %52, align 4
  %116 = icmp eq i8 %115, %95
  br i1 %116, label %31, label %117

117:                                              ; preds = %114
  %118 = load i8, i8* %49, align 1
  %119 = load i32, i32* %28, align 4
  %120 = and i32 %119, %97
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %127, label %122

122:                                              ; preds = %117
  %123 = icmp eq i8 %118, 4
  br i1 %123, label %124, label %31

124:                                              ; preds = %122
  %125 = zext i8 %95 to i64
  %126 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %29, i64 %125, i32 1
  store i8 4, i8* %126, align 1
  br label %31

127:                                              ; preds = %117
  %128 = or i32 %119, %97
  store i32 %128, i32* %28, align 4
  %129 = zext i8 %115 to i64
  %130 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 2, i64 %129
  %131 = load i32, i32* %130, align 4
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* %130, align 4
  %133 = zext i8 %95 to i64
  %134 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %29, i64 %133
  %135 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %134 to i16*
  %136 = zext i8 %118 to i16
  %137 = shl nuw i16 %136, 8
  %138 = zext i8 %115 to i16
  %139 = or i16 %137, %138
  store i16 %139, i16* %135, align 1
  br label %31

140:                                              ; preds = %92
  %141 = load i32, i32* %25, align 4
  %142 = and i32 %141, %97
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %31

144:                                              ; preds = %140
  %145 = load i8, i8* %49, align 1
  %146 = or i32 %141, %97
  store i32 %146, i32* %25, align 4
  %147 = zext i8 %145 to i64
  %148 = shl nuw nsw i64 %147, 8
  %149 = or i64 %55, %148
  %150 = zext i8 %95 to i64
  %151 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %27, i64 %150
  %152 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %151 to i64*
  store i64 %149, i64* %152, align 4
  br label %31

153:                                              ; preds = %35
  br i1 %58, label %164, label %154

154:                                              ; preds = %153
  %155 = zext i32 %57 to i64
  %156 = load %"class.v8::internal::Signature.1221"*, %"class.v8::internal::Signature.1221"** %7, align 8
  %157 = add nsw i64 %155, -1
  %158 = getelementptr inbounds %"class.v8::internal::Signature.1221", %"class.v8::internal::Signature.1221"* %156, i64 0, i32 2
  %159 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %158, align 8
  %160 = getelementptr inbounds %"class.v8::internal::Signature.1221", %"class.v8::internal::Signature.1221"* %156, i64 0, i32 0
  %161 = load i64, i64* %160, align 8
  %162 = add i64 %157, %161
  %163 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %159, i64 %162
  br label %164

164:                                              ; preds = %153, %154
  %165 = phi %"class.v8::internal::compiler::LinkageLocation"* [ %163, %154 ], [ %20, %153 ]
  %166 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %165 to i64*
  %167 = load i64, i64* %166, align 4
  %168 = trunc i64 %167 to i32
  %169 = and i32 %168, 1
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %239

171:                                              ; preds = %164
  switch i8 %45, label %179 [
    i8 9, label %172
    i8 4, label %175
    i8 6, label %172
    i8 7, label %172
    i8 1, label %172
    i8 2, label %172
    i8 5, label %175
    i8 10, label %172
    i8 11, label %172
    i8 8, label %172
  ]

172:                                              ; preds = %171, %171, %171, %171, %171, %171, %171, %171
  %173 = lshr i32 %168, 1
  %174 = trunc i32 %173 to i8
  br label %180

175:                                              ; preds = %171, %171
  %176 = lshr i32 %168, 1
  %177 = trunc i32 %176 to i8
  %178 = add i8 %177, 10
  br label %180

179:                                              ; preds = %171
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

180:                                              ; preds = %172, %175
  %181 = phi i8 [ %178, %175 ], [ %174, %172 ]
  %182 = zext i8 %181 to i32
  %183 = shl i32 1, %182
  %184 = load i32, i32* %24, align 4
  %185 = or i32 %183, %184
  store i32 %185, i32* %24, align 4
  %186 = load i8, i8* %48, align 4
  switch i8 %186, label %31 [
    i8 0, label %187
    i8 1, label %200
    i8 2, label %226
  ]

187:                                              ; preds = %180
  %188 = load i32, i32* %25, align 4
  %189 = and i32 %188, %183
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %31

191:                                              ; preds = %187
  %192 = load i8, i8* %49, align 1
  %193 = or i32 %188, %183
  store i32 %193, i32* %25, align 4
  %194 = zext i8 %192 to i64
  %195 = shl nuw nsw i64 %194, 8
  %196 = or i64 %55, %195
  %197 = zext i8 %181 to i64
  %198 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %27, i64 %197
  %199 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %198 to i64*
  store i64 %196, i64* %199, align 4
  br label %31

200:                                              ; preds = %180
  %201 = load i8, i8* %52, align 4
  %202 = icmp eq i8 %201, %181
  br i1 %202, label %31, label %203

203:                                              ; preds = %200
  %204 = load i8, i8* %49, align 1
  %205 = load i32, i32* %28, align 4
  %206 = and i32 %205, %183
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %213, label %208

208:                                              ; preds = %203
  %209 = icmp eq i8 %204, 4
  br i1 %209, label %210, label %31

210:                                              ; preds = %208
  %211 = zext i8 %181 to i64
  %212 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %29, i64 %211, i32 1
  store i8 4, i8* %212, align 1
  br label %31

213:                                              ; preds = %203
  %214 = or i32 %205, %183
  store i32 %214, i32* %28, align 4
  %215 = zext i8 %201 to i64
  %216 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 2, i64 %215
  %217 = load i32, i32* %216, align 4
  %218 = add nsw i32 %217, 1
  store i32 %218, i32* %216, align 4
  %219 = zext i8 %181 to i64
  %220 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %29, i64 %219
  %221 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %220 to i16*
  %222 = zext i8 %204 to i16
  %223 = shl nuw i16 %222, 8
  %224 = zext i8 %201 to i16
  %225 = or i16 %223, %224
  store i16 %225, i16* %221, align 1
  br label %31

226:                                              ; preds = %180
  %227 = load i8, i8* %49, align 1, !noalias !58
  %228 = icmp eq i8 %227, 1
  %229 = load i32, i32* %50, align 4, !noalias !58
  %230 = zext i32 %229 to i64
  %231 = load i32, i32* %25, align 4
  %232 = or i32 %231, %183
  store i32 %232, i32* %25, align 4
  %233 = shl nuw i64 %230, 32
  %234 = select i1 %228, i64 257, i64 513
  %235 = or i64 %233, %234
  %236 = zext i8 %181 to i64
  %237 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %27, i64 %236
  %238 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %237 to i64*
  store i64 %235, i64* %238, align 4
  br label %31

239:                                              ; preds = %164
  %240 = ashr i32 %168, 1
  %241 = xor i32 %240, -1
  %242 = load %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %21, align 8
  %243 = load %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %22, align 8
  %244 = icmp eq %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %242, %243
  br i1 %244, label %245, label %247, !prof !3

245:                                              ; preds = %239
  %246 = tail call %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* @_ZN2v84base11SmallVectorINS_8internal4wasm17LiftoffStackSlots4SlotELm8EE4GrowEv(%"class.v8::base::SmallVector.1224"* %23) #15
  br label %247

247:                                              ; preds = %239, %245
  %248 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %246, %245 ], [ %242, %239 ]
  %249 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %248, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %249, i8* align 4 %48, i64 12, i1 false) #15
  %250 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %248, i64 0, i32 1
  store i32 %47, i32* %250, align 4
  %251 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %248, i64 0, i32 2
  store i8 0, i8* %251, align 4
  %252 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %248, i64 0, i32 3
  store i32 %241, i32* %252, align 4
  %253 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %248, i64 1
  store %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %253, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %21, align 8
  br label %31
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal4wasm17LiftoffStackSlots9ConstructEi(%"class.v8::internal::wasm::LiftoffStackSlots"*, i32) local_unnamed_addr #4 comdat align 2 {
  %3 = alloca %class.anon, align 1
  %4 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffStackSlots", %"class.v8::internal::wasm::LiftoffStackSlots"* %0, i64 0, i32 0, i32 0
  %5 = load %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffStackSlots", %"class.v8::internal::wasm::LiftoffStackSlots"* %0, i64 0, i32 0, i32 1
  %7 = load %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %6, align 8
  %8 = getelementptr inbounds %class.anon, %class.anon* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #15
  call void @_ZNSt3__16__sortIRZN2v88internal4wasm17LiftoffStackSlots15SortInPushOrderEvEUlRKNS4_4SlotES7_E_PS5_EEvT0_SB_T_(%"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %5, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %7, %class.anon* nonnull dereferenceable(1) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #15
  %9 = load %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %4, align 8
  %10 = load %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %6, align 8
  %11 = icmp eq %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %9, %10
  br i1 %11, label %16, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffStackSlots", %"class.v8::internal::wasm::LiftoffStackSlots"* %0, i64 0, i32 1
  %14 = bitcast %"class.v8::internal::wasm::LiftoffAssembler"** %13 to %"class.v8::internal::TurboAssembler"**
  %15 = bitcast %"class.v8::internal::wasm::LiftoffAssembler"** %13 to %"class.v8::internal::Assembler"**
  br label %17

16:                                               ; preds = %144, %2
  ret void

17:                                               ; preds = %12, %144
  %18 = phi i32 [ %1, %12 ], [ %21, %144 ]
  %19 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %9, %12 ], [ %145, %144 ]
  %20 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %19, i64 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = sub nsw i32 %18, %21
  %23 = shl nsw i32 %22, 3
  %24 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %19, i64 0, i32 0, i32 0
  %25 = load i8, i8* %24, align 4
  switch i8 %25, label %144 [
    i8 0, label %26
    i8 1, label %122
    i8 2, label %132
  ]

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %19, i64 0, i32 0, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 1
  br i1 %29, label %30, label %55

30:                                               ; preds = %26
  %31 = add nsw i32 %23, -8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %30
  %34 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %14, align 8
  %35 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = zext i32 %31 to i64
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %35, i8 zeroext 5, i32 4, i64 %36, i32 8) #15
  br label %37

37:                                               ; preds = %30, %33
  %38 = load %"class.v8::internal::Assembler"*, %"class.v8::internal::Assembler"** %15, align 8
  %39 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %19, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = sub nsw i32 0, %40
  %42 = sext i32 %41 to i64
  %43 = add nsw i64 %42, 128
  %44 = icmp ult i64 %43, 256
  %45 = and i32 %41, -256
  %46 = select i1 %44, i32 0, i32 %45
  %47 = select i1 %44, i32 131072, i32 327680
  %48 = select i1 %44, i64 17664, i64 34048
  %49 = and i32 %41, 255
  %50 = or i32 %46, %49
  %51 = zext i32 %50 to i64
  %52 = shl nuw nsw i64 %51, 16
  %53 = or i64 %52, %48
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %38, i32 10, i64 %53, i32 %47, i32 4) #15
  %54 = load %"class.v8::internal::Assembler"*, %"class.v8::internal::Assembler"** %15, align 8
  call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %54, i32 10) #15
  br label %144

55:                                               ; preds = %26
  %56 = icmp eq i8 %28, 5
  %57 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %14, align 8
  %58 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %57, i64 0, i32 0, i32 0, i32 0
  br i1 %56, label %59, label %98

59:                                               ; preds = %55
  %60 = add nsw i32 %23, -16
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %57, i64 0, i32 0, i32 0, i32 0
  %64 = zext i32 %60 to i64
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %63, i8 zeroext 5, i32 4, i64 %64, i32 8) #15
  %65 = load %"class.v8::internal::Assembler"*, %"class.v8::internal::Assembler"** %15, align 8
  br label %66

66:                                               ; preds = %59, %62
  %67 = phi %"class.v8::internal::Assembler"* [ %58, %59 ], [ %65, %62 ]
  %68 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %19, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  %70 = sub i32 8, %69
  %71 = sext i32 %70 to i64
  %72 = add nsw i64 %71, 128
  %73 = icmp ult i64 %72, 256
  %74 = and i32 %70, -256
  %75 = select i1 %73, i32 0, i32 %74
  %76 = select i1 %73, i32 131072, i32 327680
  %77 = select i1 %73, i64 17664, i64 34048
  %78 = and i32 %70, 255
  %79 = or i32 %75, %78
  %80 = zext i32 %79 to i64
  %81 = shl nuw nsw i64 %80, 16
  %82 = or i64 %81, %77
  call void @_ZN2v88internal9Assembler5pushqENS0_7OperandE(%"class.v8::internal::Assembler"* %67, i64 %82, i32 %76) #15
  %83 = load %"class.v8::internal::Assembler"*, %"class.v8::internal::Assembler"** %15, align 8
  %84 = load i32, i32* %68, align 4
  %85 = sub nsw i32 0, %84
  %86 = sext i32 %85 to i64
  %87 = add nsw i64 %86, 128
  %88 = icmp ult i64 %87, 256
  %89 = and i32 %85, -256
  %90 = select i1 %88, i32 0, i32 %89
  %91 = select i1 %88, i32 131072, i32 327680
  %92 = select i1 %88, i64 17664, i64 34048
  %93 = and i32 %85, 255
  %94 = or i32 %90, %93
  %95 = zext i32 %94 to i64
  %96 = shl nuw nsw i64 %95, 16
  %97 = or i64 %96, %92
  call void @_ZN2v88internal9Assembler5pushqENS0_7OperandE(%"class.v8::internal::Assembler"* %83, i64 %97, i32 %91) #15
  br label %144

98:                                               ; preds = %55
  %99 = add nsw i32 %23, -8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %105, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %57, i64 0, i32 0, i32 0, i32 0
  %103 = zext i32 %99 to i64
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %102, i8 zeroext 5, i32 4, i64 %103, i32 8) #15
  %104 = load %"class.v8::internal::Assembler"*, %"class.v8::internal::Assembler"** %15, align 8
  br label %105

105:                                              ; preds = %98, %101
  %106 = phi %"class.v8::internal::Assembler"* [ %58, %98 ], [ %104, %101 ]
  %107 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %19, i64 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = sub nsw i32 0, %108
  %110 = sext i32 %109 to i64
  %111 = add nsw i64 %110, 128
  %112 = icmp ult i64 %111, 256
  %113 = and i32 %109, -256
  %114 = select i1 %112, i32 0, i32 %113
  %115 = select i1 %112, i32 131072, i32 327680
  %116 = select i1 %112, i64 17664, i64 34048
  %117 = and i32 %109, 255
  %118 = or i32 %114, %117
  %119 = zext i32 %118 to i64
  %120 = shl nuw nsw i64 %119, 16
  %121 = or i64 %120, %116
  call void @_ZN2v88internal9Assembler5pushqENS0_7OperandE(%"class.v8::internal::Assembler"* %106, i64 %121, i32 %115) #15
  br label %144

122:                                              ; preds = %17
  %123 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %19, i64 0, i32 0, i32 1
  %124 = load i8, i8* %123, align 1
  %125 = icmp eq i8 %124, 5
  %126 = select i1 %125, i32 16, i32 8
  %127 = load %"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::wasm::LiftoffAssembler"** %13, align 8
  %128 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %19, i64 0, i32 0, i32 2
  %129 = bitcast %union.anon* %128 to i8*
  %130 = load i8, i8* %129, align 4
  %131 = sub nsw i32 %23, %126
  call void @_ZN2v88internal4wasm7liftoff4pushEPNS1_16LiftoffAssemblerENS1_15LiftoffRegisterENS1_9ValueKindEi(%"class.v8::internal::wasm::LiftoffAssembler"* %127, i8 %130, i8 zeroext %124, i32 %131)
  br label %144

132:                                              ; preds = %17
  %133 = add nsw i32 %23, -8
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %139, label %135

135:                                              ; preds = %132
  %136 = load %"class.v8::internal::TurboAssembler"*, %"class.v8::internal::TurboAssembler"** %14, align 8
  %137 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %136, i64 0, i32 0, i32 0, i32 0
  %138 = zext i32 %133 to i64
  call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %137, i8 zeroext 5, i32 4, i64 %138, i32 8) #15
  br label %139

139:                                              ; preds = %132, %135
  %140 = load %"class.v8::internal::Assembler"*, %"class.v8::internal::Assembler"** %15, align 8
  %141 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %19, i64 0, i32 0, i32 2, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = zext i32 %142 to i64
  call void @_ZN2v88internal9Assembler5pushqENS0_9ImmediateE(%"class.v8::internal::Assembler"* %140, i64 %143) #15
  br label %144

144:                                              ; preds = %37, %105, %66, %17, %139, %122
  %145 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %19, i64 1
  %146 = icmp eq %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %145, %10
  br i1 %146, label %16, label %17
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal4wasm12_GLOBAL__N_119StackTransferRecipe7ExecuteEv(%"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %0, i64 0, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %0 to %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"*
  %7 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %0, i64 0, i32 5
  br label %28

8:                                                ; preds = %68, %1
  %9 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %0, i64 0, i32 5
  %10 = load %"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::wasm::LiftoffAssembler"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %10, i64 0, i32 3, i32 0, i32 1
  %12 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %10, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %13, align 8
  %15 = icmp eq %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %12, %14
  br i1 %15, label %19, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %12, i64 -1, i32 3
  %18 = load i32, i32* %17, align 4
  br label %19

19:                                               ; preds = %16, %8
  %20 = phi i32 [ %18, %16 ], [ 24, %8 ]
  %21 = load i32, i32* %2, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %157, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %0 to %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"*
  %25 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %0, i64 0, i32 4, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %0, i64 0, i32 1
  %27 = bitcast %"struct.std::__1::aligned_storage<144, 4>::type"* %26 to %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"*
  br label %74

28:                                               ; preds = %72, %5
  %29 = phi i32 [ %3, %5 ], [ %73, %72 ]
  %30 = phi i32 [ %3, %5 ], [ %70, %72 ]
  %31 = tail call i32 @llvm.cttz.i32(i32 %30, i1 false) #15, !range !2
  %32 = shl i32 1, %31
  %33 = and i32 %32, %29
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %68, label %35

35:                                               ; preds = %28
  %36 = zext i32 %31 to i64
  %37 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %0, i64 0, i32 2, i64 %36
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %68

40:                                               ; preds = %35
  %41 = trunc i32 %31 to i8
  br label %42

42:                                               ; preds = %61, %40
  %43 = phi i8 [ %62, %61 ], [ %41, %40 ]
  %44 = zext i8 %43 to i64
  %45 = load %"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::wasm::LiftoffAssembler"** %7, align 8
  %46 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %6, i64 %44, i32 0, i32 0
  %47 = load i8, i8* %46, align 1
  %48 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %6, i64 %44, i32 1
  %49 = load i8, i8* %48, align 1
  tail call void @_ZN2v88internal4wasm16LiftoffAssembler4MoveENS1_15LiftoffRegisterES3_NS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"* %45, i8 %43, i8 %47, i8 zeroext %49) #15
  %50 = zext i8 %43 to i32
  %51 = shl i32 1, %50
  %52 = xor i32 %51, -1
  %53 = load i32, i32* %2, align 4
  %54 = and i32 %53, %52
  store i32 %54, i32* %2, align 4
  %55 = load i8, i8* %46, align 1
  %56 = zext i8 %55 to i64
  %57 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %0, i64 0, i32 2, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = add nsw i32 %58, -1
  store i32 %59, i32* %57, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %68

61:                                               ; preds = %42
  %62 = load i8, i8* %46, align 1
  %63 = load i32, i32* %2, align 4
  %64 = zext i8 %62 to i32
  %65 = shl i32 1, %64
  %66 = and i32 %65, %63
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %42

68:                                               ; preds = %61, %42, %35, %28
  %69 = xor i32 %32, -1
  %70 = and i32 %30, %69
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %8, label %72

72:                                               ; preds = %68
  %73 = load i32, i32* %2, align 4
  br label %28

74:                                               ; preds = %154, %23
  %75 = phi i32 [ %21, %23 ], [ %155, %154 ]
  %76 = phi i32 [ %20, %23 ], [ %90, %154 ]
  %77 = tail call i32 @llvm.cttz.i32(i32 %75, i1 false) #15, !range !2
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %24, i64 %78, i32 1
  %80 = load i8, i8* %79, align 1
  %81 = and i8 %80, -4
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %88, label %83

83:                                               ; preds = %74
  %84 = zext i8 %80 to i64
  %85 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZZN2v88internal4wasm18element_size_bytesENS1_9ValueKindEE12kElementSize, i64 0, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = sext i8 %86 to i32
  br label %88

88:                                               ; preds = %83, %74
  %89 = phi i32 [ %87, %83 ], [ 8, %74 ]
  %90 = add nsw i32 %89, %76
  %91 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %24, i64 %78, i32 0, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = load %"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::wasm::LiftoffAssembler"** %9, align 8
  tail call void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_15LiftoffRegisterENS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"* %93, i32 %90, i8 %92, i8 zeroext %80) #15
  %94 = load i32, i32* %25, align 4
  %95 = shl i32 1, %77
  %96 = and i32 %94, %95
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %109

98:                                               ; preds = %88
  %99 = load i8, i8* %79, align 1
  %100 = or i32 %94, %95
  store i32 %100, i32* %25, align 4
  %101 = zext i32 %90 to i64
  %102 = shl nuw i64 %101, 32
  %103 = zext i8 %99 to i64
  %104 = shl nuw nsw i64 %103, 8
  %105 = or i64 %102, %104
  %106 = or i64 %105, 2
  %107 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %27, i64 %78
  %108 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %107 to i64*
  store i64 %106, i64* %108, align 4
  br label %109

109:                                              ; preds = %98, %88
  %110 = xor i32 %95, -1
  %111 = load i32, i32* %2, align 4
  %112 = and i32 %111, %110
  store i32 %112, i32* %2, align 4
  %113 = load i8, i8* %91, align 1
  %114 = zext i8 %113 to i64
  %115 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %0, i64 0, i32 2, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = add nsw i32 %116, -1
  store i32 %117, i32* %115, align 4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %152

119:                                              ; preds = %109
  %120 = load i8, i8* %91, align 1
  %121 = load i32, i32* %2, align 4
  %122 = zext i8 %120 to i32
  %123 = shl i32 1, %122
  %124 = and i32 %123, %121
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %154, label %126

126:                                              ; preds = %119, %145
  %127 = phi i8 [ %146, %145 ], [ %120, %119 ]
  %128 = zext i8 %127 to i64
  %129 = load %"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::wasm::LiftoffAssembler"** %9, align 8
  %130 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %24, i64 %128, i32 0, i32 0
  %131 = load i8, i8* %130, align 1
  %132 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %24, i64 %128, i32 1
  %133 = load i8, i8* %132, align 1
  tail call void @_ZN2v88internal4wasm16LiftoffAssembler4MoveENS1_15LiftoffRegisterES3_NS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"* %129, i8 %127, i8 %131, i8 zeroext %133) #15
  %134 = zext i8 %127 to i32
  %135 = shl i32 1, %134
  %136 = xor i32 %135, -1
  %137 = load i32, i32* %2, align 4
  %138 = and i32 %137, %136
  store i32 %138, i32* %2, align 4
  %139 = load i8, i8* %130, align 1
  %140 = zext i8 %139 to i64
  %141 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %0, i64 0, i32 2, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = add nsw i32 %142, -1
  store i32 %143, i32* %141, align 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %152

145:                                              ; preds = %126
  %146 = load i8, i8* %130, align 1
  %147 = load i32, i32* %2, align 4
  %148 = zext i8 %146 to i32
  %149 = shl i32 1, %148
  %150 = and i32 %149, %147
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %154, label %126

152:                                              ; preds = %126, %109
  %153 = load i32, i32* %2, align 4
  br label %154

154:                                              ; preds = %145, %152, %119
  %155 = phi i32 [ %153, %152 ], [ %121, %119 ], [ %147, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %74

157:                                              ; preds = %154, %19
  %158 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %0, i64 0, i32 4, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %217, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %0, i64 0, i32 1
  %163 = bitcast %"struct.std::__1::aligned_storage<144, 4>::type"* %162 to %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"*
  br label %164

164:                                              ; preds = %212, %161
  %165 = phi i32 [ %159, %161 ], [ %215, %212 ]
  %166 = tail call i32 @llvm.cttz.i32(i32 %165, i1 false) #15, !range !2
  %167 = zext i32 %166 to i64
  %168 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %163, i64 %167, i32 0
  %169 = load i8, i8* %168, align 4
  switch i8 %169, label %212 [
    i8 4, label %211
    i8 1, label %170
    i8 2, label %190
    i8 3, label %210
  ]

170:                                              ; preds = %164
  %171 = load %"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::wasm::LiftoffAssembler"** %9, align 8
  %172 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %163, i64 %167, i32 1
  %173 = load i8, i8* %172, align 1
  %174 = icmp eq i8 %173, 2
  %175 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %163, i64 %167, i32 2
  %176 = load i32, i32* %175, align 4
  br i1 %174, label %183, label %177

177:                                              ; preds = %170
  %178 = icmp eq i32 %176, 0
  %179 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %171, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %178, label %180, label %181

180:                                              ; preds = %177
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %179, i8 zeroext 51, i32 %166, i32 %166, i32 4) #15
  br label %212

181:                                              ; preds = %177
  %182 = zext i32 %176 to i64
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %179, i32 %166, i64 %182, i32 4) #15
  br label %212

183:                                              ; preds = %170
  %184 = ashr i32 %176, 31
  %185 = bitcast %"class.v8::internal::wasm::LiftoffAssembler"* %171 to %"class.v8::internal::TurboAssembler"*
  %186 = zext i32 %184 to i64
  %187 = shl nuw i64 %186, 32
  %188 = zext i32 %176 to i64
  %189 = or i64 %187, %188
  tail call void @_ZN2v88internal14TurboAssembler4MoveENS0_8RegisterEl(%"class.v8::internal::TurboAssembler"* %185, i32 %166, i64 %189) #15
  br label %212

190:                                              ; preds = %164
  %191 = trunc i32 %166 to i8
  %192 = load %"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::wasm::LiftoffAssembler"** %9, align 8
  %193 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %163, i64 %167, i32 2
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %163, i64 %167, i32 1
  %196 = load i8, i8* %195, align 1
  %197 = sub nsw i32 0, %194
  %198 = sext i32 %197 to i64
  %199 = add nsw i64 %198, 128
  %200 = icmp ult i64 %199, 256
  %201 = and i32 %197, -256
  %202 = select i1 %200, i32 0, i32 %201
  %203 = select i1 %200, i32 131072, i32 327680
  %204 = select i1 %200, i64 17664, i64 34048
  %205 = and i32 %197, 255
  %206 = or i32 %202, %205
  %207 = zext i32 %206 to i64
  %208 = shl nuw nsw i64 %207, 16
  %209 = or i64 %208, %204
  tail call void @_ZN2v88internal4wasm7liftoff4LoadEPNS1_16LiftoffAssemblerENS1_15LiftoffRegisterENS0_7OperandENS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"* %192, i8 %191, i64 %209, i32 %203, i8 zeroext %196) #15
  br label %212

210:                                              ; preds = %164
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

211:                                              ; preds = %164
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

212:                                              ; preds = %190, %183, %181, %180, %164
  %213 = shl i32 1, %166
  %214 = xor i32 %213, -1
  %215 = and i32 %165, %214
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %164

217:                                              ; preds = %212, %157
  store i32 0, i32* %158, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler11PrepareCallEPKNS0_9SignatureINS1_9ValueKindEEEPNS0_8compiler14CallDescriptorEPNS0_8RegisterESC_(%"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::Signature"* nocapture readonly, %"class.v8::internal::compiler::CallDescriptor"* nocapture readonly, %"class.v8::internal::Register"*, %"class.v8::internal::Register"* readonly) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::wasm::LiftoffStackSlots", align 8
  %7 = alloca %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", align 8
  %8 = alloca %"class.v8::internal::wasm::LiftoffRegList", align 4
  %9 = alloca [3 x i8], align 1
  %10 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 4, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, -1
  br i1 %15, label %27, label %16

16:                                               ; preds = %5
  %17 = and i32 %14, 255
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %18
  store i32 0, i32* %19, align 4
  %20 = load i32, i32* %13, align 8
  %21 = and i32 %20, 255
  %22 = shl i32 1, %21
  %23 = xor i32 %22, -1
  %24 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, %23
  store i32 %26, i32* %24, align 4
  store i32 -1, i32* %13, align 8
  br label %27

27:                                               ; preds = %5, %16
  %28 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 1
  %29 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %29, i64 -1
  %31 = and i64 %11, 4294967295
  %32 = sub nsw i64 0, %31
  %33 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %30, i64 %32
  %34 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  %35 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 0
  %36 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %35, align 8
  %37 = icmp ult %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %33, %36
  %38 = ptrtoint %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %36 to i64
  br i1 %37, label %45, label %39

39:                                               ; preds = %27, %104
  %40 = phi i64 [ %105, %104 ], [ %38, %27 ]
  %41 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %106, %104 ], [ %36, %27 ]
  %42 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %107, %104 ], [ %33, %27 ]
  %43 = load i32, i32* %34, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %77

45:                                               ; preds = %104, %39, %27
  %46 = phi i64 [ %38, %27 ], [ %40, %39 ], [ %105, %104 ]
  %47 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %36, %27 ], [ %41, %39 ], [ %106, %104 ]
  %48 = bitcast %"class.v8::internal::wasm::LiftoffStackSlots"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 224, i8* nonnull %48) #15
  %49 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffStackSlots", %"class.v8::internal::wasm::LiftoffStackSlots"* %6, i64 0, i32 0, i32 3
  %50 = bitcast %"class.v8::internal::wasm::LiftoffStackSlots"* %6 to %"struct.std::__1::aligned_storage<192, 4>::type"**
  store %"struct.std::__1::aligned_storage<192, 4>::type"* %49, %"struct.std::__1::aligned_storage<192, 4>::type"** %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffStackSlots", %"class.v8::internal::wasm::LiftoffStackSlots"* %6, i64 0, i32 0, i32 1
  %52 = bitcast %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %51 to %"struct.std::__1::aligned_storage<192, 4>::type"**
  store %"struct.std::__1::aligned_storage<192, 4>::type"* %49, %"struct.std::__1::aligned_storage<192, 4>::type"** %52, align 8
  %53 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffStackSlots", %"class.v8::internal::wasm::LiftoffStackSlots"* %6, i64 0, i32 0, i32 2
  %54 = getelementptr inbounds %"struct.std::__1::aligned_storage<192, 4>::type", %"struct.std::__1::aligned_storage<192, 4>::type"* %49, i64 1
  %55 = bitcast %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %53 to %"struct.std::__1::aligned_storage<192, 4>::type"**
  store %"struct.std::__1::aligned_storage<192, 4>::type"* %54, %"struct.std::__1::aligned_storage<192, 4>::type"** %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffStackSlots", %"class.v8::internal::wasm::LiftoffStackSlots"* %6, i64 0, i32 1
  store %"class.v8::internal::wasm::LiftoffAssembler"* %0, %"class.v8::internal::wasm::LiftoffAssembler"** %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %57) #15
  %58 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 2, i64 0
  %59 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 5
  %60 = bitcast i32* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %60, i8 0, i64 80, i1 false) #15
  store %"class.v8::internal::wasm::LiftoffAssembler"* %0, %"class.v8::internal::wasm::LiftoffAssembler"** %59, align 8
  %61 = bitcast %"class.v8::internal::wasm::LiftoffRegList"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #15
  %62 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegList", %"class.v8::internal::wasm::LiftoffRegList"* %8, i64 0, i32 0
  %63 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %2, i64 0, i32 4
  %64 = load %"class.v8::internal::Signature.1221"*, %"class.v8::internal::Signature.1221"** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::Signature.1221", %"class.v8::internal::Signature.1221"* %64, i64 0, i32 2
  %66 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Signature.1221", %"class.v8::internal::Signature.1221"* %64, i64 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %66, i64 %68
  %70 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %69 to i64*
  %71 = load i64, i64* %70, align 4
  %72 = trunc i64 %71 to i32
  %73 = ashr i32 %72, 1
  %74 = and i32 %73, 255
  %75 = shl i32 1, %74
  store i32 %75, i32* %62, align 4
  %76 = icmp ne %"class.v8::internal::Register"* %4, null
  br i1 %76, label %109, label %127

77:                                               ; preds = %39
  %78 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %42, i64 0, i32 0
  %79 = load i8, i8* %78, align 4
  %80 = icmp eq i8 %79, 1
  br i1 %80, label %81, label %104

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %42, i64 0, i32 3
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %42, i64 0, i32 2
  %85 = bitcast %union.anon* %84 to i8*
  %86 = load i8, i8* %85, align 4
  %87 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %42, i64 0, i32 1
  %88 = load i8, i8* %87, align 1
  tail call void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_15LiftoffRegisterENS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i32 %83, i8 %86, i8 zeroext %88)
  %89 = load i8, i8* %85, align 4
  %90 = zext i8 %89 to i64
  %91 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %90
  %92 = load i32, i32* %91, align 4
  %93 = add i32 %92, -1
  store i32 %93, i32* %91, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %101

95:                                               ; preds = %81
  %96 = zext i8 %89 to i32
  %97 = shl i32 1, %96
  %98 = xor i32 %97, -1
  %99 = load i32, i32* %34, align 4
  %100 = and i32 %99, %98
  store i32 %100, i32* %34, align 4
  br label %101

101:                                              ; preds = %81, %95
  store i8 0, i8* %78, align 4
  %102 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %35, align 8
  %103 = ptrtoint %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %102 to i64
  br label %104

104:                                              ; preds = %77, %101
  %105 = phi i64 [ %40, %77 ], [ %103, %101 ]
  %106 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %41, %77 ], [ %102, %101 ]
  %107 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %42, i64 -1
  %108 = icmp ult %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %107, %106
  br i1 %108, label %45, label %39

109:                                              ; preds = %45
  %110 = getelementptr inbounds %"class.v8::internal::Register", %"class.v8::internal::Register"* %4, i64 0, i32 0, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, %73
  br i1 %112, label %127, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 3, i32 0
  %115 = trunc i32 %111 to i16
  store i32 %75, i32* %114, align 4
  %116 = and i32 %111, 255
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 2, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %118, align 4
  %121 = bitcast %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7 to %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"*
  %122 = zext i32 %74 to i64
  %123 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %121, i64 %122
  %124 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %123 to i16*
  %125 = and i16 %115, 255
  %126 = or i16 %125, 512
  store i16 %126, i16* %124, align 2
  br label %127

127:                                              ; preds = %109, %113, %45
  %128 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %2, i64 0, i32 5
  %129 = load i64, i64* %128, align 8
  %130 = trunc i64 %129 to i32
  %131 = icmp eq i32 %12, 0
  br i1 %131, label %140, label %132

132:                                              ; preds = %127
  %133 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %28 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = sub i64 %134, %46
  %136 = sdiv exact i64 %135, 12
  %137 = sub i64 %136, %11
  %138 = and i64 %137, 4294967295
  %139 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %47, i64 %138
  call fastcc void @_ZN2v88internal4wasm12_GLOBAL__N_121PrepareStackTransfersEPKNS0_9SignatureINS1_9ValueKindEEEPNS0_8compiler14CallDescriptorEPKNS1_16LiftoffAssembler8VarStateEPNS1_17LiftoffStackSlotsEPNS2_19StackTransferRecipeEPNS1_14LiftoffRegListE(%"class.v8::internal::Signature"* %1, %"class.v8::internal::compiler::CallDescriptor"* %2, %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %139, %"class.v8::internal::wasm::LiftoffStackSlots"* nonnull %6, %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* nonnull %7, %"class.v8::internal::wasm::LiftoffRegList"* nonnull %8)
  br label %140

140:                                              ; preds = %127, %132
  %141 = icmp eq %"class.v8::internal::Register"* %3, null
  br i1 %141, label %196, label %142

142:                                              ; preds = %140
  %143 = getelementptr inbounds %"class.v8::internal::Register", %"class.v8::internal::Register"* %3, i64 0, i32 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = trunc i32 %144 to i8
  %146 = load i32, i32* %62, align 4
  %147 = and i32 %144, 255
  %148 = shl i32 1, %147
  %149 = and i32 %148, %146
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %196, label %151

151:                                              ; preds = %142
  %152 = and i32 %146, 719
  %153 = xor i32 %152, 719
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %176, label %155

155:                                              ; preds = %151
  %156 = call i32 @llvm.cttz.i32(i32 %153, i1 false) #15, !range !2
  %157 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 3, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = shl i32 1, %156
  %160 = and i32 %158, %159
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %175

162:                                              ; preds = %155
  %163 = zext i32 %156 to i64
  %164 = or i32 %158, %159
  store i32 %164, i32* %157, align 4
  %165 = zext i32 %147 to i64
  %166 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7, i64 0, i32 2, i64 %165
  %167 = load i32, i32* %166, align 4
  %168 = add nsw i32 %167, 1
  store i32 %168, i32* %166, align 4
  %169 = bitcast %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %7 to %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"*
  %170 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %169, i64 %163
  %171 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %170 to i16*
  %172 = trunc i32 %144 to i16
  %173 = and i16 %172, 255
  %174 = or i16 %173, 512
  store i16 %174, i16* %171, align 2
  br label %175

175:                                              ; preds = %155, %162
  store i32 %156, i32* %143, align 4
  br label %196

176:                                              ; preds = %151
  %177 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %177)
  %178 = load %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %51, align 8
  %179 = load %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %53, align 8
  %180 = icmp eq %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %178, %179
  br i1 %180, label %181, label %184, !prof !3

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffStackSlots", %"class.v8::internal::wasm::LiftoffStackSlots"* %6, i64 0, i32 0
  %183 = call %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* @_ZN2v84base11SmallVectorINS_8internal4wasm17LiftoffStackSlots4SlotELm8EE4GrowEv(%"class.v8::base::SmallVector.1224"* nonnull %182) #15
  br label %184

184:                                              ; preds = %176, %181
  %185 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %183, %181 ], [ %178, %176 ]
  %186 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %185, i64 0, i32 0, i32 0
  store i8 1, i8* %186, align 4
  %187 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %185, i64 0, i32 0, i32 1
  store i8 2, i8* %187, align 1
  %188 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %185, i64 0, i32 0, i32 2
  %189 = bitcast %union.anon* %188 to i8*
  store i8 %145, i8* %189, align 4
  %190 = getelementptr inbounds i8, i8* %186, i64 5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %190, i8* nonnull align 1 %177, i64 3, i1 false)
  %191 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %185, i64 0, i32 0, i32 3
  %192 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %185, i64 0, i32 3
  %193 = bitcast i32* %191 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %193, i8 0, i64 9, i1 false)
  store i32 %130, i32* %192, align 4
  %194 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %185, i64 1
  store %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %194, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %177)
  %195 = add nsw i32 %130, 1
  store i32 -1, i32* %143, align 4
  br label %196

196:                                              ; preds = %142, %175, %184, %140
  %197 = phi i32 [ %130, %142 ], [ %130, %140 ], [ %195, %184 ], [ %130, %175 ]
  %198 = icmp sgt i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  call void @_ZN2v88internal4wasm17LiftoffStackSlots9ConstructEi(%"class.v8::internal::wasm::LiftoffStackSlots"* nonnull %6, i32 %197)
  br label %200

200:                                              ; preds = %199, %196
  call fastcc void @_ZN2v88internal4wasm12_GLOBAL__N_119StackTransferRecipe7ExecuteEv(%"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* nonnull %7)
  %201 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %28, align 8
  %202 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %201, i64 %32
  store %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %202, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %28, align 8
  %203 = bitcast i32* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %203, i8 0, i64 76, i1 false) #15
  br i1 %76, label %206, label %204

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %205, i32 %73, i64 15746304, i32 131072, i32 8) #15
  br label %206

206:                                              ; preds = %204, %200
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #15
  call fastcc void @_ZN2v88internal4wasm12_GLOBAL__N_119StackTransferRecipe7ExecuteEv(%"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* nonnull %7) #15
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %57) #15
  %207 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffStackSlots", %"class.v8::internal::wasm::LiftoffStackSlots"* %6, i64 0, i32 0, i32 0
  %208 = load %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %207, align 8
  %209 = bitcast %"struct.std::__1::aligned_storage<192, 4>::type"* %49 to %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*
  %210 = icmp eq %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %208, %209
  br i1 %210, label %213, label %211

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %208, i64 0, i32 0, i32 0
  call void @free(i8* %212) #15
  br label %213

213:                                              ; preds = %206, %211
  call void @llvm.lifetime.end.p0i8(i64 224, i8* nonnull %48) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler10FinishCallEPKNS0_9SignatureINS1_9ValueKindEEEPNS0_8compiler14CallDescriptorE(%"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::Signature"* nocapture readonly, %"class.v8::internal::compiler::CallDescriptor"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %1, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 %7
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 1
  %12 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %11, align 8
  br label %23

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %2, i64 0, i32 4
  %15 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 4, i32 0, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0
  %18 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 1
  %19 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 2
  br label %43

21:                                               ; preds = %217
  %22 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %218, i64 1
  br label %23

23:                                               ; preds = %21, %10
  %24 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %12, %10 ], [ %22, %21 ]
  %25 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %2, i64 0, i32 6
  %26 = load i64, i64* %25, align 8
  %27 = trunc i64 %26 to i32
  %28 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 0
  %29 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %28, align 8
  %30 = icmp eq %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %24, %29
  br i1 %30, label %34, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %24, i64 -1, i32 3
  %33 = load i32, i32* %32, align 4
  br label %34

34:                                               ; preds = %23, %31
  %35 = phi i32 [ %33, %31 ], [ 24, %23 ]
  %36 = shl nsw i32 %27, 3
  %37 = add nsw i32 %35, %36
  %38 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 4
  %39 = load i32, i32* %38, align 8
  %40 = icmp sgt i32 %39, %37
  br i1 %40, label %42, label %41

41:                                               ; preds = %34
  store i32 %37, i32* %38, align 8
  br label %42

42:                                               ; preds = %34, %41
  ret void

43:                                               ; preds = %13, %217
  %44 = phi i64 [ 0, %13 ], [ %59, %217 ]
  %45 = phi i8* [ %5, %13 ], [ %225, %217 ]
  %46 = load i8, i8* %45, align 1
  %47 = add i8 %46, -1
  %48 = icmp ult i8 %47, 11
  br i1 %48, label %49, label %53

49:                                               ; preds = %43
  %50 = sext i8 %47 to i64
  %51 = getelementptr inbounds [11 x i8], [11 x i8]* @switch.table._ZN2v88internal4wasm16LiftoffAssembler10FinishCallEPKNS0_9SignatureINS1_9ValueKindEEEPNS0_8compiler14CallDescriptorE, i64 0, i64 %50
  %52 = load i8, i8* %51, align 1
  br label %53

53:                                               ; preds = %43, %49
  %54 = phi i8 [ %52, %49 ], [ 2, %43 ]
  %55 = icmp eq i8 %54, 1
  %56 = select i1 %55, %"class.v8::internal::wasm::LiftoffRegList"* @_ZN2v88internal4wasmL15kFpCacheRegListE, %"class.v8::internal::wasm::LiftoffRegList"* @_ZN2v88internal4wasmL15kGpCacheRegListE
  %57 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffRegList", %"class.v8::internal::wasm::LiftoffRegList"* %56, i64 0, i32 0
  %58 = icmp eq i8 %54, 0
  %59 = add nuw i64 %44, 1
  %60 = load %"class.v8::internal::Signature.1221"*, %"class.v8::internal::Signature.1221"** %14, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Signature.1221", %"class.v8::internal::Signature.1221"* %60, i64 0, i32 2
  %62 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %62, i64 %44
  %64 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %63 to i64*
  %65 = load i64, i64* %64, align 4
  %66 = trunc i64 %65 to i32
  %67 = and i32 %66, 1
  %68 = icmp eq i32 %67, 0
  br i1 %58, label %69, label %124

69:                                               ; preds = %53
  br i1 %68, label %121, label %70

70:                                               ; preds = %69
  %71 = load i32, i32* %57, align 4
  %72 = load i32, i32* %15, align 8
  %73 = xor i32 %72, -1
  %74 = and i32 %71, %73
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %70
  %77 = tail call i32 @llvm.cttz.i32(i32 %74, i1 false) #15, !range !2
  %78 = trunc i32 %77 to i8
  br label %95

79:                                               ; preds = %70
  %80 = load i32, i32* %16, align 4
  %81 = icmp eq i32 %80, -1
  br i1 %81, label %93, label %82

82:                                               ; preds = %79
  %83 = and i32 %80, 255
  %84 = shl i32 1, %83
  %85 = and i32 %84, %71
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %93, label %87

87:                                               ; preds = %82
  %88 = trunc i32 %80 to i8
  %89 = zext i32 %83 to i64
  %90 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %89
  store i32 0, i32* %90, align 4
  %91 = xor i32 %84, -1
  %92 = and i32 %72, %91
  store i32 %92, i32* %15, align 4
  store i32 -1, i32* %16, align 8
  br label %95

93:                                               ; preds = %82, %79
  %94 = tail call i8 @_ZN2v88internal4wasm16LiftoffAssembler16SpillOneRegisterENS1_14LiftoffRegListE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i32 %71) #15
  br label %95

95:                                               ; preds = %93, %87, %76
  %96 = phi i8 [ %78, %76 ], [ %88, %87 ], [ %94, %93 ]
  %97 = tail call i32 @_ZNK2v88internal8compiler14CallDescriptor18GetOffsetToReturnsEv(%"class.v8::internal::compiler::CallDescriptor"* %2) #15
  %98 = ashr i32 %66, 1
  %99 = xor i32 %97, -1
  %100 = sub i32 %99, %98
  %101 = shl nsw i32 %100, 3
  %102 = icmp eq i32 %100, 0
  br i1 %102, label %112, label %103

103:                                              ; preds = %95
  %104 = sext i32 %101 to i64
  %105 = add nsw i64 %104, 128
  %106 = icmp ult i64 %105, 256
  %107 = and i32 %101, -256
  %108 = select i1 %106, i32 0, i32 %107
  %109 = select i1 %106, i32 196608, i32 393216
  %110 = and i32 %101, 248
  %111 = select i1 %106, i64 2376704, i64 2393088
  br label %112

112:                                              ; preds = %103, %95
  %113 = phi i32 [ 0, %95 ], [ %110, %103 ]
  %114 = phi i32 [ 0, %95 ], [ %108, %103 ]
  %115 = phi i64 [ 2360320, %95 ], [ %111, %103 ]
  %116 = phi i32 [ 131072, %95 ], [ %109, %103 ]
  %117 = or i32 %114, %113
  %118 = zext i32 %117 to i64
  %119 = shl nuw nsw i64 %118, 24
  %120 = or i64 %119, %115
  tail call void @_ZN2v88internal4wasm7liftoff4LoadEPNS1_16LiftoffAssemblerENS1_15LiftoffRegisterENS0_7OperandENS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i8 %96, i64 %120, i32 %116, i8 zeroext %46) #15
  br label %182

121:                                              ; preds = %69
  %122 = lshr i32 %66, 1
  %123 = trunc i32 %122 to i8
  br label %182

124:                                              ; preds = %53
  br i1 %68, label %125, label %131

125:                                              ; preds = %124
  br i1 %55, label %126, label %130

126:                                              ; preds = %125
  %127 = lshr i32 %66, 1
  %128 = trunc i32 %127 to i8
  %129 = add i8 %128, 10
  br label %182

130:                                              ; preds = %125
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

131:                                              ; preds = %124
  %132 = load i32, i32* %57, align 4
  %133 = load i32, i32* %15, align 8
  %134 = xor i32 %133, -1
  %135 = and i32 %132, %134
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = tail call i32 @llvm.cttz.i32(i32 %135, i1 false) #15, !range !2
  %139 = trunc i32 %138 to i8
  br label %156

140:                                              ; preds = %131
  %141 = load i32, i32* %16, align 4
  %142 = icmp eq i32 %141, -1
  br i1 %142, label %154, label %143

143:                                              ; preds = %140
  %144 = and i32 %141, 255
  %145 = shl i32 1, %144
  %146 = and i32 %145, %132
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %154, label %148

148:                                              ; preds = %143
  %149 = trunc i32 %141 to i8
  %150 = zext i32 %144 to i64
  %151 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %150
  store i32 0, i32* %151, align 4
  %152 = xor i32 %145, -1
  %153 = and i32 %133, %152
  store i32 %153, i32* %15, align 4
  store i32 -1, i32* %16, align 8
  br label %156

154:                                              ; preds = %143, %140
  %155 = tail call i8 @_ZN2v88internal4wasm16LiftoffAssembler16SpillOneRegisterENS1_14LiftoffRegListE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i32 %132) #15
  br label %156

156:                                              ; preds = %137, %148, %154
  %157 = phi i8 [ %139, %137 ], [ %149, %148 ], [ %155, %154 ]
  %158 = tail call i32 @_ZNK2v88internal8compiler14CallDescriptor18GetOffsetToReturnsEv(%"class.v8::internal::compiler::CallDescriptor"* %2) #15
  %159 = ashr i32 %66, 1
  %160 = xor i32 %158, -1
  %161 = sub i32 %160, %159
  %162 = shl nsw i32 %161, 3
  %163 = icmp eq i32 %161, 0
  br i1 %163, label %173, label %164

164:                                              ; preds = %156
  %165 = sext i32 %162 to i64
  %166 = add nsw i64 %165, 128
  %167 = icmp ult i64 %166, 256
  %168 = and i32 %162, -256
  %169 = select i1 %167, i32 0, i32 %168
  %170 = select i1 %167, i32 196608, i32 393216
  %171 = and i32 %162, 248
  %172 = select i1 %167, i64 2376704, i64 2393088
  br label %173

173:                                              ; preds = %156, %164
  %174 = phi i32 [ 0, %156 ], [ %171, %164 ]
  %175 = phi i32 [ 0, %156 ], [ %169, %164 ]
  %176 = phi i64 [ 2360320, %156 ], [ %172, %164 ]
  %177 = phi i32 [ 131072, %156 ], [ %170, %164 ]
  %178 = or i32 %175, %174
  %179 = zext i32 %178 to i64
  %180 = shl nuw nsw i64 %179, 24
  %181 = or i64 %180, %176
  tail call void @_ZN2v88internal4wasm7liftoff4LoadEPNS1_16LiftoffAssemblerENS1_15LiftoffRegisterENS0_7OperandENS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i8 %157, i64 %181, i32 %177, i8 zeroext %46) #15
  br label %182

182:                                              ; preds = %126, %173, %112, %121
  %183 = phi i8 [ %123, %121 ], [ %96, %112 ], [ %157, %173 ], [ %129, %126 ]
  %184 = zext i8 %183 to i32
  %185 = shl i32 1, %184
  %186 = load i32, i32* %15, align 4
  %187 = or i32 %185, %186
  store i32 %187, i32* %15, align 4
  %188 = zext i8 %183 to i64
  %189 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %188
  %190 = load i32, i32* %189, align 4
  %191 = add i32 %190, 1
  store i32 %191, i32* %189, align 4
  %192 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %18, align 8
  %193 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %19, align 8
  %194 = icmp eq %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %192, %193
  br i1 %194, label %198, label %195

195:                                              ; preds = %182
  %196 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %192, i64 -1, i32 3
  %197 = load i32, i32* %196, align 4
  br label %198

198:                                              ; preds = %195, %182
  %199 = phi i32 [ %197, %195 ], [ 24, %182 ]
  %200 = and i8 %46, -4
  %201 = icmp eq i8 %200, 8
  br i1 %201, label %208, label %202

202:                                              ; preds = %198
  %203 = zext i8 %46 to i64
  %204 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZZN2v88internal4wasm18element_size_bytesENS1_9ValueKindEE12kElementSize, i64 0, i64 %203
  %205 = load i8, i8* %204, align 1
  %206 = sext i8 %205 to i32
  %207 = add nsw i32 %199, %206
  br label %211

208:                                              ; preds = %198
  %209 = add i32 %199, 15
  %210 = and i32 %209, -8
  br label %211

211:                                              ; preds = %208, %202
  %212 = phi i32 [ %210, %208 ], [ %207, %202 ]
  %213 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %20, align 8
  %214 = icmp eq %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %192, %213
  br i1 %214, label %215, label %217, !prof !3

215:                                              ; preds = %211
  %216 = tail call %"class.v8::internal::wasm::LiftoffAssembler::VarState"* @_ZN2v84base11SmallVectorINS_8internal4wasm16LiftoffAssembler8VarStateELm8EE4GrowEv(%"class.v8::base::SmallVector"* %17) #15
  br label %217

217:                                              ; preds = %211, %215
  %218 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %216, %215 ], [ %192, %211 ]
  %219 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %218, i64 0, i32 0
  store i8 1, i8* %219, align 4
  %220 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %218, i64 0, i32 1
  store i8 %46, i8* %220, align 1
  %221 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %218, i64 0, i32 2
  %222 = bitcast %union.anon* %221 to i8*
  store i8 %183, i8* %222, align 4
  %223 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %218, i64 0, i32 3
  store i32 %212, i32* %223, align 4
  %224 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %218, i64 1
  store %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %224, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %18, align 8
  %225 = getelementptr inbounds i8, i8* %45, i64 1
  %226 = icmp eq i8* %225, %8
  br i1 %226, label %21, label %43
}

declare i32 @_ZNK2v88internal8compiler14CallDescriptor18GetOffsetToReturnsEv(%"class.v8::internal::compiler::CallDescriptor"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler20ParallelRegisterMoveENS0_6VectorIKNS2_25ParallelRegisterMoveTupleEEE(%"class.v8::internal::wasm::LiftoffAssembler"*, %"struct.v8::internal::wasm::LiftoffAssembler::ParallelRegisterMoveTuple"*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", align 8
  %5 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 2, i64 0
  %7 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 5
  %8 = bitcast i32* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 80, i1 false) #15
  store %"class.v8::internal::wasm::LiftoffAssembler"* %0, %"class.v8::internal::wasm::LiftoffAssembler"** %7, align 8
  %9 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::ParallelRegisterMoveTuple", %"struct.v8::internal::wasm::LiftoffAssembler::ParallelRegisterMoveTuple"* %1, i64 %2
  %10 = icmp eq i64 %2, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 3, i32 0
  %13 = bitcast %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4 to %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"*
  br label %15

14:                                               ; preds = %48, %3
  call fastcc void @_ZN2v88internal4wasm12_GLOBAL__N_119StackTransferRecipe7ExecuteEv(%"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %5) #15
  ret void

15:                                               ; preds = %11, %48
  %16 = phi %"struct.v8::internal::wasm::LiftoffAssembler::ParallelRegisterMoveTuple"* [ %1, %11 ], [ %49, %48 ]
  %17 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::ParallelRegisterMoveTuple", %"struct.v8::internal::wasm::LiftoffAssembler::ParallelRegisterMoveTuple"* %16, i64 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::ParallelRegisterMoveTuple", %"struct.v8::internal::wasm::LiftoffAssembler::ParallelRegisterMoveTuple"* %16, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::ParallelRegisterMoveTuple", %"struct.v8::internal::wasm::LiftoffAssembler::ParallelRegisterMoveTuple"* %16, i64 0, i32 2
  %22 = load i8, i8* %21, align 1
  %23 = icmp eq i8 %18, %20
  br i1 %23, label %48, label %24

24:                                               ; preds = %15
  %25 = load i32, i32* %12, align 4
  %26 = zext i8 %18 to i32
  %27 = shl i32 1, %26
  %28 = and i32 %25, %27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %24
  %31 = icmp eq i8 %22, 4
  br i1 %31, label %32, label %48

32:                                               ; preds = %30
  %33 = zext i8 %18 to i64
  %34 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %13, i64 %33, i32 1
  store i8 4, i8* %34, align 1
  br label %48

35:                                               ; preds = %24
  %36 = or i32 %25, %27
  store i32 %36, i32* %12, align 4
  %37 = zext i8 %20 to i64
  %38 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 2, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %38, align 4
  %41 = zext i8 %18 to i64
  %42 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %13, i64 %41
  %43 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %42 to i16*
  %44 = zext i8 %22 to i16
  %45 = shl nuw i16 %44, 8
  %46 = zext i8 %20 to i16
  %47 = or i16 %45, %46
  store i16 %47, i16* %43, align 2
  br label %48

48:                                               ; preds = %35, %32, %30, %15
  %49 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::ParallelRegisterMoveTuple", %"struct.v8::internal::wasm::LiftoffAssembler::ParallelRegisterMoveTuple"* %16, i64 1
  %50 = icmp eq %"struct.v8::internal::wasm::LiftoffAssembler::ParallelRegisterMoveTuple"* %49, %9
  br i1 %50, label %14, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler21MoveToReturnLocationsEPKNS0_9SignatureINS1_9ValueTypeEEEPNS0_8compiler14CallDescriptorE(%"class.v8::internal::wasm::LiftoffAssembler"*, %"class.v8::internal::Signature.1227"* nocapture readonly, %"class.v8::internal::compiler::CallDescriptor"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", align 8
  %5 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 2, i64 0
  %7 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 5
  %8 = bitcast i32* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 80, i1 false) #15
  store %"class.v8::internal::wasm::LiftoffAssembler"* %0, %"class.v8::internal::wasm::LiftoffAssembler"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Signature.1227", %"class.v8::internal::Signature.1227"* %1, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %12, label %86

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.v8::internal::Signature.1227", %"class.v8::internal::Signature.1227"* %1, i64 0, i32 2
  %14 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = trunc i32 %16 to i8
  %18 = and i8 %17, 31
  %19 = add nsw i8 %18, -3
  %20 = icmp ult i8 %19, 3
  %21 = select i1 %20, i8 11, i8 0
  %22 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 1
  %23 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %23, i64 -1, i32 0
  %25 = load i8, i8* %24, align 4
  switch i8 %25, label %318 [
    i8 0, label %26
    i8 1, label %45
    i8 2, label %68
  ]

26:                                               ; preds = %12
  %27 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %23, i64 -1, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = zext i8 %21 to i32
  %30 = shl i32 1, %29
  %31 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 4, i32 0
  %32 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %23, i64 -1, i32 1
  %33 = load i8, i8* %32, align 1
  store i32 %30, i32* %31, align 8
  %34 = zext i32 %28 to i64
  %35 = shl nuw i64 %34, 32
  %36 = zext i8 %33 to i64
  %37 = shl nuw nsw i64 %36, 8
  %38 = or i64 %35, %37
  %39 = or i64 %38, 2
  %40 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 1
  %41 = bitcast %"struct.std::__1::aligned_storage<144, 4>::type"* %40 to %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"*
  %42 = zext i8 %21 to i64
  %43 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %41, i64 %42
  %44 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %43 to i64*
  store i64 %39, i64* %44, align 4
  br label %318

45:                                               ; preds = %12
  %46 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %23, i64 -1, i32 2
  %47 = bitcast %union.anon* %46 to i8*
  %48 = load i8, i8* %47, align 4
  %49 = icmp eq i8 %48, %21
  br i1 %49, label %318, label %50

50:                                               ; preds = %45
  %51 = zext i8 %21 to i32
  %52 = shl i32 1, %51
  %53 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 3, i32 0
  %54 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %23, i64 -1, i32 1
  %55 = load i8, i8* %54, align 1
  store i32 %52, i32* %53, align 4
  %56 = zext i8 %48 to i64
  %57 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 2, i64 %56
  %58 = load i32, i32* %57, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %57, align 4
  %60 = bitcast %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4 to %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"*
  %61 = zext i8 %21 to i64
  %62 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %60, i64 %61
  %63 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %62 to i16*
  %64 = zext i8 %55 to i16
  %65 = shl nuw i16 %64, 8
  %66 = zext i8 %48 to i16
  %67 = or i16 %65, %66
  store i16 %67, i16* %63, align 2
  br label %318

68:                                               ; preds = %12
  %69 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %23, i64 -1, i32 1
  %70 = load i8, i8* %69, align 1, !noalias !61
  %71 = icmp eq i8 %70, 1
  %72 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %23, i64 -1, i32 2, i32 0
  %73 = load i32, i32* %72, align 4, !noalias !61
  %74 = zext i32 %73 to i64
  %75 = zext i8 %21 to i32
  %76 = shl i32 1, %75
  %77 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 4, i32 0
  store i32 %76, i32* %77, align 8
  %78 = shl nuw i64 %74, 32
  %79 = select i1 %71, i64 257, i64 513
  %80 = or i64 %78, %79
  %81 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 1
  %82 = bitcast %"struct.std::__1::aligned_storage<144, 4>::type"* %81 to %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"*
  %83 = zext i8 %21 to i64
  %84 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %82, i64 %83
  %85 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %84 to i64*
  store i64 %80, i64* %85, align 4
  br label %318

86:                                               ; preds = %3
  %87 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 1
  %88 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %87, align 8
  %89 = sub i64 0, %10
  %90 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %88, i64 %89
  %91 = icmp eq i64 %10, 0
  br i1 %91, label %318, label %92

92:                                               ; preds = %86
  %93 = getelementptr inbounds %"class.v8::internal::Signature.1227", %"class.v8::internal::Signature.1227"* %1, i64 0, i32 2
  %94 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %2, i64 0, i32 4
  br label %109

95:                                               ; preds = %150
  %96 = icmp eq i64 %151, 0
  br i1 %96, label %318, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"class.v8::internal::Signature.1227", %"class.v8::internal::Signature.1227"* %1, i64 0, i32 2
  %99 = getelementptr inbounds %"class.v8::internal::compiler::CallDescriptor", %"class.v8::internal::compiler::CallDescriptor"* %2, i64 0, i32 4
  %100 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 4, i32 0
  %101 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 1
  %102 = bitcast %"struct.std::__1::aligned_storage<144, 4>::type"* %101 to %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"*
  %103 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 3, i32 0
  %104 = bitcast %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4 to %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"*
  %105 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %98, align 8
  %106 = load %"class.v8::internal::Signature.1221"*, %"class.v8::internal::Signature.1221"** %99, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Signature.1221", %"class.v8::internal::Signature.1221"* %106, i64 0, i32 2
  %108 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %107, align 8
  br label %153

109:                                              ; preds = %92, %150
  %110 = phi i64 [ %10, %92 ], [ %151, %150 ]
  %111 = phi i64 [ 0, %92 ], [ %113, %150 ]
  %112 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %90, i64 %111
  %113 = add nuw i64 %111, 1
  %114 = load %"class.v8::internal::Signature.1221"*, %"class.v8::internal::Signature.1221"** %94, align 8
  %115 = getelementptr inbounds %"class.v8::internal::Signature.1221", %"class.v8::internal::Signature.1221"* %114, i64 0, i32 2
  %116 = load %"class.v8::internal::compiler::LinkageLocation"*, %"class.v8::internal::compiler::LinkageLocation"** %115, align 8
  %117 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %116, i64 %111
  %118 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %117 to i64*
  %119 = load i64, i64* %118, align 4
  %120 = trunc i64 %119 to i32
  %121 = and i32 %120, -2147483647
  %122 = icmp eq i32 %121, -2147483647
  br i1 %122, label %123, label %150

123:                                              ; preds = %109
  %124 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %112, i64 0, i32 3
  %125 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %112 to i64*
  %126 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %93, align 8
  %127 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %126, i64 %111, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = trunc i32 %128 to i8
  %130 = and i8 %129, 31
  %131 = load i64, i64* %125, align 4
  %132 = load i32, i32* %124, align 4
  %133 = tail call i8 @_ZN2v88internal4wasm16LiftoffAssembler14LoadToRegisterENS2_8VarStateENS1_14LiftoffRegListE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 %131, i32 %132, i32 0)
  %134 = lshr i32 %120, 1
  %135 = shl i32 %134, 3
  %136 = sub i32 8, %135
  %137 = sext i32 %136 to i64
  %138 = add nsw i64 %137, 128
  %139 = icmp ult i64 %138, 256
  %140 = and i32 %136, -256
  %141 = select i1 %139, i32 0, i32 %140
  %142 = select i1 %139, i64 17664, i64 34048
  %143 = select i1 %139, i32 131072, i32 327680
  %144 = and i32 %136, 248
  %145 = or i32 %141, %144
  %146 = zext i32 %145 to i64
  %147 = shl nuw nsw i64 %146, 16
  %148 = or i64 %147, %142
  tail call void @_ZN2v88internal4wasm7liftoff5StoreEPNS1_16LiftoffAssemblerENS0_7OperandENS1_15LiftoffRegisterENS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 %148, i32 %143, i8 %133, i8 zeroext %130) #15
  %149 = load i64, i64* %9, align 8
  br label %150

150:                                              ; preds = %123, %109
  %151 = phi i64 [ %149, %123 ], [ %110, %109 ]
  %152 = icmp ult i64 %113, %151
  br i1 %152, label %109, label %95

153:                                              ; preds = %242, %97
  %154 = phi i64 [ 0, %97 ], [ %167, %242 ]
  %155 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %105, i64 %154, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = trunc i32 %156 to i8
  %158 = and i8 %157, 31
  %159 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %90, i64 %154
  %160 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %159, i64 0, i32 3
  %161 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %159, i64 0, i32 0
  %162 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %159, i64 0, i32 1
  %163 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %159, i64 0, i32 2, i32 0
  %164 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %159, i64 0, i32 2
  %165 = bitcast %union.anon* %164 to i8*
  %166 = icmp eq i8 %158, 3
  %167 = add nuw i64 %154, 1
  %168 = getelementptr inbounds %"class.v8::internal::compiler::LinkageLocation", %"class.v8::internal::compiler::LinkageLocation"* %108, i64 %154
  %169 = bitcast %"class.v8::internal::compiler::LinkageLocation"* %168 to i64*
  %170 = load i64, i64* %169, align 4
  %171 = trunc i64 %170 to i32
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  br i1 %166, label %174, label %244

174:                                              ; preds = %153
  br i1 %173, label %175, label %242

175:                                              ; preds = %174
  %176 = lshr i32 %171, 1
  %177 = trunc i32 %176 to i8
  %178 = add i8 %177, 10
  %179 = load i32, i32* %160, align 4
  %180 = load i8, i8* %161, align 4
  switch i8 %180, label %242 [
    i8 0, label %224
    i8 1, label %196
    i8 2, label %181
  ]

181:                                              ; preds = %175
  %182 = load i8, i8* %162, align 1, !noalias !64
  %183 = icmp eq i8 %182, 1
  %184 = load i32, i32* %163, align 4, !noalias !64
  %185 = zext i32 %184 to i64
  %186 = zext i8 %178 to i32
  %187 = shl i32 1, %186
  %188 = load i32, i32* %100, align 8
  %189 = or i32 %188, %187
  store i32 %189, i32* %100, align 8
  %190 = shl nuw i64 %185, 32
  %191 = select i1 %183, i64 257, i64 513
  %192 = or i64 %190, %191
  %193 = zext i8 %178 to i64
  %194 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %102, i64 %193
  %195 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %194 to i64*
  store i64 %192, i64* %195, align 4
  br label %242

196:                                              ; preds = %175
  %197 = load i8, i8* %165, align 4
  %198 = icmp eq i8 %197, %178
  br i1 %198, label %242, label %199

199:                                              ; preds = %196
  %200 = load i8, i8* %162, align 1
  %201 = load i32, i32* %103, align 4
  %202 = zext i8 %178 to i32
  %203 = shl i32 1, %202
  %204 = and i32 %201, %203
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %211, label %206

206:                                              ; preds = %199
  %207 = icmp eq i8 %200, 4
  br i1 %207, label %208, label %242

208:                                              ; preds = %206
  %209 = zext i8 %178 to i64
  %210 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %104, i64 %209, i32 1
  store i8 4, i8* %210, align 1
  br label %242

211:                                              ; preds = %199
  %212 = or i32 %201, %203
  store i32 %212, i32* %103, align 4
  %213 = zext i8 %197 to i64
  %214 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 2, i64 %213
  %215 = load i32, i32* %214, align 4
  %216 = add nsw i32 %215, 1
  store i32 %216, i32* %214, align 4
  %217 = zext i8 %178 to i64
  %218 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %104, i64 %217
  %219 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %218 to i16*
  %220 = zext i8 %200 to i16
  %221 = shl nuw i16 %220, 8
  %222 = zext i8 %197 to i16
  %223 = or i16 %221, %222
  store i16 %223, i16* %219, align 2
  br label %242

224:                                              ; preds = %175
  %225 = load i32, i32* %100, align 8
  %226 = zext i8 %178 to i32
  %227 = shl i32 1, %226
  %228 = and i32 %225, %227
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %242

230:                                              ; preds = %224
  %231 = load i8, i8* %162, align 1
  %232 = or i32 %225, %227
  store i32 %232, i32* %100, align 8
  %233 = zext i32 %179 to i64
  %234 = shl nuw i64 %233, 32
  %235 = zext i8 %231 to i64
  %236 = shl nuw nsw i64 %235, 8
  %237 = or i64 %234, %236
  %238 = or i64 %237, 2
  %239 = zext i8 %178 to i64
  %240 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %102, i64 %239
  %241 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %240 to i64*
  store i64 %238, i64* %241, align 4
  br label %242

242:                                              ; preds = %244, %253, %257, %263, %275, %285, %287, %290, %303, %230, %224, %211, %208, %206, %196, %181, %175, %174
  %243 = icmp eq i64 %167, %151
  br i1 %243, label %318, label %153

244:                                              ; preds = %153
  br i1 %173, label %245, label %242

245:                                              ; preds = %244
  %246 = ashr i32 %171, 1
  switch i8 %158, label %252 [
    i8 3, label %249
    i8 4, label %249
    i8 6, label %247
    i8 7, label %247
    i8 1, label %247
    i8 2, label %247
    i8 5, label %249
    i8 10, label %247
    i8 11, label %247
    i8 8, label %247
    i8 9, label %247
  ]

247:                                              ; preds = %245, %245, %245, %245, %245, %245, %245, %245
  %248 = trunc i32 %246 to i8
  br label %253

249:                                              ; preds = %245, %245, %245
  %250 = trunc i32 %246 to i8
  %251 = add i8 %250, 10
  br label %253

252:                                              ; preds = %245
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

253:                                              ; preds = %247, %249
  %254 = phi i8 [ %251, %249 ], [ %248, %247 ]
  %255 = load i32, i32* %160, align 4
  %256 = load i8, i8* %161, align 4
  switch i8 %256, label %242 [
    i8 0, label %257
    i8 1, label %275
    i8 2, label %303
  ]

257:                                              ; preds = %253
  %258 = load i32, i32* %100, align 8
  %259 = zext i8 %254 to i32
  %260 = shl i32 1, %259
  %261 = and i32 %258, %260
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %242

263:                                              ; preds = %257
  %264 = load i8, i8* %162, align 1
  %265 = or i32 %258, %260
  store i32 %265, i32* %100, align 8
  %266 = zext i32 %255 to i64
  %267 = shl nuw i64 %266, 32
  %268 = zext i8 %264 to i64
  %269 = shl nuw nsw i64 %268, 8
  %270 = or i64 %267, %269
  %271 = or i64 %270, 2
  %272 = zext i8 %254 to i64
  %273 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %102, i64 %272
  %274 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %273 to i64*
  store i64 %271, i64* %274, align 4
  br label %242

275:                                              ; preds = %253
  %276 = load i8, i8* %165, align 4
  %277 = icmp eq i8 %276, %254
  br i1 %277, label %242, label %278

278:                                              ; preds = %275
  %279 = load i8, i8* %162, align 1
  %280 = load i32, i32* %103, align 4
  %281 = zext i8 %254 to i32
  %282 = shl i32 1, %281
  %283 = and i32 %280, %282
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %290, label %285

285:                                              ; preds = %278
  %286 = icmp eq i8 %279, 4
  br i1 %286, label %287, label %242

287:                                              ; preds = %285
  %288 = zext i8 %254 to i64
  %289 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %104, i64 %288, i32 1
  store i8 4, i8* %289, align 1
  br label %242

290:                                              ; preds = %278
  %291 = or i32 %280, %282
  store i32 %291, i32* %103, align 4
  %292 = zext i8 %276 to i64
  %293 = getelementptr inbounds %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe", %"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* %4, i64 0, i32 2, i64 %292
  %294 = load i32, i32* %293, align 4
  %295 = add nsw i32 %294, 1
  store i32 %295, i32* %293, align 4
  %296 = zext i8 %254 to i64
  %297 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %104, i64 %296
  %298 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterMove"* %297 to i16*
  %299 = zext i8 %279 to i16
  %300 = shl nuw i16 %299, 8
  %301 = zext i8 %276 to i16
  %302 = or i16 %300, %301
  store i16 %302, i16* %298, align 2
  br label %242

303:                                              ; preds = %253
  %304 = load i8, i8* %162, align 1, !noalias !64
  %305 = icmp eq i8 %304, 1
  %306 = load i32, i32* %163, align 4, !noalias !64
  %307 = zext i32 %306 to i64
  %308 = zext i8 %254 to i32
  %309 = shl i32 1, %308
  %310 = load i32, i32* %100, align 8
  %311 = or i32 %310, %309
  store i32 %311, i32* %100, align 8
  %312 = shl nuw i64 %307, 32
  %313 = select i1 %305, i64 257, i64 513
  %314 = or i64 %312, %313
  %315 = zext i8 %254 to i64
  %316 = getelementptr inbounds %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad", %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %102, i64 %315
  %317 = bitcast %"struct.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe::RegisterLoad"* %316 to i64*
  store i64 %314, i64* %317, align 4
  br label %242

318:                                              ; preds = %242, %86, %95, %68, %50, %45, %26, %12
  call fastcc void @_ZN2v88internal4wasm12_GLOBAL__N_119StackTransferRecipe7ExecuteEv(%"class.v8::internal::wasm::(anonymous namespace)::StackTransferRecipe"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %5) #15
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define hidden i8 @_ZN2v88internal4wasm16LiftoffAssembler16SpillOneRegisterENS1_14LiftoffRegListE(%"class.v8::internal::wasm::LiftoffAssembler"*, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 3, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = xor i32 %5, -1
  %7 = and i32 %6, %1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  store i32 0, i32* %4, align 4
  br label %10

10:                                               ; preds = %2, %9
  %11 = phi i32 [ %1, %9 ], [ %7, %2 ]
  %12 = tail call i32 @llvm.cttz.i32(i32 %11, i1 false) #15, !range !2
  %13 = trunc i32 %12 to i8
  %14 = zext i32 %12 to i64
  %15 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 2, i64 %14
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %3 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = sdiv exact i64 %22, 12
  %24 = trunc i64 %23 to i32
  %25 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffAssembler::CacheState", %"struct.v8::internal::wasm::LiftoffAssembler::CacheState"* %3, i64 0, i32 0, i32 0
  %26 = inttoptr i64 %21 to %"class.v8::internal::wasm::LiftoffAssembler::VarState"*
  br label %27

27:                                               ; preds = %52, %10
  %28 = phi %"class.v8::internal::wasm::LiftoffAssembler::VarState"* [ %53, %52 ], [ %26, %10 ]
  %29 = phi i32 [ %33, %52 ], [ %24, %10 ]
  %30 = phi i32 [ %50, %52 ], [ %16, %10 ]
  br label %31

31:                                               ; preds = %43, %27
  %32 = phi i32 [ %29, %27 ], [ %33, %43 ]
  %33 = add i32 %32, -1
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %28, i64 %34, i32 0
  %36 = load i8, i8* %35, align 4
  %37 = icmp eq i8 %36, 1
  br i1 %37, label %38, label %43

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %28, i64 %34, i32 2
  %40 = bitcast %union.anon* %39 to i8*
  %41 = load i8, i8* %40, align 4
  %42 = icmp eq i8 %41, %13
  br i1 %42, label %44, label %43

43:                                               ; preds = %38, %31
  br label %31

44:                                               ; preds = %38
  %45 = zext i32 %33 to i64
  %46 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %28, i64 %45, i32 3
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %28, i64 %45, i32 1
  %49 = load i8, i8* %48, align 1
  tail call void @_ZN2v88internal4wasm16LiftoffAssembler5SpillEiNS1_15LiftoffRegisterENS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"* %0, i32 %47, i8 %13, i8 zeroext %49) #15
  store i8 0, i8* %35, align 4
  %50 = add nsw i32 %30, -1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %54, label %52

52:                                               ; preds = %44
  %53 = load %"class.v8::internal::wasm::LiftoffAssembler::VarState"*, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %25, align 8
  br label %27

54:                                               ; preds = %44
  store i32 0, i32* %15, align 4
  %55 = shl i32 1, %12
  %56 = xor i32 %55, -1
  %57 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 3, i32 1, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, %56
  store i32 %59, i32* %57, align 4
  %60 = load i32, i32* %4, align 4
  %61 = or i32 %60, %55
  store i32 %61, i32* %4, align 4
  ret i8 %13
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden i8 @_ZN2v88internal4wasm16LiftoffAssembler24SpillAdjacentFpRegistersENS1_14LiftoffRegListE(%"class.v8::internal::wasm::LiftoffAssembler"* nocapture readnone, i32) local_unnamed_addr #7 align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0)) #16
  unreachable
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN2v88internal4wasm16LiftoffAssembler14set_num_localsEj(%"class.v8::internal::wasm::LiftoffAssembler"* nocapture, i32) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 1
  store i32 %1, i32* %3, align 4
  %4 = icmp ugt i32 %1, 16
  br i1 %4, label %5, label %9

5:                                                ; preds = %2
  %6 = zext i32 %1 to i64
  %7 = tail call noalias i8* @malloc(i64 %6) #15
  %8 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 2, i32 0
  store i8* %7, i8** %8, align 8
  br label %9

9:                                                ; preds = %5, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal4wasmlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEENS1_16LiftoffAssembler8VarStateE(%"class.std::__1::basic_ostream"* dereferenceable(160), i64, i32) local_unnamed_addr #0 {
  %4 = trunc i64 %1 to i8
  %5 = lshr i64 %1, 8
  %6 = lshr i64 %1, 32
  %7 = and i64 %5, 255
  %8 = getelementptr inbounds [13 x i8*], [13 x i8*]* @_ZZN2v88internal4wasm4nameENS1_9ValueKindEE9kKindName, i64 0, i64 %7
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i64 @strlen(i8* %9) #15
  %11 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %9, i64 %10) #15
  %12 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %11, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #15
  switch i8 %4, label %41 [
    i8 0, label %13
    i8 1, label %15
    i8 2, label %37
  ]

13:                                               ; preds = %3
  %14 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i64 1) #15
  br label %42

15:                                               ; preds = %3
  %16 = trunc i64 %6 to i8
  %17 = icmp ult i8 %16, 10
  br i1 %17, label %18, label %24

18:                                               ; preds = %15
  %19 = and i64 %6, 255
  %20 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_8RegisterEE5Names, i64 0, i64 %19
  %21 = load i8*, i8** %20, align 8
  %22 = tail call i64 @strlen(i8* %21) #15
  %23 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %21, i64 %22) #15
  br label %42

24:                                               ; preds = %15
  %25 = trunc i64 %6 to i32
  %26 = and i32 %25, 255
  %27 = add nsw i32 %26, -10
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %33, label %29

29:                                               ; preds = %24
  %30 = sext i32 %27 to i64
  %31 = getelementptr inbounds [16 x i8*], [16 x i8*]* @_ZZN2v88internal12RegisterNameENS0_11XMMRegisterEE5Names, i64 0, i64 %30
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %29, %24
  %34 = phi i8* [ %32, %29 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i64 0, i64 0), %24 ]
  %35 = tail call i64 @strlen(i8* %34) #15
  %36 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %34, i64 %35) #15
  br label %42

37:                                               ; preds = %3
  %38 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #15
  %39 = trunc i64 %6 to i32
  %40 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %38, i32 %39) #15
  br label %42

41:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

42:                                               ; preds = %33, %18, %37, %13
  %43 = phi %"class.std::__1::basic_ostream"* [ %40, %37 ], [ %14, %13 ], [ %23, %18 ], [ %36, %33 ]
  ret %"class.std::__1::basic_ostream"* %43
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13AssemblerBase21AbortedCodeGenerationEv(%"class.v8::internal::AssemblerBase"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2v88internal14TurboAssembler4JumpERKNS0_17ExternalReferenceE(%"class.v8::internal::TurboAssembler"*, %"class.v8::internal::ExternalReference"* dereferenceable(8)) unnamed_addr #5

declare void @_ZN2v88internal14TurboAssembler18CallBuiltinByIndexENS0_8RegisterE(%"class.v8::internal::TurboAssembler"*, i32) unnamed_addr #5

declare void @_ZN2v88internal14TurboAssembler14CallCodeObjectENS0_8RegisterE(%"class.v8::internal::TurboAssembler"*, i32) unnamed_addr #5

declare void @_ZN2v88internal14TurboAssembler14JumpCodeObjectENS0_8RegisterENS0_8JumpModeE(%"class.v8::internal::TurboAssembler"*, i32, i32) unnamed_addr #5

declare void @_ZN2v88internal14TurboAssembler19LoadCodeObjectEntryENS0_8RegisterES2_(%"class.v8::internal::TurboAssembler"*, i32, i32) unnamed_addr #5

declare void @_ZN2v88internal14TurboAssembler22LoadFromConstantsTableENS0_8RegisterEi(%"class.v8::internal::TurboAssembler"*, i32, i32) unnamed_addr #5

declare void @_ZN2v88internal14TurboAssembler22LoadRootRegisterOffsetENS0_8RegisterEl(%"class.v8::internal::TurboAssembler"*, i32, i64) unnamed_addr #5

declare void @_ZN2v88internal14TurboAssembler16LoadRootRelativeENS0_8RegisterEi(%"class.v8::internal::TurboAssembler"*, i32, i32) unnamed_addr #5

declare void @_ZN2v88internal14TurboAssembler8LoadRootENS0_8RegisterENS0_9RootIndexE(%"class.v8::internal::TurboAssembler"*, i32, i16 zeroext) unnamed_addr #5

declare void @_ZN2v88internal14TurboAssembler4TrapEv(%"class.v8::internal::TurboAssembler"*) unnamed_addr #5

declare void @_ZN2v88internal14TurboAssembler10DebugBreakEv(%"class.v8::internal::TurboAssembler"*) unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::wasm::LiftoffRegister"* @_ZN2v84base11SmallVectorINS_8internal4wasm15LiftoffRegisterELm8EE4GrowEv(%"class.v8::base::SmallVector.1233"*) local_unnamed_addr #6 comdat align 2 {
  %2 = tail call %"class.v8::internal::wasm::LiftoffRegister"* @_ZN2v84base11SmallVectorINS_8internal4wasm15LiftoffRegisterELm8EE4GrowEm(%"class.v8::base::SmallVector.1233"* %0, i64 0)
  ret %"class.v8::internal::wasm::LiftoffRegister"* %2
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::wasm::LiftoffRegister"* @_ZN2v84base11SmallVectorINS_8internal4wasm15LiftoffRegisterELm8EE4GrowEm(%"class.v8::base::SmallVector.1233"*, i64) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::base::SmallVector.1233", %"class.v8::base::SmallVector.1233"* %0, i64 0, i32 1
  %4 = bitcast %"class.v8::internal::wasm::LiftoffRegister"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::base::SmallVector.1233"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = getelementptr inbounds %"class.v8::base::SmallVector.1233", %"class.v8::base::SmallVector.1233"* %0, i64 0, i32 2
  %10 = bitcast %"class.v8::internal::wasm::LiftoffRegister"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %7
  %13 = shl i64 %12, 1
  %14 = icmp ugt i64 %13, %1
  %15 = select i1 %14, i64 %13, i64 %1
  %16 = tail call i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64 %15) #15
  %17 = tail call noalias i8* @malloc(i64 %16) #15
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

20:                                               ; preds = %2
  %21 = bitcast %"class.v8::base::SmallVector.1233"* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %17, i8* align 1 %22, i64 %8, i1 false) #15
  %23 = getelementptr inbounds %"class.v8::base::SmallVector.1233", %"class.v8::base::SmallVector.1233"* %0, i64 0, i32 3, i32 0, i64 0
  %24 = icmp eq i8* %22, %23
  br i1 %24, label %26, label %25

25:                                               ; preds = %20
  tail call void @free(i8* %22) #15
  br label %26

26:                                               ; preds = %20, %25
  store i8* %17, i8** %21, align 8
  %27 = getelementptr inbounds i8, i8* %17, i64 %8
  %28 = bitcast %"class.v8::internal::wasm::LiftoffRegister"** %3 to i8**
  store i8* %27, i8** %28, align 8
  %29 = getelementptr inbounds i8, i8* %17, i64 %16
  %30 = bitcast %"class.v8::internal::wasm::LiftoffRegister"** %9 to i8**
  store i8* %29, i8** %30, align 8
  %31 = bitcast i8* %27 to %"class.v8::internal::wasm::LiftoffRegister"*
  ret %"class.v8::internal::wasm::LiftoffRegister"* %31
}

declare i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ZoneChunkListIiE9push_backERKi(%"class.v8::internal::ZoneChunkList"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %0, i64 0, i32 3
  %4 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %3, align 8
  %5 = icmp eq %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %4, null
  br i1 %5, label %6, label %25

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8, i64 0, i32 2
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %8, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %10
  %14 = icmp ult i64 %13, 56
  br i1 %14, label %15, label %17, !prof !3

15:                                               ; preds = %6
  %16 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %8, i64 56) #15
  br label %19

17:                                               ; preds = %6
  %18 = add i64 %10, 56
  store i64 %18, i64* %9, align 8
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi i64 [ %16, %15 ], [ %10, %17 ]
  %21 = inttoptr i64 %20 to i8*
  %22 = inttoptr i64 %20 to %"struct.v8::internal::ZoneChunkList<int>::Chunk"*
  %23 = inttoptr i64 %20 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #15
  store i32 8, i32* %23, align 8
  %24 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %0, i64 0, i32 2
  store %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %22, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %24, align 8
  store %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %22, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %3, align 8
  br label %25

25:                                               ; preds = %19, %2
  %26 = phi %"struct.v8::internal::ZoneChunkList<int>::Chunk"* [ %22, %19 ], [ %4, %2 ]
  %27 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %26, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %79

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %26, i64 0, i32 2
  %34 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %33, align 8
  %35 = icmp eq %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = bitcast %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %3 to i64*
  br label %70

38:                                               ; preds = %32
  %39 = shl i32 %28, 1
  %40 = icmp ult i32 %39, 256
  %41 = select i1 %40, i32 %39, i32 256
  %42 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %0, i64 0, i32 0
  %43 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %42, align 8
  %44 = shl nuw nsw i32 %41, 2
  %45 = add nuw nsw i32 %44, 31
  %46 = and i32 %45, 4088
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %43, i64 0, i32 2
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %43, i64 0, i32 3
  %51 = load i64, i64* %50, align 8
  %52 = sub i64 %51, %49
  %53 = icmp ult i64 %52, %47
  br i1 %53, label %54, label %56, !prof !3

54:                                               ; preds = %38
  %55 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %43, i64 %47) #15
  br label %58

56:                                               ; preds = %38
  %57 = add i64 %49, %47
  store i64 %57, i64* %48, align 8
  br label %58

58:                                               ; preds = %54, %56
  %59 = phi i64 [ %55, %54 ], [ %49, %56 ]
  %60 = inttoptr i64 %59 to i8*
  %61 = inttoptr i64 %59 to %"struct.v8::internal::ZoneChunkList<int>::Chunk"*
  %62 = inttoptr i64 %59 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #15
  store i32 %41, i32* %62, align 8
  %63 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %3, align 8
  %64 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %63, i64 0, i32 2
  store %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %61, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %64, align 8
  %65 = bitcast %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %3 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %61, i64 0, i32 3
  %68 = bitcast %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %3, align 8
  br label %70

70:                                               ; preds = %36, %58
  %71 = phi i64* [ %37, %36 ], [ %65, %58 ]
  %72 = phi %"struct.v8::internal::ZoneChunkList<int>::Chunk"* [ %26, %36 ], [ %69, %58 ]
  %73 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %72, i64 0, i32 2
  %74 = bitcast %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %71, align 8
  %76 = inttoptr i64 %75 to %"struct.v8::internal::ZoneChunkList<int>::Chunk"*
  %77 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %76, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  br label %79

79:                                               ; preds = %70, %25
  %80 = phi i32 [ %78, %70 ], [ %28, %25 ]
  %81 = phi %"struct.v8::internal::ZoneChunkList<int>::Chunk"* [ %76, %70 ], [ %26, %25 ]
  %82 = load i32, i32* %1, align 4
  %83 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %81, i64 1, i32 0
  %84 = zext i32 %80 to i64
  %85 = getelementptr inbounds i32, i32* %83, i64 %84
  store i32 %82, i32* %85, align 4
  %86 = load %"struct.v8::internal::ZoneChunkList<int>::Chunk"*, %"struct.v8::internal::ZoneChunkList<int>::Chunk"** %3, align 8
  %87 = getelementptr inbounds %"struct.v8::internal::ZoneChunkList<int>::Chunk", %"struct.v8::internal::ZoneChunkList<int>::Chunk"* %86, i64 0, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = add i32 %88, 1
  store i32 %89, i32* %87, align 4
  %90 = getelementptr inbounds %"class.v8::internal::ZoneChunkList", %"class.v8::internal::ZoneChunkList"* %0, i64 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 1
  store i64 %92, i64* %90, align 8
  ret void
}

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #5

declare void @_ZN2v88internal18TurboAssemblerBaseC2EPNS0_7IsolateERKNS0_16AssemblerOptionsENS0_18CodeObjectRequiredENSt3__110unique_ptrINS0_15AssemblerBufferENS8_14default_deleteISA_EEEE(%"class.v8::internal::TurboAssemblerBase"*, %"class.v8::internal::Isolate"*, %"struct.v8::internal::AssemblerOptions"* dereferenceable(24), i32, %"class.v8::internal::AssemblerBuffer"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__deque_baseIiNS_9allocatorIiEEED2Ev(%"class.std::__1::__deque_base"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 1
  %3 = load i32**, i32*** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 10
  %7 = getelementptr inbounds i32*, i32** %3, i64 %6
  %8 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 2
  %9 = load i32**, i32*** %8, align 8
  %10 = icmp eq i32** %9, %3
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load i32*, i32** %7, align 8
  %17 = and i64 %5, 1023
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 10
  %23 = getelementptr inbounds i32*, i32** %3, i64 %22
  %24 = load i32*, i32** %23, align 8
  %25 = and i64 %21, 1023
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  %27 = icmp eq i32* %26, %18
  br i1 %27, label %28, label %34

28:                                               ; preds = %47, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %47 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast i32*** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %52, label %65

34:                                               ; preds = %15, %47
  %35 = phi i32* [ %50, %47 ], [ %18, %15 ]
  %36 = phi i32** [ %48, %47 ], [ %7, %15 ]
  %37 = getelementptr inbounds i32, i32* %35, i64 1
  %38 = ptrtoint i32* %37 to i64
  %39 = bitcast i32** %36 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %41, 4096
  br i1 %42, label %43, label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds i32*, i32** %36, i64 1
  %45 = bitcast i32** %44 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %43, %34
  %48 = phi i32** [ %44, %43 ], [ %36, %34 ]
  %49 = phi i64 [ %46, %43 ], [ %38, %34 ]
  %50 = inttoptr i64 %49 to i32*
  %51 = icmp eq i32* %26, %50
  br i1 %51, label %28, label %34

52:                                               ; preds = %28, %52
  %53 = phi i32** [ %57, %52 ], [ %3, %28 ]
  %54 = bitcast i32** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #17
  %56 = load i32**, i32*** %2, align 8
  %57 = getelementptr inbounds i32*, i32** %56, i64 1
  store i32** %57, i32*** %2, align 8
  %58 = load i64, i64* %30, align 8
  %59 = ptrtoint i32** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, 2
  br i1 %62, label %52, label %63

63:                                               ; preds = %52
  %64 = inttoptr i64 %58 to i32**
  br label %65

65:                                               ; preds = %63, %28
  %66 = phi i32** [ %9, %28 ], [ %64, %63 ]
  %67 = phi i32** [ %3, %28 ], [ %57, %63 ]
  %68 = phi i64 [ %32, %28 ], [ %61, %63 ]
  switch i64 %68, label %72 [
    i64 1, label %70
    i64 2, label %69
  ]

69:                                               ; preds = %65
  br label %70

70:                                               ; preds = %65, %69
  %71 = phi i64 [ 1024, %69 ], [ 512, %65 ]
  store i64 %71, i64* %4, align 8
  br label %72

72:                                               ; preds = %70, %65
  %73 = icmp eq i32** %67, %66
  br i1 %73, label %83, label %74

74:                                               ; preds = %72, %74
  %75 = phi i32** [ %78, %74 ], [ %67, %72 ]
  %76 = bitcast i32** %75 to i8**
  %77 = load i8*, i8** %76, align 8
  tail call void @_ZdlPv(i8* %77) #17
  %78 = getelementptr inbounds i32*, i32** %75, i64 1
  %79 = icmp eq i32** %78, %66
  br i1 %79, label %80, label %74

80:                                               ; preds = %74
  %81 = load i32**, i32*** %2, align 8
  %82 = load i32**, i32*** %8, align 8
  br label %83

83:                                               ; preds = %80, %72
  %84 = phi i32** [ %82, %80 ], [ %66, %72 ]
  %85 = phi i32** [ %81, %80 ], [ %66, %72 ]
  %86 = icmp eq i32** %84, %85
  br i1 %86, label %95, label %87

87:                                               ; preds = %83
  %88 = ptrtoint i32** %85 to i64
  %89 = getelementptr i32*, i32** %84, i64 -1
  %90 = ptrtoint i32** %89 to i64
  %91 = sub i64 %90, %88
  %92 = lshr i64 %91, 3
  %93 = xor i64 %92, -1
  %94 = getelementptr i32*, i32** %84, i64 %93
  store i32** %94, i32*** %8, align 8
  br label %95

95:                                               ; preds = %87, %83
  %96 = getelementptr inbounds %"class.std::__1::__deque_base", %"class.std::__1::__deque_base"* %0, i64 0, i32 0, i32 0
  %97 = load i32**, i32*** %96, align 8
  %98 = icmp eq i32** %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %95
  %100 = bitcast i32** %97 to i8*
  tail call void @_ZdlPv(i8* %100) #17
  br label %101

101:                                              ; preds = %95, %99
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88internal13AssemblerBaseD2Ev(%"class.v8::internal::AssemblerBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal9AssemblerD2Ev(%"class.v8::internal::Assembler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal9AssemblerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 6, i32 1, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 6, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImiEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.101"* %3, %"class.std::__1::__tree_node"* %6) #15
  %7 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 5, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node.1241"**
  %10 = load %"class.std::__1::__tree_node.1241"*, %"class.std::__1::__tree_node.1241"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal5LabelENS_6vectorIiNS_9allocatorIiEEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.94"* %7, %"class.std::__1::__tree_node.1241"* %10) #15
  %11 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 4, i32 0
  tail call void @_ZNSt3__112__deque_baseIiNS_9allocatorIiEEED2Ev(%"class.std::__1::__deque_base"* %11) #15
  %12 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNSt3__112__deque_baseIiNS_9allocatorIiEEED2Ev(%"class.std::__1::__deque_base"* %12) #15
  %13 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal13AssemblerBaseD2Ev(%"class.v8::internal::AssemblerBase"* %13) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal9AssemblerD0Ev(%"class.v8::internal::Assembler"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal9AssemblerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 6, i32 1, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 6, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImiEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.101"* %3, %"class.std::__1::__tree_node"* %6) #15
  %7 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 5, i32 0
  %8 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node.1241"**
  %10 = load %"class.std::__1::__tree_node.1241"*, %"class.std::__1::__tree_node.1241"** %9, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal5LabelENS_6vectorIiNS_9allocatorIiEEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.94"* %7, %"class.std::__1::__tree_node.1241"* %10) #15
  %11 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 4, i32 0
  tail call void @_ZNSt3__112__deque_baseIiNS_9allocatorIiEEED2Ev(%"class.std::__1::__deque_base"* %11) #15
  %12 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNSt3__112__deque_baseIiNS_9allocatorIiEEED2Ev(%"class.std::__1::__deque_base"* %12) #15
  %13 = getelementptr inbounds %"class.v8::internal::Assembler", %"class.v8::internal::Assembler"* %0, i64 0, i32 0
  tail call void @_ZN2v88internal13AssemblerBaseD2Ev(%"class.v8::internal::AssemblerBase"* %13) #15
  %14 = bitcast %"class.v8::internal::Assembler"* %0 to i8*
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* %14) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeImiEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.101"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImiEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.101"* %0, %"class.std::__1::__tree_node"* %6) #15
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeImiEENS_19__map_value_compareImS2_NS_4lessImEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE(%"class.std::__1::__tree.101"* %0, %"class.std::__1::__tree_node"* %9) #15
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #17
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal5LabelENS_6vectorIiNS_9allocatorIiEEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.94"*, %"class.std::__1::__tree_node.1241"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1241"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1241"* %1 to %"class.std::__1::__tree_node.1241"**
  %6 = load %"class.std::__1::__tree_node.1241"*, %"class.std::__1::__tree_node.1241"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal5LabelENS_6vectorIiNS_9allocatorIiEEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.94"* %0, %"class.std::__1::__tree_node.1241"* %6) #15
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1241", %"class.std::__1::__tree_node.1241"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1241"**
  %9 = load %"class.std::__1::__tree_node.1241"*, %"class.std::__1::__tree_node.1241"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPN2v88internal5LabelENS_6vectorIiNS_9allocatorIiEEEEEENS_19__map_value_compareIS5_SA_NS_4lessIS5_EELb1EEENS7_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree.94"* %0, %"class.std::__1::__tree_node.1241"* %9) #15
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.1241", %"class.std::__1::__tree_node.1241"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = ptrtoint i32* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.1241", %"class.std::__1::__tree_node.1241"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i32* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #17
  br label %18

18:                                               ; preds = %4, %13
  %19 = bitcast %"class.std::__1::__tree_node.1241"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #17
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14TurboAssembler4MoveENS0_8RegisterEl(%"class.v8::internal::TurboAssembler"*, i32, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %6, i8 zeroext 51, i32 %1, i32 %1, i32 4) #15
  br label %24

7:                                                ; preds = %3
  %8 = icmp ult i64 %2, 256
  br i1 %8, label %9, label %12

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"* %10, i8 zeroext 51, i32 %1, i32 %1, i32 4) #15
  %11 = and i64 %2, 4294967295
  tail call void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_9ImmediateE(%"class.v8::internal::Assembler"* %10, i32 %1, i64 %11) #15
  br label %24

12:                                               ; preds = %7
  %13 = icmp ult i64 %2, 4294967296
  br i1 %13, label %14, label %17

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = and i64 %2, 4294967295
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %15, i32 %1, i64 %16, i32 4) #15
  br label %24

17:                                               ; preds = %12
  %18 = add i64 %2, 2147483648
  %19 = icmp ult i64 %18, 4294967296
  %20 = getelementptr inbounds %"class.v8::internal::TurboAssembler", %"class.v8::internal::TurboAssembler"* %0, i64 0, i32 0, i32 0, i32 0
  br i1 %19, label %21, label %23

21:                                               ; preds = %17
  %22 = and i64 %2, 4294967295
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %20, i32 %1, i64 %22, i32 8) #15
  br label %24

23:                                               ; preds = %17
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_11Immediate64Ei(%"class.v8::internal::Assembler"* %20, i32 %1, i64 %2, i8 0, i32 8) #15
  br label %24

24:                                               ; preds = %9, %21, %23, %14, %5
  ret void
}

declare void @_ZN2v88internal9Assembler13arithmetic_opEhNS0_8RegisterES2_i(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i32, i32) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler4movbENS0_8RegisterENS0_9ImmediateE(%"class.v8::internal::Assembler"*, i32, i64) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_11Immediate64Ei(%"class.v8::internal::Assembler"*, i32, i64, i8, i32) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal4wasm7liftoff4LoadEPNS1_16LiftoffAssemblerENS1_15LiftoffRegisterENS0_7OperandENS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"*, i8, i64, i32, i8 zeroext) local_unnamed_addr #4 comdat {
  switch i8 %4, label %39 [
    i8 1, label %6
    i8 2, label %9
    i8 11, label %9
    i8 10, label %9
    i8 8, label %9
    i8 9, label %9
    i8 3, label %12
    i8 4, label %21
    i8 5, label %30
  ]

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = zext i8 %1 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %7, i32 %8, i64 %2, i32 %3, i32 4) #15
  br label %40

9:                                                ; preds = %5, %5, %5, %5, %5
  %10 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = zext i8 %1 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"* %10, i32 %11, i64 %2, i32 %3, i32 8) #15
  br label %40

12:                                               ; preds = %5
  %13 = zext i8 %1 to i32
  %14 = add nsw i32 %13, -10
  %15 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %17 = and i32 %16, 32
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %12
  tail call void @_ZN2v88internal9Assembler3vssEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %15, i8 zeroext 16, i32 %14, i32 0, i64 %2, i32 %3) #15
  br label %40

20:                                               ; preds = %12
  tail call void @_ZN2v88internal9Assembler5movssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %15, i32 %14, i64 %2, i32 %3) #15
  br label %40

21:                                               ; preds = %5
  %22 = zext i8 %1 to i32
  %23 = add nsw i32 %22, -10
  %24 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %26 = and i32 %25, 32
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %21
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %24, i8 zeroext 16, i32 %23, i32 0, i64 %2, i32 %3, i32 3, i32 1, i32 0, i32 5) #15
  br label %40

29:                                               ; preds = %21
  tail call void @_ZN2v88internal9Assembler5movsdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %24, i32 %23, i64 %2, i32 %3) #15
  br label %40

30:                                               ; preds = %5
  %31 = zext i8 %1 to i32
  %32 = add nsw i32 %31, -10
  %33 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %34 = and i32 %33, 32
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %35, label %38, label %37

37:                                               ; preds = %30
  tail call void @_ZN2v88internal9Assembler7vmovdquENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %36, i32 %32, i64 %2, i32 %3) #15
  br label %40

38:                                               ; preds = %30
  tail call void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"* %36, i32 %32, i64 %2, i32 %3) #15
  br label %40

39:                                               ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

40:                                               ; preds = %38, %37, %29, %28, %20, %19, %9, %6
  ret void
}

declare void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterENS0_7OperandEi(%"class.v8::internal::Assembler"*, i32, i64, i32, i32) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler5movssENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler3vssEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i32, i64, i32) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler5movsdENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i32, i64, i32, i32, i32, i32, i32) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler7vmovdquENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler6movupsENS0_11XMMRegisterENS0_7OperandE(%"class.v8::internal::Assembler"*, i32, i64, i32) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_9ImmediateEi(%"class.v8::internal::Assembler"*, i64, i32, i64, i32) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"*, i64, i32, i32, i32) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler8emit_movENS0_8RegisterES2_i(%"class.v8::internal::Assembler"*, i32, i32, i32) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler5movssENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"*, i64, i32, i32) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler5movsdENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"*, i64, i32, i32) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler7vmovdquENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"*, i64, i32, i32) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler6movupsENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"*, i64, i32, i32) local_unnamed_addr #5

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* @_ZN2v84base11SmallVectorINS_8internal4wasm17LiftoffStackSlots4SlotELm8EE4GrowEv(%"class.v8::base::SmallVector.1224"*) local_unnamed_addr #6 comdat align 2 {
  %2 = tail call %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* @_ZN2v84base11SmallVectorINS_8internal4wasm17LiftoffStackSlots4SlotELm8EE4GrowEm(%"class.v8::base::SmallVector.1224"* %0, i64 0)
  ret %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %2
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* @_ZN2v84base11SmallVectorINS_8internal4wasm17LiftoffStackSlots4SlotELm8EE4GrowEm(%"class.v8::base::SmallVector.1224"*, i64) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::base::SmallVector.1224", %"class.v8::base::SmallVector.1224"* %0, i64 0, i32 1
  %4 = bitcast %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::base::SmallVector.1224"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = getelementptr inbounds %"class.v8::base::SmallVector.1224", %"class.v8::base::SmallVector.1224"* %0, i64 0, i32 2
  %11 = bitcast %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %7
  %14 = sdiv exact i64 %13, 24
  %15 = shl nsw i64 %14, 1
  %16 = icmp ugt i64 %15, %1
  %17 = select i1 %16, i64 %15, i64 %1
  %18 = tail call i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64 %17) #15
  %19 = mul i64 %18, 24
  %20 = tail call noalias i8* @malloc(i64 %19) #15
  %21 = bitcast i8* %20 to %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*
  %22 = icmp eq i8* %20, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

24:                                               ; preds = %2
  %25 = bitcast %"class.v8::base::SmallVector.1224"* %0 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %20, i8* align 1 %26, i64 %8, i1 false) #15
  %27 = getelementptr inbounds %"class.v8::base::SmallVector.1224", %"class.v8::base::SmallVector.1224"* %0, i64 0, i32 3, i32 0, i64 0
  %28 = icmp eq i8* %26, %27
  br i1 %28, label %30, label %29

29:                                               ; preds = %24
  tail call void @free(i8* %26) #15
  br label %30

30:                                               ; preds = %24, %29
  store i8* %20, i8** %25, align 8
  %31 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %21, i64 %9
  store %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %31, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %3, align 8
  %32 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %21, i64 %18
  store %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %32, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"** %10, align 8
  ret %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %31
}

declare void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"*, i32) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler5pushqENS0_7OperandE(%"class.v8::internal::Assembler"*, i64, i32) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal4wasm7liftoff4pushEPNS1_16LiftoffAssemblerENS1_15LiftoffRegisterENS1_9ValueKindEi(%"class.v8::internal::wasm::LiftoffAssembler"*, i8, i8 zeroext, i32) local_unnamed_addr #4 comdat {
  switch i8 %2, label %58 [
    i8 1, label %5
    i8 2, label %5
    i8 10, label %5
    i8 11, label %5
    i8 3, label %13
    i8 4, label %28
    i8 5, label %43
  ]

5:                                                ; preds = %4, %4, %4, %4
  %6 = icmp eq i32 %3, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = zext i32 %3 to i64
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %8, i8 zeroext 5, i32 4, i64 %9, i32 8) #15
  br label %10

10:                                               ; preds = %5, %7
  %11 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = zext i8 %1 to i32
  tail call void @_ZN2v88internal9Assembler5pushqENS0_8RegisterE(%"class.v8::internal::Assembler"* %11, i32 %12) #15
  br label %59

13:                                               ; preds = %4
  %14 = add nsw i32 %3, 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = zext i32 %14 to i64
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %17, i8 zeroext 5, i32 4, i64 %18, i32 8) #15
  br label %19

19:                                               ; preds = %13, %16
  %20 = zext i8 %1 to i32
  %21 = add nsw i32 %20, -10
  %22 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %24 = and i32 %23, 32
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %19
  tail call void @_ZN2v88internal9Assembler3vssEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %22, i8 zeroext 17, i32 %21, i32 0, i64 2360320, i32 131072) #15
  br label %59

27:                                               ; preds = %19
  tail call void @_ZN2v88internal9Assembler5movssENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %22, i64 2360320, i32 131072, i32 %21) #15
  br label %59

28:                                               ; preds = %4
  %29 = add nsw i32 %3, 8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %34, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %33 = zext i32 %29 to i64
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %32, i8 zeroext 5, i32 4, i64 %33, i32 8) #15
  br label %34

34:                                               ; preds = %28, %31
  %35 = zext i8 %1 to i32
  %36 = add nsw i32 %35, -10
  %37 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %39 = and i32 %38, 32
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %34
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %37, i8 zeroext 17, i32 %36, i32 0, i64 2360320, i32 131072, i32 3, i32 1, i32 0, i32 5) #15
  br label %59

42:                                               ; preds = %34
  tail call void @_ZN2v88internal9Assembler5movsdENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %37, i64 2360320, i32 131072, i32 %36) #15
  br label %59

43:                                               ; preds = %4
  %44 = add nsw i32 %3, 16
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = zext i32 %44 to i64
  tail call void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"* %47, i8 zeroext 5, i32 4, i64 %48, i32 8) #15
  br label %49

49:                                               ; preds = %43, %46
  %50 = zext i8 %1 to i32
  %51 = add nsw i32 %50, -10
  %52 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %53 = and i32 %52, 32
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %54, label %57, label %56

56:                                               ; preds = %49
  tail call void @_ZN2v88internal9Assembler7vmovdquENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %55, i64 2360320, i32 131072, i32 %51) #15
  br label %59

57:                                               ; preds = %49
  tail call void @_ZN2v88internal9Assembler6movupsENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %55, i64 2360320, i32 131072, i32 %51) #15
  br label %59

58:                                               ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

59:                                               ; preds = %57, %56, %42, %41, %27, %26, %10
  ret void
}

declare void @_ZN2v88internal9Assembler5pushqENS0_9ImmediateE(%"class.v8::internal::Assembler"*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__sortIRZN2v88internal4wasm17LiftoffStackSlots15SortInPushOrderEvEUlRKNS4_4SlotES7_E_PS5_EEvT0_SB_T_(%"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %class.anon* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %5 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %6 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %7 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %8 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %9 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %10 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %11 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %12 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %13 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %14 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %15 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %16 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %17 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %18 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %19 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %20 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %21 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %22 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %23 = alloca { %"class.v8::internal::wasm::LiftoffAssembler::VarState", i32, i8 }, align 8
  %24 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %25 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %26 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %27 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %28 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %29 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %30 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %31 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %32 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %33 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %34 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %9, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %10, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %12, i64 0, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %13, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %11, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %14, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %15, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %16, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %17, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %6, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %4, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %5, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %7, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %8, i64 0, i32 0, i32 0
  br label %48

48:                                               ; preds = %404, %3
  %49 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %1, %3 ], [ %384, %404 ]
  %50 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %0, %3 ], [ %65, %404 ]
  %51 = ptrtoint %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %49 to i64
  %52 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %49, i64 -1
  %53 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %49, i64 -1, i32 3
  %54 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %52, i64 0, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %52, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %52, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %49, i64 -1, i32 3
  %58 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %52, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %49, i64 -1, i32 3
  %60 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %52, i64 0, i32 0, i32 0
  %61 = ptrtoint %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %49 to i64
  br label %62

62:                                               ; preds = %415, %48
  %63 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %50, %48 ], [ %416, %415 ]
  br label %64

64:                                               ; preds = %335, %62
  %65 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %63, %62 ], [ %324, %335 ]
  %66 = ptrtoint %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65 to i64
  %67 = sub i64 %51, %66
  %68 = sdiv exact i64 %67, 24
  switch i64 %68, label %156 [
    i64 0, label %419
    i64 1, label %419
    i64 2, label %69
    i64 3, label %79
    i64 4, label %116
    i64 5, label %121
  ]

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %49, i64 -1, i32 3
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = icmp sgt i32 %71, %73
  br i1 %74, label %75, label %419

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %33, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76)
  %77 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %76, i8* align 4 %77, i64 24, i1 false) #15
  %78 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %49, i64 -1, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %78, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* nonnull align 4 %76, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76)
  br label %419

79:                                               ; preds = %64
  %80 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 1
  %81 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %49, i64 -1
  %82 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 1, i32 3
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 0, i32 3
  %85 = load i32, i32* %84, align 4
  %86 = icmp sgt i32 %83, %85
  %87 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %49, i64 -1, i32 3
  %88 = load i32, i32* %87, align 4
  %89 = icmp sgt i32 %88, %83
  br i1 %86, label %101, label %90

90:                                               ; preds = %79
  br i1 %89, label %91, label %419

91:                                               ; preds = %90
  %92 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %28, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92)
  %93 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %80, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %92, i8* align 4 %93, i64 24, i1 false) #15
  %94 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %81, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %94, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* nonnull align 4 %92, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92)
  %95 = load i32, i32* %82, align 4
  %96 = load i32, i32* %84, align 4
  %97 = icmp sgt i32 %95, %96
  br i1 %97, label %98, label %419

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %29, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99)
  %100 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %99, i8* align 4 %100, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %100, i8* align 4 %93, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* nonnull align 4 %99, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99)
  br label %419

101:                                              ; preds = %79
  br i1 %89, label %102, label %106

102:                                              ; preds = %101
  %103 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %30, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103)
  %104 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %103, i8* align 4 %104, i64 24, i1 false) #15
  %105 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %81, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %104, i8* align 4 %105, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* nonnull align 4 %103, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103)
  br label %419

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %31, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107)
  %108 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %107, i8* align 4 %108, i64 24, i1 false) #15
  %109 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %80, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* nonnull align 4 %107, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107)
  %110 = load i32, i32* %87, align 4
  %111 = load i32, i32* %82, align 4
  %112 = icmp sgt i32 %110, %111
  br i1 %112, label %113, label %419

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %32, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %114, i8* align 4 %109, i64 24, i1 false) #15
  %115 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %81, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %109, i8* align 4 %115, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %115, i8* nonnull align 4 %114, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114)
  br label %419

116:                                              ; preds = %64
  %117 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 1
  %118 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 2
  %119 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %49, i64 -1
  %120 = tail call i32 @_ZNSt3__17__sort4IRZN2v88internal4wasm17LiftoffStackSlots15SortInPushOrderEvEUlRKNS4_4SlotES7_E_PS5_EEjT0_SB_SB_SB_T_(%"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %117, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %118, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %119, %class.anon* dereferenceable(1) %2)
  br label %419

121:                                              ; preds = %64
  %122 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 1
  %123 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 2
  %124 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 3
  %125 = tail call i32 @_ZNSt3__17__sort4IRZN2v88internal4wasm17LiftoffStackSlots15SortInPushOrderEvEUlRKNS4_4SlotES7_E_PS5_EEjT0_SB_SB_SB_T_(%"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %122, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %123, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %124, %class.anon* dereferenceable(1) %2) #15
  %126 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %49, i64 -1, i32 3
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 3, i32 3
  %129 = load i32, i32* %128, align 4
  %130 = icmp sgt i32 %127, %129
  br i1 %130, label %131, label %419

131:                                              ; preds = %121
  %132 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %24, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132)
  %133 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %124, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %132, i8* align 4 %133, i64 24, i1 false) #15
  %134 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %49, i64 -1, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %133, i8* align 4 %134, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %134, i8* nonnull align 4 %132, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132)
  %135 = load i32, i32* %128, align 4
  %136 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 2, i32 3
  %137 = load i32, i32* %136, align 4
  %138 = icmp sgt i32 %135, %137
  br i1 %138, label %139, label %419

139:                                              ; preds = %131
  %140 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %25, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140)
  %141 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %123, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %140, i8* align 4 %141, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %141, i8* align 4 %133, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %133, i8* nonnull align 4 %140, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140)
  %142 = load i32, i32* %136, align 4
  %143 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 1, i32 3
  %144 = load i32, i32* %143, align 4
  %145 = icmp sgt i32 %142, %144
  br i1 %145, label %146, label %419

146:                                              ; preds = %139
  %147 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %26, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147)
  %148 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %122, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %147, i8* align 4 %148, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %141, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %141, i8* nonnull align 4 %147, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147)
  %149 = load i32, i32* %143, align 4
  %150 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 0, i32 3
  %151 = load i32, i32* %150, align 4
  %152 = icmp sgt i32 %149, %151
  br i1 %152, label %153, label %419

153:                                              ; preds = %146
  %154 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %27, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %154)
  %155 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %154, i8* align 4 %155, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %155, i8* align 4 %148, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %148, i8* nonnull align 4 %154, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %154)
  br label %419

156:                                              ; preds = %64
  %157 = icmp slt i64 %67, 744
  br i1 %157, label %158, label %225

158:                                              ; preds = %156
  %159 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 2
  %160 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 1
  %161 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 1, i32 3
  %162 = load i32, i32* %161, align 4
  %163 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 0, i32 3
  %164 = load i32, i32* %163, align 4
  %165 = icmp sgt i32 %162, %164
  %166 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 2, i32 3
  %167 = load i32, i32* %166, align 4
  %168 = icmp sgt i32 %167, %162
  br i1 %165, label %179, label %169

169:                                              ; preds = %158
  br i1 %168, label %170, label %193

170:                                              ; preds = %169
  %171 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %18, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %171)
  %172 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %160, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %171, i8* align 4 %172, i64 24, i1 false) #15
  %173 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %159, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %172, i8* align 4 %173, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %173, i8* nonnull align 4 %171, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %171)
  %174 = load i32, i32* %161, align 4
  %175 = icmp sgt i32 %174, %164
  br i1 %175, label %176, label %193

176:                                              ; preds = %170
  %177 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %19, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %177)
  %178 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %177, i8* align 4 %178, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %178, i8* align 4 %172, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %172, i8* nonnull align 4 %177, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %177)
  br label %193

179:                                              ; preds = %158
  br i1 %168, label %180, label %184

180:                                              ; preds = %179
  %181 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %20, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %181)
  %182 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %181, i8* align 4 %182, i64 24, i1 false) #15
  %183 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %159, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %182, i8* align 4 %183, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %183, i8* nonnull align 4 %181, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181)
  br label %193

184:                                              ; preds = %179
  %185 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %21, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %185)
  %186 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %185, i8* align 4 %186, i64 24, i1 false) #15
  %187 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %160, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %186, i8* align 4 %187, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %187, i8* nonnull align 4 %185, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %185)
  %188 = load i32, i32* %161, align 4
  %189 = icmp sgt i32 %167, %188
  br i1 %189, label %190, label %193

190:                                              ; preds = %184
  %191 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %22, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %191)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %191, i8* align 4 %187, i64 24, i1 false) #15
  %192 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %159, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %187, i8* align 4 %192, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %192, i8* nonnull align 4 %191, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %191)
  br label %193

193:                                              ; preds = %190, %184, %180, %176, %170, %169
  %194 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 3
  %195 = icmp eq %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %194, %49
  br i1 %195, label %419, label %196

196:                                              ; preds = %193
  %197 = getelementptr inbounds { %"class.v8::internal::wasm::LiftoffAssembler::VarState", i32, i8 }, { %"class.v8::internal::wasm::LiftoffAssembler::VarState", i32, i8 }* %23, i64 0, i32 0, i32 0
  br label %198

198:                                              ; preds = %222, %196
  %199 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %194, %196 ], [ %223, %222 ]
  %200 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %159, %196 ], [ %199, %222 ]
  %201 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %199, i64 0, i32 3
  %202 = load i32, i32* %201, align 4
  %203 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %200, i64 0, i32 3
  %204 = load i32, i32* %203, align 4
  %205 = icmp sgt i32 %202, %204
  br i1 %205, label %206, label %222

206:                                              ; preds = %198
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %197)
  %207 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %199, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %197, i8* align 4 %207, i64 20, i1 false) #15
  br label %208

208:                                              ; preds = %214, %206
  %209 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %199, %206 ], [ %210, %214 ]
  %210 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %200, %206 ], [ %215, %214 ]
  %211 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %209, i64 0, i32 0, i32 0
  %212 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %210, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %211, i8* align 4 %212, i64 24, i1 false) #15
  %213 = icmp eq %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %210, %65
  br i1 %213, label %219, label %214

214:                                              ; preds = %208
  %215 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %210, i64 -1
  %216 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %210, i64 -1, i32 3
  %217 = load i32, i32* %216, align 4
  %218 = icmp sgt i32 %202, %217
  br i1 %218, label %208, label %219

219:                                              ; preds = %214, %208
  %220 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %65, %208 ], [ %210, %214 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %212, i8* nonnull align 8 %197, i64 20, i1 false) #15
  %221 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %220, i64 0, i32 3
  store i32 %202, i32* %221, align 4
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %197)
  br label %222

222:                                              ; preds = %219, %198
  %223 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %199, i64 1
  %224 = icmp eq %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %223, %49
  br i1 %224, label %419, label %198

225:                                              ; preds = %156
  %226 = icmp sgt i64 %67, 23976
  %227 = udiv i64 %67, 48
  %228 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 %227
  br i1 %226, label %229, label %262

229:                                              ; preds = %225
  %230 = udiv i64 %67, 96
  %231 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 %230
  %232 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %228, i64 %230
  %233 = tail call i32 @_ZNSt3__17__sort4IRZN2v88internal4wasm17LiftoffStackSlots15SortInPushOrderEvEUlRKNS4_4SlotES7_E_PS5_EEjT0_SB_SB_SB_T_(%"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %231, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %228, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %232, %class.anon* dereferenceable(1) %2) #15
  %234 = load i32, i32* %57, align 4
  %235 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %232, i64 0, i32 3
  %236 = load i32, i32* %235, align 4
  %237 = icmp sgt i32 %234, %236
  br i1 %237, label %238, label %288

238:                                              ; preds = %229
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39)
  %239 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %232, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %39, i8* align 4 %239, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %239, i8* align 4 %58, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %58, i8* nonnull align 4 %39, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39)
  %240 = add i32 %233, 1
  %241 = load i32, i32* %235, align 4
  %242 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 %227, i32 3
  %243 = load i32, i32* %242, align 4
  %244 = icmp sgt i32 %241, %243
  br i1 %244, label %245, label %288

245:                                              ; preds = %238
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40)
  %246 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %228, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %40, i8* align 4 %246, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %246, i8* align 4 %239, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %239, i8* nonnull align 4 %40, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40)
  %247 = add i32 %233, 2
  %248 = load i32, i32* %242, align 4
  %249 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 %230, i32 3
  %250 = load i32, i32* %249, align 4
  %251 = icmp sgt i32 %248, %250
  br i1 %251, label %252, label %288

252:                                              ; preds = %245
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41)
  %253 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %231, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %41, i8* align 4 %253, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %253, i8* align 4 %246, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %246, i8* nonnull align 4 %41, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41)
  %254 = add i32 %233, 3
  %255 = load i32, i32* %249, align 4
  %256 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 0, i32 3
  %257 = load i32, i32* %256, align 4
  %258 = icmp sgt i32 %255, %257
  br i1 %258, label %259, label %288

259:                                              ; preds = %252
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42)
  %260 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %42, i8* align 4 %260, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %260, i8* align 4 %253, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %253, i8* nonnull align 4 %42, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42)
  %261 = add i32 %233, 4
  br label %288

262:                                              ; preds = %225
  %263 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 %227, i32 3
  %264 = load i32, i32* %263, align 4
  %265 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 0, i32 3
  %266 = load i32, i32* %265, align 4
  %267 = icmp sgt i32 %264, %266
  %268 = load i32, i32* %53, align 4
  %269 = icmp sgt i32 %268, %264
  br i1 %267, label %278, label %270

270:                                              ; preds = %262
  br i1 %269, label %271, label %288

271:                                              ; preds = %270
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34)
  %272 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %228, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %34, i8* align 4 %272, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %272, i8* align 4 %54, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %54, i8* nonnull align 4 %34, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34)
  %273 = load i32, i32* %263, align 4
  %274 = load i32, i32* %265, align 4
  %275 = icmp sgt i32 %273, %274
  br i1 %275, label %276, label %288

276:                                              ; preds = %271
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35)
  %277 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %35, i8* align 4 %277, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %277, i8* align 4 %272, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %272, i8* nonnull align 4 %35, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35)
  br label %288

278:                                              ; preds = %262
  br i1 %269, label %279, label %281

279:                                              ; preds = %278
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38)
  %280 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %38, i8* align 4 %280, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %280, i8* align 4 %56, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* nonnull align 4 %38, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38)
  br label %288

281:                                              ; preds = %278
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36)
  %282 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %36, i8* align 4 %282, i64 24, i1 false) #15
  %283 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %228, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %282, i8* align 4 %283, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %283, i8* nonnull align 4 %36, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36)
  %284 = load i32, i32* %53, align 4
  %285 = load i32, i32* %263, align 4
  %286 = icmp sgt i32 %284, %285
  br i1 %286, label %287, label %288

287:                                              ; preds = %281
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %37, i8* align 4 %283, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %283, i8* align 4 %55, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* nonnull align 4 %37, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37)
  br label %288

288:                                              ; preds = %287, %281, %279, %276, %271, %270, %259, %252, %245, %238, %229
  %289 = phi i32 [ %261, %259 ], [ %254, %252 ], [ %247, %245 ], [ %240, %238 ], [ %233, %229 ], [ 1, %279 ], [ 0, %270 ], [ 2, %276 ], [ 1, %271 ], [ 2, %287 ], [ 1, %281 ]
  %290 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 0, i32 3
  %291 = load i32, i32* %290, align 4
  %292 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 %227, i32 3
  %293 = load i32, i32* %292, align 4
  %294 = icmp sgt i32 %291, %293
  br i1 %294, label %348, label %295

295:                                              ; preds = %288, %340
  %296 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %297, %340 ], [ %52, %288 ]
  %297 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %296, i64 -1
  %298 = icmp eq %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, %297
  br i1 %298, label %299, label %340

299:                                              ; preds = %295
  %300 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 1
  %301 = load i32, i32* %59, align 4
  %302 = icmp sgt i32 %291, %301
  br i1 %302, label %316, label %303

303:                                              ; preds = %299
  %304 = icmp eq %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %300, %52
  br i1 %304, label %419, label %305

305:                                              ; preds = %303, %313
  %306 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %314, %313 ], [ %300, %303 ]
  %307 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %306, i64 0, i32 3
  %308 = load i32, i32* %307, align 4
  %309 = icmp sgt i32 %291, %308
  br i1 %309, label %310, label %313

310:                                              ; preds = %305
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44)
  %311 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %306, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %44, i8* align 4 %311, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %311, i8* align 4 %60, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* nonnull align 4 %44, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44)
  %312 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %306, i64 1
  br label %316

313:                                              ; preds = %305
  %314 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %306, i64 1
  %315 = icmp eq %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %314, %52
  br i1 %315, label %419, label %305

316:                                              ; preds = %310, %299
  %317 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %300, %299 ], [ %312, %310 ]
  %318 = icmp eq %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %317, %52
  br i1 %318, label %419, label %319

319:                                              ; preds = %316, %337
  %320 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %328, %337 ], [ %317, %316 ]
  %321 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %331, %337 ], [ %52, %316 ]
  %322 = load i32, i32* %290, align 4
  br label %323

323:                                              ; preds = %323, %319
  %324 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %320, %319 ], [ %328, %323 ]
  %325 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %324, i64 0, i32 3
  %326 = load i32, i32* %325, align 4
  %327 = icmp sgt i32 %322, %326
  %328 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %324, i64 1
  br i1 %327, label %329, label %323

329:                                              ; preds = %323, %329
  %330 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %331, %329 ], [ %321, %323 ]
  %331 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %330, i64 -1
  %332 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %330, i64 -1, i32 3
  %333 = load i32, i32* %332, align 4
  %334 = icmp sgt i32 %322, %333
  br i1 %334, label %329, label %335

335:                                              ; preds = %329
  %336 = icmp ult %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %324, %331
  br i1 %336, label %337, label %64

337:                                              ; preds = %335
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45)
  %338 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %324, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %45, i8* align 4 %338, i64 24, i1 false) #15
  %339 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %331, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %338, i8* align 4 %339, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %339, i8* nonnull align 4 %45, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45)
  br label %319

340:                                              ; preds = %295
  %341 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %296, i64 -1, i32 3
  %342 = load i32, i32* %341, align 4
  %343 = icmp sgt i32 %342, %293
  br i1 %343, label %344, label %295

344:                                              ; preds = %340
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43)
  %345 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %43, i8* align 4 %345, i64 24, i1 false) #15
  %346 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %297, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %345, i8* align 4 %346, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %346, i8* nonnull align 4 %43, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43)
  %347 = add i32 %289, 1
  br label %348

348:                                              ; preds = %288, %344
  %349 = phi i32 [ %347, %344 ], [ %289, %288 ]
  %350 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %297, %344 ], [ %52, %288 ]
  %351 = ptrtoint %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65 to i64
  %352 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, i64 1
  %353 = icmp ult %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %352, %350
  br i1 %353, label %354, label %381

354:                                              ; preds = %348, %375
  %355 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %380, %375 ], [ %228, %348 ]
  %356 = phi i32 [ %378, %375 ], [ %349, %348 ]
  %357 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %366, %375 ], [ %352, %348 ]
  %358 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %369, %375 ], [ %350, %348 ]
  %359 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %355, i64 0, i32 3
  %360 = load i32, i32* %359, align 4
  br label %361

361:                                              ; preds = %361, %354
  %362 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %357, %354 ], [ %366, %361 ]
  %363 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %362, i64 0, i32 3
  %364 = load i32, i32* %363, align 4
  %365 = icmp sgt i32 %364, %360
  %366 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %362, i64 1
  br i1 %365, label %361, label %367

367:                                              ; preds = %361, %367
  %368 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %369, %367 ], [ %358, %361 ]
  %369 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %368, i64 -1
  %370 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %368, i64 -1, i32 3
  %371 = load i32, i32* %370, align 4
  %372 = icmp sgt i32 %371, %360
  br i1 %372, label %373, label %367

373:                                              ; preds = %367
  %374 = icmp ugt %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %362, %369
  br i1 %374, label %381, label %375

375:                                              ; preds = %373
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46)
  %376 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %362, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %46, i8* align 4 %376, i64 24, i1 false) #15
  %377 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %369, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %376, i8* align 4 %377, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %377, i8* nonnull align 4 %46, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46)
  %378 = add i32 %356, 1
  %379 = icmp eq %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %355, %362
  %380 = select i1 %379, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %369, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %355
  br label %354

381:                                              ; preds = %373, %348
  %382 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %228, %348 ], [ %355, %373 ]
  %383 = phi i32 [ %349, %348 ], [ %356, %373 ]
  %384 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %352, %348 ], [ %362, %373 ]
  %385 = icmp eq %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %384, %382
  br i1 %385, label %396, label %386

386:                                              ; preds = %381
  %387 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %382, i64 0, i32 3
  %388 = load i32, i32* %387, align 4
  %389 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %384, i64 0, i32 3
  %390 = load i32, i32* %389, align 4
  %391 = icmp sgt i32 %388, %390
  br i1 %391, label %392, label %396

392:                                              ; preds = %386
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47)
  %393 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %384, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %47, i8* align 4 %393, i64 24, i1 false) #15
  %394 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %382, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %393, i8* align 4 %394, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %394, i8* nonnull align 4 %47, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47)
  %395 = add i32 %383, 1
  br label %396

396:                                              ; preds = %381, %392, %386
  %397 = phi i32 [ %395, %392 ], [ %383, %386 ], [ %383, %381 ]
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %399, label %406

399:                                              ; preds = %396
  %400 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZN2v88internal4wasm17LiftoffStackSlots15SortInPushOrderEvEUlRKNS4_4SlotES7_E_PS5_EEbT0_SB_T_(%"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %384, %class.anon* dereferenceable(1) %2)
  %401 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %384, i64 1
  %402 = tail call zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZN2v88internal4wasm17LiftoffStackSlots15SortInPushOrderEvEUlRKNS4_4SlotES7_E_PS5_EEbT0_SB_T_(%"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %401, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %49, %class.anon* dereferenceable(1) %2)
  br i1 %402, label %403, label %405

403:                                              ; preds = %399
  br i1 %400, label %419, label %404

404:                                              ; preds = %403, %417
  br label %48

405:                                              ; preds = %399
  br i1 %400, label %415, label %406

406:                                              ; preds = %405, %396
  %407 = ptrtoint %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %384 to i64
  %408 = sub i64 %407, %351
  %409 = sdiv exact i64 %408, 24
  %410 = sub i64 %61, %407
  %411 = sdiv exact i64 %410, 24
  %412 = icmp slt i64 %409, %411
  br i1 %412, label %413, label %417

413:                                              ; preds = %406
  tail call void @_ZNSt3__16__sortIRZN2v88internal4wasm17LiftoffStackSlots15SortInPushOrderEvEUlRKNS4_4SlotES7_E_PS5_EEvT0_SB_T_(%"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %65, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %384, %class.anon* dereferenceable(1) %2)
  %414 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %384, i64 1
  br label %415

415:                                              ; preds = %413, %405
  %416 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %401, %405 ], [ %414, %413 ]
  br label %62

417:                                              ; preds = %406
  %418 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %384, i64 1
  tail call void @_ZNSt3__16__sortIRZN2v88internal4wasm17LiftoffStackSlots15SortInPushOrderEvEUlRKNS4_4SlotES7_E_PS5_EEvT0_SB_T_(%"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %418, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %49, %class.anon* dereferenceable(1) %2)
  br label %404

419:                                              ; preds = %403, %316, %64, %64, %303, %313, %222, %193, %153, %146, %139, %131, %121, %113, %106, %102, %98, %91, %90, %69, %75, %116
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNSt3__17__sort4IRZN2v88internal4wasm17LiftoffStackSlots15SortInPushOrderEvEUlRKNS4_4SlotES7_E_PS5_EEjT0_SB_SB_SB_T_(%"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %class.anon* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %6 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %7 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %8 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %9 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %10 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %11 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %12 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %13 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %14 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %1, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %15, %17
  %19 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %2, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, %15
  br i1 %18, label %33, label %22

22:                                               ; preds = %5
  br i1 %21, label %23, label %48

23:                                               ; preds = %22
  %24 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %9, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24)
  %25 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %1, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* align 4 %25, i64 24, i1 false) #15
  %26 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %2, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* align 4 %26, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* nonnull align 4 %24, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24)
  %27 = load i32, i32* %14, align 4
  %28 = load i32, i32* %16, align 4
  %29 = icmp sgt i32 %27, %28
  br i1 %29, label %30, label %48

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %10, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31)
  %32 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* align 4 %32, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %25, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %25, i8* nonnull align 4 %31, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31)
  br label %48

33:                                               ; preds = %5
  br i1 %21, label %34, label %38

34:                                               ; preds = %33
  %35 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %11, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35)
  %36 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %35, i8* align 4 %36, i64 24, i1 false) #15
  %37 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %2, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %37, i8* nonnull align 4 %35, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35)
  br label %48

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %12, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39)
  %40 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %39, i8* align 4 %40, i64 24, i1 false) #15
  %41 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %1, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* nonnull align 4 %39, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39)
  %42 = load i32, i32* %19, align 4
  %43 = load i32, i32* %14, align 4
  %44 = icmp sgt i32 %42, %43
  br i1 %44, label %45, label %48

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %13, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %46, i8* align 4 %41, i64 24, i1 false) #15
  %47 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %2, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %41, i8* align 4 %47, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* nonnull align 4 %46, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46)
  br label %48

48:                                               ; preds = %22, %23, %30, %34, %38, %45
  %49 = phi i32 [ 1, %34 ], [ 0, %22 ], [ 2, %30 ], [ 1, %23 ], [ 2, %45 ], [ 1, %38 ]
  %50 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %3, i64 0, i32 3
  %51 = load i32, i32* %50, align 4
  %52 = load i32, i32* %19, align 4
  %53 = icmp sgt i32 %51, %52
  br i1 %53, label %54, label %73

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %6, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55)
  %56 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %2, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %55, i8* align 4 %56, i64 24, i1 false) #15
  %57 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %3, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* align 4 %57, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* nonnull align 4 %55, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55)
  %58 = add nuw nsw i32 %49, 1
  %59 = load i32, i32* %19, align 4
  %60 = load i32, i32* %14, align 4
  %61 = icmp sgt i32 %59, %60
  br i1 %61, label %62, label %73

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %7, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63)
  %64 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %1, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %63, i8* align 4 %64, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %56, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* nonnull align 4 %63, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63)
  %65 = add nuw nsw i32 %49, 2
  %66 = load i32, i32* %14, align 4
  %67 = load i32, i32* %16, align 4
  %68 = icmp sgt i32 %66, %67
  br i1 %68, label %69, label %73

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %8, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %70)
  %71 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %70, i8* align 4 %71, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %71, i8* align 4 %64, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* nonnull align 4 %70, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %70)
  %72 = add nuw nsw i32 %49, 3
  br label %73

73:                                               ; preds = %54, %69, %62, %48
  %74 = phi i32 [ %72, %69 ], [ %65, %62 ], [ %58, %54 ], [ %49, %48 ]
  ret i32 %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__127__insertion_sort_incompleteIRZN2v88internal4wasm17LiftoffStackSlots15SortInPushOrderEvEUlRKNS4_4SlotES7_E_PS5_EEbT0_SB_T_(%"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"*, %class.anon* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %5 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %6 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %7 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %8 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %9 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %10 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %11 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %12 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %13 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %14 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %15 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %16 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %17 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %18 = alloca %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", align 4
  %19 = alloca { %"class.v8::internal::wasm::LiftoffAssembler::VarState", i32, i8 }, align 8
  %20 = ptrtoint %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %1 to i64
  %21 = ptrtoint %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0 to i64
  %22 = sub i64 %20, %21
  %23 = sdiv exact i64 %22, 24
  switch i64 %23, label %111 [
    i64 0, label %185
    i64 1, label %185
    i64 2, label %24
    i64 3, label %34
    i64 4, label %71
    i64 5, label %76
  ]

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %1, i64 -1, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 0, i32 3
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %26, %28
  br i1 %29, label %30, label %185

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %9, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31)
  %32 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* align 4 %32, i64 24, i1 false) #15
  %33 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %1, i64 -1, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %33, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* nonnull align 4 %31, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31)
  br label %185

34:                                               ; preds = %3
  %35 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 1
  %36 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %1, i64 -1
  %37 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 1, i32 3
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = icmp sgt i32 %38, %40
  %42 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %1, i64 -1, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %43, %38
  br i1 %41, label %56, label %45

45:                                               ; preds = %34
  br i1 %44, label %46, label %185

46:                                               ; preds = %45
  %47 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %4, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47)
  %48 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %35, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %47, i8* align 4 %48, i64 24, i1 false) #15
  %49 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %36, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* align 4 %49, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %49, i8* nonnull align 4 %47, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47)
  %50 = load i32, i32* %37, align 4
  %51 = load i32, i32* %39, align 4
  %52 = icmp sgt i32 %50, %51
  br i1 %52, label %53, label %185

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %5, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54)
  %55 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %54, i8* align 4 %55, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %55, i8* align 4 %48, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* nonnull align 4 %54, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54)
  br label %185

56:                                               ; preds = %34
  br i1 %44, label %57, label %61

57:                                               ; preds = %56
  %58 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %6, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58)
  %59 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %58, i8* align 4 %59, i64 24, i1 false) #15
  %60 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %36, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %60, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %60, i8* nonnull align 4 %58, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58)
  br label %185

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %7, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62)
  %63 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %62, i8* align 4 %63, i64 24, i1 false) #15
  %64 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %35, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* align 4 %64, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* nonnull align 4 %62, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %62)
  %65 = load i32, i32* %42, align 4
  %66 = load i32, i32* %37, align 4
  %67 = icmp sgt i32 %65, %66
  br i1 %67, label %68, label %185

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %8, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %69, i8* align 4 %64, i64 24, i1 false) #15
  %70 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %36, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %70, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %70, i8* nonnull align 4 %69, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69)
  br label %185

71:                                               ; preds = %3
  %72 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 1
  %73 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 2
  %74 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %1, i64 -1
  %75 = tail call i32 @_ZNSt3__17__sort4IRZN2v88internal4wasm17LiftoffStackSlots15SortInPushOrderEvEUlRKNS4_4SlotES7_E_PS5_EEjT0_SB_SB_SB_T_(%"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %72, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %73, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %74, %class.anon* dereferenceable(1) %2)
  br label %185

76:                                               ; preds = %3
  %77 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 1
  %78 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 2
  %79 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 3
  %80 = tail call i32 @_ZNSt3__17__sort4IRZN2v88internal4wasm17LiftoffStackSlots15SortInPushOrderEvEUlRKNS4_4SlotES7_E_PS5_EEjT0_SB_SB_SB_T_(%"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %77, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %78, %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %79, %class.anon* dereferenceable(1) %2) #15
  %81 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %1, i64 -1, i32 3
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 3, i32 3
  %84 = load i32, i32* %83, align 4
  %85 = icmp sgt i32 %82, %84
  br i1 %85, label %86, label %185

86:                                               ; preds = %76
  %87 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %10, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %87)
  %88 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %79, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %87, i8* align 4 %88, i64 24, i1 false) #15
  %89 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %1, i64 -1, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %88, i8* align 4 %89, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* nonnull align 4 %87, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %87)
  %90 = load i32, i32* %83, align 4
  %91 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 2, i32 3
  %92 = load i32, i32* %91, align 4
  %93 = icmp sgt i32 %90, %92
  br i1 %93, label %94, label %185

94:                                               ; preds = %86
  %95 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %11, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95)
  %96 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %78, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %95, i8* align 4 %96, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %96, i8* align 4 %88, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %88, i8* nonnull align 4 %95, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95)
  %97 = load i32, i32* %91, align 4
  %98 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 1, i32 3
  %99 = load i32, i32* %98, align 4
  %100 = icmp sgt i32 %97, %99
  br i1 %100, label %101, label %185

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %12, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %102)
  %103 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %77, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %102, i8* align 4 %103, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %96, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %96, i8* nonnull align 4 %102, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %102)
  %104 = load i32, i32* %98, align 4
  %105 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 0, i32 3
  %106 = load i32, i32* %105, align 4
  %107 = icmp sgt i32 %104, %106
  br i1 %107, label %108, label %185

108:                                              ; preds = %101
  %109 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %13, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109)
  %110 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %109, i8* align 4 %110, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %110, i8* align 4 %103, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* nonnull align 4 %109, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109)
  br label %185

111:                                              ; preds = %3
  %112 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 2
  %113 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 1
  %114 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 1, i32 3
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 0, i32 3
  %117 = load i32, i32* %116, align 4
  %118 = icmp sgt i32 %115, %117
  %119 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 2, i32 3
  %120 = load i32, i32* %119, align 4
  %121 = icmp sgt i32 %120, %115
  br i1 %118, label %132, label %122

122:                                              ; preds = %111
  br i1 %121, label %123, label %146

123:                                              ; preds = %122
  %124 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %14, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124)
  %125 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %113, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %124, i8* align 4 %125, i64 24, i1 false) #15
  %126 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %112, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %125, i8* align 4 %126, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %126, i8* nonnull align 4 %124, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124)
  %127 = load i32, i32* %114, align 4
  %128 = icmp sgt i32 %127, %117
  br i1 %128, label %129, label %146

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %15, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %130)
  %131 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %130, i8* align 4 %131, i64 24, i1 false) #15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %131, i8* align 4 %125, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %125, i8* nonnull align 4 %130, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %130)
  br label %146

132:                                              ; preds = %111
  br i1 %121, label %133, label %137

133:                                              ; preds = %132
  %134 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %16, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134)
  %135 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %134, i8* align 4 %135, i64 24, i1 false) #15
  %136 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %112, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %135, i8* align 4 %136, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %136, i8* nonnull align 4 %134, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134)
  br label %146

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %17, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138)
  %139 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %138, i8* align 4 %139, i64 24, i1 false) #15
  %140 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %113, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %139, i8* align 4 %140, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %140, i8* nonnull align 4 %138, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138)
  %141 = load i32, i32* %114, align 4
  %142 = icmp sgt i32 %120, %141
  br i1 %142, label %143, label %146

143:                                              ; preds = %137
  %144 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %18, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %144)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %144, i8* align 4 %140, i64 24, i1 false) #15
  %145 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %112, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %140, i8* align 4 %145, i64 24, i1 false) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %145, i8* nonnull align 4 %144, i64 24, i1 false) #15
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %144)
  br label %146

146:                                              ; preds = %122, %123, %129, %133, %137, %143
  %147 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %0, i64 3
  %148 = icmp eq %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %147, %1
  br i1 %148, label %185, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds { %"class.v8::internal::wasm::LiftoffAssembler::VarState", i32, i8 }, { %"class.v8::internal::wasm::LiftoffAssembler::VarState", i32, i8 }* %19, i64 0, i32 0, i32 0
  br label %151

151:                                              ; preds = %149, %178
  %152 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %147, %149 ], [ %180, %178 ]
  %153 = phi i32 [ 0, %149 ], [ %179, %178 ]
  %154 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %112, %149 ], [ %152, %178 ]
  %155 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %152, i64 0, i32 3
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %154, i64 0, i32 3
  %158 = load i32, i32* %157, align 4
  %159 = icmp sgt i32 %156, %158
  br i1 %159, label %160, label %178

160:                                              ; preds = %151
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %150)
  %161 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %152, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %150, i8* align 4 %161, i64 20, i1 false)
  br label %162

162:                                              ; preds = %168, %160
  %163 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %152, %160 ], [ %164, %168 ]
  %164 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %154, %160 ], [ %169, %168 ]
  %165 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %163, i64 0, i32 0, i32 0
  %166 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %164, i64 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %165, i8* align 4 %166, i64 24, i1 false)
  %167 = icmp eq %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %164, %0
  br i1 %167, label %173, label %168

168:                                              ; preds = %162
  %169 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %164, i64 -1
  %170 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %164, i64 -1, i32 3
  %171 = load i32, i32* %170, align 4
  %172 = icmp sgt i32 %156, %171
  br i1 %172, label %162, label %173

173:                                              ; preds = %162, %168
  %174 = phi %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* [ %0, %162 ], [ %164, %168 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %166, i8* nonnull align 8 %150, i64 20, i1 false)
  %175 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %174, i64 0, i32 3
  store i32 %156, i32* %175, align 4
  %176 = add i32 %153, 1
  %177 = icmp eq i32 %176, 8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %150)
  br i1 %177, label %182, label %178

178:                                              ; preds = %173, %151
  %179 = phi i32 [ %176, %173 ], [ %153, %151 ]
  %180 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %152, i64 1
  %181 = icmp eq %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %180, %1
  br i1 %181, label %185, label %151

182:                                              ; preds = %173
  %183 = getelementptr inbounds %"struct.v8::internal::wasm::LiftoffStackSlots::Slot", %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %152, i64 1
  %184 = icmp eq %"struct.v8::internal::wasm::LiftoffStackSlots::Slot"* %183, %1
  br label %185

185:                                              ; preds = %178, %182, %146, %108, %101, %94, %86, %76, %68, %61, %57, %53, %46, %45, %24, %30, %3, %3, %71
  %186 = phi i1 [ true, %71 ], [ true, %3 ], [ true, %3 ], [ true, %30 ], [ true, %24 ], [ true, %45 ], [ true, %46 ], [ true, %53 ], [ true, %57 ], [ true, %61 ], [ true, %68 ], [ true, %76 ], [ true, %86 ], [ true, %94 ], [ true, %101 ], [ true, %108 ], [ true, %146 ], [ %184, %182 ], [ true, %178 ]
  ret i1 %186
}

declare void @_ZN2v88internal9Assembler23immediate_arithmetic_opEhNS0_8RegisterENS0_9ImmediateEi(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i64, i32) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #11

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::wasm::LiftoffAssembler::VarState"* @_ZN2v84base11SmallVectorINS_8internal4wasm16LiftoffAssembler8VarStateELm8EE4GrowEv(%"class.v8::base::SmallVector"*) local_unnamed_addr #6 comdat align 2 {
  %2 = tail call %"class.v8::internal::wasm::LiftoffAssembler::VarState"* @_ZN2v84base11SmallVectorINS_8internal4wasm16LiftoffAssembler8VarStateELm8EE4GrowEm(%"class.v8::base::SmallVector"* %0, i64 0)
  ret %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %2
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::wasm::LiftoffAssembler::VarState"* @_ZN2v84base11SmallVectorINS_8internal4wasm16LiftoffAssembler8VarStateELm8EE4GrowEm(%"class.v8::base::SmallVector"*, i64) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 1
  %4 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.v8::base::SmallVector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 12
  %10 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 2
  %11 = bitcast %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %7
  %14 = sdiv exact i64 %13, 12
  %15 = shl nsw i64 %14, 1
  %16 = icmp ugt i64 %15, %1
  %17 = select i1 %16, i64 %15, i64 %1
  %18 = tail call i64 @_ZN2v84base4bits21RoundUpToPowerOfTwo64Em(i64 %17) #15
  %19 = mul i64 %18, 12
  %20 = tail call noalias i8* @malloc(i64 %19) #15
  %21 = bitcast i8* %20 to %"class.v8::internal::wasm::LiftoffAssembler::VarState"*
  %22 = icmp eq i8* %20, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.7, i64 0, i64 0)) #16
  unreachable

24:                                               ; preds = %2
  %25 = bitcast %"class.v8::base::SmallVector"* %0 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %20, i8* align 1 %26, i64 %8, i1 false) #15
  %27 = getelementptr inbounds %"class.v8::base::SmallVector", %"class.v8::base::SmallVector"* %0, i64 0, i32 3, i32 0, i64 0
  %28 = icmp eq i8* %26, %27
  br i1 %28, label %30, label %29

29:                                               ; preds = %24
  tail call void @free(i8* %26) #15
  br label %30

30:                                               ; preds = %24, %29
  store i8* %20, i8** %25, align 8
  %31 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %21, i64 %9
  store %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %31, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %3, align 8
  %32 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler::VarState", %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %21, i64 %18
  store %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %32, %"class.v8::internal::wasm::LiftoffAssembler::VarState"** %10, align 8
  ret %"class.v8::internal::wasm::LiftoffAssembler::VarState"* %31
}

declare void @_ZN2v88internal20SharedTurboAssembler6MovapdENS0_11XMMRegisterES2_(%"class.v8::internal::SharedTurboAssembler"*, i32, i32) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler5movssENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler3vssEhNS0_11XMMRegisterES2_S2_(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i32, i32) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler5movsdENS0_11XMMRegisterES2_(%"class.v8::internal::Assembler"*, i32, i32) local_unnamed_addr #5

declare void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_S2_NS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"*, i8 zeroext, i32, i32, i32, i32, i32, i32, i32) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal4wasm7liftoff5StoreEPNS1_16LiftoffAssemblerENS0_7OperandENS1_15LiftoffRegisterENS1_9ValueKindE(%"class.v8::internal::wasm::LiftoffAssembler"*, i64, i32, i8, i8 zeroext) local_unnamed_addr #4 comdat {
  switch i8 %4, label %42 [
    i8 1, label %6
    i8 2, label %9
    i8 11, label %12
    i8 10, label %12
    i8 8, label %12
    i8 9, label %12
    i8 3, label %15
    i8 4, label %24
    i8 5, label %33
  ]

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = zext i8 %3 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %7, i64 %1, i32 %2, i32 %8, i32 4) #15
  br label %43

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = zext i8 %3 to i32
  tail call void @_ZN2v88internal9Assembler8emit_movENS0_7OperandENS0_8RegisterEi(%"class.v8::internal::Assembler"* %10, i64 %1, i32 %2, i32 %11, i32 8) #15
  br label %43

12:                                               ; preds = %5, %5, %5, %5
  %13 = bitcast %"class.v8::internal::wasm::LiftoffAssembler"* %0 to %"class.v8::internal::TurboAssembler"*
  %14 = zext i8 %3 to i32
  tail call void @_ZN2v88internal14TurboAssembler16StoreTaggedFieldENS0_7OperandENS0_8RegisterE(%"class.v8::internal::TurboAssembler"* %13, i64 %1, i32 %2, i32 %14) #15
  br label %43

15:                                               ; preds = %5
  %16 = zext i8 %3 to i32
  %17 = add nsw i32 %16, -10
  %18 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %20 = and i32 %19, 32
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %15
  tail call void @_ZN2v88internal9Assembler3vssEhNS0_11XMMRegisterES2_NS0_7OperandE(%"class.v8::internal::Assembler"* %18, i8 zeroext 17, i32 %17, i32 0, i64 %1, i32 %2) #15
  br label %43

23:                                               ; preds = %15
  tail call void @_ZN2v88internal9Assembler5movssENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %18, i64 %1, i32 %2, i32 %17) #15
  br label %43

24:                                               ; preds = %5
  %25 = zext i8 %3 to i32
  %26 = add nsw i32 %25, -10
  %27 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %29 = and i32 %28, 32
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %24
  tail call void @_ZN2v88internal9Assembler6vinstrEhNS0_11XMMRegisterES2_NS0_7OperandENS1_10SIMDPrefixENS1_13LeadingOpcodeENS1_4VexWENS0_10CpuFeatureE(%"class.v8::internal::Assembler"* %27, i8 zeroext 17, i32 %26, i32 0, i64 %1, i32 %2, i32 3, i32 1, i32 0, i32 5) #15
  br label %43

32:                                               ; preds = %24
  tail call void @_ZN2v88internal9Assembler5movsdENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %27, i64 %1, i32 %2, i32 %26) #15
  br label %43

33:                                               ; preds = %5
  %34 = zext i8 %3 to i32
  %35 = add nsw i32 %34, -10
  %36 = load i32, i32* @_ZN2v88internal11CpuFeatures10supported_E, align 4
  %37 = and i32 %36, 32
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.v8::internal::wasm::LiftoffAssembler", %"class.v8::internal::wasm::LiftoffAssembler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %38, label %41, label %40

40:                                               ; preds = %33
  tail call void @_ZN2v88internal9Assembler7vmovdquENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %39, i64 %1, i32 %2, i32 %35) #15
  br label %43

41:                                               ; preds = %33
  tail call void @_ZN2v88internal9Assembler6movupsENS0_7OperandENS0_11XMMRegisterE(%"class.v8::internal::Assembler"* %39, i64 %1, i32 %2, i32 %35) #15
  br label %43

42:                                               ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable

43:                                               ; preds = %41, %40, %32, %31, %23, %22, %12, %9, %6
  ret void
}

declare void @_ZN2v88internal14TurboAssembler16StoreTaggedFieldENS0_7OperandENS0_8RegisterE(%"class.v8::internal::TurboAssembler"*, i64, i32, i32) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #15
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #15
  %7 = load i8, i8* %6, align 8, !range !67
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #15
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #15
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #15
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #15
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #15
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #15
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #15
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #15
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #15
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #17
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #15
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #15
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #17
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #15
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #15
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #5

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #5

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #14

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !10}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !12}
!21 = distinct !{!21, !10}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN2v88internal4wasm12_GLOBAL__N_121DefaultLiftoffOptionsEv: argument 0"}
!24 = distinct !{!24, !"_ZN2v88internal4wasm12_GLOBAL__N_121DefaultLiftoffOptionsEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv: argument 0"}
!27 = distinct !{!27, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv: argument 0"}
!30 = distinct !{!30, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv: argument 0"}
!33 = distinct !{!33, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv: argument 0"}
!36 = distinct !{!36, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv: argument 0"}
!39 = distinct !{!39, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv: argument 0"}
!42 = distinct !{!42, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv: argument 0"}
!45 = distinct !{!45, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv: argument 0"}
!48 = distinct !{!48, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv: argument 0"}
!51 = distinct !{!51, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv: argument 0"}
!54 = distinct !{!54, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv: argument 0"}
!57 = distinct !{!57, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv: argument 0"}
!60 = distinct !{!60, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv: argument 0"}
!63 = distinct !{!63, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv: argument 0"}
!66 = distinct !{!66, !"_ZNK2v88internal4wasm16LiftoffAssembler8VarState8constantEv"}
!67 = !{i8 0, i8 2}
