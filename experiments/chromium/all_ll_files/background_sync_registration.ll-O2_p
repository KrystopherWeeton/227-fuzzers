; ModuleID = '../../content/public/browser/background_sync_registration.cc'
source_filename = "../../content/public/browser/background_sync_registration.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::BackgroundSyncRegistration" = type <{ %"class.blink::mojom::SyncRegistrationOptions", i32, i32, i32, [4 x i8], %"class.base::Time", %"class.url::Origin", i8, [7 x i8] }>
%"class.blink::mojom::SyncRegistrationOptions" = type { %"class.std::__1::basic_string", i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN7content26BackgroundSyncRegistrationC1Ev = hidden unnamed_addr alias void (%"class.content::BackgroundSyncRegistration"*), void (%"class.content::BackgroundSyncRegistration"*)* @_ZN7content26BackgroundSyncRegistrationC2Ev
@_ZN7content26BackgroundSyncRegistrationC1ERKS0_ = hidden unnamed_addr alias void (%"class.content::BackgroundSyncRegistration"*, %"class.content::BackgroundSyncRegistration"*), void (%"class.content::BackgroundSyncRegistration"*, %"class.content::BackgroundSyncRegistration"*)* @_ZN7content26BackgroundSyncRegistrationC2ERKS0_
@_ZN7content26BackgroundSyncRegistrationD1Ev = hidden unnamed_addr alias void (%"class.content::BackgroundSyncRegistration"*), void (%"class.content::BackgroundSyncRegistration"*)* @_ZN7content26BackgroundSyncRegistrationD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26BackgroundSyncRegistrationC2Ev(%"class.content::BackgroundSyncRegistration"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 0
  tail call void @_ZN5blink5mojom23SyncRegistrationOptionsC1Ev(%"class.blink::mojom::SyncRegistrationOptions"* %2) #7
  %3 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 2
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 3
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 5, i32 0, i32 0
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 6
  tail call void @_ZN3url6OriginC1Ev(%"class.url::Origin"* %7) #7
  %8 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 7
  store i8 0, i8* %8, align 8
  ret void
}

declare void @_ZN5blink5mojom23SyncRegistrationOptionsC1Ev(%"class.blink::mojom::SyncRegistrationOptions"*) unnamed_addr #1

declare void @_ZN3url6OriginC1Ev(%"class.url::Origin"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26BackgroundSyncRegistrationC2ERKS0_(%"class.content::BackgroundSyncRegistration"*, %"class.content::BackgroundSyncRegistration"* dereferenceable(144)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.content::BackgroundSyncRegistration"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.content::BackgroundSyncRegistration"* %0 to i8*
  %9 = bitcast %"class.content::BackgroundSyncRegistration"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #7
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #7
  br label %16

16:                                               ; preds = %7, %10
  %17 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %1, i64 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %17, align 8
  %20 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 1
  %21 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %1, i64 0, i32 1
  %22 = bitcast i32* %20 to i8*
  %23 = bitcast i32* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false)
  %24 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 6
  %25 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %1, i64 0, i32 6
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %24, %"class.url::Origin"* dereferenceable(80) %25) #7
  %26 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 7
  %27 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %1, i64 0, i32 7
  %28 = load i8, i8* %27, align 8, !range !2
  store i8 %28, i8* %26, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(144) %"class.content::BackgroundSyncRegistration"* @_ZN7content26BackgroundSyncRegistrationaSERKS0_(%"class.content::BackgroundSyncRegistration"* returned, %"class.content::BackgroundSyncRegistration"* dereferenceable(144)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 0, i32 0
  %4 = icmp eq %"class.content::BackgroundSyncRegistration"* %0, %1
  br i1 %4, label %34, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.content::BackgroundSyncRegistration"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.content::BackgroundSyncRegistration"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %24, label %14

14:                                               ; preds = %5
  br i1 %13, label %18, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.content::BackgroundSyncRegistration"* %0 to i8*
  %17 = bitcast %"class.content::BackgroundSyncRegistration"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #7
  br label %34

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %20, i64 %22) #7
  br label %34

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.content::BackgroundSyncRegistration"* %1 to i8*
  %30 = zext i8 %12 to i64
  %31 = select i1 %13, i8* %26, i8* %29
  %32 = select i1 %13, i64 %28, i64 %30
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %31, i64 %32) #7
  br label %34

34:                                               ; preds = %2, %15, %18, %24
  %35 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %1, i64 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 0, i32 1
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 1
  %39 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %1, i64 0, i32 1
  %40 = bitcast i32* %38 to i8*
  %41 = bitcast i32* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false)
  %42 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 6
  %43 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %1, i64 0, i32 6
  %44 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %42, %"class.url::Origin"* dereferenceable(80) %43) #7
  %45 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %1, i64 0, i32 7
  %46 = load i8, i8* %45, align 8, !range !2
  %47 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 7
  store i8 %46, i8* %47, align 8
  ret %"class.content::BackgroundSyncRegistration"* %0
}

declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content26BackgroundSyncRegistrationD2Ev(%"class.content::BackgroundSyncRegistration"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 6
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %2) #7
  %3 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 0
  tail call void @_ZN5blink5mojom23SyncRegistrationOptionsD1Ev(%"class.blink::mojom::SyncRegistrationOptions"* %3) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink5mojom23SyncRegistrationOptionsD1Ev(%"class.blink::mojom::SyncRegistrationOptions"*) unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7content26BackgroundSyncRegistration6EqualsERKS0_(%"class.content::BackgroundSyncRegistration"* nocapture readonly, %"class.content::BackgroundSyncRegistration"* nocapture readonly dereferenceable(144)) local_unnamed_addr #4 align 2 {
  %3 = bitcast %"class.content::BackgroundSyncRegistration"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"class.content::BackgroundSyncRegistration"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %58

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.content::BackgroundSyncRegistration"* %0 to i8*
  %24 = select i1 %6, i8* %22, i8* %23
  %25 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = bitcast %"class.content::BackgroundSyncRegistration"* %1 to i8*
  %28 = select i1 %14, i8* %26, i8* %27
  %29 = icmp eq i64 %10, 0
  br i1 %6, label %36, label %30

30:                                               ; preds = %20
  br i1 %29, label %52, label %31

31:                                               ; preds = %30
  %32 = ptrtoint i8* %22 to i64
  %33 = trunc i64 %32 to i8
  %34 = load i8, i8* %28, align 1
  %35 = icmp eq i8 %34, %33
  br i1 %35, label %37, label %58

36:                                               ; preds = %20
  br i1 %29, label %52, label %49

37:                                               ; preds = %31, %44
  %38 = phi i64 [ %41, %44 ], [ %9, %31 ]
  %39 = phi i8* [ %42, %44 ], [ %23, %31 ]
  %40 = phi i8* [ %45, %44 ], [ %28, %31 ]
  %41 = add i64 %38, -1
  %42 = getelementptr inbounds i8, i8* %39, i64 1
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %37
  %45 = getelementptr inbounds i8, i8* %40, i64 1
  %46 = load i8, i8* %42, align 1
  %47 = load i8, i8* %45, align 1
  %48 = icmp eq i8 %46, %47
  br i1 %48, label %37, label %58

49:                                               ; preds = %36
  %50 = tail call i32 @bcmp(i8* %24, i8* %28, i64 %10) #7
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %37, %49, %36, %30
  %53 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %1, i64 0, i32 0, i32 1
  %55 = load i64, i64* %53, align 8
  %56 = load i64, i64* %54, align 8
  %57 = icmp eq i64 %55, %56
  br label %58

58:                                               ; preds = %44, %2, %31, %49, %52
  %59 = phi i1 [ false, %49 ], [ %57, %52 ], [ false, %2 ], [ false, %31 ], [ false, %44 ]
  ret i1 %59
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK7content26BackgroundSyncRegistration8IsFiringEv(%"class.content::BackgroundSyncRegistration"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.content::BackgroundSyncRegistration", %"class.content::BackgroundSyncRegistration"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 3
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = trunc i32 %3 to i3
  %7 = lshr i3 -2, %6
  %8 = and i3 %7, 1
  %9 = icmp ne i3 %8, 0
  ret i1 %9

10:                                               ; preds = %1
  ret i1 false
}

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
