; ModuleID = '../../services/network/trust_tokens/suitable_trust_token_origin.cc'
source_filename = "../../services/network/trust_tokens/suitable_trust_token_origin.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.network::SuitableTrustTokenOrigin" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.2" = type { %"class.absl::optional_internal::optional_data.3" }
%"class.absl::optional_internal::optional_data.3" = type { %"class.absl::optional_internal::optional_data_base.4" }
%"class.absl::optional_internal::optional_data_base.4" = type { %"class.absl::optional_internal::optional_data_dtor_base.5" }
%"class.absl::optional_internal::optional_data_dtor_base.5" = type { i8, %union.anon.6 }
%union.anon.6 = type { %"class.network::SuitableTrustTokenOrigin" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.GURL* }

@_ZN3url12kHttpsSchemeE = external constant [0 x i8], align 1
@_ZN3url11kHttpSchemeE = external constant [0 x i8], align 1

@_ZN7network24SuitableTrustTokenOriginD1Ev = hidden unnamed_addr alias void (%"class.network::SuitableTrustTokenOrigin"*), void (%"class.network::SuitableTrustTokenOrigin"*)* @_ZN7network24SuitableTrustTokenOriginD2Ev
@_ZN7network24SuitableTrustTokenOriginC1ERKS0_ = hidden unnamed_addr alias void (%"class.network::SuitableTrustTokenOrigin"*, %"class.network::SuitableTrustTokenOrigin"*), void (%"class.network::SuitableTrustTokenOrigin"*, %"class.network::SuitableTrustTokenOrigin"*)* @_ZN7network24SuitableTrustTokenOriginC2ERKS0_
@_ZN7network24SuitableTrustTokenOriginC1EOS0_ = hidden unnamed_addr alias void (%"class.network::SuitableTrustTokenOrigin"*, %"class.network::SuitableTrustTokenOrigin"*), void (%"class.network::SuitableTrustTokenOrigin"*, %"class.network::SuitableTrustTokenOrigin"*)* @_ZN7network24SuitableTrustTokenOriginC2EOS0_
@_ZN7network24SuitableTrustTokenOriginC1EN4base7PassKeyIS0_EEON3url6OriginE = hidden unnamed_addr alias void (%"class.network::SuitableTrustTokenOrigin"*, %"class.url::Origin"*), void (%"class.network::SuitableTrustTokenOrigin"*, %"class.url::Origin"*)* @_ZN7network24SuitableTrustTokenOriginC2EN4base7PassKeyIS0_EEON3url6OriginE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network24SuitableTrustTokenOriginD2Ev(%"class.network::SuitableTrustTokenOrigin"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.network::SuitableTrustTokenOrigin", %"class.network::SuitableTrustTokenOrigin"* %0, i64 0, i32 0
  tail call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %2) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network24SuitableTrustTokenOriginC2ERKS0_(%"class.network::SuitableTrustTokenOrigin"*, %"class.network::SuitableTrustTokenOrigin"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.network::SuitableTrustTokenOrigin", %"class.network::SuitableTrustTokenOrigin"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.network::SuitableTrustTokenOrigin", %"class.network::SuitableTrustTokenOrigin"* %1, i64 0, i32 0
  tail call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %3, %"class.url::Origin"* dereferenceable(80) %4) #5
  ret void
}

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"class.network::SuitableTrustTokenOrigin"* @_ZN7network24SuitableTrustTokenOriginaSERKS0_(%"class.network::SuitableTrustTokenOrigin"* returned, %"class.network::SuitableTrustTokenOrigin"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.network::SuitableTrustTokenOrigin", %"class.network::SuitableTrustTokenOrigin"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.network::SuitableTrustTokenOrigin", %"class.network::SuitableTrustTokenOrigin"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %3, %"class.url::Origin"* dereferenceable(80) %4) #5
  ret %"class.network::SuitableTrustTokenOrigin"* %0
}

declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network24SuitableTrustTokenOriginC2EOS0_(%"class.network::SuitableTrustTokenOrigin"*, %"class.network::SuitableTrustTokenOrigin"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.network::SuitableTrustTokenOrigin", %"class.network::SuitableTrustTokenOrigin"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.network::SuitableTrustTokenOrigin", %"class.network::SuitableTrustTokenOrigin"* %1, i64 0, i32 0
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %3, %"class.url::Origin"* dereferenceable(80) %4) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"class.network::SuitableTrustTokenOrigin"* @_ZN7network24SuitableTrustTokenOriginaSEOS0_(%"class.network::SuitableTrustTokenOrigin"* returned, %"class.network::SuitableTrustTokenOrigin"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.network::SuitableTrustTokenOrigin", %"class.network::SuitableTrustTokenOrigin"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.network::SuitableTrustTokenOrigin", %"class.network::SuitableTrustTokenOrigin"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %3, %"class.url::Origin"* dereferenceable(80) %4) #5
  ret %"class.network::SuitableTrustTokenOrigin"* %0
}

; Function Attrs: nounwind
declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network24SuitableTrustTokenOrigin6CreateEN3url6OriginE(%"class.absl::optional.2"* noalias sret, %"class.url::Origin"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0
  br label %10

8:                                                ; preds = %2
  %9 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #5
  br label %10

10:                                               ; preds = %6, %8
  %11 = phi %"class.std::__1::basic_string"* [ %7, %6 ], [ %9, %8 ]
  %12 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0)) #5
  %13 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %15 to i64
  %20 = select i1 %16, i64 %18, i64 %19
  %21 = icmp eq i64 %12, %20
  br i1 %21, label %22, label %25

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %11, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), i64 %12) #5
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %51, label %25

25:                                               ; preds = %22, %10
  %26 = load i8, i8* %3, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0
  br label %32

30:                                               ; preds = %25
  %31 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #5
  br label %32

32:                                               ; preds = %28, %30
  %33 = phi %"class.std::__1::basic_string"* [ %29, %28 ], [ %31, %30 ]
  %34 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0)) #5
  %35 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = zext i8 %37 to i64
  %42 = select i1 %38, i64 %40, i64 %41
  %43 = icmp eq i64 %34, %42
  br i1 %43, label %44, label %47

44:                                               ; preds = %32
  %45 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %33, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kHttpSchemeE, i64 0, i64 0), i64 %34) #5
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %44, %32
  %48 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %48, align 8
  %49 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast %union.anon.6* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 80, i1 false) #5
  br label %59

51:                                               ; preds = %22, %44
  %52 = tail call zeroext i1 @_ZN7network30IsOriginPotentiallyTrustworthyERKN3url6OriginE(%"class.url::Origin"* dereferenceable(80) %1) #5
  %53 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %52, label %57, label %54

54:                                               ; preds = %51
  store i8 0, i8* %53, align 8
  %55 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %56 = bitcast %union.anon.6* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 80, i1 false) #5
  br label %59

57:                                               ; preds = %51
  store i8 1, i8* %53, align 8
  %58 = getelementptr inbounds %"class.absl::optional.2", %"class.absl::optional.2"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %58, %"class.url::Origin"* dereferenceable(80) %1) #5
  br label %59

59:                                               ; preds = %57, %54, %47
  ret void
}

declare zeroext i1 @_ZN7network30IsOriginPotentiallyTrustworthyERKN3url6OriginE(%"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network24SuitableTrustTokenOrigin6CreateERK4GURL(%"class.absl::optional.2"* noalias sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.url::Origin", align 8
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %3, %class.GURL* dereferenceable(120) %1) #5
  call void @_ZN7network24SuitableTrustTokenOrigin6CreateEN3url6OriginE(%"class.absl::optional.2"* sret %0, %"class.url::Origin"* nonnull %3)
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %3) #5
  ret void
}

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7network24SuitableTrustTokenOrigin9SerializeEv(%"class.std::__1::basic_string"* noalias sret, %"class.network::SuitableTrustTokenOrigin"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.network::SuitableTrustTokenOrigin", %"class.network::SuitableTrustTokenOrigin"* %1, i64 0, i32 0
  tail call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* sret %0, %"class.url::Origin"* %3) #5
  ret void
}

declare void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* sret, %"class.url::Origin"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7network24SuitableTrustTokenOriginC2EN4base7PassKeyIS0_EEON3url6OriginE(%"class.network::SuitableTrustTokenOrigin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.network::SuitableTrustTokenOrigin", %"class.network::SuitableTrustTokenOrigin"* %0, i64 0, i32 0
  tail call void @_ZN3url6OriginC1EOS0_(%"class.url::Origin"* %3, %"class.url::Origin"* dereferenceable(80) %1) #5
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
