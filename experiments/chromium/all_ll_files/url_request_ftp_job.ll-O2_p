; ModuleID = '../../net/url_request/url_request_ftp_job.cc'
source_filename = "../../net/url_request/url_request_ftp_job.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::URLRequestFtpJob::AuthData" = type { i32, %"class.net::AuthCredentials" }
%"class.net::AuthCredentials" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.net::URLRequestFtpJob" = type { %"class.net::URLRequestJob", %"class.net::ProxyResolutionService"*, %"class.net::ProxyInfo", %"class.std::__1::unique_ptr.415", %"class.net::FtpRequestInfo", %"class.std::__1::unique_ptr.421", i8, %"class.std::__1::unique_ptr.427", %"class.net::FtpTransactionFactory"*, %"class.net::FtpAuthCache"*, %"class.base::WeakPtrFactory.433" }
%"class.net::URLRequestJob" = type { i32 (...)**, %"class.net::URLRequest"*, i8, i64, i64, %"class.std::__1::unique_ptr.385", %class.scoped_refptr.391, %class.scoped_refptr.391, i8, i64, %"class.absl::optional.393", %"class.base::OnceCallback.257", %"class.base::WeakPtrFactory.398" }
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.net::SourceStream"* }
%"class.net::SourceStream" = type <{ i32 (...)**, i32, [4 x i8] }>
%class.scoped_refptr.391 = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.392", i8* }
%"class.base::RefCountedThreadSafe.392" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional.393" = type { %"class.absl::optional_internal::optional_data.394" }
%"class.absl::optional_internal::optional_data.394" = type { %"class.absl::optional_internal::optional_data_base.395" }
%"class.absl::optional_internal::optional_data_base.395" = type { %"class.absl::optional_internal::optional_data_dtor_base.396" }
%"class.absl::optional_internal::optional_data_dtor_base.396" = type { i8, %union.anon.397 }
%union.anon.397 = type { %"struct.net::RedirectInfo" }
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string.109", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string.109", i8, i8, i32 }
%class.GURL = type { %"class.std::__1::basic_string.109", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.263" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { %class.GURL* }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.273 }
%union.anon.273 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.112 }
%union.anon.112 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::OnceCallback.257" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.97 }
%class.scoped_refptr.97 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.98", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.98" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.398" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.90 }
%class.scoped_refptr.90 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.91", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.91" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.92" }
%"struct.std::__1::atomic.92" = type { %"struct.std::__1::__atomic_base.93" }
%"struct.std::__1::__atomic_base.93" = type { %"struct.std::__1::__atomic_base.94" }
%"struct.std::__1::__atomic_base.94" = type { %"struct.std::__1::__cxx_atomic_impl.95" }
%"struct.std::__1::__cxx_atomic_impl.95" = type { %"struct.std::__1::__cxx_atomic_base_impl.96" }
%"struct.std::__1::__cxx_atomic_base_impl.96" = type { i8 }
%"class.net::ProxyResolutionService" = type { i32 (...)** }
%"class.net::ProxyInfo" = type { %"class.net::ProxyList", %"class.std::__1::map.406", %"struct.net::MutableNetworkTrafficAnnotationTag", i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.net::ProxyList" = type { %"class.std::__1::vector.399" }
%"class.std::__1::vector.399" = type { %"class.std::__1::__vector_base.400" }
%"class.std::__1::__vector_base.400" = type { %"class.net::ProxyServer"*, %"class.net::ProxyServer"*, %"class.std::__1::__compressed_pair.401" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string.109", i16, [6 x i8] }>
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.net::ProxyServer"* }
%"class.std::__1::map.406" = type { %"class.std::__1::__tree.407" }
%"class.std::__1::__tree.407" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.408", %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"struct.net::MutableNetworkTrafficAnnotationTag" = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.415" = type { %"class.std::__1::__compressed_pair.416" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"class.net::ProxyResolutionRequest"* }
%"class.net::ProxyResolutionRequest" = type { i32 (...)** }
%"class.net::FtpRequestInfo" = type { %class.GURL }
%"class.std::__1::unique_ptr.421" = type { %"class.std::__1::__compressed_pair.422" }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.net::FtpTransaction"* }
%"class.net::FtpTransaction" = type { i32 (...)** }
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.net::URLRequestFtpJob::AuthData"* }
%"class.base::WeakPtrFactory.433" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::URLRequest" = type { %"class.base::SupportsUserData.base", %"class.net::URLRequestContext"*, %"class.net::NetLogWithSource", %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.254", %"class.std::__1::vector.261", %"class.net::SiteForCookies", %"class.net::IsolationInfo", i32, i8, i8, %"class.absl::optional.274", %class.GURL, %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109", i32, i32, %"class.net::HttpRequestHeaders", i32, i8, i32, i32, %"class.std::__1::vector.306", %"class.std::__1::vector.313", i32, %"class.net::URLRequest::Delegate"*, i32, %"class.net::HttpResponseInfo", i8, i8, i32, %"class.net::UploadProgress", i32, i32, i8, %"class.std::__1::basic_string.109", i8, i8, i64, %"class.base::TimeTicks", %"struct.net::LoadTimingInfo", %"class.net::ProxyServer", %"class.absl::optional.370", %"struct.net::NetworkTrafficAnnotationTag", %"class.net::SocketTag", %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.383", %"class.base::RepeatingCallback.383", i8, i8, i32, %"class.base::WeakPtrFactory.384" }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.net::URLRequestContext" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.net::NetLog"*, %"class.net::HostResolver"*, %"class.net::CertVerifier"*, %"class.net::HttpAuthHandlerFactory"*, %"class.net::ProxyResolutionService"*, %"class.net::ProxyDelegate"*, %"class.net::SSLConfigService"*, %"class.net::NetworkDelegate"*, %"class.net::HttpServerProperties"*, %"class.net::HttpUserAgentSettings"*, %"class.net::CookieStore"*, %"class.net::TransportSecurityState"*, %"class.net::CTPolicyEnforcer"*, %"class.net::SCTAuditingDelegate"*, %"class.net::HttpTransactionFactory"*, %"class.net::URLRequestJobFactory"*, %"class.net::URLRequestThrottlerManager"*, %"class.net::QuicContext"*, %"class.net::NetworkQualityEstimator"*, %"class.net::ReportingService"*, %"class.net::NetworkErrorLoggingService"*, %"class.net::FtpAuthCache"*, %"class.std::__1::unique_ptr.241", i8, i8, i8, %"class.std::__1::basic_string.109" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.14" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.9" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.16" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.net::HostResolver" = type { i32 (...)** }
%"class.net::CertVerifier" = type opaque
%"class.net::HttpAuthHandlerFactory" = type opaque
%"class.net::ProxyDelegate" = type opaque
%"class.net::SSLConfigService" = type { i32 (...)**, %"class.base::ObserverList" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.21", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.23" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.net::NetworkDelegate" = type { i32 (...)** }
%"class.net::HttpServerProperties" = type { %"class.net::BrokenAlternativeServices::Delegate", %"class.base::TickClock"*, %"class.base::Clock"*, i8, i8, i8, %"class.std::__1::unique_ptr", %"class.net::HttpServerProperties::ServerInfoMap", %"class.net::BrokenAlternativeServices", %"class.net::IPAddress", %"class.base::flat_map", %"class.std::__1::vector.107", %"class.base::MRUCache.123", %"class.base::flat_map.143", i64, %"class.base::OneShotTimer" }
%"class.net::BrokenAlternativeServices::Delegate" = type { i32 (...)** }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::Clock" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.net::HttpServerPropertiesManager"* }
%"class.net::HttpServerPropertiesManager" = type opaque
%"class.net::HttpServerProperties::ServerInfoMap" = type { %"class.base::MRUCache" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map.35", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.31" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::map.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.net::BrokenAlternativeServices" = type { %"class.net::BrokenAlternativeServices::Delegate"*, %"class.base::TickClock"*, %"class.std::__1::list.46", %"class.std::__1::map.53", %"class.std::__1::set", %"class.net::RecentlyBrokenAlternativeServices", %"class.base::OneShotTimer", %"class.base::WeakPtrFactory.99" }
%"class.std::__1::list.46" = type { %"class.std::__1::__list_imp.47" }
%"class.std::__1::__list_imp.47" = type { %"struct.std::__1::__list_node_base.48", %"class.std::__1::__compressed_pair.49" }
%"struct.std::__1::__list_node_base.48" = type { %"struct.std::__1::__list_node_base.48"*, %"struct.std::__1::__list_node_base.48"* }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::map.53" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.64" }
%"class.std::__1::__tree.64" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.65", %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.net::RecentlyBrokenAlternativeServices" = type { %"class.base::MRUCache.71" }
%"class.base::MRUCache.71" = type { %"class.base::MRUCacheBase.72" }
%"class.base::MRUCacheBase.72" = type { i32 (...)**, %"class.std::__1::list.73", %"class.std::__1::map.80", i64 }
%"class.std::__1::list.73" = type { %"class.std::__1::__list_imp.74" }
%"class.std::__1::__list_imp.74" = type { %"struct.std::__1::__list_node_base.75", %"class.std::__1::__compressed_pair.76" }
%"struct.std::__1::__list_node_base.75" = type { %"struct.std::__1::__list_node_base.75"*, %"struct.std::__1::__list_node_base.75"* }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::map.80" = type { %"class.std::__1::__tree.81" }
%"class.std::__1::__tree.81" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.base::WeakPtrFactory.99" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.100" }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.102" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.107" = type { %"class.std::__1::__vector_base.108" }
%"class.std::__1::__vector_base.108" = type { %"class.std::__1::basic_string.109"*, %"class.std::__1::basic_string.109"*, %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.std::__1::basic_string.109"* }
%"class.base::MRUCache.123" = type { %"class.base::MRUCacheBase.124" }
%"class.base::MRUCacheBase.124" = type { i32 (...)**, %"class.std::__1::list.125", %"class.std::__1::map.132", i64 }
%"class.std::__1::list.125" = type { %"class.std::__1::__list_imp.126" }
%"class.std::__1::__list_imp.126" = type { %"struct.std::__1::__list_node_base.127", %"class.std::__1::__compressed_pair.128" }
%"struct.std::__1::__list_node_base.127" = type { %"struct.std::__1::__list_node_base.127"*, %"struct.std::__1::__list_node_base.127"* }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::map.132" = type { %"class.std::__1::__tree.133" }
%"class.std::__1::__tree.133" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.134", %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.base::flat_map.143" = type { %"class.base::internal::flat_tree.144" }
%"class.base::internal::flat_tree.144" = type { %"class.std::__1::vector.145" }
%"class.std::__1::vector.145" = type { %"class.std::__1::__vector_base.146" }
%"class.std::__1::__vector_base.146" = type { %"struct.std::__1::pair.147"*, %"struct.std::__1::pair.147"*, %"class.std::__1::__compressed_pair.148" }
%"struct.std::__1::pair.147" = type opaque
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.std::__1::pair.147"* }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.net::HttpUserAgentSettings" = type opaque
%"class.net::CookieStore" = type opaque
%"class.net::TransportSecurityState" = type <{ %"class.std::__1::map.153", %"class.std::__1::map.164", %"class.std::__1::map.173", %"class.net::TransportSecurityState::Delegate"*, %"class.net::TransportSecurityState::ReportSenderInterface"*, i8, i8, i8, [5 x i8], %"class.net::TransportSecurityState::ExpectCTReporter"*, %"class.net::TransportSecurityState::RequireCTDelegate"*, %"class.net::ExpiringCache", %"class.net::ExpiringCache", i8, [7 x i8], %"class.base::Time", %"class.std::__1::set.196", i8, [7 x i8] }>
%"class.std::__1::map.153" = type { %"class.std::__1::__tree.154" }
%"class.std::__1::__tree.154" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.155", %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::map.164" = type { %"class.std::__1::__tree.165" }
%"class.std::__1::__tree.165" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.166", %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::map.173" = type { %"class.std::__1::__tree.174" }
%"class.std::__1::__tree.174" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.175", %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.net::TransportSecurityState::Delegate" = type { i32 (...)** }
%"class.net::TransportSecurityState::ReportSenderInterface" = type { i32 (...)** }
%"class.net::TransportSecurityState::ExpectCTReporter" = type { i32 (...)** }
%"class.net::TransportSecurityState::RequireCTDelegate" = type { i32 (...)** }
%"class.net::ExpiringCache" = type <{ i64, %"class.std::__1::map.184", %"struct.std::__1::less.193", %"class.net::NoopEvictionHandler", [6 x i8] }>
%"class.std::__1::map.184" = type { %"class.std::__1::__tree.185" }
%"class.std::__1::__tree.185" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.186", %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::less.193" = type { i8 }
%"class.net::NoopEvictionHandler" = type { i8 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.195" }
%"class.base::time_internal::TimeBase.195" = type { i64 }
%"class.std::__1::set.196" = type { %"class.std::__1::__tree.197" }
%"class.std::__1::__tree.197" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.198", %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.net::CTPolicyEnforcer" = type opaque
%"class.net::SCTAuditingDelegate" = type opaque
%"class.net::HttpTransactionFactory" = type { i32 (...)** }
%"class.net::URLRequestJobFactory" = type opaque
%"class.net::URLRequestThrottlerManager" = type opaque
%"class.net::QuicContext" = type { %"class.std::__1::unique_ptr.204", %"struct.net::QuicParams" }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.quic::QuicConnectionHelperInterface"* }
%"class.quic::QuicConnectionHelperInterface" = type { i32 (...)** }
%"struct.net::QuicParams" = type { %"class.std::__1::vector.210", %"class.std::__1::basic_string.109", i64, i64, %"class.std::__1::set.217", %"class.std::__1::vector.227", %"class.std::__1::vector.227", i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, i8, i8, i8, %"class.base::TimeDelta", %"class.base::TimeDelta", i32, i32, i8, i8, i8, i8, i8, i8, i8, %"class.base::TimeDelta", i8, i8, i32 }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"struct.quic::ParsedQuicVersion"*, %"struct.quic::ParsedQuicVersion"*, %"class.std::__1::__compressed_pair.212" }
%"struct.quic::ParsedQuicVersion" = type { i32, i32 }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.quic::ParsedQuicVersion"* }
%"class.std::__1::set.217" = type { %"class.std::__1::__tree.218" }
%"class.std::__1::__tree.218" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.219", %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { i32*, i32*, %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { i32* }
%"class.net::NetworkQualityEstimator" = type opaque
%"class.net::ReportingService" = type opaque
%"class.net::NetworkErrorLoggingService" = type opaque
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.std::__1::set.244"* }
%"class.std::__1::set.244" = type opaque
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.net::URLRequestJob"* }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.net::UploadDataStream"* }
%"class.net::UploadDataStream" = type { i32 (...)**, i64, i64, i64, i8, i8, i8, %"class.base::OnceCallback.257", %"class.net::NetLogWithSource" }
%"class.std::__1::vector.261" = type { %"class.std::__1::__vector_base.262" }
%"class.std::__1::__vector_base.262" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"class.net::IsolationInfo" = type { i32, %"class.absl::optional.274", %"class.absl::optional.274", %"class.net::NetworkIsolationKey", %"class.net::SiteForCookies", i8, %"class.absl::optional.284" }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional.279", %"class.absl::optional.279" }
%"class.absl::optional.279" = type { %"class.absl::optional_internal::optional_data.280" }
%"class.absl::optional_internal::optional_data.280" = type { %"class.absl::optional_internal::optional_data_base.281" }
%"class.absl::optional_internal::optional_data_base.281" = type { %"class.absl::optional_internal::optional_data_dtor_base.282" }
%"class.absl::optional_internal::optional_data_dtor_base.282" = type { i8, %union.anon.283 }
%union.anon.283 = type { %"class.net::SchemefulSite" }
%"class.absl::optional.284" = type { %"class.absl::optional_internal::optional_data.285" }
%"class.absl::optional_internal::optional_data.285" = type { %"class.absl::optional_internal::optional_data_base.286" }
%"class.absl::optional_internal::optional_data_base.286" = type { %"class.absl::optional_internal::optional_data_dtor_base.287" }
%"class.absl::optional_internal::optional_data_dtor_base.287" = type { i8, %union.anon.288 }
%union.anon.288 = type { %"class.std::__1::set.289" }
%"class.std::__1::set.289" = type { %"class.std::__1::__tree.290" }
%"class.std::__1::__tree.290" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.291", %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.absl::optional.274" = type { %"class.absl::optional_internal::optional_data.275" }
%"class.absl::optional_internal::optional_data.275" = type { %"class.absl::optional_internal::optional_data_base.276" }
%"class.absl::optional_internal::optional_data_base.276" = type { %"class.absl::optional_internal::optional_data_dtor_base.277" }
%"class.absl::optional_internal::optional_data_dtor_base.277" = type { i8, %union.anon.278 }
%union.anon.278 = type { %"class.url::Origin" }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector.299" }
%"class.std::__1::vector.299" = type { %"class.std::__1::__vector_base.300" }
%"class.std::__1::__vector_base.300" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.301" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.std::__1::vector.306" = type { %"class.std::__1::__vector_base.307" }
%"class.std::__1::__vector_base.307" = type { %"struct.net::CookieWithAccessResult"*, %"struct.net::CookieWithAccessResult"*, %"class.std::__1::__compressed_pair.308" }
%"struct.net::CookieWithAccessResult" = type <{ %"class.net::CanonicalCookie", %"struct.net::CookieAccessResult", [4 x i8] }>
%"class.net::CanonicalCookie" = type { %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109", %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, i8, i32, i32 }
%"struct.net::CookieAccessResult" = type <{ %"class.net::CookieInclusionStatus", i32, i32, i8, [3 x i8] }>
%"class.net::CookieInclusionStatus" = type { i32, i32 }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"struct.net::CookieWithAccessResult"* }
%"class.std::__1::vector.313" = type { %"class.std::__1::__vector_base.314" }
%"class.std::__1::__vector_base.314" = type { %"struct.net::CookieAndLineWithAccessResult"*, %"struct.net::CookieAndLineWithAccessResult"*, %"class.std::__1::__compressed_pair.320" }
%"struct.net::CookieAndLineWithAccessResult" = type <{ %"class.absl::optional.315", %"class.std::__1::basic_string.109", %"struct.net::CookieAccessResult", [4 x i8] }>
%"class.absl::optional.315" = type { %"class.absl::optional_internal::optional_data.316" }
%"class.absl::optional_internal::optional_data.316" = type { %"class.absl::optional_internal::optional_data_base.317" }
%"class.absl::optional_internal::optional_data_base.317" = type { %"class.absl::optional_internal::optional_data_dtor_base.318" }
%"class.absl::optional_internal::optional_data_dtor_base.318" = type { i8, %union.anon.319 }
%union.anon.319 = type { %"class.net::CanonicalCookie" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"struct.net::CookieAndLineWithAccessResult"* }
%"class.net::URLRequest::Delegate" = type { i32 (...)** }
%"class.net::HttpResponseInfo" = type { i8, i32, i8, i8, i8, i8, i8, %"class.net::ProxyServer", i8, i8, i8, i8, %"class.base::Time", %"class.net::IPEndPoint", %"class.std::__1::basic_string.109", i32, %"class.base::Time", %"class.base::Time", %"struct.net::ResolveErrorInfo", %"class.absl::optional.325", %class.scoped_refptr.330, %"class.net::SSLInfo", %class.scoped_refptr.361, %"class.net::HttpVaryData", %"class.std::__1::vector.107" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.325" = type { %"class.absl::optional_internal::optional_data.326" }
%"class.absl::optional_internal::optional_data.326" = type { %"class.absl::optional_internal::optional_data_base.327" }
%"class.absl::optional_internal::optional_data_base.327" = type { %"class.absl::optional_internal::optional_data_dtor_base.328" }
%"class.absl::optional_internal::optional_data_dtor_base.328" = type { i8, %union.anon.329 }
%union.anon.329 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109" }
%class.scoped_refptr.330 = type { %"class.net::SSLCertRequestInfo"* }
%"class.net::SSLCertRequestInfo" = type opaque
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.331, %class.scoped_refptr.331, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.344", %"class.std::__1::basic_string.109", %"class.std::__1::vector.352", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.331 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.332", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string.109", %"class.std::__1::unique_ptr.333", %"class.std::__1::vector.337" }
%"class.base::RefCountedThreadSafe.332" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109", %"class.std::__1::vector.107", %"class.std::__1::vector.107", %"class.std::__1::vector.107", %"class.std::__1::vector.107" }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.337" = type { %"class.std::__1::__vector_base.338" }
%"class.std::__1::__vector_base.338" = type { %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.std::__1::unique_ptr.333"* }
%"class.std::__1::vector.344" = type { %"class.std::__1::__vector_base.345" }
%"class.std::__1::__vector_base.345" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.347" }
%"class.net::HashValue" = type { i32, %union.anon.346 }
%union.anon.346 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.352" = type { %"class.std::__1::__vector_base.353" }
%"class.std::__1::__vector_base.353" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.356" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.354, i32, [4 x i8] }>
%class.scoped_refptr.354 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.355", i32, %"class.std::__1::basic_string.109", %"class.base::Time", %"class.std::__1::basic_string.109", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string.109" }
%"class.base::RefCountedThreadSafe.355" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string.109" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%class.scoped_refptr.361 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.362", %"class.std::__1::vector.363", %"class.std::__1::basic_string.109", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.362" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.363" = type { %"class.std::__1::__vector_base.364" }
%"class.std::__1::__vector_base.364" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.365" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"class.net::HttpVaryData" = type { %"struct.base::MD5Digest", i8 }
%"struct.base::MD5Digest" = type { [16 x i8] }
%"class.net::UploadProgress" = type { i64, i64 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.absl::optional.370" = type { %"class.absl::optional_internal::optional_data.371" }
%"class.absl::optional_internal::optional_data.371" = type { %"class.absl::optional_internal::optional_data_base.372" }
%"class.absl::optional_internal::optional_data_base.372" = type { %"class.absl::optional_internal::optional_data_dtor_base.373" }
%"class.absl::optional_internal::optional_data_dtor_base.373" = type { i8, %union.anon.374 }
%union.anon.374 = type { %"class.base::internal::flat_tree.375" }
%"class.base::internal::flat_tree.375" = type { %"class.std::__1::vector.376" }
%"class.std::__1::vector.376" = type { %"class.std::__1::__vector_base.377" }
%"class.std::__1::__vector_base.377" = type { i32*, i32*, %"class.std::__1::__compressed_pair.378" }
%"class.std::__1::__compressed_pair.378" = type { %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.379" = type { i32* }
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"class.net::SocketTag" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.383" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.384" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::FtpTransactionFactory" = type { i32 (...)** }
%"class.net::FtpAuthCache" = type { %"class.std::__1::list.234" }
%"class.std::__1::list.234" = type { %"class.std::__1::__list_imp.235" }
%"class.std::__1::__list_imp.235" = type { %"struct.std::__1::__list_node_base.236", %"class.std::__1::__compressed_pair.237" }
%"struct.std::__1::__list_node_base.236" = type { %"struct.std::__1::__list_node_base.236"*, %"struct.std::__1::__list_node_base.236"* }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.113 }
%struct.anon.113 = type { i8 }
%"class.net::FtpResponseInfo" = type <{ i8, [7 x i8], %"class.base::Time", %"class.base::Time", i64, i8, i8, %"class.net::IPEndPoint", [2 x i8] }>
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.441 }
%class.scoped_refptr.441 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%class.scoped_refptr.440 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.447", [4 x i8] }>
%"struct.std::__1::atomic.447" = type { %"struct.std::__1::__atomic_base.448" }
%"struct.std::__1::__atomic_base.448" = type { %"struct.std::__1::__atomic_base.449" }
%"struct.std::__1::__atomic_base.449" = type { %"struct.std::__1::__cxx_atomic_impl.450" }
%"struct.std::__1::__cxx_atomic_impl.450" = type { %"struct.std::__1::__cxx_atomic_base_impl.451" }
%"struct.std::__1::__cxx_atomic_base_impl.451" = type { i32 }
%"struct.net::FtpAuthCache::Entry" = type { %class.GURL, %"class.net::AuthCredentials" }
%"struct.net::NetErrorDetails" = type <{ i8, [3 x i8], i32, i32, i8, [3 x i8] }>
%"class.std::__1::vector.452" = type { %"class.std::__1::__vector_base.453" }
%"class.std::__1::__vector_base.453" = type { %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"*, %"class.std::__1::__compressed_pair.454" }
%"struct.net::ConnectionAttempt" = type { %"class.net::IPEndPoint", i32 }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"struct.net::ConnectionAttempt"* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.109", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3net13URLRequestJob25SetRequestHeadersCallbackEN4base17RepeatingCallbackIFvNS_21HttpRawRequestHeadersEEEE = comdat any

$_ZN3net13URLRequestJob26SetResponseHeadersCallbackEN4base17RepeatingCallbackIFv13scoped_refptrIKNS_19HttpResponseHeadersEEEEE = comdat any

$_ZN3net13URLRequestJob31SetEarlyResponseHeadersCallbackEN4base17RepeatingCallbackIFv13scoped_refptrIKNS_19HttpResponseHeadersEEEEE = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3net17AuthChallengeInfoaSERKS0_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net16URLRequestFtpJobEFviEJNS_7WeakPtrIS4_EEiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net16URLRequestFtpJobEFviEJNS_7WeakPtrIS3_EEiEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net16URLRequestFtpJobEFviEJNS_7WeakPtrIS4_EEiEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

@_ZTVN3net16URLRequestFtpJobE = hidden unnamed_addr constant { [40 x i8*] } { [40 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::URLRequestFtpJob"*)* @_ZN3net16URLRequestFtpJobD2Ev to i8*), i8* bitcast (void (%"class.net::URLRequestFtpJob"*)* @_ZN3net16URLRequestFtpJobD0Ev to i8*), i8* bitcast (void (%"class.net::URLRequestJob"*, %"class.net::UploadDataStream"*)* @_ZN3net13URLRequestJob9SetUploadEPNS_16UploadDataStreamE to i8*), i8* bitcast (void (%"class.net::URLRequestJob"*, %"class.net::HttpRequestHeaders"*)* @_ZN3net13URLRequestJob22SetExtraRequestHeadersERKNS_18HttpRequestHeadersE to i8*), i8* bitcast (void (%"class.net::URLRequestJob"*, i32)* @_ZN3net13URLRequestJob11SetPriorityENS_15RequestPriorityE to i8*), i8* bitcast (void (%"class.net::URLRequestFtpJob"*)* @_ZN3net16URLRequestFtpJob5StartEv to i8*), i8* bitcast (void (%"class.net::URLRequestFtpJob"*)* @_ZN3net16URLRequestFtpJob4KillEv to i8*), i8* bitcast (i64 (%"class.net::URLRequestJob"*)* @_ZNK3net13URLRequestJob21GetTotalReceivedBytesEv to i8*), i8* bitcast (i64 (%"class.net::URLRequestJob"*)* @_ZNK3net13URLRequestJob17GetTotalSentBytesEv to i8*), i8* bitcast (i32 (%"class.net::URLRequestFtpJob"*)* @_ZNK3net16URLRequestFtpJob12GetLoadStateEv to i8*), i8* bitcast (i1 (%"class.net::URLRequestJob"*, %"class.std::__1::basic_string.109"*)* @_ZN3net13URLRequestJob10GetCharsetEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (void (%"class.net::URLRequestFtpJob"*, %"class.net::HttpResponseInfo"*)* @_ZN3net16URLRequestFtpJob15GetResponseInfoEPNS_16HttpResponseInfoE to i8*), i8* bitcast (void (%"class.net::URLRequestJob"*, %"struct.net::LoadTimingInfo"*)* @_ZNK3net13URLRequestJob17GetLoadTimingInfoEPNS_14LoadTimingInfoE to i8*), i8* bitcast (i1 (%"class.net::URLRequestJob"*, %"class.net::IPEndPoint"*)* @_ZNK3net13URLRequestJob28GetTransactionRemoteEndpointEPNS_10IPEndPointE to i8*), i8* bitcast (void (%"class.net::URLRequestJob"*, %"struct.net::NetErrorDetails"*)* @_ZNK3net13URLRequestJob23PopulateNetErrorDetailsEPNS_15NetErrorDetailsE to i8*), i8* bitcast (i1 (%"class.net::URLRequestJob"*, %class.GURL*, i32*, i8*)* @_ZN3net13URLRequestJob18IsRedirectResponseEP4GURLPiPb to i8*), i8* bitcast (i1 (%"class.net::URLRequestJob"*, %class.GURL*)* @_ZNK3net13URLRequestJob22CopyFragmentOnRedirectERK4GURL to i8*), i8* bitcast (i1 (%"class.net::URLRequestFtpJob"*, %class.GURL*)* @_ZN3net16URLRequestFtpJob14IsSafeRedirectERK4GURL to i8*), i8* bitcast (i1 (%"class.net::URLRequestFtpJob"*)* @_ZN3net16URLRequestFtpJob9NeedsAuthEv to i8*), i8* bitcast (%"class.net::AuthChallengeInfo"* (%"class.net::URLRequestFtpJob"*)* @_ZN3net16URLRequestFtpJob20GetAuthChallengeInfoEv to i8*), i8* bitcast (void (%"class.net::URLRequestFtpJob"*, %"class.net::AuthCredentials"*)* @_ZN3net16URLRequestFtpJob7SetAuthERKNS_15AuthCredentialsE to i8*), i8* bitcast (void (%"class.net::URLRequestFtpJob"*)* @_ZN3net16URLRequestFtpJob10CancelAuthEv to i8*), i8* bitcast (void ()* @_ZN3net13URLRequestJob23ContinueWithCertificateE13scoped_refptrINS_15X509CertificateEES1_INS_13SSLPrivateKeyEE to i8*), i8* bitcast (void (%"class.net::URLRequestJob"*)* @_ZN3net13URLRequestJob24ContinueDespiteLastErrorEv to i8*), i8* bitcast (i64 (%"class.net::URLRequestJob"*)* @_ZNK3net13URLRequestJob20prefilter_bytes_readEv to i8*), i8* bitcast (i1 (%"class.net::URLRequestFtpJob"*, %"class.std::__1::basic_string.109"*)* @_ZNK3net16URLRequestFtpJob11GetMimeTypeEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (i32 (%"class.net::URLRequestJob"*)* @_ZNK3net13URLRequestJob15GetResponseCodeEv to i8*), i8* bitcast (void (%"class.net::IPEndPoint"*, %"class.net::URLRequestFtpJob"*)* @_ZNK3net16URLRequestFtpJob25GetResponseRemoteEndpointEv to i8*), i8* bitcast (void (%"class.net::URLRequestJob"*)* @_ZN3net13URLRequestJob25NotifyURLRequestDestroyedEv to i8*), i8* bitcast (void (%"class.net::URLRequestJob"*, %"class.std::__1::vector.452"*)* @_ZNK3net13URLRequestJob21GetConnectionAttemptsEPNSt3__16vectorINS_17ConnectionAttemptENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%"class.net::URLRequestJob"*, %"class.base::RepeatingCallback"*)* @_ZN3net13URLRequestJob25SetRequestHeadersCallbackEN4base17RepeatingCallbackIFvNS_21HttpRawRequestHeadersEEEE to i8*), i8* bitcast (void (%"class.net::URLRequestJob"*, %"class.base::RepeatingCallback.383"*)* @_ZN3net13URLRequestJob26SetResponseHeadersCallbackEN4base17RepeatingCallbackIFv13scoped_refptrIKNS_19HttpResponseHeadersEEEEE to i8*), i8* bitcast (void (%"class.net::URLRequestJob"*, %"class.base::RepeatingCallback.383"*)* @_ZN3net13URLRequestJob31SetEarlyResponseHeadersCallbackEN4base17RepeatingCallbackIFv13scoped_refptrIKNS_19HttpResponseHeadersEEEEE to i8*), i8* bitcast (void (%"class.net::URLRequestJob"*)* @_ZN3net13URLRequestJob28CloseConnectionOnDestructionEv to i8*), i8* bitcast (i32 (%"class.net::URLRequestFtpJob"*, %"class.net::IOBuffer"*, i32)* @_ZN3net16URLRequestFtpJob11ReadRawDataEPNS_8IOBufferEi to i8*), i8* bitcast (void (%"class.net::URLRequestJob"*)* @_ZN3net13URLRequestJob11DoneReadingEv to i8*), i8* bitcast (void (%"class.net::URLRequestJob"*)* @_ZN3net13URLRequestJob27DoneReadingRedirectResponseEv to i8*), i8* bitcast (%"class.net::SourceStream"* (%"class.net::URLRequestJob"*)* @_ZN3net13URLRequestJob17SetUpSourceStreamEv to i8*)] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"text/plain\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"text/vnd.chromium.ftp-dir\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"application/octet-stream\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"GET\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"OnStartCompletedAsync\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c"../../net/url_request/url_request_ftp_job.cc\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"Net.FTP.StartResult\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@_ZZN3net16URLRequestFtpJob17LogFtpStartResultENS_14FTPStartResultEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3net16URLRequestFtpJob8AuthDataC1Ev = hidden unnamed_addr alias void (%"class.net::URLRequestFtpJob::AuthData"*), void (%"class.net::URLRequestFtpJob::AuthData"*)* @_ZN3net16URLRequestFtpJob8AuthDataC2Ev
@_ZN3net16URLRequestFtpJob8AuthDataD1Ev = hidden unnamed_addr alias void (%"class.net::URLRequestFtpJob::AuthData"*), void (%"class.net::URLRequestFtpJob::AuthData"*)* @_ZN3net16URLRequestFtpJob8AuthDataD2Ev
@_ZN3net16URLRequestFtpJobC1EPNS_10URLRequestEPNS_21FtpTransactionFactoryEPNS_12FtpAuthCacheE = hidden unnamed_addr alias void (%"class.net::URLRequestFtpJob"*, %"class.net::URLRequest"*, %"class.net::FtpTransactionFactory"*, %"class.net::FtpAuthCache"*), void (%"class.net::URLRequestFtpJob"*, %"class.net::URLRequest"*, %"class.net::FtpTransactionFactory"*, %"class.net::FtpAuthCache"*)* @_ZN3net16URLRequestFtpJobC2EPNS_10URLRequestEPNS_21FtpTransactionFactoryEPNS_12FtpAuthCacheE
@_ZN3net16URLRequestFtpJobD1Ev = hidden unnamed_addr alias void (%"class.net::URLRequestFtpJob"*), void (%"class.net::URLRequestFtpJob"*)* @_ZN3net16URLRequestFtpJobD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16URLRequestFtpJob8AuthDataC2Ev(%"class.net::URLRequestFtpJob::AuthData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLRequestFtpJob::AuthData", %"class.net::URLRequestFtpJob::AuthData"* %0, i64 0, i32 0
  store i32 1, i32* %2, align 8
  %3 = getelementptr inbounds %"class.net::URLRequestFtpJob::AuthData", %"class.net::URLRequestFtpJob::AuthData"* %0, i64 0, i32 1
  tail call void @_ZN3net15AuthCredentialsC1Ev(%"class.net::AuthCredentials"* %3) #11
  ret void
}

declare void @_ZN3net15AuthCredentialsC1Ev(%"class.net::AuthCredentials"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16URLRequestFtpJob8AuthDataD2Ev(%"class.net::URLRequestFtpJob::AuthData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLRequestFtpJob::AuthData", %"class.net::URLRequestFtpJob::AuthData"* %0, i64 0, i32 1
  tail call void @_ZN3net15AuthCredentialsD1Ev(%"class.net::AuthCredentials"* %2) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net15AuthCredentialsD1Ev(%"class.net::AuthCredentials"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16URLRequestFtpJobC2EPNS_10URLRequestEPNS_21FtpTransactionFactoryEPNS_12FtpAuthCacheE(%"class.net::URLRequestFtpJob"*, %"class.net::URLRequest"*, %"class.net::FtpTransactionFactory"*, %"class.net::FtpAuthCache"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 0
  tail call void @_ZN3net13URLRequestJobC2EPNS_10URLRequestE(%"class.net::URLRequestJob"* %5, %"class.net::URLRequest"* %1) #11
  %6 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*] }, { [40 x i8*] }* @_ZTVN3net16URLRequestFtpJobE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 0, i32 1
  %9 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %8, align 8
  %10 = tail call %"class.net::URLRequestContext"* @_ZNK3net10URLRequest7contextEv(%"class.net::URLRequest"* %9) #11
  %11 = getelementptr inbounds %"class.net::URLRequestContext", %"class.net::URLRequestContext"* %10, i64 0, i32 5
  %12 = bitcast %"class.net::ProxyResolutionService"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.net::ProxyResolutionService"** %7 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 2
  tail call void @_ZN3net9ProxyInfoC1Ev(%"class.net::ProxyInfo"* %15) #11
  %16 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 3
  %17 = bitcast %"class.std::__1::unique_ptr.415"* %16 to i64*
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4GURLC1Ev(%class.GURL* %18) #11
  %19 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 5
  %20 = bitcast %"class.std::__1::unique_ptr.421"* %19 to i64*
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 6
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 7
  %23 = bitcast %"class.std::__1::unique_ptr.427"* %22 to i64*
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 8
  store %"class.net::FtpTransactionFactory"* %2, %"class.net::FtpTransactionFactory"** %24, align 8
  %25 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 9
  store %"class.net::FtpAuthCache"* %3, %"class.net::FtpAuthCache"** %25, align 8
  %26 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 10, i32 0
  %27 = ptrtoint %"class.net::URLRequestFtpJob"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %26, i64 %27) #11
  ret void
}

declare void @_ZN3net13URLRequestJobC2EPNS_10URLRequestE(%"class.net::URLRequestJob"*, %"class.net::URLRequest"*) unnamed_addr #1

declare %"class.net::URLRequestContext"* @_ZNK3net10URLRequest7contextEv(%"class.net::URLRequest"*) local_unnamed_addr #1

declare void @_ZN3net9ProxyInfoC1Ev(%"class.net::ProxyInfo"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16URLRequestFtpJobD2Ev(%"class.net::URLRequestFtpJob"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*] }, { [40 x i8*] }* @_ZTVN3net16URLRequestFtpJobE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.net::ProxyResolutionRequest"*, %"class.net::ProxyResolutionRequest"** %3, align 8
  %5 = icmp eq %"class.net::ProxyResolutionRequest"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  store %"class.net::ProxyResolutionRequest"* null, %"class.net::ProxyResolutionRequest"** %3, align 8
  %7 = bitcast %"class.net::ProxyResolutionRequest"* %4 to void (%"class.net::ProxyResolutionRequest"*)***
  %8 = load void (%"class.net::ProxyResolutionRequest"*)**, void (%"class.net::ProxyResolutionRequest"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.net::ProxyResolutionRequest"*)*, void (%"class.net::ProxyResolutionRequest"*)** %8, i64 1
  %10 = load void (%"class.net::ProxyResolutionRequest"*)*, void (%"class.net::ProxyResolutionRequest"*)** %9, align 8
  tail call void %10(%"class.net::ProxyResolutionRequest"* nonnull %4) #11
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %13 = load %"class.net::FtpTransaction"*, %"class.net::FtpTransaction"** %12, align 8
  %14 = icmp eq %"class.net::FtpTransaction"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  store %"class.net::FtpTransaction"* null, %"class.net::FtpTransaction"** %12, align 8
  %16 = bitcast %"class.net::FtpTransaction"* %13 to void (%"class.net::FtpTransaction"*)***
  %17 = load void (%"class.net::FtpTransaction"*)**, void (%"class.net::FtpTransaction"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.net::FtpTransaction"*)*, void (%"class.net::FtpTransaction"*)** %17, i64 1
  %19 = load void (%"class.net::FtpTransaction"*)*, void (%"class.net::FtpTransaction"*)** %18, align 8
  tail call void %19(%"class.net::FtpTransaction"* nonnull %13) #11
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 0
  tail call void @_ZN3net13URLRequestJob4KillEv(%"class.net::URLRequestJob"* %21) #11
  %22 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 10, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %22) #11
  %23 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 10, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %23) #11
  %24 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %25 = load %"class.net::URLRequestFtpJob::AuthData"*, %"class.net::URLRequestFtpJob::AuthData"** %24, align 8
  store %"class.net::URLRequestFtpJob::AuthData"* null, %"class.net::URLRequestFtpJob::AuthData"** %24, align 8
  %26 = icmp eq %"class.net::URLRequestFtpJob::AuthData"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.net::URLRequestFtpJob::AuthData", %"class.net::URLRequestFtpJob::AuthData"* %25, i64 0, i32 1
  tail call void @_ZN3net15AuthCredentialsD1Ev(%"class.net::AuthCredentials"* %28) #11
  %29 = bitcast %"class.net::URLRequestFtpJob::AuthData"* %25 to i8*
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %20, %27
  %31 = load %"class.net::FtpTransaction"*, %"class.net::FtpTransaction"** %12, align 8
  store %"class.net::FtpTransaction"* null, %"class.net::FtpTransaction"** %12, align 8
  %32 = icmp eq %"class.net::FtpTransaction"* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %30
  %34 = bitcast %"class.net::FtpTransaction"* %31 to void (%"class.net::FtpTransaction"*)***
  %35 = load void (%"class.net::FtpTransaction"*)**, void (%"class.net::FtpTransaction"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.net::FtpTransaction"*)*, void (%"class.net::FtpTransaction"*)** %35, i64 1
  %37 = load void (%"class.net::FtpTransaction"*)*, void (%"class.net::FtpTransaction"*)** %36, align 8
  tail call void %37(%"class.net::FtpTransaction"* nonnull %31) #11
  br label %38

38:                                               ; preds = %30, %33
  %39 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4GURLD1Ev(%class.GURL* %39) #11
  %40 = load %"class.net::ProxyResolutionRequest"*, %"class.net::ProxyResolutionRequest"** %3, align 8
  store %"class.net::ProxyResolutionRequest"* null, %"class.net::ProxyResolutionRequest"** %3, align 8
  %41 = icmp eq %"class.net::ProxyResolutionRequest"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.net::ProxyResolutionRequest"* %40 to void (%"class.net::ProxyResolutionRequest"*)***
  %44 = load void (%"class.net::ProxyResolutionRequest"*)**, void (%"class.net::ProxyResolutionRequest"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.net::ProxyResolutionRequest"*)*, void (%"class.net::ProxyResolutionRequest"*)** %44, i64 1
  %46 = load void (%"class.net::ProxyResolutionRequest"*)*, void (%"class.net::ProxyResolutionRequest"*)** %45, align 8
  tail call void %46(%"class.net::ProxyResolutionRequest"* nonnull %40) #11
  br label %47

47:                                               ; preds = %38, %42
  %48 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 2
  tail call void @_ZN3net9ProxyInfoD1Ev(%"class.net::ProxyInfo"* %48) #11
  tail call void @_ZN3net13URLRequestJobD2Ev(%"class.net::URLRequestJob"* %21) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net9ProxyInfoD1Ev(%"class.net::ProxyInfo"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net13URLRequestJobD2Ev(%"class.net::URLRequestJob"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16URLRequestFtpJobD0Ev(%"class.net::URLRequestFtpJob"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net16URLRequestFtpJobD2Ev(%"class.net::URLRequestFtpJob"* %0) #11
  %2 = bitcast %"class.net::URLRequestFtpJob"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3net16URLRequestFtpJob14IsSafeRedirectERK4GURL(%"class.net::URLRequestFtpJob"* nocapture readnone, %class.GURL* nocapture readnone dereferenceable(120)) unnamed_addr #4 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net16URLRequestFtpJob11GetMimeTypeEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::URLRequestFtpJob"* nocapture readonly, %"class.std::__1::basic_string.109"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %"class.net::URLRequestFtpJob::AuthData"*, %"class.net::URLRequestFtpJob::AuthData"** %3, align 8
  %5 = icmp eq %"class.net::URLRequestFtpJob::AuthData"* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::URLRequestFtpJob::AuthData", %"class.net::URLRequestFtpJob::AuthData"* %4, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 3
  br i1 %9, label %10, label %24

10:                                               ; preds = %6
  %11 = bitcast %"class.std::__1::basic_string.109"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 10, i64* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  br label %21

19:                                               ; preds = %10
  store i8 10, i8* %12, align 1
  %20 = bitcast %"class.std::__1::basic_string.109"* %1 to i8*
  br label %21

21:                                               ; preds = %15, %19
  %22 = phi i8* [ %18, %15 ], [ %20, %19 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %22, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, i1 false) #11
  %23 = getelementptr inbounds i8, i8* %22, i64 10
  store i8 0, i8* %23, align 1
  br label %39

24:                                               ; preds = %2, %6
  %25 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %26 = load %"class.net::FtpTransaction"*, %"class.net::FtpTransaction"** %25, align 8
  %27 = bitcast %"class.net::FtpTransaction"* %26 to %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)***
  %28 = load %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)**, %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)*, %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)** %28, i64 5
  %30 = load %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)*, %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)** %29, align 8
  %31 = tail call %"class.net::FtpResponseInfo"* %30(%"class.net::FtpTransaction"* %26) #11
  %32 = getelementptr inbounds %"class.net::FtpResponseInfo", %"class.net::FtpResponseInfo"* %31, i64 0, i32 5
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %24
  %36 = tail call dereferenceable(24) %"class.std::__1::basic_string.109"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.109"* %1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i64 25) #11
  br label %39

37:                                               ; preds = %24
  %38 = tail call dereferenceable(24) %"class.std::__1::basic_string.109"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.109"* %1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0), i64 24) #11
  br label %39

39:                                               ; preds = %37, %35, %21
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net16URLRequestFtpJob25GetResponseRemoteEndpointEv(%"class.net::IPEndPoint"* noalias sret, %"class.net::URLRequestFtpJob"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.net::FtpTransaction"*, %"class.net::FtpTransaction"** %3, align 8
  %5 = icmp eq %"class.net::FtpTransaction"* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* %0) #11
  br label %14

7:                                                ; preds = %2
  %8 = bitcast %"class.net::FtpTransaction"* %4 to %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)***
  %9 = load %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)**, %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)*, %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)** %9, i64 5
  %11 = load %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)*, %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)** %10, align 8
  %12 = tail call %"class.net::FtpResponseInfo"* %11(%"class.net::FtpTransaction"* nonnull %4) #11
  %13 = getelementptr inbounds %"class.net::FtpResponseInfo", %"class.net::FtpResponseInfo"* %12, i64 0, i32 7
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %0, %"class.net::IPEndPoint"* dereferenceable(20) %13) #11
  br label %14

14:                                               ; preds = %7, %6
  ret void
}

declare void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"*) unnamed_addr #1

declare void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16URLRequestFtpJob5StartEv(%"class.net::URLRequestFtpJob"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string.109", align 8
  %3 = alloca %"class.net::NetworkIsolationKey", align 8
  %4 = alloca %"class.base::OnceCallback.257", align 8
  %5 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %5, align 8
  %7 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %6, i64 0, i32 18
  %8 = load i32, i32* %7, align 8
  %9 = trunc i32 %8 to i8
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 2
  tail call void @_ZN3net9ProxyInfo9UseDirectEv(%"class.net::ProxyInfo"* %12) #11
  br label %49

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 1
  %15 = load %"class.net::ProxyResolutionService"*, %"class.net::ProxyResolutionService"** %14, align 8
  %16 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %6, i64 0, i32 5, i32 0, i32 1
  %17 = load %class.GURL*, %class.GURL** %16, align 8
  %18 = getelementptr inbounds %class.GURL, %class.GURL* %17, i64 -1
  %19 = bitcast %"class.std::__1::basic_string.109"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #11
  %20 = bitcast %"class.std::__1::basic_string.109"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  store i8 3, i8* %21, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 3, i1 false) #11
  %22 = getelementptr inbounds i8, i8* %19, i64 3
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %23) #11
  call void @_ZN3net19NetworkIsolationKeyC1Ev(%"class.net::NetworkIsolationKey"* nonnull %3) #11
  %24 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 2
  %25 = ptrtoint %"class.net::URLRequestFtpJob"* %0 to i64
  %26 = call i8* @_Znwm(i64 56) #12, !noalias !3
  %27 = bitcast i8* %26 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %27, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !3
  %28 = getelementptr inbounds i8, i8* %26, i64 32
  %29 = bitcast i8* %28 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::URLRequestFtpJob"*, i32)* @_ZN3net16URLRequestFtpJob22OnResolveProxyCompleteEi to i64), i64 0>, <2 x i64>* %29, align 8, !noalias !3
  %30 = getelementptr inbounds i8, i8* %26, i64 48
  %31 = bitcast i8* %30 to i64*
  store i64 %25, i64* %31, align 8, !noalias !3
  %32 = bitcast %"class.base::OnceCallback.257"* %4 to i8**
  store i8* %26, i8** %32, align 8, !alias.scope !3
  %33 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 3
  %34 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %5, align 8
  %35 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %34, i64 0, i32 2
  %36 = bitcast %"class.net::ProxyResolutionService"* %15 to i32 (%"class.net::ProxyResolutionService"*, %class.GURL*, %"class.std::__1::basic_string.109"*, %"class.net::NetworkIsolationKey"*, %"class.net::ProxyInfo"*, %"class.base::OnceCallback.257"*, %"class.std::__1::unique_ptr.415"*, %"class.net::NetLogWithSource"*)***
  %37 = load i32 (%"class.net::ProxyResolutionService"*, %class.GURL*, %"class.std::__1::basic_string.109"*, %"class.net::NetworkIsolationKey"*, %"class.net::ProxyInfo"*, %"class.base::OnceCallback.257"*, %"class.std::__1::unique_ptr.415"*, %"class.net::NetLogWithSource"*)**, i32 (%"class.net::ProxyResolutionService"*, %class.GURL*, %"class.std::__1::basic_string.109"*, %"class.net::NetworkIsolationKey"*, %"class.net::ProxyInfo"*, %"class.base::OnceCallback.257"*, %"class.std::__1::unique_ptr.415"*, %"class.net::NetLogWithSource"*)*** %36, align 8
  %38 = getelementptr inbounds i32 (%"class.net::ProxyResolutionService"*, %class.GURL*, %"class.std::__1::basic_string.109"*, %"class.net::NetworkIsolationKey"*, %"class.net::ProxyInfo"*, %"class.base::OnceCallback.257"*, %"class.std::__1::unique_ptr.415"*, %"class.net::NetLogWithSource"*)*, i32 (%"class.net::ProxyResolutionService"*, %class.GURL*, %"class.std::__1::basic_string.109"*, %"class.net::NetworkIsolationKey"*, %"class.net::ProxyInfo"*, %"class.base::OnceCallback.257"*, %"class.std::__1::unique_ptr.415"*, %"class.net::NetLogWithSource"*)** %37, i64 2
  %39 = load i32 (%"class.net::ProxyResolutionService"*, %class.GURL*, %"class.std::__1::basic_string.109"*, %"class.net::NetworkIsolationKey"*, %"class.net::ProxyInfo"*, %"class.base::OnceCallback.257"*, %"class.std::__1::unique_ptr.415"*, %"class.net::NetLogWithSource"*)*, i32 (%"class.net::ProxyResolutionService"*, %class.GURL*, %"class.std::__1::basic_string.109"*, %"class.net::NetworkIsolationKey"*, %"class.net::ProxyInfo"*, %"class.base::OnceCallback.257"*, %"class.std::__1::unique_ptr.415"*, %"class.net::NetLogWithSource"*)** %38, align 8
  %40 = call i32 %39(%"class.net::ProxyResolutionService"* %15, %class.GURL* dereferenceable(120) %18, %"class.std::__1::basic_string.109"* nonnull dereferenceable(24) %2, %"class.net::NetworkIsolationKey"* nonnull dereferenceable(184) %3, %"class.net::ProxyInfo"* %24, %"class.base::OnceCallback.257"* nonnull %4, %"class.std::__1::unique_ptr.415"* %33, %"class.net::NetLogWithSource"* dereferenceable(24) %35) #11
  %41 = getelementptr inbounds %"class.base::OnceCallback.257", %"class.base::OnceCallback.257"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #11
  call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %23) #11
  %42 = load i8, i8* %21, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %13
  %45 = getelementptr inbounds %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  call void @_ZdlPv(i8* %46) #12
  br label %47

47:                                               ; preds = %13, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #11
  %48 = icmp eq i32 %40, -1
  br i1 %48, label %51, label %49

49:                                               ; preds = %47, %11
  %50 = phi i32 [ 0, %11 ], [ %40, %47 ]
  call void @_ZN3net16URLRequestFtpJob22OnResolveProxyCompleteEi(%"class.net::URLRequestFtpJob"* %0, i32 %50)
  br label %51

51:                                               ; preds = %47, %49
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN3net9ProxyInfo9UseDirectEv(%"class.net::ProxyInfo"*) local_unnamed_addr #1

declare void @_ZN3net19NetworkIsolationKeyC1Ev(%"class.net::NetworkIsolationKey"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16URLRequestFtpJob22OnResolveProxyCompleteEi(%"class.net::URLRequestFtpJob"*, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.net::ProxyResolutionRequest"*, %"class.net::ProxyResolutionRequest"** %3, align 8
  store %"class.net::ProxyResolutionRequest"* null, %"class.net::ProxyResolutionRequest"** %3, align 8
  %5 = icmp eq %"class.net::ProxyResolutionRequest"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.net::ProxyResolutionRequest"* %4 to void (%"class.net::ProxyResolutionRequest"*)***
  %8 = load void (%"class.net::ProxyResolutionRequest"*)**, void (%"class.net::ProxyResolutionRequest"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.net::ProxyResolutionRequest"*)*, void (%"class.net::ProxyResolutionRequest"*)** %8, i64 1
  %10 = load void (%"class.net::ProxyResolutionRequest"*)*, void (%"class.net::ProxyResolutionRequest"*)** %9, align 8
  tail call void %10(%"class.net::ProxyResolutionRequest"* nonnull %4) #11
  br label %11

11:                                               ; preds = %2, %6
  %12 = icmp eq i32 %1, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %11
  tail call void @_ZN3net16URLRequestFtpJob21OnStartCompletedAsyncEi(%"class.net::URLRequestFtpJob"* %0, i32 %1)
  br label %25

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 2
  tail call void @_ZN3net9ProxyInfo26RemoveProxiesWithoutSchemeEi(%"class.net::ProxyInfo"* %15, i32 2) #11
  %16 = getelementptr inbounds %"class.net::ProxyInfo", %"class.net::ProxyInfo"* %15, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"* %16) #11
  br i1 %17, label %24, label %18

18:                                               ; preds = %14
  %19 = tail call dereferenceable(40) %"class.net::ProxyServer"* @_ZNK3net9ProxyList3GetEv(%"class.net::ProxyList"* %16) #11
  %20 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 2
  br i1 %22, label %23, label %24

23:                                               ; preds = %18
  tail call void @_ZN3net16URLRequestFtpJob19StartFtpTransactionEv(%"class.net::URLRequestFtpJob"* %0)
  br label %25

24:                                               ; preds = %14, %18
  tail call void @_ZN3net16URLRequestFtpJob21OnStartCompletedAsyncEi(%"class.net::URLRequestFtpJob"* %0, i32 -336)
  br label %25

25:                                               ; preds = %13, %24, %23
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind
declare void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16URLRequestFtpJob4KillEv(%"class.net::URLRequestFtpJob"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.net::ProxyResolutionRequest"*, %"class.net::ProxyResolutionRequest"** %2, align 8
  %4 = icmp eq %"class.net::ProxyResolutionRequest"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  store %"class.net::ProxyResolutionRequest"* null, %"class.net::ProxyResolutionRequest"** %2, align 8
  %6 = bitcast %"class.net::ProxyResolutionRequest"* %3 to void (%"class.net::ProxyResolutionRequest"*)***
  %7 = load void (%"class.net::ProxyResolutionRequest"*)**, void (%"class.net::ProxyResolutionRequest"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.net::ProxyResolutionRequest"*)*, void (%"class.net::ProxyResolutionRequest"*)** %7, i64 1
  %9 = load void (%"class.net::ProxyResolutionRequest"*)*, void (%"class.net::ProxyResolutionRequest"*)** %8, align 8
  tail call void %9(%"class.net::ProxyResolutionRequest"* nonnull %3) #11
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %12 = load %"class.net::FtpTransaction"*, %"class.net::FtpTransaction"** %11, align 8
  %13 = icmp eq %"class.net::FtpTransaction"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  store %"class.net::FtpTransaction"* null, %"class.net::FtpTransaction"** %11, align 8
  %15 = bitcast %"class.net::FtpTransaction"* %12 to void (%"class.net::FtpTransaction"*)***
  %16 = load void (%"class.net::FtpTransaction"*)**, void (%"class.net::FtpTransaction"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.net::FtpTransaction"*)*, void (%"class.net::FtpTransaction"*)** %16, i64 1
  %18 = load void (%"class.net::FtpTransaction"*)*, void (%"class.net::FtpTransaction"*)** %17, align 8
  tail call void %18(%"class.net::FtpTransaction"* nonnull %12) #11
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 0
  tail call void @_ZN3net13URLRequestJob4KillEv(%"class.net::URLRequestJob"* %20) #11
  %21 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 10, i32 0, i32 0
  tail call void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"* %21) #11
  ret void
}

declare void @_ZN3net13URLRequestJob4KillEv(%"class.net::URLRequestJob"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16URLRequestFtpJob15GetResponseInfoEPNS_16HttpResponseInfoE(%"class.net::URLRequestFtpJob"*, %"class.net::HttpResponseInfo"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load %"class.net::URLRequestFtpJob::AuthData"*, %"class.net::URLRequestFtpJob::AuthData"** %3, align 8
  %5 = icmp eq %"class.net::URLRequestFtpJob::AuthData"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::URLRequestFtpJob::AuthData", %"class.net::URLRequestFtpJob::AuthData"* %4, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 2
  br i1 %9, label %29, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.net::URLRequestFtpJob"* %0 to %"class.net::AuthChallengeInfo"* (%"class.net::URLRequestFtpJob"*)***
  %12 = load %"class.net::AuthChallengeInfo"* (%"class.net::URLRequestFtpJob"*)**, %"class.net::AuthChallengeInfo"* (%"class.net::URLRequestFtpJob"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.net::AuthChallengeInfo"* (%"class.net::URLRequestFtpJob"*)*, %"class.net::AuthChallengeInfo"* (%"class.net::URLRequestFtpJob"*)** %12, i64 19
  %14 = load %"class.net::AuthChallengeInfo"* (%"class.net::URLRequestFtpJob"*)*, %"class.net::AuthChallengeInfo"* (%"class.net::URLRequestFtpJob"*)** %13, align 8
  %15 = tail call %"class.net::AuthChallengeInfo"* %14(%"class.net::URLRequestFtpJob"* %0) #11
  %16 = icmp eq %"class.net::AuthChallengeInfo"* %15, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = tail call dereferenceable(184) %"class.net::AuthChallengeInfo"* @_ZN3net17AuthChallengeInfoaSERKS0_(%"class.net::AuthChallengeInfo"* %22, %"class.net::AuthChallengeInfo"* nonnull dereferenceable(184) %15) #11
  br label %27

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %1, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %26 = bitcast i8* %25 to %"class.net::AuthChallengeInfo"*
  tail call void @_ZN3net17AuthChallengeInfoC1ERKS0_(%"class.net::AuthChallengeInfo"* %26, %"class.net::AuthChallengeInfo"* nonnull dereferenceable(184) %15) #11
  store i8 1, i8* %18, align 8
  br label %27

27:                                               ; preds = %24, %21
  tail call void @_ZN3net17AuthChallengeInfoD1Ev(%"class.net::AuthChallengeInfo"* nonnull %15) #11
  %28 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %15, i64 0, i32 0
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %10, %2, %27, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16URLRequestFtpJob21OnStartCompletedAsyncEi(%"class.net::URLRequestFtpJob"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::WeakPtr", align 8
  %7 = tail call dereferenceable(8) %class.scoped_refptr.440* @_ZN4base22ThreadTaskRunnerHandle3GetEv() #11
  %8 = bitcast %class.scoped_refptr.440* %7 to %"class.base::TaskRunner"**
  %9 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %8, align 8
  %10 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0), i32 207) #11
  %11 = bitcast %"class.base::WeakPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11, !noalias !8
  %13 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 10, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %13) #11, !noalias !8
  %14 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 10, i32 0, i32 1
  %15 = load i64, i64* %14, align 8, !noalias !8
  %16 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %16, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %15) #11
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11, !noalias !8
  %17 = call i8* @_Znwm(i64 72) #12, !noalias !11
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16URLRequestFtpJobEFviEJNS_7WeakPtrIS4_EEiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net16URLRequestFtpJobEFviEJNS_7WeakPtrIS3_EEiEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net16URLRequestFtpJobEFviEJNS_7WeakPtrIS4_EEiEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #11, !noalias !11
  %19 = getelementptr inbounds i8, i8* %17, i64 32
  %20 = bitcast i8* %19 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::URLRequestFtpJob"*, i32)* @_ZN3net16URLRequestFtpJob16OnStartCompletedEi to i64), i64 0>, <2 x i64>* %20, align 8, !noalias !11
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = bitcast i8* %21 to %"class.base::internal::WeakReference"*
  %23 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %22, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %23) #11, !noalias !11
  %24 = getelementptr inbounds i8, i8* %17, i64 56
  %25 = bitcast i8* %24 to i64*
  %26 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8, !noalias !11
  store i64 %27, i64* %25, align 8, !noalias !11
  %28 = getelementptr inbounds i8, i8* %17, i64 64
  %29 = bitcast i8* %28 to i32*
  store i32 %1, i32* %29, align 4, !noalias !11
  %30 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %17, i8** %30, align 8, !alias.scope !11
  %31 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %9, %"class.base::Location"* nonnull dereferenceable(32) %4, %"class.base::OnceCallback"* nonnull %5) #11
  %32 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %32) #11
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  ret void
}

declare void @_ZN3net9ProxyInfo26RemoveProxiesWithoutSchemeEi(%"class.net::ProxyInfo"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16URLRequestFtpJob19StartFtpTransactionEv(%"class.net::URLRequestFtpJob"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.257", align 8
  %3 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %3, align 8
  %5 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %4, i64 0, i32 5, i32 0, i32 1
  %6 = load %class.GURL*, %class.GURL** %5, align 8
  %7 = getelementptr inbounds %class.GURL, %class.GURL* %6, i64 -1
  %8 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 4
  %9 = getelementptr inbounds %"class.net::FtpRequestInfo", %"class.net::FtpRequestInfo"* %8, i64 0, i32 0
  %10 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %9, %class.GURL* dereferenceable(120) %7) #11
  %11 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 8
  %12 = load %"class.net::FtpTransactionFactory"*, %"class.net::FtpTransactionFactory"** %11, align 8
  %13 = bitcast %"class.net::FtpTransactionFactory"* %12 to %"class.net::FtpTransaction"* (%"class.net::FtpTransactionFactory"*)***
  %14 = load %"class.net::FtpTransaction"* (%"class.net::FtpTransactionFactory"*)**, %"class.net::FtpTransaction"* (%"class.net::FtpTransactionFactory"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.net::FtpTransaction"* (%"class.net::FtpTransactionFactory"*)*, %"class.net::FtpTransaction"* (%"class.net::FtpTransactionFactory"*)** %14, i64 2
  %16 = load %"class.net::FtpTransaction"* (%"class.net::FtpTransactionFactory"*)*, %"class.net::FtpTransaction"* (%"class.net::FtpTransactionFactory"*)** %15, align 8
  %17 = tail call %"class.net::FtpTransaction"* %16(%"class.net::FtpTransactionFactory"* %12) #11
  %18 = ptrtoint %"class.net::FtpTransaction"* %17 to i64
  %19 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 5
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.421", %"class.std::__1::unique_ptr.421"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.net::FtpTransaction"*, %"class.net::FtpTransaction"** %20, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.421"* %19 to i64*
  store i64 %18, i64* %22, align 8
  %23 = icmp eq %"class.net::FtpTransaction"* %21, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %1
  %25 = bitcast %"class.net::FtpTransaction"* %21 to void (%"class.net::FtpTransaction"*)***
  %26 = load void (%"class.net::FtpTransaction"*)**, void (%"class.net::FtpTransaction"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.net::FtpTransaction"*)*, void (%"class.net::FtpTransaction"*)** %26, i64 1
  %28 = load void (%"class.net::FtpTransaction"*)*, void (%"class.net::FtpTransaction"*)** %27, align 8
  tail call void %28(%"class.net::FtpTransaction"* nonnull %21) #11
  %29 = load %"class.net::FtpTransaction"*, %"class.net::FtpTransaction"** %20, align 8
  br label %30

30:                                               ; preds = %24, %1
  %31 = phi %"class.net::FtpTransaction"* [ %29, %24 ], [ %17, %1 ]
  %32 = icmp eq %"class.net::FtpTransaction"* %31, null
  br i1 %32, label %52, label %33

33:                                               ; preds = %30
  %34 = ptrtoint %"class.net::URLRequestFtpJob"* %0 to i64
  %35 = tail call i8* @_Znwm(i64 56) #12, !noalias !16
  %36 = bitcast i8* %35 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %36, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !16
  %37 = getelementptr inbounds i8, i8* %35, i64 32
  %38 = bitcast i8* %37 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::URLRequestFtpJob"*, i32)* @_ZN3net16URLRequestFtpJob16OnStartCompletedEi to i64), i64 0>, <2 x i64>* %38, align 8, !noalias !16
  %39 = getelementptr inbounds i8, i8* %35, i64 48
  %40 = bitcast i8* %39 to i64*
  store i64 %34, i64* %40, align 8, !noalias !16
  %41 = bitcast %"class.base::OnceCallback.257"* %2 to i8**
  store i8* %35, i8** %41, align 8, !alias.scope !16
  %42 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %3, align 8
  %43 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %42, i64 0, i32 2
  %44 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %42, i64 0, i32 43
  %45 = bitcast %"class.net::FtpTransaction"* %31 to i32 (%"class.net::FtpTransaction"*, %"class.net::FtpRequestInfo"*, %"class.base::OnceCallback.257"*, %"class.net::NetLogWithSource"*, %"struct.net::NetworkTrafficAnnotationTag"*)***
  %46 = load i32 (%"class.net::FtpTransaction"*, %"class.net::FtpRequestInfo"*, %"class.base::OnceCallback.257"*, %"class.net::NetLogWithSource"*, %"struct.net::NetworkTrafficAnnotationTag"*)**, i32 (%"class.net::FtpTransaction"*, %"class.net::FtpRequestInfo"*, %"class.base::OnceCallback.257"*, %"class.net::NetLogWithSource"*, %"struct.net::NetworkTrafficAnnotationTag"*)*** %45, align 8
  %47 = getelementptr inbounds i32 (%"class.net::FtpTransaction"*, %"class.net::FtpRequestInfo"*, %"class.base::OnceCallback.257"*, %"class.net::NetLogWithSource"*, %"struct.net::NetworkTrafficAnnotationTag"*)*, i32 (%"class.net::FtpTransaction"*, %"class.net::FtpRequestInfo"*, %"class.base::OnceCallback.257"*, %"class.net::NetLogWithSource"*, %"struct.net::NetworkTrafficAnnotationTag"*)** %46, i64 2
  %48 = load i32 (%"class.net::FtpTransaction"*, %"class.net::FtpRequestInfo"*, %"class.base::OnceCallback.257"*, %"class.net::NetLogWithSource"*, %"struct.net::NetworkTrafficAnnotationTag"*)*, i32 (%"class.net::FtpTransaction"*, %"class.net::FtpRequestInfo"*, %"class.base::OnceCallback.257"*, %"class.net::NetLogWithSource"*, %"struct.net::NetworkTrafficAnnotationTag"*)** %47, align 8
  %49 = call i32 %48(%"class.net::FtpTransaction"* nonnull %31, %"class.net::FtpRequestInfo"* %8, %"class.base::OnceCallback.257"* nonnull %2, %"class.net::NetLogWithSource"* dereferenceable(24) %43, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4) %44) #11
  %50 = getelementptr inbounds %"class.base::OnceCallback.257", %"class.base::OnceCallback.257"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #11
  %51 = icmp eq i32 %49, -1
  br i1 %51, label %54, label %52

52:                                               ; preds = %30, %33
  %53 = phi i32 [ %49, %33 ], [ -2, %30 ]
  call void @_ZN3net16URLRequestFtpJob21OnStartCompletedAsyncEi(%"class.net::URLRequestFtpJob"* %0, i32 %53)
  br label %54

54:                                               ; preds = %33, %52
  ret void
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16URLRequestFtpJob16OnStartCompletedEi(%"class.net::URLRequestFtpJob"*, i32) #0 align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %50

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %7 = load %"class.net::FtpTransaction"*, %"class.net::FtpTransaction"** %6, align 8
  %8 = bitcast %"class.net::FtpTransaction"* %7 to %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)***
  %9 = load %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)**, %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)*, %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)** %9, i64 5
  %11 = load %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)*, %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)** %10, align 8
  %12 = tail call %"class.net::FtpResponseInfo"* %11(%"class.net::FtpTransaction"* %7) #11
  %13 = getelementptr inbounds %"class.net::FtpResponseInfo", %"class.net::FtpResponseInfo"* %12, i64 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 0, i32 9
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %17 = load %"class.net::URLRequestFtpJob::AuthData"*, %"class.net::URLRequestFtpJob::AuthData"** %16, align 8
  %18 = icmp eq %"class.net::URLRequestFtpJob::AuthData"* %17, null
  br i1 %18, label %36, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.net::URLRequestFtpJob::AuthData", %"class.net::URLRequestFtpJob::AuthData"* %17, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 2
  br i1 %22, label %23, label %36

23:                                               ; preds = %19
  %24 = load atomic i64, i64* @_ZZN3net16URLRequestFtpJob17LogFtpStartResultENS_14FTPStartResultEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %25 = inttoptr i64 %24 to %"class.base::HistogramBase"*
  %26 = icmp eq i64 %24, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %23
  %28 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i32 1, i32 3, i32 4, i32 1) #11
  %29 = ptrtoint %"class.base::HistogramBase"* %28 to i64
  store atomic i64 %29, i64* @_ZZN3net16URLRequestFtpJob17LogFtpStartResultENS_14FTPStartResultEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %30

30:                                               ; preds = %23, %27
  %31 = phi %"class.base::HistogramBase"* [ %25, %23 ], [ %28, %27 ]
  %32 = bitcast %"class.base::HistogramBase"* %31 to void (%"class.base::HistogramBase"*, i32)***
  %33 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %33, i64 6
  %35 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %34, align 8
  tail call void %35(%"class.base::HistogramBase"* %31, i32 1) #11
  br label %49

36:                                               ; preds = %4, %19
  %37 = load atomic i64, i64* @_ZZN3net16URLRequestFtpJob17LogFtpStartResultENS_14FTPStartResultEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %38 = inttoptr i64 %37 to %"class.base::HistogramBase"*
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %36
  %41 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i32 1, i32 3, i32 4, i32 1) #11
  %42 = ptrtoint %"class.base::HistogramBase"* %41 to i64
  store atomic i64 %42, i64* @_ZZN3net16URLRequestFtpJob17LogFtpStartResultENS_14FTPStartResultEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %43

43:                                               ; preds = %36, %40
  %44 = phi %"class.base::HistogramBase"* [ %38, %36 ], [ %41, %40 ]
  %45 = bitcast %"class.base::HistogramBase"* %44 to void (%"class.base::HistogramBase"*, i32)***
  %46 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %46, i64 6
  %48 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %47, align 8
  tail call void %48(%"class.base::HistogramBase"* %44, i32 0) #11
  br label %49

49:                                               ; preds = %43, %30
  tail call void @_ZN3net13URLRequestJob21NotifyHeadersCompleteEv(%"class.net::URLRequestJob"* %5) #11
  br label %78

50:                                               ; preds = %2
  %51 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %52 = load %"class.net::FtpTransaction"*, %"class.net::FtpTransaction"** %51, align 8
  %53 = icmp eq %"class.net::FtpTransaction"* %52, null
  br i1 %53, label %64, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.net::FtpTransaction"* %52 to %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)***
  %56 = load %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)**, %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)*** %55, align 8
  %57 = getelementptr inbounds %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)*, %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)** %56, i64 5
  %58 = load %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)*, %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)** %57, align 8
  %59 = tail call %"class.net::FtpResponseInfo"* %58(%"class.net::FtpTransaction"* nonnull %52) #11
  %60 = getelementptr inbounds %"class.net::FtpResponseInfo", %"class.net::FtpResponseInfo"* %59, i64 0, i32 0
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %64, label %63

63:                                               ; preds = %54
  tail call void @_ZN3net16URLRequestFtpJob24HandleAuthNeededResponseEv(%"class.net::URLRequestFtpJob"* %0)
  br label %78

64:                                               ; preds = %50, %54
  %65 = load atomic i64, i64* @_ZZN3net16URLRequestFtpJob17LogFtpStartResultENS_14FTPStartResultEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %66 = inttoptr i64 %65 to %"class.base::HistogramBase"*
  %67 = icmp eq i64 %65, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %64
  %69 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i32 1, i32 3, i32 4, i32 1) #11
  %70 = ptrtoint %"class.base::HistogramBase"* %69 to i64
  store atomic i64 %70, i64* @_ZZN3net16URLRequestFtpJob17LogFtpStartResultENS_14FTPStartResultEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %71

71:                                               ; preds = %64, %68
  %72 = phi %"class.base::HistogramBase"* [ %66, %64 ], [ %69, %68 ]
  %73 = bitcast %"class.base::HistogramBase"* %72 to void (%"class.base::HistogramBase"*, i32)***
  %74 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %74, i64 6
  %76 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %75, align 8
  tail call void %76(%"class.base::HistogramBase"* %72, i32 2) #11
  %77 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 0
  tail call void @_ZN3net13URLRequestJob16NotifyStartErrorEi(%"class.net::URLRequestJob"* %77, i32 %1) #11
  br label %78

78:                                               ; preds = %63, %71, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16URLRequestFtpJob17LogFtpStartResultENS_14FTPStartResultE(%"class.net::URLRequestFtpJob"* nocapture readnone, i32) local_unnamed_addr #0 align 2 {
  %3 = load atomic i64, i64* @_ZZN3net16URLRequestFtpJob17LogFtpStartResultENS_14FTPStartResultEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %4 = inttoptr i64 %3 to %"class.base::HistogramBase"*
  %5 = icmp eq i64 %3, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i32 1, i32 3, i32 4, i32 1) #11
  %8 = ptrtoint %"class.base::HistogramBase"* %7 to i64
  store atomic i64 %8, i64* @_ZZN3net16URLRequestFtpJob17LogFtpStartResultENS_14FTPStartResultEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi %"class.base::HistogramBase"* [ %4, %2 ], [ %7, %6 ]
  %11 = bitcast %"class.base::HistogramBase"* %10 to void (%"class.base::HistogramBase"*, i32)***
  %12 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %12, i64 6
  %14 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %13, align 8
  tail call void %14(%"class.base::HistogramBase"* %10, i32 %1) #11
  ret void
}

declare void @_ZN3net13URLRequestJob21NotifyHeadersCompleteEv(%"class.net::URLRequestJob"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16URLRequestFtpJob24HandleAuthNeededResponseEv(%"class.net::URLRequestFtpJob"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.GURL, align 8
  %3 = bitcast %class.GURL* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %3) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 -86, i64 120, i1 false)
  %4 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 0, i32 1
  %6 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %5, align 8
  %7 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %6, i64 0, i32 5, i32 0, i32 1
  %8 = load %class.GURL*, %class.GURL** %7, align 8
  %9 = getelementptr inbounds %class.GURL, %class.GURL* %8, i64 -1
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %2, %class.GURL* %9) #11
  %10 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 7
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.427", %"class.std::__1::unique_ptr.427"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.net::URLRequestFtpJob::AuthData"*, %"class.net::URLRequestFtpJob::AuthData"** %11, align 8
  %13 = icmp eq %"class.net::URLRequestFtpJob::AuthData"* %12, null
  br i1 %13, label %41, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.net::URLRequestFtpJob::AuthData", %"class.net::URLRequestFtpJob::AuthData"* %12, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 3
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  call void @_ZN3net13URLRequestJob21NotifyHeadersCompleteEv(%"class.net::URLRequestJob"* %4) #11
  br label %80

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %21 = load %"class.net::FtpTransaction"*, %"class.net::FtpTransaction"** %20, align 8
  %22 = icmp ne %"class.net::FtpTransaction"* %21, null
  %23 = icmp eq i32 %16, 2
  %24 = and i1 %23, %22
  br i1 %24, label %25, label %53

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 9
  %27 = load %"class.net::FtpAuthCache"*, %"class.net::FtpAuthCache"** %26, align 8
  %28 = getelementptr inbounds %"class.net::URLRequestFtpJob::AuthData", %"class.net::URLRequestFtpJob::AuthData"* %12, i64 0, i32 1
  call void @_ZN3net12FtpAuthCache6RemoveERK4GURLRKNS_15AuthCredentialsE(%"class.net::FtpAuthCache"* %27, %class.GURL* nonnull dereferenceable(120) %2, %"class.net::AuthCredentials"* dereferenceable(48) %28) #11
  %29 = load atomic i64, i64* @_ZZN3net16URLRequestFtpJob17LogFtpStartResultENS_14FTPStartResultEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %30 = inttoptr i64 %29 to %"class.base::HistogramBase"*
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %25
  %33 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i32 1, i32 3, i32 4, i32 1) #11
  %34 = ptrtoint %"class.base::HistogramBase"* %33 to i64
  store atomic i64 %34, i64* @_ZZN3net16URLRequestFtpJob17LogFtpStartResultENS_14FTPStartResultEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %35

35:                                               ; preds = %25, %32
  %36 = phi %"class.base::HistogramBase"* [ %30, %25 ], [ %33, %32 ]
  %37 = bitcast %"class.base::HistogramBase"* %36 to void (%"class.base::HistogramBase"*, i32)***
  %38 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %38, i64 6
  %40 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %39, align 8
  call void %40(%"class.base::HistogramBase"* %36, i32 2) #11
  br label %53

41:                                               ; preds = %1
  %42 = call i8* @_Znwm(i64 56) #12
  %43 = bitcast i8* %42 to i32*
  store i32 1, i32* %43, align 8
  %44 = getelementptr inbounds i8, i8* %42, i64 8
  %45 = bitcast i8* %44 to %"class.net::AuthCredentials"*
  call void @_ZN3net15AuthCredentialsC1Ev(%"class.net::AuthCredentials"* %45) #11
  %46 = ptrtoint i8* %42 to i64
  %47 = load %"class.net::URLRequestFtpJob::AuthData"*, %"class.net::URLRequestFtpJob::AuthData"** %11, align 8
  %48 = bitcast %"class.std::__1::unique_ptr.427"* %10 to i64*
  store i64 %46, i64* %48, align 8
  %49 = icmp eq %"class.net::URLRequestFtpJob::AuthData"* %47, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %41
  %51 = getelementptr inbounds %"class.net::URLRequestFtpJob::AuthData", %"class.net::URLRequestFtpJob::AuthData"* %47, i64 0, i32 1
  call void @_ZN3net15AuthCredentialsD1Ev(%"class.net::AuthCredentials"* %51) #11
  %52 = bitcast %"class.net::URLRequestFtpJob::AuthData"* %47 to i8*
  call void @_ZdlPv(i8* %52) #12
  br label %53

53:                                               ; preds = %41, %50, %19, %35
  %54 = load %"class.net::URLRequestFtpJob::AuthData"*, %"class.net::URLRequestFtpJob::AuthData"** %11, align 8
  %55 = getelementptr inbounds %"class.net::URLRequestFtpJob::AuthData", %"class.net::URLRequestFtpJob::AuthData"* %54, i64 0, i32 0
  store i32 1, i32* %55, align 8
  %56 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %57 = load %"class.net::FtpTransaction"*, %"class.net::FtpTransaction"** %56, align 8
  %58 = icmp eq %"class.net::FtpTransaction"* %57, null
  br i1 %58, label %79, label %59

59:                                               ; preds = %53
  %60 = bitcast %"class.net::FtpTransaction"* %57 to %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)***
  %61 = load %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)**, %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)*** %60, align 8
  %62 = getelementptr inbounds %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)*, %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)** %61, i64 5
  %63 = load %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)*, %"class.net::FtpResponseInfo"* (%"class.net::FtpTransaction"*)** %62, align 8
  %64 = call %"class.net::FtpResponseInfo"* %63(%"class.net::FtpTransaction"* nonnull %57) #11
  %65 = getelementptr inbounds %"class.net::FtpResponseInfo", %"class.net::FtpResponseInfo"* %64, i64 0, i32 0
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %79, label %68

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 9
  %70 = load %"class.net::FtpAuthCache"*, %"class.net::FtpAuthCache"** %69, align 8
  %71 = call %"struct.net::FtpAuthCache::Entry"* @_ZN3net12FtpAuthCache6LookupERK4GURL(%"class.net::FtpAuthCache"* %70, %class.GURL* nonnull dereferenceable(120) %2) #11
  %72 = icmp eq %"struct.net::FtpAuthCache::Entry"* %71, null
  br i1 %72, label %79, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"struct.net::FtpAuthCache::Entry", %"struct.net::FtpAuthCache::Entry"* %71, i64 0, i32 1
  %75 = bitcast %"class.net::URLRequestFtpJob"* %0 to void (%"class.net::URLRequestFtpJob"*, %"class.net::AuthCredentials"*)***
  %76 = load void (%"class.net::URLRequestFtpJob"*, %"class.net::AuthCredentials"*)**, void (%"class.net::URLRequestFtpJob"*, %"class.net::AuthCredentials"*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.net::URLRequestFtpJob"*, %"class.net::AuthCredentials"*)*, void (%"class.net::URLRequestFtpJob"*, %"class.net::AuthCredentials"*)** %76, i64 20
  %78 = load void (%"class.net::URLRequestFtpJob"*, %"class.net::AuthCredentials"*)*, void (%"class.net::URLRequestFtpJob"*, %"class.net::AuthCredentials"*)** %77, align 8
  call void %78(%"class.net::URLRequestFtpJob"* %0, %"class.net::AuthCredentials"* dereferenceable(48) %74) #11
  br label %80

79:                                               ; preds = %53, %59, %68
  call void @_ZN3net13URLRequestJob21NotifyHeadersCompleteEv(%"class.net::URLRequestJob"* %4) #11
  br label %80

80:                                               ; preds = %73, %79, %18
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %3) #11
  ret void
}

declare void @_ZN3net13URLRequestJob16NotifyStartErrorEi(%"class.net::URLRequestJob"*, i32) local_unnamed_addr #1

declare dereferenceable(8) %class.scoped_refptr.440* @_ZN4base22ThreadTaskRunnerHandle3GetEv() local_unnamed_addr #1

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16URLRequestFtpJob15OnReadCompletedEi(%"class.net::URLRequestFtpJob"*, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 6
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 0
  tail call void @_ZN3net13URLRequestJob19ReadRawDataCompleteEi(%"class.net::URLRequestJob"* %4, i32 %1) #11
  ret void
}

declare void @_ZN3net13URLRequestJob19ReadRawDataCompleteEi(%"class.net::URLRequestJob"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16URLRequestFtpJob26RestartTransactionWithAuthEv(%"class.net::URLRequestFtpJob"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback.257", align 8
  %3 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.net::FtpTransaction"*, %"class.net::FtpTransaction"** %3, align 8
  %5 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %6 = load %"class.net::URLRequestFtpJob::AuthData"*, %"class.net::URLRequestFtpJob::AuthData"** %5, align 8
  %7 = getelementptr inbounds %"class.net::URLRequestFtpJob::AuthData", %"class.net::URLRequestFtpJob::AuthData"* %6, i64 0, i32 1
  %8 = ptrtoint %"class.net::URLRequestFtpJob"* %0 to i64
  %9 = tail call i8* @_Znwm(i64 56) #12, !noalias !21
  %10 = bitcast i8* %9 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %10, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !21
  %11 = getelementptr inbounds i8, i8* %9, i64 32
  %12 = bitcast i8* %11 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::URLRequestFtpJob"*, i32)* @_ZN3net16URLRequestFtpJob16OnStartCompletedEi to i64), i64 0>, <2 x i64>* %12, align 8, !noalias !21
  %13 = getelementptr inbounds i8, i8* %9, i64 48
  %14 = bitcast i8* %13 to i64*
  store i64 %8, i64* %14, align 8, !noalias !21
  %15 = bitcast %"class.base::OnceCallback.257"* %2 to i8**
  store i8* %9, i8** %15, align 8, !alias.scope !21
  %16 = bitcast %"class.net::FtpTransaction"* %4 to i32 (%"class.net::FtpTransaction"*, %"class.net::AuthCredentials"*, %"class.base::OnceCallback.257"*)***
  %17 = load i32 (%"class.net::FtpTransaction"*, %"class.net::AuthCredentials"*, %"class.base::OnceCallback.257"*)**, i32 (%"class.net::FtpTransaction"*, %"class.net::AuthCredentials"*, %"class.base::OnceCallback.257"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.net::FtpTransaction"*, %"class.net::AuthCredentials"*, %"class.base::OnceCallback.257"*)*, i32 (%"class.net::FtpTransaction"*, %"class.net::AuthCredentials"*, %"class.base::OnceCallback.257"*)** %17, i64 3
  %19 = load i32 (%"class.net::FtpTransaction"*, %"class.net::AuthCredentials"*, %"class.base::OnceCallback.257"*)*, i32 (%"class.net::FtpTransaction"*, %"class.net::AuthCredentials"*, %"class.base::OnceCallback.257"*)** %18, align 8
  %20 = call i32 %19(%"class.net::FtpTransaction"* %4, %"class.net::AuthCredentials"* dereferenceable(48) %7, %"class.base::OnceCallback.257"* nonnull %2) #11
  %21 = getelementptr inbounds %"class.base::OnceCallback.257", %"class.base::OnceCallback.257"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #11
  %22 = icmp eq i32 %20, -1
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @_ZN3net16URLRequestFtpJob21OnStartCompletedAsyncEi(%"class.net::URLRequestFtpJob"* %0, i32 %20)
  br label %24

24:                                               ; preds = %1, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net16URLRequestFtpJob12GetLoadStateEv(%"class.net::URLRequestFtpJob"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.net::ProxyResolutionRequest"*, %"class.net::ProxyResolutionRequest"** %2, align 8
  %4 = icmp eq %"class.net::ProxyResolutionRequest"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.net::ProxyResolutionRequest"* %3 to i32 (%"class.net::ProxyResolutionRequest"*)***
  %7 = load i32 (%"class.net::ProxyResolutionRequest"*)**, i32 (%"class.net::ProxyResolutionRequest"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.net::ProxyResolutionRequest"*)*, i32 (%"class.net::ProxyResolutionRequest"*)** %7, i64 2
  %9 = load i32 (%"class.net::ProxyResolutionRequest"*)*, i32 (%"class.net::ProxyResolutionRequest"*)** %8, align 8
  %10 = tail call i32 %9(%"class.net::ProxyResolutionRequest"* nonnull %3) #11
  br label %21

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %13 = load %"class.net::FtpTransaction"*, %"class.net::FtpTransaction"** %12, align 8
  %14 = icmp eq %"class.net::FtpTransaction"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.net::FtpTransaction"* %13 to i32 (%"class.net::FtpTransaction"*)***
  %17 = load i32 (%"class.net::FtpTransaction"*)**, i32 (%"class.net::FtpTransaction"*)*** %16, align 8
  %18 = getelementptr inbounds i32 (%"class.net::FtpTransaction"*)*, i32 (%"class.net::FtpTransaction"*)** %17, i64 6
  %19 = load i32 (%"class.net::FtpTransaction"*)*, i32 (%"class.net::FtpTransaction"*)** %18, align 8
  %20 = tail call i32 %19(%"class.net::FtpTransaction"* nonnull %13) #11
  br label %21

21:                                               ; preds = %11, %15, %5
  %22 = phi i32 [ %10, %5 ], [ %20, %15 ], [ 0, %11 ]
  ret i32 %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3net16URLRequestFtpJob9NeedsAuthEv(%"class.net::URLRequestFtpJob"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"class.net::URLRequestFtpJob::AuthData"*, %"class.net::URLRequestFtpJob::AuthData"** %2, align 8
  %4 = icmp eq %"class.net::URLRequestFtpJob::AuthData"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::URLRequestFtpJob::AuthData", %"class.net::URLRequestFtpJob::AuthData"* %3, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::AuthChallengeInfo"* @_ZN3net16URLRequestFtpJob20GetAuthChallengeInfoEv(%"class.net::URLRequestFtpJob"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.url::Origin", align 8
  %3 = tail call i8* @_Znwm(i64 184) #12
  %4 = bitcast i8* %3 to %"class.net::AuthChallengeInfo"*
  tail call void @_ZN3net17AuthChallengeInfoC1Ev(%"class.net::AuthChallengeInfo"* nonnull %4) #11
  store i8 0, i8* %3, align 8
  %5 = bitcast %"class.url::Origin"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %6, align 8
  %8 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %7, i64 0, i32 5, i32 0, i32 1
  %9 = load %class.GURL*, %class.GURL** %8, align 8
  %10 = getelementptr inbounds %class.GURL, %class.GURL* %9, i64 -1
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %2, %class.GURL* dereferenceable(120) %10) #11
  %11 = getelementptr inbounds i8, i8* %3, i64 8
  %12 = bitcast i8* %11 to %"class.url::Origin"*
  %13 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* %12, %"class.url::Origin"* nonnull dereferenceable(80) %2) #11
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #11
  ret %"class.net::AuthChallengeInfo"* %4
}

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16URLRequestFtpJob7SetAuthERKNS_15AuthCredentialsE(%"class.net::URLRequestFtpJob"*, %"class.net::AuthCredentials"* dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.257", align 8
  %4 = alloca %class.GURL, align 8
  %5 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %6 = load %"class.net::URLRequestFtpJob::AuthData"*, %"class.net::URLRequestFtpJob::AuthData"** %5, align 8
  %7 = getelementptr inbounds %"class.net::URLRequestFtpJob::AuthData", %"class.net::URLRequestFtpJob::AuthData"* %6, i64 0, i32 0
  store i32 2, i32* %7, align 8
  %8 = load %"class.net::URLRequestFtpJob::AuthData"*, %"class.net::URLRequestFtpJob::AuthData"** %5, align 8
  %9 = getelementptr inbounds %"class.net::URLRequestFtpJob::AuthData", %"class.net::URLRequestFtpJob::AuthData"* %8, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.net::AuthCredentials", %"class.net::AuthCredentials"* %1, i64 0, i32 0
  %11 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %9, %"class.std::__1::basic_string"* dereferenceable(24) %10) #11
  %12 = getelementptr inbounds %"class.net::URLRequestFtpJob::AuthData", %"class.net::URLRequestFtpJob::AuthData"* %8, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"class.net::AuthCredentials", %"class.net::AuthCredentials"* %1, i64 0, i32 1
  %14 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %12, %"class.std::__1::basic_string"* dereferenceable(24) %13) #11
  %15 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 9
  %16 = load %"class.net::FtpAuthCache"*, %"class.net::FtpAuthCache"** %15, align 8
  %17 = bitcast %class.GURL* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 0, i32 1
  %19 = load %"class.net::URLRequest"*, %"class.net::URLRequest"** %18, align 8
  %20 = getelementptr inbounds %"class.net::URLRequest", %"class.net::URLRequest"* %19, i64 0, i32 5, i32 0, i32 1
  %21 = load %class.GURL*, %class.GURL** %20, align 8
  %22 = getelementptr inbounds %class.GURL, %class.GURL* %21, i64 -1
  call void @_ZNK4GURL9GetOriginEv(%class.GURL* nonnull sret %4, %class.GURL* %22) #11
  %23 = load %"class.net::URLRequestFtpJob::AuthData"*, %"class.net::URLRequestFtpJob::AuthData"** %5, align 8
  %24 = getelementptr inbounds %"class.net::URLRequestFtpJob::AuthData", %"class.net::URLRequestFtpJob::AuthData"* %23, i64 0, i32 1
  call void @_ZN3net12FtpAuthCache3AddERK4GURLRKNS_15AuthCredentialsE(%"class.net::FtpAuthCache"* %16, %class.GURL* nonnull dereferenceable(120) %4, %"class.net::AuthCredentials"* dereferenceable(48) %24) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %17) #11
  %25 = bitcast %"class.base::OnceCallback.257"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  %26 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %27 = load %"class.net::FtpTransaction"*, %"class.net::FtpTransaction"** %26, align 8
  %28 = load %"class.net::URLRequestFtpJob::AuthData"*, %"class.net::URLRequestFtpJob::AuthData"** %5, align 8
  %29 = getelementptr inbounds %"class.net::URLRequestFtpJob::AuthData", %"class.net::URLRequestFtpJob::AuthData"* %28, i64 0, i32 1
  %30 = ptrtoint %"class.net::URLRequestFtpJob"* %0 to i64
  %31 = call i8* @_Znwm(i64 56) #12, !noalias !26
  %32 = bitcast i8* %31 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %32, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !26
  %33 = getelementptr inbounds i8, i8* %31, i64 32
  %34 = bitcast i8* %33 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::URLRequestFtpJob"*, i32)* @_ZN3net16URLRequestFtpJob16OnStartCompletedEi to i64), i64 0>, <2 x i64>* %34, align 8, !noalias !26
  %35 = getelementptr inbounds i8, i8* %31, i64 48
  %36 = bitcast i8* %35 to i64*
  store i64 %30, i64* %36, align 8, !noalias !26
  %37 = bitcast %"class.base::OnceCallback.257"* %3 to i8**
  store i8* %31, i8** %37, align 8, !alias.scope !26
  %38 = bitcast %"class.net::FtpTransaction"* %27 to i32 (%"class.net::FtpTransaction"*, %"class.net::AuthCredentials"*, %"class.base::OnceCallback.257"*)***
  %39 = load i32 (%"class.net::FtpTransaction"*, %"class.net::AuthCredentials"*, %"class.base::OnceCallback.257"*)**, i32 (%"class.net::FtpTransaction"*, %"class.net::AuthCredentials"*, %"class.base::OnceCallback.257"*)*** %38, align 8
  %40 = getelementptr inbounds i32 (%"class.net::FtpTransaction"*, %"class.net::AuthCredentials"*, %"class.base::OnceCallback.257"*)*, i32 (%"class.net::FtpTransaction"*, %"class.net::AuthCredentials"*, %"class.base::OnceCallback.257"*)** %39, i64 3
  %41 = load i32 (%"class.net::FtpTransaction"*, %"class.net::AuthCredentials"*, %"class.base::OnceCallback.257"*)*, i32 (%"class.net::FtpTransaction"*, %"class.net::AuthCredentials"*, %"class.base::OnceCallback.257"*)** %40, align 8
  %42 = call i32 %41(%"class.net::FtpTransaction"* %27, %"class.net::AuthCredentials"* dereferenceable(48) %29, %"class.base::OnceCallback.257"* nonnull %3) #11
  %43 = getelementptr inbounds %"class.base::OnceCallback.257", %"class.base::OnceCallback.257"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %43) #11
  %44 = icmp eq i32 %42, -1
  br i1 %44, label %46, label %45

45:                                               ; preds = %2
  call void @_ZN3net16URLRequestFtpJob21OnStartCompletedAsyncEi(%"class.net::URLRequestFtpJob"* %0, i32 %42) #11
  br label %46

46:                                               ; preds = %2, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  ret void
}

declare void @_ZN3net12FtpAuthCache3AddERK4GURLRKNS_15AuthCredentialsE(%"class.net::FtpAuthCache"*, %class.GURL* dereferenceable(120), %"class.net::AuthCredentials"* dereferenceable(48)) local_unnamed_addr #1

declare void @_ZNK4GURL9GetOriginEv(%class.GURL* sret, %class.GURL*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16URLRequestFtpJob10CancelAuthEv(%"class.net::URLRequestFtpJob"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"class.net::URLRequestFtpJob::AuthData"*, %"class.net::URLRequestFtpJob::AuthData"** %2, align 8
  %4 = getelementptr inbounds %"class.net::URLRequestFtpJob::AuthData", %"class.net::URLRequestFtpJob::AuthData"* %3, i64 0, i32 0
  store i32 3, i32* %4, align 8
  %5 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.net::FtpTransaction"*, %"class.net::FtpTransaction"** %5, align 8
  store %"class.net::FtpTransaction"* null, %"class.net::FtpTransaction"** %5, align 8
  %7 = icmp eq %"class.net::FtpTransaction"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.net::FtpTransaction"* %6 to void (%"class.net::FtpTransaction"*)***
  %10 = load void (%"class.net::FtpTransaction"*)**, void (%"class.net::FtpTransaction"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.net::FtpTransaction"*)*, void (%"class.net::FtpTransaction"*)** %10, i64 1
  %12 = load void (%"class.net::FtpTransaction"*)*, void (%"class.net::FtpTransaction"*)** %11, align 8
  tail call void %12(%"class.net::FtpTransaction"* nonnull %6) #11
  br label %13

13:                                               ; preds = %1, %8
  %14 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 0
  tail call void @_ZN3net13URLRequestJob21NotifyHeadersCompleteEv(%"class.net::URLRequestJob"* %14) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16URLRequestFtpJob11ReadRawDataEPNS_8IOBufferEi(%"class.net::URLRequestFtpJob"*, %"class.net::IOBuffer"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.257", align 8
  %5 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %6 = load %"class.net::FtpTransaction"*, %"class.net::FtpTransaction"** %5, align 8
  %7 = icmp eq %"class.net::FtpTransaction"* %6, null
  br i1 %7, label %26, label %8

8:                                                ; preds = %3
  %9 = ptrtoint %"class.net::URLRequestFtpJob"* %0 to i64
  %10 = tail call i8* @_Znwm(i64 56) #12, !noalias !31
  %11 = bitcast i8* %10 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %11, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !31
  %12 = getelementptr inbounds i8, i8* %10, i64 32
  %13 = bitcast i8* %12 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::URLRequestFtpJob"*, i32)* @_ZN3net16URLRequestFtpJob15OnReadCompletedEi to i64), i64 0>, <2 x i64>* %13, align 8, !noalias !31
  %14 = getelementptr inbounds i8, i8* %10, i64 48
  %15 = bitcast i8* %14 to i64*
  store i64 %9, i64* %15, align 8, !noalias !31
  %16 = bitcast %"class.base::OnceCallback.257"* %4 to i8**
  store i8* %10, i8** %16, align 8, !alias.scope !31
  %17 = bitcast %"class.net::FtpTransaction"* %6 to i32 (%"class.net::FtpTransaction"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.257"*)***
  %18 = load i32 (%"class.net::FtpTransaction"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.257"*)**, i32 (%"class.net::FtpTransaction"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.257"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.net::FtpTransaction"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.257"*)*, i32 (%"class.net::FtpTransaction"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.257"*)** %18, i64 4
  %20 = load i32 (%"class.net::FtpTransaction"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.257"*)*, i32 (%"class.net::FtpTransaction"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback.257"*)** %19, align 8
  %21 = call i32 %20(%"class.net::FtpTransaction"* nonnull %6, %"class.net::IOBuffer"* %1, i32 %2, %"class.base::OnceCallback.257"* nonnull %4) #11
  %22 = getelementptr inbounds %"class.base::OnceCallback.257", %"class.base::OnceCallback.257"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #11
  %23 = icmp eq i32 %21, -1
  br i1 %23, label %24, label %26

24:                                               ; preds = %8
  %25 = getelementptr inbounds %"class.net::URLRequestFtpJob", %"class.net::URLRequestFtpJob"* %0, i64 0, i32 6
  store i8 1, i8* %25, align 8
  br label %26

26:                                               ; preds = %3, %8, %24
  %27 = phi i32 [ 0, %3 ], [ -1, %24 ], [ %21, %8 ]
  ret i32 %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN3net12FtpAuthCache6RemoveERK4GURLRKNS_15AuthCredentialsE(%"class.net::FtpAuthCache"*, %class.GURL* dereferenceable(120), %"class.net::AuthCredentials"* dereferenceable(48)) local_unnamed_addr #1

declare %"struct.net::FtpAuthCache::Entry"* @_ZN3net12FtpAuthCache6LookupERK4GURL(%"class.net::FtpAuthCache"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN3net13URLRequestJob9SetUploadEPNS_16UploadDataStreamE(%"class.net::URLRequestJob"*, %"class.net::UploadDataStream"*) unnamed_addr #1

declare void @_ZN3net13URLRequestJob22SetExtraRequestHeadersERKNS_18HttpRequestHeadersE(%"class.net::URLRequestJob"*, %"class.net::HttpRequestHeaders"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN3net13URLRequestJob11SetPriorityENS_15RequestPriorityE(%"class.net::URLRequestJob"*, i32) unnamed_addr #1

declare i64 @_ZNK3net13URLRequestJob21GetTotalReceivedBytesEv(%"class.net::URLRequestJob"*) unnamed_addr #1

declare i64 @_ZNK3net13URLRequestJob17GetTotalSentBytesEv(%"class.net::URLRequestJob"*) unnamed_addr #1

declare zeroext i1 @_ZN3net13URLRequestJob10GetCharsetEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::URLRequestJob"*, %"class.std::__1::basic_string.109"*) unnamed_addr #1

declare void @_ZNK3net13URLRequestJob17GetLoadTimingInfoEPNS_14LoadTimingInfoE(%"class.net::URLRequestJob"*, %"struct.net::LoadTimingInfo"*) unnamed_addr #1

declare zeroext i1 @_ZNK3net13URLRequestJob28GetTransactionRemoteEndpointEPNS_10IPEndPointE(%"class.net::URLRequestJob"*, %"class.net::IPEndPoint"*) unnamed_addr #1

declare void @_ZNK3net13URLRequestJob23PopulateNetErrorDetailsEPNS_15NetErrorDetailsE(%"class.net::URLRequestJob"*, %"struct.net::NetErrorDetails"*) unnamed_addr #1

declare zeroext i1 @_ZN3net13URLRequestJob18IsRedirectResponseEP4GURLPiPb(%"class.net::URLRequestJob"*, %class.GURL*, i32*, i8*) unnamed_addr #1

declare zeroext i1 @_ZNK3net13URLRequestJob22CopyFragmentOnRedirectERK4GURL(%"class.net::URLRequestJob"*, %class.GURL* dereferenceable(120)) unnamed_addr #1

declare void @_ZN3net13URLRequestJob23ContinueWithCertificateE13scoped_refptrINS_15X509CertificateEES1_INS_13SSLPrivateKeyEE() unnamed_addr

declare void @_ZN3net13URLRequestJob24ContinueDespiteLastErrorEv(%"class.net::URLRequestJob"*) unnamed_addr #1

declare i64 @_ZNK3net13URLRequestJob20prefilter_bytes_readEv(%"class.net::URLRequestJob"*) unnamed_addr #1

declare i32 @_ZNK3net13URLRequestJob15GetResponseCodeEv(%"class.net::URLRequestJob"*) unnamed_addr #1

declare void @_ZN3net13URLRequestJob25NotifyURLRequestDestroyedEv(%"class.net::URLRequestJob"*) unnamed_addr #1

declare void @_ZNK3net13URLRequestJob21GetConnectionAttemptsEPNSt3__16vectorINS_17ConnectionAttemptENS1_9allocatorIS3_EEEE(%"class.net::URLRequestJob"*, %"class.std::__1::vector.452"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net13URLRequestJob25SetRequestHeadersCallbackEN4base17RepeatingCallbackIFvNS_21HttpRawRequestHeadersEEEE(%"class.net::URLRequestJob"*, %"class.base::RepeatingCallback"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net13URLRequestJob26SetResponseHeadersCallbackEN4base17RepeatingCallbackIFv13scoped_refptrIKNS_19HttpResponseHeadersEEEEE(%"class.net::URLRequestJob"*, %"class.base::RepeatingCallback.383"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net13URLRequestJob31SetEarlyResponseHeadersCallbackEN4base17RepeatingCallbackIFv13scoped_refptrIKNS_19HttpResponseHeadersEEEEE(%"class.net::URLRequestJob"*, %"class.base::RepeatingCallback.383"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN3net13URLRequestJob28CloseConnectionOnDestructionEv(%"class.net::URLRequestJob"*) unnamed_addr #1

declare void @_ZN3net13URLRequestJob11DoneReadingEv(%"class.net::URLRequestJob"*) unnamed_addr #1

declare void @_ZN3net13URLRequestJob27DoneReadingRedirectResponseEv(%"class.net::URLRequestJob"*) unnamed_addr #1

declare %"class.net::SourceStream"* @_ZN3net13URLRequestJob17SetUpSourceStreamEv(%"class.net::URLRequestJob"*) unnamed_addr #1

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

declare dereferenceable(40) %"class.net::ProxyServer"* @_ZNK3net9ProxyList3GetEv(%"class.net::ProxyList"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net9ProxyList7IsEmptyEv(%"class.net::ProxyList"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !36
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !36
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !39, !noalias !36
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !39, !noalias !36
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !36
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !36
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !39, !noalias !36
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !39, !noalias !36
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !36
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !36
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !39, !noalias !36
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !39, !noalias !36
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !36
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !36
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !39, !noalias !36
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !39, !noalias !36
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !41

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !36
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !36
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !39, !noalias !36
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !39, !noalias !36
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !43

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !45

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !46

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #13
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #13
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #12
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !47
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !47
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !50, !noalias !47
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !50, !noalias !47
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !47
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !47
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !50, !noalias !47
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !50, !noalias !47
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !47
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !47
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !50, !noalias !47
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !50, !noalias !47
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !47
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !47
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !50, !noalias !47
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !50, !noalias !47
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !52

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !47
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !47
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !50, !noalias !47
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !50, !noalias !47
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !53

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !54

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !55

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !56
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !56
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !59, !noalias !56
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !59, !noalias !56
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !56
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !56
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !59, !noalias !56
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !59, !noalias !56
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !56
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !56
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !59, !noalias !56
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !59, !noalias !56
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !56
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !56
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !59, !noalias !56
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !59, !noalias !56
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !61

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !56
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !56
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !59, !noalias !56
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !59, !noalias !56
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !62

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !63

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !64

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #11
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #12
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !65
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !65
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !68, !noalias !65
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !68, !noalias !65
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !65
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !65
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !68, !noalias !65
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !68, !noalias !65
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !65
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !65
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !68, !noalias !65
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !68, !noalias !65
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !65
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !65
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !68, !noalias !65
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !68, !noalias !65
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !70

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !65
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !65
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !68, !noalias !65
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !68, !noalias !65
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !71

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !72

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !73

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !74

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !75

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !76

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !78
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !78
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !81, !noalias !78
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !81, !noalias !78
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !78
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !78
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !81, !noalias !78
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !81, !noalias !78
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !78
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !78
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !81, !noalias !78
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !81, !noalias !78
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !78
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !78
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !81, !noalias !78
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !81, !noalias !78
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !83

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !78
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !78
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !81, !noalias !78
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !81, !noalias !78
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !84

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !85

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !86

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #12
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.109"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string.109"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.net::URLRequestFtpJob"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.net::URLRequestFtpJob"*, i32)**
  %22 = load void (%"class.net::URLRequestFtpJob"*, i32)*, void (%"class.net::URLRequestFtpJob"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.net::URLRequestFtpJob"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.net::URLRequestFtpJob"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.net::URLRequestFtpJob"* %13, i32 %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare void @_ZN4base8internal18WeakReferenceOwner10InvalidateEv(%"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net17AuthChallengeInfoD1Ev(%"class.net::AuthChallengeInfo"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(184) %"class.net::AuthChallengeInfo"* @_ZN3net17AuthChallengeInfoaSERKS0_(%"class.net::AuthChallengeInfo"*, %"class.net::AuthChallengeInfo"* dereferenceable(184)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %0, i64 0, i32 0
  store i8 %4, i8* %5, align 8
  %6 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 1
  %8 = tail call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* %6, %"class.url::Origin"* dereferenceable(80) %7) #11
  %9 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 2
  %11 = icmp eq %"class.net::AuthChallengeInfo"* %0, %1
  br i1 %11, label %134, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::basic_string.109"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = bitcast %"class.std::__1::basic_string.109"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %16, label %31, label %21

21:                                               ; preds = %12
  br i1 %20, label %25, label %22

22:                                               ; preds = %21
  %23 = bitcast %"class.std::__1::basic_string.109"* %9 to i8*
  %24 = bitcast %"class.std::__1::basic_string.109"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #11
  br label %41

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string.109"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.109"* %9, i8* %27, i64 %29) #11
  br label %41

31:                                               ; preds = %12
  %32 = getelementptr inbounds %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::basic_string.109"* %10 to i8*
  %37 = zext i8 %19 to i64
  %38 = select i1 %20, i8* %33, i8* %36
  %39 = select i1 %20, i64 %35, i64 %37
  %40 = tail call dereferenceable(24) %"class.std::__1::basic_string.109"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.109"* %9, i8* %38, i64 %39) #11
  br label %41

41:                                               ; preds = %22, %25, %31
  %42 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %0, i64 0, i32 3
  %43 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 3
  %44 = bitcast %"class.std::__1::basic_string.109"* %42 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  %48 = bitcast %"class.std::__1::basic_string.109"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %47, label %62, label %52

52:                                               ; preds = %41
  br i1 %51, label %56, label %53

53:                                               ; preds = %52
  %54 = bitcast %"class.std::__1::basic_string.109"* %42 to i8*
  %55 = bitcast %"class.std::__1::basic_string.109"* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 24, i1 false) #11
  br label %72

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = tail call dereferenceable(24) %"class.std::__1::basic_string.109"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.109"* %42, i8* %58, i64 %60) #11
  br label %72

62:                                               ; preds = %41
  %63 = getelementptr inbounds %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::basic_string.109"* %43 to i8*
  %68 = zext i8 %50 to i64
  %69 = select i1 %51, i8* %64, i8* %67
  %70 = select i1 %51, i64 %66, i64 %68
  %71 = tail call dereferenceable(24) %"class.std::__1::basic_string.109"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.109"* %42, i8* %69, i64 %70) #11
  br label %72

72:                                               ; preds = %53, %56, %62
  %73 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %0, i64 0, i32 4
  %74 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 4
  %75 = bitcast %"class.std::__1::basic_string.109"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  %79 = bitcast %"class.std::__1::basic_string.109"* %74 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %78, label %93, label %83

83:                                               ; preds = %72
  br i1 %82, label %87, label %84

84:                                               ; preds = %83
  %85 = bitcast %"class.std::__1::basic_string.109"* %73 to i8*
  %86 = bitcast %"class.std::__1::basic_string.109"* %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %85, i8* align 8 %86, i64 24, i1 false) #11
  br label %103

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = tail call dereferenceable(24) %"class.std::__1::basic_string.109"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.109"* %73, i8* %89, i64 %91) #11
  br label %103

93:                                               ; preds = %72
  %94 = getelementptr inbounds %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  %96 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.std::__1::basic_string.109"* %74 to i8*
  %99 = zext i8 %81 to i64
  %100 = select i1 %82, i8* %95, i8* %98
  %101 = select i1 %82, i64 %97, i64 %99
  %102 = tail call dereferenceable(24) %"class.std::__1::basic_string.109"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.109"* %73, i8* %100, i64 %101) #11
  br label %103

103:                                              ; preds = %84, %87, %93
  %104 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %0, i64 0, i32 5
  %105 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 5
  %106 = bitcast %"class.std::__1::basic_string.109"* %104 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = bitcast %"class.std::__1::basic_string.109"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  br i1 %109, label %124, label %114

114:                                              ; preds = %103
  br i1 %113, label %118, label %115

115:                                              ; preds = %114
  %116 = bitcast %"class.std::__1::basic_string.109"* %104 to i8*
  %117 = bitcast %"class.std::__1::basic_string.109"* %105 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %116, i8* align 8 %117, i64 24, i1 false) #11
  br label %134

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load i8*, i8** %119, align 8
  %121 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = tail call dereferenceable(24) %"class.std::__1::basic_string.109"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.109"* %104, i8* %120, i64 %122) #11
  br label %134

124:                                              ; preds = %103
  %125 = getelementptr inbounds %"class.std::__1::basic_string.109", %"class.std::__1::basic_string.109"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  %127 = getelementptr inbounds %"class.net::AuthChallengeInfo", %"class.net::AuthChallengeInfo"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.std::__1::basic_string.109"* %105 to i8*
  %130 = zext i8 %112 to i64
  %131 = select i1 %113, i8* %126, i8* %129
  %132 = select i1 %113, i64 %128, i64 %130
  %133 = tail call dereferenceable(24) %"class.std::__1::basic_string.109"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.109"* %104, i8* %131, i64 %132) #11
  br label %134

134:                                              ; preds = %2, %115, %118, %124
  ret %"class.net::AuthChallengeInfo"* %0
}

declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.109"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.109"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.109"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.109"*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3net17AuthChallengeInfoC1ERKS0_(%"class.net::AuthChallengeInfo"*, %"class.net::AuthChallengeInfo"* dereferenceable(184)) unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16URLRequestFtpJobEFviEJNS_7WeakPtrIS4_EEiEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i32*
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %8 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #11
  br i1 %8, label %9, label %45

9:                                                ; preds = %1
  %10 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to %"class.net::URLRequestFtpJob"**
  %12 = load %"class.net::URLRequestFtpJob"*, %"class.net::URLRequestFtpJob"** %11, align 8
  %13 = icmp eq %"class.net::URLRequestFtpJob"* %12, null
  br i1 %13, label %45, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %18 = bitcast void ()** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #11
  br i1 %20, label %24, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #11
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  br label %24

24:                                               ; preds = %21, %14
  %25 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %7) #11
  %26 = bitcast void (%"class.base::internal::BindStateBase"*)** %10 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = select i1 %25, i8* %27, i8* null
  %29 = getelementptr inbounds i8, i8* %28, i64 %19
  %30 = bitcast i8* %29 to %"class.net::URLRequestFtpJob"*
  %31 = and i64 %16, 1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %24
  %34 = bitcast i8* %29 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = add i64 %16, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to void (%"class.net::URLRequestFtpJob"*, i32)**
  %39 = load void (%"class.net::URLRequestFtpJob"*, i32)*, void (%"class.net::URLRequestFtpJob"*, i32)** %38, align 8
  br label %42

40:                                               ; preds = %24
  %41 = inttoptr i64 %16 to void (%"class.net::URLRequestFtpJob"*, i32)*
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi void (%"class.net::URLRequestFtpJob"*, i32)* [ %39, %33 ], [ %41, %40 ]
  %44 = load i32, i32* %6, align 4
  call void %43(%"class.net::URLRequestFtpJob"* %30, i32 %44) #11
  br label %45

45:                                               ; preds = %1, %9, %42
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net16URLRequestFtpJobEFviEJNS_7WeakPtrIS3_EEiEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #11
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #12
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net16URLRequestFtpJobEFviEJNS_7WeakPtrIS4_EEiEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #11
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::URLRequestFtpJob"**
  %9 = load %"class.net::URLRequestFtpJob"*, %"class.net::URLRequestFtpJob"** %8, align 8
  %10 = icmp ne %"class.net::URLRequestFtpJob"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #11
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN3net17AuthChallengeInfoC1Ev(%"class.net::AuthChallengeInfo"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base8BindOnceIMN3net16URLRequestFtpJobEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8BindOnceIMN3net16URLRequestFtpJobEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK4base14WeakPtrFactoryIN3net16URLRequestFtpJobEE10GetWeakPtrEv: argument 0"}
!10 = distinct !{!10, !"_ZNK4base14WeakPtrFactoryIN3net16URLRequestFtpJobEE10GetWeakPtrEv"}
!11 = !{!12, !14}
!12 = distinct !{!12, !13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16URLRequestFtpJobEFviEJNS_7WeakPtrIS4_EERiEEEDcOT0_DpOT1_: argument 0"}
!13 = distinct !{!13, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16URLRequestFtpJobEFviEJNS_7WeakPtrIS4_EERiEEEDcOT0_DpOT1_"}
!14 = distinct !{!14, !15, !"_ZN4base8BindOnceIMN3net16URLRequestFtpJobEFviEJNS_7WeakPtrIS2_EERiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8BindOnceIMN3net16URLRequestFtpJobEFviEJNS_7WeakPtrIS2_EERiEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!16 = !{!17, !19}
!17 = distinct !{!17, !18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!19 = distinct !{!19, !20, !"_ZN4base8BindOnceIMN3net16URLRequestFtpJobEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8BindOnceIMN3net16URLRequestFtpJobEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!21 = !{!22, !24}
!22 = distinct !{!22, !23, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!23 = distinct !{!23, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!24 = distinct !{!24, !25, !"_ZN4base8BindOnceIMN3net16URLRequestFtpJobEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!25 = distinct !{!25, !"_ZN4base8BindOnceIMN3net16URLRequestFtpJobEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!26 = !{!27, !29}
!27 = distinct !{!27, !28, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!29 = distinct !{!29, !30, !"_ZN4base8BindOnceIMN3net16URLRequestFtpJobEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!30 = distinct !{!30, !"_ZN4base8BindOnceIMN3net16URLRequestFtpJobEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!31 = !{!32, !34}
!32 = distinct !{!32, !33, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!33 = distinct !{!33, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16URLRequestFtpJobEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!34 = distinct !{!34, !35, !"_ZN4base8BindOnceIMN3net16URLRequestFtpJobEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!35 = distinct !{!35, !"_ZN4base8BindOnceIMN3net16URLRequestFtpJobEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!36 = !{!37}
!37 = distinct !{!37, !38}
!38 = distinct !{!38, !"LVerDomain"}
!39 = !{!40}
!40 = distinct !{!40, !38}
!41 = distinct !{!41, !42}
!42 = !{!"llvm.loop.isvectorized", i32 1}
!43 = distinct !{!43, !44}
!44 = !{!"llvm.loop.unroll.disable"}
!45 = distinct !{!45, !44}
!46 = distinct !{!46, !42}
!47 = !{!48}
!48 = distinct !{!48, !49}
!49 = distinct !{!49, !"LVerDomain"}
!50 = !{!51}
!51 = distinct !{!51, !49}
!52 = distinct !{!52, !42}
!53 = distinct !{!53, !44}
!54 = distinct !{!54, !44}
!55 = distinct !{!55, !42}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !42}
!62 = distinct !{!62, !44}
!63 = distinct !{!63, !44}
!64 = distinct !{!64, !42}
!65 = !{!66}
!66 = distinct !{!66, !67}
!67 = distinct !{!67, !"LVerDomain"}
!68 = !{!69}
!69 = distinct !{!69, !67}
!70 = distinct !{!70, !42}
!71 = distinct !{!71, !44}
!72 = distinct !{!72, !44}
!73 = distinct !{!73, !42}
!74 = distinct !{!74, !42}
!75 = distinct !{!75, !44}
!76 = distinct !{!76, !77, !42}
!77 = !{!"llvm.loop.unroll.runtime.disable"}
!78 = !{!79}
!79 = distinct !{!79, !80}
!80 = distinct !{!80, !"LVerDomain"}
!81 = !{!82}
!82 = distinct !{!82, !80}
!83 = distinct !{!83, !42}
!84 = distinct !{!84, !44}
!85 = distinct !{!85, !44}
!86 = distinct !{!86, !42}
