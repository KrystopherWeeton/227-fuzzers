; ModuleID = '../../ui/gfx/font.cc'
source_filename = "../../ui/gfx/font.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gfx::Font" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::PlatformFont"* }
%"class.gfx::PlatformFont" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.gfx::FontRenderParams" = type { i8, i8, i8, i8, i32, i32 }

@_ZZN3gfx17FontWeightFromIntEiE7weights = internal constant [10 x i32] [i32 -1, i32 100, i32 200, i32 300, i32 400, i32 500, i32 600, i32 700, i32 800, i32 900], align 16

@_ZN3gfx4FontC1Ev = hidden unnamed_addr alias void (%"class.gfx::Font"*), void (%"class.gfx::Font"*)* @_ZN3gfx4FontC2Ev
@_ZN3gfx4FontC1ERKS0_ = hidden unnamed_addr alias void (%"class.gfx::Font"*, %"class.gfx::Font"*), void (%"class.gfx::Font"*, %"class.gfx::Font"*)* @_ZN3gfx4FontC2ERKS0_
@_ZN3gfx4FontC1EPNS_12PlatformFontE = hidden unnamed_addr alias void (%"class.gfx::Font"*, %"class.gfx::PlatformFont"*), void (%"class.gfx::Font"*, %"class.gfx::PlatformFont"*)* @_ZN3gfx4FontC2EPNS_12PlatformFontE
@_ZN3gfx4FontC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi = hidden unnamed_addr alias void (%"class.gfx::Font"*, %"class.std::__1::basic_string"*, i32), void (%"class.gfx::Font"*, %"class.std::__1::basic_string"*, i32)* @_ZN3gfx4FontC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi
@_ZN3gfx4FontD1Ev = hidden unnamed_addr alias void (%"class.gfx::Font"*), void (%"class.gfx::Font"*)* @_ZN3gfx4FontD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx4FontC2Ev(%"class.gfx::Font"* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call %"class.gfx::PlatformFont"* @_ZN3gfx12PlatformFont13CreateDefaultEv() #3
  %3 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %0, i64 0, i32 0, i32 0
  store %"class.gfx::PlatformFont"* %2, %"class.gfx::PlatformFont"** %3, align 8
  %4 = icmp eq %"class.gfx::PlatformFont"* %2, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gfx::PlatformFont", %"class.gfx::PlatformFont"* %2, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %6) #3
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

declare %"class.gfx::PlatformFont"* @_ZN3gfx12PlatformFont13CreateDefaultEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx4FontC2ERKS0_(%"class.gfx::Font"* nocapture, %"class.gfx::Font"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.gfx::PlatformFont"*, %"class.gfx::PlatformFont"** %3, align 8
  %5 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %0, i64 0, i32 0, i32 0
  store %"class.gfx::PlatformFont"* %4, %"class.gfx::PlatformFont"** %5, align 8
  %6 = icmp eq %"class.gfx::PlatformFont"* %4, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.gfx::PlatformFont", %"class.gfx::PlatformFont"* %4, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %8) #3
  br label %9

9:                                                ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.gfx::Font"* @_ZN3gfx4FontaSERKS0_(%"class.gfx::Font"* returned, %"class.gfx::Font"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.gfx::PlatformFont"*, %"class.gfx::PlatformFont"** %3, align 8
  %5 = icmp eq %"class.gfx::PlatformFont"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gfx::PlatformFont", %"class.gfx::PlatformFont"* %4, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %7) #3
  br label %8

8:                                                ; preds = %2, %6
  %9 = ptrtoint %"class.gfx::PlatformFont"* %4 to i64
  %10 = bitcast %"class.gfx::Font"* %0 to i64*
  %11 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %0, i64 0, i32 0, i32 0
  %12 = load %"class.gfx::PlatformFont"*, %"class.gfx::PlatformFont"** %11, align 8
  store i64 %9, i64* %10, align 8
  %13 = icmp eq %"class.gfx::PlatformFont"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.gfx::PlatformFont", %"class.gfx::PlatformFont"* %12, i64 0, i32 1
  %16 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %16) #3
  %17 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %27

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %15, i64 -2
  %22 = bitcast %"class.base::RefCounted"* %21 to %"class.gfx::PlatformFont"*
  %23 = bitcast %"class.base::RefCounted"* %21 to void (%"class.gfx::PlatformFont"*)***
  %24 = load void (%"class.gfx::PlatformFont"*)**, void (%"class.gfx::PlatformFont"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.gfx::PlatformFont"*)*, void (%"class.gfx::PlatformFont"*)** %24, i64 13
  %26 = load void (%"class.gfx::PlatformFont"*)*, void (%"class.gfx::PlatformFont"*)** %25, align 8
  tail call void %26(%"class.gfx::PlatformFont"* nonnull %22) #3
  br label %27

27:                                               ; preds = %8, %14, %20
  ret %"class.gfx::Font"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx4FontC2EPNS_12PlatformFontE(%"class.gfx::Font"* nocapture, %"class.gfx::PlatformFont"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %0, i64 0, i32 0, i32 0
  store %"class.gfx::PlatformFont"* %1, %"class.gfx::PlatformFont"** %3, align 8
  %4 = icmp eq %"class.gfx::PlatformFont"* %1, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.gfx::PlatformFont", %"class.gfx::PlatformFont"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %6) #3
  br label %7

7:                                                ; preds = %2, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx4FontC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.gfx::Font"* nocapture, %"class.std::__1::basic_string"* dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %4 = tail call %"class.gfx::PlatformFont"* @_ZN3gfx12PlatformFont21CreateFromNameAndSizeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* dereferenceable(24) %1, i32 %2) #3
  %5 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %0, i64 0, i32 0, i32 0
  store %"class.gfx::PlatformFont"* %4, %"class.gfx::PlatformFont"** %5, align 8
  %6 = icmp eq %"class.gfx::PlatformFont"* %4, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.gfx::PlatformFont", %"class.gfx::PlatformFont"* %4, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %8) #3
  br label %9

9:                                                ; preds = %3, %7
  ret void
}

declare %"class.gfx::PlatformFont"* @_ZN3gfx12PlatformFont21CreateFromNameAndSizeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx4FontD2Ev(%"class.gfx::Font"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.gfx::PlatformFont"*, %"class.gfx::PlatformFont"** %2, align 8
  %4 = icmp eq %"class.gfx::PlatformFont"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gfx::PlatformFont", %"class.gfx::PlatformFont"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %6, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #3
  %8 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %6, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %18

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %6, i64 -2
  %13 = bitcast %"class.base::RefCounted"* %12 to %"class.gfx::PlatformFont"*
  %14 = bitcast %"class.base::RefCounted"* %12 to void (%"class.gfx::PlatformFont"*)***
  %15 = load void (%"class.gfx::PlatformFont"*)**, void (%"class.gfx::PlatformFont"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.gfx::PlatformFont"*)*, void (%"class.gfx::PlatformFont"*)** %15, i64 13
  %17 = load void (%"class.gfx::PlatformFont"*)*, void (%"class.gfx::PlatformFont"*)** %16, align 8
  tail call void %17(%"class.gfx::PlatformFont"* nonnull %13) #3
  br label %18

18:                                               ; preds = %1, %5, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx4Font6DeriveEiiNS0_6WeightE(%"class.gfx::Font"* noalias sret, %"class.gfx::Font"* nocapture readonly, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = icmp eq i32 %2, 0
  br i1 %6, label %7, label %30

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.gfx::PlatformFont"*, %"class.gfx::PlatformFont"** %8, align 8
  %10 = bitcast %"class.gfx::PlatformFont"* %9 to i32 (%"class.gfx::PlatformFont"*)***
  %11 = load i32 (%"class.gfx::PlatformFont"*)**, i32 (%"class.gfx::PlatformFont"*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.gfx::PlatformFont"*)*, i32 (%"class.gfx::PlatformFont"*)** %11, i64 6
  %13 = load i32 (%"class.gfx::PlatformFont"*)*, i32 (%"class.gfx::PlatformFont"*)** %12, align 8
  %14 = tail call i32 %13(%"class.gfx::PlatformFont"* %9) #3
  %15 = icmp eq i32 %14, %3
  br i1 %15, label %16, label %30

16:                                               ; preds = %7
  %17 = load %"class.gfx::PlatformFont"*, %"class.gfx::PlatformFont"** %8, align 8
  %18 = bitcast %"class.gfx::PlatformFont"* %17 to i32 (%"class.gfx::PlatformFont"*)***
  %19 = load i32 (%"class.gfx::PlatformFont"*)**, i32 (%"class.gfx::PlatformFont"*)*** %18, align 8
  %20 = getelementptr inbounds i32 (%"class.gfx::PlatformFont"*)*, i32 (%"class.gfx::PlatformFont"*)** %19, i64 2
  %21 = load i32 (%"class.gfx::PlatformFont"*)*, i32 (%"class.gfx::PlatformFont"*)** %20, align 8
  %22 = tail call i32 %21(%"class.gfx::PlatformFont"* %17) #3
  %23 = icmp eq i32 %22, %4
  br i1 %23, label %24, label %30

24:                                               ; preds = %16
  %25 = load %"class.gfx::PlatformFont"*, %"class.gfx::PlatformFont"** %8, align 8
  %26 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %0, i64 0, i32 0, i32 0
  store %"class.gfx::PlatformFont"* %25, %"class.gfx::PlatformFont"** %26, align 8
  %27 = icmp eq %"class.gfx::PlatformFont"* %25, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.gfx::PlatformFont", %"class.gfx::PlatformFont"* %25, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %29) #3
  br label %36

30:                                               ; preds = %16, %7, %5
  %31 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %1, i64 0, i32 0, i32 0
  %32 = load %"class.gfx::PlatformFont"*, %"class.gfx::PlatformFont"** %31, align 8
  %33 = bitcast %"class.gfx::PlatformFont"* %32 to void (%"class.gfx::Font"*, %"class.gfx::PlatformFont"*, i32, i32, i32)***
  %34 = load void (%"class.gfx::Font"*, %"class.gfx::PlatformFont"*, i32, i32, i32)**, void (%"class.gfx::Font"*, %"class.gfx::PlatformFont"*, i32, i32, i32)*** %33, align 8
  %35 = load void (%"class.gfx::Font"*, %"class.gfx::PlatformFont"*, i32, i32, i32)*, void (%"class.gfx::Font"*, %"class.gfx::PlatformFont"*, i32, i32, i32)** %34, align 8
  tail call void %35(%"class.gfx::Font"* sret %0, %"class.gfx::PlatformFont"* %32, i32 %2, i32 %3, i32 %4) #3
  br label %36

36:                                               ; preds = %28, %24, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3gfx4Font8GetStyleEv(%"class.gfx::Font"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.gfx::PlatformFont"*, %"class.gfx::PlatformFont"** %2, align 8
  %4 = bitcast %"class.gfx::PlatformFont"* %3 to i32 (%"class.gfx::PlatformFont"*)***
  %5 = load i32 (%"class.gfx::PlatformFont"*)**, i32 (%"class.gfx::PlatformFont"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.gfx::PlatformFont"*)*, i32 (%"class.gfx::PlatformFont"*)** %5, i64 6
  %7 = load i32 (%"class.gfx::PlatformFont"*)*, i32 (%"class.gfx::PlatformFont"*)** %6, align 8
  %8 = tail call i32 %7(%"class.gfx::PlatformFont"* %3) #3
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3gfx4Font9GetWeightEv(%"class.gfx::Font"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.gfx::PlatformFont"*, %"class.gfx::PlatformFont"** %2, align 8
  %4 = bitcast %"class.gfx::PlatformFont"* %3 to i32 (%"class.gfx::PlatformFont"*)***
  %5 = load i32 (%"class.gfx::PlatformFont"*)**, i32 (%"class.gfx::PlatformFont"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.gfx::PlatformFont"*)*, i32 (%"class.gfx::PlatformFont"*)** %5, i64 2
  %7 = load i32 (%"class.gfx::PlatformFont"*)*, i32 (%"class.gfx::PlatformFont"*)** %6, align 8
  %8 = tail call i32 %7(%"class.gfx::PlatformFont"* %3) #3
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3gfx4Font9GetHeightEv(%"class.gfx::Font"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.gfx::PlatformFont"*, %"class.gfx::PlatformFont"** %2, align 8
  %4 = bitcast %"class.gfx::PlatformFont"* %3 to i32 (%"class.gfx::PlatformFont"*)***
  %5 = load i32 (%"class.gfx::PlatformFont"*)**, i32 (%"class.gfx::PlatformFont"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.gfx::PlatformFont"*)*, i32 (%"class.gfx::PlatformFont"*)** %5, i64 1
  %7 = load i32 (%"class.gfx::PlatformFont"*)*, i32 (%"class.gfx::PlatformFont"*)** %6, align 8
  %8 = tail call i32 %7(%"class.gfx::PlatformFont"* %3) #3
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3gfx4Font11GetBaselineEv(%"class.gfx::Font"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.gfx::PlatformFont"*, %"class.gfx::PlatformFont"** %2, align 8
  %4 = bitcast %"class.gfx::PlatformFont"* %3 to i32 (%"class.gfx::PlatformFont"*)***
  %5 = load i32 (%"class.gfx::PlatformFont"*)**, i32 (%"class.gfx::PlatformFont"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.gfx::PlatformFont"*)*, i32 (%"class.gfx::PlatformFont"*)** %5, i64 3
  %7 = load i32 (%"class.gfx::PlatformFont"*)*, i32 (%"class.gfx::PlatformFont"*)** %6, align 8
  %8 = tail call i32 %7(%"class.gfx::PlatformFont"* %3) #3
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3gfx4Font12GetCapHeightEv(%"class.gfx::Font"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.gfx::PlatformFont"*, %"class.gfx::PlatformFont"** %2, align 8
  %4 = bitcast %"class.gfx::PlatformFont"* %3 to i32 (%"class.gfx::PlatformFont"*)***
  %5 = load i32 (%"class.gfx::PlatformFont"*)**, i32 (%"class.gfx::PlatformFont"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.gfx::PlatformFont"*)*, i32 (%"class.gfx::PlatformFont"*)** %5, i64 4
  %7 = load i32 (%"class.gfx::PlatformFont"*)*, i32 (%"class.gfx::PlatformFont"*)** %6, align 8
  %8 = tail call i32 %7(%"class.gfx::PlatformFont"* %3) #3
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3gfx4Font20GetExpectedTextWidthEi(%"class.gfx::Font"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.gfx::PlatformFont"*, %"class.gfx::PlatformFont"** %3, align 8
  %5 = bitcast %"class.gfx::PlatformFont"* %4 to i32 (%"class.gfx::PlatformFont"*, i32)***
  %6 = load i32 (%"class.gfx::PlatformFont"*, i32)**, i32 (%"class.gfx::PlatformFont"*, i32)*** %5, align 8
  %7 = getelementptr inbounds i32 (%"class.gfx::PlatformFont"*, i32)*, i32 (%"class.gfx::PlatformFont"*, i32)** %6, i64 5
  %8 = load i32 (%"class.gfx::PlatformFont"*, i32)*, i32 (%"class.gfx::PlatformFont"*, i32)** %7, align 8
  %9 = tail call i32 %8(%"class.gfx::PlatformFont"* %4, i32 %1) #3
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK3gfx4Font11GetFontNameEv(%"class.gfx::Font"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.gfx::PlatformFont"*, %"class.gfx::PlatformFont"** %2, align 8
  %4 = bitcast %"class.gfx::PlatformFont"* %3 to %"class.std::__1::basic_string"* (%"class.gfx::PlatformFont"*)***
  %5 = load %"class.std::__1::basic_string"* (%"class.gfx::PlatformFont"*)**, %"class.std::__1::basic_string"* (%"class.gfx::PlatformFont"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_string"* (%"class.gfx::PlatformFont"*)*, %"class.std::__1::basic_string"* (%"class.gfx::PlatformFont"*)** %5, i64 7
  %7 = load %"class.std::__1::basic_string"* (%"class.gfx::PlatformFont"*)*, %"class.std::__1::basic_string"* (%"class.gfx::PlatformFont"*)** %6, align 8
  %8 = tail call dereferenceable(24) %"class.std::__1::basic_string"* %7(%"class.gfx::PlatformFont"* %3) #3
  ret %"class.std::__1::basic_string"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx4Font17GetActualFontNameEv(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::Font"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.gfx::PlatformFont"*, %"class.gfx::PlatformFont"** %3, align 8
  %5 = bitcast %"class.gfx::PlatformFont"* %4 to void (%"class.std::__1::basic_string"*, %"class.gfx::PlatformFont"*)***
  %6 = load void (%"class.std::__1::basic_string"*, %"class.gfx::PlatformFont"*)**, void (%"class.std::__1::basic_string"*, %"class.gfx::PlatformFont"*)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.std::__1::basic_string"*, %"class.gfx::PlatformFont"*)*, void (%"class.std::__1::basic_string"*, %"class.gfx::PlatformFont"*)** %6, i64 8
  %8 = load void (%"class.std::__1::basic_string"*, %"class.gfx::PlatformFont"*)*, void (%"class.std::__1::basic_string"*, %"class.gfx::PlatformFont"*)** %7, align 8
  tail call void %8(%"class.std::__1::basic_string"* sret %0, %"class.gfx::PlatformFont"* %4) #3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3gfx4Font11GetFontSizeEv(%"class.gfx::Font"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.gfx::PlatformFont"*, %"class.gfx::PlatformFont"** %2, align 8
  %4 = bitcast %"class.gfx::PlatformFont"* %3 to i32 (%"class.gfx::PlatformFont"*)***
  %5 = load i32 (%"class.gfx::PlatformFont"*)**, i32 (%"class.gfx::PlatformFont"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.gfx::PlatformFont"*)*, i32 (%"class.gfx::PlatformFont"*)** %5, i64 9
  %7 = load i32 (%"class.gfx::PlatformFont"*)*, i32 (%"class.gfx::PlatformFont"*)** %6, align 8
  %8 = tail call i32 %7(%"class.gfx::PlatformFont"* %3) #3
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(12) %"struct.gfx::FontRenderParams"* @_ZNK3gfx4Font19GetFontRenderParamsEv(%"class.gfx::Font"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::Font", %"class.gfx::Font"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.gfx::PlatformFont"*, %"class.gfx::PlatformFont"** %2, align 8
  %4 = bitcast %"class.gfx::PlatformFont"* %3 to %"struct.gfx::FontRenderParams"* (%"class.gfx::PlatformFont"*)***
  %5 = load %"struct.gfx::FontRenderParams"* (%"class.gfx::PlatformFont"*)**, %"struct.gfx::FontRenderParams"* (%"class.gfx::PlatformFont"*)*** %4, align 8
  %6 = getelementptr inbounds %"struct.gfx::FontRenderParams"* (%"class.gfx::PlatformFont"*)*, %"struct.gfx::FontRenderParams"* (%"class.gfx::PlatformFont"*)** %5, i64 10
  %7 = load %"struct.gfx::FontRenderParams"* (%"class.gfx::PlatformFont"*)*, %"struct.gfx::FontRenderParams"* (%"class.gfx::PlatformFont"*)** %6, align 8
  %8 = tail call dereferenceable(12) %"struct.gfx::FontRenderParams"* %7(%"class.gfx::PlatformFont"* %3) #3
  ret %"struct.gfx::FontRenderParams"* %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN3gfx17FontWeightFromIntEi(i32) local_unnamed_addr #2 {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi i64 [ 10, %1 ], [ %13, %2 ]
  %4 = phi i32* [ getelementptr inbounds ([10 x i32], [10 x i32]* @_ZZN3gfx17FontWeightFromIntEiE7weights, i64 0, i64 0), %1 ], [ %12, %2 ]
  %5 = lshr i64 %3, 1
  %6 = getelementptr inbounds i32, i32* %4, i64 %5
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, %0
  %9 = getelementptr inbounds i32, i32* %6, i64 1
  %10 = xor i64 %5, -1
  %11 = add i64 %3, %10
  %12 = select i1 %8, i32* %9, i32* %4
  %13 = select i1 %8, i64 %11, i64 %5
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %2

15:                                               ; preds = %2
  %16 = icmp eq i32* %12, getelementptr inbounds ([10 x i32], [10 x i32]* @_ZZN3gfx17FontWeightFromIntEiE7weights, i64 1, i64 0)
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = load i32, i32* %12, align 4
  br label %19

19:                                               ; preds = %15, %17
  %20 = phi i32 [ %18, %17 ], [ -1, %15 ]
  ret i32 %20
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
