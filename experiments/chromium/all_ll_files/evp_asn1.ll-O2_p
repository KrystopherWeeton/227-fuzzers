; ModuleID = '../../third_party/boringssl/src/crypto/evp/evp_asn1.c'
source_filename = "../../third_party/boringssl/src/crypto/evp/evp_asn1.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.evp_pkey_asn1_method_st = type { i32, [9 x i8], i8, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*, i8*, i64*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, i32 (%struct.evp_pkey_st*, %struct.evp_pkey_st*)*, void (%struct.evp_pkey_st*)* }
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.cbs_st = type { i8*, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%struct.ec_key_st = type opaque
%struct.ec_group_st = type opaque
%struct.dsa_st = type { i64, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, i32, %union.crypto_mutex_st, %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st*, i32, %struct.crypto_ex_data_st }
%struct.bignum_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.bn_mont_ctx_st = type opaque
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.rsa_st = type { %struct.rsa_meth_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.crypto_ex_data_st, i32, i32, %union.crypto_mutex_st, %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st*, %struct.bn_mont_ctx_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, %struct.bignum_st*, i32, %struct.bn_blinding_st**, i8*, i64, i8 }
%struct.rsa_meth_st = type { %struct.openssl_method_common_st, i8*, i32 (%struct.rsa_st*)*, i32 (%struct.rsa_st*)*, i64 (%struct.rsa_st*)*, i32 (i32, i8*, i32, i8*, i32*, %struct.rsa_st*)*, i32 (%struct.rsa_st*, i64*, i8*, i64, i8*, i64, i32)*, i32 (%struct.rsa_st*, i64*, i8*, i64, i8*, i64, i32)*, i32 (%struct.rsa_st*, i8*, i8*, i64)*, i32 }
%struct.openssl_method_common_st = type { i32, i8 }
%struct.bn_blinding_st = type opaque

@.str = private unnamed_addr constant [54 x i8] c"../../third_party/boringssl/src/crypto/evp/evp_asn1.c\00", align 1
@rsa_asn1_meth = external constant %struct.evp_pkey_asn1_method_st, align 8
@ec_asn1_meth = external constant %struct.evp_pkey_asn1_method_st, align 8
@dsa_asn1_meth = external constant %struct.evp_pkey_asn1_method_st, align 8
@ed25519_asn1_meth = external constant %struct.evp_pkey_asn1_method_st, align 8
@x25519_asn1_meth = external constant %struct.evp_pkey_asn1_method_st, align 8

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_st* @EVP_parse_public_key(%struct.cbs_st*) local_unnamed_addr #0 {
  %2 = alloca %struct.cbs_st, align 8
  %3 = alloca %struct.cbs_st, align 8
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = bitcast %struct.cbs_st* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #4
  %8 = bitcast %struct.cbs_st* %3 to i8*
  %9 = bitcast %struct.cbs_st* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #4
  %10 = bitcast %struct.cbs_st* %4 to i8*
  %11 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #4
  %12 = bitcast i32* %5 to i8*
  %13 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #4
  store i32 -1431655766, i32* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #4
  store i8 -86, i8* %6, align 1
  %14 = call i32 @CBS_get_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %2, i32 536870928) #4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %1
  %17 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %3, i32 536870928) #4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %4, i32 3) #4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %19
  %23 = call i64 @CBS_len(%struct.cbs_st* nonnull %2) #4
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %22, %19, %16, %1
  call void @ERR_put_error(i32 6, i32 0, i32 102, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 107) #4
  br label %55

26:                                               ; preds = %22
  %27 = call fastcc i32 @parse_key_type(%struct.cbs_st* nonnull %3, i32* nonnull %5)
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @ERR_put_error(i32 6, i32 0, i32 128, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 111) #4
  br label %55

30:                                               ; preds = %26
  %31 = call i32 @CBS_get_u8(%struct.cbs_st* nonnull %4, i8* nonnull %6) #4
  %32 = icmp ne i32 %31, 0
  %33 = load i8, i8* %6, align 1
  %34 = icmp eq i8 %33, 0
  %35 = and i1 %32, %34
  br i1 %35, label %37, label %36

36:                                               ; preds = %30
  call void @ERR_put_error(i32 6, i32 0, i32 102, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 118) #4
  br label %55

37:                                               ; preds = %30
  %38 = call %struct.evp_pkey_st* @EVP_PKEY_new() #4
  %39 = icmp eq %struct.evp_pkey_st* %38, null
  br i1 %39, label %54, label %40

40:                                               ; preds = %37
  %41 = load i32, i32* %5, align 4
  %42 = call i32 @EVP_PKEY_set_type(%struct.evp_pkey_st* nonnull %38, i32 %41) #4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %54, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %38, i64 0, i32 3
  %46 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %45, align 8
  %47 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %46, i64 0, i32 3
  %48 = load i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)** %47, align 8
  %49 = icmp eq i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)* %48, null
  br i1 %49, label %50, label %51

50:                                               ; preds = %44
  call void @ERR_put_error(i32 6, i32 0, i32 128, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 131) #4
  br label %54

51:                                               ; preds = %44
  %52 = call i32 %48(%struct.evp_pkey_st* nonnull %38, %struct.cbs_st* nonnull %3, %struct.cbs_st* nonnull %4) #4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51, %40, %37, %50
  call void @EVP_PKEY_free(%struct.evp_pkey_st* %38) #4
  br label %55

55:                                               ; preds = %54, %51, %36, %29, %25
  %56 = phi %struct.evp_pkey_st* [ null, %25 ], [ null, %36 ], [ null, %29 ], [ null, %54 ], [ %38, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #4
  ret %struct.evp_pkey_st* %56
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @CBS_get_asn1(%struct.cbs_st*, %struct.cbs_st*, i32) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @parse_key_type(%struct.cbs_st*, i32* nocapture) unnamed_addr #0 {
  %3 = alloca %struct.cbs_st, align 8
  %4 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #4
  %5 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false)
  %6 = call i32 @CBS_get_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %3, i32 6) #4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %28, label %8

8:                                                ; preds = %2
  %9 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #4
  %10 = load i8, i8* getelementptr inbounds (%struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* @rsa_asn1_meth, i64 0, i32 2), align 1
  %11 = zext i8 %10 to i64
  %12 = icmp eq i64 %9, %11
  br i1 %12, label %13, label %19

13:                                               ; preds = %8
  %14 = call i8* @CBS_data(%struct.cbs_st* nonnull %3) #4
  %15 = icmp eq i8 %10, 0
  br i1 %15, label %24, label %16

16:                                               ; preds = %13
  %17 = call i32 @bcmp(i8* %14, i8* getelementptr inbounds (%struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* @rsa_asn1_meth, i64 0, i32 1, i64 0), i64 %9)
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %16, %8
  %20 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #4
  %21 = load i8, i8* getelementptr inbounds (%struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* @ec_asn1_meth, i64 0, i32 2), align 1
  %22 = zext i8 %21 to i64
  %23 = icmp eq i64 %20, %22
  br i1 %23, label %30, label %36

24:                                               ; preds = %66, %63, %55, %52, %44, %41, %33, %30, %13, %16
  %25 = phi %struct.evp_pkey_asn1_method_st* [ @rsa_asn1_meth, %13 ], [ @rsa_asn1_meth, %16 ], [ @ec_asn1_meth, %30 ], [ @ec_asn1_meth, %33 ], [ @dsa_asn1_meth, %41 ], [ @dsa_asn1_meth, %44 ], [ @ed25519_asn1_meth, %52 ], [ @ed25519_asn1_meth, %55 ], [ @x25519_asn1_meth, %63 ], [ @x25519_asn1_meth, %66 ]
  %26 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %25, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %1, align 4
  br label %28

28:                                               ; preds = %58, %66, %24, %2
  %29 = phi i32 [ 0, %2 ], [ 1, %24 ], [ 0, %66 ], [ 0, %58 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #4
  ret i32 %29

30:                                               ; preds = %19
  %31 = call i8* @CBS_data(%struct.cbs_st* nonnull %3) #4
  %32 = icmp eq i8 %21, 0
  br i1 %32, label %24, label %33

33:                                               ; preds = %30
  %34 = call i32 @bcmp(i8* %31, i8* getelementptr inbounds (%struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* @ec_asn1_meth, i64 0, i32 1, i64 0), i64 %20)
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %24, label %36

36:                                               ; preds = %33, %19
  %37 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #4
  %38 = load i8, i8* getelementptr inbounds (%struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* @dsa_asn1_meth, i64 0, i32 2), align 1
  %39 = zext i8 %38 to i64
  %40 = icmp eq i64 %37, %39
  br i1 %40, label %41, label %47

41:                                               ; preds = %36
  %42 = call i8* @CBS_data(%struct.cbs_st* nonnull %3) #4
  %43 = icmp eq i8 %38, 0
  br i1 %43, label %24, label %44

44:                                               ; preds = %41
  %45 = call i32 @bcmp(i8* %42, i8* getelementptr inbounds (%struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* @dsa_asn1_meth, i64 0, i32 1, i64 0), i64 %37)
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %24, label %47

47:                                               ; preds = %44, %36
  %48 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #4
  %49 = load i8, i8* getelementptr inbounds (%struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* @ed25519_asn1_meth, i64 0, i32 2), align 1
  %50 = zext i8 %49 to i64
  %51 = icmp eq i64 %48, %50
  br i1 %51, label %52, label %58

52:                                               ; preds = %47
  %53 = call i8* @CBS_data(%struct.cbs_st* nonnull %3) #4
  %54 = icmp eq i8 %49, 0
  br i1 %54, label %24, label %55

55:                                               ; preds = %52
  %56 = call i32 @bcmp(i8* %53, i8* getelementptr inbounds (%struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* @ed25519_asn1_meth, i64 0, i32 1, i64 0), i64 %48)
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %24, label %58

58:                                               ; preds = %55, %47
  %59 = call i64 @CBS_len(%struct.cbs_st* nonnull %3) #4
  %60 = load i8, i8* getelementptr inbounds (%struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* @x25519_asn1_meth, i64 0, i32 2), align 1
  %61 = zext i8 %60 to i64
  %62 = icmp eq i64 %59, %61
  br i1 %62, label %63, label %28

63:                                               ; preds = %58
  %64 = call i8* @CBS_data(%struct.cbs_st* nonnull %3) #4
  %65 = icmp eq i8 %60, 0
  br i1 %65, label %24, label %66

66:                                               ; preds = %63
  %67 = call i32 @bcmp(i8* %64, i8* getelementptr inbounds (%struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* @x25519_asn1_meth, i64 0, i32 1, i64 0), i64 %59)
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %24, label %28
}

declare i32 @CBS_get_u8(%struct.cbs_st*, i8*) local_unnamed_addr #2

declare %struct.evp_pkey_st* @EVP_PKEY_new() local_unnamed_addr #2

declare i32 @EVP_PKEY_set_type(%struct.evp_pkey_st*, i32) local_unnamed_addr #2

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_marshal_public_key(%struct.cbb_st*, %struct.evp_pkey_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 3
  %4 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %3, align 8
  %5 = icmp eq %struct.evp_pkey_asn1_method_st* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %4, i64 0, i32 4
  %8 = load i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)** %7, align 8
  %9 = icmp eq i32 (%struct.cbb_st*, %struct.evp_pkey_st*)* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %6, %2
  tail call void @ERR_put_error(i32 6, i32 0, i32 128, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 147) #4
  br label %13

11:                                               ; preds = %6
  %12 = tail call i32 %8(%struct.cbb_st* %0, %struct.evp_pkey_st* %1) #4
  br label %13

13:                                               ; preds = %11, %10
  %14 = phi i32 [ 0, %10 ], [ %12, %11 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_st* @EVP_parse_private_key(%struct.cbs_st*) local_unnamed_addr #0 {
  %2 = alloca %struct.cbs_st, align 8
  %3 = alloca %struct.cbs_st, align 8
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = bitcast %struct.cbs_st* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #4
  %8 = bitcast %struct.cbs_st* %3 to i8*
  %9 = bitcast %struct.cbs_st* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #4
  %10 = bitcast %struct.cbs_st* %4 to i8*
  %11 = bitcast %struct.cbs_st* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #4
  %12 = bitcast i64* %5 to i8*
  %13 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #4
  store i64 -6148914691236517206, i64* %5, align 8
  %14 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #4
  store i32 -1431655766, i32* %6, align 4
  %15 = call i32 @CBS_get_asn1(%struct.cbs_st* %0, %struct.cbs_st* nonnull %2, i32 536870928) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %1
  %18 = call i32 @CBS_get_asn1_uint64(%struct.cbs_st* nonnull %2, i64* nonnull %5) #4
  %19 = icmp eq i32 %18, 0
  %20 = load i64, i64* %5, align 8
  %21 = icmp ne i64 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %29, label %23

23:                                               ; preds = %17
  %24 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %3, i32 536870928) #4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %2, %struct.cbs_st* nonnull %4, i32 4) #4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26, %23, %1, %17
  call void @ERR_put_error(i32 6, i32 0, i32 102, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 164) #4
  br label %52

30:                                               ; preds = %26
  %31 = call fastcc i32 @parse_key_type(%struct.cbs_st* nonnull %3, i32* nonnull %6)
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @ERR_put_error(i32 6, i32 0, i32 128, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 168) #4
  br label %52

34:                                               ; preds = %30
  %35 = call %struct.evp_pkey_st* @EVP_PKEY_new() #4
  %36 = icmp eq %struct.evp_pkey_st* %35, null
  br i1 %36, label %51, label %37

37:                                               ; preds = %34
  %38 = load i32, i32* %6, align 4
  %39 = call i32 @EVP_PKEY_set_type(%struct.evp_pkey_st* nonnull %35, i32 %38) #4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %35, i64 0, i32 3
  %43 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %42, align 8
  %44 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %43, i64 0, i32 6
  %45 = load i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)*, i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)** %44, align 8
  %46 = icmp eq i32 (%struct.evp_pkey_st*, %struct.cbs_st*, %struct.cbs_st*)* %45, null
  br i1 %46, label %47, label %48

47:                                               ; preds = %41
  call void @ERR_put_error(i32 6, i32 0, i32 128, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 183) #4
  br label %51

48:                                               ; preds = %41
  %49 = call i32 %45(%struct.evp_pkey_st* nonnull %35, %struct.cbs_st* nonnull %3, %struct.cbs_st* nonnull %4) #4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48, %37, %34, %47
  call void @EVP_PKEY_free(%struct.evp_pkey_st* %35) #4
  br label %52

52:                                               ; preds = %51, %48, %33, %29
  %53 = phi %struct.evp_pkey_st* [ null, %29 ], [ null, %33 ], [ null, %51 ], [ %35, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #4
  ret %struct.evp_pkey_st* %53
}

declare i32 @CBS_get_asn1_uint64(%struct.cbs_st*, i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @EVP_marshal_private_key(%struct.cbb_st*, %struct.evp_pkey_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 3
  %4 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %3, align 8
  %5 = icmp eq %struct.evp_pkey_asn1_method_st* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %4, i64 0, i32 7
  %8 = load i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)** %7, align 8
  %9 = icmp eq i32 (%struct.cbb_st*, %struct.evp_pkey_st*)* %8, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %6, %2
  tail call void @ERR_put_error(i32 6, i32 0, i32 128, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 199) #4
  br label %13

11:                                               ; preds = %6
  %12 = tail call i32 %8(%struct.cbb_st* %0, %struct.evp_pkey_st* %1) #4
  br label %13

13:                                               ; preds = %11, %10
  %14 = phi i32 [ 0, %10 ], [ %12, %11 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_st* @d2i_PrivateKey(i32, %struct.evp_pkey_st**, i8** nocapture, i64) local_unnamed_addr #0 {
  %5 = alloca %struct.cbs_st, align 8
  %6 = icmp slt i64 %3, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void @ERR_put_error(i32 6, i32 0, i32 102, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 250) #4
  br label %56

8:                                                ; preds = %4
  %9 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #4
  %10 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = load i8*, i8** %2, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %5, i8* %11, i64 %3) #4
  %12 = call %struct.evp_pkey_st* @EVP_PKEY_new() #4
  %13 = icmp eq %struct.evp_pkey_st* %12, null
  br i1 %13, label %38, label %14

14:                                               ; preds = %8
  switch i32 %0, label %36 [
    i32 408, label %15
    i32 116, label %22
    i32 6, label %29
  ]

15:                                               ; preds = %14
  %16 = call %struct.ec_key_st* @EC_KEY_parse_private_key(%struct.cbs_st* nonnull %5, %struct.ec_group_st* null) #4
  %17 = icmp eq %struct.ec_key_st* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = call i32 @EVP_PKEY_assign_EC_KEY(%struct.evp_pkey_st* nonnull %12, %struct.ec_key_st* nonnull %16) #4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %47

21:                                               ; preds = %18, %15
  call void @EC_KEY_free(%struct.ec_key_st* %16) #4
  br label %37

22:                                               ; preds = %14
  %23 = call %struct.dsa_st* @DSA_parse_private_key(%struct.cbs_st* nonnull %5) #4
  %24 = icmp eq %struct.dsa_st* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = call i32 @EVP_PKEY_assign_DSA(%struct.evp_pkey_st* nonnull %12, %struct.dsa_st* nonnull %23) #4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %47

28:                                               ; preds = %25, %22
  call void @DSA_free(%struct.dsa_st* %23) #4
  br label %37

29:                                               ; preds = %14
  %30 = call %struct.rsa_st* @RSA_parse_private_key(%struct.cbs_st* nonnull %5) #4
  %31 = icmp eq %struct.rsa_st* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = call i32 @EVP_PKEY_assign_RSA(%struct.evp_pkey_st* nonnull %12, %struct.rsa_st* nonnull %30) #4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %32, %29
  call void @RSA_free(%struct.rsa_st* %30) #4
  br label %37

36:                                               ; preds = %14
  call void @ERR_put_error(i32 6, i32 0, i32 127, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 238) #4
  br label %37

37:                                               ; preds = %36, %35, %28, %21
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %12) #4
  br label %38

38:                                               ; preds = %37, %8
  call void @ERR_clear_error() #4
  %39 = load i8*, i8** %2, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %5, i8* %39, i64 %3) #4
  %40 = call %struct.evp_pkey_st* @EVP_parse_private_key(%struct.cbs_st* nonnull %5)
  %41 = icmp eq %struct.evp_pkey_st* %40, null
  br i1 %41, label %54, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %40, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, %0
  br i1 %45, label %47, label %46

46:                                               ; preds = %42
  call void @ERR_put_error(i32 6, i32 0, i32 103, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 267) #4
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %40) #4
  br label %54

47:                                               ; preds = %32, %25, %18, %42
  %48 = phi %struct.evp_pkey_st* [ %40, %42 ], [ %12, %18 ], [ %12, %25 ], [ %12, %32 ]
  %49 = icmp eq %struct.evp_pkey_st** %1, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %1, align 8
  call void @EVP_PKEY_free(%struct.evp_pkey_st* %51) #4
  store %struct.evp_pkey_st* %48, %struct.evp_pkey_st** %1, align 8
  br label %52

52:                                               ; preds = %47, %50
  %53 = call i8* @CBS_data(%struct.cbs_st* nonnull %5) #4
  store i8* %53, i8** %2, align 8
  br label %54

54:                                               ; preds = %38, %52, %46
  %55 = phi %struct.evp_pkey_st* [ null, %46 ], [ %48, %52 ], [ null, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #4
  br label %56

56:                                               ; preds = %54, %7
  %57 = phi %struct.evp_pkey_st* [ null, %7 ], [ %55, %54 ]
  ret %struct.evp_pkey_st* %57
}

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

declare void @ERR_clear_error() local_unnamed_addr #2

declare i8* @CBS_data(%struct.cbs_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_st* @d2i_AutoPrivateKey(%struct.evp_pkey_st**, i8** nocapture, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = alloca %struct.cbs_st, align 8
  %6 = alloca %struct.cbs_st, align 8
  %7 = icmp slt i64 %2, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  tail call void @ERR_put_error(i32 6, i32 0, i32 102, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 305) #4
  br label %48

9:                                                ; preds = %3
  %10 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #4
  %11 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false)
  %12 = load i8*, i8** %1, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %6, i8* %12, i64 %2) #4
  %13 = call %struct.evp_pkey_st* @EVP_parse_private_key(%struct.cbs_st* nonnull %6)
  %14 = icmp eq %struct.evp_pkey_st* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %9
  %16 = icmp eq %struct.evp_pkey_st** %0, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %0, align 8
  call void @EVP_PKEY_free(%struct.evp_pkey_st* %18) #4
  store %struct.evp_pkey_st* %13, %struct.evp_pkey_st** %0, align 8
  br label %19

19:                                               ; preds = %15, %17
  %20 = call i8* @CBS_data(%struct.cbs_st* nonnull %6) #4
  store i8* %20, i8** %1, align 8
  br label %46

21:                                               ; preds = %9
  call void @ERR_clear_error() #4
  %22 = load i8*, i8** %1, align 8
  %23 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #4
  %24 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false) #4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 16, i1 false) #4
  call void @CBS_init(%struct.cbs_st* nonnull %4, i8* %22, i64 %2) #4
  %25 = call i32 @CBS_get_asn1(%struct.cbs_st* nonnull %4, %struct.cbs_st* nonnull %5, i32 536870928) #4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %38, label %27

27:                                               ; preds = %21
  %28 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #4
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %27, %34
  %31 = phi i64 [ %35, %34 ], [ 0, %27 ]
  %32 = call i32 @CBS_get_any_asn1_element(%struct.cbs_st* nonnull %5, %struct.cbs_st* null, i32* null, i64* null) #4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = add i64 %31, 1
  %36 = call i64 @CBS_len(%struct.cbs_st* nonnull %5) #4
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %39, label %30

38:                                               ; preds = %30, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #4
  br label %44

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #4
  switch i64 %31, label %44 [
    i64 3, label %40
    i64 5, label %42
  ]

40:                                               ; preds = %39
  %41 = call %struct.evp_pkey_st* @d2i_PrivateKey(i32 408, %struct.evp_pkey_st** %0, i8** %1, i64 %2)
  br label %46

42:                                               ; preds = %39
  %43 = call %struct.evp_pkey_st* @d2i_PrivateKey(i32 116, %struct.evp_pkey_st** %0, i8** %1, i64 %2)
  br label %46

44:                                               ; preds = %38, %39
  %45 = call %struct.evp_pkey_st* @d2i_PrivateKey(i32 6, %struct.evp_pkey_st** %0, i8** %1, i64 %2)
  br label %46

46:                                               ; preds = %44, %42, %40, %19
  %47 = phi %struct.evp_pkey_st* [ %13, %19 ], [ %45, %44 ], [ %43, %42 ], [ %41, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #4
  br label %48

48:                                               ; preds = %46, %8
  %49 = phi %struct.evp_pkey_st* [ null, %8 ], [ %47, %46 ]
  ret %struct.evp_pkey_st* %49
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_PublicKey(%struct.evp_pkey_st* nocapture readonly, i8**) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %20 [
    i32 6, label %5
    i32 116, label %10
    i32 408, label %15
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2
  %7 = bitcast %union.anon* %6 to %struct.rsa_st**
  %8 = load %struct.rsa_st*, %struct.rsa_st** %7, align 8
  %9 = tail call i32 @i2d_RSAPublicKey(%struct.rsa_st* %8, i8** %1) #4
  br label %21

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2
  %12 = bitcast %union.anon* %11 to %struct.dsa_st**
  %13 = load %struct.dsa_st*, %struct.dsa_st** %12, align 8
  %14 = tail call i32 @i2d_DSAPublicKey(%struct.dsa_st* %13, i8** %1) #4
  br label %21

15:                                               ; preds = %2
  %16 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 2
  %17 = bitcast %union.anon* %16 to %struct.ec_key_st**
  %18 = load %struct.ec_key_st*, %struct.ec_key_st** %17, align 8
  %19 = tail call i32 @i2o_ECPublicKey(%struct.ec_key_st* %18, i8** %1) #4
  br label %21

20:                                               ; preds = %2
  tail call void @ERR_put_error(i32 6, i32 0, i32 129, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 345) #4
  br label %21

21:                                               ; preds = %20, %15, %10, %5
  %22 = phi i32 [ -1, %20 ], [ %19, %15 ], [ %14, %10 ], [ %9, %5 ]
  ret i32 %22
}

declare i32 @i2d_RSAPublicKey(%struct.rsa_st*, i8**) local_unnamed_addr #2

declare i32 @i2d_DSAPublicKey(%struct.dsa_st*, i8**) local_unnamed_addr #2

declare i32 @i2o_ECPublicKey(%struct.ec_key_st*, i8**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_st* @d2i_PublicKey(i32, %struct.evp_pkey_st**, i8** nocapture, i64) local_unnamed_addr #0 {
  %5 = alloca %struct.cbs_st, align 8
  %6 = tail call %struct.evp_pkey_st* @EVP_PKEY_new() #4
  %7 = icmp eq %struct.evp_pkey_st* %6, null
  br i1 %7, label %31, label %8

8:                                                ; preds = %4
  %9 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #4
  %10 = bitcast %struct.cbs_st* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = load i8*, i8** %2, align 8
  %12 = icmp sgt i64 %3, 0
  %13 = select i1 %12, i64 %3, i64 0
  call void @CBS_init(%struct.cbs_st* nonnull %5, i8* %11, i64 %13) #4
  %14 = icmp eq i32 %0, 6
  br i1 %14, label %15, label %22

15:                                               ; preds = %8
  %16 = call %struct.rsa_st* @RSA_parse_public_key(%struct.cbs_st* nonnull %5) #4
  %17 = icmp eq %struct.rsa_st* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = call i32 @EVP_PKEY_assign_RSA(%struct.evp_pkey_st* nonnull %6, %struct.rsa_st* nonnull %16) #4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %15, %18
  call void @RSA_free(%struct.rsa_st* %16) #4
  br label %28

22:                                               ; preds = %8
  call void @ERR_put_error(i32 6, i32 0, i32 129, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 375) #4
  br label %28

23:                                               ; preds = %18
  %24 = call i8* @CBS_data(%struct.cbs_st* nonnull %5) #4
  store i8* %24, i8** %2, align 8
  %25 = icmp eq %struct.evp_pkey_st** %1, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %1, align 8
  call void @EVP_PKEY_free(%struct.evp_pkey_st* %27) #4
  store %struct.evp_pkey_st* %6, %struct.evp_pkey_st** %1, align 8
  br label %29

28:                                               ; preds = %21, %22
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %6) #4
  br label %29

29:                                               ; preds = %26, %23, %28
  %30 = phi %struct.evp_pkey_st* [ null, %28 ], [ %6, %23 ], [ %6, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #4
  br label %31

31:                                               ; preds = %4, %29
  %32 = phi %struct.evp_pkey_st* [ %30, %29 ], [ null, %4 ]
  ret %struct.evp_pkey_st* %32
}

declare %struct.rsa_st* @RSA_parse_public_key(%struct.cbs_st*) local_unnamed_addr #2

declare i32 @EVP_PKEY_assign_RSA(%struct.evp_pkey_st*, %struct.rsa_st*) local_unnamed_addr #2

declare void @RSA_free(%struct.rsa_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_st* @d2i_PUBKEY(%struct.evp_pkey_st**, i8** nocapture, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = icmp slt i64 %2, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %3
  %7 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #4
  %8 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %1, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %4, i8* %9, i64 %2) #4
  %10 = call %struct.evp_pkey_st* @EVP_parse_public_key(%struct.cbs_st* nonnull %4)
  %11 = icmp eq %struct.evp_pkey_st* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %6
  %13 = icmp eq %struct.evp_pkey_st** %0, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %12
  %15 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %0, align 8
  call void @EVP_PKEY_free(%struct.evp_pkey_st* %15) #4
  store %struct.evp_pkey_st* %10, %struct.evp_pkey_st** %0, align 8
  br label %16

16:                                               ; preds = %12, %14
  %17 = call i8* @CBS_data(%struct.cbs_st* nonnull %4) #4
  store i8* %17, i8** %1, align 8
  br label %18

18:                                               ; preds = %6, %16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #4
  br label %19

19:                                               ; preds = %3, %18
  %20 = phi %struct.evp_pkey_st* [ %10, %18 ], [ null, %3 ]
  ret %struct.evp_pkey_st* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_PUBKEY(%struct.evp_pkey_st*, i8**) local_unnamed_addr #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = icmp eq %struct.evp_pkey_st* %0, null
  br i1 %4, label %26, label %5

5:                                                ; preds = %2
  %6 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  %7 = call i32 @CBB_init(%struct.cbb_st* nonnull %3, i64 128) #4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %0, i64 0, i32 3
  %11 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %10, align 8
  %12 = icmp eq %struct.evp_pkey_asn1_method_st* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %11, i64 0, i32 4
  %15 = load i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)** %14, align 8
  %16 = icmp eq i32 (%struct.cbb_st*, %struct.evp_pkey_st*)* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %9, %13
  call void @ERR_put_error(i32 6, i32 0, i32 128, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 147) #4
  br label %21

18:                                               ; preds = %13
  %19 = call i32 %15(%struct.cbb_st* nonnull %3, %struct.evp_pkey_st* nonnull %0) #4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %17, %18, %5
  call void @CBB_cleanup(%struct.cbb_st* nonnull %3) #4
  br label %24

22:                                               ; preds = %18
  %23 = call i32 @CBB_finish_i2d(%struct.cbb_st* nonnull %3, i8** %1) #4
  br label %24

24:                                               ; preds = %22, %21
  %25 = phi i32 [ %23, %22 ], [ -1, %21 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #4
  br label %26

26:                                               ; preds = %2, %24
  %27 = phi i32 [ %25, %24 ], [ 0, %2 ]
  ret i32 %27
}

declare i32 @CBB_init(%struct.cbb_st*, i64) local_unnamed_addr #2

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #2

declare i32 @CBB_finish_i2d(%struct.cbb_st*, i8**) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.rsa_st* @d2i_RSA_PUBKEY(%struct.rsa_st**, i8** nocapture, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = icmp slt i64 %2, 0
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #4
  %8 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %1, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %4, i8* %9, i64 %2) #4
  %10 = call %struct.evp_pkey_st* @EVP_parse_public_key(%struct.cbs_st* nonnull %4)
  %11 = icmp eq %struct.evp_pkey_st* %10, null
  br i1 %11, label %21, label %12

12:                                               ; preds = %6
  %13 = call %struct.rsa_st* @EVP_PKEY_get1_RSA(%struct.evp_pkey_st* nonnull %10) #4
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %10) #4
  %14 = icmp eq %struct.rsa_st* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %12
  %16 = icmp eq %struct.rsa_st** %0, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = load %struct.rsa_st*, %struct.rsa_st** %0, align 8
  call void @RSA_free(%struct.rsa_st* %18) #4
  store %struct.rsa_st* %13, %struct.rsa_st** %0, align 8
  br label %19

19:                                               ; preds = %15, %17
  %20 = call i8* @CBS_data(%struct.cbs_st* nonnull %4) #4
  store i8* %20, i8** %1, align 8
  br label %21

21:                                               ; preds = %19, %12, %6
  %22 = phi %struct.rsa_st* [ null, %6 ], [ %13, %19 ], [ null, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #4
  br label %23

23:                                               ; preds = %3, %21
  %24 = phi %struct.rsa_st* [ %22, %21 ], [ null, %3 ]
  ret %struct.rsa_st* %24
}

declare %struct.rsa_st* @EVP_PKEY_get1_RSA(%struct.evp_pkey_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_RSA_PUBKEY(%struct.rsa_st*, i8**) local_unnamed_addr #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = icmp eq %struct.rsa_st* %0, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %2
  %6 = tail call %struct.evp_pkey_st* @EVP_PKEY_new() #4
  %7 = icmp eq %struct.evp_pkey_st* %6, null
  br i1 %7, label %32, label %8

8:                                                ; preds = %5
  %9 = tail call i32 @EVP_PKEY_set1_RSA(%struct.evp_pkey_st* nonnull %6, %struct.rsa_st* nonnull %0) #4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %32, label %11

11:                                               ; preds = %8
  %12 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false) #4
  %13 = call i32 @CBB_init(%struct.cbb_st* nonnull %3, i64 128) #4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %6, i64 0, i32 3
  %17 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %16, align 8
  %18 = icmp eq %struct.evp_pkey_asn1_method_st* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %17, i64 0, i32 4
  %21 = load i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)** %20, align 8
  %22 = icmp eq i32 (%struct.cbb_st*, %struct.evp_pkey_st*)* %21, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %19, %15
  call void @ERR_put_error(i32 6, i32 0, i32 128, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 147) #4
  br label %27

24:                                               ; preds = %19
  %25 = call i32 %21(%struct.cbb_st* nonnull %3, %struct.evp_pkey_st* nonnull %6) #4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24, %23, %11
  call void @CBB_cleanup(%struct.cbb_st* nonnull %3) #4
  br label %30

28:                                               ; preds = %24
  %29 = call i32 @CBB_finish_i2d(%struct.cbb_st* nonnull %3, i8** %1) #4
  br label %30

30:                                               ; preds = %27, %28
  %31 = phi i32 [ %29, %28 ], [ -1, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #4
  br label %32

32:                                               ; preds = %8, %5, %30
  %33 = phi i32 [ -1, %5 ], [ %31, %30 ], [ -1, %8 ]
  call void @EVP_PKEY_free(%struct.evp_pkey_st* %6) #4
  br label %34

34:                                               ; preds = %2, %32
  %35 = phi i32 [ %33, %32 ], [ 0, %2 ]
  ret i32 %35
}

declare i32 @EVP_PKEY_set1_RSA(%struct.evp_pkey_st*, %struct.rsa_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.dsa_st* @d2i_DSA_PUBKEY(%struct.dsa_st**, i8** nocapture, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = icmp slt i64 %2, 0
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #4
  %8 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %1, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %4, i8* %9, i64 %2) #4
  %10 = call %struct.evp_pkey_st* @EVP_parse_public_key(%struct.cbs_st* nonnull %4)
  %11 = icmp eq %struct.evp_pkey_st* %10, null
  br i1 %11, label %21, label %12

12:                                               ; preds = %6
  %13 = call %struct.dsa_st* @EVP_PKEY_get1_DSA(%struct.evp_pkey_st* nonnull %10) #4
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %10) #4
  %14 = icmp eq %struct.dsa_st* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %12
  %16 = icmp eq %struct.dsa_st** %0, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = load %struct.dsa_st*, %struct.dsa_st** %0, align 8
  call void @DSA_free(%struct.dsa_st* %18) #4
  store %struct.dsa_st* %13, %struct.dsa_st** %0, align 8
  br label %19

19:                                               ; preds = %15, %17
  %20 = call i8* @CBS_data(%struct.cbs_st* nonnull %4) #4
  store i8* %20, i8** %1, align 8
  br label %21

21:                                               ; preds = %19, %12, %6
  %22 = phi %struct.dsa_st* [ null, %6 ], [ %13, %19 ], [ null, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #4
  br label %23

23:                                               ; preds = %3, %21
  %24 = phi %struct.dsa_st* [ %22, %21 ], [ null, %3 ]
  ret %struct.dsa_st* %24
}

declare %struct.dsa_st* @EVP_PKEY_get1_DSA(%struct.evp_pkey_st*) local_unnamed_addr #2

declare void @DSA_free(%struct.dsa_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_DSA_PUBKEY(%struct.dsa_st*, i8**) local_unnamed_addr #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = icmp eq %struct.dsa_st* %0, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %2
  %6 = tail call %struct.evp_pkey_st* @EVP_PKEY_new() #4
  %7 = icmp eq %struct.evp_pkey_st* %6, null
  br i1 %7, label %32, label %8

8:                                                ; preds = %5
  %9 = tail call i32 @EVP_PKEY_set1_DSA(%struct.evp_pkey_st* nonnull %6, %struct.dsa_st* nonnull %0) #4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %32, label %11

11:                                               ; preds = %8
  %12 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false) #4
  %13 = call i32 @CBB_init(%struct.cbb_st* nonnull %3, i64 128) #4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %6, i64 0, i32 3
  %17 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %16, align 8
  %18 = icmp eq %struct.evp_pkey_asn1_method_st* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %17, i64 0, i32 4
  %21 = load i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)** %20, align 8
  %22 = icmp eq i32 (%struct.cbb_st*, %struct.evp_pkey_st*)* %21, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %19, %15
  call void @ERR_put_error(i32 6, i32 0, i32 128, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 147) #4
  br label %27

24:                                               ; preds = %19
  %25 = call i32 %21(%struct.cbb_st* nonnull %3, %struct.evp_pkey_st* nonnull %6) #4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24, %23, %11
  call void @CBB_cleanup(%struct.cbb_st* nonnull %3) #4
  br label %30

28:                                               ; preds = %24
  %29 = call i32 @CBB_finish_i2d(%struct.cbb_st* nonnull %3, i8** %1) #4
  br label %30

30:                                               ; preds = %27, %28
  %31 = phi i32 [ %29, %28 ], [ -1, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #4
  br label %32

32:                                               ; preds = %8, %5, %30
  %33 = phi i32 [ -1, %5 ], [ %31, %30 ], [ -1, %8 ]
  call void @EVP_PKEY_free(%struct.evp_pkey_st* %6) #4
  br label %34

34:                                               ; preds = %2, %32
  %35 = phi i32 [ %33, %32 ], [ 0, %2 ]
  ret i32 %35
}

declare i32 @EVP_PKEY_set1_DSA(%struct.evp_pkey_st*, %struct.dsa_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ec_key_st* @d2i_EC_PUBKEY(%struct.ec_key_st**, i8** nocapture, i64) local_unnamed_addr #0 {
  %4 = alloca %struct.cbs_st, align 8
  %5 = icmp slt i64 %2, 0
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #4
  %8 = bitcast %struct.cbs_st* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %1, align 8
  call void @CBS_init(%struct.cbs_st* nonnull %4, i8* %9, i64 %2) #4
  %10 = call %struct.evp_pkey_st* @EVP_parse_public_key(%struct.cbs_st* nonnull %4)
  %11 = icmp eq %struct.evp_pkey_st* %10, null
  br i1 %11, label %21, label %12

12:                                               ; preds = %6
  %13 = call %struct.ec_key_st* @EVP_PKEY_get1_EC_KEY(%struct.evp_pkey_st* nonnull %10) #4
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %10) #4
  %14 = icmp eq %struct.ec_key_st* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %12
  %16 = icmp eq %struct.ec_key_st** %0, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = load %struct.ec_key_st*, %struct.ec_key_st** %0, align 8
  call void @EC_KEY_free(%struct.ec_key_st* %18) #4
  store %struct.ec_key_st* %13, %struct.ec_key_st** %0, align 8
  br label %19

19:                                               ; preds = %15, %17
  %20 = call i8* @CBS_data(%struct.cbs_st* nonnull %4) #4
  store i8* %20, i8** %1, align 8
  br label %21

21:                                               ; preds = %19, %12, %6
  %22 = phi %struct.ec_key_st* [ null, %6 ], [ %13, %19 ], [ null, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #4
  br label %23

23:                                               ; preds = %3, %21
  %24 = phi %struct.ec_key_st* [ %22, %21 ], [ null, %3 ]
  ret %struct.ec_key_st* %24
}

declare %struct.ec_key_st* @EVP_PKEY_get1_EC_KEY(%struct.evp_pkey_st*) local_unnamed_addr #2

declare void @EC_KEY_free(%struct.ec_key_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_EC_PUBKEY(%struct.ec_key_st*, i8**) local_unnamed_addr #0 {
  %3 = alloca %struct.cbb_st, align 8
  %4 = icmp eq %struct.ec_key_st* %0, null
  br i1 %4, label %34, label %5

5:                                                ; preds = %2
  %6 = tail call %struct.evp_pkey_st* @EVP_PKEY_new() #4
  %7 = icmp eq %struct.evp_pkey_st* %6, null
  br i1 %7, label %32, label %8

8:                                                ; preds = %5
  %9 = tail call i32 @EVP_PKEY_set1_EC_KEY(%struct.evp_pkey_st* nonnull %6, %struct.ec_key_st* nonnull %0) #4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %32, label %11

11:                                               ; preds = %8
  %12 = bitcast %struct.cbb_st* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false) #4
  %13 = call i32 @CBB_init(%struct.cbb_st* nonnull %3, i64 128) #4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %6, i64 0, i32 3
  %17 = load %struct.evp_pkey_asn1_method_st*, %struct.evp_pkey_asn1_method_st** %16, align 8
  %18 = icmp eq %struct.evp_pkey_asn1_method_st* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.evp_pkey_asn1_method_st, %struct.evp_pkey_asn1_method_st* %17, i64 0, i32 4
  %21 = load i32 (%struct.cbb_st*, %struct.evp_pkey_st*)*, i32 (%struct.cbb_st*, %struct.evp_pkey_st*)** %20, align 8
  %22 = icmp eq i32 (%struct.cbb_st*, %struct.evp_pkey_st*)* %21, null
  br i1 %22, label %23, label %24

23:                                               ; preds = %19, %15
  call void @ERR_put_error(i32 6, i32 0, i32 128, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0), i32 147) #4
  br label %27

24:                                               ; preds = %19
  %25 = call i32 %21(%struct.cbb_st* nonnull %3, %struct.evp_pkey_st* nonnull %6) #4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24, %23, %11
  call void @CBB_cleanup(%struct.cbb_st* nonnull %3) #4
  br label %30

28:                                               ; preds = %24
  %29 = call i32 @CBB_finish_i2d(%struct.cbb_st* nonnull %3, i8** %1) #4
  br label %30

30:                                               ; preds = %27, %28
  %31 = phi i32 [ %29, %28 ], [ -1, %27 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #4
  br label %32

32:                                               ; preds = %8, %5, %30
  %33 = phi i32 [ -1, %5 ], [ %31, %30 ], [ -1, %8 ]
  call void @EVP_PKEY_free(%struct.evp_pkey_st* %6) #4
  br label %34

34:                                               ; preds = %2, %32
  %35 = phi i32 [ %33, %32 ], [ 0, %2 ]
  ret i32 %35
}

declare i32 @EVP_PKEY_set1_EC_KEY(%struct.evp_pkey_st*, %struct.ec_key_st*) local_unnamed_addr #2

declare %struct.ec_key_st* @EC_KEY_parse_private_key(%struct.cbs_st*, %struct.ec_group_st*) local_unnamed_addr #2

declare i32 @EVP_PKEY_assign_EC_KEY(%struct.evp_pkey_st*, %struct.ec_key_st*) local_unnamed_addr #2

declare %struct.dsa_st* @DSA_parse_private_key(%struct.cbs_st*) local_unnamed_addr #2

declare i32 @EVP_PKEY_assign_DSA(%struct.evp_pkey_st*, %struct.dsa_st*) local_unnamed_addr #2

declare %struct.rsa_st* @RSA_parse_private_key(%struct.cbs_st*) local_unnamed_addr #2

declare i32 @CBS_get_any_asn1_element(%struct.cbs_st*, %struct.cbs_st*, i32*, i64*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
