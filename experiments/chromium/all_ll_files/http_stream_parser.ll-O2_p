; ModuleID = '../../net/http/http_stream_parser.cc'
source_filename = "../../net/http/http_stream_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::HttpStreamParser" = type { i32 (...)**, i32, %"struct.net::HttpRequestInfo"*, %class.scoped_refptr.35, i32, %class.scoped_refptr.38, i32, i64, i64, i64, %"class.net::HttpResponseInfo"*, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i64, i8, i64, %"class.std::__1::unique_ptr.104", %class.scoped_refptr.37, i32, %"class.base::OnceCallback", %"class.base::OnceCallback", %"class.net::StreamSocket"*, i8, %"class.net::NetLogWithSource", %"class.base::RepeatingCallback", %class.scoped_refptr.110, %class.scoped_refptr.110, i8, i32, %"struct.net::MutableNetworkTrafficAnnotationTag", %"class.base::WeakPtrFactory" }
%class.scoped_refptr.35 = type { %"class.net::DrainableIOBuffer"* }
%"class.net::DrainableIOBuffer" = type { %"class.net::IOBuffer", %class.scoped_refptr.37, i32, i32 }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.36", i8* }
%"class.base::RefCountedThreadSafe.36" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.38 = type { %"class.net::GrowableIOBuffer"* }
%"class.net::HttpResponseInfo" = type { i8, i32, i8, i8, i8, i8, i8, %"class.net::ProxyServer", i8, i8, i8, i8, %"class.base::Time", %"class.net::IPEndPoint", %"class.std::__1::basic_string", i32, %"class.base::Time", %"class.base::Time", %"struct.net::ResolveErrorInfo", %"class.absl::optional.44", %class.scoped_refptr.49, %"class.net::SSLInfo", %class.scoped_refptr.95, %"class.net::HttpVaryData", %"class.std::__1::vector.51" }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.43" }
%"class.base::time_internal::TimeBase.43" = type { i64 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.44" = type { %"class.absl::optional_internal::optional_data.45" }
%"class.absl::optional_internal::optional_data.45" = type { %"class.absl::optional_internal::optional_data_base.46" }
%"class.absl::optional_internal::optional_data_base.46" = type { %"class.absl::optional_internal::optional_data_dtor_base.47" }
%"class.absl::optional_internal::optional_data_dtor_base.47" = type { i8, %union.anon.48 }
%union.anon.48 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.5" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.49 = type { %"class.net::SSLCertRequestInfo"* }
%"class.net::SSLCertRequestInfo" = type { %"class.base::RefCountedThreadSafe.50", [4 x i8], %"class.net::HostPortPair", i8, %"class.std::__1::vector.51", %"class.std::__1::vector.58" }
%"class.base::RefCountedThreadSafe.50" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { i32*, i32*, %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { i32* }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.65, %class.scoped_refptr.65, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.78", %"class.std::__1::basic_string", %"class.std::__1::vector.86", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.65 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.66", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.67", %"class.std::__1::vector.71" }
%"class.base::RefCountedThreadSafe.66" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.51", %"class.std::__1::vector.51", %"class.std::__1::vector.51", %"class.std::__1::vector.51" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"class.std::__1::unique_ptr.67"*, %"class.std::__1::unique_ptr.67"*, %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.std::__1::unique_ptr.67"* }
%"class.std::__1::vector.78" = type { %"class.std::__1::__vector_base.79" }
%"class.std::__1::__vector_base.79" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.81" }
%"class.net::HashValue" = type { i32, %union.anon.80 }
%union.anon.80 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.90" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.88, i32, [4 x i8] }>
%class.scoped_refptr.88 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.89", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.89" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%class.scoped_refptr.95 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.96", %"class.std::__1::vector.97", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.96" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.97" = type { %"class.std::__1::__vector_base.98" }
%"class.std::__1::__vector_base.98" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.99" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"class.net::HttpVaryData" = type { %"struct.base::MD5Digest", i8 }
%"struct.base::MD5Digest" = type { [16 x i8] }
%"class.std::__1::vector.51" = type { %"class.std::__1::__vector_base.52" }
%"class.std::__1::__vector_base.52" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::basic_string"* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.net::HttpChunkedDecoder"* }
%"class.net::HttpChunkedDecoder" = type { i64, %"class.std::__1::basic_string", i8, i8, i8, i32 }
%class.scoped_refptr.37 = type { %"class.net::IOBuffer"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.16", %"class.std::__1::vector.23" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.18" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.25" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.110 = type { %"class.net::HttpStreamParser::SeekableIOBuffer"* }
%"class.net::HttpStreamParser::SeekableIOBuffer" = type <{ %"class.net::IOBuffer", i8*, i32, i32, i32, [4 x i8] }>
%"struct.net::MutableNetworkTrafficAnnotationTag" = type { i32 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.111 }
%class.scoped_refptr.111 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.112", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.112" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.113" }
%"struct.std::__1::atomic.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__atomic_base.115" }
%"struct.std::__1::__atomic_base.115" = type { %"struct.std::__1::__cxx_atomic_impl.116" }
%"struct.std::__1::__cxx_atomic_impl.116" = type { %"struct.std::__1::__cxx_atomic_base_impl.117" }
%"struct.std::__1::__cxx_atomic_base_impl.117" = type { i8 }
%"class.net::StreamSocket" = type { %"class.net::Socket" }
%"class.net::Socket" = type { i32 (...)**, %"class.std::__1::vector.51" }
%"struct.net::HttpRequestInfo" = type <{ %class.GURL, %"class.std::__1::basic_string", %"class.net::NetworkIsolationKey", i8, [7 x i8], %"class.net::HttpRequestHeaders", %"class.net::UploadDataStream"*, i32, i32, i32, %"class.net::SocketTag", [3 x i8], %"struct.net::MutableNetworkTrafficAnnotationTag", i32, %"class.absl::optional.30", i32, [4 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.4 }
%union.anon.4 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.10" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.net::UploadDataStream" = type { i32 (...)**, i64, i64, i64, i8, i8, i8, %"class.base::OnceCallback", %"class.net::NetLogWithSource" }
%"class.net::SocketTag" = type { i8 }
%"class.absl::optional.30" = type { %"class.absl::optional_internal::optional_data.31" }
%"class.absl::optional_internal::optional_data.31" = type { %"class.absl::optional_internal::optional_data_base.32" }
%"class.absl::optional_internal::optional_data_base.32" = type { %"class.absl::optional_internal::optional_data_dtor_base.33" }
%"class.absl::optional_internal::optional_data_dtor_base.33" = type { i8, %union.anon.34 }
%union.anon.34 = type { %"class.url::Origin" }
%"class.net::GrowableIOBuffer" = type { %"class.net::IOBuffer", %"class.std::__1::unique_ptr.39", i32, i32 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i8* }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.118 }
%class.scoped_refptr.118 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"class.net::StringIOBuffer" = type { %"class.net::IOBuffer", %"class.std::__1::basic_string" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.120" }
%"union.absl::variant_internal::DestructibleUnionImpl.120" = type { %"union.absl::variant_internal::DestructibleUnionImpl.121" }
%"union.absl::variant_internal::DestructibleUnionImpl.121" = type { %"union.absl::variant_internal::DestructibleUnionImpl.122" }
%"union.absl::variant_internal::DestructibleUnionImpl.122" = type { %"union.absl::variant_internal::DestructibleUnionImpl.123" }
%"union.absl::variant_internal::DestructibleUnionImpl.123" = type { %"class.std::__1::basic_string" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN4base8snprintfEPcmPKcz = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS4_EEEEEFviEE3RunEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN3net16HttpStreamParser16SeekableIOBufferD2Ev = comdat any

$_ZN3net16HttpStreamParser16SeekableIOBufferD0Ev = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZTVN3net16HttpStreamParser16SeekableIOBufferE = comdat any

@_ZN3net16HttpStreamParser22kChunkHeaderFooterSizeE = hidden local_unnamed_addr constant i64 12, align 8
@_ZTVN3net16HttpStreamParserE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::HttpStreamParser"*)* @_ZN3net16HttpStreamParserD2Ev to i8*), i8* bitcast (void (%"class.net::HttpStreamParser"*)* @_ZN3net16HttpStreamParserD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [37 x i8] c"../../net/http/http_stream_parser.cc\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"buf\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"read_buf_->data()\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"user_read_buf_.get()\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"available > 0\00", align 1
@.str.5 = private unnamed_addr constant [52 x i8] c"save_amount + additional_save_amount <= kMaxBufSize\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"extra_bytes > 0\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"http\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"icy\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"HTTP/0.9 200 OK\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"Content-Length\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"Content-Disposition\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"HEAD\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"%X\0D\0A\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"length\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"is_chunked\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"did_merge\00", align 1
@.str.21 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@_ZTVN3net16HttpStreamParser16SeekableIOBufferE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::HttpStreamParser::SeekableIOBuffer"*)* @_ZN3net16HttpStreamParser16SeekableIOBufferD2Ev to i8*), i8* bitcast (void (%"class.net::HttpStreamParser::SeekableIOBuffer"*)* @_ZN3net16HttpStreamParser16SeekableIOBufferD0Ev to i8*)] }, comdat, align 8

@_ZN3net16HttpStreamParserC1EPNS_12StreamSocketEbPKNS_15HttpRequestInfoEPNS_16GrowableIOBufferERKNS_16NetLogWithSourceE = hidden unnamed_addr alias void (%"class.net::HttpStreamParser"*, %"class.net::StreamSocket"*, i1, %"struct.net::HttpRequestInfo"*, %"class.net::GrowableIOBuffer"*, %"class.net::NetLogWithSource"*), void (%"class.net::HttpStreamParser"*, %"class.net::StreamSocket"*, i1, %"struct.net::HttpRequestInfo"*, %"class.net::GrowableIOBuffer"*, %"class.net::NetLogWithSource"*)* @_ZN3net16HttpStreamParserC2EPNS_12StreamSocketEbPKNS_15HttpRequestInfoEPNS_16GrowableIOBufferERKNS_16NetLogWithSourceE
@_ZN3net16HttpStreamParserD1Ev = hidden unnamed_addr alias void (%"class.net::HttpStreamParser"*), void (%"class.net::HttpStreamParser"*)* @_ZN3net16HttpStreamParserD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16HttpStreamParserC2EPNS_12StreamSocketEbPKNS_15HttpRequestInfoEPNS_16GrowableIOBufferERKNS_16NetLogWithSourceE(%"class.net::HttpStreamParser"*, %"class.net::StreamSocket"*, i1 zeroext, %"struct.net::HttpRequestInfo"*, %"class.net::GrowableIOBuffer"*, %"class.net::NetLogWithSource"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::internal::WeakReference", align 8
  %8 = alloca %"class.base::RepeatingCallback", align 8
  %9 = alloca %"class.base::WeakPtr", align 8
  %10 = zext i1 %2 to i8
  %11 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net16HttpStreamParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 2
  store %"struct.net::HttpRequestInfo"* %3, %"struct.net::HttpRequestInfo"** %13, align 8
  %14 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 3, i32 0
  store %"class.net::DrainableIOBuffer"* null, %"class.net::DrainableIOBuffer"** %14, align 8
  %15 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 4
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 5, i32 0
  store %"class.net::GrowableIOBuffer"* %4, %"class.net::GrowableIOBuffer"** %16, align 8
  %17 = icmp eq %"class.net::GrowableIOBuffer"* %4, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw add i32* %19, i32 1 monotonic
  br label %21

21:                                               ; preds = %6, %18
  %22 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 6
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 7
  store i64 -1, i64* %23, align 8
  %24 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 8
  %25 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 15
  %26 = bitcast i64* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 56, i1 false)
  store i64 -1, i64* %25, align 8
  %27 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 16
  store i8 0, i8* %27, align 8
  %28 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 17
  %29 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 21, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 23
  %31 = bitcast i64* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 28, i1 false)
  %32 = bitcast %"class.base::internal::BindStateBase"** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false)
  store %"class.net::StreamSocket"* %1, %"class.net::StreamSocket"** %30, align 8
  %33 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 24
  store i8 %10, i8* %33, align 8
  %34 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 25
  %35 = bitcast %"class.net::NetLogWithSource"* %34 to i8*
  %36 = bitcast %"class.net::NetLogWithSource"* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false)
  %37 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 26
  %38 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 30
  store i32 0, i32* %38, align 4
  %39 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 31, i32 0
  %40 = bitcast %"class.base::RepeatingCallback"* %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 25, i1 false)
  store i32 -1, i32* %39, align 4
  %41 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 32
  %42 = getelementptr inbounds %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory"* %41, i64 0, i32 0
  %43 = ptrtoint %"class.net::HttpStreamParser"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %42, i64 %43) #9
  %44 = bitcast %"class.base::RepeatingCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #9
  %45 = bitcast %"class.base::WeakPtr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #9
  %46 = bitcast %"class.base::internal::WeakReference"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #9, !noalias !2
  %47 = getelementptr inbounds %"class.base::WeakPtrFactory", %"class.base::WeakPtrFactory"* %41, i64 0, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %7, %"class.base::internal::WeakReferenceOwner"* %47) #9, !noalias !2
  %48 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 32, i32 0, i32 1
  %49 = load i64, i64* %48, align 8, !noalias !2
  %50 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %50, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %7, i64 %49) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #9, !noalias !2
  %51 = call i8* @_Znwm(i64 64) #13, !noalias !5
  %52 = bitcast i8* %51 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %52, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS4_EEEEEFviEE3RunEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #9, !noalias !5
  %53 = getelementptr inbounds i8, i8* %51, i64 32
  %54 = bitcast i8* %53 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::HttpStreamParser"*, i32)* @_ZN3net16HttpStreamParser12OnIOCompleteEi to i64), i64 0>, <2 x i64>* %54, align 8, !noalias !5
  %55 = getelementptr inbounds i8, i8* %51, i64 48
  %56 = bitcast i8* %55 to %"class.base::internal::WeakReference"*
  %57 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %56, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %57) #9, !noalias !5
  %58 = getelementptr inbounds i8, i8* %51, i64 56
  %59 = bitcast i8* %58 to i64*
  %60 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %9, i64 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8, !noalias !5
  store i64 %61, i64* %59, align 8, !noalias !5
  %62 = bitcast %"class.base::RepeatingCallback"* %8 to i8**
  store i8* %51, i8** %62, align 8, !alias.scope !5
  %63 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %37, i64 0, i32 0
  %64 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0
  %65 = call dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"* %63, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %64) #9
  %66 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %66) #9
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %50) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16HttpStreamParser12OnIOCompleteEi(%"class.net::HttpStreamParser"*, i32) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = tail call i32 @_ZN3net16HttpStreamParser6DoLoopEi(%"class.net::HttpStreamParser"* %0, i32 %1)
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 22, i32 0, i32 0, i32 0
  %8 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %7, align 8
  %9 = icmp eq %"class.base::internal::BindStateBase"* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %8 to i64
  %12 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %11, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %8, i64 0, i32 1
  %16 = bitcast void ()** %15 to void (%"class.base::internal::BindStateBase"*, i32)**
  %17 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %16, align 8
  tail call void %17(%"class.base::internal::BindStateBase"* nonnull %8, i32 %4) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  br label %18

18:                                               ; preds = %2, %10, %6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16HttpStreamParserD2Ev(%"class.net::HttpStreamParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net16HttpStreamParserE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 32, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #9
  %4 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 28, i32 0
  %5 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %4, align 8
  %6 = icmp eq %"class.net::HttpStreamParser::SeekableIOBuffer"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %5, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %19

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe.36"* %13 to %"class.net::IOBuffer"*
  %15 = bitcast %"class.base::RefCountedThreadSafe.36"* %13 to void (%"class.net::IOBuffer"*)***
  %16 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %16, i64 1
  %18 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %17, align 8
  tail call void %18(%"class.net::IOBuffer"* nonnull %14) #9
  br label %19

19:                                               ; preds = %1, %7, %12
  %20 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 27, i32 0
  %21 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %20, align 8
  %22 = icmp eq %"class.net::HttpStreamParser::SeekableIOBuffer"* %21, null
  br i1 %22, label %35, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %21, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %35

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %24, i64 -2
  %30 = bitcast %"class.base::RefCountedThreadSafe.36"* %29 to %"class.net::IOBuffer"*
  %31 = bitcast %"class.base::RefCountedThreadSafe.36"* %29 to void (%"class.net::IOBuffer"*)***
  %32 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %32, i64 1
  %34 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %33, align 8
  tail call void %34(%"class.net::IOBuffer"* nonnull %30) #9
  br label %35

35:                                               ; preds = %19, %23, %28
  %36 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 26, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %36) #9
  %37 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 25
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %37) #9
  %38 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 22, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %38) #9
  %39 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 21, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %39) #9
  %40 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 19, i32 0
  %41 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %40, align 8
  %42 = icmp eq %"class.net::IOBuffer"* %41, null
  br i1 %42, label %55, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %41, i64 0, i32 1
  %45 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = atomicrmw sub i32* %45, i32 1 acq_rel
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %48, label %55

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %44, i64 -2
  %50 = bitcast %"class.base::RefCountedThreadSafe.36"* %49 to %"class.net::IOBuffer"*
  %51 = bitcast %"class.base::RefCountedThreadSafe.36"* %49 to void (%"class.net::IOBuffer"*)***
  %52 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %52, i64 1
  %54 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %53, align 8
  tail call void %54(%"class.net::IOBuffer"* nonnull %50) #9
  br label %55

55:                                               ; preds = %35, %43, %48
  %56 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %57 = load %"class.net::HttpChunkedDecoder"*, %"class.net::HttpChunkedDecoder"** %56, align 8
  store %"class.net::HttpChunkedDecoder"* null, %"class.net::HttpChunkedDecoder"** %56, align 8
  %58 = icmp eq %"class.net::HttpChunkedDecoder"* %57, null
  br i1 %58, label %70, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.net::HttpChunkedDecoder", %"class.net::HttpChunkedDecoder"* %57, i64 0, i32 1
  %61 = bitcast %"class.std::__1::basic_string"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  tail call void @_ZdlPv(i8* %67) #13
  br label %68

68:                                               ; preds = %65, %59
  %69 = bitcast %"class.net::HttpChunkedDecoder"* %57 to i8*
  tail call void @_ZdlPv(i8* %69) #13
  br label %70

70:                                               ; preds = %55, %68
  %71 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 5, i32 0
  %72 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %71, align 8
  %73 = icmp eq %"class.net::GrowableIOBuffer"* %72, null
  br i1 %73, label %86, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %72, i64 0, i32 0, i32 1
  %76 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw sub i32* %76, i32 1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %86

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %75, i64 -2
  %81 = bitcast %"class.base::RefCountedThreadSafe.36"* %80 to %"class.net::IOBuffer"*
  %82 = bitcast %"class.base::RefCountedThreadSafe.36"* %80 to void (%"class.net::IOBuffer"*)***
  %83 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %83, i64 1
  %85 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %84, align 8
  tail call void %85(%"class.net::IOBuffer"* nonnull %81) #9
  br label %86

86:                                               ; preds = %70, %74, %79
  %87 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 3, i32 0
  %88 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %87, align 8
  %89 = icmp eq %"class.net::DrainableIOBuffer"* %88, null
  br i1 %89, label %102, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %88, i64 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = atomicrmw sub i32* %92, i32 1 acq_rel
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %95, label %102

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %91, i64 -2
  %97 = bitcast %"class.base::RefCountedThreadSafe.36"* %96 to %"class.net::IOBuffer"*
  %98 = bitcast %"class.base::RefCountedThreadSafe.36"* %96 to void (%"class.net::IOBuffer"*)***
  %99 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %99, i64 1
  %101 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %100, align 8
  tail call void %101(%"class.net::IOBuffer"* nonnull %97) #9
  br label %102

102:                                              ; preds = %86, %90, %95
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16HttpStreamParserD0Ev(%"class.net::HttpStreamParser"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net16HttpStreamParserD2Ev(%"class.net::HttpStreamParser"* %0) #9
  %2 = bitcast %"class.net::HttpStreamParser"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16HttpStreamParser11SendRequestERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_18HttpRequestHeadersERKNS_27NetworkTrafficAnnotationTagEPNS_16HttpResponseInfoEN4base12OnceCallbackIFviEEE(%"class.net::HttpStreamParser"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.net::HttpRequestHeaders"* dereferenceable(24), %"struct.net::NetworkTrafficAnnotationTag"* nocapture readonly dereferenceable(4), %"class.net::HttpResponseInfo"*, %"class.base::OnceCallback"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.net::IPEndPoint", align 2
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 25
  tail call void @_ZN3net20NetLogRequestHeadersERKNS_16NetLogWithSourceENS_15NetLogEventTypeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPKNS_18HttpRequestHeadersE(%"class.net::NetLogWithSource"* dereferenceable(24) %11, i32 164, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.net::HttpRequestHeaders"* %2) #9
  %12 = getelementptr inbounds %"struct.net::NetworkTrafficAnnotationTag", %"struct.net::NetworkTrafficAnnotationTag"* %3, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 31, i32 0
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 10
  store %"class.net::HttpResponseInfo"* %4, %"class.net::HttpResponseInfo"** %15, align 8
  %16 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %16) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %16, i8 -86, i64 20, i1 false)
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %7) #9
  %17 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 23
  %18 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %17, align 8
  %19 = bitcast %"class.net::StreamSocket"* %18 to i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)***
  %20 = load i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)**, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)** %20, i64 16
  %22 = load i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::StreamSocket"*, %"class.net::IPEndPoint"*)** %21, align 8
  %23 = call i32 %22(%"class.net::StreamSocket"* %18, %"class.net::IPEndPoint"* nonnull %7) #9
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %336

25:                                               ; preds = %6
  %26 = load %"class.net::HttpResponseInfo"*, %"class.net::HttpResponseInfo"** %15, align 8
  %27 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %26, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 2 %16, i64 20, i1 false)
  %28 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %32 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  call void @_ZNK3net18HttpRequestHeaders8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.net::HttpRequestHeaders"* %2) #9
  %33 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1, !noalias !10
  %36 = icmp slt i8 %35, 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8, !noalias !10
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8, !noalias !10
  %41 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %42 = zext i8 %35 to i64
  %43 = select i1 %36, i8* %38, i8* %41
  %44 = select i1 %36, i64 %40, i64 %42
  %45 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm(%"class.std::__1::basic_string"* nonnull %9, i64 0, i8* %43, i64 %44) #9, !noalias !10
  %46 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 %46, i64 24, i1 false) #9
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #9, !noalias !10
  %47 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %25
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  call void @_ZdlPv(i8* %53) #13
  br label %54

54:                                               ; preds = %25, %51
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  %55 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = load i64, i64* %30, align 8
  %60 = zext i8 %57 to i64
  %61 = select i1 %58, i64 %59, i64 %60
  %62 = trunc i64 %61 to i32
  %63 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 4
  store i32 %62, i32* %63, align 8
  %64 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 2
  %65 = load %"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"** %64, align 8
  %66 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %65, i64 0, i32 6
  %67 = load %"class.net::UploadDataStream"*, %"class.net::UploadDataStream"** %66, align 8
  %68 = icmp eq %"class.net::UploadDataStream"* %67, null
  br i1 %68, label %173, label %69

69:                                               ; preds = %54
  %70 = call i8* @_Znwm(i64 48) #13
  %71 = bitcast i8* %70 to %"class.net::IOBuffer"*
  call void @_ZN3net8IOBufferC2Em(%"class.net::IOBuffer"* nonnull %71, i64 16384) #9
  %72 = bitcast i8* %70 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net16HttpStreamParser16SeekableIOBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %72, align 8
  %73 = getelementptr inbounds i8, i8* %70, i64 24
  %74 = getelementptr inbounds i8, i8* %70, i64 16
  %75 = bitcast i8* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast i8* %73 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds i8, i8* %70, i64 32
  %79 = bitcast i8* %78 to i32*
  store i32 16384, i32* %79, align 8
  %80 = getelementptr inbounds i8, i8* %70, i64 36
  %81 = bitcast i8* %80 to i32*
  store i32 0, i32* %81, align 4
  %82 = getelementptr inbounds i8, i8* %70, i64 40
  %83 = bitcast i8* %82 to i32*
  store i32 0, i32* %83, align 8
  %84 = getelementptr inbounds i8, i8* %70, i64 8
  %85 = bitcast i8* %84 to i32*
  %86 = atomicrmw add i32* %85, i32 1 monotonic
  %87 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 28
  %88 = ptrtoint i8* %70 to i64
  %89 = bitcast %class.scoped_refptr.110* %87 to i64*
  %90 = getelementptr inbounds %class.scoped_refptr.110, %class.scoped_refptr.110* %87, i64 0, i32 0
  %91 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %90, align 8
  store i64 %88, i64* %89, align 8
  %92 = icmp eq %"class.net::HttpStreamParser::SeekableIOBuffer"* %91, null
  br i1 %92, label %105, label %93

93:                                               ; preds = %69
  %94 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %91, i64 0, i32 0, i32 1
  %95 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %94, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = atomicrmw sub i32* %95, i32 1 acq_rel
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %98, label %105

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %94, i64 -2
  %100 = bitcast %"class.base::RefCountedThreadSafe.36"* %99 to %"class.net::IOBuffer"*
  %101 = bitcast %"class.base::RefCountedThreadSafe.36"* %99 to void (%"class.net::IOBuffer"*)***
  %102 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %102, i64 1
  %104 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %103, align 8
  call void %104(%"class.net::IOBuffer"* nonnull %100) #9
  br label %105

105:                                              ; preds = %69, %93, %98
  %106 = load %"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"** %64, align 8
  %107 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %106, i64 0, i32 6
  %108 = load %"class.net::UploadDataStream"*, %"class.net::UploadDataStream"** %107, align 8
  %109 = getelementptr inbounds %"class.net::UploadDataStream", %"class.net::UploadDataStream"* %108, i64 0, i32 4
  %110 = load i8, i8* %109, align 8, !range !13
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %148, label %112

112:                                              ; preds = %105
  %113 = call i8* @_Znwm(i64 48) #13
  %114 = bitcast i8* %113 to %"class.net::IOBuffer"*
  call void @_ZN3net8IOBufferC2Em(%"class.net::IOBuffer"* nonnull %114, i64 16372) #9
  %115 = bitcast i8* %113 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net16HttpStreamParser16SeekableIOBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %115, align 8
  %116 = getelementptr inbounds i8, i8* %113, i64 24
  %117 = getelementptr inbounds i8, i8* %113, i64 16
  %118 = bitcast i8* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i8* %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds i8, i8* %113, i64 32
  %122 = bitcast i8* %121 to i32*
  store i32 16372, i32* %122, align 8
  %123 = getelementptr inbounds i8, i8* %113, i64 36
  %124 = bitcast i8* %123 to i32*
  store i32 0, i32* %124, align 4
  %125 = getelementptr inbounds i8, i8* %113, i64 40
  %126 = bitcast i8* %125 to i32*
  store i32 0, i32* %126, align 8
  %127 = getelementptr inbounds i8, i8* %113, i64 8
  %128 = bitcast i8* %127 to i32*
  %129 = atomicrmw add i32* %128, i32 1 monotonic
  %130 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 27
  %131 = ptrtoint i8* %113 to i64
  %132 = bitcast %class.scoped_refptr.110* %130 to i64*
  %133 = getelementptr inbounds %class.scoped_refptr.110, %class.scoped_refptr.110* %130, i64 0, i32 0
  %134 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %133, align 8
  store i64 %131, i64* %132, align 8
  %135 = icmp eq %"class.net::HttpStreamParser::SeekableIOBuffer"* %134, null
  br i1 %135, label %173, label %136

136:                                              ; preds = %112
  %137 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %134, i64 0, i32 0, i32 1
  %138 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %137, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = atomicrmw sub i32* %138, i32 1 acq_rel
  %140 = icmp eq i32 %139, 1
  br i1 %140, label %141, label %173

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %137, i64 -2
  %143 = bitcast %"class.base::RefCountedThreadSafe.36"* %142 to %"class.net::IOBuffer"*
  %144 = bitcast %"class.base::RefCountedThreadSafe.36"* %142 to void (%"class.net::IOBuffer"*)***
  %145 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %144, align 8
  %146 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %145, i64 1
  %147 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %146, align 8
  call void %147(%"class.net::IOBuffer"* nonnull %143) #9
  br label %173

148:                                              ; preds = %105
  %149 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %90, align 8
  %150 = icmp eq %"class.net::HttpStreamParser::SeekableIOBuffer"* %149, null
  br i1 %150, label %154, label %151

151:                                              ; preds = %148
  %152 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %149, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = atomicrmw add i32* %152, i32 1 monotonic
  br label %154

154:                                              ; preds = %148, %151
  %155 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 27
  %156 = ptrtoint %"class.net::HttpStreamParser::SeekableIOBuffer"* %149 to i64
  %157 = bitcast %class.scoped_refptr.110* %155 to i64*
  %158 = getelementptr inbounds %class.scoped_refptr.110, %class.scoped_refptr.110* %155, i64 0, i32 0
  %159 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %158, align 8
  store i64 %156, i64* %157, align 8
  %160 = icmp eq %"class.net::HttpStreamParser::SeekableIOBuffer"* %159, null
  br i1 %160, label %173, label %161

161:                                              ; preds = %154
  %162 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %159, i64 0, i32 0, i32 1
  %163 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = atomicrmw sub i32* %163, i32 1 acq_rel
  %165 = icmp eq i32 %164, 1
  br i1 %165, label %166, label %173

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %162, i64 -2
  %168 = bitcast %"class.base::RefCountedThreadSafe.36"* %167 to %"class.net::IOBuffer"*
  %169 = bitcast %"class.base::RefCountedThreadSafe.36"* %167 to void (%"class.net::IOBuffer"*)***
  %170 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %169, align 8
  %171 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %170, i64 1
  %172 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %171, align 8
  call void %172(%"class.net::IOBuffer"* nonnull %168) #9
  br label %173

173:                                              ; preds = %166, %161, %154, %141, %136, %112, %54
  %174 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 1, i32* %174, align 8
  %175 = load %"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"** %64, align 8
  %176 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %175, i64 0, i32 6
  %177 = load %"class.net::UploadDataStream"*, %"class.net::UploadDataStream"** %176, align 8
  %178 = icmp eq %"class.net::UploadDataStream"* %177, null
  br i1 %178, label %286, label %179

179:                                              ; preds = %173
  %180 = bitcast %"class.net::UploadDataStream"* %177 to i1 (%"class.net::UploadDataStream"*)***
  %181 = load i1 (%"class.net::UploadDataStream"*)**, i1 (%"class.net::UploadDataStream"*)*** %180, align 8
  %182 = getelementptr inbounds i1 (%"class.net::UploadDataStream"*)*, i1 (%"class.net::UploadDataStream"*)** %181, i64 2
  %183 = load i1 (%"class.net::UploadDataStream"*)*, i1 (%"class.net::UploadDataStream"*)** %182, align 8
  %184 = call zeroext i1 %183(%"class.net::UploadDataStream"* nonnull %177) #9
  br i1 %184, label %185, label %286

185:                                              ; preds = %179
  %186 = getelementptr inbounds %"class.net::UploadDataStream", %"class.net::UploadDataStream"* %177, i64 0, i32 1
  %187 = load i64, i64* %186, align 8
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %286, label %189

189:                                              ; preds = %185
  %190 = load i8, i8* %56, align 1
  %191 = icmp slt i8 %190, 0
  %192 = load i64, i64* %30, align 8
  %193 = zext i8 %190 to i64
  %194 = select i1 %191, i64 %192, i64 %193
  %195 = add i64 %194, %187
  %196 = icmp ugt i64 %195, 1400
  br i1 %196, label %286, label %197

197:                                              ; preds = %189
  %198 = load i32, i32* %63, align 8
  %199 = load %"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"** %64, align 8
  %200 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %199, i64 0, i32 6
  %201 = load %"class.net::UploadDataStream"*, %"class.net::UploadDataStream"** %200, align 8
  %202 = getelementptr inbounds %"class.net::UploadDataStream", %"class.net::UploadDataStream"* %201, i64 0, i32 1
  %203 = load i64, i64* %202, align 8
  %204 = trunc i64 %203 to i32
  %205 = add i32 %198, %204
  %206 = call i8* @_Znwm(i64 24) #13
  %207 = bitcast i8* %206 to %"class.net::IOBuffer"*
  %208 = sext i32 %205 to i64
  call void @_ZN3net8IOBufferC1Em(%"class.net::IOBuffer"* nonnull %207, i64 %208) #9
  %209 = getelementptr inbounds i8, i8* %206, i64 8
  %210 = bitcast i8* %209 to i32*
  %211 = atomicrmw add i32* %210, i32 1 monotonic
  %212 = call i8* @_Znwm(i64 40) #13
  %213 = bitcast i8* %212 to %"class.net::DrainableIOBuffer"*
  %214 = atomicrmw add i32* %210, i32 1 monotonic
  call void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"* nonnull %213, %"class.net::IOBuffer"* nonnull %207, i32 %205) #9
  %215 = getelementptr inbounds i8, i8* %212, i64 8
  %216 = bitcast i8* %215 to i32*
  %217 = atomicrmw add i32* %216, i32 1 monotonic
  %218 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 3
  %219 = ptrtoint i8* %212 to i64
  %220 = bitcast %class.scoped_refptr.35* %218 to i64*
  %221 = getelementptr inbounds %class.scoped_refptr.35, %class.scoped_refptr.35* %218, i64 0, i32 0
  %222 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %221, align 8
  store i64 %219, i64* %220, align 8
  %223 = icmp eq %"class.net::DrainableIOBuffer"* %222, null
  br i1 %223, label %236, label %224

224:                                              ; preds = %197
  %225 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %222, i64 0, i32 0, i32 1
  %226 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %225, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = atomicrmw sub i32* %226, i32 1 acq_rel
  %228 = icmp eq i32 %227, 1
  br i1 %228, label %229, label %236

229:                                              ; preds = %224
  %230 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %225, i64 -2
  %231 = bitcast %"class.base::RefCountedThreadSafe.36"* %230 to %"class.net::IOBuffer"*
  %232 = bitcast %"class.base::RefCountedThreadSafe.36"* %230 to void (%"class.net::IOBuffer"*)***
  %233 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %232, align 8
  %234 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %233, i64 1
  %235 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %234, align 8
  call void %235(%"class.net::IOBuffer"* nonnull %231) #9
  br label %236

236:                                              ; preds = %197, %224, %229
  %237 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %221, align 8
  %238 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %237, i64 0, i32 0, i32 2
  %239 = load i8*, i8** %238, align 8
  %240 = load i8, i8* %56, align 1
  %241 = icmp slt i8 %240, 0
  %242 = load i8*, i8** %29, align 8
  %243 = select i1 %241, i8* %242, i8* %28
  %244 = load i32, i32* %63, align 8
  %245 = sext i32 %244 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %239, i8* align 1 %243, i64 %245, i1 false)
  %246 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %221, align 8
  %247 = load i32, i32* %63, align 8
  call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* %246, i32 %247) #9
  %248 = load %"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"** %64, align 8
  %249 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %248, i64 0, i32 6
  %250 = load %"class.net::UploadDataStream"*, %"class.net::UploadDataStream"** %249, align 8
  %251 = getelementptr inbounds %"class.net::UploadDataStream", %"class.net::UploadDataStream"* %250, i64 0, i32 1
  %252 = load i64, i64* %251, align 8
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %272, label %254

254:                                              ; preds = %236
  %255 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0, i32 0, i32 0
  %256 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  br label %257

257:                                              ; preds = %268, %254
  %258 = phi %"class.net::UploadDataStream"* [ %250, %254 ], [ %271, %268 ]
  %259 = phi i64 [ %252, %254 ], [ %266, %268 ]
  %260 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %221, align 8
  %261 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %260, i64 0, i32 0
  %262 = trunc i64 %259 to i32
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %255, align 8
  %263 = call i32 @_ZN3net16UploadDataStream4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::UploadDataStream"* %258, %"class.net::IOBuffer"* %261, i32 %262, %"class.base::OnceCallback"* nonnull %10) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %256) #9
  %264 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %221, align 8
  call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* %264, i32 %263) #9
  %265 = sext i32 %263 to i64
  %266 = sub i64 %259, %265
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %272, label %268

268:                                              ; preds = %257
  %269 = load %"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"** %64, align 8
  %270 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %269, i64 0, i32 6
  %271 = load %"class.net::UploadDataStream"*, %"class.net::UploadDataStream"** %270, align 8
  br label %257

272:                                              ; preds = %257, %236
  %273 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %221, align 8
  call void @_ZN3net17DrainableIOBuffer9SetOffsetEi(%"class.net::DrainableIOBuffer"* %273, i32 0) #9
  %274 = load %"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"** %64, align 8
  %275 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %274, i64 0, i32 6
  %276 = load %"class.net::UploadDataStream"*, %"class.net::UploadDataStream"** %275, align 8
  %277 = getelementptr inbounds %"class.net::UploadDataStream", %"class.net::UploadDataStream"* %276, i64 0, i32 1
  %278 = load i64, i64* %277, align 8
  call fastcc void @_ZN3net12_GLOBAL__N_121NetLogSendRequestBodyERKNS_16NetLogWithSourceEmbb(%"class.net::NetLogWithSource"* dereferenceable(24) %11, i64 %278, i1 zeroext false, i1 zeroext true)
  %279 = atomicrmw sub i32* %210, i32 1 acq_rel
  %280 = icmp eq i32 %279, 1
  br i1 %280, label %281, label %321

281:                                              ; preds = %272
  %282 = bitcast i8* %206 to void (%"class.net::IOBuffer"*)***
  %283 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %282, align 8
  %284 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %283, i64 1
  %285 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %284, align 8
  call void %285(%"class.net::IOBuffer"* nonnull %207) #9
  br label %321

286:                                              ; preds = %189, %185, %179, %173
  %287 = call i8* @_Znwm(i64 48) #13
  %288 = bitcast i8* %287 to %"class.net::StringIOBuffer"*
  call void @_ZN3net14StringIOBufferC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::StringIOBuffer"* nonnull %288, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %8) #9
  %289 = getelementptr inbounds i8, i8* %287, i64 8
  %290 = bitcast i8* %289 to i32*
  %291 = atomicrmw add i32* %290, i32 1 monotonic
  %292 = load i8, i8* %56, align 1
  %293 = icmp slt i8 %292, 0
  %294 = load i64, i64* %30, align 8
  %295 = zext i8 %292 to i64
  %296 = select i1 %293, i64 %294, i64 %295
  %297 = call i8* @_Znwm(i64 40) #13
  %298 = bitcast i8* %297 to %"class.net::DrainableIOBuffer"*
  %299 = bitcast i8* %287 to %"class.net::IOBuffer"*
  call void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEm(%"class.net::DrainableIOBuffer"* nonnull %298, %"class.net::IOBuffer"* nonnull %299, i64 %296) #9
  %300 = getelementptr inbounds i8, i8* %297, i64 8
  %301 = bitcast i8* %300 to i32*
  %302 = atomicrmw add i32* %301, i32 1 monotonic
  %303 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 3
  %304 = ptrtoint i8* %297 to i64
  %305 = bitcast %class.scoped_refptr.35* %303 to i64*
  %306 = getelementptr inbounds %class.scoped_refptr.35, %class.scoped_refptr.35* %303, i64 0, i32 0
  %307 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %306, align 8
  store i64 %304, i64* %305, align 8
  %308 = icmp eq %"class.net::DrainableIOBuffer"* %307, null
  br i1 %308, label %321, label %309

309:                                              ; preds = %286
  %310 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %307, i64 0, i32 0, i32 1
  %311 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %310, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %312 = atomicrmw sub i32* %311, i32 1 acq_rel
  %313 = icmp eq i32 %312, 1
  br i1 %313, label %314, label %321

314:                                              ; preds = %309
  %315 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %310, i64 -2
  %316 = bitcast %"class.base::RefCountedThreadSafe.36"* %315 to %"class.net::IOBuffer"*
  %317 = bitcast %"class.base::RefCountedThreadSafe.36"* %315 to void (%"class.net::IOBuffer"*)***
  %318 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %317, align 8
  %319 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %318, i64 1
  %320 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %319, align 8
  call void %320(%"class.net::IOBuffer"* nonnull %316) #9
  br label %321

321:                                              ; preds = %286, %309, %314, %281, %272
  %322 = call i32 @_ZN3net16HttpStreamParser6DoLoopEi(%"class.net::HttpStreamParser"* %0, i32 0)
  %323 = icmp eq i32 %322, -1
  br i1 %323, label %324, label %328

324:                                              ; preds = %321
  %325 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 22, i32 0
  %326 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %327 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %325, %"class.base::internal::CallbackBase"* dereferenceable(8) %326) #9
  br label %328

328:                                              ; preds = %324, %321
  %329 = icmp slt i32 %322, 0
  %330 = select i1 %329, i32 %322, i32 0
  %331 = load i8, i8* %56, align 1
  %332 = icmp slt i8 %331, 0
  br i1 %332, label %333, label %335

333:                                              ; preds = %328
  %334 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %334) #13
  br label %335

335:                                              ; preds = %328, %333
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #9
  br label %336

336:                                              ; preds = %6, %335
  %337 = phi i32 [ %330, %335 ], [ %23, %6 ]
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %16) #9
  ret i32 %337
}

declare void @_ZN3net20NetLogRequestHeadersERKNS_16NetLogWithSourceENS_15NetLogEventTypeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEPKNS_18HttpRequestHeadersE(%"class.net::NetLogWithSource"* dereferenceable(24), i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.net::HttpRequestHeaders"*) local_unnamed_addr #4

declare void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"*) unnamed_addr #4

declare void @_ZNK3net18HttpRequestHeaders8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.net::HttpRequestHeaders"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net16HttpStreamParser32ShouldMergeRequestHeadersAndBodyERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPKNS_16UploadDataStreamE(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.net::UploadDataStream"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.net::UploadDataStream"* %1, null
  br i1 %3, label %25, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.net::UploadDataStream"* %1 to i1 (%"class.net::UploadDataStream"*)***
  %6 = load i1 (%"class.net::UploadDataStream"*)**, i1 (%"class.net::UploadDataStream"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.net::UploadDataStream"*)*, i1 (%"class.net::UploadDataStream"*)** %6, i64 2
  %8 = load i1 (%"class.net::UploadDataStream"*)*, i1 (%"class.net::UploadDataStream"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.net::UploadDataStream"* nonnull %1) #9
  br i1 %9, label %10, label %25

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.net::UploadDataStream", %"class.net::UploadDataStream"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %17 to i64
  %22 = select i1 %18, i64 %20, i64 %21
  %23 = add i64 %22, %12
  %24 = icmp ugt i64 %23, 1400
  br i1 %24, label %25, label %26

25:                                               ; preds = %10, %2, %14, %4
  br label %26

26:                                               ; preds = %14, %25
  %27 = phi i1 [ false, %25 ], [ true, %14 ]
  ret i1 %27
}

declare void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"*, i32) local_unnamed_addr #4

declare i32 @_ZN3net16UploadDataStream4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::UploadDataStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3net17DrainableIOBuffer9SetOffsetEi(%"class.net::DrainableIOBuffer"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_121NetLogSendRequestBodyERKNS_16NetLogWithSourceEmbb(%"class.net::NetLogWithSource"* dereferenceable(24), i64, i1 zeroext, i1 zeroext) unnamed_addr #0 {
  %5 = alloca %"class.base::Value", align 8
  %6 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %0, i64 0, i32 1
  %7 = load %"class.net::NetLog"*, %"class.net::NetLog"** %6, align 8
  %8 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %7, i64 0, i32 3
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11, !prof !14

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %0, i64 0, i32 0
  %13 = bitcast %"class.base::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false) #9, !alias.scope !15
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %5, i8 zeroext 6) #9
  %14 = trunc i64 %1 to i32
  %15 = call %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"* nonnull %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0), i64 6, i32 %14) #9
  %16 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i64 10, i1 zeroext %2) #9
  %17 = call %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"* nonnull %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), i64 9, i1 zeroext %3) #9
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %7, i32 165, %"struct.net::NetLogSource"* dereferenceable(16) %12, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %5) #9
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #9
  br label %18

18:                                               ; preds = %4, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16HttpStreamParser6DoLoopEi(%"class.net::HttpStreamParser"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 25
  %5 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 3
  %6 = bitcast %class.scoped_refptr.35* %5 to i64*
  %7 = getelementptr inbounds %class.scoped_refptr.35, %class.scoped_refptr.35* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 28
  %9 = bitcast %class.scoped_refptr.110* %8 to i64*
  %10 = getelementptr inbounds %class.scoped_refptr.110, %class.scoped_refptr.110* %8, i64 0, i32 0
  %11 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 27
  %12 = bitcast %class.scoped_refptr.110* %11 to i64*
  %13 = getelementptr inbounds %class.scoped_refptr.110, %class.scoped_refptr.110* %11, i64 0, i32 0
  %14 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 29
  %16 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 27, i32 0
  %17 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 28, i32 0
  %18 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 9
  %19 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 30
  %20 = load i32, i32* %3, align 8
  br label %21

21:                                               ; preds = %166, %2
  %22 = phi i32 [ %20, %2 ], [ %167, %166 ]
  %23 = phi i32 [ %1, %2 ], [ %168, %166 ]
  store i32 0, i32* %3, align 8
  switch i32 %22, label %160 [
    i32 1, label %24
    i32 2, label %26
    i32 3, label %28
    i32 4, label %30
    i32 5, label %48
    i32 6, label %107
    i32 7, label %152
    i32 8, label %154
    i32 9, label %156
    i32 10, label %158
  ]

24:                                               ; preds = %21
  %25 = tail call i32 @_ZN3net16HttpStreamParser13DoSendHeadersEv(%"class.net::HttpStreamParser"* %0)
  br label %160

26:                                               ; preds = %21
  %27 = tail call i32 @_ZN3net16HttpStreamParser21DoSendHeadersCompleteEi(%"class.net::HttpStreamParser"* %0, i32 %23)
  br label %160

28:                                               ; preds = %21
  %29 = tail call i32 @_ZN3net16HttpStreamParser10DoSendBodyEv(%"class.net::HttpStreamParser"* %0)
  br label %160

30:                                               ; preds = %21
  %31 = icmp slt i32 %23, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %30
  store i32 6, i32* %3, align 8
  %33 = icmp eq i32 %23, -101
  br i1 %33, label %34, label %160

34:                                               ; preds = %32
  store i32 -101, i32* %19, align 4
  br label %166

35:                                               ; preds = %30
  %36 = sext i32 %23 to i64
  %37 = load i64, i64* %18, align 8
  %38 = add nsw i64 %37, %36
  store i64 %38, i64* %18, align 8
  %39 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %17, align 8
  %40 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %39, i64 0, i32 4
  %41 = load i32, i32* %40, align 8
  %42 = add nsw i32 %41, %23
  store i32 %42, i32* %40, align 8
  %43 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %39, i64 0, i32 1
  %44 = load i8*, i8** %43, align 8
  %45 = sext i32 %42 to i64
  %46 = getelementptr inbounds i8, i8* %44, i64 %45
  %47 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %39, i64 0, i32 0, i32 2
  store i8* %46, i8** %47, align 8
  store i32 3, i32* %3, align 8
  br label %166

48:                                               ; preds = %21
  %49 = icmp slt i32 %23, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %48
  store i32 6, i32* %3, align 8
  br label %160

51:                                               ; preds = %48
  %52 = load %"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"** %14, align 8
  %53 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %52, i64 0, i32 6
  %54 = load %"class.net::UploadDataStream"*, %"class.net::UploadDataStream"** %53, align 8
  %55 = getelementptr inbounds %"class.net::UploadDataStream", %"class.net::UploadDataStream"* %54, i64 0, i32 4
  %56 = load i8, i8* %55, align 8, !range !13
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %96, label %58

58:                                               ; preds = %51
  %59 = icmp eq i32 %23, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %58
  store i8 1, i8* %15, align 8
  br label %61

61:                                               ; preds = %60, %58
  %62 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %16, align 8
  %63 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %62, i64 0, i32 0, i32 2
  %64 = load i8*, i8** %63, align 8
  %65 = sext i32 %23 to i64
  %66 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %17, align 8
  %67 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %66, i64 0, i32 3
  store i32 0, i32* %67, align 4
  %68 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %66, i64 0, i32 4
  store i32 0, i32* %68, align 8
  %69 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %66, i64 0, i32 1
  %70 = bitcast i8** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %66, i64 0, i32 0, i32 2
  %73 = bitcast i8** %72 to i64*
  store i64 %71, i64* %73, align 8
  %74 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %17, align 8
  %75 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %74, i64 0, i32 0, i32 2
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %74, i64 0, i32 2
  %78 = load i32, i32* %77, align 8
  %79 = sext i32 %78 to i64
  %80 = add nuw nsw i64 %65, 12
  %81 = icmp ugt i64 %80, %79
  br i1 %81, label %163, label %82

82:                                               ; preds = %61
  %83 = tail call i32 (i8*, i64, i8*, ...) @_ZN4base8snprintfEPcmPKcz(i8* %76, i64 %79, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i32 %23) #9
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %76, i64 %84
  br i1 %59, label %88, label %86

86:                                               ; preds = %82
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %85, i8* align 1 %64, i64 %65, i1 false) #9
  %87 = getelementptr inbounds i8, i8* %85, i64 %65
  br label %88

88:                                               ; preds = %86, %82
  %89 = phi i8* [ %87, %86 ], [ %85, %82 ]
  %90 = bitcast i8* %89 to i16*
  store i16 2573, i16* %90, align 1
  %91 = getelementptr inbounds i8, i8* %89, i64 2
  %92 = ptrtoint i8* %91 to i64
  %93 = ptrtoint i8* %76 to i64
  %94 = sub i64 %92, %93
  %95 = trunc i64 %94 to i32
  br label %96

96:                                               ; preds = %88, %51
  %97 = phi i32 [ %23, %51 ], [ %95, %88 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  store i32 6, i32* %3, align 8
  br label %166

100:                                              ; preds = %96
  %101 = icmp sgt i32 %97, 0
  br i1 %101, label %102, label %160

102:                                              ; preds = %100
  %103 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %17, align 8
  %104 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %103, i64 0, i32 3
  %105 = load i32, i32* %104, align 4
  %106 = add nsw i32 %105, %97
  store i32 %106, i32* %104, align 4
  store i32 3, i32* %3, align 8
  br label %166

107:                                              ; preds = %21
  %108 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %7, align 8
  store i64 0, i64* %6, align 8
  %109 = icmp eq %"class.net::DrainableIOBuffer"* %108, null
  br i1 %109, label %122, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %108, i64 0, i32 0, i32 1
  %112 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %111, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = atomicrmw sub i32* %112, i32 1 acq_rel
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %115, label %122

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %111, i64 -2
  %117 = bitcast %"class.base::RefCountedThreadSafe.36"* %116 to %"class.net::IOBuffer"*
  %118 = bitcast %"class.base::RefCountedThreadSafe.36"* %116 to void (%"class.net::IOBuffer"*)***
  %119 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %119, i64 1
  %121 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %120, align 8
  tail call void %121(%"class.net::IOBuffer"* nonnull %117) #9
  br label %122

122:                                              ; preds = %115, %110, %107
  %123 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %10, align 8
  store i64 0, i64* %9, align 8
  %124 = icmp eq %"class.net::HttpStreamParser::SeekableIOBuffer"* %123, null
  br i1 %124, label %137, label %125

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %123, i64 0, i32 0, i32 1
  %127 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %126, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = atomicrmw sub i32* %127, i32 1 acq_rel
  %129 = icmp eq i32 %128, 1
  br i1 %129, label %130, label %137

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %126, i64 -2
  %132 = bitcast %"class.base::RefCountedThreadSafe.36"* %131 to %"class.net::IOBuffer"*
  %133 = bitcast %"class.base::RefCountedThreadSafe.36"* %131 to void (%"class.net::IOBuffer"*)***
  %134 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %134, i64 1
  %136 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %135, align 8
  tail call void %136(%"class.net::IOBuffer"* nonnull %132) #9
  br label %137

137:                                              ; preds = %130, %125, %122
  %138 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %13, align 8
  store i64 0, i64* %12, align 8
  %139 = icmp eq %"class.net::HttpStreamParser::SeekableIOBuffer"* %138, null
  br i1 %139, label %160, label %140

140:                                              ; preds = %137
  %141 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %138, i64 0, i32 0, i32 1
  %142 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %141, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = atomicrmw sub i32* %142, i32 1 acq_rel
  %144 = icmp eq i32 %143, 1
  br i1 %144, label %145, label %160

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %141, i64 -2
  %147 = bitcast %"class.base::RefCountedThreadSafe.36"* %146 to %"class.net::IOBuffer"*
  %148 = bitcast %"class.base::RefCountedThreadSafe.36"* %146 to void (%"class.net::IOBuffer"*)***
  %149 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %149, i64 1
  %151 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %150, align 8
  tail call void %151(%"class.net::IOBuffer"* nonnull %147) #9
  br label %160

152:                                              ; preds = %21
  tail call void @_ZNK3net16NetLogWithSource10BeginEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %4, i32 338) #9
  %153 = tail call i32 @_ZN3net16HttpStreamParser13DoReadHeadersEv(%"class.net::HttpStreamParser"* %0)
  br label %160

154:                                              ; preds = %21
  %155 = tail call i32 @_ZN3net16HttpStreamParser21DoReadHeadersCompleteEi(%"class.net::HttpStreamParser"* %0, i32 %23)
  tail call void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %4, i32 338, i32 %155) #9
  br label %160

156:                                              ; preds = %21
  %157 = tail call i32 @_ZN3net16HttpStreamParser10DoReadBodyEv(%"class.net::HttpStreamParser"* %0)
  br label %160

158:                                              ; preds = %21
  %159 = tail call i32 @_ZN3net16HttpStreamParser18DoReadBodyCompleteEi(%"class.net::HttpStreamParser"* %0, i32 %23)
  br label %160

160:                                              ; preds = %145, %140, %137, %100, %50, %32, %21, %158, %156, %154, %152, %28, %26, %24
  %161 = phi i32 [ %23, %21 ], [ %159, %158 ], [ %157, %156 ], [ %155, %154 ], [ %153, %152 ], [ %29, %28 ], [ %27, %26 ], [ %25, %24 ], [ %23, %32 ], [ %23, %50 ], [ %97, %100 ], [ %23, %137 ], [ %23, %140 ], [ %23, %145 ]
  %162 = icmp eq i32 %161, -1
  br i1 %162, label %169, label %163

163:                                              ; preds = %160, %61
  %164 = phi i32 [ -4, %61 ], [ %161, %160 ]
  %165 = load i32, i32* %3, align 8
  br label %166

166:                                              ; preds = %163, %102, %99, %35, %34
  %167 = phi i32 [ %165, %163 ], [ 3, %102 ], [ 6, %99 ], [ 3, %35 ], [ 6, %34 ]
  %168 = phi i32 [ %164, %163 ], [ 0, %102 ], [ 0, %99 ], [ 0, %35 ], [ 0, %34 ]
  switch i32 %167, label %21 [
    i32 11, label %169
    i32 0, label %169
  ]

169:                                              ; preds = %166, %166, %160
  %170 = phi i32 [ %168, %166 ], [ %168, %166 ], [ -1, %160 ]
  ret i32 %170
}

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16HttpStreamParser16ConfirmHandshakeEN4base12OnceCallbackIFviEEE(%"class.net::HttpStreamParser"*, %"class.base::OnceCallback"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.base::WeakPtr", align 8
  %6 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 23
  %7 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %6, align 8
  %8 = bitcast %"class.base::WeakPtr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #9
  %9 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9, !noalias !20
  %10 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 32, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %10) #9, !noalias !20
  %11 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 32, i32 0, i32 1
  %12 = load i64, i64* %11, align 8, !noalias !20
  %13 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %13, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %12) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9, !noalias !20
  %14 = call i8* @_Znwm(i64 64) #13, !noalias !23
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #9, !noalias !23
  %16 = getelementptr inbounds i8, i8* %14, i64 32
  %17 = bitcast i8* %16 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::HttpStreamParser"*, i32)* @_ZN3net16HttpStreamParser27RunConfirmHandshakeCallbackEi to i64), i64 0>, <2 x i64>* %17, align 8, !noalias !23
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = bitcast i8* %18 to %"class.base::internal::WeakReference"*
  %20 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %19, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %20) #9, !noalias !23
  %21 = getelementptr inbounds i8, i8* %14, i64 56
  %22 = bitcast i8* %21 to i64*
  %23 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %5, i64 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !noalias !23
  store i64 %24, i64* %22, align 8, !noalias !23
  %25 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %14, i8** %25, align 8, !alias.scope !23
  %26 = bitcast %"class.net::StreamSocket"* %7 to i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)***
  %27 = load i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)**, i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)*** %26, align 8
  %28 = getelementptr inbounds i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)*, i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)** %27, i64 12
  %29 = load i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)*, i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)** %28, align 8
  %30 = call i32 %29(%"class.net::StreamSocket"* %7, %"class.base::OnceCallback"* nonnull %4) #9
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #9
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #9
  %32 = icmp eq i32 %30, -1
  br i1 %32, label %33, label %37

33:                                               ; preds = %2
  %34 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 21, i32 0
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0
  %36 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %34, %"class.base::internal::CallbackBase"* dereferenceable(8) %35) #9
  br label %37

37:                                               ; preds = %33, %2
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16HttpStreamParser27RunConfirmHandshakeCallbackEi(%"class.net::HttpStreamParser"* nocapture, i32) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 21
  %5 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %8, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %11 = inttoptr i64 %8 to %"class.base::internal::BindStateBase"*
  %12 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %11, i64 0, i32 1
  %13 = bitcast void ()** %12 to void (%"class.base::internal::BindStateBase"*, i32)**
  %14 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %13, align 8
  tail call void %14(%"class.base::internal::BindStateBase"* %11, i32 %1) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16HttpStreamParser19ReadResponseHeadersEN4base12OnceCallbackIFviEEE(%"class.net::HttpStreamParser"*, %"class.base::OnceCallback"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 11
  br i1 %5, label %24, label %6

6:                                                ; preds = %2
  store i32 7, i32* %3, align 8
  %7 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 5, i32 0
  %8 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %7, align 8
  %9 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %8, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %6
  tail call void @_ZN3net16GrowableIOBuffer10set_offsetEi(%"class.net::GrowableIOBuffer"* %8, i32 0) #9
  store i32 8, i32* %3, align 8
  br label %13

13:                                               ; preds = %6, %12
  %14 = phi i32 [ %10, %12 ], [ 0, %6 ]
  %15 = tail call i32 @_ZN3net16HttpStreamParser6DoLoopEi(%"class.net::HttpStreamParser"* %0, i32 %14)
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 22, i32 0
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0
  %20 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %18, %"class.base::internal::CallbackBase"* dereferenceable(8) %19) #9
  br label %21

21:                                               ; preds = %17, %13
  %22 = icmp slt i32 %15, 0
  %23 = select i1 %22, i32 %15, i32 0
  br label %24

24:                                               ; preds = %2, %21
  %25 = phi i32 [ %23, %21 ], [ -100, %2 ]
  ret i32 %25
}

declare void @_ZN3net16GrowableIOBuffer10set_offsetEi(%"class.net::GrowableIOBuffer"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16HttpStreamParser16ReadResponseBodyEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::HttpStreamParser"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = icmp eq %"class.net::IOBuffer"* %1, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %4
  %8 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 375, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)) #9
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  br label %10

10:                                               ; preds = %4, %7
  %11 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 11
  br i1 %13, label %46, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 19
  br i1 %6, label %19, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 monotonic
  br label %19

19:                                               ; preds = %16, %14
  %20 = ptrtoint %"class.net::IOBuffer"* %1 to i64
  %21 = bitcast %class.scoped_refptr.37* %15 to i64*
  %22 = getelementptr inbounds %class.scoped_refptr.37, %class.scoped_refptr.37* %15, i64 0, i32 0
  %23 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %22, align 8
  store i64 %20, i64* %21, align 8
  %24 = icmp eq %"class.net::IOBuffer"* %23, null
  br i1 %24, label %37, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %23, i64 0, i32 1
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %37

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %26, i64 -2
  %32 = bitcast %"class.base::RefCountedThreadSafe.36"* %31 to %"class.net::IOBuffer"*
  %33 = bitcast %"class.base::RefCountedThreadSafe.36"* %31 to void (%"class.net::IOBuffer"*)***
  %34 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %34, i64 1
  %36 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %35, align 8
  call void %36(%"class.net::IOBuffer"* nonnull %32) #9
  br label %37

37:                                               ; preds = %19, %25, %30
  %38 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 20
  store i32 %2, i32* %38, align 8
  store i32 9, i32* %11, align 8
  %39 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 2
  store %"struct.net::HttpRequestInfo"* null, %"struct.net::HttpRequestInfo"** %39, align 8
  %40 = call i32 @_ZN3net16HttpStreamParser6DoLoopEi(%"class.net::HttpStreamParser"* %0, i32 0)
  %41 = icmp eq i32 %40, -1
  br i1 %41, label %42, label %46

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 22, i32 0
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %45 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %43, %"class.base::internal::CallbackBase"* dereferenceable(8) %44) #9
  br label %46

46:                                               ; preds = %37, %42, %10
  %47 = phi i32 [ 0, %10 ], [ -1, %42 ], [ %40, %37 ]
  ret i32 %47
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16HttpStreamParser13DoSendHeadersEv(%"class.net::HttpStreamParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::OnceCallback", align 8
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = alloca %"struct.net::NetworkTrafficAnnotationTag", align 4
  %5 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 3, i32 0
  %6 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %5, align 8
  %7 = tail call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %6) #9
  %8 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %5, align 8
  %9 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %8, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %7, %10
  br i1 %11, label %12, label %18

12:                                               ; preds = %1
  %13 = tail call i64 @_ZN4base4Time3NowEv() #9
  %14 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 10
  %15 = load %"class.net::HttpResponseInfo"*, %"class.net::HttpResponseInfo"** %14, align 8
  %16 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %15, i64 0, i32 16, i32 0, i32 0
  store i64 %13, i64* %16, align 8
  %17 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %5, align 8
  br label %18

18:                                               ; preds = %12, %1
  %19 = phi %"class.net::DrainableIOBuffer"* [ %17, %12 ], [ %8, %1 ]
  %20 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 2, i32* %20, align 8
  %21 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 23
  %22 = bitcast %"class.net::StreamSocket"** %21 to %"class.net::Socket"**
  %23 = load %"class.net::Socket"*, %"class.net::Socket"** %22, align 8
  %24 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %19, i64 0, i32 0
  %25 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0
  %26 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 26, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %25, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %26) #9
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %27, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %25) #9
  %28 = bitcast %"struct.net::NetworkTrafficAnnotationTag"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #9
  %29 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 31, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"struct.net::NetworkTrafficAnnotationTag", %"struct.net::NetworkTrafficAnnotationTag"* %4, i64 0, i32 0
  store i32 %30, i32* %31, align 4
  %32 = bitcast %"class.net::Socket"* %23 to i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)***
  %33 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)**, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)*** %32, align 8
  %34 = getelementptr inbounds i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)** %33, i64 5
  %35 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)** %34, align 8
  %36 = call i32 %35(%"class.net::Socket"* %23, %"class.net::IOBuffer"* %24, i32 %7, %"class.base::OnceCallback"* nonnull %2, %"struct.net::NetworkTrafficAnnotationTag"* nonnull dereferenceable(4) %4) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #9
  %37 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #9
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16HttpStreamParser21DoSendHeadersCompleteEi(%"class.net::HttpStreamParser"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %4, label %16

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 6, i32* %5, align 8
  %6 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 3, i32 0
  %7 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %6, align 8
  %8 = tail call i32 @_ZNK3net17DrainableIOBuffer13BytesConsumedEv(%"class.net::DrainableIOBuffer"* %7) #9
  %9 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 8
  %11 = icmp sge i32 %8, %10
  %12 = icmp eq i32 %1, -101
  %13 = and i1 %12, %11
  br i1 %13, label %14, label %60

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 30
  store i32 -101, i32* %15, align 4
  br label %60

16:                                               ; preds = %2
  %17 = sext i32 %1 to i64
  %18 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 9
  %19 = load i64, i64* %18, align 8
  %20 = add nsw i64 %19, %17
  store i64 %20, i64* %18, align 8
  %21 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 3, i32 0
  %22 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %21, align 8
  tail call void @_ZN3net17DrainableIOBuffer10DidConsumeEi(%"class.net::DrainableIOBuffer"* %22, i32 %1) #9
  %23 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %21, align 8
  %24 = tail call i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"* %23) #9
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 1, i32* %27, align 8
  br label %60

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 2
  %30 = load %"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"** %29, align 8
  %31 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %30, i64 0, i32 6
  %32 = load %"class.net::UploadDataStream"*, %"class.net::UploadDataStream"** %31, align 8
  %33 = icmp eq %"class.net::UploadDataStream"* %32, null
  br i1 %33, label %58, label %34

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.net::UploadDataStream", %"class.net::UploadDataStream"* %32, i64 0, i32 4
  %36 = load i8, i8* %35, align 8, !range !13
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %51

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.net::UploadDataStream", %"class.net::UploadDataStream"* %32, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %38
  %43 = tail call zeroext i1 @_ZNK3net16UploadDataStream5IsEOFEv(%"class.net::UploadDataStream"* nonnull %32) #9
  br i1 %43, label %58, label %44

44:                                               ; preds = %42
  %45 = load %"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"** %29, align 8
  %46 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %45, i64 0, i32 6
  %47 = load %"class.net::UploadDataStream"*, %"class.net::UploadDataStream"** %46, align 8
  %48 = getelementptr inbounds %"class.net::UploadDataStream", %"class.net::UploadDataStream"* %47, i64 0, i32 4
  %49 = load i8, i8* %48, align 8, !range !13
  %50 = icmp ne i8 %49, 0
  br label %51

51:                                               ; preds = %44, %34
  %52 = phi i1 [ %50, %44 ], [ true, %34 ]
  %53 = phi %"class.net::UploadDataStream"* [ %47, %44 ], [ %32, %34 ]
  %54 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 25
  %55 = getelementptr inbounds %"class.net::UploadDataStream", %"class.net::UploadDataStream"* %53, i64 0, i32 1
  %56 = load i64, i64* %55, align 8
  tail call fastcc void @_ZN3net12_GLOBAL__N_121NetLogSendRequestBodyERKNS_16NetLogWithSourceEmbb(%"class.net::NetLogWithSource"* dereferenceable(24) %54, i64 %56, i1 zeroext %52, i1 zeroext false)
  %57 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 3, i32* %57, align 8
  br label %60

58:                                               ; preds = %38, %28, %42
  %59 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 6, i32* %59, align 8
  br label %60

60:                                               ; preds = %4, %58, %51, %26, %14
  %61 = phi i32 [ 0, %14 ], [ 0, %26 ], [ 0, %51 ], [ 0, %58 ], [ %1, %4 ]
  ret i32 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16HttpStreamParser10DoSendBodyEv(%"class.net::HttpStreamParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = alloca %"struct.net::NetworkTrafficAnnotationTag", align 4
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::WeakPtr", align 8
  %8 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 28, i32 0
  %9 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %8, align 8
  %10 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %9, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %9, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %11, %13
  br i1 %14, label %15, label %37

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 4, i32* %16, align 8
  %17 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 23
  %18 = bitcast %"class.net::StreamSocket"** %17 to %"class.net::Socket"**
  %19 = load %"class.net::Socket"*, %"class.net::Socket"** %18, align 8
  %20 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %9, i64 0, i32 0
  %21 = load i32, i32* %10, align 4
  %22 = load i32, i32* %12, align 8
  %23 = sub nsw i32 %21, %22
  %24 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0
  %25 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 26, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %24, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %25) #9
  %26 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %26, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %24) #9
  %27 = bitcast %"struct.net::NetworkTrafficAnnotationTag"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 31, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %"struct.net::NetworkTrafficAnnotationTag", %"struct.net::NetworkTrafficAnnotationTag"* %5, i64 0, i32 0
  store i32 %29, i32* %30, align 4
  %31 = bitcast %"class.net::Socket"* %19 to i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)***
  %32 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)**, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)*** %31, align 8
  %33 = getelementptr inbounds i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)** %32, i64 5
  %34 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)** %33, align 8
  %35 = call i32 %34(%"class.net::Socket"* %19, %"class.net::IOBuffer"* %20, i32 %23, %"class.base::OnceCallback"* nonnull %3, %"struct.net::NetworkTrafficAnnotationTag"* nonnull dereferenceable(4) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #9
  %36 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #9
  br label %89

37:                                               ; preds = %1
  %38 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 2
  %39 = load %"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"** %38, align 8
  %40 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %39, i64 0, i32 6
  %41 = load %"class.net::UploadDataStream"*, %"class.net::UploadDataStream"** %40, align 8
  %42 = getelementptr inbounds %"class.net::UploadDataStream", %"class.net::UploadDataStream"* %41, i64 0, i32 4
  %43 = load i8, i8* %42, align 8, !range !13
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %51, label %45

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 29
  %47 = load i8, i8* %46, align 8, !range !13
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 6, i32* %50, align 8
  br label %89

51:                                               ; preds = %37, %45
  %52 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 27, i32 0
  %53 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %52, align 8
  %54 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %53, i64 0, i32 3
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %53, i64 0, i32 4
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %53, i64 0, i32 1
  %57 = bitcast i8** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %53, i64 0, i32 0, i32 2
  %60 = bitcast i8** %59 to i64*
  store i64 %58, i64* %60, align 8
  %61 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 5, i32* %61, align 8
  %62 = load %"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"** %38, align 8
  %63 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %62, i64 0, i32 6
  %64 = load %"class.net::UploadDataStream"*, %"class.net::UploadDataStream"** %63, align 8
  %65 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %52, align 8
  %66 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %65, i64 0, i32 0
  %67 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %65, i64 0, i32 2
  %68 = load i32, i32* %67, align 8
  %69 = bitcast %"class.base::WeakPtr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %69) #9
  %70 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #9, !noalias !28
  %71 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 32, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %71) #9, !noalias !28
  %72 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 32, i32 0, i32 1
  %73 = load i64, i64* %72, align 8, !noalias !28
  %74 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %74, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %73) #9
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #9, !noalias !28
  %75 = call i8* @_Znwm(i64 64) #13, !noalias !31
  %76 = bitcast i8* %75 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %76, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #9, !noalias !31
  %77 = getelementptr inbounds i8, i8* %75, i64 32
  %78 = bitcast i8* %77 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::HttpStreamParser"*, i32)* @_ZN3net16HttpStreamParser12OnIOCompleteEi to i64), i64 0>, <2 x i64>* %78, align 8, !noalias !31
  %79 = getelementptr inbounds i8, i8* %75, i64 48
  %80 = bitcast i8* %79 to %"class.base::internal::WeakReference"*
  %81 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %80, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %81) #9, !noalias !31
  %82 = getelementptr inbounds i8, i8* %75, i64 56
  %83 = bitcast i8* %82 to i64*
  %84 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8, !noalias !31
  store i64 %85, i64* %83, align 8, !noalias !31
  %86 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %75, i8** %86, align 8, !alias.scope !31
  %87 = call i32 @_ZN3net16UploadDataStream4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::UploadDataStream"* %64, %"class.net::IOBuffer"* %66, i32 %68, %"class.base::OnceCallback"* nonnull %6) #9
  %88 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %88) #9
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %74) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %69) #9
  br label %89

89:                                               ; preds = %51, %49, %15
  %90 = phi i32 [ %35, %15 ], [ 0, %49 ], [ %87, %51 ]
  ret i32 %90
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN3net16HttpStreamParser18DoSendBodyCompleteEi(%"class.net::HttpStreamParser"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 6, i32* %5, align 8
  %6 = icmp eq i32 %1, -101
  br i1 %6, label %7, label %25

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 30
  store i32 -101, i32* %8, align 4
  br label %25

9:                                                ; preds = %2
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 9
  %12 = load i64, i64* %11, align 8
  %13 = add nsw i64 %12, %10
  store i64 %13, i64* %11, align 8
  %14 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 28, i32 0
  %15 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %14, align 8
  %16 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %15, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, %1
  store i32 %18, i32* %16, align 8
  %19 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %15, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds i8, i8* %20, i64 %21
  %23 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %15, i64 0, i32 0, i32 2
  store i8* %22, i8** %23, align 8
  %24 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 3, i32* %24, align 8
  br label %25

25:                                               ; preds = %4, %9, %7
  %26 = phi i32 [ 0, %7 ], [ 0, %9 ], [ %1, %4 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16HttpStreamParser29DoSendRequestReadBodyCompleteEi(%"class.net::HttpStreamParser"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 6, i32* %5, align 8
  br label %69

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 2
  %8 = load %"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"** %7, align 8
  %9 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %8, i64 0, i32 6
  %10 = load %"class.net::UploadDataStream"*, %"class.net::UploadDataStream"** %9, align 8
  %11 = getelementptr inbounds %"class.net::UploadDataStream", %"class.net::UploadDataStream"* %10, i64 0, i32 4
  %12 = load i8, i8* %11, align 8, !range !13
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %55, label %14

14:                                               ; preds = %6
  %15 = icmp eq i32 %1, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 29
  store i8 1, i8* %17, align 8
  br label %18

18:                                               ; preds = %16, %14
  %19 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 27, i32 0
  %20 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %19, align 8
  %21 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %20, i64 0, i32 0, i32 2
  %22 = load i8*, i8** %21, align 8
  %23 = sext i32 %1 to i64
  %24 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 28, i32 0
  %25 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %24, align 8
  %26 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %25, i64 0, i32 3
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %25, i64 0, i32 4
  store i32 0, i32* %27, align 8
  %28 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %25, i64 0, i32 1
  %29 = bitcast i8** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %25, i64 0, i32 0, i32 2
  %32 = bitcast i8** %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %24, align 8
  %34 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %33, i64 0, i32 0, i32 2
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %33, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = sext i32 %37 to i64
  %39 = add nuw nsw i64 %23, 12
  %40 = icmp ugt i64 %39, %38
  br i1 %40, label %69, label %41

41:                                               ; preds = %18
  %42 = tail call i32 (i8*, i64, i8*, ...) @_ZN4base8snprintfEPcmPKcz(i8* %35, i64 %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i32 %1) #9
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %35, i64 %43
  br i1 %15, label %47, label %45

45:                                               ; preds = %41
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %22, i64 %23, i1 false) #9
  %46 = getelementptr inbounds i8, i8* %44, i64 %23
  br label %47

47:                                               ; preds = %45, %41
  %48 = phi i8* [ %46, %45 ], [ %44, %41 ]
  %49 = bitcast i8* %48 to i16*
  store i16 2573, i16* %49, align 1
  %50 = getelementptr inbounds i8, i8* %48, i64 2
  %51 = ptrtoint i8* %50 to i64
  %52 = ptrtoint i8* %35 to i64
  %53 = sub i64 %51, %52
  %54 = trunc i64 %53 to i32
  br label %55

55:                                               ; preds = %6, %47
  %56 = phi i32 [ %1, %6 ], [ %54, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 6, i32* %59, align 8
  br label %69

60:                                               ; preds = %55
  %61 = icmp sgt i32 %56, 0
  br i1 %61, label %62, label %69

62:                                               ; preds = %60
  %63 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 28, i32 0
  %64 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %63, align 8
  %65 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %64, i64 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = add nsw i32 %66, %56
  store i32 %67, i32* %65, align 4
  %68 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 3, i32* %68, align 8
  br label %69

69:                                               ; preds = %18, %58, %62, %60, %4
  %70 = phi i32 [ %1, %4 ], [ 0, %58 ], [ 0, %62 ], [ %56, %60 ], [ -4, %18 ]
  ret i32 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16HttpStreamParser21DoSendRequestCompleteEi(%"class.net::HttpStreamParser"* nocapture, i32 returned) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 3
  %4 = bitcast %class.scoped_refptr.35* %3 to i64*
  %5 = getelementptr inbounds %class.scoped_refptr.35, %class.scoped_refptr.35* %3, i64 0, i32 0
  %6 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %5, align 8
  store i64 0, i64* %4, align 8
  %7 = icmp eq %"class.net::DrainableIOBuffer"* %6, null
  br i1 %7, label %20, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::DrainableIOBuffer", %"class.net::DrainableIOBuffer"* %6, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i32* %10, i32 1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %20

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %9, i64 -2
  %15 = bitcast %"class.base::RefCountedThreadSafe.36"* %14 to %"class.net::IOBuffer"*
  %16 = bitcast %"class.base::RefCountedThreadSafe.36"* %14 to void (%"class.net::IOBuffer"*)***
  %17 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %17, i64 1
  %19 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %18, align 8
  tail call void %19(%"class.net::IOBuffer"* nonnull %15) #9
  br label %20

20:                                               ; preds = %2, %8, %13
  %21 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 28
  %22 = bitcast %class.scoped_refptr.110* %21 to i64*
  %23 = getelementptr inbounds %class.scoped_refptr.110, %class.scoped_refptr.110* %21, i64 0, i32 0
  %24 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %23, align 8
  store i64 0, i64* %22, align 8
  %25 = icmp eq %"class.net::HttpStreamParser::SeekableIOBuffer"* %24, null
  br i1 %25, label %38, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %24, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw sub i32* %28, i32 1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %38

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %27, i64 -2
  %33 = bitcast %"class.base::RefCountedThreadSafe.36"* %32 to %"class.net::IOBuffer"*
  %34 = bitcast %"class.base::RefCountedThreadSafe.36"* %32 to void (%"class.net::IOBuffer"*)***
  %35 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %35, i64 1
  %37 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %36, align 8
  tail call void %37(%"class.net::IOBuffer"* nonnull %33) #9
  br label %38

38:                                               ; preds = %20, %26, %31
  %39 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 27
  %40 = bitcast %class.scoped_refptr.110* %39 to i64*
  %41 = getelementptr inbounds %class.scoped_refptr.110, %class.scoped_refptr.110* %39, i64 0, i32 0
  %42 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %41, align 8
  store i64 0, i64* %40, align 8
  %43 = icmp eq %"class.net::HttpStreamParser::SeekableIOBuffer"* %42, null
  br i1 %43, label %56, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %42, i64 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw sub i32* %46, i32 1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %56

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %45, i64 -2
  %51 = bitcast %"class.base::RefCountedThreadSafe.36"* %50 to %"class.net::IOBuffer"*
  %52 = bitcast %"class.base::RefCountedThreadSafe.36"* %50 to void (%"class.net::IOBuffer"*)***
  %53 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %53, i64 1
  %55 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %54, align 8
  tail call void %55(%"class.net::IOBuffer"* nonnull %51) #9
  br label %56

56:                                               ; preds = %38, %44, %49
  ret i32 %1
}

declare void @_ZNK3net16NetLogWithSource10BeginEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16HttpStreamParser13DoReadHeadersEv(%"class.net::HttpStreamParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 8, i32* %5, align 8
  %6 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 5, i32 0
  %7 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %6, align 8
  %8 = tail call i32 @_ZN3net16GrowableIOBuffer17RemainingCapacityEv(%"class.net::GrowableIOBuffer"* %7) #9
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %15

10:                                               ; preds = %1
  %11 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %6, align 8
  %12 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %11, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, 4096
  tail call void @_ZN3net16GrowableIOBuffer11SetCapacityEi(%"class.net::GrowableIOBuffer"* %11, i32 %14) #9
  br label %15

15:                                               ; preds = %10, %1
  %16 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %6, align 8
  %17 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %16, i64 0, i32 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 617, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0)) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  %23 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %6, align 8
  br label %24

24:                                               ; preds = %15, %20
  %25 = phi %"class.net::GrowableIOBuffer"* [ %16, %15 ], [ %23, %20 ]
  %26 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 23
  %27 = bitcast %"class.net::StreamSocket"** %26 to %"class.net::Socket"**
  %28 = load %"class.net::Socket"*, %"class.net::Socket"** %27, align 8
  %29 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %25, i64 0, i32 0
  %30 = call i32 @_ZN3net16GrowableIOBuffer17RemainingCapacityEv(%"class.net::GrowableIOBuffer"* %25) #9
  %31 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0
  %32 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 26, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %31, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %32) #9
  %33 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %33, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %31) #9
  %34 = bitcast %"class.net::Socket"* %28 to i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)***
  %35 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)**, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*** %34, align 8
  %36 = getelementptr inbounds i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %35, i64 2
  %37 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %36, align 8
  %38 = call i32 %37(%"class.net::Socket"* %28, %"class.net::IOBuffer"* %29, i32 %30, %"class.base::OnceCallback"* nonnull %3) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #9
  %39 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #9
  ret i32 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16HttpStreamParser21DoReadHeadersCompleteEi(%"class.net::HttpStreamParser"*, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call i32 @_ZN3net16HttpStreamParser22HandleReadHeaderResultEi(%"class.net::HttpStreamParser"* %0, i32 %1)
  %4 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 7
  br i1 %6, label %57, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 30
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %57, label %11

11:                                               ; preds = %7
  %12 = icmp slt i32 %3, 0
  br i1 %12, label %13, label %29

13:                                               ; preds = %11
  store i32 11, i32* %4, align 8
  %14 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 10
  %15 = load %"class.net::HttpResponseInfo"*, %"class.net::HttpResponseInfo"** %14, align 8
  %16 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %15, i64 0, i32 22
  %17 = bitcast %class.scoped_refptr.95* %16 to i64*
  %18 = getelementptr inbounds %class.scoped_refptr.95, %class.scoped_refptr.95* %16, i64 0, i32 0
  %19 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %18, align 8
  store i64 0, i64* %17, align 8
  %20 = icmp eq %"class.net::HttpResponseHeaders"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw sub i32* %22, i32 1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  tail call void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"* nonnull %19) #9
  %26 = bitcast %"class.net::HttpResponseHeaders"* %19 to i8*
  tail call void @_ZdlPv(i8* %26) #13
  br label %27

27:                                               ; preds = %13, %21, %25
  %28 = load i32, i32* %8, align 4
  br label %57

29:                                               ; preds = %11
  %30 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 10
  %31 = load %"class.net::HttpResponseInfo"*, %"class.net::HttpResponseInfo"** %30, align 8
  %32 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %31, i64 0, i32 22
  %33 = getelementptr inbounds %class.scoped_refptr.95, %class.scoped_refptr.95* %32, i64 0, i32 0
  %34 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %33, align 8
  %35 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %34, i64 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = add i32 %36, -100
  %38 = icmp ult i32 %37, 100
  %39 = add i32 %36, -400
  %40 = icmp ult i32 %39, 100
  %41 = or i1 %38, %40
  %42 = add i32 %36, -500
  %43 = icmp ult i32 %42, 100
  %44 = or i1 %43, %41
  br i1 %44, label %57, label %45

45:                                               ; preds = %29
  store i32 11, i32* %4, align 8
  %46 = bitcast %class.scoped_refptr.95* %32 to i64*
  %47 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %33, align 8
  store i64 0, i64* %46, align 8
  %48 = icmp eq %"class.net::HttpResponseHeaders"* %47, null
  br i1 %48, label %55, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw sub i32* %50, i32 1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  tail call void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"* nonnull %47) #9
  %54 = bitcast %"class.net::HttpResponseHeaders"* %47 to i8*
  tail call void @_ZdlPv(i8* %54) #13
  br label %55

55:                                               ; preds = %45, %49, %53
  %56 = load i32, i32* %8, align 4
  br label %57

57:                                               ; preds = %55, %29, %2, %7, %27
  %58 = phi i32 [ %28, %27 ], [ %3, %7 ], [ %3, %2 ], [ %56, %55 ], [ %3, %29 ]
  ret i32 %58
}

declare void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"*, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16HttpStreamParser10DoReadBodyEv(%"class.net::HttpStreamParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::RepeatingCallback", align 8
  %8 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 10, i32* %8, align 8
  %9 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 19, i32 0
  %10 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %9, align 8
  %11 = icmp eq %"class.net::IOBuffer"* %10, null
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 677, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0)) #9
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  br label %15

15:                                               ; preds = %1, %12
  %16 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 5, i32 0
  %17 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %16, align 8
  %18 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %17, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %60, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 6
  %23 = load i32, i32* %22, align 8
  %24 = sub nsw i32 %19, %23
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %59, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29)
  %30 = icmp sgt i32 %24, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  store i8* null, i8** %28, align 8
  br label %41

32:                                               ; preds = %26
  %33 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 %24) #9
  %34 = call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i8* %33, i8* %34) #9
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29)
  store i8* %36, i8** %28, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %32
  %39 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 683, %"class.logging::CheckOpResult"* nonnull %4) #9
  %40 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #9
  br label %41

41:                                               ; preds = %31, %32, %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  %42 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 20
  %43 = load i32, i32* %42, align 4
  %44 = icmp slt i32 %43, %24
  %45 = select i1 %44, i32 %43, i32 %24
  %46 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %9, align 8
  %47 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %46, i64 0, i32 2
  %48 = load i8*, i8** %47, align 8
  %49 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %16, align 8
  %50 = call i8* @_ZN3net16GrowableIOBuffer13StartOfBufferEv(%"class.net::GrowableIOBuffer"* %49) #9
  %51 = load i32, i32* %22, align 8
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %50, i64 %52
  %54 = sext i32 %45 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %48, i8* align 1 %53, i64 %54, i1 false)
  %55 = load i32, i32* %22, align 8
  %56 = add nsw i32 %55, %45
  store i32 %56, i32* %22, align 8
  br i1 %44, label %92, label %57

57:                                               ; preds = %41
  %58 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %16, align 8
  call void @_ZN3net16GrowableIOBuffer11SetCapacityEi(%"class.net::GrowableIOBuffer"* %58, i32 0) #9
  store i32 0, i32* %22, align 8
  br label %92

59:                                               ; preds = %21
  call void @_ZN3net16GrowableIOBuffer11SetCapacityEi(%"class.net::GrowableIOBuffer"* %17, i32 0) #9
  store i32 0, i32* %22, align 8
  br label %60

60:                                               ; preds = %59, %15
  %61 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %62 = load %"class.net::HttpChunkedDecoder"*, %"class.net::HttpChunkedDecoder"** %61, align 8
  %63 = icmp eq %"class.net::HttpChunkedDecoder"* %62, null
  br i1 %63, label %68, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.net::HttpChunkedDecoder", %"class.net::HttpChunkedDecoder"* %62, i64 0, i32 4
  %66 = load i8, i8* %65, align 2, !range !13
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %76, label %92

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 15
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, -1
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 17
  %74 = load i64, i64* %73, align 8
  %75 = icmp slt i64 %74, %70
  br i1 %75, label %76, label %92

76:                                               ; preds = %72, %64, %68
  %77 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 23
  %78 = bitcast %"class.net::StreamSocket"** %77 to %"class.net::Socket"**
  %79 = load %"class.net::Socket"*, %"class.net::Socket"** %78, align 8
  %80 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %9, align 8
  %81 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 20
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0
  %84 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 26, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %83, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %84) #9
  %85 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %85, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %83) #9
  %86 = bitcast %"class.net::Socket"* %79 to i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)***
  %87 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)**, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*** %86, align 8
  %88 = getelementptr inbounds i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %87, i64 2
  %89 = load i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %88, align 8
  %90 = call i32 %89(%"class.net::Socket"* %79, %"class.net::IOBuffer"* %80, i32 %82, %"class.base::OnceCallback"* nonnull %6) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %85) #9
  %91 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %91) #9
  br label %92

92:                                               ; preds = %72, %64, %41, %57, %76
  %93 = phi i32 [ %90, %76 ], [ 0, %72 ], [ 0, %64 ], [ %24, %57 ], [ %43, %41 ]
  ret i32 %93
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16HttpStreamParser18DoReadBodyCompleteEi(%"class.net::HttpStreamParser"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %7, label %27

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %9 = load %"class.net::HttpChunkedDecoder"*, %"class.net::HttpChunkedDecoder"** %8, align 8
  %10 = icmp eq %"class.net::HttpChunkedDecoder"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.net::HttpChunkedDecoder", %"class.net::HttpChunkedDecoder"* %9, i64 0, i32 4
  %13 = load i8, i8* %12, align 2, !range !13
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %25, label %55

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 15
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, -1
  br i1 %18, label %55, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 17
  %21 = load i64, i64* %20, align 8
  %22 = icmp slt i64 %21, %17
  %23 = icmp sgt i64 %17, -1
  %24 = and i1 %22, %23
  br i1 %24, label %25, label %55

25:                                               ; preds = %19, %11
  %26 = select i1 %10, i32 -354, i32 -355
  br label %55

27:                                               ; preds = %2
  %28 = icmp sgt i32 %1, 0
  br i1 %28, label %29, label %55

29:                                               ; preds = %27
  %30 = sext i32 %1 to i64
  %31 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 8
  %32 = load i64, i64* %31, align 8
  %33 = add nsw i64 %32, %30
  store i64 %33, i64* %31, align 8
  %34 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %35 = load %"class.net::HttpChunkedDecoder"*, %"class.net::HttpChunkedDecoder"** %34, align 8
  %36 = icmp eq %"class.net::HttpChunkedDecoder"* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 17
  %39 = load i64, i64* %38, align 8
  %40 = add nsw i64 %39, %30
  store i64 %40, i64* %38, align 8
  br label %71

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 19, i32 0
  %43 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %42, align 8
  %44 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %43, i64 0, i32 2
  %45 = load i8*, i8** %44, align 8
  %46 = tail call i32 @_ZN3net18HttpChunkedDecoder9FilterBufEPci(%"class.net::HttpChunkedDecoder"* nonnull %35, i8* %45, i32 %1) #9
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %58

48:                                               ; preds = %41
  %49 = load %"class.net::HttpChunkedDecoder"*, %"class.net::HttpChunkedDecoder"** %34, align 8
  %50 = getelementptr inbounds %"class.net::HttpChunkedDecoder", %"class.net::HttpChunkedDecoder"* %49, i64 0, i32 4
  %51 = load i8, i8* %50, align 2, !range !13
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 9, i32* %54, align 8
  br label %183

55:                                               ; preds = %15, %19, %11, %48, %27, %25
  %56 = phi i32 [ %1, %27 ], [ 0, %48 ], [ 0, %11 ], [ %26, %25 ], [ 0, %19 ], [ 0, %15 ]
  %57 = icmp sgt i32 %56, 0
  br label %79

58:                                               ; preds = %41
  %59 = icmp sgt i32 %46, 0
  br i1 %59, label %60, label %79

60:                                               ; preds = %58
  %61 = load %"class.net::HttpChunkedDecoder"*, %"class.net::HttpChunkedDecoder"** %34, align 8
  %62 = sext i32 %46 to i64
  %63 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 17
  %64 = load i64, i64* %63, align 8
  %65 = add nsw i64 %64, %62
  store i64 %65, i64* %63, align 8
  %66 = icmp eq %"class.net::HttpChunkedDecoder"* %61, null
  br i1 %66, label %71, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.net::HttpChunkedDecoder", %"class.net::HttpChunkedDecoder"* %61, i64 0, i32 4
  %69 = load i8, i8* %68, align 2, !range !13
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %162, label %79

71:                                               ; preds = %37, %60
  %72 = phi i64 [ %40, %37 ], [ %65, %60 ]
  %73 = phi i32 [ %1, %37 ], [ %46, %60 ]
  %74 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 15
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, -1
  %77 = icmp slt i64 %72, %75
  %78 = or i1 %76, %77
  br i1 %78, label %162, label %79

79:                                               ; preds = %71, %67, %58, %55
  %80 = phi i32 [ %46, %67 ], [ %46, %58 ], [ %56, %55 ], [ %73, %71 ]
  %81 = phi i1 [ true, %67 ], [ false, %58 ], [ %57, %55 ], [ true, %71 ]
  %82 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 11, i32* %82, align 8
  %83 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 5, i32 0
  %84 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %83, align 8
  %85 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %84, i64 0, i32 3
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 6
  %88 = load i32, i32* %87, align 8
  %89 = sub nsw i32 %86, %88
  %90 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %91 = load %"class.net::HttpChunkedDecoder"*, %"class.net::HttpChunkedDecoder"** %90, align 8
  %92 = icmp eq %"class.net::HttpChunkedDecoder"* %91, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %79
  %94 = getelementptr inbounds %"class.net::HttpChunkedDecoder", %"class.net::HttpChunkedDecoder"* %91, i64 0, i32 5
  %95 = load i32, i32* %94, align 4
  br label %109

96:                                               ; preds = %79
  %97 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 15
  %98 = load i64, i64* %97, align 8
  %99 = icmp sgt i64 %98, -1
  br i1 %99, label %100, label %109

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 17
  %102 = load i64, i64* %101, align 8
  %103 = sub nsw i64 %102, %98
  %104 = icmp sgt i64 %103, 0
  br i1 %104, label %105, label %109

105:                                              ; preds = %100
  %106 = trunc i64 %103 to i32
  %107 = select i1 %81, i32 %106, i32 0
  %108 = sub nsw i32 %80, %107
  br label %109

109:                                              ; preds = %105, %100, %96, %93
  %110 = phi i32 [ %80, %93 ], [ %80, %96 ], [ %80, %100 ], [ %108, %105 ]
  %111 = phi i32 [ %95, %93 ], [ 0, %96 ], [ 0, %100 ], [ %106, %105 ]
  %112 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #9
  %113 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %113, align 8
  %114 = add nsw i32 %111, %89
  %115 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115)
  %116 = icmp sgt i32 %114, 2097152
  br i1 %116, label %118, label %117

117:                                              ; preds = %109
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115)
  store i8* null, i8** %113, align 8
  br label %127

118:                                              ; preds = %109
  %119 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %114) #9
  %120 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 2097152) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5, i64 0, i64 0), i8* %119, i8* %120) #9
  %121 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %122 = load i8*, i8** %121, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115)
  store i8* %122, i8** %113, align 8
  %123 = icmp eq i8* %122, null
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 783, %"class.logging::CheckOpResult"* nonnull %4) #9
  %126 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #9
  br label %127

127:                                              ; preds = %117, %118, %124
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #9
  %128 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %83, align 8
  %129 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %128, i64 0, i32 2
  %130 = load i32, i32* %129, align 8
  %131 = icmp slt i32 %130, %114
  br i1 %131, label %132, label %133

132:                                              ; preds = %127
  call void @_ZN3net16GrowableIOBuffer11SetCapacityEi(%"class.net::GrowableIOBuffer"* %128, i32 %114) #9
  br label %133

133:                                              ; preds = %132, %127
  %134 = icmp eq i32 %111, 0
  br i1 %134, label %148, label %135

135:                                              ; preds = %133
  %136 = sext i32 %111 to i64
  %137 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 8
  %138 = load i64, i64* %137, align 8
  %139 = sub nsw i64 %138, %136
  store i64 %139, i64* %137, align 8
  %140 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %83, align 8
  %141 = call i8* @_ZN3net16GrowableIOBuffer13StartOfBufferEv(%"class.net::GrowableIOBuffer"* %140) #9
  %142 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 19, i32 0
  %143 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %142, align 8
  %144 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %143, i64 0, i32 2
  %145 = load i8*, i8** %144, align 8
  %146 = sext i32 %110 to i64
  %147 = getelementptr inbounds i8, i8* %145, i64 %146
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %141, i8* align 1 %147, i64 %136, i1 false)
  br label %148

148:                                              ; preds = %133, %135
  %149 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %83, align 8
  call void @_ZN3net16GrowableIOBuffer10set_offsetEi(%"class.net::GrowableIOBuffer"* %149, i32 %111) #9
  %150 = icmp eq i32 %89, 0
  br i1 %150, label %161, label %151

151:                                              ; preds = %148
  %152 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %83, align 8
  %153 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %152, i64 0, i32 0, i32 2
  %154 = load i8*, i8** %153, align 8
  %155 = call i8* @_ZN3net16GrowableIOBuffer13StartOfBufferEv(%"class.net::GrowableIOBuffer"* %152) #9
  %156 = load i32, i32* %87, align 8
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i8, i8* %155, i64 %157
  %159 = sext i32 %89 to i64
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %154, i8* align 1 %158, i64 %159, i1 false)
  %160 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %83, align 8
  call void @_ZN3net16GrowableIOBuffer10set_offsetEi(%"class.net::GrowableIOBuffer"* %160, i32 %114) #9
  br label %161

161:                                              ; preds = %148, %151
  store i32 0, i32* %87, align 8
  br label %183

162:                                              ; preds = %67, %71
  %163 = phi i32 [ %46, %67 ], [ %73, %71 ]
  %164 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 19
  %165 = bitcast %class.scoped_refptr.37* %164 to i64*
  %166 = getelementptr inbounds %class.scoped_refptr.37, %class.scoped_refptr.37* %164, i64 0, i32 0
  %167 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %166, align 8
  store i64 0, i64* %165, align 8
  %168 = icmp eq %"class.net::IOBuffer"* %167, null
  br i1 %168, label %181, label %169

169:                                              ; preds = %162
  %170 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %167, i64 0, i32 1
  %171 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %170, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = atomicrmw sub i32* %171, i32 1 acq_rel
  %173 = icmp eq i32 %172, 1
  br i1 %173, label %174, label %181

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.base::RefCountedThreadSafe.36", %"class.base::RefCountedThreadSafe.36"* %170, i64 -2
  %176 = bitcast %"class.base::RefCountedThreadSafe.36"* %175 to %"class.net::IOBuffer"*
  %177 = bitcast %"class.base::RefCountedThreadSafe.36"* %175 to void (%"class.net::IOBuffer"*)***
  %178 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %177, align 8
  %179 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %178, i64 1
  %180 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %179, align 8
  tail call void %180(%"class.net::IOBuffer"* nonnull %176) #9
  br label %181

181:                                              ; preds = %162, %169, %174
  %182 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 20
  store i32 0, i32* %182, align 8
  br label %183

183:                                              ; preds = %161, %181, %53
  %184 = phi i32 [ 0, %53 ], [ %110, %161 ], [ %163, %181 ]
  ret i32 %184
}

declare i32 @_ZNK3net17DrainableIOBuffer14BytesRemainingEv(%"class.net::DrainableIOBuffer"*) local_unnamed_addr #4

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #4

declare i32 @_ZNK3net17DrainableIOBuffer13BytesConsumedEv(%"class.net::DrainableIOBuffer"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK3net16UploadDataStream5IsEOFEv(%"class.net::UploadDataStream"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16HttpStreamParser11EncodeChunkERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPcm(%"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 12
  %7 = icmp ugt i64 %6, %2
  br i1 %7, label %28, label %8

8:                                                ; preds = %3
  %9 = trunc i64 %5 to i32
  %10 = tail call i32 (i8*, i64, i8*, ...) @_ZN4base8snprintfEPcmPKcz(i8* %1, i64 %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i32 %9)
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i8, i8* %1, i64 %11
  %13 = load i64, i64* %4, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %0, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 %17, i64 %13, i1 false)
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds i8, i8* %12, i64 %18
  br label %20

20:                                               ; preds = %8, %15
  %21 = phi i8* [ %19, %15 ], [ %12, %8 ]
  %22 = bitcast i8* %21 to i16*
  store i16 2573, i16* %22, align 1
  %23 = getelementptr inbounds i8, i8* %21, i64 2
  %24 = ptrtoint i8* %23 to i64
  %25 = ptrtoint i8* %1 to i64
  %26 = sub i64 %24, %25
  %27 = trunc i64 %26 to i32
  br label %28

28:                                               ; preds = %3, %20
  %29 = phi i32 [ %27, %20 ], [ -4, %3 ]
  ret i32 %29
}

declare i32 @_ZN3net16GrowableIOBuffer17RemainingCapacityEv(%"class.net::GrowableIOBuffer"*) local_unnamed_addr #4

declare void @_ZN3net16GrowableIOBuffer11SetCapacityEi(%"class.net::GrowableIOBuffer"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16HttpStreamParser22HandleReadHeaderResultEi(%"class.net::HttpStreamParser"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = icmp eq i32 %1, 0
  %7 = select i1 %6, i32 -100, i32 %1
  %8 = icmp eq i32 %7, -100
  br i1 %8, label %9, label %42

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 5, i32 0
  %11 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %10, align 8
  %12 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %11, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 11, i32* %16, align 8
  %17 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 24
  %18 = load i8, i8* %17, align 8, !range !13
  %19 = icmp eq i8 %18, 0
  %20 = select i1 %19, i32 -324, i32 -100
  br label %165

21:                                               ; preds = %9
  %22 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 2
  %23 = load %"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"** %22, align 8
  %24 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %23, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZNK4GURL21SchemeIsCryptographicEv(%class.GURL* %24) #9
  br i1 %25, label %26, label %28

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 11, i32* %27, align 8
  br label %165

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 7
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, -1
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 10, i32* %33, align 8
  %34 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %10, align 8
  %35 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %34, i64 0, i32 3
  %36 = load i32, i32* %35, align 4
  br label %37

37:                                               ; preds = %28, %32
  %38 = phi i32 [ %36, %32 ], [ 0, %28 ]
  %39 = tail call i32 @_ZN3net16HttpStreamParser20ParseResponseHeadersEi(%"class.net::HttpStreamParser"* %0, i32 %38)
  %40 = icmp slt i32 %39, 0
  %41 = select i1 %40, i32 %39, i32 -100
  br label %165

42:                                               ; preds = %2
  %43 = icmp slt i32 %7, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 11, i32* %45, align 8
  br label %165

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 5, i32 0
  %48 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %47, align 8
  %49 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %48, i64 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %59

52:                                               ; preds = %46
  %53 = tail call i64 @_ZN4base4Time3NowEv() #9
  %54 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 10
  %55 = load %"class.net::HttpResponseInfo"*, %"class.net::HttpResponseInfo"** %54, align 8
  %56 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %55, i64 0, i32 17, i32 0, i32 0
  store i64 %53, i64* %56, align 8
  %57 = tail call i64 @_ZN4base9TimeTicks3NowEv() #9
  %58 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 12, i32 0, i32 0
  store i64 %57, i64* %58, align 8
  br label %59

59:                                               ; preds = %52, %46
  %60 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 11, i32 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 12, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  store i64 %65, i64* %60, align 8
  br label %66

66:                                               ; preds = %63, %59
  %67 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %47, align 8
  %68 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %67, i64 0, i32 3
  %69 = load i32, i32* %68, align 4
  %70 = add nsw i32 %69, %7
  tail call void @_ZN3net16GrowableIOBuffer10set_offsetEi(%"class.net::GrowableIOBuffer"* %67, i32 %70) #9
  %71 = tail call i32 @_ZN3net16HttpStreamParser27FindAndParseResponseHeadersEi(%"class.net::HttpStreamParser"* %0, i32 %7)
  %72 = icmp slt i32 %71, -1
  br i1 %72, label %165, label %73

73:                                               ; preds = %66
  %74 = icmp eq i32 %71, -1
  br i1 %74, label %75, label %83

75:                                               ; preds = %73
  %76 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 7, i32* %76, align 8
  %77 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %47, align 8
  %78 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %77, i64 0, i32 3
  %79 = load i32, i32* %78, align 4
  %80 = icmp sgt i32 %79, 262143
  %81 = select i1 %80, i32 11, i32 7
  store i32 %81, i32* %76, align 8
  %82 = select i1 %80, i32 -325, i32 0
  ret i32 %82

83:                                               ; preds = %73
  tail call void @_ZN3net16HttpStreamParser25CalculateResponseBodySizeEv(%"class.net::HttpStreamParser"* %0)
  %84 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 15
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %145

87:                                               ; preds = %83
  %88 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %47, align 8
  %89 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %88, i64 0, i32 3
  %90 = load i32, i32* %89, align 4
  %91 = sub nsw i32 %90, %71
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %117, label %93

93:                                               ; preds = %87
  %94 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #9
  %95 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %95, align 8
  %96 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96)
  %97 = icmp sgt i32 %91, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96)
  store i8* null, i8** %95, align 8
  br label %108

99:                                               ; preds = %93
  %100 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %91) #9
  %101 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 0) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i8* %100, i8* %101) #9
  %102 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %103 = load i8*, i8** %102, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96)
  store i8* %103, i8** %95, align 8
  %104 = icmp eq i8* %103, null
  br i1 %104, label %108, label %105

105:                                              ; preds = %99
  %106 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 915, %"class.logging::CheckOpResult"* nonnull %4) #9
  %107 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #9
  br label %108

108:                                              ; preds = %98, %99, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #9
  %109 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %47, align 8
  %110 = call i8* @_ZN3net16GrowableIOBuffer13StartOfBufferEv(%"class.net::GrowableIOBuffer"* %109) #9
  %111 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %47, align 8
  %112 = call i8* @_ZN3net16GrowableIOBuffer13StartOfBufferEv(%"class.net::GrowableIOBuffer"* %111) #9
  %113 = sext i32 %71 to i64
  %114 = getelementptr inbounds i8, i8* %112, i64 %113
  %115 = sext i32 %91 to i64
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %110, i8* align 1 %114, i64 %115, i1 false)
  %116 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %47, align 8
  br label %117

117:                                              ; preds = %87, %108
  %118 = phi %"class.net::GrowableIOBuffer"* [ %88, %87 ], [ %116, %108 ]
  call void @_ZN3net16GrowableIOBuffer11SetCapacityEi(%"class.net::GrowableIOBuffer"* %118, i32 %91) #9
  %119 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 10
  %120 = load %"class.net::HttpResponseInfo"*, %"class.net::HttpResponseInfo"** %119, align 8
  %121 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %120, i64 0, i32 22, i32 0
  %122 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %121, align 8
  %123 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %122, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, -100
  %126 = icmp ult i32 %125, 100
  br i1 %126, label %127, label %140

127:                                              ; preds = %117
  %128 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 7
  store i64 -1, i64* %128, align 8
  store i64 -1, i64* %84, align 8
  %129 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %121, align 8
  %130 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %129, i64 0, i32 3
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %131, 103
  br i1 %132, label %133, label %165

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 14, i32 0, i32 0
  %135 = load i64, i64* %134, align 8
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %165

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 12, i32 0, i32 0
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %134, align 8
  br label %165

140:                                              ; preds = %117
  %141 = call zeroext i1 @_ZNK3net19HttpResponseHeaders11IsKeepAliveEv(%"class.net::HttpResponseHeaders"* %122) #9
  %142 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 16
  %143 = zext i1 %141 to i8
  store i8 %143, i8* %142, align 8
  %144 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 1
  store i32 11, i32* %144, align 8
  br label %165

145:                                              ; preds = %83
  %146 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 10
  %147 = load %"class.net::HttpResponseInfo"*, %"class.net::HttpResponseInfo"** %146, align 8
  %148 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %147, i64 0, i32 22, i32 0
  %149 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %148, align 8
  %150 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %149, i64 0, i32 3
  %151 = load i32, i32* %150, align 8
  %152 = add i32 %151, -100
  %153 = icmp ugt i32 %152, 99
  br i1 %153, label %154, label %159

154:                                              ; preds = %145
  %155 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 12, i32 0, i32 0
  %156 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 13, i32 0, i32 0
  %157 = load i64, i64* %155, align 8
  store i64 %157, i64* %156, align 8
  %158 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %148, align 8
  br label %159

159:                                              ; preds = %154, %145
  %160 = phi %"class.net::HttpResponseHeaders"* [ %158, %154 ], [ %149, %145 ]
  %161 = tail call zeroext i1 @_ZNK3net19HttpResponseHeaders11IsKeepAliveEv(%"class.net::HttpResponseHeaders"* %160) #9
  %162 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 16
  %163 = zext i1 %161 to i8
  store i8 %163, i8* %162, align 8
  %164 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 6
  store i32 %71, i32* %164, align 8
  br label %165

165:                                              ; preds = %66, %127, %133, %137, %140, %159, %15, %44, %37, %26
  %166 = phi i32 [ -357, %26 ], [ %41, %37 ], [ %7, %44 ], [ %20, %15 ], [ %71, %66 ], [ 0, %127 ], [ 0, %133 ], [ 0, %137 ], [ 0, %140 ], [ 0, %159 ]
  ret i32 %166
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare i8* @_ZN3net16GrowableIOBuffer13StartOfBufferEv(%"class.net::GrowableIOBuffer"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net16HttpStreamParser22IsResponseBodyCompleteEv(%"class.net::HttpStreamParser"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %3 = load %"class.net::HttpChunkedDecoder"*, %"class.net::HttpChunkedDecoder"** %2, align 8
  %4 = icmp eq %"class.net::HttpChunkedDecoder"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::HttpChunkedDecoder", %"class.net::HttpChunkedDecoder"* %3, i64 0, i32 4
  %7 = load i8, i8* %6, align 2, !range !13
  %8 = icmp ne i8 %7, 0
  br label %17

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 15
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -1
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 17
  %15 = load i64, i64* %14, align 8
  %16 = icmp sge i64 %15, %11
  br label %17

17:                                               ; preds = %9, %13, %5
  %18 = phi i1 [ %8, %5 ], [ %16, %13 ], [ false, %9 ]
  ret i1 %18
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net16HttpStreamParser20CanFindEndOfResponseEv(%"class.net::HttpStreamParser"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %3 = load %"class.net::HttpChunkedDecoder"*, %"class.net::HttpChunkedDecoder"** %2, align 8
  %4 = icmp eq %"class.net::HttpChunkedDecoder"* %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 15
  %7 = load i64, i64* %6, align 8
  %8 = icmp sgt i64 %7, -1
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ true, %1 ], [ %8, %5 ]
  ret i1 %10
}

declare i32 @_ZN3net18HttpChunkedDecoder9FilterBufEPci(%"class.net::HttpChunkedDecoder"*, i8*, i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZNK4GURL21SchemeIsCryptographicEv(%class.GURL*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16HttpStreamParser20ParseResponseHeadersEi(%"class.net::HttpStreamParser"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 7
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, -1
  br i1 %9, label %20, label %10

10:                                               ; preds = %2
  %11 = sext i32 %1 to i64
  %12 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 8
  %13 = load i64, i64* %12, align 8
  %14 = add nsw i64 %13, %11
  store i64 %14, i64* %12, align 8
  %15 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 5, i32 0
  %16 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %15, align 8
  %17 = tail call i8* @_ZN3net16GrowableIOBuffer13StartOfBufferEv(%"class.net::GrowableIOBuffer"* %16) #9
  %18 = tail call %"class.net::HttpResponseHeaders"* @_ZN3net19HttpResponseHeaders11TryToCreateEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %17, i64 %11) #9
  %19 = icmp eq %"class.net::HttpResponseHeaders"* %18, null
  br i1 %19, label %163, label %81

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 2
  %22 = load %"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"** %21, align 8
  %23 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %22, i64 0, i32 0, i32 2, i32 0, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, 1
  br i1 %25, label %43, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %22, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = sext i32 %28 to i64
  %30 = bitcast %"struct.net::HttpRequestInfo"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  br label %39

37:                                               ; preds = %26
  %38 = bitcast %"struct.net::HttpRequestInfo"* %22 to i8*
  br label %39

39:                                               ; preds = %37, %34
  %40 = phi i8* [ %36, %34 ], [ %38, %37 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 %29
  %42 = sext i32 %24 to i64
  br label %43

43:                                               ; preds = %20, %39
  %44 = phi i8* [ %41, %39 ], [ null, %20 ]
  %45 = phi i64 [ %42, %39 ], [ 0, %20 ]
  %46 = trunc i64 %45 to i32
  %47 = tail call i32 @_ZN3url20DefaultPortForSchemeEPKci(i8* %44, i32 %46) #9
  %48 = load %"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"** %21, align 8
  %49 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %48, i64 0, i32 0
  %50 = tail call i32 @_ZNK4GURL16EffectiveIntPortEv(%class.GURL* %49) #9
  %51 = icmp eq i32 %47, %50
  br i1 %51, label %66, label %52

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 5, i32 0
  %54 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %53, align 8
  %55 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %54, i64 0, i32 3
  %56 = load i32, i32* %55, align 4
  %57 = icmp sgt i32 %56, 2
  %58 = icmp eq i64 %45, 4
  %59 = and i1 %58, %57
  br i1 %59, label %60, label %163

60:                                               ; preds = %52
  %61 = tail call i32 @bcmp(i8* %44, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i64 4) #9
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %163

63:                                               ; preds = %60
  %64 = tail call i8* @_ZN3net16GrowableIOBuffer13StartOfBufferEv(%"class.net::GrowableIOBuffer"* %54) #9
  %65 = tail call zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8* %64, i64 3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i64 3) #9
  br i1 %65, label %66, label %163

66:                                               ; preds = %63, %43
  %67 = tail call i8* @_Znwm(i64 64) #13
  %68 = bitcast i8* %67 to %"class.net::HttpResponseHeaders"*
  %69 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #9
  %70 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  store i8 15, i8* %71, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %69, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i64 15, i1 false) #9
  %72 = getelementptr inbounds i8, i8* %69, i64 15
  store i8 0, i8* %72, align 1
  call void @_ZN3net19HttpResponseHeadersC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull %68, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #9
  %73 = bitcast i8* %67 to i32*
  %74 = atomicrmw add i32* %73, i32 1 monotonic
  %75 = load i8, i8* %71, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %66
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  call void @_ZdlPv(i8* %79) #13
  br label %80

80:                                               ; preds = %66, %77
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #9
  br label %81

81:                                               ; preds = %10, %80
  %82 = phi %"class.net::HttpResponseHeaders"* [ %68, %80 ], [ %18, %10 ]
  %83 = ptrtoint %"class.net::HttpResponseHeaders"* %82 to i64
  %84 = call zeroext i1 @_ZNK3net19HttpResponseHeaders14IsChunkEncodedEv(%"class.net::HttpResponseHeaders"* nonnull %82) #9
  br i1 %84, label %97, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #9
  %87 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  store i8 14, i8* %88, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %86, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i64 14, i1 false) #9
  %89 = getelementptr inbounds i8, i8* %86, i64 14
  store i8 0, i8* %89, align 2
  %90 = call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_135HeadersContainMultipleCopiesOfFieldERKNS_19HttpResponseHeadersERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull dereferenceable(64) %82, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4)
  %91 = load i8, i8* %88, align 1
  %92 = icmp slt i8 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  call void @_ZdlPv(i8* %95) #13
  br label %96

96:                                               ; preds = %85, %93
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #9
  br i1 %90, label %156, label %97

97:                                               ; preds = %96, %81
  %98 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #9
  %99 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  store i8 19, i8* %100, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %98, i8* align 1 getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0), i64 19, i1 false) #9
  %101 = getelementptr inbounds i8, i8* %98, i64 19
  store i8 0, i8* %101, align 1
  %102 = call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_135HeadersContainMultipleCopiesOfFieldERKNS_19HttpResponseHeadersERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull dereferenceable(64) %82, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5)
  %103 = load i8, i8* %100, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %97
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %107) #13
  br label %108

108:                                              ; preds = %97, %105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #9
  br i1 %102, label %156, label %109

109:                                              ; preds = %108
  %110 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %110) #9
  %111 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  store i8 8, i8* %112, align 1
  %113 = bitcast %"class.std::__1::basic_string"* %6 to i64*
  store i64 7957695015157985100, i64* %113, align 8
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %115 = bitcast i64* %114 to i8*
  store i8 0, i8* %115, align 8
  %116 = call fastcc zeroext i1 @_ZN3net12_GLOBAL__N_135HeadersContainMultipleCopiesOfFieldERKNS_19HttpResponseHeadersERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull dereferenceable(64) %82, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6)
  %117 = load i8, i8* %112, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %122

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  call void @_ZdlPv(i8* %121) #13
  br label %122

122:                                              ; preds = %109, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %110) #9
  br i1 %116, label %156, label %123

123:                                              ; preds = %122
  %124 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw add i32* %124, i32 1 monotonic
  %126 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 10
  %127 = load %"class.net::HttpResponseInfo"*, %"class.net::HttpResponseInfo"** %126, align 8
  %128 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %127, i64 0, i32 22
  %129 = bitcast %class.scoped_refptr.95* %128 to i64*
  %130 = getelementptr inbounds %class.scoped_refptr.95, %class.scoped_refptr.95* %128, i64 0, i32 0
  %131 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %130, align 8
  store i64 %83, i64* %129, align 8
  %132 = icmp eq %"class.net::HttpResponseHeaders"* %131, null
  br i1 %132, label %139, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %131, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = atomicrmw sub i32* %134, i32 1 acq_rel
  %136 = icmp eq i32 %135, 1
  br i1 %136, label %137, label %139

137:                                              ; preds = %133
  call void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"* nonnull %131) #9
  %138 = bitcast %"class.net::HttpResponseHeaders"* %131 to i8*
  call void @_ZdlPv(i8* %138) #13
  br label %139

139:                                              ; preds = %123, %133, %137
  %140 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %82, i64 0, i32 4, i32 0
  %141 = load i32, i32* %140, align 4
  switch i32 %141, label %148 [
    i32 9, label %144
    i32 65536, label %142
    i32 65537, label %143
  ]

142:                                              ; preds = %139
  br label %144

143:                                              ; preds = %139
  br label %144

144:                                              ; preds = %139, %143, %142
  %145 = phi i32 [ 9, %142 ], [ 1, %143 ], [ 8, %139 ]
  %146 = load %"class.net::HttpResponseInfo"*, %"class.net::HttpResponseInfo"** %126, align 8
  %147 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %146, i64 0, i32 15
  store i32 %145, i32* %147, align 8
  br label %148

148:                                              ; preds = %144, %139
  %149 = load %"class.net::HttpResponseInfo"*, %"class.net::HttpResponseInfo"** %126, align 8
  %150 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %149, i64 0, i32 23
  %151 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 2
  %152 = load %"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"** %151, align 8
  %153 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %149, i64 0, i32 22, i32 0
  %154 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %153, align 8
  %155 = call zeroext i1 @_ZN3net12HttpVaryData4InitERKNS_15HttpRequestInfoERKNS_19HttpResponseHeadersE(%"class.net::HttpVaryData"* %150, %"struct.net::HttpRequestInfo"* dereferenceable(488) %152, %"class.net::HttpResponseHeaders"* dereferenceable(64) %154) #9
  br label %156

156:                                              ; preds = %108, %122, %148, %96
  %157 = phi i32 [ -346, %96 ], [ 0, %148 ], [ -350, %122 ], [ -349, %108 ]
  %158 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = atomicrmw sub i32* %158, i32 1 acq_rel
  %160 = icmp eq i32 %159, 1
  br i1 %160, label %161, label %163

161:                                              ; preds = %156
  call void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"* nonnull %82) #9
  %162 = bitcast %"class.net::HttpResponseHeaders"* %82 to i8*
  call void @_ZdlPv(i8* %162) #13
  br label %163

163:                                              ; preds = %10, %52, %60, %63, %156, %161
  %164 = phi i32 [ %157, %156 ], [ %157, %161 ], [ -370, %60 ], [ -370, %52 ], [ -370, %63 ], [ -370, %10 ]
  ret i32 %164
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16HttpStreamParser27FindAndParseResponseHeadersEi(%"class.net::HttpStreamParser"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 7
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, -1
  br i1 %5, label %6, label %21

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 5, i32 0
  %8 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %7, align 8
  %9 = tail call i8* @_ZN3net16GrowableIOBuffer13StartOfBufferEv(%"class.net::GrowableIOBuffer"* %8) #9
  %10 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %7, align 8
  %11 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %10, i64 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = sext i32 %12 to i64
  %14 = tail call i64 @_ZN3net8HttpUtil23LocateStartOfStatusLineEPKcm(i8* %9, i64 %13) #9
  store i64 %14, i64* %3, align 8
  %15 = icmp eq i64 %14, -1
  br i1 %15, label %16, label %21

16:                                               ; preds = %6
  %17 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %7, align 8
  %18 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %17, i64 0, i32 3
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 7
  br i1 %20, label %50, label %56

21:                                               ; preds = %2, %6
  %22 = phi i64 [ %14, %6 ], [ %4, %2 ]
  %23 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 5, i32 0
  %24 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %23, align 8
  %25 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %24, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = sext i32 %26 to i64
  %28 = icmp sgt i64 %27, 0
  %29 = select i1 %28, i64 %27, i64 0
  %30 = ashr i32 %1, 31
  %31 = sext i32 %30 to i64
  %32 = zext i64 %29 to i65
  %33 = sext i32 %1 to i65
  %34 = sub nsw i65 %32, %33
  %35 = trunc i65 %34 to i64
  %36 = icmp slt i65 %34, 0
  %37 = select i1 %36, i64 %31, i64 %35, !prof !36
  %38 = icmp ugt i64 %37, 3
  %39 = add nsw i64 %37, -3
  %40 = select i1 %38, i64 %39, i64 0
  %41 = icmp ult i64 %22, %40
  %42 = select i1 %41, i64 %40, i64 %22
  %43 = tail call i8* @_ZN3net16GrowableIOBuffer13StartOfBufferEv(%"class.net::GrowableIOBuffer"* %24) #9
  %44 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %23, align 8
  %45 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %44, i64 0, i32 3
  %46 = load i32, i32* %45, align 4
  %47 = sext i32 %46 to i64
  %48 = tail call i64 @_ZN3net8HttpUtil18LocateEndOfHeadersEPKcmm(i8* %43, i64 %47, i64 %42) #9
  %49 = icmp eq i64 %48, -1
  br i1 %49, label %56, label %50

50:                                               ; preds = %16, %21
  %51 = phi i64 [ %48, %21 ], [ 0, %16 ]
  %52 = trunc i64 %51 to i32
  %53 = tail call i32 @_ZN3net16HttpStreamParser20ParseResponseHeadersEi(%"class.net::HttpStreamParser"* %0, i32 %52)
  %54 = icmp slt i32 %53, 0
  %55 = select i1 %54, i32 %53, i32 %52
  br label %56

56:                                               ; preds = %16, %21, %50
  %57 = phi i32 [ %55, %50 ], [ -1, %21 ], [ -1, %16 ]
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16HttpStreamParser25CalculateResponseBodySizeEv(%"class.net::HttpStreamParser"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 10
  %3 = load %"class.net::HttpResponseInfo"*, %"class.net::HttpResponseInfo"** %2, align 8
  %4 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %3, i64 0, i32 22, i32 0
  %5 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %4, align 8
  %6 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %5, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -100
  %9 = icmp ult i32 %8, 100
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  switch i32 %7, label %13 [
    i32 204, label %11
    i32 205, label %11
    i32 304, label %11
  ]

11:                                               ; preds = %10, %10, %10, %1
  %12 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 15
  store i64 0, i64* %12, align 8
  br label %13

13:                                               ; preds = %11, %10
  %14 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 2
  %15 = load %"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"** %14, align 8
  %16 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %15, i64 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = icmp eq i64 %24, 4
  br i1 %25, label %26, label %31

26:                                               ; preds = %13
  %27 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %16, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i64 4) #9
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 15
  store i64 0, i64* %30, align 8
  br label %31

31:                                               ; preds = %13, %29, %26
  %32 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 15
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, -1
  br i1 %34, label %35, label %65

35:                                               ; preds = %31
  %36 = load %"class.net::HttpResponseInfo"*, %"class.net::HttpResponseInfo"** %2, align 8
  %37 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %36, i64 0, i32 22, i32 0
  %38 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %37, align 8
  %39 = tail call zeroext i1 @_ZNK3net19HttpResponseHeaders14IsChunkEncodedEv(%"class.net::HttpResponseHeaders"* %38) #9
  br i1 %39, label %40, label %60

40:                                               ; preds = %35
  %41 = tail call i8* @_Znwm(i64 40) #13
  %42 = bitcast i8* %41 to %"class.net::HttpChunkedDecoder"*
  tail call void @_ZN3net18HttpChunkedDecoderC1Ev(%"class.net::HttpChunkedDecoder"* nonnull %42) #9
  %43 = ptrtoint i8* %41 to i64
  %44 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 18
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.104"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.net::HttpChunkedDecoder"*, %"class.net::HttpChunkedDecoder"** %45, align 8
  %47 = bitcast %"class.std::__1::unique_ptr.104"* %44 to i64*
  store i64 %43, i64* %47, align 8
  %48 = icmp eq %"class.net::HttpChunkedDecoder"* %46, null
  br i1 %48, label %65, label %49

49:                                               ; preds = %40
  %50 = getelementptr inbounds %"class.net::HttpChunkedDecoder", %"class.net::HttpChunkedDecoder"* %46, i64 0, i32 1
  %51 = bitcast %"class.std::__1::basic_string"* %50 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  tail call void @_ZdlPv(i8* %57) #13
  br label %58

58:                                               ; preds = %55, %49
  %59 = bitcast %"class.net::HttpChunkedDecoder"* %46 to i8*
  tail call void @_ZdlPv(i8* %59) #13
  br label %65

60:                                               ; preds = %35
  %61 = load %"class.net::HttpResponseInfo"*, %"class.net::HttpResponseInfo"** %2, align 8
  %62 = getelementptr inbounds %"class.net::HttpResponseInfo", %"class.net::HttpResponseInfo"* %61, i64 0, i32 22, i32 0
  %63 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %62, align 8
  %64 = tail call i64 @_ZNK3net19HttpResponseHeaders16GetContentLengthEv(%"class.net::HttpResponseHeaders"* %63) #9
  store i64 %64, i64* %32, align 8
  br label %65

65:                                               ; preds = %40, %58, %60, %31
  ret void
}

declare zeroext i1 @_ZNK3net19HttpResponseHeaders11IsKeepAliveEv(%"class.net::HttpResponseHeaders"*) local_unnamed_addr #4

declare i64 @_ZN3net8HttpUtil23LocateStartOfStatusLineEPKcm(i8*, i64) local_unnamed_addr #4

declare i64 @_ZN3net8HttpUtil18LocateEndOfHeadersEPKcmm(i8*, i64, i64) local_unnamed_addr #4

declare %"class.net::HttpResponseHeaders"* @_ZN3net19HttpResponseHeaders11TryToCreateEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #4

declare i32 @_ZN3url20DefaultPortForSchemeEPKci(i8*, i32) local_unnamed_addr #4

declare i32 @_ZNK4GURL16EffectiveIntPortEv(%class.GURL*) local_unnamed_addr #4

declare zeroext i1 @_ZN4base20LowerCaseEqualsASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_(i8*, i64, i8*, i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN3net19HttpResponseHeadersC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #4

declare zeroext i1 @_ZNK3net19HttpResponseHeaders14IsChunkEncodedEv(%"class.net::HttpResponseHeaders"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3net12_GLOBAL__N_135HeadersContainMultipleCopiesOfFieldERKNS_19HttpResponseHeadersERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* dereferenceable(64), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  store i64 0, i64* %3, align 8
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #9
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #9
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %17 = select i1 %13, i8* %15, i8* %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %12 to i64
  %21 = select i1 %13, i64 %19, i64 %20
  %22 = call zeroext i1 @_ZNK3net19HttpResponseHeaders15EnumerateHeaderEPmN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* %0, i64* nonnull %3, i8* %17, i64 %21, %"class.std::__1::basic_string"* nonnull %4) #9
  br i1 %22, label %23, label %100

23:                                               ; preds = %2
  %24 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #9
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false) #9
  %27 = load i8, i8* %11, align 1
  %28 = icmp slt i8 %27, 0
  %29 = load i8*, i8** %14, align 8
  %30 = select i1 %28, i8* %29, i8* %16
  %31 = load i64, i64* %18, align 8
  %32 = zext i8 %27 to i64
  %33 = select i1 %28, i64 %31, i64 %32
  %34 = call zeroext i1 @_ZNK3net19HttpResponseHeaders15EnumerateHeaderEPmN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* %0, i64* nonnull %3, i8* %30, i64 %33, %"class.std::__1::basic_string"* nonnull %5) #9
  br i1 %34, label %37, label %35

35:                                               ; preds = %23
  %36 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %91

37:                                               ; preds = %23
  %38 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  br label %42

42:                                               ; preds = %37, %82
  %43 = load i8, i8* %39, align 1
  %44 = icmp slt i8 %43, 0
  %45 = load i64, i64* %9, align 8
  %46 = zext i8 %43 to i64
  %47 = select i1 %44, i64 %45, i64 %46
  %48 = load i8, i8* %41, align 1
  %49 = icmp slt i8 %48, 0
  %50 = load i64, i64* %26, align 8
  %51 = zext i8 %48 to i64
  %52 = select i1 %49, i64 %50, i64 %51
  %53 = icmp eq i64 %47, %52
  br i1 %53, label %54, label %91

54:                                               ; preds = %42
  %55 = load i8*, i8** %8, align 8
  %56 = select i1 %44, i8* %55, i8* %7
  %57 = load i8*, i8** %25, align 8
  %58 = select i1 %49, i8* %57, i8* %24
  %59 = icmp eq i64 %47, 0
  br i1 %44, label %66, label %60

60:                                               ; preds = %54
  br i1 %59, label %82, label %61

61:                                               ; preds = %60
  %62 = ptrtoint i8* %55 to i64
  %63 = trunc i64 %62 to i8
  %64 = load i8, i8* %58, align 1
  %65 = icmp eq i8 %64, %63
  br i1 %65, label %70, label %91

66:                                               ; preds = %54
  br i1 %59, label %82, label %67

67:                                               ; preds = %66
  %68 = call i32 @bcmp(i8* %56, i8* %58, i64 %47) #9
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %82, label %91

70:                                               ; preds = %61, %77
  %71 = phi i64 [ %74, %77 ], [ %46, %61 ]
  %72 = phi i8* [ %75, %77 ], [ %7, %61 ]
  %73 = phi i8* [ %78, %77 ], [ %58, %61 ]
  %74 = add i64 %71, -1
  %75 = getelementptr inbounds i8, i8* %72, i64 1
  %76 = icmp eq i64 %74, 0
  br i1 %76, label %82, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds i8, i8* %73, i64 1
  %79 = load i8, i8* %75, align 1
  %80 = load i8, i8* %78, align 1
  %81 = icmp eq i8 %79, %80
  br i1 %81, label %70, label %91

82:                                               ; preds = %70, %66, %60, %67
  %83 = load i8, i8* %11, align 1
  %84 = icmp slt i8 %83, 0
  %85 = load i8*, i8** %14, align 8
  %86 = select i1 %84, i8* %85, i8* %16
  %87 = load i64, i64* %18, align 8
  %88 = zext i8 %83 to i64
  %89 = select i1 %84, i64 %87, i64 %88
  %90 = call zeroext i1 @_ZNK3net19HttpResponseHeaders15EnumerateHeaderEPmN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* %0, i64* nonnull %3, i8* %86, i64 %89, %"class.std::__1::basic_string"* nonnull %5) #9
  br i1 %90, label %42, label %91

91:                                               ; preds = %82, %42, %67, %61, %77, %35
  %92 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %36, %35 ], [ %40, %77 ], [ %40, %61 ], [ %40, %67 ], [ %40, %42 ], [ %40, %82 ]
  %93 = phi i1 [ false, %35 ], [ true, %77 ], [ false, %82 ], [ true, %42 ], [ true, %67 ], [ true, %61 ]
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %91
  %98 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %98) #13
  br label %99

99:                                               ; preds = %91, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #9
  br label %100

100:                                              ; preds = %2, %99
  %101 = phi i1 [ %93, %99 ], [ false, %2 ]
  %102 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %100
  %107 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %107) #13
  br label %108

108:                                              ; preds = %100, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret i1 %101
}

declare zeroext i1 @_ZN3net12HttpVaryData4InitERKNS_15HttpRequestInfoERKNS_19HttpResponseHeadersE(%"class.net::HttpVaryData"*, %"struct.net::HttpRequestInfo"* dereferenceable(488), %"class.net::HttpResponseHeaders"* dereferenceable(64)) local_unnamed_addr #4

declare i64 @_ZNK3net19HttpResponseHeaders16GetContentLengthEv(%"class.net::HttpResponseHeaders"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net16HttpStreamParser18IsMoreDataBufferedEv(%"class.net::HttpStreamParser"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 5, i32 0
  %3 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %2, align 8
  %4 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %3, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 6
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %5, %7
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net16HttpStreamParser18CanReuseConnectionEv(%"class.net::HttpStreamParser"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %3 = load %"class.net::HttpChunkedDecoder"*, %"class.net::HttpChunkedDecoder"** %2, align 8
  %4 = icmp eq %"class.net::HttpChunkedDecoder"* %3, null
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 15
  %7 = load i64, i64* %6, align 8
  %8 = icmp sgt i64 %7, -1
  br i1 %8, label %9, label %42

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 16
  %11 = load i8, i8* %10, align 8, !range !13
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %42, label %13

13:                                               ; preds = %9
  br i1 %4, label %18, label %14

14:                                               ; preds = %13
  %15 = getelementptr inbounds %"class.net::HttpChunkedDecoder", %"class.net::HttpChunkedDecoder"* %3, i64 0, i32 4
  %16 = load i8, i8* %15, align 2, !range !13
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %34, label %26

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 15
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, -1
  br i1 %21, label %34, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 17
  %24 = load i64, i64* %23, align 8
  %25 = icmp slt i64 %24, %20
  br i1 %25, label %34, label %26

26:                                               ; preds = %22, %14
  %27 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 5, i32 0
  %28 = load %"class.net::GrowableIOBuffer"*, %"class.net::GrowableIOBuffer"** %27, align 8
  %29 = getelementptr inbounds %"class.net::GrowableIOBuffer", %"class.net::GrowableIOBuffer"* %28, i64 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 6
  %32 = load i32, i32* %31, align 8
  %33 = icmp sgt i32 %30, %32
  br i1 %33, label %42, label %34

34:                                               ; preds = %22, %14, %18, %26
  %35 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 23
  %36 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %35, align 8
  %37 = bitcast %"class.net::StreamSocket"* %36 to i1 (%"class.net::StreamSocket"*)***
  %38 = load i1 (%"class.net::StreamSocket"*)**, i1 (%"class.net::StreamSocket"*)*** %37, align 8
  %39 = getelementptr inbounds i1 (%"class.net::StreamSocket"*)*, i1 (%"class.net::StreamSocket"*)** %38, i64 14
  %40 = load i1 (%"class.net::StreamSocket"*)*, i1 (%"class.net::StreamSocket"*)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.net::StreamSocket"* %36) #9
  br label %42

42:                                               ; preds = %26, %9, %5, %34
  %43 = phi i1 [ %41, %34 ], [ false, %5 ], [ false, %9 ], [ false, %26 ]
  ret i1 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16HttpStreamParser10GetSSLInfoEPNS_7SSLInfoE(%"class.net::HttpStreamParser"* nocapture readonly, %"class.net::SSLInfo"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 2
  %4 = load %"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"** %3, align 8
  %5 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %4, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZNK4GURL21SchemeIsCryptographicEv(%class.GURL* %5) #9
  br i1 %6, label %7, label %15

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 23
  %9 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %8, align 8
  %10 = bitcast %"class.net::StreamSocket"* %9 to i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)***
  %11 = load i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)**, i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)*, i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)** %11, i64 23
  %13 = load i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)*, i1 (%"class.net::StreamSocket"*, %"class.net::SSLInfo"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.net::StreamSocket"* %9, %"class.net::SSLInfo"* %1) #9
  br i1 %14, label %16, label %15

15:                                               ; preds = %7, %2
  tail call void @_ZN3net7SSLInfo5ResetEv(%"class.net::SSLInfo"* %1) #9
  br label %16

16:                                               ; preds = %15, %7
  ret void
}

declare void @_ZN3net7SSLInfo5ResetEv(%"class.net::SSLInfo"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16HttpStreamParser21GetSSLCertRequestInfoEPNS_18SSLCertRequestInfoE(%"class.net::HttpStreamParser"* nocapture readonly, %"class.net::SSLCertRequestInfo"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN3net18SSLCertRequestInfo5ResetEv(%"class.net::SSLCertRequestInfo"* %1) #9
  %3 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 2
  %4 = load %"struct.net::HttpRequestInfo"*, %"struct.net::HttpRequestInfo"** %3, align 8
  %5 = getelementptr inbounds %"struct.net::HttpRequestInfo", %"struct.net::HttpRequestInfo"* %4, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZNK4GURL21SchemeIsCryptographicEv(%class.GURL* %5) #9
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 23
  %9 = load %"class.net::StreamSocket"*, %"class.net::StreamSocket"** %8, align 8
  %10 = bitcast %"class.net::StreamSocket"* %9 to void (%"class.net::StreamSocket"*, %"class.net::SSLCertRequestInfo"*)***
  %11 = load void (%"class.net::StreamSocket"*, %"class.net::SSLCertRequestInfo"*)**, void (%"class.net::StreamSocket"*, %"class.net::SSLCertRequestInfo"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.net::StreamSocket"*, %"class.net::SSLCertRequestInfo"*)*, void (%"class.net::StreamSocket"*, %"class.net::SSLCertRequestInfo"*)** %11, i64 24
  %13 = load void (%"class.net::StreamSocket"*, %"class.net::SSLCertRequestInfo"*)*, void (%"class.net::StreamSocket"*, %"class.net::SSLCertRequestInfo"*)** %12, align 8
  tail call void %13(%"class.net::StreamSocket"* %9, %"class.net::SSLCertRequestInfo"* %1) #9
  br label %14

14:                                               ; preds = %7, %2
  ret void
}

declare void @_ZN3net18SSLCertRequestInfo5ResetEv(%"class.net::SSLCertRequestInfo"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4base8snprintfEPcmPKcz(i8*, i64, i8*, ...) local_unnamed_addr #8 comdat {
  %4 = alloca [1 x %struct.__va_list_tag], align 16
  %5 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %4, i64 0, i64 0
  %7 = bitcast [1 x %struct.__va_list_tag]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %5)
  %8 = call i64 @llvm.objectsize.i64.p0i8(i8* %0, i1 false, i1 true, i1 false) #9
  %9 = call i32 @__vsnprintf_chk(i8* %0, i64 %1, i32 1, i64 %8, i8* %2, %struct.__va_list_tag* nonnull %6) #9
  call void @llvm.va_end(i8* nonnull %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  ret i32 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN3net16HttpStreamParser23SendRequestBuffersEmptyEv(%"class.net::HttpStreamParser"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.net::DrainableIOBuffer"*, %"class.net::DrainableIOBuffer"** %2, align 8
  %4 = icmp eq %"class.net::DrainableIOBuffer"* %3, null
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 28, i32 0
  %7 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %6, align 8
  %8 = icmp eq %"class.net::HttpStreamParser::SeekableIOBuffer"* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.net::HttpStreamParser", %"class.net::HttpStreamParser"* %0, i64 0, i32 27, i32 0
  %11 = load %"class.net::HttpStreamParser::SeekableIOBuffer"*, %"class.net::HttpStreamParser::SeekableIOBuffer"** %10, align 8
  %12 = icmp eq %"class.net::HttpStreamParser::SeekableIOBuffer"* %11, null
  br label %13

13:                                               ; preds = %9, %5, %1
  %14 = phi i1 [ false, %5 ], [ false, %1 ], [ %12, %9 ]
  ret i1 %14
}

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBaseCopyable"* @_ZN4base8internal20CallbackBaseCopyableaSEOS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #2

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #4

declare %"class.base::Value"* @_ZN4base5Value9SetIntKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEi(%"class.base::Value"*, i8*, i64, i32) local_unnamed_addr #4

declare %"class.base::Value"* @_ZN4base5Value10SetBoolKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::Value"*, i8*, i64, i1 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare zeroext i1 @_ZNK3net19HttpResponseHeaders15EnumerateHeaderEPmN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS4_12basic_stringIcS6_NS4_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"*, i64*, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #9

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #9

; Function Attrs: nofree
declare i32 @__vsnprintf_chk(i8*, i64, i32, i64, i8*, %struct.__va_list_tag*) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #11

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #4

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS4_EEEEEFviEE3RunEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #9
  br i1 %7, label %8, label %43

8:                                                ; preds = %2
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.net::HttpStreamParser"**
  %11 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %10, align 8
  %12 = icmp eq %"class.net::HttpStreamParser"* %11, null
  br i1 %12, label %43, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #9
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0)) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %20, %13
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #9
  %25 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = select i1 %24, i8* %26, i8* null
  %28 = getelementptr inbounds i8, i8* %27, i64 %18
  %29 = bitcast i8* %28 to %"class.net::HttpStreamParser"*
  %30 = and i64 %15, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %23
  %33 = bitcast i8* %28 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = add i64 %15, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to void (%"class.net::HttpStreamParser"*, i32)**
  %38 = load void (%"class.net::HttpStreamParser"*, i32)*, void (%"class.net::HttpStreamParser"*, i32)** %37, align 8
  br label %41

39:                                               ; preds = %23
  %40 = inttoptr i64 %15 to void (%"class.net::HttpStreamParser"*, i32)*
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi void (%"class.net::HttpStreamParser"*, i32)* [ %38, %32 ], [ %40, %39 ]
  call void %42(%"class.net::HttpStreamParser"* %29, i32 %1) #9
  br label %43

43:                                               ; preds = %2, %8, %41
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #9
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #13
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #9
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::HttpStreamParser"**
  %9 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %8, align 8
  %10 = icmp ne %"class.net::HttpStreamParser"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #9
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #4

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6insertEmPKcm(%"class.std::__1::basic_string"*, i64, i8*, i64) local_unnamed_addr #4

declare void @_ZN3net8IOBufferC2Em(%"class.net::IOBuffer"*, i64) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net16HttpStreamParser16SeekableIOBufferD2Ev(%"class.net::HttpStreamParser::SeekableIOBuffer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net16HttpStreamParser16SeekableIOBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %0, i64 0, i32 0, i32 2
  %8 = bitcast i8** %7 to i64*
  store i64 %5, i64* %8, align 8
  tail call void @_ZN3net8IOBufferD2Ev(%"class.net::IOBuffer"* %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net16HttpStreamParser16SeekableIOBufferD0Ev(%"class.net::HttpStreamParser::SeekableIOBuffer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net16HttpStreamParser16SeekableIOBufferE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %0, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.net::HttpStreamParser::SeekableIOBuffer", %"class.net::HttpStreamParser::SeekableIOBuffer"* %0, i64 0, i32 0, i32 2
  %8 = bitcast i8** %7 to i64*
  store i64 %5, i64* %8, align 8
  tail call void @_ZN3net8IOBufferD2Ev(%"class.net::IOBuffer"* %6) #9
  %9 = bitcast %"class.net::HttpStreamParser::SeekableIOBuffer"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net8IOBufferD2Ev(%"class.net::IOBuffer"*) unnamed_addr #2

declare void @_ZN3net8IOBufferC1Em(%"class.net::IOBuffer"*, i64) unnamed_addr #4

declare void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEi(%"class.net::DrainableIOBuffer"*, %"class.net::IOBuffer"*, i32) unnamed_addr #4

declare void @_ZN3net14StringIOBufferC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::StringIOBuffer"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #4

declare void @_ZN3net17DrainableIOBufferC1E13scoped_refptrINS_8IOBufferEEm(%"class.net::DrainableIOBuffer"*, %"class.net::IOBuffer"*, i64) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #9
  br i1 %7, label %8, label %43

8:                                                ; preds = %2
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.net::HttpStreamParser"**
  %11 = load %"class.net::HttpStreamParser"*, %"class.net::HttpStreamParser"** %10, align 8
  %12 = icmp eq %"class.net::HttpStreamParser"* %11, null
  br i1 %12, label %43, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %17 = bitcast void ()** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #9
  br i1 %19, label %23, label %20

20:                                               ; preds = %13
  %21 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0)) #9
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %23

23:                                               ; preds = %20, %13
  %24 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #9
  %25 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = select i1 %24, i8* %26, i8* null
  %28 = getelementptr inbounds i8, i8* %27, i64 %18
  %29 = bitcast i8* %28 to %"class.net::HttpStreamParser"*
  %30 = and i64 %15, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %23
  %33 = bitcast i8* %28 to i8**
  %34 = load i8*, i8** %33, align 8
  %35 = add i64 %15, -1
  %36 = getelementptr i8, i8* %34, i64 %35
  %37 = bitcast i8* %36 to void (%"class.net::HttpStreamParser"*, i32)**
  %38 = load void (%"class.net::HttpStreamParser"*, i32)*, void (%"class.net::HttpStreamParser"*, i32)** %37, align 8
  br label %41

39:                                               ; preds = %23
  %40 = inttoptr i64 %15 to void (%"class.net::HttpStreamParser"*, i32)*
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi void (%"class.net::HttpStreamParser"*, i32)* [ %38, %32 ], [ %40, %39 ]
  call void %42(%"class.net::HttpStreamParser"* %29, i32 %1) #9
  br label %43

43:                                               ; preds = %2, %8, %41
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net19HttpResponseHeadersD1Ev(%"class.net::HttpResponseHeaders"*) unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #4

declare void @_ZN3net18HttpChunkedDecoderC1Ev(%"class.net::HttpChunkedDecoder"*) unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #12

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nofree nounwind readonly }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN3net16HttpStreamParserEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN3net16HttpStreamParserEE10GetWeakPtrEv"}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base13BindRepeatingIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!9 = distinct !{!9, !"_ZN4base13BindRepeatingIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_OS9_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_OS9_"}
!13 = !{i8 0, i8 2}
!14 = !{!"branch_weights", i32 2000, i32 1}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN3net12_GLOBAL__N_127NetLogSendRequestBodyParamsEmbb: argument 0"}
!17 = distinct !{!17, !"_ZN3net12_GLOBAL__N_127NetLogSendRequestBodyParamsEmbb"}
!18 = distinct !{!18, !19, !"_ZZN3net12_GLOBAL__N_121NetLogSendRequestBodyERKNS_16NetLogWithSourceEmbbENK3$_0clEv: argument 0"}
!19 = distinct !{!19, !"_ZZN3net12_GLOBAL__N_121NetLogSendRequestBodyERKNS_16NetLogWithSourceEmbbENK3$_0clEv"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK4base14WeakPtrFactoryIN3net16HttpStreamParserEE10GetWeakPtrEv: argument 0"}
!22 = distinct !{!22, !"_ZNK4base14WeakPtrFactoryIN3net16HttpStreamParserEE10GetWeakPtrEv"}
!23 = !{!24, !26}
!24 = distinct !{!24, !25, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!25 = distinct !{!25, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!26 = distinct !{!26, !27, !"_ZN4base8BindOnceIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!27 = distinct !{!27, !"_ZN4base8BindOnceIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK4base14WeakPtrFactoryIN3net16HttpStreamParserEE10GetWeakPtrEv: argument 0"}
!30 = distinct !{!30, !"_ZNK4base14WeakPtrFactoryIN3net16HttpStreamParserEE10GetWeakPtrEv"}
!31 = !{!32, !34}
!32 = distinct !{!32, !33, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!33 = distinct !{!33, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!34 = distinct !{!34, !35, !"_ZN4base8BindOnceIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!35 = distinct !{!35, !"_ZN4base8BindOnceIMN3net16HttpStreamParserEFviEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!36 = !{!"branch_weights", i32 1, i32 2000}
