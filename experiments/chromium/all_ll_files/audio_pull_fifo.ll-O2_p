; ModuleID = '../../media/base/audio_pull_fifo.cc'
source_filename = "../../media/base/audio_pull_fifo.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.media::AudioPullFifo" = type <{ i32 (...)**, %"class.base::RepeatingCallback", %"class.std::__1::unique_ptr", i32, [4 x i8] }>
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.media::AudioBus"* }
%"class.media::AudioBus" = type { i32 (...)**, %"class.std::__1::unique_ptr.1", i8, i64, i32, %"class.std::__1::vector", i32, i8, %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { float* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float**, float**, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { float** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }

@_ZTVN5media13AudioPullFifoE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::AudioPullFifo"*)* @_ZN5media13AudioPullFifoD2Ev to i8*), i8* bitcast (void (%"class.media::AudioPullFifo"*)* @_ZN5media13AudioPullFifoD0Ev to i8*)] }, align 8

@_ZN5media13AudioPullFifoC1EiiN4base17RepeatingCallbackIFviPNS_8AudioBusEEEE = hidden unnamed_addr alias void (%"class.media::AudioPullFifo"*, i32, i32, %"class.base::RepeatingCallback"*), void (%"class.media::AudioPullFifo"*, i32, i32, %"class.base::RepeatingCallback"*)* @_ZN5media13AudioPullFifoC2EiiN4base17RepeatingCallbackIFviPNS_8AudioBusEEEE
@_ZN5media13AudioPullFifoD1Ev = hidden unnamed_addr alias void (%"class.media::AudioPullFifo"*), void (%"class.media::AudioPullFifo"*)* @_ZN5media13AudioPullFifoD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media13AudioPullFifoC2EiiN4base17RepeatingCallbackIFviPNS_8AudioBusEEEE(%"class.media::AudioPullFifo"* nocapture, i32, i32, %"class.base::RepeatingCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.media::AudioPullFifo", %"class.media::AudioPullFifo"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5media13AudioPullFifoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.media::AudioPullFifo", %"class.media::AudioPullFifo"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::RepeatingCallback"* %3 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::RepeatingCallback"* %6 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = tail call %"class.media::AudioBus"* @_ZN5media8AudioBus6CreateEii(i32 %1, i32 %2) #7
  %12 = getelementptr inbounds %"class.media::AudioPullFifo", %"class.media::AudioPullFifo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.media::AudioBus"* %11, %"class.media::AudioBus"** %12, align 8
  %13 = getelementptr inbounds %"class.media::AudioPullFifo", %"class.media::AudioPullFifo"* %0, i64 0, i32 3
  store i32 %2, i32* %13, align 8
  ret void
}

declare %"class.media::AudioBus"* @_ZN5media8AudioBus6CreateEii(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media13AudioPullFifoD2Ev(%"class.media::AudioPullFifo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::AudioPullFifo", %"class.media::AudioPullFifo"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5media13AudioPullFifoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::AudioPullFifo", %"class.media::AudioPullFifo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %3, align 8
  store %"class.media::AudioBus"* null, %"class.media::AudioBus"** %3, align 8
  %5 = icmp eq %"class.media::AudioBus"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.media::AudioBus"* %4 to void (%"class.media::AudioBus"*)***
  %8 = load void (%"class.media::AudioBus"*)**, void (%"class.media::AudioBus"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %8, i64 1
  %10 = load void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %9, align 8
  tail call void %10(%"class.media::AudioBus"* nonnull %4) #7
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.media::AudioPullFifo", %"class.media::AudioPullFifo"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %12) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media13AudioPullFifoD0Ev(%"class.media::AudioPullFifo"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::AudioPullFifo", %"class.media::AudioPullFifo"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5media13AudioPullFifoE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::AudioPullFifo", %"class.media::AudioPullFifo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %3, align 8
  store %"class.media::AudioBus"* null, %"class.media::AudioBus"** %3, align 8
  %5 = icmp eq %"class.media::AudioBus"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.media::AudioBus"* %4 to void (%"class.media::AudioBus"*)***
  %8 = load void (%"class.media::AudioBus"*)**, void (%"class.media::AudioBus"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %8, i64 1
  %10 = load void (%"class.media::AudioBus"*)*, void (%"class.media::AudioBus"*)** %9, align 8
  tail call void %10(%"class.media::AudioBus"* nonnull %4) #7
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.media::AudioPullFifo", %"class.media::AudioPullFifo"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %12) #7
  %13 = bitcast %"class.media::AudioPullFifo"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media13AudioPullFifo7ConsumeEPNS_8AudioBusEi(%"class.media::AudioPullFifo"* nocapture, %"class.media::AudioBus"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.media::AudioPullFifo", %"class.media::AudioPullFifo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %4, align 8
  %6 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %5, i64 0, i32 6
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.media::AudioPullFifo", %"class.media::AudioPullFifo"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = sub nsw i32 %7, %9
  %11 = icmp slt i32 %10, %2
  %12 = select i1 %11, i32 %10, i32 %2
  %13 = icmp slt i32 %12, 1
  br i1 %13, label %61, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %5, i64 0, i32 5
  %16 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %5, i64 0, i32 5, i32 0, i32 1
  %17 = bitcast float*** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.std::__1::vector"* %15 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %18, %20
  %22 = lshr exact i64 %21, 3
  %23 = trunc i64 %22 to i32
  %24 = icmp sgt i32 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %14
  %26 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %1, i64 0, i32 5, i32 0, i32 0
  %27 = sext i32 %12 to i64
  %28 = shl nsw i64 %27, 2
  br label %33

29:                                               ; preds = %33, %14
  %30 = phi %"class.media::AudioBus"* [ %5, %14 ], [ %49, %33 ]
  %31 = phi i32 [ %9, %14 ], [ %60, %33 ]
  %32 = add nsw i32 %31, %12
  store i32 %32, i32* %8, align 8
  br label %61

33:                                               ; preds = %33, %25
  %34 = phi i32 [ %9, %25 ], [ %60, %33 ]
  %35 = phi i64 [ 0, %25 ], [ %48, %33 ]
  %36 = phi %"class.media::AudioBus"* [ %5, %25 ], [ %49, %33 ]
  %37 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %36, i64 0, i32 5, i32 0, i32 0
  %38 = load float**, float*** %37, align 8
  %39 = getelementptr inbounds float*, float** %38, i64 %35
  %40 = load float*, float** %39, align 8
  %41 = sext i32 %34 to i64
  %42 = getelementptr inbounds float, float* %40, i64 %41
  %43 = load float**, float*** %26, align 8
  %44 = getelementptr inbounds float*, float** %43, i64 %35
  %45 = bitcast float** %44 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = bitcast float* %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* align 4 %47, i64 %28, i1 false) #7
  %48 = add nuw nsw i64 %35, 1
  %49 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %4, align 8
  %50 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %49, i64 0, i32 5
  %51 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %49, i64 0, i32 5, i32 0, i32 1
  %52 = bitcast float*** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.std::__1::vector"* %50 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = sub i64 %53, %55
  %57 = shl i64 %56, 29
  %58 = ashr i64 %57, 32
  %59 = icmp slt i64 %48, %58
  %60 = load i32, i32* %8, align 8
  br i1 %59, label %33, label %29

61:                                               ; preds = %3, %29
  %62 = phi %"class.media::AudioBus"* [ %30, %29 ], [ %5, %3 ]
  %63 = phi i32 [ %12, %29 ], [ 0, %3 ]
  %64 = sub nsw i32 %2, %63
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %66, label %139

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.media::AudioPullFifo", %"class.media::AudioPullFifo"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %1, i64 0, i32 5, i32 0, i32 0
  br label %69

69:                                               ; preds = %66, %133
  %70 = phi %"class.media::AudioBus"* [ %62, %66 ], [ %134, %133 ]
  %71 = phi i32 [ %63, %66 ], [ %136, %133 ]
  %72 = phi i32 [ %64, %66 ], [ %137, %133 ]
  store i32 0, i32* %8, align 8
  %73 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %67, align 8
  %74 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %73, i64 0, i32 1
  %75 = bitcast void ()** %74 to void (%"class.base::internal::BindStateBase"*, i32, %"class.media::AudioBus"*)**
  %76 = load void (%"class.base::internal::BindStateBase"*, i32, %"class.media::AudioBus"*)*, void (%"class.base::internal::BindStateBase"*, i32, %"class.media::AudioBus"*)** %75, align 8
  tail call void %76(%"class.base::internal::BindStateBase"* %73, i32 %71, %"class.media::AudioBus"* %70) #7
  %77 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %4, align 8
  %78 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %77, i64 0, i32 6
  %79 = load i32, i32* %78, align 8
  %80 = load i32, i32* %8, align 8
  %81 = sub nsw i32 %79, %80
  %82 = icmp slt i32 %81, %72
  %83 = select i1 %82, i32 %81, i32 %72
  %84 = icmp slt i32 %83, 1
  br i1 %84, label %133, label %85

85:                                               ; preds = %69
  %86 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %77, i64 0, i32 5
  %87 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %77, i64 0, i32 5, i32 0, i32 1
  %88 = bitcast float*** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.std::__1::vector"* %86 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %89, %91
  %93 = lshr exact i64 %92, 3
  %94 = trunc i64 %93 to i32
  %95 = icmp sgt i32 %94, 0
  br i1 %95, label %96, label %100

96:                                               ; preds = %85
  %97 = sext i32 %71 to i64
  %98 = sext i32 %83 to i64
  %99 = shl nsw i64 %98, 2
  br label %104

100:                                              ; preds = %104, %85
  %101 = phi %"class.media::AudioBus"* [ %77, %85 ], [ %121, %104 ]
  %102 = phi i32 [ %80, %85 ], [ %132, %104 ]
  %103 = add nsw i32 %102, %83
  store i32 %103, i32* %8, align 8
  br label %133

104:                                              ; preds = %104, %96
  %105 = phi i32 [ %80, %96 ], [ %132, %104 ]
  %106 = phi i64 [ 0, %96 ], [ %120, %104 ]
  %107 = phi %"class.media::AudioBus"* [ %77, %96 ], [ %121, %104 ]
  %108 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %107, i64 0, i32 5, i32 0, i32 0
  %109 = load float**, float*** %108, align 8
  %110 = getelementptr inbounds float*, float** %109, i64 %106
  %111 = load float*, float** %110, align 8
  %112 = sext i32 %105 to i64
  %113 = getelementptr inbounds float, float* %111, i64 %112
  %114 = load float**, float*** %68, align 8
  %115 = getelementptr inbounds float*, float** %114, i64 %106
  %116 = load float*, float** %115, align 8
  %117 = getelementptr inbounds float, float* %116, i64 %97
  %118 = bitcast float* %117 to i8*
  %119 = bitcast float* %113 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %118, i8* align 4 %119, i64 %99, i1 false) #7
  %120 = add nuw nsw i64 %106, 1
  %121 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %4, align 8
  %122 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %121, i64 0, i32 5
  %123 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %121, i64 0, i32 5, i32 0, i32 1
  %124 = bitcast float*** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.std::__1::vector"* %122 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = sub i64 %125, %127
  %129 = shl i64 %128, 29
  %130 = ashr i64 %129, 32
  %131 = icmp slt i64 %120, %130
  %132 = load i32, i32* %8, align 8
  br i1 %131, label %104, label %100

133:                                              ; preds = %69, %100
  %134 = phi %"class.media::AudioBus"* [ %101, %100 ], [ %77, %69 ]
  %135 = phi i32 [ %83, %100 ], [ 0, %69 ]
  %136 = add nsw i32 %135, %71
  %137 = sub nsw i32 %72, %135
  %138 = icmp sgt i32 %137, 0
  br i1 %138, label %69, label %139

139:                                              ; preds = %133, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5media13AudioPullFifo12ReadFromFifoEPNS_8AudioBusEii(%"class.media::AudioPullFifo"* nocapture, %"class.media::AudioBus"* nocapture readonly, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.media::AudioPullFifo", %"class.media::AudioPullFifo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %5, align 8
  %7 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %6, i64 0, i32 6
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.media::AudioPullFifo", %"class.media::AudioPullFifo"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = sub nsw i32 %8, %10
  %12 = icmp slt i32 %11, %2
  %13 = select i1 %12, i32 %11, i32 %2
  %14 = icmp slt i32 %13, 1
  br i1 %14, label %63, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %6, i64 0, i32 5
  %17 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %6, i64 0, i32 5, i32 0, i32 1
  %18 = bitcast float*** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = lshr exact i64 %22, 3
  %24 = trunc i64 %23 to i32
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %31

26:                                               ; preds = %15
  %27 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %1, i64 0, i32 5, i32 0, i32 0
  %28 = sext i32 %3 to i64
  %29 = sext i32 %13 to i64
  %30 = shl nsw i64 %29, 2
  br label %34

31:                                               ; preds = %34, %15
  %32 = phi i32 [ %10, %15 ], [ %62, %34 ]
  %33 = add nsw i32 %32, %13
  store i32 %33, i32* %9, align 8
  br label %63

34:                                               ; preds = %34, %26
  %35 = phi i32 [ %10, %26 ], [ %62, %34 ]
  %36 = phi i64 [ 0, %26 ], [ %50, %34 ]
  %37 = phi %"class.media::AudioBus"* [ %6, %26 ], [ %51, %34 ]
  %38 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %37, i64 0, i32 5, i32 0, i32 0
  %39 = load float**, float*** %38, align 8
  %40 = getelementptr inbounds float*, float** %39, i64 %36
  %41 = load float*, float** %40, align 8
  %42 = sext i32 %35 to i64
  %43 = getelementptr inbounds float, float* %41, i64 %42
  %44 = load float**, float*** %27, align 8
  %45 = getelementptr inbounds float*, float** %44, i64 %36
  %46 = load float*, float** %45, align 8
  %47 = getelementptr inbounds float, float* %46, i64 %28
  %48 = bitcast float* %47 to i8*
  %49 = bitcast float* %43 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %48, i8* align 4 %49, i64 %30, i1 false)
  %50 = add nuw nsw i64 %36, 1
  %51 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %5, align 8
  %52 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %51, i64 0, i32 5
  %53 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %51, i64 0, i32 5, i32 0, i32 1
  %54 = bitcast float*** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.std::__1::vector"* %52 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = sub i64 %55, %57
  %59 = shl i64 %58, 29
  %60 = ashr i64 %59, 32
  %61 = icmp slt i64 %50, %60
  %62 = load i32, i32* %9, align 8
  br i1 %61, label %34, label %31

63:                                               ; preds = %4, %31
  %64 = phi i32 [ %13, %31 ], [ 0, %4 ]
  ret i32 %64
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5media13AudioPullFifo5ClearEv(%"class.media::AudioPullFifo"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.media::AudioPullFifo", %"class.media::AudioPullFifo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %2, align 8
  %4 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %3, i64 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.media::AudioPullFifo", %"class.media::AudioPullFifo"* %0, i64 0, i32 3
  store i32 %5, i32* %6, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5media13AudioPullFifo12SizeInFramesEv(%"class.media::AudioPullFifo"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.media::AudioPullFifo", %"class.media::AudioPullFifo"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %2, align 8
  %4 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %3, i64 0, i32 6
  %5 = load i32, i32* %4, align 8
  ret i32 %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
