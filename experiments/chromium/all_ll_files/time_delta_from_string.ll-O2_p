; ModuleID = '../../base/time/time_delta_from_string.cc'
source_filename = "../../base/time/time_delta_from_string.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::pair" = type { i8*, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

@.str = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"inf\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"ns\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"us\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"ms\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"m\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.ref.tmp = private constant [6 x %"struct.std::__1::pair"] [%"struct.std::__1::pair" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i32 0, i32 0), %"class.base::TimeDelta" zeroinitializer }, %"struct.std::__1::pair" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i32 0, i32 0), %"class.base::TimeDelta" { i64 1 } }, %"struct.std::__1::pair" { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i32 0, i32 0), %"class.base::TimeDelta" { i64 1000 } }, %"struct.std::__1::pair" { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i32 0, i32 0), %"class.base::TimeDelta" { i64 1000000 } }, %"struct.std::__1::pair" { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i32 0, i32 0), %"class.base::TimeDelta" { i64 60000000 } }, %"struct.std::__1::pair" { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i32 0, i32 0), %"class.base::TimeDelta" { i64 3600000000 } }], align 8
@.str.13 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden { i8, i64 } @_ZN4base19TimeDeltaFromStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #0 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.base::BasicStringPiece", align 8
  %7 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 0
  store i8* %0, i8** %7, align 8
  %8 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %6, i64 0, i32 1
  store i64 %1, i64* %8, align 8
  %9 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %0, i64 %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i32 0) #7
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %0, i64 %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1, i32 0) #7
  br i1 %11, label %12, label %15

12:                                               ; preds = %10, %2
  %13 = phi i32 [ -1, %2 ], [ 1, %10 ]
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* nonnull %6, i64 1) #7
  %14 = load i64, i64* %8, align 8
  br label %15

15:                                               ; preds = %12, %10
  %16 = phi i64 [ %14, %12 ], [ %1, %10 ]
  %17 = phi i32 [ %13, %12 ], [ 1, %10 ]
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %198, label %19

19:                                               ; preds = %15
  %20 = load i8*, i8** %7, align 8
  switch i64 %16, label %30 [
    i64 1, label %21
    i64 3, label %24
  ]

21:                                               ; preds = %19
  %22 = load i8, i8* %20, align 1
  %23 = icmp eq i8 %22, 48
  br i1 %23, label %198, label %30

24:                                               ; preds = %19
  %25 = call i32 @bcmp(i8* %20, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 %16) #7
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %24
  %28 = icmp eq i32 %17, 1
  %29 = select i1 %28, i64 9223372036854775807, i64 -9223372036854775808
  br label %198

30:                                               ; preds = %24, %19, %21
  %31 = bitcast %"class.logging::CheckError"* %3 to i8*
  %32 = sext i32 %17 to i64
  %33 = bitcast %"class.logging::CheckError"* %4 to i8*
  %34 = sitofp i32 %17 to double
  %35 = bitcast %"class.logging::CheckError"* %5 to i8*
  br label %36

36:                                               ; preds = %196, %30
  %37 = phi i8* [ %20, %30 ], [ %197, %196 ]
  %38 = phi i64 [ 0, %30 ], [ %193, %196 ]
  br label %42

39:                                               ; preds = %56
  %40 = load i8*, i8** %7, align 8, !noalias !2
  %41 = icmp eq i8* %40, %37
  br i1 %41, label %198, label %98

42:                                               ; preds = %36, %56
  %43 = phi i64 [ %57, %56 ], [ 0, %36 ]
  %44 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %6, i64 0) #7, !noalias !2
  %45 = load i8, i8* %44, align 1, !noalias !2
  %46 = sext i8 %45 to i32
  %47 = add nsw i32 %46, -48
  %48 = icmp ugt i32 %47, 9
  br i1 %48, label %60, label %49

49:                                               ; preds = %42
  %50 = icmp sgt i64 %43, 922337203685477580
  br i1 %50, label %198, label %51

51:                                               ; preds = %49
  %52 = mul nsw i64 %43, 10
  %53 = sext i32 %47 to i64
  %54 = sub nuw nsw i64 9223372036854775807, %53
  %55 = icmp sgt i64 %52, %54
  br i1 %55, label %198, label %56

56:                                               ; preds = %51
  %57 = add nsw i64 %52, %53
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* nonnull %6, i64 1) #7, !noalias !2
  %58 = load i64, i64* %8, align 8, !noalias !2
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %39, label %42

60:                                               ; preds = %42
  %61 = load i64, i64* %8, align 8, !noalias !2
  %62 = load i8*, i8** %7, align 8, !noalias !2
  %63 = icmp eq i8* %62, %37
  %64 = icmp eq i64 %61, 0
  br i1 %64, label %69, label %65

65:                                               ; preds = %60
  %66 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %6, i64 0) #7, !noalias !2
  %67 = load i8, i8* %66, align 1, !noalias !2
  %68 = icmp eq i8 %67, 46
  br i1 %68, label %70, label %69

69:                                               ; preds = %65, %60
  br i1 %63, label %198, label %98

70:                                               ; preds = %65
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* nonnull %6, i64 1) #7, !noalias !2
  %71 = load i64, i64* %8, align 8, !noalias !2
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %93, label %73

73:                                               ; preds = %70, %88
  %74 = phi i64 [ %90, %88 ], [ 1, %70 ]
  %75 = phi i64 [ %89, %88 ], [ 0, %70 ]
  %76 = call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* nonnull %6, i64 0) #7, !noalias !2
  %77 = load i8, i8* %76, align 1, !noalias !2
  %78 = sext i8 %77 to i32
  %79 = add nsw i32 %78, -48
  %80 = icmp ugt i32 %79, 9
  br i1 %80, label %93, label %81

81:                                               ; preds = %73
  %82 = icmp sgt i64 %74, 922337203685477580
  br i1 %82, label %88, label %83

83:                                               ; preds = %81
  %84 = mul nsw i64 %75, 10
  %85 = sext i32 %79 to i64
  %86 = add nsw i64 %84, %85
  %87 = mul nsw i64 %74, 10
  br label %88

88:                                               ; preds = %83, %81
  %89 = phi i64 [ %75, %81 ], [ %86, %83 ]
  %90 = phi i64 [ %74, %81 ], [ %87, %83 ]
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* nonnull %6, i64 1) #7, !noalias !2
  %91 = load i64, i64* %8, align 8, !noalias !2
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %73

93:                                               ; preds = %88, %73, %70
  %94 = phi i64 [ 0, %70 ], [ %89, %88 ], [ %75, %73 ]
  %95 = phi i64 [ 1, %70 ], [ %90, %88 ], [ %74, %73 ]
  %96 = icmp eq i64 %95, 1
  %97 = and i1 %63, %96
  br i1 %97, label %198, label %98

98:                                               ; preds = %93, %39, %69
  %99 = phi i64 [ %57, %39 ], [ %43, %69 ], [ %43, %93 ]
  %100 = phi i64 [ 0, %39 ], [ 0, %69 ], [ %94, %93 ]
  %101 = phi i64 [ 1, %39 ], [ 1, %69 ], [ %95, %93 ]
  br label %102

102:                                              ; preds = %116, %98
  %103 = phi %"struct.std::__1::pair"* [ getelementptr inbounds ([6 x %"struct.std::__1::pair"], [6 x %"struct.std::__1::pair"]* @.ref.tmp, i64 0, i64 0), %98 ], [ %117, %116 ]
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 0, i32 0
  %105 = load i8*, i8** %104, align 8
  %106 = icmp eq i8* %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %102
  %108 = call i64 @strlen(i8* nonnull %105) #7
  br label %111

109:                                              ; preds = %102
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #7
  %110 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #7
  br label %111

111:                                              ; preds = %109, %107
  %112 = phi i64 [ 0, %109 ], [ %108, %107 ]
  %113 = load i8*, i8** %7, align 8
  %114 = load i64, i64* %8, align 8
  %115 = call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %113, i64 %114, i8* %105, i64 %112, i32 0) #7
  br i1 %115, label %119, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 1
  %118 = icmp eq %"struct.std::__1::pair"* %117, getelementptr inbounds ([6 x %"struct.std::__1::pair"], [6 x %"struct.std::__1::pair"]* @.ref.tmp, i64 1, i64 0)
  br i1 %118, label %198, label %102

119:                                              ; preds = %111
  call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* nonnull %6, i64 %112) #7
  %120 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %103, i64 0, i32 1, i32 0
  %121 = load i64, i64* %120, align 8
  %122 = icmp eq i64 %99, 0
  br i1 %122, label %153, label %123

123:                                              ; preds = %119
  %124 = mul nsw i64 %99, %32
  %125 = call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %121, i64 %124) #7
  %126 = extractvalue { i64, i1 } %125, 1
  %127 = extractvalue { i64, i1 } %125, 0
  br i1 %126, label %128, label %135

128:                                              ; preds = %123
  %129 = lshr i64 %121, 63
  %130 = trunc i64 %129 to i32
  %131 = lshr i64 %124, 63
  %132 = trunc i64 %131 to i32
  %133 = icmp eq i32 %130, %132
  %134 = select i1 %133, i64 9223372036854775807, i64 -9223372036854775808
  br label %135

135:                                              ; preds = %123, %128
  %136 = phi i64 [ %127, %123 ], [ %134, %128 ]
  %137 = add i64 %136, -9223372036854775807
  %138 = icmp ult i64 %137, 2
  br i1 %138, label %146, label %139

139:                                              ; preds = %135
  %140 = icmp slt i64 %136, 0
  %141 = select i1 %140, i64 -9223372036854775808, i64 9223372036854775807
  %142 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %38, i64 %136) #7
  %143 = extractvalue { i64, i1 } %142, 1
  %144 = extractvalue { i64, i1 } %142, 0
  %145 = select i1 %143, i64 %141, i64 %144, !prof !5
  br label %153

146:                                              ; preds = %135
  %147 = add i64 %38, -9223372036854775807
  %148 = icmp ugt i64 %147, 1
  %149 = icmp eq i64 %38, %136
  %150 = or i1 %148, %149
  br i1 %150, label %153, label %151

151:                                              ; preds = %146
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0)) #7
  %152 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  br label %153

153:                                              ; preds = %151, %146, %139, %119
  %154 = phi i64 [ %38, %119 ], [ %145, %139 ], [ %136, %146 ], [ %136, %151 ]
  %155 = icmp eq i64 %100, 0
  br i1 %155, label %192, label %156

156:                                              ; preds = %153
  %157 = sitofp i64 %100 to double
  %158 = fmul double %34, %157
  %159 = sitofp i64 %101 to double
  %160 = fdiv double %158, %159
  %161 = sitofp i64 %121 to double
  %162 = fmul double %160, %161
  %163 = fcmp oge double %162, 0xC3E0000000000000
  %164 = fcmp ole double %162, 0x43DFFFFFFFFFFFFF
  %165 = and i1 %164, %163
  %166 = fptosi double %162 to i64
  br i1 %165, label %174, label %167

167:                                              ; preds = %156
  %168 = lshr i64 %121, 63
  %169 = trunc i64 %168 to i32
  %170 = fcmp olt double %160, 0.000000e+00
  %171 = zext i1 %170 to i32
  %172 = icmp eq i32 %169, %171
  %173 = select i1 %172, i64 9223372036854775807, i64 -9223372036854775808
  br label %174

174:                                              ; preds = %156, %167
  %175 = phi i64 [ %166, %156 ], [ %173, %167 ]
  %176 = add i64 %175, -9223372036854775807
  %177 = icmp ult i64 %176, 2
  br i1 %177, label %185, label %178

178:                                              ; preds = %174
  %179 = icmp slt i64 %175, 0
  %180 = select i1 %179, i64 -9223372036854775808, i64 9223372036854775807
  %181 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %154, i64 %175) #7
  %182 = extractvalue { i64, i1 } %181, 1
  %183 = extractvalue { i64, i1 } %181, 0
  %184 = select i1 %182, i64 %180, i64 %183, !prof !5
  br label %192

185:                                              ; preds = %174
  %186 = add i64 %154, -9223372036854775807
  %187 = icmp ugt i64 %186, 1
  %188 = icmp eq i64 %154, %175
  %189 = or i1 %187, %188
  br i1 %189, label %192, label %190

190:                                              ; preds = %185
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0)) #7
  %191 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  br label %192

192:                                              ; preds = %153, %178, %185, %190
  %193 = phi i64 [ %154, %153 ], [ %184, %178 ], [ %175, %185 ], [ %175, %190 ]
  %194 = load i64, i64* %8, align 8
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %198, label %196

196:                                              ; preds = %192
  %197 = load i8*, i8** %7, align 8, !noalias !2
  br label %36

198:                                              ; preds = %192, %69, %39, %93, %51, %49, %116, %27, %21, %15
  %199 = phi i8 [ 0, %15 ], [ 1, %21 ], [ 1, %27 ], [ 0, %116 ], [ 0, %49 ], [ 0, %51 ], [ 1, %192 ], [ 0, %69 ], [ 0, %39 ], [ 0, %93 ]
  %200 = phi i64 [ undef, %15 ], [ 0, %21 ], [ %29, %27 ], [ %38, %116 ], [ %38, %49 ], [ %38, %51 ], [ %193, %192 ], [ %38, %69 ], [ %38, %39 ], [ %38, %93 ]
  %201 = insertvalue { i8, i64 } undef, i8 %199, 0
  %202 = insertvalue { i8, i64 } %201, i64 %200, 1
  ret { i8, i64 } %202
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
declare void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #0 align 2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #5

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nofree nounwind readonly }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN4base12_GLOBAL__N_121ConsumeDurationNumberERNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE: argument 0"}
!4 = distinct !{!4, !"_ZN4base12_GLOBAL__N_121ConsumeDurationNumberERNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE"}
!5 = !{!"branch_weights", i32 1, i32 2000}
