; ModuleID = '../../third_party/blink/renderer/modules/canvas/canvas2d/canvas_filter_operation_resolver.cc'
source_filename = "../../third_party/blink/renderer/modules/canvas/canvas2d/canvas_filter_operation_resolver.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.155", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.183", %"class.std::__1::unique_ptr.189", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.196", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.41", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.136", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.56" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl.59" }
%"struct.std::__1::__cxx_atomic_impl.59" = type { %"struct.std::__1::__cxx_atomic_base_impl.60" }
%"struct.std::__1::__cxx_atomic_base_impl.60" = type { i64 }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::Worklist.67"* }
%"class.blink::Worklist.67" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.56" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist.74"* }
%"class.blink::Worklist.74" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.56" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist.81"* }
%"class.blink::Worklist.81" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.56" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::Worklist.88"* }
%"class.blink::Worklist.88" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.56" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist.95"* }
%"class.blink::Worklist.95" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.56" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::Worklist.102"* }
%"class.blink::Worklist.102" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.56" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::Worklist.109"* }
%"class.blink::Worklist.109" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.56" }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.116", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.130", [4 x i8] }>
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118", %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { i64 }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { float }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.139", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.148" }
%"class.WTF::Vector.148" = type { %"class.WTF::VectorBuffer.149" }
%"class.WTF::VectorBuffer.149" = type { %"class.WTF::VectorBufferBase.150" }
%"class.WTF::VectorBufferBase.150" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.163" }
%"class.WTF::VectorBuffer.163" = type { %"class.WTF::VectorBufferBase.164" }
%"class.WTF::VectorBufferBase.164" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.177" }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.67"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.74"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.81"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.88"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.95"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.201" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.195 }
%class.scoped_refptr.195 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__cxx_atomic_impl.198" }
%"struct.std::__1::__cxx_atomic_impl.198" = type { %"struct.std::__1::__cxx_atomic_base_impl.199" }
%"struct.std::__1::__cxx_atomic_base_impl.199" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.341" }
%"struct.std::__1::atomic.341" = type { %"struct.std::__1::__atomic_base.342" }
%"struct.std::__1::__atomic_base.342" = type { %"struct.std::__1::__atomic_base.343" }
%"struct.std::__1::__atomic_base.343" = type { %"struct.std::__1::__cxx_atomic_impl.344" }
%"struct.std::__1::__cxx_atomic_impl.344" = type { %"struct.std::__1::__cxx_atomic_base_impl.345" }
%"struct.std::__1::__cxx_atomic_base_impl.345" = type { i32 }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::HeapVector.3" = type { %"class.WTF::Vector.6" }
%"class.WTF::Vector.6" = type { %"class.WTF::VectorBuffer.7" }
%"class.WTF::VectorBuffer.7" = type { %"class.WTF::VectorBufferBase.8" }
%"class.WTF::VectorBufferBase.8" = type { %"class.blink::Member.9"*, i32, i32 }
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::CanvasFilterDictionary"* }
%"class.blink::CanvasFilterDictionary" = type { %"class.blink::IDLDictionaryBase", %"class.blink::ScriptValue", %"class.blink::ScriptValue", %"class.blink::ScriptValue", %"class.blink::ScriptValue" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference", %class.scoped_refptr.13 }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%class.scoped_refptr.13 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.22" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.22" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.22" = type { %"class.v8::TracedReference.23" }
%"class.v8::TracedReference.23" = type { %"class.v8::BasicTracedReference.24" }
%"class.v8::BasicTracedReference.24" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"struct.blink::ComponentTransferFunction" = type { i32, float, float, float, float, float, %"class.WTF::Vector.212" }
%"class.WTF::Vector.212" = type { %"class.WTF::VectorBuffer.213" }
%"class.WTF::VectorBuffer.213" = type { %"class.WTF::VectorBufferBase.214" }
%"class.WTF::VectorBufferBase.214" = type { float*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.240 }
%union.anon.240 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.absl::optional.404" = type { %"class.absl::optional_internal::optional_data.405" }
%"class.absl::optional_internal::optional_data.405" = type { %"class.absl::optional_internal::optional_data_base.406" }
%"class.absl::optional_internal::optional_data_base.406" = type { %"class.absl::optional_internal::optional_data_dtor_base.407" }
%"class.absl::optional_internal::optional_data_dtor_base.407" = type { i8, %union.anon.408 }
%union.anon.408 = type { %"class.WTF::Vector.409" }
%"class.WTF::Vector.409" = type { %"class.WTF::VectorBuffer.410" }
%"class.WTF::VectorBuffer.410" = type { %"class.WTF::VectorBufferBase.411" }
%"class.WTF::VectorBufferBase.411" = type { %"class.WTF::Vector.212"*, i32, i32 }
%"struct.blink::(anonymous namespace)::KernelMatrix" = type { %"class.WTF::Vector.212", i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.206 }
%union.anon.206 = type { %"class.WTF::String" }
%"class.absl::optional.248" = type { %"class.absl::optional_internal::optional_data.249" }
%"class.absl::optional_internal::optional_data.249" = type { %"class.absl::optional_internal::optional_data_base.250" }
%"class.absl::optional_internal::optional_data_base.250" = type { %"class.absl::optional_internal::optional_data_dtor_base.251" }
%"class.absl::optional_internal::optional_data_dtor_base.251" = type { i8, %union.anon.252 }
%union.anon.252 = type { %"class.WTF::Vector.212" }
%"class.blink::BlurFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.blink::Length", [4 x i8] }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Length" = type <{ %union.anon, i8, i8, i8, i8 }>
%union.anon = type { i32 }
%"class.blink::Dictionary" = type { %"class.v8::Isolate"*, i32, %"class.v8::Local" }
%"class.v8::Local" = type { %"class.v8::Object"* }
%"class.v8::Object" = type { i8 }
%"class.blink::BasicColorMatrixFilterOperation" = type { %"class.blink::FilterOperation.base", double }
%"class.blink::ColorMatrixFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::Vector.212" }
%"class.blink::ConvolveMatrixFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.blink::IntSize", float, float, %"class.blink::IntPoint", i32, i8, %"class.WTF::Vector.212" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::ComponentTransferFilterOperation" = type { %"class.blink::FilterOperation.base", %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction" }
%"class.v8::Value" = type { i8 }
%"class.blink::SVGEnumerationMap" = type <{ %"struct.blink::SVGEnumerationMap::Entry"*, i16, i16, [4 x i8] }>
%"struct.blink::SVGEnumerationMap::Entry" = type { i16, i8* }
%"class.v8::Local.217" = type { %"class.v8::Value"* }
%"class.v8::String" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local", %"class.v8::Local.217", %"class.v8::Local.253", %"class.v8::Local.253", i8, %"class.v8::MaybeLocal.379" }
%"class.v8::Local.253" = type { %"class.v8::String"* }
%"class.v8::MaybeLocal.379" = type { %"class.v8::Value"* }
%"class.v8::Array" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.272", %"class.WTF::HashMap.272", %"class.WTF::HashMap.277", %"class.std::__1::unique_ptr.282", %"class.std::__1::unique_ptr.329", %"class.blink::Persistent.335", i8, i8, i8, %"class.WTF::Vector.337", %"class.std::__1::unique_ptr.348", %"class.blink::Persistent.354", %"class.blink::Persistent.358", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.254", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.266", i32, i32 }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.272" = type { %"class.WTF::HashTable.273" }
%"class.WTF::HashTable.273" = type <{ %"struct.WTF::KeyValuePair.276"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.276" = type opaque
%"class.WTF::HashMap.277" = type { %"class.WTF::HashTable.278" }
%"class.WTF::HashTable.278" = type <{ %"struct.WTF::KeyValuePair.281"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.281" = type opaque
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.290", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.285", i8* }
%"class.WTF::HashMap.285" = type { %"class.WTF::HashTable.286" }
%"class.WTF::HashTable.286" = type <{ %"struct.WTF::KeyValuePair.289"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.289" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.290" = type { %"class.v8::PersistentValueMapBase.291" }
%"class.v8::PersistentValueMapBase.291" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.292", i8* }
%"class.WTF::HashMap.292" = type { %"class.WTF::HashTable.293" }
%"class.WTF::HashTable.293" = type <{ %"struct.WTF::KeyValuePair.296"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.296" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.297", %"class.WTF::String", %"class.std::__1::unique_ptr.299" }
%"class.WTF::RefCounted.297" = type { %"class.base::RefCounted.298" }
%"class.base::RefCounted.298" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.302", %"class.std::__1::unique_ptr.313", %"class.WTF::Vector.319", i8, i32 }
%"class.std::__1::unique_ptr.302" = type { %"class.std::__1::__compressed_pair.303" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.304" }
%"struct.std::__1::__compressed_pair_elem.304" = type { %"class.WTF::Vector.305"* }
%"class.WTF::Vector.305" = type { %"class.WTF::VectorBuffer.306" }
%"class.WTF::VectorBuffer.306" = type { %"class.WTF::VectorBufferBase.307" }
%"class.WTF::VectorBufferBase.307" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.319" = type { %"class.WTF::VectorBuffer.320" }
%"class.WTF::VectorBuffer.320" = type { %"class.WTF::VectorBufferBase.307", [32 x i8] }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent.335" = type { %"class.blink::PersistentBase.336" }
%"class.blink::PersistentBase.336" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.375, %"class.blink::Member.376", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.375 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.335" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::Vector.337" = type { %"class.WTF::VectorBuffer.338" }
%"class.WTF::VectorBuffer.338" = type { %"class.WTF::VectorBufferBase.339" }
%"class.WTF::VectorBufferBase.339" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.340 }
%class.scoped_refptr.340 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.341" }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.354" = type { %"class.blink::PersistentBase.355" }
%"class.blink::PersistentBase.355" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.358" = type { %"class.blink::PersistentBase.359" }
%"class.blink::PersistentBase.359" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.362", i64 }
%"class.blink::HeapVector.362" = type { %"class.WTF::Vector.365" }
%"class.WTF::Vector.365" = type { %"class.WTF::VectorBuffer.366" }
%"class.WTF::VectorBuffer.366" = type { %"class.WTF::VectorBufferBase.367" }
%"class.WTF::VectorBufferBase.367" = type { %"struct.std::__1::pair.368"*, i32, i32 }
%"struct.std::__1::pair.368" = type { %"class.blink::UntracedMember", %"class.blink::Member.370" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.369" }
%"class.blink::MemberBase.369" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::internal::Isolate" = type opaque
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.blink::ExecutionContext" = type opaque
%"class.v8::Boolean" = type { i8 }
%"class.blink::V8StringResource" = type { %"class.v8::Local.217", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.429" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { i8* }
%"class.v8::Int32" = type { i8 }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZNK5blink22CanvasFilterDictionary7hasBlurEv = comdat any

$_ZNK5blink22CanvasFilterDictionary14hasColorMatrixEv = comdat any

$_ZNK5blink10Dictionary3GetINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE = comdat any

$_ZNK5blink10Dictionary3GetINS_30IDLFloatingPointNumberTypeBaseIdLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE = comdat any

$_ZNK5blink22CanvasFilterDictionary17hasConvolveMatrixEv = comdat any

$_ZNK5blink22CanvasFilterDictionary20hasComponentTransferEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15FilterOperationEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15FilterOperationEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15FilterOperationEE7GetNameEPKv = comdat any

$_ZNK5blink15FilterOperation5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink15FilterOperation10IsSameTypeERKS0_ = comdat any

$_ZNK5blink15FilterOperation14AffectsOpacityEv = comdat any

$_ZNK5blink15FilterOperation11MovesPixelsEv = comdat any

$_ZNK5blink15FilterOperation7MapRectERKNS_9FloatRectE = comdat any

$_ZNK5blink10Dictionary3GetINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm = comdat any

$_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_ = comdat any

$_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPf = comdat any

$_ZN5blink26ColorMatrixFilterOperationD2Ev = comdat any

$_ZN5blink26ColorMatrixFilterOperationD0Ev = comdat any

$_ZNK5blink26ColorMatrixFilterOperationeqERKNS_15FilterOperationE = comdat any

$_ZNK5blink10Dictionary3GetINS_18IDLIntegerTypeBaseIsLNS_8bindings18IDLIntegerConvModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE = comdat any

$_ZNK5blink10Dictionary3GetINS_10IDLBooleanEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE = comdat any

$_ZNK5blink10Dictionary3GetINS_11IDLSequenceINS2_INS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS1_INS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEEEvE11NativeValueEPN2v87IsolateENS9_5LocalINS9_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENSC_5LocalINSC_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIfLj0ES0_EEEEmm = comdat any

$_ZN3WTF6VectorINS0_IfLj0ENS_18PartitionAllocatorEEELj0ES1_E14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorINS0_IfLj0ENS_18PartitionAllocatorEEELj0ES1_E16ReallocateBufferEj = comdat any

$_ZN3WTF6VectorINS0_IfLj0ENS_18PartitionAllocatorEEELj0ES1_E2atEj = comdat any

$_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE6AppendIfEEvPKT_j = comdat any

$_ZN5blink29ConvolveMatrixFilterOperationD2Ev = comdat any

$_ZN5blink29ConvolveMatrixFilterOperationD0Ev = comdat any

$_ZNK5blink29ConvolveMatrixFilterOperationeqERKNS_15FilterOperationE = comdat any

$_ZN5blink32ComponentTransferFilterOperationC2ERKNS_25ComponentTransferFunctionES3_S3_S3_ = comdat any

$_ZN5blink32ComponentTransferFilterOperationD2Ev = comdat any

$_ZN5blink32ComponentTransferFilterOperationD0Ev = comdat any

$_ZNK5blink32ComponentTransferFilterOperationeqERKNS_15FilterOperationE = comdat any

$_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_19BlurFilterOperationEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15FilterOperationEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink15FilterOperationD2Ev = comdat any

$_ZN5blink31BasicColorMatrixFilterOperationD0Ev = comdat any

$_ZNK5blink31BasicColorMatrixFilterOperationeqERKNS_15FilterOperationE = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_31BasicColorMatrixFilterOperationEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_26ColorMatrixFilterOperationEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_29ConvolveMatrixFilterOperationEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_32ComponentTransferFilterOperationEEEvOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink26ColorMatrixFilterOperationE = comdat any

$_ZTVN5blink29ConvolveMatrixFilterOperationE = comdat any

$_ZTVN5blink32ComponentTransferFilterOperationE = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink31BasicColorMatrixFilterOperationE = comdat any

@.str = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"matrix\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"hueRotate\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"values\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"saturate\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"luminanceToAlpha\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"stdDeviation\00", align 1
@.str.7 = private unnamed_addr constant [79 x i8] c"Failed to construct blur filter, 'stdDeviation' required and must be a number.\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FilterOperationEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::FilterOperation]\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15FilterOperationEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15FilterOperationEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15FilterOperationEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.10 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink19BlurFilterOperationE = external unnamed_addr constant { [10 x i8*] }, align 8
@.str.11 = private unnamed_addr constant [63 x i8] c"../../third_party/blink/renderer/bindings/core/v8/dictionary.h\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"script_value.IsObject()\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.13 = private unnamed_addr constant [66 x i8] c"Failed to construct color matrix filter, 'values' array required.\00", align 1
@.str.14 = private unnamed_addr constant [82 x i8] c"Failed to construct color matrix filter, 'values' must be an array of 20 numbers.\00", align 1
@.str.15 = private unnamed_addr constant [54 x i8] c"The provided value cannot be converted to a sequence.\00", align 1
@.str.16 = private unnamed_addr constant [53 x i8] c"The object must have a callable @@iterator property.\00", align 1
@.str.17 = private unnamed_addr constant [38 x i8] c"Array length exceeds supported limit.\00", align 1
@.str.18 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.19 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv = private unnamed_addr constant [53 x i8] c"const char *WTF::GetStringWithTypeName() [T = float]\00", align 1
@.str.20 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.21 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZTVN5blink26ColorMatrixFilterOperationE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ColorMatrixFilterOperation"*)* @_ZN5blink26ColorMatrixFilterOperationD2Ev to i8*), i8* bitcast (void (%"class.blink::ColorMatrixFilterOperation"*)* @_ZN5blink26ColorMatrixFilterOperationD0Ev to i8*), i8* bitcast (void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)* @_ZNK5blink15FilterOperation5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::ColorMatrixFilterOperation"*, %"class.blink::FilterOperation"*)* @_ZNK5blink26ColorMatrixFilterOperationeqERKNS_15FilterOperationE to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation10IsSameTypeERKS0_ to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation14AffectsOpacityEv to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation11MovesPixelsEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FilterOperation"*, %"class.blink::FloatRect"*)* @_ZNK5blink15FilterOperation7MapRectERKNS_9FloatRectE to i8*)] }, comdat, align 8
@.str.22 = private unnamed_addr constant [8 x i8] c"divisor\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"bias\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"targetX\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"targetY\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"edgeMode\00", align 1
@.str.27 = private unnamed_addr constant [10 x i8] c"duplicate\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"preserveAlpha\00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"kernelMatrix\00", align 1
@.str.30 = private unnamed_addr constant [128 x i8] c"Failed to construct convolve matrix filter. 'kernelMatrix' must be an array of arrays of numbers representing an n by m matrix.\00", align 1
@.str.31 = private unnamed_addr constant [100 x i8] c"Failed to construct convolve matrix filter. All rows of the 'kernelMatrix' must be the same length.\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIfLj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [94 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<float, 0, WTF::PartitionAllocator>]\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.33 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@_ZTVN5blink29ConvolveMatrixFilterOperationE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ConvolveMatrixFilterOperation"*)* @_ZN5blink29ConvolveMatrixFilterOperationD2Ev to i8*), i8* bitcast (void (%"class.blink::ConvolveMatrixFilterOperation"*)* @_ZN5blink29ConvolveMatrixFilterOperationD0Ev to i8*), i8* bitcast (void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)* @_ZNK5blink15FilterOperation5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::ConvolveMatrixFilterOperation"*, %"class.blink::FilterOperation"*)* @_ZNK5blink29ConvolveMatrixFilterOperationeqERKNS_15FilterOperationE to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation10IsSameTypeERKS0_ to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation14AffectsOpacityEv to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation11MovesPixelsEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FilterOperation"*, %"class.blink::FloatRect"*)* @_ZNK5blink15FilterOperation7MapRectERKNS_9FloatRectE to i8*)] }, comdat, align 8
@.str.34 = private unnamed_addr constant [6 x i8] c"funcR\00", align 1
@.str.35 = private unnamed_addr constant [6 x i8] c"funcG\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"funcB\00", align 1
@.str.37 = private unnamed_addr constant [6 x i8] c"funcA\00", align 1
@_ZTVN5blink32ComponentTransferFilterOperationE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::ComponentTransferFilterOperation"*)* @_ZN5blink32ComponentTransferFilterOperationD2Ev to i8*), i8* bitcast (void (%"class.blink::ComponentTransferFilterOperation"*)* @_ZN5blink32ComponentTransferFilterOperationD0Ev to i8*), i8* bitcast (void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)* @_ZNK5blink15FilterOperation5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::ComponentTransferFilterOperation"*, %"class.blink::FilterOperation"*)* @_ZNK5blink32ComponentTransferFilterOperationeqERKNS_15FilterOperationE to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation10IsSameTypeERKS0_ to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation14AffectsOpacityEv to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation11MovesPixelsEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FilterOperation"*, %"class.blink::FloatRect"*)* @_ZNK5blink15FilterOperation7MapRectERKNS_9FloatRectE to i8*)] }, comdat, align 8
@.str.38 = private unnamed_addr constant [6 x i8] c"slope\00", align 1
@.str.39 = private unnamed_addr constant [10 x i8] c"intercept\00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c"amplitude\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"exponent\00", align 1
@.str.42 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.43 = private unnamed_addr constant [12 x i8] c"tableValues\00", align 1
@.str.44 = private unnamed_addr constant [9 x i8] c"identity\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c"linear\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"gamma\00", align 1
@.str.47 = private unnamed_addr constant [6 x i8] c"table\00", align 1
@.str.48 = private unnamed_addr constant [9 x i8] c"discrete\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.49 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.50 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.51 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_15FilterOperationEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [171 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::FilterOperation>, WTF::VectorTraits<blink::Member<blink::FilterOperation> > >]\00", align 1
@_ZTVN5blink31BasicColorMatrixFilterOperationE = linkonce_odr hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FilterOperation"*)* @_ZN5blink15FilterOperationD2Ev to i8*), i8* bitcast (void (%"class.blink::BasicColorMatrixFilterOperation"*)* @_ZN5blink31BasicColorMatrixFilterOperationD0Ev to i8*), i8* bitcast (void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)* @_ZNK5blink15FilterOperation5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::BasicColorMatrixFilterOperation"*, %"class.blink::FilterOperation"*)* @_ZNK5blink31BasicColorMatrixFilterOperationeqERKNS_15FilterOperationE to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation10IsSameTypeERKS0_ to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation14AffectsOpacityEv to i8*), i8* bitcast (i1 (%"class.blink::FilterOperation"*)* @_ZNK5blink15FilterOperation11MovesPixelsEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FilterOperation"*, %"class.blink::FloatRect"*)* @_ZNK5blink15FilterOperation7MapRectERKNS_9FloatRectE to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29CanvasFilterOperationResolver22CreateFilterOperationsENS_10HeapVectorINS_6MemberINS_22CanvasFilterDictionaryEEELj0EEERNS_14ExceptionStateE(%"class.blink::FilterOperations"* noalias sret, %"class.blink::HeapVector.3"* nocapture readonly, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::ComponentTransferFunction", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"struct.blink::ComponentTransferFunction", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"struct.blink::ComponentTransferFunction", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"struct.blink::ComponentTransferFunction", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.logging::CheckError", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.absl::optional.404", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"struct.blink::(anonymous namespace)::KernelMatrix", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = alloca %"class.WTF::StringView", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.absl::optional", align 8
  %23 = alloca %"class.WTF::StringView", align 8
  %24 = alloca %"class.WTF::StringView", align 8
  %25 = alloca %"class.logging::CheckError", align 8
  %26 = alloca %"class.absl::optional.248", align 8
  %27 = alloca %"class.WTF::StringView", align 8
  %28 = alloca %"class.WTF::StringView", align 8
  %29 = alloca %"class.WTF::StringView", align 8
  %30 = alloca %"class.WTF::StringView", align 8
  %31 = alloca %"class.WTF::StringView", align 8
  %32 = alloca %"class.WTF::StringView", align 8
  %33 = alloca %"class.WTF::StringView", align 8
  %34 = alloca %"class.WTF::String", align 8
  %35 = alloca %"class.logging::CheckError", align 8
  %36 = alloca %"class.WTF::StringView", align 8
  %37 = alloca i64, align 8
  %38 = alloca %"class.logging::CheckError", align 8
  %39 = alloca %"class.blink::BlurFilterOperation"*, align 8
  %40 = alloca %"class.blink::Dictionary", align 8
  %41 = alloca %"class.blink::ScriptValue", align 8
  %42 = alloca %"class.blink::Dictionary", align 8
  %43 = alloca %"class.blink::ScriptValue", align 8
  %44 = alloca %"class.absl::optional", align 8
  %45 = alloca %"class.WTF::StringView", align 8
  %46 = alloca %"class.WTF::StringView", align 8
  %47 = alloca %"class.blink::BasicColorMatrixFilterOperation"*, align 8
  %48 = alloca %"class.WTF::StringView", align 8
  %49 = alloca %"class.blink::BasicColorMatrixFilterOperation"*, align 8
  %50 = alloca %"class.blink::BasicColorMatrixFilterOperation"*, align 8
  %51 = alloca %"class.blink::ColorMatrixFilterOperation"*, align 8
  %52 = alloca %"class.blink::ConvolveMatrixFilterOperation"*, align 8
  %53 = alloca %"class.blink::Dictionary", align 8
  %54 = alloca %"class.blink::ScriptValue", align 8
  %55 = alloca %"class.blink::ComponentTransferFilterOperation"*, align 8
  %56 = alloca %"class.blink::Dictionary", align 8
  %57 = alloca %"class.blink::ScriptValue", align 8
  %58 = getelementptr inbounds %"class.blink::FilterOperations", %"class.blink::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.blink::FilterOperations", %"class.blink::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = getelementptr inbounds %"class.blink::FilterOperations", %"class.blink::FilterOperations"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %61 = bitcast %"class.blink::FilterOperations"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 -86, i64 16, i1 false)
  tail call void @_ZN5blink16FilterOperationsC1Ev(%"class.blink::FilterOperations"* %0) #10
  %62 = getelementptr inbounds %"class.blink::HeapVector.3", %"class.blink::HeapVector.3"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::Member.9"*, %"class.blink::Member.9"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::HeapVector.3", %"class.blink::HeapVector.3"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"class.blink::Member.9", %"class.blink::Member.9"* %63, i64 %66
  %68 = icmp eq i32 %65, 0
  br i1 %68, label %279, label %69

69:                                               ; preds = %3
  %70 = bitcast %"class.blink::BlurFilterOperation"** %39 to i8*
  %71 = bitcast %"class.blink::Dictionary"* %40 to i8*
  %72 = bitcast %"class.blink::ScriptValue"* %41 to i8*
  %73 = bitcast %"class.blink::ScriptValue"* %41 to i64*
  %74 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %41, i64 0, i32 1
  %75 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %74, i64 0, i32 0
  %76 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %74, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %41, i64 0, i32 1, i32 1, i32 0
  %78 = bitcast %"class.blink::Dictionary"* %40 to i64*
  %79 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %40, i64 0, i32 1
  %80 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %40, i64 0, i32 2, i32 0
  %81 = bitcast %"class.logging::CheckError"* %38 to i8*
  %82 = bitcast %"class.v8::Object"** %80 to %"class.v8::Value"**
  %83 = bitcast i64* %37 to %"class.blink::Length"*
  %84 = bitcast %"class.WTF::StringView"* %36 to i8*
  %85 = bitcast %"class.WTF::StringView"* %36 to i64*
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %36, i64 0, i32 1
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %36, i64 0, i32 2
  %88 = bitcast i64* %37 to i8*
  %89 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %83, i64 0, i32 1
  %90 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %83, i64 0, i32 2
  %91 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %83, i64 0, i32 3
  %92 = bitcast i64* %37 to float*
  %93 = getelementptr inbounds %"class.blink::FilterOperations", %"class.blink::FilterOperations"* %0, i64 0, i32 0, i32 0
  %94 = bitcast %"class.blink::Dictionary"* %42 to i8*
  %95 = bitcast %"class.blink::ScriptValue"* %43 to i8*
  %96 = bitcast %"class.blink::ScriptValue"* %43 to i64*
  %97 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %43, i64 0, i32 1
  %98 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %97, i64 0, i32 0
  %99 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %43, i64 0, i32 1, i32 1, i32 0
  %101 = bitcast %"class.blink::Dictionary"* %42 to i64*
  %102 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %42, i64 0, i32 1
  %103 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %42, i64 0, i32 2, i32 0
  %104 = bitcast %"class.logging::CheckError"* %35 to i8*
  %105 = bitcast %"class.v8::Object"** %103 to %"class.v8::Value"**
  %106 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %107 = bitcast %"class.WTF::StringView"* %45 to i8*
  %108 = bitcast %"class.WTF::StringView"* %45 to i64*
  %109 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %45, i64 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %45, i64 0, i32 2
  %111 = bitcast %"class.WTF::String"* %34 to i8*
  %112 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %112, i64 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %34, i64 0, i32 0, i32 0
  %115 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %116 = bitcast %"class.WTF::StringView"* %32 to i8*
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %32, i64 0, i32 0
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %32, i64 0, i32 1
  %119 = bitcast i8** %118 to %"class.WTF::StringImpl"**
  %120 = bitcast %"class.WTF::StringView"* %32 to i64*
  %121 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %32, i64 0, i32 2
  %122 = bitcast %"class.WTF::StringView"* %33 to i8*
  %123 = bitcast %"class.WTF::StringView"* %33 to i64*
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %33, i64 0, i32 1
  %125 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %33, i64 0, i32 2
  %126 = bitcast %"class.WTF::StringView"* %30 to i8*
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 0
  %128 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 1
  %129 = bitcast i8** %128 to %"class.WTF::StringImpl"**
  %130 = bitcast %"class.WTF::StringView"* %30 to i64*
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 2
  %132 = bitcast %"class.WTF::StringView"* %31 to i8*
  %133 = bitcast %"class.WTF::StringView"* %31 to i64*
  %134 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 1
  %135 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %31, i64 0, i32 2
  %136 = bitcast %"class.WTF::StringView"* %28 to i8*
  %137 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 0
  %138 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 1
  %139 = bitcast i8** %138 to %"class.WTF::StringImpl"**
  %140 = bitcast %"class.WTF::StringView"* %28 to i64*
  %141 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %28, i64 0, i32 2
  %142 = bitcast %"class.WTF::StringView"* %29 to i8*
  %143 = bitcast %"class.WTF::StringView"* %29 to i64*
  %144 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 1
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %29, i64 0, i32 2
  %146 = bitcast %"class.blink::ColorMatrixFilterOperation"** %51 to i8*
  %147 = getelementptr inbounds %"class.absl::optional.248", %"class.absl::optional.248"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.WTF::StringView"* %27 to i8*
  %149 = bitcast %"class.WTF::StringView"* %27 to i64*
  %150 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 1
  %151 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %27, i64 0, i32 2
  %152 = getelementptr inbounds %"class.absl::optional.248", %"class.absl::optional.248"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %153 = getelementptr inbounds %"class.absl::optional.248", %"class.absl::optional.248"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %154 = getelementptr inbounds %"class.absl::optional.248", %"class.absl::optional.248"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %155 = bitcast %"class.blink::BasicColorMatrixFilterOperation"** %50 to i8*
  %156 = bitcast %"class.blink::BasicColorMatrixFilterOperation"** %50 to i8**
  %157 = bitcast %"class.WTF::StringView"* %48 to i8*
  %158 = bitcast %"class.WTF::StringView"* %48 to i64*
  %159 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %48, i64 0, i32 1
  %160 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %48, i64 0, i32 2
  %161 = bitcast %"class.blink::BasicColorMatrixFilterOperation"** %49 to i8*
  %162 = bitcast %"class.blink::BasicColorMatrixFilterOperation"** %49 to i8**
  %163 = bitcast %"class.WTF::StringView"* %46 to i8*
  %164 = bitcast %"class.WTF::StringView"* %46 to i64*
  %165 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %46, i64 0, i32 1
  %166 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %46, i64 0, i32 2
  %167 = bitcast %"class.blink::BasicColorMatrixFilterOperation"** %47 to i8*
  %168 = bitcast %"class.blink::BasicColorMatrixFilterOperation"** %47 to i8**
  %169 = bitcast %"class.blink::ConvolveMatrixFilterOperation"** %52 to i8*
  %170 = bitcast %"class.blink::Dictionary"* %53 to i8*
  %171 = bitcast %"class.blink::ScriptValue"* %54 to i8*
  %172 = bitcast %"class.blink::ScriptValue"* %54 to i64*
  %173 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %54, i64 0, i32 1
  %174 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %173, i64 0, i32 0
  %175 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %173, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %54, i64 0, i32 1, i32 1, i32 0
  %177 = bitcast %"class.blink::Dictionary"* %53 to i64*
  %178 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %53, i64 0, i32 1
  %179 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %53, i64 0, i32 2, i32 0
  %180 = bitcast %"class.logging::CheckError"* %25 to i8*
  %181 = bitcast %"class.v8::Object"** %179 to %"class.v8::Value"**
  %182 = getelementptr inbounds %"class.absl::optional.404", %"class.absl::optional.404"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %183 = bitcast %"class.WTF::StringView"* %15 to i8*
  %184 = bitcast %"class.WTF::StringView"* %15 to i64*
  %185 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %186 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  %187 = getelementptr inbounds %"class.absl::optional.404", %"class.absl::optional.404"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %188 = getelementptr inbounds %"class.absl::optional.404", %"class.absl::optional.404"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %189 = bitcast %"struct.blink::(anonymous namespace)::KernelMatrix"* %16 to i8*
  %190 = getelementptr inbounds %"struct.blink::(anonymous namespace)::KernelMatrix", %"struct.blink::(anonymous namespace)::KernelMatrix"* %16, i64 0, i32 0
  %191 = getelementptr inbounds %"struct.blink::(anonymous namespace)::KernelMatrix", %"struct.blink::(anonymous namespace)::KernelMatrix"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %192 = getelementptr inbounds %"struct.blink::(anonymous namespace)::KernelMatrix", %"struct.blink::(anonymous namespace)::KernelMatrix"* %16, i64 0, i32 0, i32 0, i32 0, i32 1
  %193 = getelementptr inbounds %"struct.blink::(anonymous namespace)::KernelMatrix", %"struct.blink::(anonymous namespace)::KernelMatrix"* %16, i64 0, i32 0, i32 0, i32 0, i32 2
  %194 = getelementptr inbounds %"struct.blink::(anonymous namespace)::KernelMatrix", %"struct.blink::(anonymous namespace)::KernelMatrix"* %16, i64 0, i32 1
  %195 = getelementptr inbounds %"struct.blink::(anonymous namespace)::KernelMatrix", %"struct.blink::(anonymous namespace)::KernelMatrix"* %16, i64 0, i32 2
  %196 = bitcast i32* %194 to i64*
  %197 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %187, i64 0, i32 0, i32 0, i32 0
  %198 = bitcast %"class.WTF::Vector.409"* %187 to i8**
  %199 = bitcast %"class.WTF::StringView"* %17 to i8*
  %200 = bitcast %"class.WTF::StringView"* %17 to i64*
  %201 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  %202 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  %203 = bitcast %"class.WTF::StringView"* %18 to i8*
  %204 = bitcast %"class.WTF::StringView"* %18 to i64*
  %205 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  %206 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  %207 = bitcast %"class.WTF::StringView"* %19 to i8*
  %208 = bitcast %"class.WTF::StringView"* %19 to i64*
  %209 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  %210 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  %211 = bitcast %"class.WTF::StringView"* %20 to i8*
  %212 = bitcast %"class.WTF::StringView"* %20 to i64*
  %213 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  %214 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  %215 = bitcast %"class.WTF::String"* %21 to i8*
  %216 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %217 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %218 = bitcast %"class.WTF::StringView"* %23 to i8*
  %219 = bitcast %"class.WTF::StringView"* %23 to i64*
  %220 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  %221 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 2
  %222 = bitcast %"class.WTF::String"* %13 to i8*
  %223 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %224 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %223, i64 0, i32 0, i32 0
  %225 = bitcast %"class.WTF::String"* %223 to i64*
  %226 = bitcast %"class.WTF::String"* %21 to i64*
  %227 = bitcast %"class.WTF::String"* %13 to i64*
  %228 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %229 = bitcast %"class.WTF::StringView"* %24 to i8*
  %230 = bitcast %"class.WTF::StringView"* %24 to i64*
  %231 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 1
  %232 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %24, i64 0, i32 2
  %233 = bitcast %"class.blink::ComponentTransferFilterOperation"** %55 to i8*
  %234 = bitcast %"class.blink::Dictionary"* %56 to i8*
  %235 = bitcast %"class.blink::ScriptValue"* %57 to i8*
  %236 = bitcast %"class.blink::ScriptValue"* %57 to i64*
  %237 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %57, i64 0, i32 1
  %238 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %237, i64 0, i32 0
  %239 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %237, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %57, i64 0, i32 1, i32 1, i32 0
  %241 = bitcast %"class.blink::Dictionary"* %56 to i64*
  %242 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %56, i64 0, i32 1
  %243 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %56, i64 0, i32 2, i32 0
  %244 = bitcast %"class.logging::CheckError"* %12 to i8*
  %245 = bitcast %"class.v8::Object"** %243 to %"class.v8::Value"**
  %246 = bitcast %"struct.blink::ComponentTransferFunction"* %4 to i8*
  %247 = bitcast %"class.WTF::StringView"* %5 to i8*
  %248 = bitcast %"class.WTF::StringView"* %5 to i64*
  %249 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %250 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %251 = bitcast %"struct.blink::ComponentTransferFunction"* %6 to i8*
  %252 = bitcast %"class.WTF::StringView"* %7 to i8*
  %253 = bitcast %"class.WTF::StringView"* %7 to i64*
  %254 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %255 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  %256 = bitcast %"struct.blink::ComponentTransferFunction"* %8 to i8*
  %257 = bitcast %"class.WTF::StringView"* %9 to i8*
  %258 = bitcast %"class.WTF::StringView"* %9 to i64*
  %259 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %260 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  %261 = bitcast %"struct.blink::ComponentTransferFunction"* %10 to i8*
  %262 = bitcast %"class.WTF::StringView"* %11 to i8*
  %263 = bitcast %"class.WTF::StringView"* %11 to i64*
  %264 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %265 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  %266 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %10, i64 0, i32 6, i32 0, i32 0, i32 0
  %267 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %10, i64 0, i32 6, i32 0, i32 0, i32 2
  %268 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %8, i64 0, i32 6, i32 0, i32 0, i32 0
  %269 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %8, i64 0, i32 6, i32 0, i32 0, i32 2
  %270 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %6, i64 0, i32 6, i32 0, i32 0, i32 0
  %271 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %6, i64 0, i32 6, i32 0, i32 0, i32 2
  %272 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %273 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %4, i64 0, i32 6, i32 0, i32 0, i32 2
  %274 = bitcast %"class.blink::ComponentTransferFilterOperation"** %55 to i8**
  %275 = bitcast %"class.blink::BlurFilterOperation"** %39 to i8**
  %276 = bitcast %"class.blink::ColorMatrixFilterOperation"** %51 to i8**
  %277 = bitcast %"class.blink::ConvolveMatrixFilterOperation"** %52 to i8**
  %278 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %112, i64 0, i32 0, i32 0
  br label %280

279:                                              ; preds = %1104, %3
  ret void

280:                                              ; preds = %69, %1104
  %281 = phi %"class.blink::Member.9"* [ %63, %69 ], [ %1105, %1104 ]
  %282 = getelementptr inbounds %"class.blink::Member.9", %"class.blink::Member.9"* %281, i64 0, i32 0, i32 0
  %283 = load %"class.blink::CanvasFilterDictionary"*, %"class.blink::CanvasFilterDictionary"** %282, align 8
  %284 = call zeroext i1 @_ZNK5blink22CanvasFilterDictionary7hasBlurEv(%"class.blink::CanvasFilterDictionary"* %283)
  br i1 %284, label %285, label %379

285:                                              ; preds = %280
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #10
  store %"class.blink::BlurFilterOperation"* inttoptr (i64 -6148914691236517206 to %"class.blink::BlurFilterOperation"*), %"class.blink::BlurFilterOperation"** %39, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #10
  %286 = getelementptr inbounds %"class.blink::CanvasFilterDictionary", %"class.blink::CanvasFilterDictionary"* %283, i64 0, i32 1
  %287 = bitcast %"class.blink::ScriptValue"* %286 to i64*
  %288 = load i64, i64* %287, align 8, !noalias !2
  store i64 %288, i64* %73, align 8, !alias.scope !2
  store i64* null, i64** %76, align 8, !alias.scope !2
  %289 = icmp eq %"class.blink::ScriptValue"* %286, %41
  br i1 %289, label %295, label %290

290:                                              ; preds = %285
  %291 = getelementptr inbounds %"class.blink::CanvasFilterDictionary", %"class.blink::CanvasFilterDictionary"* %283, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %292 = load i64*, i64** %291, align 8, !noalias !2
  %293 = icmp eq i64* %292, null
  br i1 %293, label %295, label %294

294:                                              ; preds = %290
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %291, i64** %76) #10
  br label %295

295:                                              ; preds = %294, %290, %285
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %75) #10
  %296 = getelementptr inbounds %"class.blink::CanvasFilterDictionary", %"class.blink::CanvasFilterDictionary"* %283, i64 0, i32 1, i32 1, i32 1, i32 0
  %297 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %296, align 8, !noalias !2
  store %"class.blink::DOMWrapperWorld"* %297, %"class.blink::DOMWrapperWorld"** %77, align 8, !alias.scope !2
  %298 = icmp eq %"class.blink::DOMWrapperWorld"* %297, null
  br i1 %298, label %301, label %299

299:                                              ; preds = %295
  %300 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %297, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %300) #10
  br label %301

301:                                              ; preds = %295, %299
  %302 = load i64, i64* %73, align 8
  store i64 %302, i64* %78, align 8
  store i32 0, i32* %79, align 8
  store %"class.v8::Object"* null, %"class.v8::Object"** %80, align 8
  %303 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %41) #10
  %304 = icmp eq %"class.v8::Value"* %303, null
  br i1 %304, label %307, label %305

305:                                              ; preds = %301
  %306 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %303) #10
  br i1 %306, label %309, label %307

307:                                              ; preds = %305, %301
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %38, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.11, i64 0, i64 0), i32 56, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #10
  %308 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %38) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %38) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #10
  br label %309

309:                                              ; preds = %305, %307
  %310 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %41) #10
  store %"class.v8::Value"* %310, %"class.v8::Value"** %82, align 8
  store i32 2, i32* %79, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #10
  %311 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %311, i64* %85, align 8
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8** %86, align 8
  store i32 12, i32* %87, align 8
  %312 = call { i8, double } @_ZNK5blink10Dictionary3GetINS_30IDLFloatingPointNumberTypeBaseIdLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::Dictionary"* nonnull %40, %"class.WTF::StringView"* nonnull dereferenceable(24) %36, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  %313 = extractvalue { i8, double } %312, 0
  %314 = extractvalue { i8, double } %312, 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #10
  %315 = icmp eq i8 %313, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %309
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.7, i64 0, i64 0)) #10
  br label %346

317:                                              ; preds = %309
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #10
  store i8 0, i8* %89, align 4, !alias.scope !5
  store i8 2, i8* %90, align 1, !alias.scope !5
  store i8 1, i8* %91, align 2, !alias.scope !5
  %318 = fcmp ult double %314, 0x47EFFFFFE0000000
  br i1 %318, label %319, label %323

319:                                              ; preds = %317
  %320 = fcmp ole double %314, 0xC7EFFFFFE0000000
  %321 = select i1 %320, double 0xC7EFFFFFE0000000, double %314
  %322 = fptrunc double %321 to float
  br label %323

323:                                              ; preds = %319, %317
  %324 = phi float [ %322, %319 ], [ 0x47EFFFFFE0000000, %317 ]
  store float %324, float* %92, align 8, !alias.scope !5
  %325 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64 24) #10
  %326 = bitcast i8* %325 to %"class.blink::BlurFilterOperation"*
  %327 = bitcast i8* %325 to i32 (...)***
  %328 = getelementptr inbounds i8, i8* %325, i64 8
  %329 = bitcast i8* %328 to i32*
  store i32 10, i32* %329, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink19BlurFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %327, align 8
  %330 = getelementptr inbounds i8, i8* %325, i64 12
  %331 = bitcast i8* %330 to i64*
  %332 = load i64, i64* %37, align 8
  store i64 %332, i64* %331, align 4
  %333 = and i64 %332, 280375465082880
  %334 = icmp eq i64 %333, 8796093022208
  br i1 %334, label %335, label %337

335:                                              ; preds = %323
  %336 = bitcast i8* %330 to %"class.blink::Length"*
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %336) #10
  br label %337

337:                                              ; preds = %335, %323
  %338 = getelementptr inbounds i8, i8* %325, i64 -4
  %339 = bitcast i8* %338 to i16*
  %340 = load atomic i16, i16* %339 monotonic, align 2
  %341 = or i16 %340, 1
  store atomic i16 %341, i16* %339 release, align 2
  %342 = load i8, i8* %90, align 1
  %343 = icmp eq i8 %342, 8
  br i1 %343, label %344, label %345

344:                                              ; preds = %337
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %83) #10
  br label %345

345:                                              ; preds = %344, %337
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #10
  br label %346

346:                                              ; preds = %316, %345
  %347 = phi i8* [ %325, %345 ], [ null, %316 ]
  %348 = phi %"class.blink::BlurFilterOperation"* [ %326, %345 ], [ null, %316 ]
  %349 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %77, align 8
  %350 = icmp eq %"class.blink::DOMWrapperWorld"* %349, null
  br i1 %350, label %358, label %351

351:                                              ; preds = %346
  %352 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %349, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %352) #10
  %353 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %349, i64 0, i32 0, i32 0, i32 0, i32 0
  %354 = load i32, i32* %353, align 4
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %358

356:                                              ; preds = %351
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %349) #10
  %357 = bitcast %"class.blink::DOMWrapperWorld"* %349 to i8*
  call void @free(i8* %357) #10
  br label %358

358:                                              ; preds = %346, %351, %356
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #10
  store i8* %347, i8** %275, align 8
  %359 = icmp eq %"class.blink::BlurFilterOperation"* %348, null
  %360 = ptrtoint %"class.blink::BlurFilterOperation"* %348 to i64
  br i1 %359, label %378, label %361

361:                                              ; preds = %358
  %362 = load i32, i32* %60, align 4
  %363 = load i32, i32* %59, align 8
  %364 = icmp eq i32 %362, %363
  br i1 %364, label %377, label %365, !prof !8

365:                                              ; preds = %361
  %366 = load %"class.blink::Member"*, %"class.blink::Member"** %58, align 8
  %367 = zext i32 %362 to i64
  %368 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %366, i64 %367
  %369 = bitcast %"class.blink::Member"* %368 to i64*
  store atomic i64 %360, i64* %369 monotonic, align 8
  %370 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %374, label %372

372:                                              ; preds = %365
  %373 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %347) #10
  br label %374

374:                                              ; preds = %372, %365
  %375 = load i32, i32* %60, align 4
  %376 = add i32 %375, 1
  store i32 %376, i32* %60, align 4
  br label %378

377:                                              ; preds = %361
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_19BlurFilterOperationEEEvOT_(%"class.WTF::Vector"* %93, %"class.blink::BlurFilterOperation"** nonnull dereferenceable(8) %39) #10
  br label %378

378:                                              ; preds = %377, %374, %358
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #10
  br label %379

379:                                              ; preds = %378, %280
  %380 = call zeroext i1 @_ZNK5blink22CanvasFilterDictionary14hasColorMatrixEv(%"class.blink::CanvasFilterDictionary"* %283)
  br i1 %380, label %381, label %681

381:                                              ; preds = %379
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #10
  %382 = getelementptr inbounds %"class.blink::CanvasFilterDictionary", %"class.blink::CanvasFilterDictionary"* %283, i64 0, i32 2
  %383 = bitcast %"class.blink::ScriptValue"* %382 to i64*
  %384 = load i64, i64* %383, align 8, !noalias !9
  store i64 %384, i64* %96, align 8, !alias.scope !9
  store i64* null, i64** %99, align 8, !alias.scope !9
  %385 = icmp eq %"class.blink::ScriptValue"* %382, %43
  br i1 %385, label %391, label %386

386:                                              ; preds = %381
  %387 = getelementptr inbounds %"class.blink::CanvasFilterDictionary", %"class.blink::CanvasFilterDictionary"* %283, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %388 = load i64*, i64** %387, align 8, !noalias !9
  %389 = icmp eq i64* %388, null
  br i1 %389, label %391, label %390

390:                                              ; preds = %386
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %387, i64** %99) #10
  br label %391

391:                                              ; preds = %390, %386, %381
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %98) #10
  %392 = getelementptr inbounds %"class.blink::CanvasFilterDictionary", %"class.blink::CanvasFilterDictionary"* %283, i64 0, i32 2, i32 1, i32 1, i32 0
  %393 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %392, align 8, !noalias !9
  store %"class.blink::DOMWrapperWorld"* %393, %"class.blink::DOMWrapperWorld"** %100, align 8, !alias.scope !9
  %394 = icmp eq %"class.blink::DOMWrapperWorld"* %393, null
  br i1 %394, label %397, label %395

395:                                              ; preds = %391
  %396 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %393, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %396) #10
  br label %397

397:                                              ; preds = %391, %395
  %398 = load i64, i64* %96, align 8
  store i64 %398, i64* %101, align 8
  store i32 0, i32* %102, align 8
  store %"class.v8::Object"* null, %"class.v8::Object"** %103, align 8
  %399 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %43) #10
  %400 = icmp eq %"class.v8::Value"* %399, null
  br i1 %400, label %403, label %401

401:                                              ; preds = %397
  %402 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %399) #10
  br i1 %402, label %405, label %403

403:                                              ; preds = %401, %397
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %35, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.11, i64 0, i64 0), i32 56, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #10
  %404 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %35) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %35) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #10
  br label %405

405:                                              ; preds = %401, %403
  %406 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %43) #10
  store %"class.v8::Value"* %406, %"class.v8::Value"** %105, align 8
  store i32 2, i32* %102, align 8
  %407 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %100, align 8
  %408 = icmp eq %"class.blink::DOMWrapperWorld"* %407, null
  br i1 %408, label %416, label %409

409:                                              ; preds = %405
  %410 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %407, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %410) #10
  %411 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %407, i64 0, i32 0, i32 0, i32 0, i32 0
  %412 = load i32, i32* %411, align 4
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %414, label %416

414:                                              ; preds = %409
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %407) #10
  %415 = bitcast %"class.blink::DOMWrapperWorld"* %407 to i8*
  call void @free(i8* %415) #10
  br label %416

416:                                              ; preds = %405, %409, %414
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %106) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #10
  %417 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %417, i64* %108, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %109, align 8
  store i32 4, i32* %110, align 8
  call void @_ZNK5blink10Dictionary3GetINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.absl::optional"* nonnull sret %44, %"class.blink::Dictionary"* nonnull %42, %"class.WTF::StringView"* nonnull dereferenceable(24) %45, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111)
  %418 = load i8, i8* %106, align 8, !range !12
  %419 = icmp eq i8 %418, 0
  br i1 %419, label %422, label %420

420:                                              ; preds = %416
  %421 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %278, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %113, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111)
  br label %426

422:                                              ; preds = %416
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %34, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i64 6) #10
  %423 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %424 = load i8, i8* %106, align 8, !range !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111)
  %425 = icmp eq i8 %424, 0
  br i1 %425, label %444, label %426

426:                                              ; preds = %420, %422
  %427 = phi %"class.WTF::StringImpl"* [ %421, %420 ], [ %423, %422 ]
  %428 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %429 = icmp eq %"class.WTF::StringImpl"* %428, null
  br i1 %429, label %443, label %430

430:                                              ; preds = %426
  %431 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %432 = load atomic i32, i32* %431 monotonic, align 4
  %433 = and i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 0
  %436 = load i32, i32* %435, align 4
  br i1 %434, label %437, label %439

437:                                              ; preds = %430
  %438 = add i32 %436, -1
  store i32 %438, i32* %435, align 4
  br label %439

439:                                              ; preds = %437, %430
  %440 = phi i32 [ %438, %437 ], [ %436, %430 ]
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %443

442:                                              ; preds = %439
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %428) #10
  br label %443

443:                                              ; preds = %442, %439, %426
  store i8 0, i8* %106, align 8
  br label %444

444:                                              ; preds = %422, %443
  %445 = phi %"class.WTF::StringImpl"* [ %423, %422 ], [ %427, %443 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %106) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %116) #10
  %446 = icmp eq %"class.WTF::StringImpl"* %445, null
  br i1 %446, label %447, label %449

447:                                              ; preds = %444
  store i8* null, i8** %118, align 8
  %448 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %448, i64* %120, align 8
  br label %454

449:                                              ; preds = %444
  store %"class.WTF::StringImpl"* %445, %"class.WTF::StringImpl"** %117, align 8
  %450 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %445, i64 0, i32 1
  %451 = load i32, i32* %450, align 4
  %452 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %445, i64 1
  store %"class.WTF::StringImpl"* %452, %"class.WTF::StringImpl"** %119, align 8
  %453 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %454

454:                                              ; preds = %449, %447
  %455 = phi %"class.WTF::StringImpl"* [ %445, %449 ], [ null, %447 ]
  %456 = phi i64 [ %453, %449 ], [ %448, %447 ]
  %457 = phi i32 [ %451, %449 ], [ 0, %447 ]
  store i32 %457, i32* %121, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %122) #10
  store i64 %456, i64* %123, align 8
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8** %124, align 8
  store i32 9, i32* %125, align 8
  %458 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %32, %"class.WTF::StringView"* nonnull dereferenceable(24) %33) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %122) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %116) #10
  br i1 %458, label %459, label %494

459:                                              ; preds = %454
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #10
  %460 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %460, i64* %164, align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8** %165, align 8
  store i32 6, i32* %166, align 8
  %461 = call { i8, double } @_ZNK5blink10Dictionary3GetINS_30IDLFloatingPointNumberTypeBaseIdLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::Dictionary"* nonnull %42, %"class.WTF::StringView"* nonnull dereferenceable(24) %46, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %462 = extractvalue { i8, double } %461, 0
  %463 = extractvalue { i8, double } %461, 1
  %464 = icmp eq i8 %462, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #10
  %465 = bitcast double %463 to i64
  %466 = select i1 %464, i64 0, i64 %465
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #10
  %467 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64 24) #10
  %468 = bitcast i8* %467 to i32 (...)***
  %469 = getelementptr inbounds i8, i8* %467, i64 8
  %470 = bitcast i8* %469 to i32*
  store i32 4, i32* %470, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink31BasicColorMatrixFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %468, align 8
  %471 = getelementptr inbounds i8, i8* %467, i64 16
  %472 = bitcast i8* %471 to i64*
  store i64 %466, i64* %472, align 8
  %473 = getelementptr inbounds i8, i8* %467, i64 -4
  %474 = bitcast i8* %473 to i16*
  %475 = load atomic i16, i16* %474 monotonic, align 2
  %476 = or i16 %475, 1
  store atomic i16 %476, i16* %474 release, align 2
  store i8* %467, i8** %168, align 8
  %477 = load i32, i32* %60, align 4
  %478 = load i32, i32* %59, align 8
  %479 = icmp eq i32 %477, %478
  br i1 %479, label %493, label %480, !prof !8

480:                                              ; preds = %459
  %481 = ptrtoint i8* %467 to i64
  %482 = load %"class.blink::Member"*, %"class.blink::Member"** %58, align 8
  %483 = zext i32 %477 to i64
  %484 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %482, i64 %483
  %485 = bitcast %"class.blink::Member"* %484 to i64*
  store atomic i64 %481, i64* %485 monotonic, align 8
  %486 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %490, label %488

488:                                              ; preds = %480
  %489 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %467) #10
  br label %490

490:                                              ; preds = %488, %480
  %491 = load i32, i32* %60, align 4
  %492 = add i32 %491, 1
  store i32 %492, i32* %60, align 4
  br label %665

493:                                              ; preds = %459
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_31BasicColorMatrixFilterOperationEEEvOT_(%"class.WTF::Vector"* %93, %"class.blink::BasicColorMatrixFilterOperation"** nonnull dereferenceable(8) %47) #10
  br label %665

494:                                              ; preds = %454
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #10
  br i1 %446, label %495, label %497

495:                                              ; preds = %494
  store i8* null, i8** %128, align 8
  %496 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %496, i64* %130, align 8
  br label %502

497:                                              ; preds = %494
  store %"class.WTF::StringImpl"* %455, %"class.WTF::StringImpl"** %127, align 8
  %498 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 0, i32 1
  %499 = load i32, i32* %498, align 4
  %500 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 1
  store %"class.WTF::StringImpl"* %500, %"class.WTF::StringImpl"** %129, align 8
  %501 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %502

502:                                              ; preds = %497, %495
  %503 = phi i64 [ %501, %497 ], [ %496, %495 ]
  %504 = phi i32 [ %499, %497 ], [ 0, %495 ]
  store i32 %504, i32* %131, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #10
  store i64 %503, i64* %133, align 8
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8** %134, align 8
  store i32 8, i32* %135, align 8
  %505 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %30, %"class.WTF::StringView"* nonnull dereferenceable(24) %31) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #10
  br i1 %505, label %506, label %541

506:                                              ; preds = %502
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %157) #10
  %507 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %507, i64* %158, align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8** %159, align 8
  store i32 6, i32* %160, align 8
  %508 = call { i8, double } @_ZNK5blink10Dictionary3GetINS_30IDLFloatingPointNumberTypeBaseIdLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::Dictionary"* nonnull %42, %"class.WTF::StringView"* nonnull dereferenceable(24) %48, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %509 = extractvalue { i8, double } %508, 0
  %510 = extractvalue { i8, double } %508, 1
  %511 = icmp eq i8 %509, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %157) #10
  %512 = bitcast double %510 to i64
  %513 = select i1 %511, i64 0, i64 %512
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #10
  %514 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64 24) #10
  %515 = bitcast i8* %514 to i32 (...)***
  %516 = getelementptr inbounds i8, i8* %514, i64 8
  %517 = bitcast i8* %516 to i32*
  store i32 3, i32* %517, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink31BasicColorMatrixFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %515, align 8
  %518 = getelementptr inbounds i8, i8* %514, i64 16
  %519 = bitcast i8* %518 to i64*
  store i64 %513, i64* %519, align 8
  %520 = getelementptr inbounds i8, i8* %514, i64 -4
  %521 = bitcast i8* %520 to i16*
  %522 = load atomic i16, i16* %521 monotonic, align 2
  %523 = or i16 %522, 1
  store atomic i16 %523, i16* %521 release, align 2
  store i8* %514, i8** %162, align 8
  %524 = load i32, i32* %60, align 4
  %525 = load i32, i32* %59, align 8
  %526 = icmp eq i32 %524, %525
  br i1 %526, label %540, label %527, !prof !8

527:                                              ; preds = %506
  %528 = ptrtoint i8* %514 to i64
  %529 = load %"class.blink::Member"*, %"class.blink::Member"** %58, align 8
  %530 = zext i32 %524 to i64
  %531 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %529, i64 %530
  %532 = bitcast %"class.blink::Member"* %531 to i64*
  store atomic i64 %528, i64* %532 monotonic, align 8
  %533 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %534 = icmp eq i32 %533, 0
  br i1 %534, label %537, label %535

535:                                              ; preds = %527
  %536 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %514) #10
  br label %537

537:                                              ; preds = %535, %527
  %538 = load i32, i32* %60, align 4
  %539 = add i32 %538, 1
  store i32 %539, i32* %60, align 4
  br label %665

540:                                              ; preds = %506
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_31BasicColorMatrixFilterOperationEEEvOT_(%"class.WTF::Vector"* %93, %"class.blink::BasicColorMatrixFilterOperation"** nonnull dereferenceable(8) %49) #10
  br label %665

541:                                              ; preds = %502
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %136) #10
  br i1 %446, label %542, label %544

542:                                              ; preds = %541
  store i8* null, i8** %138, align 8
  %543 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %543, i64* %140, align 8
  br label %549

544:                                              ; preds = %541
  store %"class.WTF::StringImpl"* %455, %"class.WTF::StringImpl"** %137, align 8
  %545 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 0, i32 1
  %546 = load i32, i32* %545, align 4
  %547 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 1
  store %"class.WTF::StringImpl"* %547, %"class.WTF::StringImpl"** %139, align 8
  %548 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %549

549:                                              ; preds = %544, %542
  %550 = phi i64 [ %548, %544 ], [ %543, %542 ]
  %551 = phi i32 [ %546, %544 ], [ 0, %542 ]
  store i32 %551, i32* %141, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #10
  store i64 %550, i64* %143, align 8
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i8** %144, align 8
  store i32 16, i32* %145, align 8
  %552 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %28, %"class.WTF::StringView"* nonnull dereferenceable(24) %29) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %136) #10
  br i1 %552, label %553, label %581

553:                                              ; preds = %549
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #10
  %554 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64 24) #10
  %555 = bitcast i8* %554 to i32 (...)***
  %556 = getelementptr inbounds i8, i8* %554, i64 8
  %557 = bitcast i8* %556 to i32*
  store i32 5, i32* %557, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink31BasicColorMatrixFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %555, align 8
  %558 = getelementptr inbounds i8, i8* %554, i64 16
  %559 = bitcast i8* %558 to double*
  store double 0.000000e+00, double* %559, align 8
  %560 = getelementptr inbounds i8, i8* %554, i64 -4
  %561 = bitcast i8* %560 to i16*
  %562 = load atomic i16, i16* %561 monotonic, align 2
  %563 = or i16 %562, 1
  store atomic i16 %563, i16* %561 release, align 2
  store i8* %554, i8** %156, align 8
  %564 = load i32, i32* %60, align 4
  %565 = load i32, i32* %59, align 8
  %566 = icmp eq i32 %564, %565
  br i1 %566, label %580, label %567, !prof !8

567:                                              ; preds = %553
  %568 = ptrtoint i8* %554 to i64
  %569 = load %"class.blink::Member"*, %"class.blink::Member"** %58, align 8
  %570 = zext i32 %564 to i64
  %571 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %569, i64 %570
  %572 = bitcast %"class.blink::Member"* %571 to i64*
  store atomic i64 %568, i64* %572 monotonic, align 8
  %573 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %574 = icmp eq i32 %573, 0
  br i1 %574, label %577, label %575

575:                                              ; preds = %567
  %576 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %554) #10
  br label %577

577:                                              ; preds = %575, %567
  %578 = load i32, i32* %60, align 4
  %579 = add i32 %578, 1
  store i32 %579, i32* %60, align 4
  br label %665

580:                                              ; preds = %553
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_31BasicColorMatrixFilterOperationEEEvOT_(%"class.WTF::Vector"* %93, %"class.blink::BasicColorMatrixFilterOperation"** nonnull dereferenceable(8) %50) #10
  br label %665

581:                                              ; preds = %549
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #10
  store %"class.blink::ColorMatrixFilterOperation"* inttoptr (i64 -6148914691236517206 to %"class.blink::ColorMatrixFilterOperation"*), %"class.blink::ColorMatrixFilterOperation"** %51, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %147) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 -86, i64 24, i1 false) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %148) #10
  %582 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %582, i64* %149, align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8** %150, align 8
  store i32 6, i32* %151, align 8
  call void @_ZNK5blink10Dictionary3GetINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.absl::optional.248"* nonnull sret %26, %"class.blink::Dictionary"* nonnull %42, %"class.WTF::StringView"* nonnull dereferenceable(24) %27, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %148) #10
  %583 = load i8, i8* %147, align 8, !range !12
  %584 = icmp eq i8 %583, 0
  br i1 %584, label %585, label %586

585:                                              ; preds = %581
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.13, i64 0, i64 0)) #10
  br label %630

586:                                              ; preds = %581
  %587 = load i32, i32* %152, align 4
  %588 = icmp eq i32 %587, 20
  br i1 %588, label %590, label %589

589:                                              ; preds = %586
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.14, i64 0, i64 0)) #10
  br label %630

590:                                              ; preds = %586
  %591 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64 32) #10
  %592 = bitcast i8* %591 to %"class.blink::ColorMatrixFilterOperation"*
  %593 = load i32, i32* %153, align 8
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %595, label %597

595:                                              ; preds = %590
  %596 = load i32, i32* %152, align 4
  br label %613

597:                                              ; preds = %590
  %598 = zext i32 %593 to i64
  %599 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %598) #10
  %600 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %599, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #10
  %601 = ptrtoint i8* %600 to i64
  %602 = lshr i64 %599, 2
  %603 = trunc i64 %602 to i32
  %604 = icmp ne i8* %600, null
  %605 = load i32, i32* %152, align 4
  %606 = load float*, float** %154, align 8
  %607 = icmp ne float* %606, null
  %608 = and i1 %604, %607
  br i1 %608, label %609, label %613, !prof !13

609:                                              ; preds = %597
  %610 = zext i32 %605 to i64
  %611 = bitcast float* %606 to i8*
  %612 = shl nuw nsw i64 %610, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %600, i8* nonnull align 4 %611, i64 %612, i1 false) #10
  br label %613

613:                                              ; preds = %609, %597, %595
  %614 = phi i32 [ %596, %595 ], [ %605, %597 ], [ %605, %609 ]
  %615 = phi i64 [ 0, %595 ], [ %601, %597 ], [ %601, %609 ]
  %616 = phi i32 [ 0, %595 ], [ %603, %597 ], [ %603, %609 ]
  %617 = bitcast i8* %591 to i32 (...)***
  %618 = getelementptr inbounds i8, i8* %591, i64 8
  %619 = bitcast i8* %618 to i32*
  store i32 13, i32* %619, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink26ColorMatrixFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %617, align 8
  %620 = getelementptr inbounds i8, i8* %591, i64 16
  %621 = getelementptr inbounds i8, i8* %591, i64 24
  %622 = bitcast i8* %621 to i32*
  %623 = getelementptr inbounds i8, i8* %591, i64 28
  %624 = bitcast i8* %623 to i32*
  %625 = bitcast i8* %620 to i64*
  store atomic i64 %615, i64* %625 monotonic, align 8
  store i32 %616, i32* %622, align 4
  store i32 %614, i32* %624, align 4
  %626 = getelementptr inbounds i8, i8* %591, i64 -4
  %627 = bitcast i8* %626 to i16*
  %628 = load atomic i16, i16* %627 monotonic, align 2
  %629 = or i16 %628, 1
  store atomic i16 %629, i16* %627 release, align 2
  br label %630

630:                                              ; preds = %613, %589, %585
  %631 = phi i8* [ null, %589 ], [ %591, %613 ], [ null, %585 ]
  %632 = phi %"class.blink::ColorMatrixFilterOperation"* [ null, %589 ], [ %592, %613 ], [ null, %585 ]
  %633 = load i8, i8* %147, align 8, !range !12
  %634 = icmp eq i8 %633, 0
  br i1 %634, label %645, label %635

635:                                              ; preds = %630
  %636 = load float*, float** %154, align 8
  %637 = icmp eq float* %636, null
  %638 = bitcast float* %636 to i8*
  br i1 %637, label %644, label %639, !prof !13

639:                                              ; preds = %635
  %640 = load i32, i32* %152, align 4
  %641 = icmp eq i32 %640, 0
  br i1 %641, label %643, label %642, !prof !8

642:                                              ; preds = %639
  store i32 0, i32* %152, align 4
  br label %643

643:                                              ; preds = %642, %639
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %638) #10
  store float* null, float** %154, align 8
  br label %644

644:                                              ; preds = %643, %635
  store i8 0, i8* %147, align 8
  br label %645

645:                                              ; preds = %630, %644
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %147) #10
  store i8* %631, i8** %276, align 8
  %646 = icmp eq %"class.blink::ColorMatrixFilterOperation"* %632, null
  %647 = ptrtoint %"class.blink::ColorMatrixFilterOperation"* %632 to i64
  br i1 %646, label %665, label %648

648:                                              ; preds = %645
  %649 = load i32, i32* %60, align 4
  %650 = load i32, i32* %59, align 8
  %651 = icmp eq i32 %649, %650
  br i1 %651, label %664, label %652, !prof !8

652:                                              ; preds = %648
  %653 = load %"class.blink::Member"*, %"class.blink::Member"** %58, align 8
  %654 = zext i32 %649 to i64
  %655 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %653, i64 %654
  %656 = bitcast %"class.blink::Member"* %655 to i64*
  store atomic i64 %647, i64* %656 monotonic, align 8
  %657 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %658 = icmp eq i32 %657, 0
  br i1 %658, label %661, label %659

659:                                              ; preds = %652
  %660 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %631) #10
  br label %661

661:                                              ; preds = %659, %652
  %662 = load i32, i32* %60, align 4
  %663 = add i32 %662, 1
  store i32 %663, i32* %60, align 4
  br label %665

664:                                              ; preds = %648
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_26ColorMatrixFilterOperationEEEvOT_(%"class.WTF::Vector"* %93, %"class.blink::ColorMatrixFilterOperation"** nonnull dereferenceable(8) %51) #10
  br label %665

665:                                              ; preds = %645, %661, %664, %580, %577, %540, %537, %493, %490
  %666 = phi i8* [ %167, %490 ], [ %167, %493 ], [ %161, %537 ], [ %161, %540 ], [ %155, %577 ], [ %155, %580 ], [ %146, %664 ], [ %146, %661 ], [ %146, %645 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %666) #10
  br i1 %446, label %680, label %667

667:                                              ; preds = %665
  %668 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %669 = load atomic i32, i32* %668 monotonic, align 4
  %670 = and i32 %669, 2
  %671 = icmp eq i32 %670, 0
  %672 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 0, i32 0
  %673 = load i32, i32* %672, align 4
  br i1 %671, label %674, label %676

674:                                              ; preds = %667
  %675 = add i32 %673, -1
  store i32 %675, i32* %672, align 4
  br label %676

676:                                              ; preds = %674, %667
  %677 = phi i32 [ %675, %674 ], [ %673, %667 ]
  %678 = icmp eq i32 %677, 0
  br i1 %678, label %679, label %680

679:                                              ; preds = %676
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %455) #10
  br label %680

680:                                              ; preds = %665, %676, %679
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #10
  br label %681

681:                                              ; preds = %680, %379
  %682 = call zeroext i1 @_ZNK5blink22CanvasFilterDictionary17hasConvolveMatrixEv(%"class.blink::CanvasFilterDictionary"* %283)
  br i1 %682, label %683, label %1000

683:                                              ; preds = %681
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %169) #10
  store %"class.blink::ConvolveMatrixFilterOperation"* inttoptr (i64 -6148914691236517206 to %"class.blink::ConvolveMatrixFilterOperation"*), %"class.blink::ConvolveMatrixFilterOperation"** %52, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %171) #10
  %684 = getelementptr inbounds %"class.blink::CanvasFilterDictionary", %"class.blink::CanvasFilterDictionary"* %283, i64 0, i32 4
  %685 = bitcast %"class.blink::ScriptValue"* %684 to i64*
  %686 = load i64, i64* %685, align 8, !noalias !14
  store i64 %686, i64* %172, align 8, !alias.scope !14
  store i64* null, i64** %175, align 8, !alias.scope !14
  %687 = icmp eq %"class.blink::ScriptValue"* %684, %54
  br i1 %687, label %693, label %688

688:                                              ; preds = %683
  %689 = getelementptr inbounds %"class.blink::CanvasFilterDictionary", %"class.blink::CanvasFilterDictionary"* %283, i64 0, i32 4, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %690 = load i64*, i64** %689, align 8, !noalias !14
  %691 = icmp eq i64* %690, null
  br i1 %691, label %693, label %692

692:                                              ; preds = %688
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %689, i64** %175) #10
  br label %693

693:                                              ; preds = %692, %688, %683
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %174) #10
  %694 = getelementptr inbounds %"class.blink::CanvasFilterDictionary", %"class.blink::CanvasFilterDictionary"* %283, i64 0, i32 4, i32 1, i32 1, i32 0
  %695 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %694, align 8, !noalias !14
  store %"class.blink::DOMWrapperWorld"* %695, %"class.blink::DOMWrapperWorld"** %176, align 8, !alias.scope !14
  %696 = icmp eq %"class.blink::DOMWrapperWorld"* %695, null
  br i1 %696, label %699, label %697

697:                                              ; preds = %693
  %698 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %695, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %698) #10
  br label %699

699:                                              ; preds = %693, %697
  %700 = load i64, i64* %172, align 8
  store i64 %700, i64* %177, align 8
  store i32 0, i32* %178, align 8
  store %"class.v8::Object"* null, %"class.v8::Object"** %179, align 8
  %701 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %54) #10
  %702 = icmp eq %"class.v8::Value"* %701, null
  br i1 %702, label %705, label %703

703:                                              ; preds = %699
  %704 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %701) #10
  br i1 %704, label %707, label %705

705:                                              ; preds = %703, %699
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %180) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %25, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.11, i64 0, i64 0), i32 56, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #10
  %706 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %25) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %180) #10
  br label %707

707:                                              ; preds = %703, %705
  %708 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %54) #10
  store %"class.v8::Value"* %708, %"class.v8::Value"** %181, align 8
  store i32 2, i32* %178, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %182) #10, !noalias !17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %182, i8 -86, i64 24, i1 false) #10, !noalias !17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %183) #10, !noalias !17
  %709 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8, !noalias !17
  store i64 %709, i64* %184, align 8, !noalias !17
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i8** %185, align 8, !noalias !17
  store i32 12, i32* %186, align 8, !noalias !17
  call void @_ZNK5blink10Dictionary3GetINS_11IDLSequenceINS2_INS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.absl::optional.404"* nonnull sret %14, %"class.blink::Dictionary"* nonnull %53, %"class.WTF::StringView"* nonnull dereferenceable(24) %15, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10, !noalias !17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %183) #10, !noalias !17
  %710 = load i8, i8* %182, align 8, !range !12, !noalias !17
  %711 = icmp eq i8 %710, 0
  br i1 %711, label %715, label %712

712:                                              ; preds = %707
  %713 = load i32, i32* %188, align 4, !noalias !17
  %714 = icmp eq i32 %713, 0
  br i1 %714, label %715, label %716

715:                                              ; preds = %712, %707
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([128 x i8], [128 x i8]* @.str.30, i64 0, i64 0)) #10, !noalias !17
  br label %786

716:                                              ; preds = %712
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %189) #10, !noalias !17
  store i64 -6148914691236517206, i64* %196, align 8, !noalias !17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %189, i8 0, i64 16, i1 false) #10, !noalias !17
  store i32 %713, i32* %195, align 4, !noalias !17
  %717 = call dereferenceable(16) %"class.WTF::Vector.212"* @_ZN3WTF6VectorINS0_IfLj0ENS_18PartitionAllocatorEEELj0ES1_E2atEj(%"class.WTF::Vector.409"* %187, i32 0) #10, !noalias !17
  %718 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %717, i64 0, i32 0, i32 0, i32 2
  %719 = load i32, i32* %718, align 4, !noalias !17
  store i32 %719, i32* %194, align 8, !noalias !17
  br label %720

720:                                              ; preds = %736, %716
  %721 = phi i32 [ %742, %736 ], [ 0, %716 ]
  %722 = load i8, i8* %182, align 8, !range !12, !noalias !17
  %723 = icmp eq i8 %722, 0
  br i1 %723, label %724, label %725

724:                                              ; preds = %720
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #11, !noalias !17
  unreachable

725:                                              ; preds = %720
  %726 = call dereferenceable(16) %"class.WTF::Vector.212"* @_ZN3WTF6VectorINS0_IfLj0ENS_18PartitionAllocatorEEELj0ES1_E2atEj(%"class.WTF::Vector.409"* %187, i32 %721) #10, !noalias !17
  %727 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %726, i64 0, i32 0, i32 0, i32 2
  %728 = load i32, i32* %727, align 4, !noalias !17
  %729 = load i32, i32* %194, align 8, !noalias !17
  %730 = icmp eq i32 %728, %729
  br i1 %730, label %732, label %731

731:                                              ; preds = %725
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %2, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.31, i64 0, i64 0)) #10, !noalias !17
  br label %771

732:                                              ; preds = %725
  %733 = load i8, i8* %182, align 8, !range !12, !noalias !17
  %734 = icmp eq i8 %733, 0
  br i1 %734, label %735, label %736

735:                                              ; preds = %732
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #11, !noalias !17
  unreachable

736:                                              ; preds = %732
  %737 = call dereferenceable(16) %"class.WTF::Vector.212"* @_ZN3WTF6VectorINS0_IfLj0ENS_18PartitionAllocatorEEELj0ES1_E2atEj(%"class.WTF::Vector.409"* %187, i32 %721) #10, !noalias !17
  %738 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %737, i64 0, i32 0, i32 0, i32 0
  %739 = load float*, float** %738, align 8, !noalias !17
  %740 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %737, i64 0, i32 0, i32 0, i32 2
  %741 = load i32, i32* %740, align 4, !noalias !17
  call void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE6AppendIfEEvPKT_j(%"class.WTF::Vector.212"* nonnull %190, float* %739, i32 %741) #10, !noalias !17
  %742 = add nuw i32 %721, 1
  %743 = load i32, i32* %195, align 4, !noalias !17
  %744 = icmp ult i32 %742, %743
  br i1 %744, label %720, label %745

745:                                              ; preds = %736
  %746 = load i32, i32* %192, align 8, !noalias !17
  %747 = icmp eq i32 %746, 0
  br i1 %747, label %748, label %750

748:                                              ; preds = %745
  %749 = load i32, i32* %193, align 4, !noalias !17
  br label %766

750:                                              ; preds = %745
  %751 = zext i32 %746 to i64
  %752 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %751) #10, !noalias !17
  %753 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %752, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #10, !noalias !17
  %754 = ptrtoint i8* %753 to i64
  %755 = lshr i64 %752, 2
  %756 = trunc i64 %755 to i32
  %757 = icmp ne i8* %753, null
  %758 = load i32, i32* %193, align 4, !noalias !17
  %759 = load float*, float** %191, align 8, !noalias !17
  %760 = icmp ne float* %759, null
  %761 = and i1 %757, %760
  br i1 %761, label %762, label %766, !prof !13

762:                                              ; preds = %750
  %763 = zext i32 %758 to i64
  %764 = bitcast float* %759 to i8*
  %765 = shl nuw nsw i64 %763, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %753, i8* nonnull align 4 %764, i64 %765, i1 false) #10, !noalias !17
  br label %766

766:                                              ; preds = %762, %750, %748
  %767 = phi i32 [ %749, %748 ], [ %758, %762 ], [ %758, %750 ]
  %768 = phi i32 [ 0, %748 ], [ %756, %762 ], [ %756, %750 ]
  %769 = phi i64 [ 0, %748 ], [ %754, %762 ], [ %754, %750 ]
  %770 = load i64, i64* %196, align 8, !noalias !17
  br label %771

771:                                              ; preds = %766, %731
  %772 = phi i8 [ 1, %766 ], [ 0, %731 ]
  %773 = phi i64 [ %770, %766 ], [ 0, %731 ]
  %774 = phi i32 [ %767, %766 ], [ 0, %731 ]
  %775 = phi i32 [ %768, %766 ], [ 0, %731 ]
  %776 = phi i64 [ %769, %766 ], [ 0, %731 ]
  %777 = load float*, float** %191, align 8, !noalias !17
  %778 = icmp eq float* %777, null
  %779 = bitcast float* %777 to i8*
  br i1 %778, label %785, label %780, !prof !13

780:                                              ; preds = %771
  %781 = load i32, i32* %193, align 4, !noalias !17
  %782 = icmp eq i32 %781, 0
  br i1 %782, label %784, label %783, !prof !8

783:                                              ; preds = %780
  store i32 0, i32* %193, align 4, !noalias !17
  br label %784

784:                                              ; preds = %783, %780
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %779) #10, !noalias !17
  store float* null, float** %191, align 8, !noalias !17
  br label %785

785:                                              ; preds = %784, %771
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %189) #10, !noalias !17
  br label %786

786:                                              ; preds = %785, %715
  %787 = phi i8 [ 0, %715 ], [ %772, %785 ]
  %788 = phi i64 [ 0, %715 ], [ %773, %785 ]
  %789 = phi i32 [ 0, %715 ], [ %774, %785 ]
  %790 = phi i32 [ 0, %715 ], [ %775, %785 ]
  %791 = phi i64 [ 0, %715 ], [ %776, %785 ]
  %792 = load i8, i8* %182, align 8, !range !12, !noalias !17
  %793 = icmp eq i8 %792, 0
  br i1 %793, label %824, label %794

794:                                              ; preds = %786
  %795 = load %"class.WTF::Vector.212"*, %"class.WTF::Vector.212"** %197, align 8, !noalias !17
  %796 = icmp eq %"class.WTF::Vector.212"* %795, null
  br i1 %796, label %823, label %797, !prof !13

797:                                              ; preds = %794
  %798 = bitcast %"class.WTF::Vector.212"* %795 to i8*
  %799 = load i32, i32* %188, align 4, !noalias !17
  %800 = icmp eq i32 %799, 0
  br i1 %800, label %821, label %801, !prof !8

801:                                              ; preds = %797
  %802 = zext i32 %799 to i64
  %803 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %795, i64 %802
  br label %804

804:                                              ; preds = %816, %801
  %805 = phi %"class.WTF::Vector.212"* [ %817, %816 ], [ %795, %801 ]
  %806 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %805, i64 0, i32 0, i32 0, i32 0
  %807 = load float*, float** %806, align 8, !noalias !17
  %808 = icmp eq float* %807, null
  %809 = bitcast float* %807 to i8*
  br i1 %808, label %816, label %810, !prof !13

810:                                              ; preds = %804
  %811 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %805, i64 0, i32 0, i32 0, i32 2
  %812 = load i32, i32* %811, align 4, !noalias !17
  %813 = icmp eq i32 %812, 0
  br i1 %813, label %815, label %814, !prof !8

814:                                              ; preds = %810
  store i32 0, i32* %811, align 4, !noalias !17
  br label %815

815:                                              ; preds = %814, %810
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %809) #10, !noalias !17
  store float* null, float** %806, align 8, !noalias !17
  br label %816

816:                                              ; preds = %815, %804
  %817 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %805, i64 1
  %818 = icmp eq %"class.WTF::Vector.212"* %817, %803
  br i1 %818, label %819, label %804

819:                                              ; preds = %816
  store i32 0, i32* %188, align 4, !noalias !17
  %820 = load i8*, i8** %198, align 8, !noalias !17
  br label %821

821:                                              ; preds = %819, %797
  %822 = phi i8* [ %820, %819 ], [ %798, %797 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %822) #10, !noalias !17
  store %"class.WTF::Vector.212"* null, %"class.WTF::Vector.212"** %197, align 8, !noalias !17
  br label %823

823:                                              ; preds = %821, %794
  store i8 0, i8* %182, align 8, !noalias !17
  br label %824

824:                                              ; preds = %823, %786
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %182) #10, !noalias !17
  %825 = icmp eq i8 %787, 0
  br i1 %825, label %967, label %826

826:                                              ; preds = %824
  %827 = trunc i64 %788 to i32
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %199) #10
  %828 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %828, i64* %200, align 8
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i64 0, i64 0), i8** %201, align 8
  store i32 7, i32* %202, align 8
  %829 = call { i8, double } @_ZNK5blink10Dictionary3GetINS_30IDLFloatingPointNumberTypeBaseIdLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::Dictionary"* nonnull %53, %"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  %830 = extractvalue { i8, double } %829, 0
  %831 = extractvalue { i8, double } %829, 1
  %832 = icmp eq i8 %830, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %199) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %203) #10
  %833 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %833, i64* %204, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0), i8** %205, align 8
  store i32 4, i32* %206, align 8
  %834 = call { i8, double } @_ZNK5blink10Dictionary3GetINS_30IDLFloatingPointNumberTypeBaseIdLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::Dictionary"* nonnull %53, %"class.WTF::StringView"* nonnull dereferenceable(24) %18, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  %835 = extractvalue { i8, double } %834, 0
  %836 = extractvalue { i8, double } %834, 1
  %837 = icmp eq i8 %835, 0
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %203) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %207) #10
  %838 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %838, i64* %208, align 8
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0), i8** %209, align 8
  store i32 7, i32* %210, align 8
  %839 = call i32 @_ZNK5blink10Dictionary3GetINS_18IDLIntegerTypeBaseIsLNS_8bindings18IDLIntegerConvModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::Dictionary"* nonnull %53, %"class.WTF::StringView"* nonnull dereferenceable(24) %19, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  %840 = trunc i32 %839 to i8
  %841 = lshr i32 %839, 16
  %842 = lshr i32 %827, 1
  %843 = icmp eq i8 %840, 0
  %844 = select i1 %843, i32 %842, i32 %841
  %845 = shl i32 %844, 16
  %846 = ashr exact i32 %845, 16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %211) #10
  %847 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %847, i64* %212, align 8
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i8** %213, align 8
  store i32 7, i32* %214, align 8
  %848 = call i32 @_ZNK5blink10Dictionary3GetINS_18IDLIntegerTypeBaseIsLNS_8bindings18IDLIntegerConvModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::Dictionary"* nonnull %53, %"class.WTF::StringView"* nonnull dereferenceable(24) %20, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  %849 = trunc i32 %848 to i8
  %850 = lshr i32 %848, 16
  %851 = lshr i64 %788, 33
  %852 = icmp eq i8 %849, 0
  %853 = trunc i64 %851 to i32
  %854 = select i1 %852, i32 %853, i32 %850
  %855 = shl i32 %854, 16
  %856 = ashr exact i32 %855, 16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %211) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215) #10
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %216, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %217) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %218) #10
  %857 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %857, i64* %219, align 8
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i64 0, i64 0), i8** %220, align 8
  store i32 8, i32* %221, align 8
  call void @_ZNK5blink10Dictionary3GetINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.absl::optional"* nonnull sret %22, %"class.blink::Dictionary"* nonnull %53, %"class.WTF::StringView"* nonnull dereferenceable(24) %23, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %222) #10
  %858 = load i8, i8* %217, align 8, !range !12
  %859 = icmp eq i8 %858, 0
  br i1 %859, label %862, label %860

860:                                              ; preds = %826
  %861 = load i64, i64* %225, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %224, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222) #10
  store i64 %861, i64* %226, align 8
  br label %882

862:                                              ; preds = %826
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27, i64 0, i64 0), i64 9) #10
  %863 = load i64, i64* %227, align 8
  %864 = load i8, i8* %217, align 8, !range !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222) #10
  store i64 %863, i64* %226, align 8
  %865 = icmp eq i8 %864, 0
  br i1 %865, label %883, label %866

866:                                              ; preds = %862
  %867 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %228, align 8
  %868 = icmp eq %"class.WTF::StringImpl"* %867, null
  br i1 %868, label %882, label %869

869:                                              ; preds = %866
  %870 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %867, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %871 = load atomic i32, i32* %870 monotonic, align 4
  %872 = and i32 %871, 2
  %873 = icmp eq i32 %872, 0
  %874 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %867, i64 0, i32 0
  %875 = load i32, i32* %874, align 4
  br i1 %873, label %876, label %878

876:                                              ; preds = %869
  %877 = add i32 %875, -1
  store i32 %877, i32* %874, align 4
  br label %878

878:                                              ; preds = %876, %869
  %879 = phi i32 [ %877, %876 ], [ %875, %869 ]
  %880 = icmp eq i32 %879, 0
  br i1 %880, label %881, label %882

881:                                              ; preds = %878
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %867) #10
  br label %882

882:                                              ; preds = %860, %881, %878, %866
  store i8 0, i8* %217, align 8
  br label %883

883:                                              ; preds = %882, %862
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %218) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %217) #10
  %884 = call dereferenceable(16) %"class.blink::SVGEnumerationMap"* @_ZN5blink17GetEnumerationMapINS_16FEConvolveMatrix12EdgeModeTypeEEERKNS_17SVGEnumerationMapEv() #10
  %885 = call zeroext i16 @_ZNK5blink17SVGEnumerationMap13ValueFromNameERKN3WTF6StringE(%"class.blink::SVGEnumerationMap"* %884, %"class.WTF::String"* nonnull dereferenceable(8) %21) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %229) #10
  %886 = zext i16 %885 to i32
  %887 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %887, i64* %230, align 8
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0), i8** %231, align 8
  store i32 13, i32* %232, align 8
  %888 = call i16 @_ZNK5blink10Dictionary3GetINS_10IDLBooleanEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::Dictionary"* nonnull %53, %"class.WTF::StringView"* nonnull dereferenceable(24) %24, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  %889 = trunc i16 %888 to i8
  %890 = icmp ne i8 %889, 0
  %891 = icmp ugt i16 %888, 255
  %892 = and i1 %891, %890
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %229) #10
  %893 = zext i1 %892 to i8
  %894 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64 64) #10
  %895 = bitcast i8* %894 to %"class.blink::ConvolveMatrixFilterOperation"*
  %896 = fptrunc double %831 to float
  %897 = select i1 %832, float 1.000000e+00, float %896
  %898 = fptrunc double %836 to float
  %899 = select i1 %837, float 0.000000e+00, float %898
  %900 = bitcast i8* %894 to i32 (...)***
  %901 = getelementptr inbounds i8, i8* %894, i64 8
  %902 = bitcast i8* %901 to i32*
  store i32 15, i32* %902, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink29ConvolveMatrixFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %900, align 8
  %903 = getelementptr inbounds i8, i8* %894, i64 12
  %904 = bitcast i8* %903 to i64*
  store i64 %788, i64* %904, align 4
  %905 = getelementptr inbounds i8, i8* %894, i64 20
  %906 = bitcast i8* %905 to float*
  store float %897, float* %906, align 4
  %907 = getelementptr inbounds i8, i8* %894, i64 24
  %908 = bitcast i8* %907 to float*
  store float %899, float* %908, align 8
  %909 = getelementptr inbounds i8, i8* %894, i64 28
  %910 = bitcast i8* %909 to i64*
  %911 = zext i32 %856 to i64
  %912 = shl nuw i64 %911, 32
  %913 = zext i32 %846 to i64
  %914 = or i64 %912, %913
  store i64 %914, i64* %910, align 4
  %915 = getelementptr inbounds i8, i8* %894, i64 36
  %916 = bitcast i8* %915 to i32*
  store i32 %886, i32* %916, align 4
  %917 = getelementptr inbounds i8, i8* %894, i64 40
  store i8 %893, i8* %917, align 8
  %918 = getelementptr inbounds i8, i8* %894, i64 48
  %919 = bitcast i8* %918 to float**
  store float* null, float** %919, align 8
  %920 = getelementptr inbounds i8, i8* %894, i64 56
  %921 = bitcast i8* %920 to i32*
  store i32 0, i32* %921, align 8
  %922 = icmp eq i32 %790, 0
  br i1 %922, label %923, label %926

923:                                              ; preds = %883
  %924 = getelementptr inbounds i8, i8* %894, i64 60
  %925 = bitcast i8* %924 to i32*
  store i32 %789, i32* %925, align 4
  br label %943

926:                                              ; preds = %883
  %927 = zext i32 %790 to i64
  %928 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %927) #10
  %929 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %928, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #10
  %930 = ptrtoint i8* %929 to i64
  %931 = bitcast i8* %918 to i64*
  store atomic i64 %930, i64* %931 monotonic, align 8
  %932 = lshr i64 %928, 2
  %933 = trunc i64 %932 to i32
  store i32 %933, i32* %921, align 8
  %934 = icmp ne i8* %929, null
  %935 = getelementptr inbounds i8, i8* %894, i64 60
  %936 = bitcast i8* %935 to i32*
  store i32 %789, i32* %936, align 4
  %937 = icmp ne i64 %791, 0
  %938 = and i1 %937, %934
  br i1 %938, label %939, label %943, !prof !13

939:                                              ; preds = %926
  %940 = zext i32 %789 to i64
  %941 = inttoptr i64 %791 to i8*
  %942 = shl nuw nsw i64 %940, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %929, i8* nonnull align 4 %941, i64 %942, i1 false) #10
  br label %943

943:                                              ; preds = %939, %926, %923
  %944 = getelementptr inbounds i8, i8* %894, i64 -4
  %945 = bitcast i8* %944 to i16*
  %946 = load atomic i16, i16* %945 monotonic, align 2
  %947 = or i16 %946, 1
  store atomic i16 %947, i16* %945 release, align 2
  %948 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %216, align 8
  %949 = icmp eq %"class.WTF::StringImpl"* %948, null
  br i1 %949, label %963, label %950

950:                                              ; preds = %943
  %951 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %948, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %952 = load atomic i32, i32* %951 monotonic, align 4
  %953 = and i32 %952, 2
  %954 = icmp eq i32 %953, 0
  %955 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %948, i64 0, i32 0
  %956 = load i32, i32* %955, align 4
  br i1 %954, label %957, label %959

957:                                              ; preds = %950
  %958 = add i32 %956, -1
  store i32 %958, i32* %955, align 4
  br label %959

959:                                              ; preds = %957, %950
  %960 = phi i32 [ %958, %957 ], [ %956, %950 ]
  %961 = icmp eq i32 %960, 0
  br i1 %961, label %962, label %963

962:                                              ; preds = %959
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %948) #10
  br label %963

963:                                              ; preds = %962, %959, %943
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #10
  %964 = icmp eq i64 %791, 0
  br i1 %964, label %967, label %965, !prof !13

965:                                              ; preds = %963
  %966 = inttoptr i64 %791 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %966) #10
  br label %967

967:                                              ; preds = %824, %963, %965
  %968 = phi i8* [ %894, %965 ], [ %894, %963 ], [ null, %824 ]
  %969 = phi %"class.blink::ConvolveMatrixFilterOperation"* [ %895, %965 ], [ %895, %963 ], [ null, %824 ]
  %970 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %176, align 8
  %971 = icmp eq %"class.blink::DOMWrapperWorld"* %970, null
  br i1 %971, label %979, label %972

972:                                              ; preds = %967
  %973 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %970, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %973) #10
  %974 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %970, i64 0, i32 0, i32 0, i32 0, i32 0
  %975 = load i32, i32* %974, align 4
  %976 = icmp eq i32 %975, 0
  br i1 %976, label %977, label %979

977:                                              ; preds = %972
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %970) #10
  %978 = bitcast %"class.blink::DOMWrapperWorld"* %970 to i8*
  call void @free(i8* %978) #10
  br label %979

979:                                              ; preds = %967, %972, %977
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %171) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %170) #10
  store i8* %968, i8** %277, align 8
  %980 = icmp eq %"class.blink::ConvolveMatrixFilterOperation"* %969, null
  %981 = ptrtoint %"class.blink::ConvolveMatrixFilterOperation"* %969 to i64
  br i1 %980, label %999, label %982

982:                                              ; preds = %979
  %983 = load i32, i32* %60, align 4
  %984 = load i32, i32* %59, align 8
  %985 = icmp eq i32 %983, %984
  br i1 %985, label %998, label %986, !prof !8

986:                                              ; preds = %982
  %987 = load %"class.blink::Member"*, %"class.blink::Member"** %58, align 8
  %988 = zext i32 %983 to i64
  %989 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %987, i64 %988
  %990 = bitcast %"class.blink::Member"* %989 to i64*
  store atomic i64 %981, i64* %990 monotonic, align 8
  %991 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %992 = icmp eq i32 %991, 0
  br i1 %992, label %995, label %993

993:                                              ; preds = %986
  %994 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %968) #10
  br label %995

995:                                              ; preds = %993, %986
  %996 = load i32, i32* %60, align 4
  %997 = add i32 %996, 1
  store i32 %997, i32* %60, align 4
  br label %999

998:                                              ; preds = %982
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_29ConvolveMatrixFilterOperationEEEvOT_(%"class.WTF::Vector"* %93, %"class.blink::ConvolveMatrixFilterOperation"** nonnull dereferenceable(8) %52) #10
  br label %999

999:                                              ; preds = %998, %995, %979
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %169) #10
  br label %1000

1000:                                             ; preds = %999, %681
  %1001 = call zeroext i1 @_ZNK5blink22CanvasFilterDictionary20hasComponentTransferEv(%"class.blink::CanvasFilterDictionary"* %283)
  br i1 %1001, label %1002, label %1104

1002:                                             ; preds = %1000
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233) #10
  store %"class.blink::ComponentTransferFilterOperation"* inttoptr (i64 -6148914691236517206 to %"class.blink::ComponentTransferFilterOperation"*), %"class.blink::ComponentTransferFilterOperation"** %55, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %234) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %235) #10
  %1003 = getelementptr inbounds %"class.blink::CanvasFilterDictionary", %"class.blink::CanvasFilterDictionary"* %283, i64 0, i32 3
  %1004 = bitcast %"class.blink::ScriptValue"* %1003 to i64*
  %1005 = load i64, i64* %1004, align 8, !noalias !20
  store i64 %1005, i64* %236, align 8, !alias.scope !20
  store i64* null, i64** %239, align 8, !alias.scope !20
  %1006 = icmp eq %"class.blink::ScriptValue"* %1003, %57
  br i1 %1006, label %1012, label %1007

1007:                                             ; preds = %1002
  %1008 = getelementptr inbounds %"class.blink::CanvasFilterDictionary", %"class.blink::CanvasFilterDictionary"* %283, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1009 = load i64*, i64** %1008, align 8, !noalias !20
  %1010 = icmp eq i64* %1009, null
  br i1 %1010, label %1012, label %1011

1011:                                             ; preds = %1007
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %1008, i64** %239) #10
  br label %1012

1012:                                             ; preds = %1011, %1007, %1002
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8) %238) #10
  %1013 = getelementptr inbounds %"class.blink::CanvasFilterDictionary", %"class.blink::CanvasFilterDictionary"* %283, i64 0, i32 3, i32 1, i32 1, i32 0
  %1014 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %1013, align 8, !noalias !20
  store %"class.blink::DOMWrapperWorld"* %1014, %"class.blink::DOMWrapperWorld"** %240, align 8, !alias.scope !20
  %1015 = icmp eq %"class.blink::DOMWrapperWorld"* %1014, null
  br i1 %1015, label %1018, label %1016

1016:                                             ; preds = %1012
  %1017 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %1014, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %1017) #10
  br label %1018

1018:                                             ; preds = %1012, %1016
  %1019 = load i64, i64* %236, align 8
  store i64 %1019, i64* %241, align 8
  store i32 0, i32* %242, align 8
  store %"class.v8::Object"* null, %"class.v8::Object"** %243, align 8
  %1020 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %57) #10
  %1021 = icmp eq %"class.v8::Value"* %1020, null
  br i1 %1021, label %1024, label %1022

1022:                                             ; preds = %1018
  %1023 = call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1020) #10
  br i1 %1023, label %1026, label %1024

1024:                                             ; preds = %1022, %1018
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %244) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %12, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.11, i64 0, i64 0), i32 56, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)) #10
  %1025 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %12) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %12) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %244) #10
  br label %1026

1026:                                             ; preds = %1022, %1024
  %1027 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* nonnull %57) #10
  store %"class.v8::Value"* %1027, %"class.v8::Value"** %245, align 8
  store i32 2, i32* %242, align 8
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %246) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %247) #10
  %1028 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %1028, i64* %248, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0), i8** %249, align 8
  store i32 5, i32* %250, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_128GetComponentTransferFunctionERKN3WTF10StringViewERKNS_10DictionaryERNS_14ExceptionStateE(%"struct.blink::ComponentTransferFunction"* nonnull sret %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.blink::Dictionary"* nonnull dereferenceable(24) %56, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %251) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %252) #10
  %1029 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %1029, i64* %253, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.35, i64 0, i64 0), i8** %254, align 8
  store i32 5, i32* %255, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_128GetComponentTransferFunctionERKN3WTF10StringViewERKNS_10DictionaryERNS_14ExceptionStateE(%"struct.blink::ComponentTransferFunction"* nonnull sret %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.blink::Dictionary"* nonnull dereferenceable(24) %56, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %256) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %257) #10
  %1030 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %1030, i64* %258, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0), i8** %259, align 8
  store i32 5, i32* %260, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_128GetComponentTransferFunctionERKN3WTF10StringViewERKNS_10DictionaryERNS_14ExceptionStateE(%"struct.blink::ComponentTransferFunction"* nonnull sret %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.blink::Dictionary"* nonnull dereferenceable(24) %56, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %261) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %262) #10
  %1031 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %1031, i64* %263, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.37, i64 0, i64 0), i8** %264, align 8
  store i32 5, i32* %265, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_128GetComponentTransferFunctionERKN3WTF10StringViewERKNS_10DictionaryERNS_14ExceptionStateE(%"struct.blink::ComponentTransferFunction"* nonnull sret %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11, %"class.blink::Dictionary"* nonnull dereferenceable(24) %56, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  %1032 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64 176) #10
  %1033 = bitcast i8* %1032 to %"class.blink::ComponentTransferFilterOperation"*
  call void @_ZN5blink32ComponentTransferFilterOperationC2ERKNS_25ComponentTransferFunctionES3_S3_S3_(%"class.blink::ComponentTransferFilterOperation"* %1033, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %4, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %6, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %8, %"struct.blink::ComponentTransferFunction"* nonnull dereferenceable(40) %10) #10
  %1034 = getelementptr inbounds i8, i8* %1032, i64 -4
  %1035 = bitcast i8* %1034 to i16*
  %1036 = load atomic i16, i16* %1035 monotonic, align 2
  %1037 = or i16 %1036, 1
  store atomic i16 %1037, i16* %1035 release, align 2
  %1038 = load float*, float** %266, align 8
  %1039 = icmp eq float* %1038, null
  %1040 = bitcast float* %1038 to i8*
  br i1 %1039, label %1046, label %1041, !prof !13

1041:                                             ; preds = %1026
  %1042 = load i32, i32* %267, align 4
  %1043 = icmp eq i32 %1042, 0
  br i1 %1043, label %1045, label %1044, !prof !8

1044:                                             ; preds = %1041
  store i32 0, i32* %267, align 4
  br label %1045

1045:                                             ; preds = %1044, %1041
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1040) #10
  store float* null, float** %266, align 8
  br label %1046

1046:                                             ; preds = %1045, %1026
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %262) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %261) #10
  %1047 = load float*, float** %268, align 8
  %1048 = icmp eq float* %1047, null
  %1049 = bitcast float* %1047 to i8*
  br i1 %1048, label %1055, label %1050, !prof !13

1050:                                             ; preds = %1046
  %1051 = load i32, i32* %269, align 4
  %1052 = icmp eq i32 %1051, 0
  br i1 %1052, label %1054, label %1053, !prof !8

1053:                                             ; preds = %1050
  store i32 0, i32* %269, align 4
  br label %1054

1054:                                             ; preds = %1053, %1050
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1049) #10
  store float* null, float** %268, align 8
  br label %1055

1055:                                             ; preds = %1054, %1046
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %257) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %256) #10
  %1056 = load float*, float** %270, align 8
  %1057 = icmp eq float* %1056, null
  %1058 = bitcast float* %1056 to i8*
  br i1 %1057, label %1064, label %1059, !prof !13

1059:                                             ; preds = %1055
  %1060 = load i32, i32* %271, align 4
  %1061 = icmp eq i32 %1060, 0
  br i1 %1061, label %1063, label %1062, !prof !8

1062:                                             ; preds = %1059
  store i32 0, i32* %271, align 4
  br label %1063

1063:                                             ; preds = %1062, %1059
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1058) #10
  store float* null, float** %270, align 8
  br label %1064

1064:                                             ; preds = %1063, %1055
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %252) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %251) #10
  %1065 = load float*, float** %272, align 8
  %1066 = icmp eq float* %1065, null
  %1067 = bitcast float* %1065 to i8*
  br i1 %1066, label %1073, label %1068, !prof !13

1068:                                             ; preds = %1064
  %1069 = load i32, i32* %273, align 4
  %1070 = icmp eq i32 %1069, 0
  br i1 %1070, label %1072, label %1071, !prof !8

1071:                                             ; preds = %1068
  store i32 0, i32* %273, align 4
  br label %1072

1072:                                             ; preds = %1071, %1068
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1067) #10
  store float* null, float** %272, align 8
  br label %1073

1073:                                             ; preds = %1064, %1072
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %247) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %246) #10
  %1074 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %240, align 8
  %1075 = icmp eq %"class.blink::DOMWrapperWorld"* %1074, null
  br i1 %1075, label %1083, label %1076

1076:                                             ; preds = %1073
  %1077 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %1074, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %1077) #10
  %1078 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %1074, i64 0, i32 0, i32 0, i32 0, i32 0
  %1079 = load i32, i32* %1078, align 4
  %1080 = icmp eq i32 %1079, 0
  br i1 %1080, label %1081, label %1083

1081:                                             ; preds = %1076
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %1074) #10
  %1082 = bitcast %"class.blink::DOMWrapperWorld"* %1074 to i8*
  call void @free(i8* %1082) #10
  br label %1083

1083:                                             ; preds = %1073, %1076, %1081
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %235) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %234) #10
  store i8* %1032, i8** %274, align 8
  %1084 = icmp eq i8* %1032, null
  %1085 = ptrtoint i8* %1032 to i64
  br i1 %1084, label %1103, label %1086

1086:                                             ; preds = %1083
  %1087 = load i32, i32* %60, align 4
  %1088 = load i32, i32* %59, align 8
  %1089 = icmp eq i32 %1087, %1088
  br i1 %1089, label %1102, label %1090, !prof !8

1090:                                             ; preds = %1086
  %1091 = load %"class.blink::Member"*, %"class.blink::Member"** %58, align 8
  %1092 = zext i32 %1087 to i64
  %1093 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %1091, i64 %1092
  %1094 = bitcast %"class.blink::Member"* %1093 to i64*
  store atomic i64 %1085, i64* %1094 monotonic, align 8
  %1095 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %1096 = icmp eq i32 %1095, 0
  br i1 %1096, label %1099, label %1097

1097:                                             ; preds = %1090
  %1098 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %1032) #10
  br label %1099

1099:                                             ; preds = %1097, %1090
  %1100 = load i32, i32* %60, align 4
  %1101 = add i32 %1100, 1
  store i32 %1101, i32* %60, align 4
  br label %1103

1102:                                             ; preds = %1086
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_32ComponentTransferFilterOperationEEEvOT_(%"class.WTF::Vector"* %93, %"class.blink::ComponentTransferFilterOperation"** nonnull dereferenceable(8) %55) #10
  br label %1103

1103:                                             ; preds = %1102, %1099, %1083
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #10
  br label %1104

1104:                                             ; preds = %1103, %1000
  %1105 = getelementptr inbounds %"class.blink::Member.9", %"class.blink::Member.9"* %281, i64 1
  %1106 = icmp eq %"class.blink::Member.9"* %1105, %67
  br i1 %1106, label %279, label %280
}

declare void @_ZN5blink16FilterOperationsC1Ev(%"class.blink::FilterOperations"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22CanvasFilterDictionary7hasBlurEv(%"class.blink::CanvasFilterDictionary"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CanvasFilterDictionary", %"class.blink::CanvasFilterDictionary"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::CanvasFilterDictionary", %"class.blink::CanvasFilterDictionary"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #10
  %8 = icmp eq %"class.v8::Value"* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.v8::Value"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 3
  %13 = icmp eq i64 %12, 1
  br i1 %13, label %14, label %31

14:                                               ; preds = %9
  %15 = add i64 %11, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = and i64 %11, -4294967296
  %19 = zext i32 %17 to i64
  %20 = or i64 %18, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 67
  br i1 %24, label %25, label %31

25:                                               ; preds = %14
  %26 = add i64 %11, 23
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, -2
  %30 = icmp eq i32 %29, 6
  br i1 %30, label %56, label %31

31:                                               ; preds = %14, %9, %6, %25
  %32 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #10
  %33 = icmp eq %"class.v8::Value"* %32, null
  br i1 %33, label %56, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.v8::Value"* %32 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 3
  %38 = icmp eq i64 %37, 1
  br i1 %38, label %39, label %56

39:                                               ; preds = %34
  %40 = add i64 %36, -1
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = and i64 %36, -4294967296
  %44 = zext i32 %42 to i64
  %45 = or i64 %43, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load i16, i16* %47, align 2
  %49 = icmp eq i16 %48, 67
  br i1 %49, label %50, label %56

50:                                               ; preds = %39
  %51 = add i64 %36, 23
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, -2
  %55 = icmp ne i32 %54, 10
  br label %56

56:                                               ; preds = %50, %39, %34, %31, %25, %1
  %57 = phi i1 [ false, %25 ], [ false, %1 ], [ true, %31 ], [ %55, %50 ], [ true, %34 ], [ true, %39 ]
  ret i1 %57
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22CanvasFilterDictionary14hasColorMatrixEv(%"class.blink::CanvasFilterDictionary"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CanvasFilterDictionary", %"class.blink::CanvasFilterDictionary"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.blink::CanvasFilterDictionary", %"class.blink::CanvasFilterDictionary"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #10
  %8 = icmp eq %"class.v8::Value"* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.v8::Value"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 3
  %13 = icmp eq i64 %12, 1
  br i1 %13, label %14, label %31

14:                                               ; preds = %9
  %15 = add i64 %11, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = and i64 %11, -4294967296
  %19 = zext i32 %17 to i64
  %20 = or i64 %18, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 67
  br i1 %24, label %25, label %31

25:                                               ; preds = %14
  %26 = add i64 %11, 23
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, -2
  %30 = icmp eq i32 %29, 6
  br i1 %30, label %56, label %31

31:                                               ; preds = %14, %9, %6, %25
  %32 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #10
  %33 = icmp eq %"class.v8::Value"* %32, null
  br i1 %33, label %56, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.v8::Value"* %32 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 3
  %38 = icmp eq i64 %37, 1
  br i1 %38, label %39, label %56

39:                                               ; preds = %34
  %40 = add i64 %36, -1
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = and i64 %36, -4294967296
  %44 = zext i32 %42 to i64
  %45 = or i64 %43, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load i16, i16* %47, align 2
  %49 = icmp eq i16 %48, 67
  br i1 %49, label %50, label %56

50:                                               ; preds = %39
  %51 = add i64 %36, 23
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, -2
  %55 = icmp ne i32 %54, 10
  br label %56

56:                                               ; preds = %50, %39, %34, %31, %25, %1
  %57 = phi i1 [ false, %25 ], [ false, %1 ], [ true, %31 ], [ %55, %50 ], [ true, %34 ], [ true, %39 ]
  ret i1 %57
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink10Dictionary3GetINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.absl::optional"* noalias sret, %"class.blink::Dictionary"*, %"class.WTF::StringView"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::Local.217", align 8
  %6 = alloca %"class.v8::Local.217", align 8
  %7 = bitcast %"class.v8::Local.217"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  %8 = getelementptr inbounds %"class.v8::Local.217", %"class.v8::Local.217"* %6, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %1, i64 0, i32 0
  %10 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %11 = icmp eq %"class.v8::Isolate"* %10, null
  %12 = bitcast %"class.v8::Local.217"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #10
  br i1 %11, label %13, label %14

13:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  br label %18

14:                                               ; preds = %4
  %15 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %10, %"class.WTF::StringView"* dereferenceable(24) %2) #10
  %16 = bitcast %"class.v8::Local.217"* %5 to %"class.v8::String"**
  store %"class.v8::String"* %15, %"class.v8::String"** %16, align 8
  %17 = call zeroext i1 @_ZNK5blink10Dictionary11GetInternalERKN2v85LocalINS1_5ValueEEERS4_RNS_14ExceptionStateE(%"class.blink::Dictionary"* %1, %"class.v8::Local.217"* nonnull dereferenceable(8) %5, %"class.v8::Local.217"* nonnull dereferenceable(8) %6, %"class.blink::ExceptionState"* dereferenceable(72) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #10
  br i1 %17, label %20, label %18

18:                                               ; preds = %13, %14
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %19, align 8
  br label %71

20:                                               ; preds = %14
  %21 = load %"class.v8::Value"*, %"class.v8::Value"** %8, align 8
  %22 = bitcast %"class.v8::Value"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 3
  %25 = icmp eq i64 %24, 1
  br i1 %25, label %26, label %45

26:                                               ; preds = %20
  %27 = add i64 %23, -1
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i64 %23, -4294967296
  %31 = zext i32 %29 to i64
  %32 = or i64 %30, %31
  %33 = add i64 %32, 7
  %34 = inttoptr i64 %33 to i16*
  %35 = load i16, i16* %34, align 2
  %36 = icmp eq i16 %35, 67
  br i1 %36, label %37, label %45

37:                                               ; preds = %26
  %38 = add i64 %23, 23
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, -2
  %42 = icmp eq i32 %41, 10
  br i1 %42, label %43, label %45

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %44, align 8
  br label %71

45:                                               ; preds = %26, %20, %37
  %46 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %9, align 8
  %47 = call %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %46, %"class.v8::Value"* %21, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %48 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %50, label %52, label %56

52:                                               ; preds = %45
  %53 = ptrtoint %"class.WTF::StringImpl"* %47 to i64
  store i8 1, i8* %51, align 8
  %54 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %55 = bitcast %"class.WTF::String"* %54 to i64*
  store i64 %53, i64* %55, align 8
  br label %71

56:                                               ; preds = %45
  store i8 0, i8* %51, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #10
  br label %71

71:                                               ; preds = %70, %67, %56, %52, %43, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8, double } @_ZNK5blink10Dictionary3GetINS_30IDLFloatingPointNumberTypeBaseIdLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::Dictionary"*, %"class.WTF::StringView"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::Local.217", align 8
  %5 = alloca %"class.v8::Local.217", align 8
  %6 = bitcast %"class.v8::Local.217"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.v8::Local.217", %"class.v8::Local.217"* %5, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = icmp eq %"class.v8::Isolate"* %9, null
  %11 = bitcast %"class.v8::Local.217"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  br i1 %10, label %12, label %13

12:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %47

13:                                               ; preds = %3
  %14 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %9, %"class.WTF::StringView"* dereferenceable(24) %1) #10
  %15 = bitcast %"class.v8::Local.217"* %4 to %"class.v8::String"**
  store %"class.v8::String"* %14, %"class.v8::String"** %15, align 8
  %16 = call zeroext i1 @_ZNK5blink10Dictionary11GetInternalERKN2v85LocalINS1_5ValueEEERS4_RNS_14ExceptionStateE(%"class.blink::Dictionary"* %0, %"class.v8::Local.217"* nonnull dereferenceable(8) %4, %"class.v8::Local.217"* nonnull dereferenceable(8) %5, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br i1 %16, label %17, label %47

17:                                               ; preds = %13
  %18 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %19 = bitcast %"class.v8::Value"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 3
  %22 = icmp eq i64 %21, 1
  br i1 %22, label %23, label %40

23:                                               ; preds = %17
  %24 = add i64 %20, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %20, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  %33 = icmp eq i16 %32, 67
  br i1 %33, label %34, label %40

34:                                               ; preds = %23
  %35 = add i64 %20, 23
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, -2
  %39 = icmp eq i32 %38, 10
  br i1 %39, label %47, label %40

40:                                               ; preds = %23, %17, %34
  %41 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %42 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %41, %"class.v8::Value"* %18, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  %46 = zext i1 %45 to i8
  br label %47

47:                                               ; preds = %40, %34, %13, %12
  %48 = phi double [ undef, %12 ], [ undef, %13 ], [ undef, %34 ], [ %42, %40 ]
  %49 = phi i8 [ 0, %12 ], [ 0, %13 ], [ 0, %34 ], [ %46, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %50 = insertvalue { i8, double } undef, i8 %49, 0
  %51 = insertvalue { i8, double } %50, double %48, 1
  ret { i8, double } %51
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22CanvasFilterDictionary17hasConvolveMatrixEv(%"class.blink::CanvasFilterDictionary"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CanvasFilterDictionary", %"class.blink::CanvasFilterDictionary"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.blink::CanvasFilterDictionary", %"class.blink::CanvasFilterDictionary"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #10
  %8 = icmp eq %"class.v8::Value"* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.v8::Value"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 3
  %13 = icmp eq i64 %12, 1
  br i1 %13, label %14, label %31

14:                                               ; preds = %9
  %15 = add i64 %11, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = and i64 %11, -4294967296
  %19 = zext i32 %17 to i64
  %20 = or i64 %18, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 67
  br i1 %24, label %25, label %31

25:                                               ; preds = %14
  %26 = add i64 %11, 23
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, -2
  %30 = icmp eq i32 %29, 6
  br i1 %30, label %56, label %31

31:                                               ; preds = %14, %9, %6, %25
  %32 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #10
  %33 = icmp eq %"class.v8::Value"* %32, null
  br i1 %33, label %56, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.v8::Value"* %32 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 3
  %38 = icmp eq i64 %37, 1
  br i1 %38, label %39, label %56

39:                                               ; preds = %34
  %40 = add i64 %36, -1
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = and i64 %36, -4294967296
  %44 = zext i32 %42 to i64
  %45 = or i64 %43, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load i16, i16* %47, align 2
  %49 = icmp eq i16 %48, 67
  br i1 %49, label %50, label %56

50:                                               ; preds = %39
  %51 = add i64 %36, 23
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, -2
  %55 = icmp ne i32 %54, 10
  br label %56

56:                                               ; preds = %50, %39, %34, %31, %25, %1
  %57 = phi i1 [ false, %25 ], [ false, %1 ], [ true, %31 ], [ %55, %50 ], [ true, %34 ], [ true, %39 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink22CanvasFilterDictionary20hasComponentTransferEv(%"class.blink::CanvasFilterDictionary"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CanvasFilterDictionary", %"class.blink::CanvasFilterDictionary"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.blink::CanvasFilterDictionary", %"class.blink::CanvasFilterDictionary"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #10
  %8 = icmp eq %"class.v8::Value"* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.v8::Value"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 3
  %13 = icmp eq i64 %12, 1
  br i1 %13, label %14, label %31

14:                                               ; preds = %9
  %15 = add i64 %11, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = and i64 %11, -4294967296
  %19 = zext i32 %17 to i64
  %20 = or i64 %18, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 67
  br i1 %24, label %25, label %31

25:                                               ; preds = %14
  %26 = add i64 %11, 23
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, -2
  %30 = icmp eq i32 %29, 6
  br i1 %30, label %56, label %31

31:                                               ; preds = %14, %9, %6, %25
  %32 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #10
  %33 = icmp eq %"class.v8::Value"* %32, null
  br i1 %33, label %56, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.v8::Value"* %32 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 3
  %38 = icmp eq i64 %37, 1
  br i1 %38, label %39, label %56

39:                                               ; preds = %34
  %40 = add i64 %36, -1
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = and i64 %36, -4294967296
  %44 = zext i32 %42 to i64
  %45 = or i64 %43, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load i16, i16* %47, align 2
  %49 = icmp eq i16 %48, 67
  br i1 %49, label %50, label %56

50:                                               ; preds = %39
  %51 = add i64 %36, 23
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, -2
  %55 = icmp ne i32 %54, 10
  br label %56

56:                                               ; preds = %50, %39, %34, %31, %25, %1
  %57 = phi i1 [ false, %25 ], [ false, %1 ], [ true, %31 ], [ %55, %50 ], [ true, %34 ], [ true, %39 ]
  ret i1 %57
}

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15FilterOperationEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15FilterOperationEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15FilterOperationEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #3 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #10
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %21, i8* %22) #10
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #10
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #10
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !8

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #10
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15FilterOperationEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::FilterOperation"*
  %4 = bitcast i8* %1 to void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)**, void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)*, void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)*, void (%"class.blink::FilterOperation"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::FilterOperation"* %3, %"class.blink::Visitor"* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15FilterOperationEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::FilterOperation"*
  %3 = bitcast i8* %0 to void (%"class.blink::FilterOperation"*)***
  %4 = load void (%"class.blink::FilterOperation"*)**, void (%"class.blink::FilterOperation"*)*** %3, align 8
  %5 = load void (%"class.blink::FilterOperation"*)*, void (%"class.blink::FilterOperation"*)** %4, align 8
  tail call void %5(%"class.blink::FilterOperation"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15FilterOperationEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink15FilterOperation5TraceEPNS_7VisitorE(%"class.blink::FilterOperation"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15FilterOperation10IsSameTypeERKS0_(%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15FilterOperation14AffectsOpacityEv(%"class.blink::FilterOperation"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15FilterOperation11MovesPixelsEv(%"class.blink::FilterOperation"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { <2 x float>, <2 x float> } @_ZNK5blink15FilterOperation7MapRectERKNS_9FloatRectE(%"class.blink::FilterOperation"*, %"class.blink::FloatRect"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::FloatRect"* %1 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1
  %6 = bitcast %"class.blink::FloatSize"* %5 to <2 x float>*
  %7 = load <2 x float>, <2 x float>* %6, align 4
  %8 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %4, 0
  %9 = insertvalue { <2 x float>, <2 x float> } %8, <2 x float> %7, 1
  ret { <2 x float>, <2 x float> } %9
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #1

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink10Dictionary3GetINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.absl::optional.248"* noalias sret, %"class.blink::Dictionary"*, %"class.WTF::StringView"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::Local.217", align 8
  %6 = alloca %"class.v8::Local.217", align 8
  %7 = alloca %"class.WTF::Vector.212", align 8
  %8 = bitcast %"class.v8::Local.217"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.v8::Local.217", %"class.v8::Local.217"* %6, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %1, i64 0, i32 0
  %11 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %10, align 8
  %12 = icmp eq %"class.v8::Isolate"* %11, null
  %13 = bitcast %"class.v8::Local.217"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  br i1 %12, label %14, label %15

14:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  br label %19

15:                                               ; preds = %4
  %16 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %11, %"class.WTF::StringView"* dereferenceable(24) %2) #10
  %17 = bitcast %"class.v8::Local.217"* %5 to %"class.v8::String"**
  store %"class.v8::String"* %16, %"class.v8::String"** %17, align 8
  %18 = call zeroext i1 @_ZNK5blink10Dictionary11GetInternalERKN2v85LocalINS1_5ValueEEERS4_RNS_14ExceptionStateE(%"class.blink::Dictionary"* %1, %"class.v8::Local.217"* nonnull dereferenceable(8) %5, %"class.v8::Local.217"* nonnull dereferenceable(8) %6, %"class.blink::ExceptionState"* dereferenceable(72) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  br i1 %18, label %21, label %19

19:                                               ; preds = %14, %15
  %20 = getelementptr inbounds %"class.absl::optional.248", %"class.absl::optional.248"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %20, align 8
  br label %77

21:                                               ; preds = %15
  %22 = load %"class.v8::Value"*, %"class.v8::Value"** %9, align 8
  %23 = bitcast %"class.v8::Value"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 3
  %26 = icmp eq i64 %25, 1
  br i1 %26, label %27, label %46

27:                                               ; preds = %21
  %28 = add i64 %24, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i64 %24, -4294967296
  %32 = zext i32 %30 to i64
  %33 = or i64 %31, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 67
  br i1 %37, label %38, label %46

38:                                               ; preds = %27
  %39 = add i64 %24, 23
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = and i32 %41, -2
  %43 = icmp eq i32 %42, 10
  br i1 %43, label %44, label %46

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.absl::optional.248", %"class.absl::optional.248"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %45, align 8
  br label %77

46:                                               ; preds = %27, %21, %38
  %47 = bitcast %"class.WTF::Vector.212"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #10
  %48 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %7, i64 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %7, i64 0, i32 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %7, i64 0, i32 0, i32 0, i32 2
  %51 = bitcast %"class.WTF::Vector.212"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 16, i1 false)
  %52 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %10, align 8
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.212"* nonnull sret %7, %"class.v8::Isolate"* %52, %"class.v8::Value"* %22, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %53 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.absl::optional.248", %"class.absl::optional.248"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %55, label %57, label %67

57:                                               ; preds = %46
  store i8 1, i8* %56, align 8
  %58 = getelementptr inbounds %"class.absl::optional.248", %"class.absl::optional.248"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %59 = getelementptr inbounds %"class.absl::optional.248", %"class.absl::optional.248"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %60 = getelementptr inbounds %"class.absl::optional.248", %"class.absl::optional.248"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %61 = bitcast %"class.WTF::Vector.212"* %7 to i64*
  %62 = bitcast %"class.WTF::Vector.212"* %58 to i64*
  store i64 0, i64* %62, align 8
  %63 = load i64, i64* %61, align 8
  %64 = bitcast %"class.WTF::Vector.212"* %58 to i64*
  store atomic i64 0, i64* %61 monotonic, align 8
  store atomic i64 %63, i64* %64 monotonic, align 8
  %65 = load i32, i32* %49, align 8
  store i32 %65, i32* %59, align 8
  store i32 0, i32* %49, align 8
  %66 = load i32, i32* %50, align 4
  store i32 %66, i32* %60, align 4
  store i32 0, i32* %50, align 4
  br label %76

67:                                               ; preds = %46
  store i8 0, i8* %56, align 8
  %68 = load float*, float** %48, align 8
  %69 = bitcast float* %68 to i8*
  %70 = icmp eq float* %68, null
  br i1 %70, label %76, label %71, !prof !13

71:                                               ; preds = %67
  %72 = load i32, i32* %50, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %75, label %74, !prof !8

74:                                               ; preds = %71
  store i32 0, i32* %50, align 4
  br label %75

75:                                               ; preds = %74, %71
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %69) #10
  store float* null, float** %48, align 8
  br label %76

76:                                               ; preds = %57, %67, %75
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #10
  br label %77

77:                                               ; preds = %76, %44, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.212"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #10
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.212"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #10
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.15, i64 0, i64 0)) #10
  %12 = bitcast %"class.WTF::Vector.212"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #10
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #10
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::Vector.212"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #10
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.16, i64 0, i64 0)) #10
  %26 = bitcast %"class.WTF::Vector.212"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #10
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.212"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #10
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

declare zeroext i1 @_ZNK5blink10Dictionary11GetInternalERKN2v85LocalINS1_5ValueEEERS4_RNS_14ExceptionStateE(%"class.blink::Dictionary"*, %"class.v8::Local.217"* dereferenceable(8), %"class.v8::Local.217"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #10
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #10
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #10
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !8

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #10
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #10
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !8

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #10
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENSB_5LocalINSB_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.212"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.212", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca float, align 4
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #10
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 536346624
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i64 0, i64 0)) #10
  %12 = bitcast %"class.WTF::Vector.212"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #10
  br label %95

13:                                               ; preds = %4
  %14 = bitcast %"class.WTF::Vector.212"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #10
  %18 = icmp eq i32 %8, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %9) #10
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #10
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.212"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 2
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi i32 [ 0, %13 ], [ %25, %19 ]
  %28 = phi i64 [ 0, %13 ], [ %22, %19 ]
  %29 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #10
  %30 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #10
  %31 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #10
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %26
  %34 = bitcast %"class.WTF::Vector.212"* %5 to i64*
  br label %76

35:                                               ; preds = %26
  %36 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %37 = bitcast float* %7 to i8*
  %38 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %39

39:                                               ; preds = %35, %67
  %40 = phi i32 [ 0, %35 ], [ %68, %67 ]
  %41 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %36, %"class.v8::Context"* %29, i32 %40) #10
  %42 = icmp eq %"class.v8::Value"* %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #10
  %45 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %46, i64 5
  %48 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %47, align 8
  call void %48(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %44) #10
  %49 = bitcast %"class.WTF::Vector.212"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #10
  br label %85

50:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #10
  %51 = call float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %41, %"class.blink::ExceptionState"* dereferenceable(72) %3) #10
  store float %51, float* %7, align 4
  %52 = load i32, i32* %38, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %65

54:                                               ; preds = %50
  %55 = load i32, i32* %17, align 4
  %56 = load i32, i32* %16, align 8
  %57 = icmp eq i32 %55, %56
  br i1 %57, label %64, label %58, !prof !8

58:                                               ; preds = %54
  %59 = load float*, float** %15, align 8
  %60 = zext i32 %55 to i64
  %61 = getelementptr inbounds float, float* %59, i64 %60
  store float %51, float* %61, align 4
  %62 = load i32, i32* %17, align 4
  %63 = add i32 %62, 1
  store i32 %63, i32* %17, align 4
  br label %67

64:                                               ; preds = %54
  call void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_(%"class.WTF::Vector.212"* nonnull %5, float* nonnull dereferenceable(4) %7) #10
  br label %67

65:                                               ; preds = %50
  %66 = bitcast %"class.WTF::Vector.212"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #10
  br label %85

67:                                               ; preds = %58, %64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #10
  %68 = add nuw i32 %40, 1
  %69 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #10
  %70 = icmp ult i32 %68, %69
  br i1 %70, label %39, label %71

71:                                               ; preds = %67
  %72 = bitcast %"class.WTF::Vector.212"* %5 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = load i32, i32* %16, align 8
  %75 = load i32, i32* %17, align 4
  br label %76

76:                                               ; preds = %33, %71
  %77 = phi i64* [ %34, %33 ], [ %72, %71 ]
  %78 = phi i32 [ 0, %33 ], [ %75, %71 ]
  %79 = phi i32 [ %27, %33 ], [ %74, %71 ]
  %80 = phi i64 [ %28, %33 ], [ %73, %71 ]
  %81 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %0, i64 0, i32 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %0, i64 0, i32 0, i32 0, i32 2
  %83 = bitcast %"class.WTF::Vector.212"* %0 to i64*
  store i64 0, i64* %83, align 8
  %84 = bitcast %"class.WTF::Vector.212"* %0 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store atomic i64 %80, i64* %84 monotonic, align 8
  store i32 %79, i32* %81, align 8
  store i32 0, i32* %16, align 8
  store i32 %78, i32* %82, align 4
  store i32 0, i32* %17, align 4
  br label %85

85:                                               ; preds = %43, %65, %76
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #10
  %86 = load float*, float** %15, align 8
  %87 = icmp eq float* %86, null
  %88 = bitcast float* %86 to i8*
  br i1 %87, label %94, label %89, !prof !13

89:                                               ; preds = %85
  %90 = load i32, i32* %17, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %93, label %92, !prof !8

92:                                               ; preds = %89
  store i32 0, i32* %17, align 4
  br label %93

93:                                               ; preds = %92, %89
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %88) #10
  store float* null, float** %15, align 8
  br label %94

94:                                               ; preds = %85, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  br label %95

95:                                               ; preds = %94, %11
  ret void
}

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE0EEEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.212"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.212", align 8
  %6 = alloca float, align 4
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #10
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #10
  %9 = bitcast %"class.WTF::Vector.212"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #10
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #10
  br i1 %13, label %14, label %41

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast float* %6 to i8*
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %18

18:                                               ; preds = %14, %39
  %19 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %20 = icmp eq %"class.v8::Value"* %19, null
  br i1 %20, label %21, label %22, !prof !8

21:                                               ; preds = %18
  call void @_ZN2v82V812ToLocalEmptyEv() #10
  br label %22

22:                                               ; preds = %18, %21
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #10
  %23 = call float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %19, %"class.blink::ExceptionState"* dereferenceable(72) %3) #10
  store float %23, float* %6, align 4
  %24 = load i32, i32* %17, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.WTF::Vector.212"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #10
  br label %56

28:                                               ; preds = %22
  %29 = load i32, i32* %12, align 4
  %30 = load i32, i32* %11, align 8
  %31 = icmp eq i32 %29, %30
  br i1 %31, label %38, label %32, !prof !8

32:                                               ; preds = %28
  %33 = load float*, float** %10, align 8
  %34 = zext i32 %29 to i64
  %35 = getelementptr inbounds float, float* %33, i64 %34
  store float %23, float* %35, align 4
  %36 = load i32, i32* %12, align 4
  %37 = add i32 %36, 1
  store i32 %37, i32* %12, align 4
  br label %39

38:                                               ; preds = %28
  call void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_(%"class.WTF::Vector.212"* nonnull %5, float* nonnull dereferenceable(4) %6) #10
  br label %39

39:                                               ; preds = %32, %38
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #10
  %40 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #10
  br i1 %40, label %18, label %41

41:                                               ; preds = %39, %4
  %42 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %41
  %46 = bitcast %"class.WTF::Vector.212"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #10
  br label %56

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %0, i64 0, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %0, i64 0, i32 0, i32 0, i32 2
  %50 = bitcast %"class.WTF::Vector.212"* %5 to i64*
  %51 = bitcast %"class.WTF::Vector.212"* %0 to i64*
  store i64 0, i64* %51, align 8
  %52 = load i64, i64* %50, align 8
  %53 = bitcast %"class.WTF::Vector.212"* %0 to i64*
  store atomic i64 0, i64* %50 monotonic, align 8
  store atomic i64 %52, i64* %53 monotonic, align 8
  %54 = load i32, i32* %11, align 8
  store i32 %54, i32* %48, align 8
  store i32 0, i32* %11, align 8
  %55 = load i32, i32* %12, align 4
  store i32 %55, i32* %49, align 4
  store i32 0, i32* %12, align 4
  br label %56

56:                                               ; preds = %26, %47, %45
  %57 = load float*, float** %10, align 8
  %58 = icmp eq float* %57, null
  %59 = bitcast float* %57 to i8*
  br i1 %58, label %65, label %60, !prof !13

60:                                               ; preds = %56
  %61 = load i32, i32* %12, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %64, label %63, !prof !8

63:                                               ; preds = %60
  store i32 0, i32* %12, align 4
  br label %64

64:                                               ; preds = %63, %60
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %59) #10
  store float* null, float** %10, align 8
  br label %65

65:                                               ; preds = %56, %64
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  ret void
}

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.19, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare float @_ZN5blink17ToRestrictedFloatEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIfEEvOT_(%"class.WTF::Vector.212"*, float* dereferenceable(4)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call float* @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPf(%"class.WTF::Vector.212"* %0, i32 %5, float* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load float*, float** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds float, float* %8, i64 %10
  %12 = bitcast float* %6 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = bitcast float* %11 to i32*
  store i32 %13, i32* %14, align 4
  %15 = load i32, i32* %3, align 4
  %16 = add i32 %15, 1
  store i32 %16, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float* @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPf(%"class.WTF::Vector.212"*, i32, float*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load float*, float** %4, align 8
  %6 = icmp ugt float* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds float, float* %5, i64 %10
  %12 = icmp ugt float* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !13

24:                                               ; preds = %13
  %25 = icmp eq float* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %26) #10
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #10
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.212"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 2
  %36 = ptrtoint i8* %28 to i64
  %37 = load float*, float** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne float* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast float* %37 to i8*
  br i1 %40, label %42, label %49, !prof !13

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %41, i64 %46, i1 false) #10
  %47 = bitcast %"class.WTF::Vector.212"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #10
  %51 = bitcast %"class.WTF::Vector.212"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint float* %2 to i64
  %55 = ptrtoint float* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 2
  %58 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !13

68:                                               ; preds = %53
  %69 = icmp eq float* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %70) #10
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #10
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.212"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load float*, float** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne float* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast float* %77 to i8*
  br i1 %80, label %82, label %88, !prof !13

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %72, i8* nonnull align 4 %81, i64 %85, i1 false) #10
  %86 = bitcast %"class.WTF::Vector.212"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #10
  %90 = bitcast %"class.WTF::Vector.212"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 2
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to float*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi float* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds float, float* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi float* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret float* %99
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26ColorMatrixFilterOperationD2Ev(%"class.blink::ColorMatrixFilterOperation"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ColorMatrixFilterOperation", %"class.blink::ColorMatrixFilterOperation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink26ColorMatrixFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ColorMatrixFilterOperation", %"class.blink::ColorMatrixFilterOperation"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  %6 = bitcast float* %4 to i8*
  br i1 %5, label %13, label %7, !prof !13

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ColorMatrixFilterOperation", %"class.blink::ColorMatrixFilterOperation"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !8

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #10
  store float* null, float** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26ColorMatrixFilterOperationD0Ev(%"class.blink::ColorMatrixFilterOperation"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ColorMatrixFilterOperation", %"class.blink::ColorMatrixFilterOperation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink26ColorMatrixFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ColorMatrixFilterOperation", %"class.blink::ColorMatrixFilterOperation"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  %6 = bitcast float* %4 to i8*
  br i1 %5, label %13, label %7, !prof !13

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ColorMatrixFilterOperation", %"class.blink::ColorMatrixFilterOperation"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !8

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #10
  store float* null, float** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink26ColorMatrixFilterOperationeqERKNS_15FilterOperationE(%"class.blink::ColorMatrixFilterOperation"*, %"class.blink::FilterOperation"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::ColorMatrixFilterOperation"* %0 to %"class.blink::FilterOperation"*
  %4 = bitcast %"class.blink::ColorMatrixFilterOperation"* %0 to i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)***
  %5 = load i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)**, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)** %5, i64 4
  %7 = load i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::FilterOperation"* %3, %"class.blink::FilterOperation"* dereferenceable(16) %1) #10
  br i1 %8, label %9, label %29

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::ColorMatrixFilterOperation", %"class.blink::ColorMatrixFilterOperation"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 1
  %12 = getelementptr inbounds %"class.blink::ColorMatrixFilterOperation", %"class.blink::ColorMatrixFilterOperation"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 1, i32 2
  %15 = bitcast [4 x i8]* %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %13, %16
  br i1 %17, label %18, label %29

18:                                               ; preds = %9
  %19 = icmp eq i32 %13, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %18
  %21 = bitcast %"class.WTF::Vector.212"* %10 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.blink::FilterOperation"* %11 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = zext i32 %13 to i64
  %26 = shl nuw nsw i64 %25, 2
  %27 = tail call i32 @bcmp(i8* %22, i8* %24, i64 %26) #10
  %28 = icmp eq i32 %27, 0
  br label %29

29:                                               ; preds = %20, %18, %9, %2
  %30 = phi i1 [ false, %2 ], [ %28, %20 ], [ false, %9 ], [ true, %18 ]
  ret i1 %30
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink10Dictionary3GetINS_18IDLIntegerTypeBaseIsLNS_8bindings18IDLIntegerConvModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::Dictionary"*, %"class.WTF::StringView"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::Local.217", align 8
  %5 = alloca %"class.v8::Local.217", align 8
  %6 = bitcast %"class.v8::Local.217"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.v8::Local.217", %"class.v8::Local.217"* %5, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = icmp eq %"class.v8::Isolate"* %9, null
  %11 = bitcast %"class.v8::Local.217"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  br i1 %10, label %12, label %13

12:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %49

13:                                               ; preds = %3
  %14 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %9, %"class.WTF::StringView"* dereferenceable(24) %1) #10
  %15 = bitcast %"class.v8::Local.217"* %4 to %"class.v8::String"**
  store %"class.v8::String"* %14, %"class.v8::String"** %15, align 8
  %16 = call zeroext i1 @_ZNK5blink10Dictionary11GetInternalERKN2v85LocalINS1_5ValueEEERS4_RNS_14ExceptionStateE(%"class.blink::Dictionary"* %0, %"class.v8::Local.217"* nonnull dereferenceable(8) %4, %"class.v8::Local.217"* nonnull dereferenceable(8) %5, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br i1 %16, label %17, label %49

17:                                               ; preds = %13
  %18 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %19 = bitcast %"class.v8::Value"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 3
  %22 = icmp eq i64 %21, 1
  br i1 %22, label %23, label %40

23:                                               ; preds = %17
  %24 = add i64 %20, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %20, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  %33 = icmp eq i16 %32, 67
  br i1 %33, label %34, label %40

34:                                               ; preds = %23
  %35 = add i64 %20, 23
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, -2
  %39 = icmp eq i32 %38, 10
  br i1 %39, label %49, label %40

40:                                               ; preds = %23, %17, %34
  %41 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %42 = call signext i16 @_ZN5blink7ToInt16EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %41, %"class.v8::Value"* %18, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  %43 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  %46 = zext i16 %42 to i32
  %47 = shl nuw i32 %46, 16
  %48 = zext i1 %45 to i32
  br label %49

49:                                               ; preds = %40, %34, %13, %12
  %50 = phi i32 [ 0, %12 ], [ 0, %13 ], [ 0, %34 ], [ %47, %40 ]
  %51 = phi i32 [ 0, %12 ], [ 0, %13 ], [ 0, %34 ], [ %48, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %52 = or i32 %51, %50
  ret i32 %52
}

declare dereferenceable(16) %"class.blink::SVGEnumerationMap"* @_ZN5blink17GetEnumerationMapINS_16FEConvolveMatrix12EdgeModeTypeEEERKNS_17SVGEnumerationMapEv() local_unnamed_addr #1

declare zeroext i16 @_ZNK5blink17SVGEnumerationMap13ValueFromNameERKN3WTF6StringE(%"class.blink::SVGEnumerationMap"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i16 @_ZNK5blink10Dictionary3GetINS_10IDLBooleanEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::Dictionary"*, %"class.WTF::StringView"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::Local.217", align 8
  %5 = alloca %"class.v8::Local.217", align 8
  %6 = bitcast %"class.v8::Local.217"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.v8::Local.217", %"class.v8::Local.217"* %5, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %0, i64 0, i32 0
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %10 = icmp eq %"class.v8::Isolate"* %9, null
  %11 = bitcast %"class.v8::Local.217"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #10
  br i1 %10, label %12, label %13

12:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br label %56

13:                                               ; preds = %3
  %14 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %9, %"class.WTF::StringView"* dereferenceable(24) %1) #10
  %15 = bitcast %"class.v8::Local.217"* %4 to %"class.v8::String"**
  store %"class.v8::String"* %14, %"class.v8::String"** %15, align 8
  %16 = call zeroext i1 @_ZNK5blink10Dictionary11GetInternalERKN2v85LocalINS1_5ValueEEERS4_RNS_14ExceptionStateE(%"class.blink::Dictionary"* %0, %"class.v8::Local.217"* nonnull dereferenceable(8) %4, %"class.v8::Local.217"* nonnull dereferenceable(8) %5, %"class.blink::ExceptionState"* dereferenceable(72) %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #10
  br i1 %16, label %17, label %56

17:                                               ; preds = %13
  %18 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %19 = bitcast %"class.v8::Value"* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 3
  %22 = icmp eq i64 %21, 1
  br i1 %22, label %23, label %40

23:                                               ; preds = %17
  %24 = add i64 %20, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %20, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  %33 = icmp eq i16 %32, 67
  br i1 %33, label %34, label %40

34:                                               ; preds = %23
  %35 = add i64 %20, 23
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, -2
  %39 = icmp eq i32 %38, 10
  br i1 %39, label %56, label %40

40:                                               ; preds = %23, %17, %34
  %41 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  %42 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* %18) #10
  br i1 %42, label %43, label %46, !prof !13

43:                                               ; preds = %40
  %44 = bitcast %"class.v8::Value"* %18 to %"class.v8::Boolean"*
  %45 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* %44) #10
  br label %48

46:                                               ; preds = %40
  %47 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* %18, %"class.v8::Isolate"* %41) #10
  br label %48

48:                                               ; preds = %43, %46
  %49 = phi i1 [ %45, %43 ], [ %47, %46 ]
  %50 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  %51 = load i32, i32* %50, align 8
  %52 = icmp eq i32 %51, 0
  %53 = zext i1 %49 to i16
  %54 = shl nuw nsw i16 %53, 8
  %55 = zext i1 %52 to i16
  br label %56

56:                                               ; preds = %48, %34, %13, %12
  %57 = phi i16 [ 0, %12 ], [ 0, %13 ], [ 0, %34 ], [ %54, %48 ]
  %58 = phi i16 [ 0, %12 ], [ 0, %13 ], [ 0, %34 ], [ %55, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %59 = or i16 %58, %57
  ret i16 %59
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink10Dictionary3GetINS_11IDLSequenceINS2_INS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.absl::optional.404"* noalias sret, %"class.blink::Dictionary"*, %"class.WTF::StringView"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::Local.217", align 8
  %6 = alloca %"class.v8::Local.217", align 8
  %7 = alloca %"class.WTF::Vector.409", align 8
  %8 = bitcast %"class.v8::Local.217"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.v8::Local.217", %"class.v8::Local.217"* %6, i64 0, i32 0
  store %"class.v8::Value"* null, %"class.v8::Value"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %1, i64 0, i32 0
  %11 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %10, align 8
  %12 = icmp eq %"class.v8::Isolate"* %11, null
  %13 = bitcast %"class.v8::Local.217"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  br i1 %12, label %14, label %15

14:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  br label %19

15:                                               ; preds = %4
  %16 = tail call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* nonnull %11, %"class.WTF::StringView"* dereferenceable(24) %2) #10
  %17 = bitcast %"class.v8::Local.217"* %5 to %"class.v8::String"**
  store %"class.v8::String"* %16, %"class.v8::String"** %17, align 8
  %18 = call zeroext i1 @_ZNK5blink10Dictionary11GetInternalERKN2v85LocalINS1_5ValueEEERS4_RNS_14ExceptionStateE(%"class.blink::Dictionary"* %1, %"class.v8::Local.217"* nonnull dereferenceable(8) %5, %"class.v8::Local.217"* nonnull dereferenceable(8) %6, %"class.blink::ExceptionState"* dereferenceable(72) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  br i1 %18, label %21, label %19

19:                                               ; preds = %14, %15
  %20 = getelementptr inbounds %"class.absl::optional.404", %"class.absl::optional.404"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %20, align 8
  br label %98

21:                                               ; preds = %15
  %22 = load %"class.v8::Value"*, %"class.v8::Value"** %9, align 8
  %23 = bitcast %"class.v8::Value"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 3
  %26 = icmp eq i64 %25, 1
  br i1 %26, label %27, label %46

27:                                               ; preds = %21
  %28 = add i64 %24, -1
  %29 = inttoptr i64 %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i64 %24, -4294967296
  %32 = zext i32 %30 to i64
  %33 = or i64 %31, %32
  %34 = add i64 %33, 7
  %35 = inttoptr i64 %34 to i16*
  %36 = load i16, i16* %35, align 2
  %37 = icmp eq i16 %36, 67
  br i1 %37, label %38, label %46

38:                                               ; preds = %27
  %39 = add i64 %24, 23
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = and i32 %41, -2
  %43 = icmp eq i32 %42, 10
  br i1 %43, label %44, label %46

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.absl::optional.404", %"class.absl::optional.404"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %45, align 8
  br label %98

46:                                               ; preds = %27, %21, %38
  %47 = bitcast %"class.WTF::Vector.409"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %47) #10
  %48 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %7, i64 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %7, i64 0, i32 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %7, i64 0, i32 0, i32 0, i32 2
  %51 = bitcast %"class.WTF::Vector.409"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 -86, i64 16, i1 false)
  %52 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %10, align 8
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS1_INS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEEEvE11NativeValueEPN2v87IsolateENS9_5LocalINS9_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.409"* nonnull sret %7, %"class.v8::Isolate"* %52, %"class.v8::Value"* %22, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %53 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.absl::optional.404", %"class.absl::optional.404"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %55, label %57, label %67

57:                                               ; preds = %46
  store i8 1, i8* %56, align 8
  %58 = getelementptr inbounds %"class.absl::optional.404", %"class.absl::optional.404"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %59 = getelementptr inbounds %"class.absl::optional.404", %"class.absl::optional.404"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %60 = getelementptr inbounds %"class.absl::optional.404", %"class.absl::optional.404"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %61 = bitcast %"class.WTF::Vector.409"* %7 to i64*
  %62 = bitcast %"class.WTF::Vector.409"* %58 to i64*
  store i64 0, i64* %62, align 8
  %63 = load i64, i64* %61, align 8
  %64 = bitcast %"class.WTF::Vector.409"* %58 to i64*
  store atomic i64 0, i64* %61 monotonic, align 8
  store atomic i64 %63, i64* %64 monotonic, align 8
  %65 = load i32, i32* %49, align 8
  store i32 %65, i32* %59, align 8
  store i32 0, i32* %49, align 8
  %66 = load i32, i32* %50, align 4
  store i32 %66, i32* %60, align 4
  store i32 0, i32* %50, align 4
  br label %97

67:                                               ; preds = %46
  store i8 0, i8* %56, align 8
  %68 = load %"class.WTF::Vector.212"*, %"class.WTF::Vector.212"** %48, align 8
  %69 = icmp eq %"class.WTF::Vector.212"* %68, null
  br i1 %69, label %97, label %70, !prof !13

70:                                               ; preds = %67
  %71 = bitcast %"class.WTF::Vector.212"* %68 to i8*
  %72 = load i32, i32* %50, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %95, label %74, !prof !8

74:                                               ; preds = %70
  %75 = zext i32 %72 to i64
  %76 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %68, i64 %75
  br label %77

77:                                               ; preds = %89, %74
  %78 = phi %"class.WTF::Vector.212"* [ %90, %89 ], [ %68, %74 ]
  %79 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = load float*, float** %79, align 8
  %81 = icmp eq float* %80, null
  %82 = bitcast float* %80 to i8*
  br i1 %81, label %89, label %83, !prof !13

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %78, i64 0, i32 0, i32 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %88, label %87, !prof !8

87:                                               ; preds = %83
  store i32 0, i32* %84, align 4
  br label %88

88:                                               ; preds = %87, %83
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %82) #10
  store float* null, float** %79, align 8
  br label %89

89:                                               ; preds = %88, %77
  %90 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %78, i64 1
  %91 = icmp eq %"class.WTF::Vector.212"* %90, %76
  br i1 %91, label %92, label %77

92:                                               ; preds = %89
  store i32 0, i32* %50, align 4
  %93 = bitcast %"class.WTF::Vector.409"* %7 to i8**
  %94 = load i8*, i8** %93, align 8
  br label %95

95:                                               ; preds = %92, %70
  %96 = phi i8* [ %94, %92 ], [ %71, %70 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %96) #10
  store %"class.WTF::Vector.212"* null, %"class.WTF::Vector.212"** %48, align 8
  br label %97

97:                                               ; preds = %57, %67, %95
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %47) #10
  br label %98

98:                                               ; preds = %97, %44, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS1_INS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEEEvE11NativeValueEPN2v87IsolateENS9_5LocalINS9_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.409"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #10
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENSC_5LocalINSC_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.409"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #10
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.15, i64 0, i64 0)) #10
  %12 = bitcast %"class.WTF::Vector.409"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #10
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #10
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.WTF::Vector.409"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #10
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.16, i64 0, i64 0)) #10
  %26 = bitcast %"class.WTF::Vector.409"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #10
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.409"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #10
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENSC_5LocalINSC_5ArrayEEERNS_14ExceptionStateE(%"class.WTF::Vector.409"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.409", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.WTF::Vector.212", align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #10
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 134086656
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i64 0, i64 0)) #10
  %12 = bitcast %"class.WTF::Vector.409"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #10
  br label %140

13:                                               ; preds = %4
  %14 = bitcast %"class.WTF::Vector.409"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %5, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %5, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #10
  %18 = icmp eq i32 %8, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %13
  %20 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIfLj0ES0_EEEEmm(i64 %9) #10
  %21 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %20, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIfLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  %22 = ptrtoint i8* %21 to i64
  %23 = bitcast %"class.WTF::Vector.409"* %5 to i64*
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = lshr i64 %20, 4
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* %16, align 8
  br label %26

26:                                               ; preds = %13, %19
  %27 = phi i32 [ 0, %13 ], [ %25, %19 ]
  %28 = phi i64 [ 0, %13 ], [ %22, %19 ]
  %29 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #10
  %30 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %30) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #10
  %31 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #10
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = bitcast %"class.WTF::Vector.409"* %5 to i64*
  %35 = bitcast %"class.WTF::Vector.409"* %0 to i8*
  br label %100

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %38 = bitcast %"class.WTF::Vector.212"* %7 to i8*
  %39 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %40 = bitcast %"class.WTF::Vector.409"* %0 to i8*
  %41 = bitcast %"class.WTF::Vector.212"* %7 to i64*
  %42 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %7, i64 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %7, i64 0, i32 0, i32 0, i32 2
  %44 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %7, i64 0, i32 0, i32 0, i32 0
  br label %48

45:                                               ; preds = %92
  %46 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #10
  %47 = icmp ult i32 %94, %46
  br i1 %47, label %48, label %95

48:                                               ; preds = %36, %45
  %49 = phi i32 [ 0, %36 ], [ %94, %45 ]
  %50 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %37, %"class.v8::Context"* %29, i32 %49) #10
  %51 = icmp eq %"class.v8::Value"* %50, null
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #10
  %54 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %55 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %55, i64 5
  %57 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %56, align 8
  call void %57(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %53) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #10
  br label %109

58:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %38) #10
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.212"* nonnull sret %7, %"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %50, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %59 = load i32, i32* %39, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #10
  br label %82

62:                                               ; preds = %58
  %63 = load i32, i32* %17, align 4
  %64 = load i32, i32* %16, align 8
  %65 = icmp eq i32 %63, %64
  br i1 %65, label %81, label %66, !prof !8

66:                                               ; preds = %62
  %67 = load %"class.WTF::Vector.212"*, %"class.WTF::Vector.212"** %15, align 8
  %68 = zext i32 %63 to i64
  %69 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %67, i64 %68
  %70 = bitcast %"class.WTF::Vector.212"* %69 to i8*
  %71 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %67, i64 %68, i32 0, i32 0, i32 1
  %72 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %67, i64 %68, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false) #10
  %73 = load i64, i64* %41, align 8
  %74 = bitcast %"class.WTF::Vector.212"* %69 to i64*
  store atomic i64 0, i64* %41 monotonic, align 8
  store atomic i64 %73, i64* %74 monotonic, align 8
  %75 = load i32, i32* %71, align 4
  %76 = load i32, i32* %42, align 8
  store i32 %76, i32* %71, align 4
  store i32 %75, i32* %42, align 8
  %77 = load i32, i32* %72, align 4
  %78 = load i32, i32* %43, align 4
  store i32 %78, i32* %72, align 4
  store i32 %77, i32* %43, align 4
  %79 = load i32, i32* %17, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %17, align 4
  br label %82

81:                                               ; preds = %62
  call void @_ZN3WTF6VectorINS0_IfLj0ENS_18PartitionAllocatorEEELj0ES1_E14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.409"* nonnull %5, %"class.WTF::Vector.212"* nonnull dereferenceable(16) %7) #10
  br label %82

82:                                               ; preds = %81, %66, %61
  %83 = phi i32 [ 1, %61 ], [ 0, %66 ], [ 0, %81 ]
  %84 = load float*, float** %44, align 8
  %85 = icmp eq float* %84, null
  %86 = bitcast float* %84 to i8*
  br i1 %85, label %92, label %87, !prof !13

87:                                               ; preds = %82
  %88 = load i32, i32* %43, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %91, label %90, !prof !8

90:                                               ; preds = %87
  store i32 0, i32* %43, align 4
  br label %91

91:                                               ; preds = %90, %87
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %86) #10
  store float* null, float** %44, align 8
  br label %92

92:                                               ; preds = %91, %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %38) #10
  %93 = icmp eq i32 %83, 0
  %94 = add nuw i32 %49, 1
  br i1 %93, label %45, label %109

95:                                               ; preds = %45
  %96 = bitcast %"class.WTF::Vector.409"* %5 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = load i32, i32* %16, align 8
  %99 = load i32, i32* %17, align 4
  br label %100

100:                                              ; preds = %33, %95
  %101 = phi i8* [ %35, %33 ], [ %40, %95 ]
  %102 = phi i64* [ %34, %33 ], [ %96, %95 ]
  %103 = phi i32 [ 0, %33 ], [ %99, %95 ]
  %104 = phi i32 [ %27, %33 ], [ %98, %95 ]
  %105 = phi i64 [ %28, %33 ], [ %97, %95 ]
  %106 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 1
  %107 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 16, i1 false) #10
  %108 = bitcast %"class.WTF::Vector.409"* %0 to i64*
  store atomic i64 0, i64* %102 monotonic, align 8
  store atomic i64 %105, i64* %108 monotonic, align 8
  store i32 %104, i32* %106, align 8
  store i32 0, i32* %16, align 8
  store i32 %103, i32* %107, align 4
  store i32 0, i32* %17, align 4
  br label %109

109:                                              ; preds = %92, %52, %100
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %30) #10
  %110 = load %"class.WTF::Vector.212"*, %"class.WTF::Vector.212"** %15, align 8
  %111 = icmp eq %"class.WTF::Vector.212"* %110, null
  br i1 %111, label %139, label %112, !prof !13

112:                                              ; preds = %109
  %113 = bitcast %"class.WTF::Vector.212"* %110 to i8*
  %114 = load i32, i32* %17, align 4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %137, label %116, !prof !8

116:                                              ; preds = %112
  %117 = zext i32 %114 to i64
  %118 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %110, i64 %117
  br label %119

119:                                              ; preds = %131, %116
  %120 = phi %"class.WTF::Vector.212"* [ %132, %131 ], [ %110, %116 ]
  %121 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %120, i64 0, i32 0, i32 0, i32 0
  %122 = load float*, float** %121, align 8
  %123 = icmp eq float* %122, null
  %124 = bitcast float* %122 to i8*
  br i1 %123, label %131, label %125, !prof !13

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %120, i64 0, i32 0, i32 0, i32 2
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %130, label %129, !prof !8

129:                                              ; preds = %125
  store i32 0, i32* %126, align 4
  br label %130

130:                                              ; preds = %129, %125
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %124) #10
  store float* null, float** %121, align 8
  br label %131

131:                                              ; preds = %130, %119
  %132 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %120, i64 1
  %133 = icmp eq %"class.WTF::Vector.212"* %132, %118
  br i1 %133, label %134, label %119

134:                                              ; preds = %131
  store i32 0, i32* %17, align 4
  %135 = bitcast %"class.WTF::Vector.409"* %5 to i8**
  %136 = load i8*, i8** %135, align 8
  br label %137

137:                                              ; preds = %134, %112
  %138 = phi i8* [ %136, %134 ], [ %113, %112 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %138) #10
  store %"class.WTF::Vector.212"* null, %"class.WTF::Vector.212"** %15, align 8
  br label %139

139:                                              ; preds = %109, %137
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #10
  br label %140

140:                                              ; preds = %139, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS0_30IDLFloatingPointNumberConvModeE0EEEEEEENS_17NativeValueTraitsINS2_IT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.WTF::Vector.409"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.WTF::Vector.409", align 8
  %6 = alloca %"class.WTF::Vector.212", align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #10
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #10
  %9 = bitcast %"class.WTF::Vector.409"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %5, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #10
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #10
  br i1 %13, label %14, label %71

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.WTF::Vector.212"* %6 to i8*
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %18 = bitcast %"class.WTF::Vector.212"* %6 to i64*
  %19 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %6, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %6, i64 0, i32 0, i32 0, i32 2
  %21 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %6, i64 0, i32 0, i32 0, i32 0
  br label %22

22:                                               ; preds = %14, %69
  %23 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %24 = icmp eq %"class.v8::Value"* %23, null
  br i1 %24, label %25, label %26, !prof !8

25:                                               ; preds = %22
  call void @_ZN2v82V812ToLocalEmptyEv() #10
  br label %26

26:                                               ; preds = %22, %25
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #10
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEvE11NativeValueEPN2v87IsolateENS8_5LocalINS8_5ValueEEERNS_14ExceptionStateE(%"class.WTF::Vector.212"* nonnull sret %6, %"class.v8::Isolate"* %1, %"class.v8::Value"* %23, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %27 = load i32, i32* %17, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %40, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.WTF::Vector.409"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #10
  %31 = load float*, float** %21, align 8
  %32 = icmp eq float* %31, null
  %33 = bitcast float* %31 to i8*
  br i1 %32, label %39, label %34, !prof !13

34:                                               ; preds = %29
  %35 = load i32, i32* %20, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %38, label %37, !prof !8

37:                                               ; preds = %34
  store i32 0, i32* %20, align 4
  br label %38

38:                                               ; preds = %37, %34
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %33) #10
  store float* null, float** %21, align 8
  br label %39

39:                                               ; preds = %29, %38
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #10
  br label %86

40:                                               ; preds = %26
  %41 = load i32, i32* %12, align 4
  %42 = load i32, i32* %11, align 8
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %59, label %44, !prof !8

44:                                               ; preds = %40
  %45 = load %"class.WTF::Vector.212"*, %"class.WTF::Vector.212"** %10, align 8
  %46 = zext i32 %41 to i64
  %47 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %45, i64 %46
  %48 = bitcast %"class.WTF::Vector.212"* %47 to i8*
  %49 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %45, i64 %46, i32 0, i32 0, i32 1
  %50 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %45, i64 %46, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #10
  %51 = load i64, i64* %18, align 8
  %52 = bitcast %"class.WTF::Vector.212"* %47 to i64*
  store atomic i64 0, i64* %18 monotonic, align 8
  store atomic i64 %51, i64* %52 monotonic, align 8
  %53 = load i32, i32* %49, align 4
  %54 = load i32, i32* %19, align 8
  store i32 %54, i32* %49, align 4
  store i32 %53, i32* %19, align 8
  %55 = load i32, i32* %50, align 4
  %56 = load i32, i32* %20, align 4
  store i32 %56, i32* %50, align 4
  store i32 %55, i32* %20, align 4
  %57 = load i32, i32* %12, align 4
  %58 = add i32 %57, 1
  store i32 %58, i32* %12, align 4
  br label %60

59:                                               ; preds = %40
  call void @_ZN3WTF6VectorINS0_IfLj0ENS_18PartitionAllocatorEEELj0ES1_E14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.409"* nonnull %5, %"class.WTF::Vector.212"* nonnull dereferenceable(16) %6) #10
  br label %60

60:                                               ; preds = %44, %59
  %61 = load float*, float** %21, align 8
  %62 = icmp eq float* %61, null
  %63 = bitcast float* %61 to i8*
  br i1 %62, label %69, label %64, !prof !13

64:                                               ; preds = %60
  %65 = load i32, i32* %20, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67, !prof !8

67:                                               ; preds = %64
  store i32 0, i32* %20, align 4
  br label %68

68:                                               ; preds = %67, %64
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %63) #10
  store float* null, float** %21, align 8
  br label %69

69:                                               ; preds = %60, %68
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #10
  %70 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #10
  br i1 %70, label %22, label %71

71:                                               ; preds = %69, %4
  %72 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %73 = load i32, i32* %72, align 8
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %71
  %76 = bitcast %"class.WTF::Vector.409"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 16, i1 false) #10
  br label %86

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 2
  %80 = bitcast %"class.WTF::Vector.409"* %5 to i64*
  %81 = bitcast %"class.WTF::Vector.409"* %0 to i64*
  store i64 0, i64* %81, align 8
  %82 = load i64, i64* %80, align 8
  %83 = bitcast %"class.WTF::Vector.409"* %0 to i64*
  store atomic i64 0, i64* %80 monotonic, align 8
  store atomic i64 %82, i64* %83 monotonic, align 8
  %84 = load i32, i32* %11, align 8
  store i32 %84, i32* %78, align 8
  store i32 0, i32* %11, align 8
  %85 = load i32, i32* %12, align 4
  store i32 %85, i32* %79, align 4
  store i32 0, i32* %12, align 4
  br label %86

86:                                               ; preds = %39, %77, %75
  %87 = load %"class.WTF::Vector.212"*, %"class.WTF::Vector.212"** %10, align 8
  %88 = icmp eq %"class.WTF::Vector.212"* %87, null
  br i1 %88, label %116, label %89, !prof !13

89:                                               ; preds = %86
  %90 = bitcast %"class.WTF::Vector.212"* %87 to i8*
  %91 = load i32, i32* %12, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %114, label %93, !prof !8

93:                                               ; preds = %89
  %94 = zext i32 %91 to i64
  %95 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %87, i64 %94
  br label %96

96:                                               ; preds = %108, %93
  %97 = phi %"class.WTF::Vector.212"* [ %109, %108 ], [ %87, %93 ]
  %98 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = load float*, float** %98, align 8
  %100 = icmp eq float* %99, null
  %101 = bitcast float* %99 to i8*
  br i1 %100, label %108, label %102, !prof !13

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %97, i64 0, i32 0, i32 0, i32 2
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %107, label %106, !prof !8

106:                                              ; preds = %102
  store i32 0, i32* %103, align 4
  br label %107

107:                                              ; preds = %106, %102
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %101) #10
  store float* null, float** %98, align 8
  br label %108

108:                                              ; preds = %107, %96
  %109 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %97, i64 1
  %110 = icmp eq %"class.WTF::Vector.212"* %109, %95
  br i1 %110, label %111, label %96

111:                                              ; preds = %108
  store i32 0, i32* %12, align 4
  %112 = bitcast %"class.WTF::Vector.409"* %5 to i8**
  %113 = load i8*, i8** %112, align 8
  br label %114

114:                                              ; preds = %111, %89
  %115 = phi i8* [ %113, %111 ], [ %90, %89 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %115) #10
  store %"class.WTF::Vector.212"* null, %"class.WTF::Vector.212"** %10, align 8
  br label %116

116:                                              ; preds = %86, %114
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIfLj0ES0_EEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.19, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS0_IfLj0ENS_18PartitionAllocatorEEELj0ES1_E14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.409"*, %"class.WTF::Vector.212"* dereferenceable(16)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::Vector.212"*, %"class.WTF::Vector.212"** %6, align 8
  %8 = icmp ugt %"class.WTF::Vector.212"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::Vector.212"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !13

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::Vector.212"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIfLj0ES0_EEEEmm(i64 %27) #10
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIfLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.409"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.WTF::Vector.212"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorINS0_IfLj0ENS_18PartitionAllocatorEEELj0ES1_E16ReallocateBufferEj(%"class.WTF::Vector.409"* %0, i32 %22) #10
  %36 = load %"class.WTF::Vector.212"*, %"class.WTF::Vector.212"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.WTF::Vector.212"* %1 to i64
  %39 = ptrtoint %"class.WTF::Vector.212"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 4
  %42 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !13

52:                                               ; preds = %37
  %53 = icmp eq %"class.WTF::Vector.212"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIfLj0ES0_EEEEmm(i64 %55) #10
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIfLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.409"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 4
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.WTF::Vector.212"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorINS0_IfLj0ENS_18PartitionAllocatorEEELj0ES1_E16ReallocateBufferEj(%"class.WTF::Vector.409"* %0, i32 %50) #10
  %64 = load %"class.WTF::Vector.212"*, %"class.WTF::Vector.212"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.WTF::Vector.212"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.WTF::Vector.212"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.WTF::Vector.212"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %69, i64 %72
  %74 = bitcast %"class.WTF::Vector.212"* %73 to i8*
  %75 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %69, i64 %72, i32 0, i32 0, i32 1
  %76 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %69, i64 %72, i32 0, i32 0, i32 2
  %77 = bitcast %"class.WTF::Vector.212"* %70 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 16, i1 false) #10
  %78 = load i64, i64* %77, align 8
  %79 = bitcast %"class.WTF::Vector.212"* %73 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store atomic i64 %78, i64* %79 monotonic, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %70, i64 0, i32 0, i32 0, i32 1
  %81 = load i32, i32* %75, align 4
  %82 = load i32, i32* %80, align 4
  store i32 %82, i32* %75, align 4
  store i32 %81, i32* %80, align 4
  %83 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %70, i64 0, i32 0, i32 0, i32 2
  %84 = load i32, i32* %76, align 4
  %85 = load i32, i32* %83, align 4
  store i32 %85, i32* %76, align 4
  store i32 %84, i32* %83, align 4
  %86 = load i32, i32* %3, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS0_IfLj0ENS_18PartitionAllocatorEEELj0ES1_E16ReallocateBufferEj(%"class.WTF::Vector.409"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::Vector.212"*, %"class.WTF::Vector.212"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.409"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %41, label %14

14:                                               ; preds = %4, %37
  %15 = phi %"class.WTF::Vector.212"* [ %39, %37 ], [ %6, %4 ]
  %16 = phi %"class.WTF::Vector.212"* [ %38, %37 ], [ null, %4 ]
  %17 = bitcast %"class.WTF::Vector.212"* %16 to i8*
  %18 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %16, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %16, i64 0, i32 0, i32 0, i32 2
  %20 = bitcast %"class.WTF::Vector.212"* %15 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #10
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.WTF::Vector.212"* %16 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %15, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %18, align 4
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %18, align 4
  store i32 %24, i32* %23, align 4
  %26 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %15, i64 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %19, align 4
  %28 = load i32, i32* %26, align 4
  store i32 %28, i32* %19, align 4
  store i32 %27, i32* %26, align 4
  %29 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %15, i64 0, i32 0, i32 0, i32 0
  %30 = load float*, float** %29, align 8
  %31 = icmp eq float* %30, null
  %32 = bitcast float* %30 to i8*
  br i1 %31, label %37, label %33, !prof !13

33:                                               ; preds = %14
  %34 = icmp eq i32 %27, 0
  br i1 %34, label %36, label %35, !prof !8

35:                                               ; preds = %33
  store i32 0, i32* %26, align 4
  br label %36

36:                                               ; preds = %35, %33
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %32) #10
  store float* null, float** %29, align 8
  br label %37

37:                                               ; preds = %36, %14
  %38 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %16, i64 1
  %39 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %15, i64 1
  %40 = icmp eq %"class.WTF::Vector.212"* %39, %10
  br i1 %40, label %41, label %14

41:                                               ; preds = %37, %4
  %42 = bitcast %"class.WTF::Vector.212"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %42) #10
  br label %95

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6VectorIfLj0ES0_EEEEmm(i64 %44) #10
  %46 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %45, i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIfLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #10
  %47 = lshr i64 %45, 4
  %48 = ptrtoint i8* %46 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.WTF::Vector.212"*, %"class.WTF::Vector.212"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = zext i32 %52 to i64
  %54 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %50, i64 %53
  %55 = icmp eq i32 %52, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %43
  %57 = bitcast %"class.WTF::Vector.212"* %50 to i8*
  br label %90

58:                                               ; preds = %43
  %59 = bitcast i8* %46 to %"class.WTF::Vector.212"*
  br label %60

60:                                               ; preds = %58, %83
  %61 = phi %"class.WTF::Vector.212"* [ %85, %83 ], [ %50, %58 ]
  %62 = phi %"class.WTF::Vector.212"* [ %84, %83 ], [ %59, %58 ]
  %63 = bitcast %"class.WTF::Vector.212"* %62 to i8*
  %64 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %62, i64 0, i32 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %62, i64 0, i32 0, i32 0, i32 2
  %66 = bitcast %"class.WTF::Vector.212"* %61 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #10
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.WTF::Vector.212"* %62 to i64*
  store atomic i64 0, i64* %66 monotonic, align 8
  store atomic i64 %67, i64* %68 monotonic, align 8
  %69 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %61, i64 0, i32 0, i32 0, i32 1
  %70 = load i32, i32* %64, align 4
  %71 = load i32, i32* %69, align 4
  store i32 %71, i32* %64, align 4
  store i32 %70, i32* %69, align 4
  %72 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %61, i64 0, i32 0, i32 0, i32 2
  %73 = load i32, i32* %65, align 4
  %74 = load i32, i32* %72, align 4
  store i32 %74, i32* %65, align 4
  store i32 %73, i32* %72, align 4
  %75 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %61, i64 0, i32 0, i32 0, i32 0
  %76 = load float*, float** %75, align 8
  %77 = icmp eq float* %76, null
  %78 = bitcast float* %76 to i8*
  br i1 %77, label %83, label %79, !prof !13

79:                                               ; preds = %60
  %80 = icmp eq i32 %73, 0
  br i1 %80, label %82, label %81, !prof !8

81:                                               ; preds = %79
  store i32 0, i32* %72, align 4
  br label %82

82:                                               ; preds = %81, %79
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %78) #10
  store float* null, float** %75, align 8
  br label %83

83:                                               ; preds = %82, %60
  %84 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %62, i64 1
  %85 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %61, i64 1
  %86 = icmp eq %"class.WTF::Vector.212"* %85, %54
  br i1 %86, label %87, label %60

87:                                               ; preds = %83
  %88 = bitcast %"class.WTF::Vector.409"* %0 to i8**
  %89 = load i8*, i8** %88, align 8
  br label %90

90:                                               ; preds = %56, %87
  %91 = phi i8* [ %89, %87 ], [ %57, %56 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %91) #10
  %92 = bitcast %"class.WTF::Vector.409"* %0 to i64*
  store atomic i64 %48, i64* %92 monotonic, align 8
  %93 = trunc i64 %47 to i32
  %94 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %93, i32* %94, align 8
  br label %95

95:                                               ; preds = %90, %41
  ret void
}

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.212"* @_ZN3WTF6VectorINS0_IfLj0ENS_18PartitionAllocatorEEELj0ES1_E2atEj(%"class.WTF::Vector.409"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.20, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.409", %"class.WTF::Vector.409"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::Vector.212"*, %"class.WTF::Vector.212"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %24, i64 %25
  ret %"class.WTF::Vector.212"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE6AppendIfEEvPKT_j(%"class.WTF::Vector.212"*, float*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = tail call float* @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPf(%"class.WTF::Vector.212"* %0, i32 %9, float* %1) #10
  %15 = load i32, i32* %7, align 4
  br label %16

16:                                               ; preds = %13, %3
  %17 = phi i32 [ %15, %13 ], [ %8, %3 ]
  %18 = phi float* [ %14, %13 ], [ %1, %3 ]
  %19 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %9, %17
  br i1 %22, label %24, label %23

23:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %20, align 8
  br label %33

24:                                               ; preds = %16
  %25 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.33, i64 0, i64 0), i8* %25, i8* %26) #10
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %20, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.20, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #10
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #10
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  %34 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %0, i64 0, i32 0, i32 0, i32 0
  %35 = load float*, float** %34, align 8
  %36 = load i32, i32* %7, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds float, float* %35, i64 %37
  %39 = icmp ne float* %38, null
  %40 = icmp ne float* %18, null
  %41 = and i1 %40, %39
  br i1 %41, label %42, label %47, !prof !13

42:                                               ; preds = %33
  %43 = zext i32 %2 to i64
  %44 = bitcast float* %38 to i8*
  %45 = bitcast float* %18 to i8*
  %46 = shl nuw nsw i64 %43, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %44, i8* nonnull align 4 %45, i64 %46, i1 false) #10
  br label %47

47:                                               ; preds = %33, %42
  store i32 %9, i32* %7, align 4
  ret void
}

declare signext i16 @_ZN5blink7ToInt16EPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29ConvolveMatrixFilterOperationD2Ev(%"class.blink::ConvolveMatrixFilterOperation"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ConvolveMatrixFilterOperation", %"class.blink::ConvolveMatrixFilterOperation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink29ConvolveMatrixFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ConvolveMatrixFilterOperation", %"class.blink::ConvolveMatrixFilterOperation"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  %6 = bitcast float* %4 to i8*
  br i1 %5, label %13, label %7, !prof !13

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ConvolveMatrixFilterOperation", %"class.blink::ConvolveMatrixFilterOperation"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !8

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #10
  store float* null, float** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29ConvolveMatrixFilterOperationD0Ev(%"class.blink::ConvolveMatrixFilterOperation"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ConvolveMatrixFilterOperation", %"class.blink::ConvolveMatrixFilterOperation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink29ConvolveMatrixFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ConvolveMatrixFilterOperation", %"class.blink::ConvolveMatrixFilterOperation"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  %6 = bitcast float* %4 to i8*
  br i1 %5, label %13, label %7, !prof !13

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ConvolveMatrixFilterOperation", %"class.blink::ConvolveMatrixFilterOperation"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !8

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #10
  store float* null, float** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink29ConvolveMatrixFilterOperationeqERKNS_15FilterOperationE(%"class.blink::ConvolveMatrixFilterOperation"*, %"class.blink::FilterOperation"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::ConvolveMatrixFilterOperation"* %0 to %"class.blink::FilterOperation"*
  %4 = bitcast %"class.blink::ConvolveMatrixFilterOperation"* %0 to i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)***
  %5 = load i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)**, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)** %5, i64 4
  %7 = load i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::FilterOperation"* %3, %"class.blink::FilterOperation"* dereferenceable(16) %1) #10
  br i1 %8, label %9, label %84

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::FilterOperation"* %1 to %"class.blink::ConvolveMatrixFilterOperation"*
  %11 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 0, i32 2
  %12 = getelementptr inbounds %"class.blink::ConvolveMatrixFilterOperation", %"class.blink::ConvolveMatrixFilterOperation"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = bitcast [4 x i8]* %11 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %84

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::ConvolveMatrixFilterOperation", %"class.blink::ConvolveMatrixFilterOperation"* %0, i64 0, i32 1, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds [4 x i8], [4 x i8]* %11, i64 1
  %21 = bitcast [4 x i8]* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %19, %22
  br i1 %23, label %24, label %84

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::ConvolveMatrixFilterOperation", %"class.blink::ConvolveMatrixFilterOperation"* %0, i64 0, i32 2
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %"class.blink::ConvolveMatrixFilterOperation", %"class.blink::ConvolveMatrixFilterOperation"* %10, i64 0, i32 2
  %28 = load float, float* %27, align 4
  %29 = fcmp oeq float %26, %28
  br i1 %29, label %30, label %84

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.blink::ConvolveMatrixFilterOperation", %"class.blink::ConvolveMatrixFilterOperation"* %0, i64 0, i32 3
  %32 = load float, float* %31, align 8
  %33 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 1, i32 1
  %34 = bitcast i32* %33 to float*
  %35 = load float, float* %34, align 8
  %36 = fcmp oeq float %32, %35
  br i1 %36, label %37, label %84

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 1, i32 2
  %39 = getelementptr inbounds %"class.blink::ConvolveMatrixFilterOperation", %"class.blink::ConvolveMatrixFilterOperation"* %0, i64 0, i32 4, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = bitcast [4 x i8]* %38 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %84

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::ConvolveMatrixFilterOperation", %"class.blink::ConvolveMatrixFilterOperation"* %0, i64 0, i32 4, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds [4 x i8], [4 x i8]* %38, i64 1
  %48 = bitcast [4 x i8]* %47 to i32*
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %46, %49
  br i1 %50, label %51, label %84

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.blink::ConvolveMatrixFilterOperation", %"class.blink::ConvolveMatrixFilterOperation"* %0, i64 0, i32 5
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"class.blink::ConvolveMatrixFilterOperation", %"class.blink::ConvolveMatrixFilterOperation"* %10, i64 0, i32 5
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %53, %55
  br i1 %56, label %57, label %84

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::ConvolveMatrixFilterOperation", %"class.blink::ConvolveMatrixFilterOperation"* %0, i64 0, i32 6
  %59 = load i8, i8* %58, align 8, !range !12
  %60 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 2, i32 1
  %61 = bitcast i32* %60 to i8*
  %62 = load i8, i8* %61, align 8, !range !12
  %63 = icmp eq i8 %59, %62
  br i1 %63, label %64, label %84

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.blink::ConvolveMatrixFilterOperation", %"class.blink::ConvolveMatrixFilterOperation"* %0, i64 0, i32 7
  %66 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 3
  %67 = getelementptr inbounds %"class.blink::ConvolveMatrixFilterOperation", %"class.blink::ConvolveMatrixFilterOperation"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 3, i32 2
  %70 = bitcast [4 x i8]* %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %68, %71
  br i1 %72, label %73, label %84

73:                                               ; preds = %64
  %74 = icmp eq i32 %68, 0
  br i1 %74, label %84, label %75

75:                                               ; preds = %73
  %76 = bitcast %"class.WTF::Vector.212"* %65 to i8**
  %77 = load i8*, i8** %76, align 8
  %78 = bitcast %"class.blink::FilterOperation"* %66 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = zext i32 %68 to i64
  %81 = shl nuw nsw i64 %80, 2
  %82 = tail call i32 @bcmp(i8* %77, i8* %79, i64 %81) #10
  %83 = icmp eq i32 %82, 0
  br label %84

84:                                               ; preds = %37, %9, %75, %73, %64, %17, %24, %30, %44, %51, %57, %2
  %85 = phi i1 [ false, %2 ], [ false, %57 ], [ false, %51 ], [ false, %44 ], [ false, %30 ], [ false, %24 ], [ false, %17 ], [ %83, %75 ], [ false, %64 ], [ true, %73 ], [ false, %9 ], [ false, %37 ]
  ret i1 %85
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_128GetComponentTransferFunctionERKN3WTF10StringViewERKNS_10DictionaryERNS_14ExceptionStateE(%"struct.blink::ComponentTransferFunction"* noalias sret, %"class.WTF::StringView"* dereferenceable(24), %"class.blink::Dictionary"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.blink::Dictionary", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = alloca %"class.WTF::StringView", align 8
  %21 = alloca %"class.WTF::StringView", align 8
  %22 = alloca %"class.absl::optional.248", align 8
  %23 = alloca %"class.WTF::StringView", align 8
  %24 = alloca %"class.absl::optional", align 8
  %25 = alloca %"class.WTF::StringView", align 8
  %26 = bitcast %"class.blink::Dictionary"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false)
  %27 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %16, i64 0, i32 0
  store %"class.v8::Isolate"* null, %"class.v8::Isolate"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %16, i64 0, i32 1
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %"class.blink::Dictionary", %"class.blink::Dictionary"* %16, i64 0, i32 2, i32 0
  store %"class.v8::Object"* null, %"class.v8::Object"** %29, align 8
  %30 = call zeroext i1 @_ZNK5blink10Dictionary3GetERKN3WTF10StringViewERS0_(%"class.blink::Dictionary"* %2, %"class.WTF::StringView"* dereferenceable(24) %1, %"class.blink::Dictionary"* nonnull dereferenceable(24) %16) #10
  %31 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %0, i64 0, i32 0
  %32 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %0, i64 0, i32 1
  %33 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %0, i64 0, i32 2
  %34 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %0, i64 0, i32 3
  %35 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %0, i64 0, i32 4
  %36 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %0, i64 0, i32 5
  %37 = bitcast %"struct.blink::ComponentTransferFunction"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 40, i1 false) #10
  %38 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #10
  %39 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %40 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i64 0, i64 0), i8** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 5, i32* %42, align 8
  %43 = call { i8, double } @_ZNK5blink10Dictionary3GetINS_30IDLFloatingPointNumberTypeBaseIdLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::Dictionary"* nonnull %16, %"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %44 = extractvalue { i8, double } %43, 0
  %45 = extractvalue { i8, double } %43, 1
  %46 = icmp eq i8 %44, 0
  %47 = fptrunc double %45 to float
  %48 = select i1 %46, float 1.000000e+00, float %47
  store float %48, float* %32, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #10
  %49 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #10
  %50 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %51 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i64 0, i64 0), i8** %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 9, i32* %53, align 8
  %54 = call { i8, double } @_ZNK5blink10Dictionary3GetINS_30IDLFloatingPointNumberTypeBaseIdLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::Dictionary"* nonnull %16, %"class.WTF::StringView"* nonnull dereferenceable(24) %18, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %55 = extractvalue { i8, double } %54, 0
  %56 = extractvalue { i8, double } %54, 1
  %57 = icmp eq i8 %55, 0
  %58 = fptrunc double %56 to float
  %59 = select i1 %57, float 0.000000e+00, float %58
  store float %59, float* %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #10
  %60 = bitcast %"class.WTF::StringView"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #10
  %61 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %62 = bitcast %"class.WTF::StringView"* %19 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i64 0, i64 0), i8** %63, align 8
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 9, i32* %64, align 8
  %65 = call { i8, double } @_ZNK5blink10Dictionary3GetINS_30IDLFloatingPointNumberTypeBaseIdLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::Dictionary"* nonnull %16, %"class.WTF::StringView"* nonnull dereferenceable(24) %19, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %66 = extractvalue { i8, double } %65, 0
  %67 = extractvalue { i8, double } %65, 1
  %68 = icmp eq i8 %66, 0
  %69 = fptrunc double %67 to float
  %70 = select i1 %68, float 1.000000e+00, float %69
  store float %70, float* %34, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #10
  %71 = bitcast %"class.WTF::StringView"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #10
  %72 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %73 = bitcast %"class.WTF::StringView"* %20 to i64*
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i64 0, i64 0), i8** %74, align 8
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  store i32 8, i32* %75, align 8
  %76 = call { i8, double } @_ZNK5blink10Dictionary3GetINS_30IDLFloatingPointNumberTypeBaseIdLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::Dictionary"* nonnull %16, %"class.WTF::StringView"* nonnull dereferenceable(24) %20, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %77 = extractvalue { i8, double } %76, 0
  %78 = extractvalue { i8, double } %76, 1
  %79 = icmp eq i8 %77, 0
  %80 = fptrunc double %78 to float
  %81 = select i1 %79, float 1.000000e+00, float %80
  store float %81, float* %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #10
  %82 = bitcast %"class.WTF::StringView"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #10
  %83 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %84 = bitcast %"class.WTF::StringView"* %21 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i64 0, i64 0), i8** %85, align 8
  %86 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  store i32 6, i32* %86, align 8
  %87 = call { i8, double } @_ZNK5blink10Dictionary3GetINS_30IDLFloatingPointNumberTypeBaseIdLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.blink::Dictionary"* nonnull %16, %"class.WTF::StringView"* nonnull dereferenceable(24) %21, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %88 = extractvalue { i8, double } %87, 0
  %89 = extractvalue { i8, double } %87, 1
  %90 = icmp eq i8 %88, 0
  %91 = fptrunc double %89 to float
  %92 = select i1 %90, float 0.000000e+00, float %91
  store float %92, float* %36, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #10
  %93 = getelementptr inbounds %"class.absl::optional.248", %"class.absl::optional.248"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 24, i1 false)
  %94 = bitcast %"class.WTF::StringView"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #10
  %95 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %96 = bitcast %"class.WTF::StringView"* %23 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.43, i64 0, i64 0), i8** %97, align 8
  %98 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 2
  store i32 11, i32* %98, align 8
  call void @_ZNK5blink10Dictionary3GetINS_11IDLSequenceINS_30IDLFloatingPointNumberTypeBaseIfLNS_8bindings30IDLFloatingPointNumberConvModeE0EEEEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.absl::optional.248"* nonnull sret %22, %"class.blink::Dictionary"* nonnull %16, %"class.WTF::StringView"* nonnull dereferenceable(24) %23, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #10
  %99 = load i8, i8* %93, align 8, !range !12
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %107, label %101

101:                                              ; preds = %4
  %102 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %0, i64 0, i32 6
  %103 = getelementptr inbounds %"class.absl::optional.248", %"class.absl::optional.248"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %104 = load float*, float** %103, align 8
  %105 = getelementptr inbounds %"class.absl::optional.248", %"class.absl::optional.248"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %106 = load i32, i32* %105, align 4
  call void @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE6AppendIfEEvPKT_j(%"class.WTF::Vector.212"* %102, float* %104, i32 %106) #10
  br label %107

107:                                              ; preds = %4, %101
  %108 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %108) #10
  %109 = bitcast %"class.WTF::StringView"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #10
  %110 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %111 = bitcast %"class.WTF::StringView"* %25 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %112, align 8
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %25, i64 0, i32 2
  store i32 4, i32* %113, align 8
  call void @_ZNK5blink10Dictionary3GetINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEEEN4absl8optionalINT_8ImplTypeEEERKN3WTF10StringViewERNS_14ExceptionStateE(%"class.absl::optional"* nonnull sret %24, %"class.blink::Dictionary"* nonnull %16, %"class.WTF::StringView"* nonnull dereferenceable(24) %25, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %114 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114)
  %115 = load i8, i8* %108, align 8, !range !12
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %122, label %117

117:                                              ; preds = %107
  %118 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %119 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %118, i64 0, i32 0, i32 0
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %118, i64 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %119, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114)
  br label %127

122:                                              ; preds = %107
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i64 0, i64 0), i64 8) #10
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %123, align 8
  %125 = load i8, i8* %108, align 8, !range !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114)
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %146, label %127

127:                                              ; preds = %117, %122
  %128 = phi %"class.WTF::StringImpl"* [ %121, %117 ], [ %124, %122 ]
  %129 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %141

139:                                              ; preds = %132
  %140 = add i32 %138, -1
  store i32 %140, i32* %137, align 4
  br label %141

141:                                              ; preds = %139, %132
  %142 = phi i32 [ %140, %139 ], [ %138, %132 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #10
  br label %145

145:                                              ; preds = %144, %141, %127
  store i8 0, i8* %108, align 8
  br label %146

146:                                              ; preds = %122, %145
  %147 = phi %"class.WTF::StringImpl"* [ %124, %122 ], [ %128, %145 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %108) #10
  %148 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %148) #10
  %149 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %149, label %150, label %154

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %151, align 8
  %152 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %153 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %152, i64* %153, align 8
  br label %162

154:                                              ; preds = %146
  %155 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %147, %"class.WTF::StringImpl"** %155, align 8
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 1
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 1
  %159 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %160 = bitcast i8** %159 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %158, %"class.WTF::StringImpl"** %160, align 8
  %161 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %162

162:                                              ; preds = %154, %150
  %163 = phi %"class.WTF::StringImpl"* [ %147, %154 ], [ null, %150 ]
  %164 = phi i64 [ %161, %154 ], [ %152, %150 ]
  %165 = phi i32 [ %157, %154 ], [ 0, %150 ]
  %166 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %165, i32* %166, align 8
  %167 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %167) #10
  %168 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %164, i64* %168, align 8
  %169 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i64 0, i64 0), i8** %169, align 8
  %170 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 8, i32* %170, align 8
  %171 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %167) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %148) #10
  br i1 %171, label %264, label %172

172:                                              ; preds = %162
  %173 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %173) #10
  br i1 %149, label %174, label %178

174:                                              ; preds = %172
  %175 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %175, align 8
  %176 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %177 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %176, i64* %177, align 8
  br label %186

178:                                              ; preds = %172
  %179 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %163, %"class.WTF::StringImpl"** %179, align 8
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 1
  %183 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %184 = bitcast i8** %183 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %182, %"class.WTF::StringImpl"** %184, align 8
  %185 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %186

186:                                              ; preds = %178, %174
  %187 = phi i64 [ %185, %178 ], [ %176, %174 ]
  %188 = phi i32 [ %181, %178 ], [ 0, %174 ]
  %189 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %188, i32* %189, align 8
  %190 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %190) #10
  %191 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %187, i64* %191, align 8
  %192 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0), i8** %192, align 8
  %193 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 6, i32* %193, align 8
  %194 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %190) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %173) #10
  br i1 %194, label %264, label %195

195:                                              ; preds = %186
  %196 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %196) #10
  br i1 %149, label %197, label %201

197:                                              ; preds = %195
  %198 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %198, align 8
  %199 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %200 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %199, i64* %200, align 8
  br label %209

201:                                              ; preds = %195
  %202 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %163, %"class.WTF::StringImpl"** %202, align 8
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 1
  %204 = load i32, i32* %203, align 4
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 1
  %206 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %207 = bitcast i8** %206 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %205, %"class.WTF::StringImpl"** %207, align 8
  %208 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %209

209:                                              ; preds = %201, %197
  %210 = phi i64 [ %208, %201 ], [ %199, %197 ]
  %211 = phi i32 [ %204, %201 ], [ 0, %197 ]
  %212 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %211, i32* %212, align 8
  %213 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %213) #10
  %214 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %210, i64* %214, align 8
  %215 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0), i8** %215, align 8
  %216 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 5, i32* %216, align 8
  %217 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %213) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %196) #10
  br i1 %217, label %264, label %218

218:                                              ; preds = %209
  %219 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219) #10
  br i1 %149, label %220, label %224

220:                                              ; preds = %218
  %221 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %221, align 8
  %222 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %223 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %222, i64* %223, align 8
  br label %232

224:                                              ; preds = %218
  %225 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %163, %"class.WTF::StringImpl"** %225, align 8
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 1
  %227 = load i32, i32* %226, align 4
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 1
  %229 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %230 = bitcast i8** %229 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %228, %"class.WTF::StringImpl"** %230, align 8
  %231 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %232

232:                                              ; preds = %224, %220
  %233 = phi i64 [ %231, %224 ], [ %222, %220 ]
  %234 = phi i32 [ %227, %224 ], [ 0, %220 ]
  %235 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %234, i32* %235, align 8
  %236 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #10
  %237 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %233, i64* %237, align 8
  %238 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i64 0, i64 0), i8** %238, align 8
  %239 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 5, i32* %239, align 8
  %240 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219) #10
  br i1 %240, label %264, label %241

241:                                              ; preds = %232
  %242 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %242) #10
  br i1 %149, label %243, label %247

243:                                              ; preds = %241
  %244 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %244, align 8
  %245 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %246 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %245, i64* %246, align 8
  br label %255

247:                                              ; preds = %241
  %248 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %163, %"class.WTF::StringImpl"** %248, align 8
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 1
  %250 = load i32, i32* %249, align 4
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 1
  %252 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %253 = bitcast i8** %252 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %251, %"class.WTF::StringImpl"** %253, align 8
  %254 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %255

255:                                              ; preds = %247, %243
  %256 = phi i64 [ %254, %247 ], [ %245, %243 ]
  %257 = phi i32 [ %250, %247 ], [ 0, %243 ]
  %258 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %257, i32* %258, align 8
  %259 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %259) #10
  %260 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %256, i64* %260, align 8
  %261 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.48, i64 0, i64 0), i8** %261, align 8
  %262 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 8, i32* %262, align 8
  %263 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %259) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %242) #10
  br i1 %263, label %264, label %266

264:                                              ; preds = %255, %232, %209, %186, %162
  %265 = phi i32 [ 1, %162 ], [ 4, %186 ], [ 5, %209 ], [ 2, %232 ], [ 3, %255 ]
  store i32 %265, i32* %31, align 8
  br label %266

266:                                              ; preds = %264, %255
  br i1 %149, label %280, label %267

267:                                              ; preds = %266
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = load atomic i32, i32* %268 monotonic, align 4
  %270 = and i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 0
  %273 = load i32, i32* %272, align 4
  br i1 %271, label %274, label %276

274:                                              ; preds = %267
  %275 = add i32 %273, -1
  store i32 %275, i32* %272, align 4
  br label %276

276:                                              ; preds = %274, %267
  %277 = phi i32 [ %275, %274 ], [ %273, %267 ]
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %276
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %163) #10
  br label %280

280:                                              ; preds = %266, %276, %279
  %281 = load i8, i8* %93, align 8, !range !12
  %282 = icmp eq i8 %281, 0
  br i1 %282, label %295, label %283

283:                                              ; preds = %280
  %284 = getelementptr inbounds %"class.absl::optional.248", %"class.absl::optional.248"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %285 = load float*, float** %284, align 8
  %286 = icmp eq float* %285, null
  %287 = bitcast float* %285 to i8*
  br i1 %286, label %294, label %288, !prof !13

288:                                              ; preds = %283
  %289 = getelementptr inbounds %"class.absl::optional.248", %"class.absl::optional.248"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %290 = load i32, i32* %289, align 4
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %293, label %292, !prof !8

292:                                              ; preds = %288
  store i32 0, i32* %289, align 4
  br label %293

293:                                              ; preds = %292, %288
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %287) #10
  store float* null, float** %284, align 8
  br label %294

294:                                              ; preds = %293, %283
  store i8 0, i8* %93, align 8
  br label %295

295:                                              ; preds = %280, %294
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink32ComponentTransferFilterOperationC2ERKNS_25ComponentTransferFunctionES3_S3_S3_(%"class.blink::ComponentTransferFilterOperation"*, %"struct.blink::ComponentTransferFunction"* dereferenceable(40), %"struct.blink::ComponentTransferFunction"* dereferenceable(40), %"struct.blink::ComponentTransferFunction"* dereferenceable(40), %"struct.blink::ComponentTransferFunction"* dereferenceable(40)) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 0, i32 1
  store i32 14, i32* %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink32ComponentTransferFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 1
  %9 = bitcast %"struct.blink::ComponentTransferFunction"* %8 to i8*
  %10 = bitcast %"struct.blink::ComponentTransferFunction"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 24, i1 false) #10
  %11 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 1, i32 6
  %12 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %1, i64 0, i32 6, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %11, i64 0, i32 0, i32 0, i32 0
  store float* null, float** %14, align 8
  %15 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 1, i32 6, i32 0, i32 0, i32 1
  store i32 0, i32* %15, align 8
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %5
  %18 = zext i32 %13 to i64
  %19 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %18) #10
  %20 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %19, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #10
  %21 = ptrtoint i8* %20 to i64
  %22 = bitcast %"class.WTF::Vector.212"* %11 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = lshr i64 %19, 2
  %24 = trunc i64 %23 to i32
  store i32 %24, i32* %15, align 8
  %25 = icmp ne i8* %20, null
  br label %26

26:                                               ; preds = %17, %5
  %27 = phi i8* [ null, %5 ], [ %20, %17 ]
  %28 = phi i1 [ false, %5 ], [ %25, %17 ]
  %29 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %1, i64 0, i32 6, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 1, i32 6, i32 0, i32 0, i32 2
  store i32 %30, i32* %31, align 4
  %32 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %33 = load float*, float** %32, align 8
  %34 = icmp ne float* %33, null
  %35 = and i1 %28, %34
  br i1 %35, label %36, label %41, !prof !13

36:                                               ; preds = %26
  %37 = load i32, i32* %29, align 4
  %38 = zext i32 %37 to i64
  %39 = bitcast float* %33 to i8*
  %40 = shl nuw nsw i64 %38, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %27, i8* nonnull align 4 %39, i64 %40, i1 false) #10
  br label %41

41:                                               ; preds = %26, %36
  %42 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 2
  %43 = bitcast %"struct.blink::ComponentTransferFunction"* %42 to i8*
  %44 = bitcast %"struct.blink::ComponentTransferFunction"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #10
  %45 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 2, i32 6
  %46 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %2, i64 0, i32 6, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %45, i64 0, i32 0, i32 0, i32 0
  store float* null, float** %48, align 8
  %49 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 2, i32 6, i32 0, i32 0, i32 1
  store i32 0, i32* %49, align 8
  %50 = icmp eq i32 %47, 0
  br i1 %50, label %60, label %51

51:                                               ; preds = %41
  %52 = zext i32 %47 to i64
  %53 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %52) #10
  %54 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %53, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #10
  %55 = ptrtoint i8* %54 to i64
  %56 = bitcast %"class.WTF::Vector.212"* %45 to i64*
  store atomic i64 %55, i64* %56 monotonic, align 8
  %57 = lshr i64 %53, 2
  %58 = trunc i64 %57 to i32
  store i32 %58, i32* %49, align 8
  %59 = icmp ne i8* %54, null
  br label %60

60:                                               ; preds = %51, %41
  %61 = phi i8* [ null, %41 ], [ %54, %51 ]
  %62 = phi i1 [ false, %41 ], [ %59, %51 ]
  %63 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %2, i64 0, i32 6, i32 0, i32 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 2, i32 6, i32 0, i32 0, i32 2
  store i32 %64, i32* %65, align 4
  %66 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %2, i64 0, i32 6, i32 0, i32 0, i32 0
  %67 = load float*, float** %66, align 8
  %68 = icmp ne float* %67, null
  %69 = and i1 %62, %68
  br i1 %69, label %70, label %75, !prof !13

70:                                               ; preds = %60
  %71 = load i32, i32* %63, align 4
  %72 = zext i32 %71 to i64
  %73 = bitcast float* %67 to i8*
  %74 = shl nuw nsw i64 %72, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %61, i8* nonnull align 4 %73, i64 %74, i1 false) #10
  br label %75

75:                                               ; preds = %60, %70
  %76 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 3
  %77 = bitcast %"struct.blink::ComponentTransferFunction"* %76 to i8*
  %78 = bitcast %"struct.blink::ComponentTransferFunction"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 24, i1 false) #10
  %79 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 3, i32 6
  %80 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %3, i64 0, i32 6, i32 0, i32 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %79, i64 0, i32 0, i32 0, i32 0
  store float* null, float** %82, align 8
  %83 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 1
  store i32 0, i32* %83, align 8
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %94, label %85

85:                                               ; preds = %75
  %86 = zext i32 %81 to i64
  %87 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %86) #10
  %88 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %87, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #10
  %89 = ptrtoint i8* %88 to i64
  %90 = bitcast %"class.WTF::Vector.212"* %79 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = lshr i64 %87, 2
  %92 = trunc i64 %91 to i32
  store i32 %92, i32* %83, align 8
  %93 = icmp ne i8* %88, null
  br label %94

94:                                               ; preds = %85, %75
  %95 = phi i8* [ null, %75 ], [ %88, %85 ]
  %96 = phi i1 [ false, %75 ], [ %93, %85 ]
  %97 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %3, i64 0, i32 6, i32 0, i32 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 2
  store i32 %98, i32* %99, align 4
  %100 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %3, i64 0, i32 6, i32 0, i32 0, i32 0
  %101 = load float*, float** %100, align 8
  %102 = icmp ne float* %101, null
  %103 = and i1 %96, %102
  br i1 %103, label %104, label %109, !prof !13

104:                                              ; preds = %94
  %105 = load i32, i32* %97, align 4
  %106 = zext i32 %105 to i64
  %107 = bitcast float* %101 to i8*
  %108 = shl nuw nsw i64 %106, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %95, i8* nonnull align 4 %107, i64 %108, i1 false) #10
  br label %109

109:                                              ; preds = %94, %104
  %110 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 4
  %111 = bitcast %"struct.blink::ComponentTransferFunction"* %110 to i8*
  %112 = bitcast %"struct.blink::ComponentTransferFunction"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 24, i1 false) #10
  %113 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 4, i32 6
  %114 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %4, i64 0, i32 6, i32 0, i32 0, i32 1
  %115 = load i32, i32* %114, align 8
  %116 = getelementptr inbounds %"class.WTF::Vector.212", %"class.WTF::Vector.212"* %113, i64 0, i32 0, i32 0, i32 0
  store float* null, float** %116, align 8
  %117 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 4, i32 6, i32 0, i32 0, i32 1
  store i32 0, i32* %117, align 8
  %118 = icmp eq i32 %115, 0
  br i1 %118, label %128, label %119

119:                                              ; preds = %109
  %120 = zext i32 %115 to i64
  %121 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %120) #10
  %122 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %121, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #10
  %123 = ptrtoint i8* %122 to i64
  %124 = bitcast %"class.WTF::Vector.212"* %113 to i64*
  store atomic i64 %123, i64* %124 monotonic, align 8
  %125 = lshr i64 %121, 2
  %126 = trunc i64 %125 to i32
  store i32 %126, i32* %117, align 8
  %127 = icmp ne i8* %122, null
  br label %128

128:                                              ; preds = %119, %109
  %129 = phi i8* [ null, %109 ], [ %122, %119 ]
  %130 = phi i1 [ false, %109 ], [ %127, %119 ]
  %131 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %4, i64 0, i32 6, i32 0, i32 0, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 4, i32 6, i32 0, i32 0, i32 2
  store i32 %132, i32* %133, align 4
  %134 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %135 = load float*, float** %134, align 8
  %136 = icmp ne float* %135, null
  %137 = and i1 %130, %136
  br i1 %137, label %138, label %143, !prof !13

138:                                              ; preds = %128
  %139 = load i32, i32* %131, align 4
  %140 = zext i32 %139 to i64
  %141 = bitcast float* %135 to i8*
  %142 = shl nuw nsw i64 %140, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %129, i8* nonnull align 4 %141, i64 %142, i1 false) #10
  br label %143

143:                                              ; preds = %128, %138
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink32ComponentTransferFilterOperationD2Ev(%"class.blink::ComponentTransferFilterOperation"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink32ComponentTransferFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 4, i32 6, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  %6 = bitcast float* %4 to i8*
  br i1 %5, label %13, label %7, !prof !13

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 4, i32 6, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !8

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #10
  store float* null, float** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  %14 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 0
  %15 = load float*, float** %14, align 8
  %16 = icmp eq float* %15, null
  %17 = bitcast float* %15 to i8*
  br i1 %16, label %24, label %18, !prof !13

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22, !prof !8

22:                                               ; preds = %18
  store i32 0, i32* %19, align 4
  br label %23

23:                                               ; preds = %22, %18
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #10
  store float* null, float** %14, align 8
  br label %24

24:                                               ; preds = %13, %23
  %25 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 2, i32 6, i32 0, i32 0, i32 0
  %26 = load float*, float** %25, align 8
  %27 = icmp eq float* %26, null
  %28 = bitcast float* %26 to i8*
  br i1 %27, label %35, label %29, !prof !13

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 2, i32 6, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %33, !prof !8

33:                                               ; preds = %29
  store i32 0, i32* %30, align 4
  br label %34

34:                                               ; preds = %33, %29
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %28) #10
  store float* null, float** %25, align 8
  br label %35

35:                                               ; preds = %24, %34
  %36 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 1, i32 6, i32 0, i32 0, i32 0
  %37 = load float*, float** %36, align 8
  %38 = icmp eq float* %37, null
  %39 = bitcast float* %37 to i8*
  br i1 %38, label %46, label %40, !prof !13

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 1, i32 6, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !8

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #10
  store float* null, float** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink32ComponentTransferFilterOperationD0Ev(%"class.blink::ComponentTransferFilterOperation"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink32ComponentTransferFilterOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 4, i32 6, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  %6 = bitcast float* %4 to i8*
  br i1 %5, label %13, label %7, !prof !13

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 4, i32 6, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !8

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #10
  store float* null, float** %3, align 8
  br label %13

13:                                               ; preds = %12, %1
  %14 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 0
  %15 = load float*, float** %14, align 8
  %16 = icmp eq float* %15, null
  %17 = bitcast float* %15 to i8*
  br i1 %16, label %24, label %18, !prof !13

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %23, label %22, !prof !8

22:                                               ; preds = %18
  store i32 0, i32* %19, align 4
  br label %23

23:                                               ; preds = %22, %18
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %17) #10
  store float* null, float** %14, align 8
  br label %24

24:                                               ; preds = %23, %13
  %25 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 2, i32 6, i32 0, i32 0, i32 0
  %26 = load float*, float** %25, align 8
  %27 = icmp eq float* %26, null
  %28 = bitcast float* %26 to i8*
  br i1 %27, label %35, label %29, !prof !13

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 2, i32 6, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %33, !prof !8

33:                                               ; preds = %29
  store i32 0, i32* %30, align 4
  br label %34

34:                                               ; preds = %33, %29
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %28) #10
  store float* null, float** %25, align 8
  br label %35

35:                                               ; preds = %34, %24
  %36 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 1, i32 6, i32 0, i32 0, i32 0
  %37 = load float*, float** %36, align 8
  %38 = icmp eq float* %37, null
  %39 = bitcast float* %37 to i8*
  br i1 %38, label %46, label %40, !prof !13

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 1, i32 6, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !8

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #10
  store float* null, float** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink32ComponentTransferFilterOperationeqERKNS_15FilterOperationE(%"class.blink::ComponentTransferFilterOperation"*, %"class.blink::FilterOperation"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::ComponentTransferFilterOperation"* %0 to %"class.blink::FilterOperation"*
  %4 = bitcast %"class.blink::ComponentTransferFilterOperation"* %0 to i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)***
  %5 = load i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)**, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)** %5, i64 4
  %7 = load i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::FilterOperation"* %3, %"class.blink::FilterOperation"* dereferenceable(16) %1) #10
  br i1 %8, label %9, label %258

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 1
  %11 = bitcast %"class.blink::FilterOperation"* %10 to %"struct.blink::ComponentTransferFunction"*
  %12 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = bitcast %"class.blink::FilterOperation"* %10 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %17, label %258

17:                                               ; preds = %9
  switch i32 %13, label %61 [
    i32 1, label %71
    i32 4, label %18
    i32 5, label %31
    i32 2, label %51
    i32 3, label %51
    i32 0, label %258
  ]

18:                                               ; preds = %17
  %19 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 1, i32 1
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %11, i64 0, i32 1
  %22 = load float, float* %21, align 4
  %23 = fcmp oeq float %20, %22
  br i1 %23, label %24, label %258

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 1, i32 2
  %26 = load float, float* %25, align 8
  %27 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 1, i32 1
  %28 = bitcast i32* %27 to float*
  %29 = load float, float* %28, align 8
  %30 = fcmp oeq float %26, %29
  br i1 %30, label %71, label %258

31:                                               ; preds = %17
  %32 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 1, i32 3
  %33 = load float, float* %32, align 4
  %34 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 1, i32 2
  %35 = bitcast [4 x i8]* %34 to float*
  %36 = load float, float* %35, align 4
  %37 = fcmp oeq float %33, %36
  br i1 %37, label %38, label %258

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 1, i32 4
  %40 = load float, float* %39, align 8
  %41 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 2
  %42 = bitcast %"class.blink::FilterOperation"* %41 to float*
  %43 = load float, float* %42, align 8
  %44 = fcmp oeq float %40, %43
  br i1 %44, label %45, label %258

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 1, i32 5
  %47 = load float, float* %46, align 4
  %48 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %11, i64 0, i32 5
  %49 = load float, float* %48, align 4
  %50 = fcmp oeq float %47, %49
  br i1 %50, label %71, label %258

51:                                               ; preds = %17, %17
  %52 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 1, i32 6
  %53 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 2, i32 1
  %54 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 1, i32 6, i32 0, i32 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %11, i64 0, i32 6, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %55, %57
  br i1 %58, label %59, label %258

59:                                               ; preds = %51
  %60 = icmp eq i32 %55, 0
  br i1 %60, label %71, label %62

61:                                               ; preds = %17
  unreachable

62:                                               ; preds = %59
  %63 = bitcast %"class.WTF::Vector.212"* %52 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast i32* %53 to i8**
  %66 = load i8*, i8** %65, align 8
  %67 = zext i32 %55 to i64
  %68 = shl nuw nsw i64 %67, 2
  %69 = tail call i32 @bcmp(i8* %64, i8* %66, i64 %68) #10
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %258

71:                                               ; preds = %59, %17, %45, %24, %62
  %72 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 3, i32 1
  %73 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 2, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = load i32, i32* %72, align 8
  %76 = icmp eq i32 %74, %75
  br i1 %76, label %77, label %258

77:                                               ; preds = %71
  switch i32 %74, label %123 [
    i32 1, label %133
    i32 4, label %78
    i32 5, label %92
    i32 2, label %113
    i32 3, label %113
    i32 0, label %258
  ]

78:                                               ; preds = %77
  %79 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 2, i32 1
  %80 = load float, float* %79, align 4
  %81 = getelementptr inbounds i32, i32* %72, i64 1
  %82 = bitcast i32* %81 to float*
  %83 = load float, float* %82, align 4
  %84 = fcmp oeq float %80, %83
  br i1 %84, label %85, label %258

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 2, i32 2
  %87 = load float, float* %86, align 8
  %88 = getelementptr inbounds i32, i32* %72, i64 2
  %89 = bitcast i32* %88 to float*
  %90 = load float, float* %89, align 8
  %91 = fcmp oeq float %87, %90
  br i1 %91, label %133, label %258

92:                                               ; preds = %77
  %93 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 2, i32 3
  %94 = load float, float* %93, align 4
  %95 = getelementptr inbounds i32, i32* %72, i64 3
  %96 = bitcast i32* %95 to float*
  %97 = load float, float* %96, align 4
  %98 = fcmp oeq float %94, %97
  br i1 %98, label %99, label %258

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 2, i32 4
  %101 = load float, float* %100, align 8
  %102 = getelementptr inbounds i32, i32* %72, i64 4
  %103 = bitcast i32* %102 to float*
  %104 = load float, float* %103, align 8
  %105 = fcmp oeq float %101, %104
  br i1 %105, label %106, label %258

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 2, i32 5
  %108 = load float, float* %107, align 4
  %109 = getelementptr inbounds i32, i32* %72, i64 5
  %110 = bitcast i32* %109 to float*
  %111 = load float, float* %110, align 4
  %112 = fcmp oeq float %108, %111
  br i1 %112, label %133, label %258

113:                                              ; preds = %77, %77
  %114 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 2, i32 6
  %115 = getelementptr inbounds i32, i32* %72, i64 6
  %116 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 2, i32 6, i32 0, i32 0, i32 2
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds i32, i32* %72, i64 9
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %117, %119
  br i1 %120, label %121, label %258

121:                                              ; preds = %113
  %122 = icmp eq i32 %117, 0
  br i1 %122, label %133, label %124

123:                                              ; preds = %77
  unreachable

124:                                              ; preds = %121
  %125 = bitcast %"class.WTF::Vector.212"* %114 to i8**
  %126 = load i8*, i8** %125, align 8
  %127 = bitcast i32* %115 to i8**
  %128 = load i8*, i8** %127, align 8
  %129 = zext i32 %117 to i64
  %130 = shl nuw nsw i64 %129, 2
  %131 = tail call i32 @bcmp(i8* %126, i8* %128, i64 %130) #10
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %258

133:                                              ; preds = %121, %77, %106, %85, %124
  %134 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 6
  %135 = bitcast %"class.blink::FilterOperation"* %134 to %"struct.blink::ComponentTransferFunction"*
  %136 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 3, i32 0
  %137 = load i32, i32* %136, align 8
  %138 = bitcast %"class.blink::FilterOperation"* %134 to i32*
  %139 = load i32, i32* %138, align 8
  %140 = icmp eq i32 %137, %139
  br i1 %140, label %141, label %258

141:                                              ; preds = %133
  switch i32 %137, label %185 [
    i32 1, label %195
    i32 4, label %142
    i32 5, label %155
    i32 2, label %175
    i32 3, label %175
    i32 0, label %258
  ]

142:                                              ; preds = %141
  %143 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 3, i32 1
  %144 = load float, float* %143, align 4
  %145 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %135, i64 0, i32 1
  %146 = load float, float* %145, align 4
  %147 = fcmp oeq float %144, %146
  br i1 %147, label %148, label %258

148:                                              ; preds = %142
  %149 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 3, i32 2
  %150 = load float, float* %149, align 8
  %151 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 6, i32 1
  %152 = bitcast i32* %151 to float*
  %153 = load float, float* %152, align 8
  %154 = fcmp oeq float %150, %153
  br i1 %154, label %195, label %258

155:                                              ; preds = %141
  %156 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 3, i32 3
  %157 = load float, float* %156, align 4
  %158 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 6, i32 2
  %159 = bitcast [4 x i8]* %158 to float*
  %160 = load float, float* %159, align 4
  %161 = fcmp oeq float %157, %160
  br i1 %161, label %162, label %258

162:                                              ; preds = %155
  %163 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 3, i32 4
  %164 = load float, float* %163, align 8
  %165 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 7
  %166 = bitcast %"class.blink::FilterOperation"* %165 to float*
  %167 = load float, float* %166, align 8
  %168 = fcmp oeq float %164, %167
  br i1 %168, label %169, label %258

169:                                              ; preds = %162
  %170 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 3, i32 5
  %171 = load float, float* %170, align 4
  %172 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %135, i64 0, i32 5
  %173 = load float, float* %172, align 4
  %174 = fcmp oeq float %171, %173
  br i1 %174, label %195, label %258

175:                                              ; preds = %141, %141
  %176 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 3, i32 6
  %177 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 7, i32 1
  %178 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 3, i32 6, i32 0, i32 0, i32 2
  %179 = load i32, i32* %178, align 4
  %180 = getelementptr inbounds %"struct.blink::ComponentTransferFunction", %"struct.blink::ComponentTransferFunction"* %135, i64 0, i32 6, i32 0, i32 0, i32 2
  %181 = load i32, i32* %180, align 4
  %182 = icmp eq i32 %179, %181
  br i1 %182, label %183, label %258

183:                                              ; preds = %175
  %184 = icmp eq i32 %179, 0
  br i1 %184, label %195, label %186

185:                                              ; preds = %141
  unreachable

186:                                              ; preds = %183
  %187 = bitcast %"class.WTF::Vector.212"* %176 to i8**
  %188 = load i8*, i8** %187, align 8
  %189 = bitcast i32* %177 to i8**
  %190 = load i8*, i8** %189, align 8
  %191 = zext i32 %179 to i64
  %192 = shl nuw nsw i64 %191, 2
  %193 = tail call i32 @bcmp(i8* %188, i8* %190, i64 %192) #10
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %258

195:                                              ; preds = %183, %141, %169, %148, %186
  %196 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 8, i32 1
  %197 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 4, i32 0
  %198 = load i32, i32* %197, align 8
  %199 = load i32, i32* %196, align 8
  %200 = icmp eq i32 %198, %199
  br i1 %200, label %201, label %258

201:                                              ; preds = %195
  switch i32 %198, label %257 [
    i32 1, label %258
    i32 4, label %202
    i32 5, label %216
    i32 2, label %237
    i32 3, label %237
    i32 0, label %256
  ]

202:                                              ; preds = %201
  %203 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 4, i32 1
  %204 = load float, float* %203, align 4
  %205 = getelementptr inbounds i32, i32* %196, i64 1
  %206 = bitcast i32* %205 to float*
  %207 = load float, float* %206, align 4
  %208 = fcmp oeq float %204, %207
  br i1 %208, label %209, label %258

209:                                              ; preds = %202
  %210 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 4, i32 2
  %211 = load float, float* %210, align 8
  %212 = getelementptr inbounds i32, i32* %196, i64 2
  %213 = bitcast i32* %212 to float*
  %214 = load float, float* %213, align 8
  %215 = fcmp oeq float %211, %214
  br label %258

216:                                              ; preds = %201
  %217 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 4, i32 3
  %218 = load float, float* %217, align 4
  %219 = getelementptr inbounds i32, i32* %196, i64 3
  %220 = bitcast i32* %219 to float*
  %221 = load float, float* %220, align 4
  %222 = fcmp oeq float %218, %221
  br i1 %222, label %223, label %258

223:                                              ; preds = %216
  %224 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 4, i32 4
  %225 = load float, float* %224, align 8
  %226 = getelementptr inbounds i32, i32* %196, i64 4
  %227 = bitcast i32* %226 to float*
  %228 = load float, float* %227, align 8
  %229 = fcmp oeq float %225, %228
  br i1 %229, label %230, label %258

230:                                              ; preds = %223
  %231 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 4, i32 5
  %232 = load float, float* %231, align 4
  %233 = getelementptr inbounds i32, i32* %196, i64 5
  %234 = bitcast i32* %233 to float*
  %235 = load float, float* %234, align 4
  %236 = fcmp oeq float %232, %235
  br label %258

237:                                              ; preds = %201, %201
  %238 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 4, i32 6
  %239 = getelementptr inbounds i32, i32* %196, i64 6
  %240 = getelementptr inbounds %"class.blink::ComponentTransferFilterOperation", %"class.blink::ComponentTransferFilterOperation"* %0, i64 0, i32 4, i32 6, i32 0, i32 0, i32 2
  %241 = load i32, i32* %240, align 4
  %242 = getelementptr inbounds i32, i32* %196, i64 9
  %243 = load i32, i32* %242, align 4
  %244 = icmp eq i32 %241, %243
  br i1 %244, label %245, label %258

245:                                              ; preds = %237
  %246 = icmp eq i32 %241, 0
  br i1 %246, label %258, label %247

247:                                              ; preds = %245
  %248 = bitcast %"class.WTF::Vector.212"* %238 to i8**
  %249 = load i8*, i8** %248, align 8
  %250 = bitcast i32* %239 to i8**
  %251 = load i8*, i8** %250, align 8
  %252 = zext i32 %241 to i64
  %253 = shl nuw nsw i64 %252, 2
  %254 = tail call i32 @bcmp(i8* %249, i8* %251, i64 %253) #10
  %255 = icmp eq i32 %254, 0
  br label %258

256:                                              ; preds = %201
  br label %258

257:                                              ; preds = %201
  unreachable

258:                                              ; preds = %141, %175, %155, %162, %142, %133, %77, %113, %92, %99, %78, %71, %17, %51, %31, %38, %18, %9, %256, %247, %245, %237, %230, %223, %216, %209, %202, %201, %195, %169, %148, %106, %85, %45, %24, %62, %124, %186, %2
  %259 = phi i1 [ false, %2 ], [ false, %186 ], [ false, %124 ], [ false, %62 ], [ false, %24 ], [ false, %45 ], [ false, %85 ], [ false, %106 ], [ false, %148 ], [ false, %169 ], [ false, %256 ], [ false, %195 ], [ true, %201 ], [ false, %202 ], [ %215, %209 ], [ false, %223 ], [ false, %216 ], [ %236, %230 ], [ %255, %247 ], [ false, %237 ], [ true, %245 ], [ false, %9 ], [ false, %18 ], [ false, %38 ], [ false, %31 ], [ false, %51 ], [ false, %17 ], [ false, %71 ], [ false, %78 ], [ false, %99 ], [ false, %92 ], [ false, %113 ], [ false, %77 ], [ false, %133 ], [ false, %142 ], [ false, %162 ], [ false, %155 ], [ false, %175 ], [ false, %141 ]
  ret i1 %259
}

declare zeroext i1 @_ZNK5blink10Dictionary3GetERKN3WTF10StringViewERS0_(%"class.blink::Dictionary"*, %"class.WTF::StringView"* dereferenceable(24), %"class.blink::Dictionary"* dereferenceable(24)) local_unnamed_addr #1

declare double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17NativeValueTraitsINS_13IDLStringBaseILNS_20V8StringResourceModeE0EEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.v8::TryCatch", align 8
  %5 = alloca %"class.blink::V8StringResource", align 8
  %6 = bitcast %"class.blink::V8StringResource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 152, i1 false)
  %7 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1, %"class.v8::Value"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr.429"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* nonnull %5) #10
  br i1 %12, label %28, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.v8::TryCatch"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 48, i1 false) #10
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %4, %"class.v8::Isolate"* %0) #10
  %15 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %16 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #10
  %17 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %15, %"class.v8::Context"* %16) #10
  %18 = ptrtoint %"class.v8::String"* %17 to i64
  %19 = bitcast %"class.blink::V8StringResource"* %5 to i64*
  store i64 %18, i64* %19, align 8
  %20 = icmp eq %"class.v8::String"* %17, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %13
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #10
  br label %28

22:                                               ; preds = %13
  %23 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %4) #10
  %24 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %25 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %25, i64 5
  %27 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %26, align 8
  call void %27(%"class.blink::ExceptionState"* %2, %"class.v8::Value"* %23) #10
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #10
  br label %55

28:                                               ; preds = %3, %21
  %29 = load %"class.v8::Value"*, %"class.v8::Value"** %7, align 8
  %30 = icmp eq %"class.v8::Value"* %29, null
  br i1 %30, label %35, label %31, !prof !8

31:                                               ; preds = %28
  %32 = bitcast %"class.v8::Value"* %29 to %"class.v8::String"*
  %33 = load i32, i32* %8, align 8
  %34 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %32, i32 %33) #10
  br label %55

35:                                               ; preds = %28
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #10
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !8

52:                                               ; preds = %43
  call void @llvm.trap() #10
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %35, %31, %22
  %56 = phi %"class.WTF::StringImpl"* [ null, %22 ], [ %34, %31 ], [ null, %35 ], [ %36, %38 ], [ %36, %53 ]
  %57 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %5, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  store i8* null, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %55
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %58) #10
  br label %61

61:                                               ; preds = %60, %55
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #10
  br label %77

77:                                               ; preds = %61, %73, %76
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %6) #10
  ret %"class.WTF::StringImpl"* %56
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !23

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !13

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #10
  br i1 %22, label %23, label %80, !prof !13

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #10
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #10
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #10
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !8

44:                                               ; preds = %35
  tail call void @llvm.trap() #10
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #10
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #10
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_19BlurFilterOperationEEEvOT_(%"class.WTF::Vector"*, %"class.blink::BlurFilterOperation"** dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::BlurFilterOperation"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15FilterOperationEEEEEmm(i64 %11) #10
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #10
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #10
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #10
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #10
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !8

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #10
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !12
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.20, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.21, i64 0, i64 0)) #10
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #10
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #10
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15FilterOperationEEEEEmm(i64 %14) #10
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #10
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !13

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #10
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #10
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #10
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #10
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_15FilterOperationEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.49, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.50, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.51, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #10
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !8

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #10
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #10
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([171 x i8], [171 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_15FilterOperationEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !8

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15FilterOperationEE5TraceEPNS_7VisitorEPKv) #10
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_15FilterOperationEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15FilterOperationD2Ev(%"class.blink::FilterOperation"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink31BasicColorMatrixFilterOperationD0Ev(%"class.blink::BasicColorMatrixFilterOperation"*) unnamed_addr #3 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink31BasicColorMatrixFilterOperationeqERKNS_15FilterOperationE(%"class.blink::BasicColorMatrixFilterOperation"*, %"class.blink::FilterOperation"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::BasicColorMatrixFilterOperation"* %0 to %"class.blink::FilterOperation"*
  %4 = bitcast %"class.blink::BasicColorMatrixFilterOperation"* %0 to i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)***
  %5 = load i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)**, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*** %4, align 8
  %6 = getelementptr inbounds i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)** %5, i64 4
  %7 = load i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)*, i1 (%"class.blink::FilterOperation"*, %"class.blink::FilterOperation"*)** %6, align 8
  %8 = tail call zeroext i1 %7(%"class.blink::FilterOperation"* %3, %"class.blink::FilterOperation"* dereferenceable(16) %1) #10
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::BasicColorMatrixFilterOperation", %"class.blink::BasicColorMatrixFilterOperation"* %0, i64 0, i32 1
  %11 = load double, double* %10, align 8
  %12 = getelementptr inbounds %"class.blink::FilterOperation", %"class.blink::FilterOperation"* %1, i64 1
  %13 = bitcast %"class.blink::FilterOperation"* %12 to double*
  %14 = load double, double* %13, align 8
  %15 = fcmp oeq double %11, %14
  br label %16

16:                                               ; preds = %2, %9
  %17 = phi i1 [ %15, %9 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_31BasicColorMatrixFilterOperationEEEvOT_(%"class.WTF::Vector"*, %"class.blink::BasicColorMatrixFilterOperation"** dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::BasicColorMatrixFilterOperation"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_26ColorMatrixFilterOperationEEEvOT_(%"class.WTF::Vector"*, %"class.blink::ColorMatrixFilterOperation"** dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::ColorMatrixFilterOperation"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_29ConvolveMatrixFilterOperationEEEvOT_(%"class.WTF::Vector"*, %"class.blink::ConvolveMatrixFilterOperation"** dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::ConvolveMatrixFilterOperation"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS1_32ComponentTransferFilterOperationEEEvOT_(%"class.WTF::Vector"*, %"class.blink::ComponentTransferFilterOperation"** dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_15FilterOperationEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #10
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::ComponentTransferFilterOperation"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #10
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5blink22CanvasFilterDictionary4blurEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink22CanvasFilterDictionary4blurEv"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink6Length5FixedIdEES0_T_: argument 0"}
!7 = distinct !{!7, !"_ZN5blink6Length5FixedIdEES0_T_"}
!8 = !{!"branch_weights", i32 1, i32 2000}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5blink22CanvasFilterDictionary11colorMatrixEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5blink22CanvasFilterDictionary11colorMatrixEv"}
!12 = !{i8 0, i8 2}
!13 = !{!"branch_weights", i32 2000, i32 1}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK5blink22CanvasFilterDictionary14convolveMatrixEv: argument 0"}
!16 = distinct !{!16, !"_ZNK5blink22CanvasFilterDictionary14convolveMatrixEv"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink12_GLOBAL__N_115GetKernelMatrixERKNS_10DictionaryERNS_14ExceptionStateE: argument 0"}
!19 = distinct !{!19, !"_ZN5blink12_GLOBAL__N_115GetKernelMatrixERKNS_10DictionaryERNS_14ExceptionStateE"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5blink22CanvasFilterDictionary17componentTransferEv: argument 0"}
!22 = distinct !{!22, !"_ZNK5blink22CanvasFilterDictionary17componentTransferEv"}
!23 = !{!"branch_weights", i32 2146410443, i32 1073205}
