; ModuleID = '../../third_party/blink/renderer/modules/payments/payment_request_event.cc'
source_filename = "../../third_party/blink/renderer/modules/payments/payment_request_event.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.203", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.221", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.228", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.168", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.88" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__atomic_base.90" }
%"struct.std::__1::__atomic_base.90" = type { %"struct.std::__1::__cxx_atomic_impl.91" }
%"struct.std::__1::__cxx_atomic_impl.91" = type { %"struct.std::__1::__cxx_atomic_base_impl.92" }
%"struct.std::__1::__cxx_atomic_base_impl.92" = type { i64 }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist.99"* }
%"class.blink::Worklist.99" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.88" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.88" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.88" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.88" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.88" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.88" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.88" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.148", %"class.std::__1::__compressed_pair.155", %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.162", [4 x i8] }>
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150", %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { i64 }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { float }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.171", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.180" }
%"class.WTF::Vector.180" = type { %"class.WTF::VectorBuffer.181" }
%"class.WTF::VectorBuffer.181" = type { %"class.WTF::VectorBufferBase.182" }
%"class.WTF::VectorBufferBase.182" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.195" }
%"class.WTF::VectorBuffer.195" = type { %"class.WTF::VectorBufferBase.196" }
%"class.WTF::VectorBufferBase.196" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.209" }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.99"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.442" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.227 }
%class.scoped_refptr.227 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.228" = type { %"struct.std::__1::__atomic_base.229" }
%"struct.std::__1::__atomic_base.229" = type { %"struct.std::__1::__cxx_atomic_impl.230" }
%"struct.std::__1::__cxx_atomic_impl.230" = type { %"struct.std::__1::__cxx_atomic_base_impl.231" }
%"struct.std::__1::__cxx_atomic_base_impl.231" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.53" }
%"class.WTF::HashTable.53" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.55", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.450" }
%"struct.std::__1::atomic.450" = type { %"struct.std::__1::__atomic_base.451" }
%"struct.std::__1::__atomic_base.451" = type { %"struct.std::__1::__atomic_base.452" }
%"struct.std::__1::__atomic_base.452" = type { %"struct.std::__1::__cxx_atomic_impl.453" }
%"struct.std::__1::__cxx_atomic_impl.453" = type { %"struct.std::__1::__cxx_atomic_base_impl.454" }
%"struct.std::__1::__cxx_atomic_base_impl.454" = type { i32 }
%"class.blink::PaymentRequestEvent" = type { %"class.blink::ExtendableEvent", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.blink::HeapVector", %"class.blink::Member.10", %"class.blink::HeapVector.14", %"class.WTF::String", %"class.blink::Member.22", %"class.blink::HeapVector.24", %"class.blink::Member.35", %"class.blink::Member.287", %"class.blink::HeapMojoRemote" }
%"class.blink::ExtendableEvent" = type { %"class.blink::Event", %"class.blink::Member.5" }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.1", %"class.blink::Member.3", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::EventTarget"* }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::Event"* }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::WaitUntilObserver"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.9"*, i32, i32 }
%"class.blink::Member.9" = type { %"class.blink::MemberBase.1561" }
%"class.blink::MemberBase.1561" = type { %"class.blink::PaymentMethodData"* }
%"class.blink::PaymentMethodData" = type { %"class.blink::IDLDictionaryBase", %"class.blink::ScriptValue", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.280", %class.scoped_refptr.283 }
%"class.blink::TraceWrapperV8Reference.280" = type { %"class.v8::TracedReference.281" }
%"class.v8::TracedReference.281" = type { %"class.v8::BasicTracedReference.282" }
%"class.v8::BasicTracedReference.282" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.283 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::PaymentCurrencyAmount"* }
%"class.blink::PaymentCurrencyAmount" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HeapVector.14" = type { %"class.WTF::Vector.17" }
%"class.WTF::Vector.17" = type { %"class.WTF::VectorBuffer.18" }
%"class.WTF::VectorBuffer.18" = type { %"class.WTF::VectorBufferBase.19" }
%"class.WTF::VectorBufferBase.19" = type { %"class.blink::Member.20"*, i32, i32 }
%"class.blink::Member.20" = type { %"class.blink::MemberBase.1562" }
%"class.blink::MemberBase.1562" = type { %"class.blink::PaymentDetailsModifier"* }
%"class.blink::PaymentDetailsModifier" = type { %"class.blink::IDLDictionaryBase", i8, %"class.blink::HeapVector.1492", %"class.blink::ScriptValue", %"class.WTF::String", %"class.blink::Member.1498" }
%"class.blink::HeapVector.1492" = type { %"class.WTF::Vector.1495" }
%"class.WTF::Vector.1495" = type { %"class.WTF::VectorBuffer.1496" }
%"class.WTF::VectorBuffer.1496" = type { %"class.WTF::VectorBufferBase.1497" }
%"class.WTF::VectorBufferBase.1497" = type { %"class.blink::Member.1498"*, i32, i32 }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::PaymentItem"* }
%"class.blink::PaymentItem" = type <{ %"class.blink::IDLDictionaryBase", i8, [7 x i8], %"class.blink::Member.32", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::PaymentCurrencyAmount"* }
%"class.blink::Member.22" = type { %"class.blink::MemberBase.23" }
%"class.blink::MemberBase.23" = type { %"class.blink::PaymentOptions"* }
%"class.blink::PaymentOptions" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, i8, %"class.WTF::String" }
%"class.blink::HeapVector.24" = type { %"class.WTF::Vector.27" }
%"class.WTF::Vector.27" = type { %"class.WTF::VectorBuffer.28" }
%"class.WTF::VectorBuffer.28" = type { %"class.WTF::VectorBufferBase.29" }
%"class.WTF::VectorBufferBase.29" = type { %"class.blink::Member.30"*, i32, i32 }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::PaymentShippingOption"* }
%"class.blink::PaymentShippingOption" = type <{ %"class.blink::IDLDictionaryBase", i8, [7 x i8], %"class.blink::Member.32", %"class.WTF::String", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration", i32, %"class.blink::Member.44", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.280", %"class.blink::SelfKeepAlive.284" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.43"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.43" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.48, %"class.blink::Member.232", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.48 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.232" = type { %"class.blink::MemberBase.233" }
%"class.blink::MemberBase.233" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type { %"class.v8::Isolate"*, %"class.blink::HeapHashMap.236", %"class.blink::HeapHashMap.245", %"class.std::__1::unique_ptr.255", %"class.blink::ScopedPersistent", %"class.blink::ScopedPersistent.267", %"class.blink::V8DOMActivityLogger"*, %"class.blink::HeapHashMap.270" }
%"class.blink::HeapHashMap.236" = type { %"class.WTF::HashMap.239" }
%"class.WTF::HashMap.239" = type { %"class.WTF::HashTable.240" }
%"class.WTF::HashTable.240" = type <{ %"struct.WTF::KeyValuePair.242"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.242" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference" }
%"class.blink::HeapHashMap.245" = type { %"class.WTF::HashMap.248" }
%"class.WTF::HashMap.248" = type { %"class.WTF::HashTable.249" }
%"class.WTF::HashTable.249" = type <{ %"struct.WTF::KeyValuePair.251"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.251" = type { %"struct.blink::WrapperTypeInfo"*, %"class.blink::TraceWrapperV8Reference.252" }
%"class.blink::TraceWrapperV8Reference.252" = type { %"class.v8::TracedReference.253" }
%"class.v8::TracedReference.253" = type { %"class.v8::BasicTracedReference.254" }
%"class.v8::BasicTracedReference.254" = type { %"class.v8::TracedReferenceBase" }
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.gin::ContextHolder"* }
%"class.gin::ContextHolder" = type { %"class.v8::Isolate"*, %"class.v8::Global", %"class.std::__1::unique_ptr.258" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.gin::PerContextData"* }
%"class.gin::PerContextData" = type opaque
%"class.blink::ScopedPersistent.267" = type { %"class.v8::Persistent.268" }
%"class.v8::Persistent.268" = type { %"class.v8::PersistentBase.269" }
%"class.v8::PersistentBase.269" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.blink::V8DOMActivityLogger" = type opaque
%"class.blink::HeapHashMap.270" = type { %"class.WTF::HashMap.273" }
%"class.WTF::HashMap.273" = type { %"class.WTF::HashTable.274" }
%"class.WTF::HashTable.274" = type <{ %"struct.WTF::KeyValuePair.276"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.276" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.277" }
%"class.blink::Persistent.277" = type { %"class.blink::PersistentBase.278" }
%"class.blink::PersistentBase.278" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.279 }
%class.scoped_refptr.279 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.44", %"class.blink::ScriptValue" }
%"class.blink::SelfKeepAlive.284" = type { %"class.blink::Persistent.285" }
%"class.blink::Persistent.285" = type { %"class.blink::PersistentBase.286" }
%"class.blink::PersistentBase.286" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Member.287" = type { %"class.blink::MemberBase.288" }
%"class.blink::MemberBase.288" = type { %"class.blink::RespondWithObserver"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.293" }
%"class.blink::Member.293" = type { %"class.blink::MemberBase.294" }
%"class.blink::MemberBase.294" = type { %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1565" }
%"class.mojo::Remote.1565" = type { %"class.mojo::internal::InterfacePtrState.1566" }
%"class.mojo::internal::InterfacePtrState.1566" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1567" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.599, %"class.std::__1::unique_ptr.715", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.449, i32 }>
%class.scoped_refptr.599 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.449, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.681", %"class.absl::optional.686", %"class.absl::optional.639", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.706", i8, [7 x i8], %class.scoped_refptr.449, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.600" }>
%"class.base::RefCountedThreadSafe.600" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.450" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.324 }
%union.anon.324 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.601", %"class.std::__1::unique_ptr.607", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.601" = type { %"class.std::__1::__compressed_pair.602" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"struct.std::__1::__compressed_pair_elem.603" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.613 }
%class.scoped_refptr.613 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.614", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.614" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.615" }
%"struct.std::__1::atomic.615" = type { %"struct.std::__1::__atomic_base.616" }
%"struct.std::__1::__atomic_base.616" = type { %"struct.std::__1::__atomic_base.617" }
%"struct.std::__1::__atomic_base.617" = type { %"struct.std::__1::__cxx_atomic_impl.618" }
%"struct.std::__1::__cxx_atomic_impl.618" = type { %"struct.std::__1::__cxx_atomic_base_impl.619" }
%"struct.std::__1::__cxx_atomic_base_impl.619" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.449, %"class.std::__1::unique_ptr.620", %"class.absl::optional.629", %"struct.std::__1::atomic.228", i8, i8, i8, i8, i32, i32, %"class.absl::optional.639", %"class.std::__1::unique_ptr.644", i8, i64, %class.scoped_refptr.677, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.680" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.457", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.457" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.620" = type { %"class.std::__1::__compressed_pair.621" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.622" }
%"struct.std::__1::__compressed_pair_elem.622" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.449, i8, %"class.mojo::ScopedHandleBase.623", %class.scoped_refptr.624, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.625" }
%"class.mojo::ScopedHandleBase.623" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.624 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.625" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.629" = type { %"class.absl::optional_internal::optional_data.630" }
%"class.absl::optional_internal::optional_data.630" = type { %"class.absl::optional_internal::optional_data_base.631" }
%"class.absl::optional_internal::optional_data_base.631" = type { %"class.absl::optional_internal::optional_data_dtor_base.632" }
%"class.absl::optional_internal::optional_data_dtor_base.632" = type { i8, %union.anon.633 }
%union.anon.633 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.634", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.634" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.644" = type { %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.647", i8, i64, %class.scoped_refptr.648, %class.scoped_refptr.673 }
%"class.base::RepeatingCallback.647" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.648 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.649", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.651", %"class.std::__1::map.662", i8, [7 x i8] }>
%"class.base::RefCounted.649" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.650 }
%class.scoped_refptr.650 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.651" = type { %"class.std::__1::__tree.652" }
%"class.std::__1::__tree.652" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.653", %"class.std::__1::__compressed_pair.657" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"class.std::__1::map.662" = type { %"class.std::__1::__tree.663" }
%"class.std::__1::__tree.663" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.664", %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%class.scoped_refptr.673 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.677 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.678 }
%class.scoped_refptr.678 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1145", [4 x i8], %"class.base::RepeatingCallback.718", %class.scoped_refptr.449, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1145" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.718" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.679 }
%class.scoped_refptr.679 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.680" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.681" = type { %"class.absl::optional_internal::optional_data.682" }
%"class.absl::optional_internal::optional_data.682" = type { %"class.absl::optional_internal::optional_data_base.683" }
%"class.absl::optional_internal::optional_data_base.683" = type { %"class.absl::optional_internal::optional_data_dtor_base.684" }
%"class.absl::optional_internal::optional_data_dtor_base.684" = type { i8, %union.anon.685 }
%union.anon.685 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.686" = type { %"class.absl::optional_internal::optional_data.687" }
%"class.absl::optional_internal::optional_data.687" = type { %"class.absl::optional_internal::optional_data_base.688" }
%"class.absl::optional_internal::optional_data_base.688" = type { %"class.absl::optional_internal::optional_data_dtor_base.689" }
%"class.absl::optional_internal::optional_data_dtor_base.689" = type { i8, [7 x i8], %union.anon.690 }
%union.anon.690 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.639" = type { %"class.absl::optional_internal::optional_data.640" }
%"class.absl::optional_internal::optional_data.640" = type { %"class.absl::optional_internal::optional_data_base.641" }
%"class.absl::optional_internal::optional_data_base.641" = type { %"class.absl::optional_internal::optional_data_dtor_base.642" }
%"class.absl::optional_internal::optional_data_dtor_base.642" = type { i8, %union.anon.643 }
%union.anon.643 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.691 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.691 = type { %"class.std::__1::map.694" }
%"class.std::__1::map.694" = type { %"class.std::__1::__tree.695" }
%"class.std::__1::__tree.695" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.696", %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.705"*, i64 }
%"class.std::__1::unique_ptr.705" = type opaque
%"class.std::__1::map.706" = type { %"class.std::__1::__tree.707" }
%"class.std::__1::__tree.707" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.708", %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"class.std::__1::unique_ptr.715" = type { %"class.std::__1::__compressed_pair.716" }
%"class.std::__1::__compressed_pair.716" = type { %"struct.std::__1::__compressed_pair_elem.717" }
%"struct.std::__1::__compressed_pair_elem.717" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.718", %"class.base::OnceCallback.719", %"class.absl::optional.720", %"class.absl::optional.725", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.732", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.740", %"class.std::__1::map.751", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.760", i8, %class.scoped_refptr.449, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.761" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.719" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.720" = type { %"class.absl::optional_internal::optional_data.721" }
%"class.absl::optional_internal::optional_data.721" = type { %"class.absl::optional_internal::optional_data_base.722" }
%"class.absl::optional_internal::optional_data_base.722" = type { %"class.absl::optional_internal::optional_data_dtor_base.723" }
%"class.absl::optional_internal::optional_data_dtor_base.723" = type { i8, %union.anon.724 }
%union.anon.724 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.725" = type { %"class.absl::optional_internal::optional_data.726" }
%"class.absl::optional_internal::optional_data.726" = type { %"class.absl::optional_internal::optional_data_base.727" }
%"class.absl::optional_internal::optional_data_base.727" = type { %"class.absl::optional_internal::optional_data_dtor_base.728" }
%"class.absl::optional_internal::optional_data_dtor_base.728" = type { i8, %union.anon.729 }
%union.anon.729 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.449, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.730" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.730" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.731 }
%class.scoped_refptr.731 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.732" = type { %"class.std::__1::__compressed_pair.733" }
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.735", %class.scoped_refptr.736 }
%"class.base::RepeatingCallback.735" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.736 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.600", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.740" = type { %"class.std::__1::__tree.741" }
%"class.std::__1::__tree.741" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.742", %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"class.std::__1::map.751" = type { %"class.std::__1::__tree.752" }
%"class.std::__1::__tree.752" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.753", %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"class.base::OnceCallback.760" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.761" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.449 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1567" = type { %"class.std::__1::__compressed_pair.1568" }
%"class.std::__1::__compressed_pair.1568" = type { %"struct.std::__1::__compressed_pair_elem.1569" }
%"struct.std::__1::__compressed_pair_elem.1569" = type { %"class.payments::mojom::blink::PaymentHandlerHostProxy"* }
%"class.payments::mojom::blink::PaymentHandlerHostProxy" = type { %"class.payments::mojom::blink::PaymentHandlerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.payments::mojom::blink::PaymentHandlerHost" = type { i32 (...)** }
%"class.blink::PaymentRequestEventInit" = type { %"class.blink::ExtendableEventInit.base", i8, i8, i8, %"class.WTF::String", %"class.blink::HeapVector", %"class.blink::HeapVector.14", %"class.blink::Member.447", %"class.WTF::String", %"class.WTF::String", %"class.blink::HeapVector.24", %"class.WTF::String", %"class.blink::Member.32" }
%"class.blink::ExtendableEventInit.base" = type { %"class.blink::EventInit.base" }
%"class.blink::EventInit.base" = type <{ %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8 }>
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::PaymentOptions"* }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.blink::RespondWithObserver" = type { %"class.blink::ExecutionContextClient", i32, %"class.base::TimeTicks", i32, %"class.blink::Member.5" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.291" }
%"class.blink::WeakMember.291" = type { %"class.blink::MemberBase.292" }
%"class.blink::MemberBase.292" = type { %"class.blink::ExecutionContext"* }
%"class.blink::WaitUntilObserver" = type opaque
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.360", i32, i8, [3 x i8], %"class.blink::HeapVector.362", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.371", %"class.blink::Member.373", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.382", %"class.blink::Member.388", %"class.blink::Member.390", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.295" }
%"class.blink::HeapHashMap.295" = type { %"class.WTF::HashMap.298" }
%"class.WTF::HashMap.298" = type { %"class.WTF::HashTable.299" }
%"class.WTF::HashTable.299" = type <{ %"struct.WTF::KeyValuePair.301"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.301" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.302" }
%"class.blink::Supplementable.302" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.303" }
%"class.blink::HeapHashMap.303" = type { %"class.WTF::HashMap.306" }
%"class.WTF::HashMap.306" = type { %"class.WTF::HashTable.307" }
%"class.WTF::HashTable.307" = type <{ %"struct.WTF::KeyValuePair.309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.309" = type { i8*, %"class.blink::Member.1501" }
%"class.blink::Member.1501" = type { %"class.blink::MemberBase.1502" }
%"class.blink::MemberBase.1502" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1503" }
%"class.blink::Member.1503" = type { %"class.blink::MemberBase.1504" }
%"class.blink::MemberBase.1504" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.310, %"class.std::__1::unique_ptr.319", %"class.std::__1::unique_ptr.319", %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.349", %"class.blink::Member.355", i32, [4 x i8], %"class.WTF::HashSet.356", i32, i32 }
%class.scoped_refptr.310 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.311", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.313", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.318 }
%"class.WTF::RefCounted.311" = type { %"class.base::RefCounted.312" }
%"class.base::RefCounted.312" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.313" = type { %"class.absl::optional_internal::optional_data.314" }
%"class.absl::optional_internal::optional_data.314" = type { %"class.absl::optional_internal::optional_data_base.315" }
%"class.absl::optional_internal::optional_data_base.315" = type { %"class.absl::optional_internal::optional_data_dtor_base.316" }
%"class.absl::optional_internal::optional_data_dtor_base.316" = type { i8, %union.anon.317 }
%union.anon.317 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.318 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.336", %"class.std::__1::map.345"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.313" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.328", %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"class.std::__1::map.336" = type { %"class.std::__1::__tree.337" }
%"class.std::__1::__tree.337" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.338", %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"class.std::__1::map.345" = type opaque
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.355" = type { %"class.blink::MemberBase.292" }
%"class.WTF::HashSet.356" = type { %"class.WTF::HashTable.357" }
%"class.WTF::HashTable.357" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.360" = type { %"class.blink::MemberBase.361" }
%"class.blink::MemberBase.361" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.362" = type { %"class.WTF::Vector.365" }
%"class.WTF::Vector.365" = type { %"class.WTF::VectorBuffer.366" }
%"class.WTF::VectorBuffer.366" = type { %"class.WTF::VectorBufferBase.367" }
%"class.WTF::VectorBufferBase.367" = type { %"class.blink::Member.368"*, i32, i32 }
%"class.blink::Member.368" = type { %"class.blink::MemberBase.369" }
%"class.blink::MemberBase.369" = type { %"class.blink::ErrorEvent"* }
%"class.blink::ErrorEvent" = type opaque
%"class.blink::Member.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.373" = type { %"class.blink::MemberBase.374" }
%"class.blink::MemberBase.374" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.375", i32, i32 }
%"class.blink::HeapHashMap.375" = type { %"class.WTF::HashMap.378" }
%"class.WTF::HashMap.378" = type { %"class.WTF::HashTable.379" }
%"class.WTF::HashTable.379" = type <{ %"struct.WTF::KeyValuePair.381"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.381" = type opaque
%"class.std::__1::unique_ptr.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.373", i8, [7 x i8], %"class.WTF::Vector.394", %"class.blink::HeapVector.434", i8, [7 x i8], %"class.WTF::HashSet.356", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.WTF::Vector.394" = type { %"class.WTF::VectorBuffer.395" }
%"class.WTF::VectorBuffer.395" = type { %"class.WTF::VectorBufferBase.396" }
%"class.WTF::VectorBufferBase.396" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.397" }
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.400", %"class.WTF::HashMap.407", %"class.WTF::HashMap.412", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.417", i32, %"class.mojo::StructPtr.422", %"class.WTF::Vector.417" }
%"class.mojo::StructPtr.400" = type { %"class.std::__1::unique_ptr.401" }
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.407" = type { %"class.WTF::HashTable.408" }
%"class.WTF::HashTable.408" = type <{ %"struct.WTF::KeyValuePair.411"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.411" = type opaque
%"class.WTF::HashMap.412" = type { %"class.WTF::HashTable.413" }
%"class.WTF::HashTable.413" = type <{ %"struct.WTF::KeyValuePair.416"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.416" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.422" = type { %"class.std::__1::unique_ptr.423" }
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.417", i8, i8, [6 x i8] }>
%"class.WTF::Vector.417" = type { %"class.WTF::VectorBuffer.418" }
%"class.WTF::VectorBuffer.418" = type { %"class.WTF::VectorBufferBase.419" }
%"class.WTF::VectorBufferBase.419" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::HeapVector.434" = type { %"class.WTF::Vector.437" }
%"class.WTF::Vector.437" = type { %"class.WTF::VectorBuffer.438" }
%"class.WTF::VectorBuffer.438" = type { %"class.WTF::VectorBufferBase.439" }
%"class.WTF::VectorBufferBase.439" = type { %"class.blink::Member.440"*, i32, i32 }
%"class.blink::Member.440" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.458" }
%"class.blink::PersistentBase.458" = type { %"class.blink::PaymentRequestEvent"*, %"class.blink::PersistentNodePtr.459" }
%"class.blink::PersistentNodePtr.459" = type { %"class.blink::PersistentNode"* }
%"class.blink::ExtendableEventInit" = type { %"class.blink::EventInit.base", [2 x i8] }
%"class.mojo::internal::InterfacePtrStateBase" = type <{ %class.scoped_refptr.599, %"class.std::__1::unique_ptr.715", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.449, i32, [4 x i8] }>
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"struct.base::internal::BindState" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::WeakPersistent" }
%"class.blink::DOMException" = type { %"class.blink::ScriptWrappable", i16, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.absl::optional.460" = type { %"class.absl::optional_internal::optional_data.461" }
%"class.absl::optional_internal::optional_data.461" = type { %"class.absl::optional_internal::optional_data_base.462" }
%"class.absl::optional_internal::optional_data_base.462" = type { %"class.absl::optional_internal::optional_data_dtor_base.463" }
%"class.absl::optional_internal::optional_data_dtor_base.463" = type { i8, %union.anon.464 }
%union.anon.464 = type { %"class.blink::HeapVector.24" }
%"class.blink::ScriptPromise" = type { %"class.blink::Member.44", %"class.blink::ScriptValue" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.465" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.blink::KURL"* }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.472", i8* }
%"class.WTF::StringAppend.472" = type { i8*, %"class.WTF::String" }
%"class.base::OnceCallback.1429" = type { %"class.base::internal::CallbackBase" }
%"class.v8::Primitive" = type { i8 }
%"class.blink::ServiceWorkerGlobalScope" = type { %"class.blink::WorkerGlobalScope", %"class.blink::mojom::blink::ControllerServiceWorker", %"class.blink::mojom::blink::ServiceWorker", %"class.blink::Member.1041", %"class.blink::Member.1043", %"class.blink::Member.1045", %"class.blink::HeapHashMap.1047", i8, i64, i64, i64, i8, i64, i64, i64, %"class.std::__1::unique_ptr.1054", %"class.mojo::PendingRemote.1076", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoReceiver", %"class.WTF::HashMap.1081", %"class.WTF::HashMap.1086", %"class.WTF::HashMap.1086", %"class.WTF::HashMap.1086", %"class.WTF::HashMap.1086", %"class.WTF::HashMap.1086", %"class.WTF::HashMap.1086", %"class.WTF::HashMap.1086", %"class.blink::HeapHashMap.1091", %"class.WTF::HashMap.1086", %"class.WTF::HashMap.1086", %"class.WTF::HashMap.1086", %"class.WTF::HashMap.1086", %"class.WTF::HashMap.1086", %"class.WTF::HashMap.1086", %"class.WTF::HashMap.1086", %"class.WTF::HashMap.1086", %"class.WTF::HashMap.1086", %"class.WTF::HashMap.1086", %"class.WTF::HashMap.1086", %"class.blink::HeapHashMap.1091", %"class.blink::HeapHashMap.1091", %"class.blink::HeapHashMap.1098", %"class.blink::HeapHashMap.1105", %"class.WTF::HashMap.1112", %"class.std::__1::unique_ptr.1117", i8, i8, %"class.blink::HeapMojoReceiverSet", %"class.util::TokenType.1143" }
%"class.blink::WorkerGlobalScope" = type { %"class.blink::WorkerOrWorkletGlobalScope", %"class.blink::ActiveScriptWrappable", %"class.blink::Supplementable.537", %"class.blink::KURL", i32, %"class.WTF::String", %"struct.blink::UserAgentMetadata", %"class.std::__1::unique_ptr.552", %"class.blink::Member.570", %"class.blink::Member.572", %"class.blink::Member.582", %"class.blink::WorkerThread"*, i8, %"class.base::TimeTicks", %"class.blink::HeapHashMap.584", i32, %"class.blink::Member.591", %"class.std::__1::unique_ptr.593", %"class.blink::BrowserInterfaceBrokerProxy", i32, %"class.blink::Member.782", %"class.absl::optional.792", i32, %"class.std::__1::unique_ptr.798", %"class.std::__1::unique_ptr.804", i64 }
%"class.blink::WorkerOrWorkletGlobalScope" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContext.base", i8, %"class.WTF::String", %"class.base::UnguessableToken", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.510", %"class.blink::Member.516", %"class.blink::HeapHashSet.518", %class.scoped_refptr.525, %"class.blink::Member.527", %"class.blink::Member.529", i32, %"class.WTF::Vector.394", %"class.blink::WorkerReportingProxy"*, %"class.std::__1::bitset", %"class.blink::Deprecation", %"class.blink::Member.533" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.488" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.476" }
%"class.blink::HeapVector.476" = type { %"class.WTF::Vector.479" }
%"class.WTF::Vector.479" = type { %"class.WTF::VectorBuffer.480" }
%"class.WTF::VectorBuffer.480" = type { %"class.WTF::VectorBufferBase.481", [32 x i8] }
%"class.WTF::VectorBufferBase.481" = type { %"struct.std::__1::pair.482"*, i32, i32 }
%"struct.std::__1::pair.482" = type { %"class.WTF::AtomicString", %"class.blink::Member.483" }
%"class.blink::Member.483" = type { %"class.blink::MemberBase.484" }
%"class.blink::MemberBase.484" = type { %"class.blink::HeapVector.485"* }
%"class.blink::HeapVector.485" = type opaque
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.WTF::Vector.491"* }
%"class.WTF::Vector.491" = type opaque
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.360", i32, i8, [3 x i8], %"class.blink::HeapVector.362", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.371", %"class.blink::Member.373", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.382", %"class.blink::Member.388", %"class.blink::Member.390", i8 }>
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.495" }
%"class.blink::PersistentBase.495" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.498" }
%"class.blink::Supplementable.498" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.499" }
%"class.blink::HeapHashMap.499" = type { %"class.WTF::HashMap.502" }
%"class.WTF::HashMap.502" = type { %"class.WTF::HashTable.503" }
%"class.WTF::HashTable.503" = type <{ %"struct.WTF::KeyValuePair.505"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.505" = type { i8*, %"class.blink::Member.1519" }
%"class.blink::Member.1519" = type { %"class.blink::MemberBase.1520" }
%"class.blink::MemberBase.1520" = type { %"class.blink::Supplement.1521"* }
%"class.blink::Supplement.1521" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1522" }
%"class.blink::Member.1522" = type { %"class.blink::MemberBase.1523" }
%"class.blink::MemberBase.1523" = type { %"class.blink::WorkerClients"* }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.506" }
%"struct.std::__1::atomic.506" = type { %"struct.std::__1::__atomic_base.507" }
%"struct.std::__1::__atomic_base.507" = type { %"struct.std::__1::__cxx_atomic_impl.508" }
%"struct.std::__1::__cxx_atomic_impl.508" = type { %"struct.std::__1::__cxx_atomic_base_impl.509" }
%"struct.std::__1::__cxx_atomic_base_impl.509" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.1148", %"class.blink::Member.1149", %"class.blink::Member.1151", %"class.blink::Member.1155", %class.scoped_refptr.455, %class.scoped_refptr.455, %"class.blink::Member.1157", %"class.blink::Member.1159", %"class.blink::Member.1165", %"class.blink::Member.1169", %"class.blink::Member.1221", %"class.blink::HeapHashMap.1223", %"class.blink::HeapHashSet.1230", %"class.blink::HeapHashSet.1230", %"class.blink::HeapHashMap.1379", %"class.blink::HeapVector.1386", %"class.blink::Member.1394", %"class.blink::HeapTaskRunnerTimer", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1397", %"class.WTF::Vector.1404", %"class.blink::HeapHashSet.1410", %"class.blink::HeapHashSet.1410", %"class.std::__1::unique_ptr.1416", %"class.base::WeakPtr.1214", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote.1423", %"class.blink::Member.1426", i8, i8, %"class.base::WeakPtrFactory.1428" }
%"class.blink::ThreadState::PrefinalizerRegistration.1148" = type { i8 }
%"class.blink::Member.1149" = type { %"class.blink::MemberBase.1150" }
%"class.blink::MemberBase.1150" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1151" = type { %"class.blink::MemberBase.1152" }
%"class.blink::MemberBase.1152" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type { i32 (...)** }
%"class.blink::Member.1155" = type { %"class.blink::MemberBase.1156" }
%"class.blink::MemberBase.1156" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%class.scoped_refptr.455 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.blink::Member.1157" = type { %"class.blink::MemberBase.1158" }
%"class.blink::MemberBase.1158" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1159" = type { %"class.blink::MemberBase.1160" }
%"class.blink::MemberBase.1160" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1163" }
%"class.blink::Member.1163" = type { %"class.blink::MemberBase.1164" }
%"class.blink::MemberBase.1164" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1165" = type { %"class.blink::MemberBase.1166" }
%"class.blink::MemberBase.1166" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1169" = type { %"class.blink::MemberBase.1170" }
%"class.blink::MemberBase.1170" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1173", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1175", %"class.WTF::HashSet.1180", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1184", %"class.std::__1::map.1191", %"class.std::__1::map.1202", %"class.std::__1::unique_ptr.1211", %"class.blink::Member.1159", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1218", %"class.mojo::InlinedStructPtr.1220", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1175" = type { %"class.WTF::HashTable.1176" }
%"class.WTF::HashTable.1176" = type <{ %"struct.WTF::KeyValuePair.1179"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1179" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1180" = type { %"class.WTF::HashTable.1181" }
%"class.WTF::HashTable.1181" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1184" = type { %"class.WTF::HashMap.1187" }
%"class.WTF::HashMap.1187" = type { %"class.WTF::HashTable.1188" }
%"class.WTF::HashTable.1188" = type <{ %"struct.WTF::KeyValuePair.1190"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1190" = type opaque
%"class.std::__1::map.1191" = type { %"class.std::__1::__tree.1192" }
%"class.std::__1::__tree.1192" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1193", %"class.std::__1::__compressed_pair.1197" }
%"class.std::__1::__compressed_pair.1193" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"class.std::__1::__compressed_pair.1197" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"class.std::__1::map.1202" = type { %"class.std::__1::__tree.1203" }
%"class.std::__1::__tree.1203" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1204", %"class.std::__1::__compressed_pair.1208" }
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"class.std::__1::__compressed_pair.1208" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"class.std::__1::unique_ptr.1211" = type { %"class.std::__1::__compressed_pair.1212" }
%"class.std::__1::__compressed_pair.1212" = type { %"struct.std::__1::__compressed_pair_elem.1213" }
%"struct.std::__1::__compressed_pair_elem.1213" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr.1214", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.1218" = type { %"class.blink::MemberBase.1219" }
%"class.blink::MemberBase.1219" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr.1220" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1221" = type { %"class.blink::MemberBase.1222" }
%"class.blink::MemberBase.1222" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1223" = type { %"class.WTF::HashMap.1226" }
%"class.WTF::HashMap.1226" = type { %"class.WTF::HashTable.1227" }
%"class.WTF::HashTable.1227" = type <{ %"struct.WTF::KeyValuePair.1229"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1229" = type opaque
%"class.blink::HeapHashSet.1230" = type { %"class.WTF::HashSet.1233" }
%"class.WTF::HashSet.1233" = type { %"class.WTF::HashTable.1234" }
%"class.WTF::HashTable.1234" = type <{ %"class.blink::WeakMember.1236"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1236" = type { %"class.blink::MemberBase.1237" }
%"class.blink::MemberBase.1237" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.1240", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.1260", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.1343", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.1354", %"class.blink::ResourceResponse", %class.scoped_refptr.1356, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.1240" = type { %"class.absl::optional_internal::optional_data.1241" }
%"class.absl::optional_internal::optional_data.1241" = type { %"class.absl::optional_internal::optional_data_base.1242" }
%"class.absl::optional_internal::optional_data_base.1242" = type { %"class.absl::optional_internal::optional_data_dtor_base.1243" }
%"class.absl::optional_internal::optional_data_dtor_base.1243" = type { i8, %union.anon.1244 }
%union.anon.1244 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.1245", i8, %"class.absl::optional.1250", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.1245" = type { %"class.absl::optional_internal::optional_data.1246" }
%"class.absl::optional_internal::optional_data.1246" = type { %"class.absl::optional_internal::optional_data_base.1247" }
%"class.absl::optional_internal::optional_data_base.1247" = type { %"class.absl::optional_internal::optional_data_dtor_base.1248" }
%"class.absl::optional_internal::optional_data_dtor_base.1248" = type { i8, [7 x i8], %union.anon.1249 }
%union.anon.1249 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.1250" = type { %"class.absl::optional_internal::optional_data.1251" }
%"class.absl::optional_internal::optional_data.1251" = type { %"class.absl::optional_internal::optional_data_base.1252" }
%"class.absl::optional_internal::optional_data_base.1252" = type { %"class.absl::optional_internal::optional_data_dtor_base.1253" }
%"class.absl::optional_internal::optional_data_dtor_base.1253" = type { i8, %union.anon.1254 }
%union.anon.1254 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.1255", %"class.WTF::Vector.417" }
%"class.WTF::Vector.1255" = type { %"class.WTF::VectorBuffer.1256" }
%"class.WTF::VectorBuffer.1256" = type { %"class.WTF::VectorBufferBase.1257" }
%"class.WTF::VectorBufferBase.1257" = type { i32*, i32, i32 }
%"class.WTF::Vector.1260" = type { %"class.WTF::VectorBuffer.1261" }
%"class.WTF::VectorBuffer.1261" = type { %"class.WTF::VectorBufferBase.1262" }
%"class.WTF::VectorBufferBase.1262" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1339" }
%"class.WTF::HashMap.1339" = type { %"class.WTF::HashTable.1340" }
%"class.WTF::HashTable.1340" = type <{ %"struct.WTF::KeyValuePair.1342"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1342" = type <{ %"class.blink::WeakMember.1524", i32, [4 x i8] }>
%"class.blink::WeakMember.1524" = type { %"class.blink::MemberBase.1525" }
%"class.blink::MemberBase.1525" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1526", [7 x i8], %"class.blink::Member.1392", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.1526" = type { i8 }
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1237" }
%"class.blink::HeapHashSet.1343" = type { %"class.WTF::HashSet.1346" }
%"class.WTF::HashSet.1346" = type { %"class.WTF::HashTable.1347" }
%"class.WTF::HashTable.1347" = type <{ %"class.blink::WeakMember.1349"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1349" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.791", %"class.WTF::String", %"class.WTF::HashSet.786", i8, i8, %class.scoped_refptr.283, %class.scoped_refptr.1350, %class.scoped_refptr.1352 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias.791" = type { i8 }
%"class.WTF::HashSet.786" = type { %"class.WTF::HashTable.787" }
%"class.WTF::HashTable.787" = type <{ %"struct.std::__1::pair.790"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.790" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.1350 = type { %"class.base::RefCountedData.1351"* }
%"class.base::RefCountedData.1351" = type opaque
%class.scoped_refptr.1352 = type { %"class.base::RefCountedData.1353"* }
%"class.base::RefCountedData.1353" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.811" }
%"class.base::time_internal::TimeBase.811" = type { i64 }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.318, %class.scoped_refptr.318, %class.scoped_refptr.318, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.1268, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.1280", %"class.absl::optional.1285", %"class.absl::optional.1295", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.1007", %"class.absl::optional.1295", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.1295", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1007", %"class.absl::optional.1300", i8, %class.scoped_refptr.1306 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1263" }
%"class.WTF::HashMap.1263" = type { %"class.WTF::HashTable.1264" }
%"class.WTF::HashTable.1264" = type <{ %"struct.WTF::KeyValuePair.1267"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1267" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.1268 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.1269", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.1278, i8, %"class.url::Origin" }
%"class.base::RefCounted.1269" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1270" }
%"class.std::__1::vector.1270" = type { %"class.std::__1::__vector_base.1271" }
%"class.std::__1::__vector_base.1271" = type { %"class.std::__1::unique_ptr.1272"*, %"class.std::__1::unique_ptr.1272"*, %"class.std::__1::__compressed_pair.1273" }
%"class.std::__1::unique_ptr.1272" = type { %"class.std::__1::__compressed_pair.1505" }
%"class.std::__1::__compressed_pair.1505" = type { %"struct.std::__1::__compressed_pair_elem.1506" }
%"struct.std::__1::__compressed_pair_elem.1506" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1273" = type { %"struct.std::__1::__compressed_pair_elem.1274" }
%"struct.std::__1::__compressed_pair_elem.1274" = type { %"class.std::__1::unique_ptr.1272"* }
%class.scoped_refptr.1278 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1279", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1279" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.1280" = type { %"class.absl::optional_internal::optional_data.1281" }
%"class.absl::optional_internal::optional_data.1281" = type { %"class.absl::optional_internal::optional_data_base.1282" }
%"class.absl::optional_internal::optional_data_base.1282" = type { %"class.absl::optional_internal::optional_data_dtor_base.1283" }
%"class.absl::optional_internal::optional_data_dtor_base.1283" = type { i8, %union.anon.1284 }
%union.anon.1284 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.1285" = type { %"class.absl::optional_internal::optional_data.1286" }
%"class.absl::optional_internal::optional_data.1286" = type { %"class.absl::optional_internal::optional_data_base.1287" }
%"class.absl::optional_internal::optional_data_base.1287" = type { %"class.absl::optional_internal::optional_data_dtor_base.1288" }
%"class.absl::optional_internal::optional_data_dtor_base.1288" = type { i8, %union.anon.1289 }
%union.anon.1289 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.1290", %"class.WTF::Vector.417", %"class.WTF::String" }
%"class.WTF::Vector.1290" = type { %"class.WTF::VectorBuffer.1291" }
%"class.WTF::VectorBuffer.1291" = type { %"class.WTF::VectorBufferBase.1292" }
%"class.WTF::VectorBufferBase.1292" = type { %class.scoped_refptr.318*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.720", %"class.absl::optional.720" }
%"class.absl::optional.1295" = type { %"class.absl::optional_internal::optional_data.1296" }
%"class.absl::optional_internal::optional_data.1296" = type { %"class.absl::optional_internal::optional_data_base.1297" }
%"class.absl::optional_internal::optional_data_base.1297" = type { %"class.absl::optional_internal::optional_data_dtor_base.1298" }
%"class.absl::optional_internal::optional_data_dtor_base.1298" = type { i8, %union.anon.1299 }
%union.anon.1299 = type { %"class.WTF::String" }
%"class.absl::optional.1007" = type { %"class.absl::optional_internal::optional_data.1008" }
%"class.absl::optional_internal::optional_data.1008" = type { %"class.absl::optional_internal::optional_data_base.1009" }
%"class.absl::optional_internal::optional_data_base.1009" = type { %"class.absl::optional_internal::optional_data_dtor_base.1010" }
%"class.absl::optional_internal::optional_data_dtor_base.1010" = type { i8, %union.anon.1011 }
%union.anon.1011 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.1300" = type { %"class.absl::optional_internal::optional_data.1301" }
%"class.absl::optional_internal::optional_data.1301" = type { %"class.absl::optional_internal::optional_data_base.1302" }
%"class.absl::optional_internal::optional_data_base.1302" = type { %"class.absl::optional_internal::optional_data_dtor_base.1303" }
%"class.absl::optional_internal::optional_data_dtor_base.1303" = type { i8, %union.anon.1304 }
%union.anon.1304 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.1305" }
%"class.mojo::PendingRemote.1305" = type { %"struct.mojo::internal::PendingRemoteState" }
%class.scoped_refptr.1306 = type { %"class.base::RefCountedData.1307"* }
%"class.base::RefCountedData.1307" = type { %"class.base::RefCountedThreadSafe.1510", %"class.base::internal::flat_tree.1511" }
%"class.base::RefCountedThreadSafe.1510" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.1511" = type { %"class.std::__1::vector.1512" }
%"class.std::__1::vector.1512" = type { %"class.std::__1::__vector_base.1513" }
%"class.std::__1::__vector_base.1513" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1514" }
%"class.std::__1::__compressed_pair.1514" = type { %"struct.std::__1::__compressed_pair_elem.1515" }
%"struct.std::__1::__compressed_pair_elem.1515" = type { i32* }
%"class.blink::Member.1354" = type { %"class.blink::MemberBase.1355" }
%"class.blink::MemberBase.1355" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1308", %class.scoped_refptr.1323, %class.scoped_refptr.1324, %"struct.blink::CacheControlHeader", %"class.absl::optional.720", %"class.absl::optional.1325", %"class.absl::optional.1325", %"class.absl::optional.1325", i64, %"class.blink::KURL", %"class.WTF::Vector.1330", %"class.WTF::String", %"class.WTF::Vector.417", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.1007", %"class.WTF::Vector.417", %"class.blink::KURL", %"class.absl::optional.891" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.1308" = type { %"class.absl::optional_internal::optional_data.1309" }
%"class.absl::optional_internal::optional_data.1309" = type { %"class.absl::optional_internal::optional_data_base.1310" }
%"class.absl::optional_internal::optional_data_base.1310" = type { %"class.absl::optional_internal::optional_data_dtor_base.1311" }
%"class.absl::optional_internal::optional_data_dtor_base.1311" = type { i8, %union.anon.1312 }
%union.anon.1312 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.417", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1313", %"class.WTF::Vector.1318" }
%"class.WTF::Vector.1313" = type { %"class.WTF::VectorBuffer.1314" }
%"class.WTF::VectorBuffer.1314" = type { %"class.WTF::VectorBufferBase.1315" }
%"class.WTF::VectorBufferBase.1315" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.1318" = type { %"class.WTF::VectorBuffer.1319" }
%"class.WTF::VectorBuffer.1319" = type { %"class.WTF::VectorBufferBase.1320" }
%"class.WTF::VectorBufferBase.1320" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1323 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1324 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.1325" = type { %"class.absl::optional_internal::optional_data.1326" }
%"class.absl::optional_internal::optional_data.1326" = type { %"class.absl::optional_internal::optional_data_base.1327" }
%"class.absl::optional_internal::optional_data_base.1327" = type { %"class.absl::optional_internal::optional_data_dtor_base.1328" }
%"class.absl::optional_internal::optional_data_dtor_base.1328" = type { i8, %union.anon.1329 }
%union.anon.1329 = type { %"class.base::Time" }
%"class.WTF::Vector.1330" = type { %"class.WTF::VectorBuffer.1331" }
%"class.WTF::VectorBuffer.1331" = type { %"class.WTF::VectorBufferBase.1332" }
%"class.WTF::VectorBufferBase.1332" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.891" = type { %"class.absl::optional_internal::optional_data.892" }
%"class.absl::optional_internal::optional_data.892" = type { %"class.absl::optional_internal::optional_data_base.893" }
%"class.absl::optional_internal::optional_data_base.893" = type { %"class.absl::optional_internal::optional_data_dtor_base.894" }
%"class.absl::optional_internal::optional_data_dtor_base.894" = type { i8, %union.anon.895 }
%union.anon.895 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.1356 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.1357", i64, %"class.WTF::Vector.1359", %"class.WTF::Vector.1364" }
%"class.WTF::RefCounted.1357" = type { %"class.base::RefCounted.1358" }
%"class.base::RefCounted.1358" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1359" = type { %"class.WTF::VectorBuffer.1360" }
%"class.WTF::VectorBuffer.1360" = type { %"class.WTF::VectorBufferBase.1361" }
%"class.WTF::VectorBufferBase.1361" = type { i8*, i32, i32 }
%"class.WTF::Vector.1364" = type { %"class.WTF::VectorBuffer.1365" }
%"class.WTF::VectorBuffer.1365" = type { %"class.WTF::VectorBufferBase.1366" }
%"class.WTF::VectorBufferBase.1366" = type { %"class.std::__1::unique_ptr.1367"*, i32, i32 }
%"class.std::__1::unique_ptr.1367" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.1370" }
%"class.std::__1::__tree.1370" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1371", %"class.std::__1::__compressed_pair.1375" }
%"class.std::__1::__compressed_pair.1371" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"class.std::__1::__compressed_pair.1375" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"class.blink::HeapHashMap.1379" = type { %"class.WTF::HashMap.1382" }
%"class.WTF::HashMap.1382" = type { %"class.WTF::HashTable.1383" }
%"class.WTF::HashTable.1383" = type <{ %"struct.WTF::KeyValuePair.1385"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1385" = type opaque
%"class.blink::HeapVector.1386" = type { %"class.WTF::Vector.1389" }
%"class.WTF::Vector.1389" = type { %"class.WTF::VectorBuffer.1390" }
%"class.WTF::VectorBuffer.1390" = type { %"class.WTF::VectorBufferBase.1391" }
%"class.WTF::VectorBufferBase.1391" = type { %"class.blink::Member.1392"*, i32, i32 }
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.524", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.455, %"class.base::WeakPtrFactory.1396" }
%"class.base::WeakPtrFactory.1396" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.524" = type { %"class.blink::MemberBase.517" }
%"class.blink::HeapHashMap.1397" = type { %"class.WTF::HashMap.1400" }
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1403"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1403" = type opaque
%"class.WTF::Vector.1404" = type { %"class.WTF::VectorBuffer.1405" }
%"class.WTF::VectorBuffer.1405" = type { %"class.WTF::VectorBufferBase.1406" }
%"class.WTF::VectorBufferBase.1406" = type { %class.scoped_refptr.1407*, i32, i32 }
%class.scoped_refptr.1407 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1410" = type { %"class.WTF::HashSet.1413" }
%"class.WTF::HashSet.1413" = type { %"class.WTF::HashTable.1414" }
%"class.WTF::HashTable.1414" = type <{ %"class.blink::Member.1354"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1416" = type { %"class.std::__1::__compressed_pair.1417" }
%"class.std::__1::__compressed_pair.1417" = type { %"struct.std::__1::__compressed_pair_elem.1418" }
%"struct.std::__1::__compressed_pair_elem.1418" = type { %"class.WTF::HashSet.1419"* }
%"class.WTF::HashSet.1419" = type opaque
%"class.base::WeakPtr.1214" = type { %"class.base::internal::WeakPtrBase" }
%"class.blink::HeapMojoRemote.1423" = type { %"class.blink::Member.1424" }
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1428" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.518" = type { %"class.WTF::HashSet.521" }
%"class.WTF::HashSet.521" = type { %"class.WTF::HashTable.522" }
%"class.WTF::HashTable.522" = type <{ %"class.blink::WeakMember.524"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.525 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.526", [4 x i8] }>
%"class.base::RefCounted.526" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::Member.529" = type { %"class.blink::MemberBase.530" }
%"class.blink::MemberBase.530" = type { %"class.blink::WorkerOrWorkletScriptController"* }
%"class.blink::WorkerOrWorkletScriptController" = type opaque
%"class.blink::WorkerReportingProxy" = type opaque
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.531", i32, [4 x i8] }>
%"class.std::__1::bitset.531" = type { %"class.std::__1::__bitset.532" }
%"class.std::__1::__bitset.532" = type { [25 x i64] }
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type { %"class.blink::V8PerContextData::Data", %"class.blink::NameClient" }
%"class.blink::V8PerContextData::Data" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.537" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.538" }
%"class.blink::HeapHashMap.538" = type { %"class.WTF::HashMap.541" }
%"class.WTF::HashMap.541" = type { %"class.WTF::HashTable.542" }
%"class.WTF::HashTable.542" = type <{ %"struct.WTF::KeyValuePair.544"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.544" = type opaque
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.545", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.545" = type { %"class.std::__1::__vector_base.546" }
%"class.std::__1::__vector_base.546" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.547" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548" }
%"struct.std::__1::__compressed_pair_elem.548" = type { %"struct.blink::UserAgentBrandVersion"* }
%"class.std::__1::unique_ptr.552" = type { %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"class.blink::WorkerSettings"* }
%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.555", %"class.WTF::HashMap.555", %"class.WTF::HashMap.555", %"class.WTF::HashMap.555", %"class.WTF::HashMap.555", %"class.WTF::HashMap.555", %"class.WTF::HashMap.555", %"class.std::__1::unique_ptr.560" }
%"class.WTF::HashMap.555" = type { %"class.WTF::HashTable.556" }
%"class.WTF::HashTable.556" = type <{ %"struct.WTF::KeyValuePair.559"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.559" = type opaque
%"class.std::__1::unique_ptr.560" = type { %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.WTF::Vector.563"* }
%"class.WTF::Vector.563" = type opaque
%"class.blink::Member.570" = type { %"class.blink::MemberBase.571" }
%"class.blink::MemberBase.571" = type { %"class.blink::WorkerLocation"* }
%"class.blink::WorkerLocation" = type { %"class.blink::ScriptWrappable", %"class.blink::DOMURLUtilsReadOnly", %"class.blink::KURL" }
%"class.blink::DOMURLUtilsReadOnly" = type { i32 (...)** }
%"class.blink::Member.572" = type { %"class.blink::MemberBase.573" }
%"class.blink::MemberBase.573" = type { %"class.blink::WorkerNavigator"* }
%"class.blink::WorkerNavigator" = type { %"class.blink::NavigatorBase", %"class.blink::AcceptLanguagesWatcher" }
%"class.blink::NavigatorBase" = type { %"class.blink::ScriptWrappable", %"class.blink::NavigatorID", %"class.blink::NavigatorLanguage.base", %"class.blink::NavigatorUA", %"class.blink::ExecutionContextClient", %"class.blink::Supplementable.574" }
%"class.blink::NavigatorID" = type { i32 (...)** }
%"class.blink::NavigatorLanguage.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.291", %"class.WTF::Vector.417", i8 }>
%"class.blink::NavigatorUA" = type { i32 (...)** }
%"class.blink::Supplementable.574" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.575" }
%"class.blink::HeapHashMap.575" = type { %"class.WTF::HashMap.578" }
%"class.WTF::HashMap.578" = type { %"class.WTF::HashTable.579" }
%"class.WTF::HashTable.579" = type <{ %"struct.WTF::KeyValuePair.581"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.581" = type { i8*, %"class.blink::Member.1528" }
%"class.blink::Member.1528" = type { %"class.blink::MemberBase.1529" }
%"class.blink::MemberBase.1529" = type { %"class.blink::Supplement.1530"* }
%"class.blink::Supplement.1530" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1531" }
%"class.blink::Member.1531" = type { %"class.blink::MemberBase.1532" }
%"class.blink::MemberBase.1532" = type { %"class.blink::NavigatorBase"* }
%"class.blink::AcceptLanguagesWatcher" = type { i32 (...)** }
%"class.blink::Member.582" = type { %"class.blink::MemberBase.583" }
%"class.blink::MemberBase.583" = type { %"class.blink::TrustedTypePolicyFactory"* }
%"class.blink::TrustedTypePolicyFactory" = type opaque
%"class.blink::WorkerThread" = type opaque
%"class.blink::HeapHashMap.584" = type { %"class.WTF::HashMap.587" }
%"class.WTF::HashMap.587" = type { %"class.WTF::HashTable.588" }
%"class.WTF::HashTable.588" = type <{ %"struct.WTF::KeyValuePair.590"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.590" = type opaque
%"class.blink::Member.591" = type { %"class.blink::MemberBase.592" }
%"class.blink::MemberBase.592" = type { %"class.blink::OffscreenFontSelector"* }
%"class.blink::OffscreenFontSelector" = type opaque
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::BrowserInterfaceBrokerProxy" = type { %"class.mojo::Remote", %"class.std::__1::map.771" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.765" }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.blink::mojom::BrowserInterfaceBrokerProxy"* }
%"class.blink::mojom::BrowserInterfaceBrokerProxy" = type { %"class.blink::mojom::BrowserInterfaceBroker", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::BrowserInterfaceBroker" = type { i32 (...)** }
%"class.std::__1::map.771" = type { %"class.std::__1::__tree.772" }
%"class.std::__1::__tree.772" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.773", %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::Script"* }
%"class.blink::Script" = type { i32 (...)**, %"class.blink::ScriptFetchOptions", %"class.blink::KURL" }
%"class.blink::ScriptFetchOptions" = type <{ %"class.WTF::String", %"class.WTF::HashSet.786", %"class.WTF::String", i8, [3 x i8], i32, i32, i32, i8, %"class.base::StrongAlias.791", [6 x i8] }>
%"class.absl::optional.792" = type { %"class.absl::optional_internal::optional_data.793" }
%"class.absl::optional_internal::optional_data.793" = type { %"class.absl::optional_internal::optional_data_base.794" }
%"class.absl::optional_internal::optional_data_base.794" = type { %"class.absl::optional_internal::optional_data_dtor_base.795" }
%"class.absl::optional_internal::optional_data_dtor_base.795" = type { i8, [7 x i8], %union.anon.796 }
%union.anon.796 = type { %"struct.v8_inspector::V8StackTraceId" }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair.797", i8, [7 x i8] }>
%"struct.std::__1::pair.797" = type { i64, i64 }
%"class.std::__1::unique_ptr.798" = type { %"class.std::__1::__compressed_pair.799" }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.804" = type { %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"struct.blink::WorkerMainScriptLoadParameters"* }
%"struct.blink::WorkerMainScriptLoadParameters" = type { i32, %"class.mojo::StructPtr.807", %"class.mojo::ScopedHandleBase.1015", %"class.mojo::StructPtr.1016", %"class.std::__1::vector.1024", %"class.std::__1::vector.1031" }
%"class.mojo::StructPtr.807" = type { %"class.std::__1::unique_ptr.808" }
%"class.std::__1::unique_ptr.808" = type { %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.network::mojom::URLResponseHead"* }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr.812, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr.827", i8, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.843", i32, [4 x i8], i64, %"class.std::__1::basic_string", i32, [4 x i8], %"class.absl::optional.849", %"class.std::__1::vector.856", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.891", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.896", %"class.absl::optional.996", %"class.absl::optional.1007", %"class.std::__1::vector.856", %class.GURL, i8, [7 x i8] }>
%class.scoped_refptr.812 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.813", %"class.std::__1::vector.814", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.813" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.814" = type { %"class.std::__1::__vector_base.815" }
%"class.std::__1::__vector_base.815" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.816" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"struct.std::__1::__compressed_pair_elem.817" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.mojo::StructPtr.827" = type { %"class.std::__1::unique_ptr.828" }
%"class.std::__1::unique_ptr.828" = type { %"class.std::__1::__compressed_pair.829" }
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.830" }
%"struct.std::__1::__compressed_pair_elem.830" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.831", %"class.std::__1::vector.831", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.831" = type { %"class.std::__1::__vector_base.832" }
%"class.std::__1::__vector_base.832" = type { %"class.mojo::InlinedStructPtr.833"*, %"class.mojo::InlinedStructPtr.833"*, %"class.std::__1::__compressed_pair.835" }
%"class.mojo::InlinedStructPtr.833" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"class.mojo::InlinedStructPtr.833"* }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::vector.843" = type { %"class.std::__1::__vector_base.844" }
%"class.std::__1::__vector_base.844" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"struct.std::__1::__compressed_pair_elem.823" = type { %class.GURL* }
%"class.absl::optional.849" = type { %"class.absl::optional_internal::optional_data.850" }
%"class.absl::optional_internal::optional_data.850" = type { %"class.absl::optional_internal::optional_data_base.851" }
%"class.absl::optional_internal::optional_data_base.851" = type { %"class.absl::optional_internal::optional_data_dtor_base.852" }
%"class.absl::optional_internal::optional_data_dtor_base.852" = type { i8, [7 x i8], %union.anon.853 }
%union.anon.853 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.854, %class.scoped_refptr.854, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.874", %"class.std::__1::basic_string", %"class.std::__1::vector.882", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.854 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.855", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.863", %"class.std::__1::vector.867" }
%"class.base::RefCountedThreadSafe.855" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.856", %"class.std::__1::vector.856", %"class.std::__1::vector.856", %"class.std::__1::vector.856" }
%"class.std::__1::unique_ptr.863" = type { %"class.std::__1::__compressed_pair.864" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.865" }
%"struct.std::__1::__compressed_pair_elem.865" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.867" = type { %"class.std::__1::__vector_base.868" }
%"class.std::__1::__vector_base.868" = type { %"class.std::__1::unique_ptr.863"*, %"class.std::__1::unique_ptr.863"*, %"class.std::__1::__compressed_pair.869" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.870" }
%"struct.std::__1::__compressed_pair_elem.870" = type { %"class.std::__1::unique_ptr.863"* }
%"class.std::__1::vector.874" = type { %"class.std::__1::__vector_base.875" }
%"class.std::__1::__vector_base.875" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.877" }
%"class.net::HashValue" = type { i32, %union.anon.876 }
%union.anon.876 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.882" = type { %"class.std::__1::__vector_base.883" }
%"class.std::__1::__vector_base.883" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.886" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.884, i32, [4 x i8] }>
%class.scoped_refptr.884 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.885", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.885" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.mojo::StructPtr.896" = type { %"class.std::__1::unique_ptr.897" }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.900", %"class.mojo::StructPtr.948", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.960", %"class.base::TimeDelta", %"class.absl::optional.960", i32, [4 x i8], %"class.std::__1::vector.972", %"class.mojo::StructPtr.986", i8, [7 x i8] }>
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { %"class.mojo::StructPtr.902"*, %"class.mojo::StructPtr.902"*, %"class.std::__1::__compressed_pair.943" }
%"class.mojo::StructPtr.902" = type { %"class.std::__1::unique_ptr.903" }
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.906", %"class.base::flat_map", %"class.base::flat_map.921", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.931", i8, %"class.std::__1::vector.856", i32, %"class.mojo::StructPtr.933", %"class.std::__1::vector.856" }
%"class.mojo::StructPtr.906" = type { %"class.std::__1::unique_ptr.907" }
%"class.std::__1::unique_ptr.907" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.909" }
%"struct.std::__1::__compressed_pair_elem.909" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.913" }
%"class.std::__1::vector.913" = type { %"class.std::__1::__vector_base.914" }
%"class.std::__1::__vector_base.914" = type { %"struct.std::__1::pair.915"*, %"struct.std::__1::pair.915"*, %"class.std::__1::__compressed_pair.916" }
%"struct.std::__1::pair.915" = type opaque
%"class.std::__1::__compressed_pair.916" = type { %"struct.std::__1::__compressed_pair_elem.917" }
%"struct.std::__1::__compressed_pair_elem.917" = type { %"struct.std::__1::pair.915"* }
%"class.base::flat_map.921" = type { %"class.base::internal::flat_tree.922" }
%"class.base::internal::flat_tree.922" = type { %"class.std::__1::vector.923" }
%"class.std::__1::vector.923" = type { %"class.std::__1::__vector_base.924" }
%"class.std::__1::__vector_base.924" = type { %"struct.std::__1::pair.925"*, %"struct.std::__1::pair.925"*, %"class.std::__1::__compressed_pair.926" }
%"struct.std::__1::pair.925" = type opaque
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"struct.std::__1::pair.925"* }
%"class.mojo::InlinedStructPtr.931" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.933" = type { %"class.std::__1::unique_ptr.934" }
%"class.std::__1::unique_ptr.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.856", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.944" }
%"struct.std::__1::__compressed_pair_elem.944" = type { %"class.mojo::StructPtr.902"* }
%"class.mojo::StructPtr.948" = type { %"class.std::__1::unique_ptr.949" }
%"class.std::__1::unique_ptr.949" = type { %"class.std::__1::__compressed_pair.950" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.951" }
%"struct.std::__1::__compressed_pair_elem.951" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.955", i32, %"class.absl::optional.955" }
%"class.absl::optional.955" = type { %"class.absl::optional_internal::optional_data.956" }
%"class.absl::optional_internal::optional_data.956" = type { %"class.absl::optional_internal::optional_data_base.957" }
%"class.absl::optional_internal::optional_data_base.957" = type { %"class.absl::optional_internal::optional_data_dtor_base.958" }
%"class.absl::optional_internal::optional_data_dtor_base.958" = type { i8, %union.anon.959 }
%union.anon.959 = type { %"class.std::__1::basic_string" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.955", i32, %"class.absl::optional.955" }
%"class.absl::optional.960" = type { %"class.absl::optional_internal::optional_data.961" }
%"class.absl::optional_internal::optional_data.961" = type { %"class.absl::optional_internal::optional_data_base.962" }
%"class.absl::optional_internal::optional_data_base.962" = type { %"class.absl::optional_internal::optional_data_dtor_base.963" }
%"class.absl::optional_internal::optional_data_dtor_base.963" = type { i8, %union.anon.964 }
%union.anon.964 = type { %"class.std::__1::vector.965" }
%"class.std::__1::vector.965" = type { %"class.std::__1::__vector_base.966" }
%"class.std::__1::__vector_base.966" = type { i32*, i32*, %"class.std::__1::__compressed_pair.967" }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.968" }
%"struct.std::__1::__compressed_pair_elem.968" = type { i32* }
%"class.std::__1::vector.972" = type { %"class.std::__1::__vector_base.973" }
%"class.std::__1::__vector_base.973" = type { %"class.mojo::StructPtr.974"*, %"class.mojo::StructPtr.974"*, %"class.std::__1::__compressed_pair.981" }
%"class.mojo::StructPtr.974" = type { %"class.std::__1::unique_ptr.975" }
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.955" }
%"class.std::__1::__compressed_pair.981" = type { %"struct.std::__1::__compressed_pair_elem.982" }
%"struct.std::__1::__compressed_pair_elem.982" = type { %"class.mojo::StructPtr.974"* }
%"class.mojo::StructPtr.986" = type { %"class.std::__1::unique_ptr.987" }
%"class.std::__1::unique_ptr.987" = type { %"class.std::__1::__compressed_pair.988" }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.989" }
%"struct.std::__1::__compressed_pair_elem.989" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.856"* }
%"class.absl::optional.996" = type { %"class.absl::optional_internal::optional_data.997" }
%"class.absl::optional_internal::optional_data.997" = type { %"class.absl::optional_internal::optional_data_base.998" }
%"class.absl::optional_internal::optional_data_base.998" = type { %"class.absl::optional_internal::optional_data_dtor_base.999" }
%"class.absl::optional_internal::optional_data_dtor_base.999" = type { i8, %union.anon.1000 }
%union.anon.1000 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.1001" }
%"class.std::__1::unique_ptr.1001" = type { %"class.std::__1::__compressed_pair.1002" }
%"class.std::__1::__compressed_pair.1002" = type { %"struct.std::__1::__compressed_pair_elem.1003" }
%"struct.std::__1::__compressed_pair_elem.1003" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.856", %"class.absl::optional.955", %"class.std::__1::vector.856", %"class.std::__1::vector.856" }
%"class.std::__1::vector.856" = type { %"class.std::__1::__vector_base.857" }
%"class.std::__1::__vector_base.857" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.858" }
%"class.std::__1::__compressed_pair.858" = type { %"struct.std::__1::__compressed_pair_elem.859" }
%"struct.std::__1::__compressed_pair_elem.859" = type { %"class.std::__1::basic_string"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.821" }
%"class.std::__1::unique_ptr.821" = type { %"class.std::__1::__compressed_pair.822" }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"class.mojo::ScopedHandleBase.1015" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::StructPtr.1016" = type { %"class.std::__1::unique_ptr.1017" }
%"class.std::__1::unique_ptr.1017" = type { %"class.std::__1::__compressed_pair.1018" }
%"class.std::__1::__compressed_pair.1018" = type { %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.network::mojom::URLLoaderClientEndpoints"* }
%"class.network::mojom::URLLoaderClientEndpoints" = type { %"class.mojo::PendingRemote.1020", %"class.mojo::PendingReceiver" }
%"class.mojo::PendingRemote.1020" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.std::__1::vector.1024" = type { %"class.std::__1::__vector_base.1025" }
%"class.std::__1::__vector_base.1025" = type { %"struct.net::RedirectInfo"*, %"struct.net::RedirectInfo"*, %"class.std::__1::__compressed_pair.1026" }
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"struct.net::RedirectInfo"* }
%"class.std::__1::vector.1031" = type { %"class.std::__1::__vector_base.1032" }
%"class.std::__1::__vector_base.1032" = type { %"class.mojo::StructPtr.807"*, %"class.mojo::StructPtr.807"*, %"class.std::__1::__compressed_pair.1033" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.1034" }
%"struct.std::__1::__compressed_pair_elem.1034" = type { %"class.mojo::StructPtr.807"* }
%"class.blink::mojom::blink::ControllerServiceWorker" = type { i32 (...)** }
%"class.blink::mojom::blink::ServiceWorker" = type { i32 (...)** }
%"class.blink::Member.1041" = type { %"class.blink::MemberBase.1042" }
%"class.blink::MemberBase.1042" = type { %"class.blink::ServiceWorkerClients"* }
%"class.blink::ServiceWorkerClients" = type opaque
%"class.blink::Member.1043" = type { %"class.blink::MemberBase.1044" }
%"class.blink::MemberBase.1044" = type { %"class.blink::ServiceWorkerRegistration"* }
%"class.blink::ServiceWorkerRegistration" = type opaque
%"class.blink::Member.1045" = type { %"class.blink::MemberBase.1046" }
%"class.blink::MemberBase.1046" = type { %"class.blink::ServiceWorker"* }
%"class.blink::ServiceWorker" = type opaque
%"class.blink::HeapHashMap.1047" = type { %"class.WTF::HashMap.1050" }
%"class.WTF::HashMap.1050" = type { %"class.WTF::HashTable.1051" }
%"class.WTF::HashTable.1051" = type <{ %"struct.WTF::KeyValuePair.1053"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1053" = type opaque
%"class.std::__1::unique_ptr.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"class.blink::ServiceWorkerInstalledScriptsManager"* }
%"class.blink::ServiceWorkerInstalledScriptsManager" = type { %"class.blink::InstalledScriptsManager", %"class.WTF::HashSet.1057", %class.scoped_refptr.1061, %"class.mojo::SharedRemote" }
%"class.blink::InstalledScriptsManager" = type { i32 (...)** }
%"class.WTF::HashSet.1057" = type { %"class.WTF::HashTable.1058" }
%"class.WTF::HashTable.1058" = type <{ %"class.blink::KURL"*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1061 = type { %"class.blink::ThreadSafeScriptContainer"* }
%"class.blink::ThreadSafeScriptContainer" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.WTF::Mutex", %"class.WTF::ThreadCondition", %"class.WTF::HashMap.1067", %"class.blink::KURL", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1062" }
%"class.base::RefCountedThreadSafe.1062" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::ThreadCondition" = type { %union.pthread_cond_t, %"struct.WTF::PlatformMutex"* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1063, %union.anon.1065, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1063 = type { i64 }
%union.anon.1065 = type { i64 }
%"class.WTF::HashMap.1067" = type { %"class.WTF::HashTable.1068" }
%"class.WTF::HashTable.1068" = type <{ %"struct.WTF::KeyValuePair.1071"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1071" = type opaque
%"class.mojo::SharedRemote" = type { %class.scoped_refptr.1072 }
%class.scoped_refptr.1072 = type { %"class.mojo::SharedRemoteBase"* }
%"class.mojo::SharedRemoteBase" = type opaque
%"class.mojo::PendingRemote.1076" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1077" }
%"class.blink::Member.1077" = type { %"class.blink::MemberBase.1078" }
%"class.blink::MemberBase.1078" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::ServiceWorkerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::ServiceWorkerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote" }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1535" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.715", i32 }>
%"class.std::__1::unique_ptr.1535" = type { %"class.std::__1::__compressed_pair.1536" }
%"class.std::__1::__compressed_pair.1536" = type { %"struct.std::__1::__compressed_pair_elem.1537" }
%"struct.std::__1::__compressed_pair_elem.1537" = type { %"class.blink::mojom::blink::ServiceWorkerHostProxy"* }
%"class.blink::mojom::blink::ServiceWorkerHostProxy" = type { %"class.blink::mojom::blink::ServiceWorkerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ServiceWorkerHost" = type { i32 (...)** }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1079" }
%"class.blink::Member.1079" = type { %"class.blink::MemberBase.1080" }
%"class.blink::MemberBase.1080" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::ServiceWorker, blink::ServiceWorkerGlobalScope, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::ServiceWorker, blink::ServiceWorkerGlobalScope, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1543", %"class.blink::Member.1544", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1543" = type { i8 }
%"class.blink::Member.1544" = type { %"class.blink::MemberBase.1545" }
%"class.blink::MemberBase.1545" = type { %"class.blink::ServiceWorkerGlobalScope"* }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::ServiceWorkerStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.599, %"class.std::__1::unique_ptr.715", %"class.base::WeakPtrFactory.1546" }
%"class.base::WeakPtrFactory.1546" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::ServiceWorkerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::ServiceWorker"* }
%"class.WTF::HashMap.1081" = type { %"class.WTF::HashTable.1082" }
%"class.WTF::HashTable.1082" = type <{ %"struct.WTF::KeyValuePair.1085"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1085" = type opaque
%"class.WTF::HashMap.1086" = type { %"class.WTF::HashTable.1087" }
%"class.WTF::HashTable.1087" = type <{ %"struct.WTF::KeyValuePair.1090"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1090" = type opaque
%"class.blink::HeapHashMap.1091" = type { %"class.WTF::HashMap.1094" }
%"class.WTF::HashMap.1094" = type { %"class.WTF::HashTable.1095" }
%"class.WTF::HashTable.1095" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type opaque
%"class.blink::HeapHashMap.1098" = type { %"class.WTF::HashMap.1101" }
%"class.WTF::HashMap.1101" = type { %"class.WTF::HashTable.1102" }
%"class.WTF::HashTable.1102" = type <{ %"struct.WTF::KeyValuePair.1104"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1104" = type opaque
%"class.blink::HeapHashMap.1105" = type { %"class.WTF::HashMap.1108" }
%"class.WTF::HashMap.1108" = type { %"class.WTF::HashTable.1109" }
%"class.WTF::HashTable.1109" = type <{ %"struct.WTF::KeyValuePair.1111"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1111" = type opaque
%"class.WTF::HashMap.1112" = type { %"class.WTF::HashTable.1113" }
%"class.WTF::HashTable.1113" = type <{ %"struct.WTF::KeyValuePair.1116"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1116" = type opaque
%"class.std::__1::unique_ptr.1117" = type { %"class.std::__1::__compressed_pair.1118" }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.1119" }
%"struct.std::__1::__compressed_pair_elem.1119" = type { %"class.blink::ServiceWorkerEventQueue"* }
%"class.blink::ServiceWorkerEventQueue" = type { %class.scoped_refptr.449, %"class.WTF::HashMap.1120", %"class.base::RepeatingCallback.1125", %"class.base::RepeatingCallback.718", %"class.blink::TaskHandle", %"class.base::TimeTicks", %"class.base::TimeDelta", i8, %"class.std::__1::map.1126", %"class.std::__1::map.1126", i8, i32, i32, %"class.base::RepeatingTimer", %"class.base::TickClock"*, i32, %"class.base::WeakPtrFactory.1137" }
%"class.WTF::HashMap.1120" = type { %"class.WTF::HashTable.1121" }
%"class.WTF::HashTable.1121" = type <{ %"struct.WTF::KeyValuePair.1124"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1124" = type opaque
%"class.base::RepeatingCallback.1125" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1126" = type { %"class.std::__1::__tree.1127" }
%"class.std::__1::__tree.1127" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1128", %"class.std::__1::__compressed_pair.1132" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback.718" }
%"class.base::WeakPtrFactory.1137" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiverSet" = type { %"class.blink::Member.1141" }
%"class.blink::Member.1141" = type { %"class.blink::MemberBase.1142" }
%"class.blink::MemberBase.1142" = type { %"class.blink::HeapMojoReceiverSet<blink::mojom::blink::ControllerServiceWorker, blink::ServiceWorkerGlobalScope, blink::HeapMojoWrapperMode::kWithContextObserver, std::__1::unique_ptr<blink::CrossOriginResourcePolicyChecker, std::__1::default_delete<blink::CrossOriginResourcePolicyChecker> > >::Wrapper"* }
%"class.blink::HeapMojoReceiverSet<blink::mojom::blink::ControllerServiceWorker, blink::ServiceWorkerGlobalScope, blink::HeapMojoWrapperMode::kWithContextObserver, std::__1::unique_ptr<blink::CrossOriginResourcePolicyChecker, std::__1::default_delete<blink::CrossOriginResourcePolicyChecker> > >::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1549", %"class.blink::Member.1544", %"class.mojo::ReceiverSetBase" }
%"class.blink::ThreadState::PrefinalizerRegistration.1549" = type { i8 }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.718", %"class.base::RepeatingCallback.1550", i64, %"class.std::__1::map.1551", i8*, i64, %"class.base::WeakPtrFactory.1560" }
%"class.base::RepeatingCallback.1550" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1551" = type { %"class.std::__1::__tree.1552" }
%"class.std::__1::__tree.1552" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1553", %"class.std::__1::__compressed_pair.1557" }
%"class.std::__1::__compressed_pair.1553" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"class.std::__1::__compressed_pair.1557" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"class.base::WeakPtrFactory.1560" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.util::TokenType.1143" = type { %"class.base::StrongAlias.1144" }
%"class.base::StrongAlias.1144" = type { %"class.base::UnguessableToken" }
%"class.WTF::StringTypeAdapter.1636" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.280" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.mojo::InlinedStructPtr.1430" = type <{ %"class.payments::mojom::blink::PaymentHandlerMethodData", i32, [4 x i8] }>
%"class.payments::mojom::blink::PaymentHandlerMethodData" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.base::OnceCallback.1432" = type { %"class.base::internal::CallbackBase" }
%"struct.base::internal::BindState.1639" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple" }
%"class.mojo::StructPtr.1433" = type { %"class.std::__1::unique_ptr.1434" }
%"class.std::__1::unique_ptr.1434" = type { %"class.std::__1::__compressed_pair.1435" }
%"class.std::__1::__compressed_pair.1435" = type { %"struct.std::__1::__compressed_pair_elem.1436" }
%"struct.std::__1::__compressed_pair_elem.1436" = type { %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* }
%"class.payments::mojom::blink::PaymentRequestDetailsUpdate" = type { %"class.mojo::InlinedStructPtr.1437", %"class.absl::optional.1439", %"class.absl::optional.1456", %"class.WTF::String", %"class.WTF::String", %"class.mojo::StructPtr.1473" }
%"class.mojo::InlinedStructPtr.1437" = type <{ %"class.payments::mojom::blink::PaymentCurrencyAmount", i32, [4 x i8] }>
%"class.payments::mojom::blink::PaymentCurrencyAmount" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.absl::optional.1439" = type { %"class.absl::optional_internal::optional_data.1440" }
%"class.absl::optional_internal::optional_data.1440" = type { %"class.absl::optional_internal::optional_data_base.1441" }
%"class.absl::optional_internal::optional_data_base.1441" = type { %"class.absl::optional_internal::optional_data_dtor_base.1442" }
%"class.absl::optional_internal::optional_data_dtor_base.1442" = type { i8, %union.anon.1443 }
%union.anon.1443 = type { %"class.WTF::Vector.1444" }
%"class.WTF::Vector.1444" = type { %"class.WTF::VectorBuffer.1445" }
%"class.WTF::VectorBuffer.1445" = type { %"class.WTF::VectorBufferBase.1446" }
%"class.WTF::VectorBufferBase.1446" = type { %"class.mojo::StructPtr.1447"*, i32, i32 }
%"class.mojo::StructPtr.1447" = type { %"class.std::__1::unique_ptr.1448" }
%"class.std::__1::unique_ptr.1448" = type { %"class.std::__1::__compressed_pair.1449" }
%"class.std::__1::__compressed_pair.1449" = type { %"struct.std::__1::__compressed_pair_elem.1450" }
%"struct.std::__1::__compressed_pair_elem.1450" = type { %"class.payments::mojom::blink::PaymentShippingOption"* }
%"class.payments::mojom::blink::PaymentShippingOption" = type <{ %"class.WTF::String", %"class.WTF::String", %"class.mojo::InlinedStructPtr.1437", i8, [7 x i8] }>
%"class.absl::optional.1456" = type { %"class.absl::optional_internal::optional_data.1457" }
%"class.absl::optional_internal::optional_data.1457" = type { %"class.absl::optional_internal::optional_data_base.1458" }
%"class.absl::optional_internal::optional_data_base.1458" = type { %"class.absl::optional_internal::optional_data_dtor_base.1459" }
%"class.absl::optional_internal::optional_data_dtor_base.1459" = type { i8, %union.anon.1460 }
%union.anon.1460 = type { %"class.WTF::Vector.1461" }
%"class.WTF::Vector.1461" = type { %"class.WTF::VectorBuffer.1462" }
%"class.WTF::VectorBuffer.1462" = type { %"class.WTF::VectorBufferBase.1463" }
%"class.WTF::VectorBufferBase.1463" = type { %"class.mojo::StructPtr.1464"*, i32, i32 }
%"class.mojo::StructPtr.1464" = type { %"class.std::__1::unique_ptr.1465" }
%"class.std::__1::unique_ptr.1465" = type { %"class.std::__1::__compressed_pair.1466" }
%"class.std::__1::__compressed_pair.1466" = type { %"struct.std::__1::__compressed_pair_elem.1467" }
%"struct.std::__1::__compressed_pair_elem.1467" = type { %"class.payments::mojom::blink::PaymentHandlerModifier"* }
%"class.payments::mojom::blink::PaymentHandlerModifier" = type { %"class.mojo::InlinedStructPtr.1437", %"class.mojo::InlinedStructPtr.1430" }
%"class.mojo::StructPtr.1473" = type { %"class.std::__1::unique_ptr.1474" }
%"class.std::__1::unique_ptr.1474" = type { %"class.std::__1::__compressed_pair.1475" }
%"class.std::__1::__compressed_pair.1475" = type { %"struct.std::__1::__compressed_pair_elem.1476" }
%"struct.std::__1::__compressed_pair_elem.1476" = type { %"class.payments::mojom::blink::AddressErrors"* }
%"class.payments::mojom::blink::AddressErrors" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::ScriptState::Scope" = type { %"class.v8::HandleScope", %"class.v8::Local.243" }
%"class.v8::HandleScope" = type { %"class.v8::internal::Isolate"*, i64*, i64* }
%"class.v8::Local.243" = type { %"class.v8::Context"* }
%"class.blink::PaymentRequestDetailsUpdate" = type { %"class.blink::IDLDictionaryBase", i8, i8, %"class.WTF::String", %"class.blink::HeapVector.14", %"class.blink::ScriptValue", %"class.blink::Member.1490", %"class.blink::HeapVector.24", %"class.blink::Member.32" }
%"class.blink::Member.1490" = type { %"class.blink::MemberBase.1491" }
%"class.blink::MemberBase.1491" = type { %"class.blink::AddressErrors"* }
%"class.blink::AddressErrors" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::AddressInit" = type { %"class.blink::IDLDictionaryBase", i8, %"class.WTF::Vector.417", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.mojo::StructPtr.1483" = type { %"class.std::__1::unique_ptr.1484" }
%"class.std::__1::unique_ptr.1484" = type { %"class.std::__1::__compressed_pair.1485" }
%"class.std::__1::__compressed_pair.1485" = type { %"struct.std::__1::__compressed_pair_elem.1486" }
%"struct.std::__1::__compressed_pair_elem.1486" = type { %"class.payments::mojom::blink::PaymentAddress"* }
%"class.payments::mojom::blink::PaymentAddress" = type { %"class.WTF::String", %"class.WTF::Vector.417", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::EventDispatcher" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapVectorBacking.1608" = type { i8 }
%"class.blink::HeapVectorBacking.1620" = type { i8 }
%"class.v8::MicrotasksScope" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::MicrotaskQueue"*, i8, [7 x i8] }>
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.blink::ExecutionContextLifecycleObserver" = type <{ %"class.blink::ContextLifecycleObserver", i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.1637" = type { %"class.WTF::StringTypeAdapter.1638" }
%"class.WTF::StringTypeAdapter.1638" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZNK5blink27PaymentRequestDetailsUpdate22hasPaymentMethodErrorsEv = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink19PaymentRequestEvent18GetWrapperTypeInfoEv = comdat any

$_ZN5blink5Event35DoneDispatchingEventAtCurrentTargetEv = comdat any

$_ZNK5blink5Event22CanBeDispatchedInWorldERKNS_15DOMWrapperWorldE = comdat any

$_ZNK5blink5Event46ShouldDispatchEvenWhenExecutionContextIsPausedEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE = comdat any

$_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17PaymentMethodDataEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17PaymentMethodDataEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17PaymentMethodDataEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_17PaymentMethodDataEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17PaymentMethodDataEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17PaymentMethodDataEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17PaymentMethodDataEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_22PaymentDetailsModifierEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_22PaymentDetailsModifierEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_22PaymentDetailsModifierEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21PaymentShippingOptionEEELj0ENS1_13HeapAllocatorEEC2ERKS6_ = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21PaymentShippingOptionEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_21PaymentShippingOptionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperEE7GetNameEPKv = comdat any

$_ZNK5blink14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7Wrapper5TraceEPNS_7VisitorE = comdat any

$_ZN5blink14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperD2Ev = comdat any

$_ZN5blink14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperD0Ev = comdat any

$_ZNK5blink24ContextLifecycleObserver35IsExecutionContextLifecycleObserverEv = comdat any

$_ZN5blink14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7Wrapper16ContextDestroyedEv = comdat any

$_ZN4mojo6RemoteIN8payments5mojom5blink18PaymentHandlerHostEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo8internal17InterfacePtrStateIN8payments5mojom5blink18PaymentHandlerHostEE28set_connection_error_handlerEN4base12OnceCallbackIFvvEEE = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19PaymentRequestEventELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_19PaymentRequestEventELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19PaymentRequestEventEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink19PaymentRequestEventEFvvEJNS2_14WeakPersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink19PaymentRequestEventEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink19PaymentRequestEventEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_21ScriptPromiseResolverEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_21ScriptPromiseResolverEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA51_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIN2v85LocalINS2_5ValueEEEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIN2v85LocalINS2_9PrimitiveEEEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA53_KcEEEPS1_DpOT_ = comdat any

$_ZN4mojo16InlinedStructPtrIN8payments5mojom5blink24PaymentHandlerMethodDataEE4SwapEPS5_ = comdat any

$_ZN8payments5mojom5blink24PaymentHandlerMethodDataaSERKS2_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS3_14WeakPersistentIS4_EEEEEFvSB_EE7RunOnceEPNS0_13BindStateBaseEOSB_ = comdat any

$_ZN4base8internal9BindStateIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS2_14WeakPersistentIS3_EEEEC2ISC_JSE_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSH_21CancellationQueryModeE = comdat any

$_ZN5blink10TraceTraitINS_21PaymentCurrencyAmountEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14PaymentOptionsEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_19RespondWithObserverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_22PaymentDetailsModifierEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_22PaymentDetailsModifierEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21PaymentShippingOptionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_21PaymentShippingOptionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_27PaymentRequestDetailsUpdateEEEvT_NS0_15ResolutionStateE = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA29_KcEEEPS1_DpOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17PaymentMethodDataEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17PaymentMethodDataEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperE = comdat any

$_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink19PaymentRequestEventE = hidden unnamed_addr constant { [34 x i8*] } { [34 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::PaymentRequestEvent"*)* @_ZN5blink19PaymentRequestEventD2Ev to i8*), i8* bitcast (void (%"class.blink::PaymentRequestEvent"*)* @_ZN5blink19PaymentRequestEventD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::PaymentRequestEvent"*, %"class.blink::Visitor"*)* @_ZNK5blink19PaymentRequestEvent5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::PaymentRequestEvent"*)* @_ZNK5blink19PaymentRequestEvent18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void (%"class.blink::Event"*)* @_ZN5blink5Event35DoneDispatchingEventAtCurrentTargetEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::PaymentRequestEvent"*)* @_ZNK5blink19PaymentRequestEvent13InterfaceNameEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event9IsUIEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsMouseEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsFocusEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event15IsKeyboardEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsTouchEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event14IsGestureEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsWheelEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event14IsPointerEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsInputEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event18IsCompositionEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event11IsDragEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event16IsClipboardEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event25IsBeforeTextInsertedEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event25IsBeforeCreatePolicyEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event19IsBeforeUnloadEventEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event12IsErrorEventEv to i8*), i8* bitcast (void (%"class.blink::Event"*)* @_ZN5blink5Event14preventDefaultEv to i8*), i8* bitcast (i1 (%"class.blink::Event"*, %"class.blink::DOMWrapperWorld"*)* @_ZNK5blink5Event22CanBeDispatchedInWorldERKNS_15DOMWrapperWorldE to i8*), i8* bitcast (i1 (%"class.blink::Event"*)* @_ZNK5blink5Event46ShouldDispatchEvenWhenExecutionContextIsPausedEv to i8*), i8* bitcast (i32 (%"class.blink::Event"*, %"class.blink::EventDispatcher"*)* @_ZN5blink5Event13DispatchEventERNS_15EventDispatcherE to i8*), i8* bitcast (void (%"class.blink::Event"*)* @_ZN5blink5Event14ReceivedTargetEv to i8*)] }, align 8
@_ZN5blink21event_interface_names20kPaymentRequestEventE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [51 x i8] c"Cannot open a window when the event is not trusted\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"' is not a valid URL.\00", align 1
@.str.3 = private unnamed_addr constant [53 x i8] c"Not allowed to open a window without user activation\00", align 1
@.str.4 = private unnamed_addr constant [68 x i8] c"Waiting for response to the previous payment request details change\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c"No corresponding PaymentRequest object found\00", align 1
@.str.6 = private unnamed_addr constant [32 x i8] c"Shipping address cannot be null\00", align 1
@.str.7 = private unnamed_addr constant [38 x i8] c"Shipping option identifier is invalid\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"Cannot respond with data when the event is not trusted\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"PaymentDetailsModifier\00", align 1
@.str.10 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"Browser process disconnected\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.13 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.14 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.15 = private unnamed_addr constant [66 x i8] c"../../third_party/blink/renderer/platform/bindings/script_state.h\00", align 1
@.str.16 = private unnamed_addr constant [13 x i8] c"script_state\00", align 1
@.str.17 = private unnamed_addr constant [34 x i8] c"script_state->context_ == context\00", align 1
@_ZN5blink19PaymentRequestEvent18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.18 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.19 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.21 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17PaymentMethodDataEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17PaymentMethodDataEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17PaymentMethodDataEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17PaymentMethodDataEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17PaymentMethodDataEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [175 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::PaymentMethodData>, WTF::VectorTraits<blink::Member<blink::PaymentMethodData> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_22PaymentDetailsModifierEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [185 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::PaymentDetailsModifier>, WTF::VectorTraits<blink::Member<blink::PaymentDetailsModifier> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_21PaymentShippingOptionEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [183 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::PaymentShippingOption>, WTF::VectorTraits<blink::Member<blink::PaymentShippingOption> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS1_19HeapMojoWrapperModeE0EE7WrapperEEEPKcv = private unnamed_addr constant [172 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::Visitor"*)* @_ZNK5blink14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7Wrapper5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*)* @_ZN5blink14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperD2Ev to i8*), i8* bitcast (void (%"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*)* @_ZN5blink14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ContextLifecycleObserver"*)* @_ZNK5blink24ContextLifecycleObserver35IsExecutionContextLifecycleObserverEv to i8*), i8* bitcast (void (%"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*)* @_ZN5blink14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7Wrapper16ContextDestroyedEv to i8*)] }, comdat, align 8
@_ZN8payments5mojom5blink18PaymentHandlerHost5Name_E = external constant [0 x i8], align 1
@_ZTVN8payments5mojom5blink35PaymentHandlerHostResponseValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21ScriptPromiseResolverEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptPromiseResolver]\00", align 1
@_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_21ScriptPromiseResolverEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21ScriptPromiseResolverEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN3WTF8internal25g_main_thread_stack_startE = external local_unnamed_addr global i64, align 8
@_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE = external local_unnamed_addr global i64, align 8
@_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E = external local_unnamed_addr global i32, align 4
@_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E = external local_unnamed_addr global i32, align 4
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.22 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.23 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.24 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.25 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.26 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1

@_ZN5blink19PaymentRequestEventC1ERKN3WTF12AtomicStringEPKNS_23PaymentRequestEventInitEN4mojo13PendingRemoteIN8payments5mojom5blink18PaymentHandlerHostEEEPNS_19RespondWithObserverEPNS_17WaitUntilObserverEPNS_16ExecutionContextE = hidden unnamed_addr alias void (%"class.blink::PaymentRequestEvent"*, %"class.WTF::AtomicString"*, %"class.blink::PaymentRequestEventInit"*, %"class.mojo::PendingRemote"*, %"class.blink::RespondWithObserver"*, %"class.blink::WaitUntilObserver"*, %"class.blink::ExecutionContext"*), void (%"class.blink::PaymentRequestEvent"*, %"class.WTF::AtomicString"*, %"class.blink::PaymentRequestEventInit"*, %"class.mojo::PendingRemote"*, %"class.blink::RespondWithObserver"*, %"class.blink::WaitUntilObserver"*, %"class.blink::ExecutionContext"*)* @_ZN5blink19PaymentRequestEventC2ERKN3WTF12AtomicStringEPKNS_23PaymentRequestEventInitEN4mojo13PendingRemoteIN8payments5mojom5blink18PaymentHandlerHostEEEPNS_19RespondWithObserverEPNS_17WaitUntilObserverEPNS_16ExecutionContextE
@_ZN5blink19PaymentRequestEventD1Ev = hidden unnamed_addr alias void (%"class.blink::PaymentRequestEvent"*), void (%"class.blink::PaymentRequestEvent"*)* @_ZN5blink19PaymentRequestEventD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::PaymentRequestEvent"* @_ZN5blink19PaymentRequestEvent6CreateERKN3WTF12AtomicStringEPKNS_23PaymentRequestEventInitEN4mojo13PendingRemoteIN8payments5mojom5blink18PaymentHandlerHostEEEPNS_19RespondWithObserverEPNS_17WaitUntilObserverEPNS_16ExecutionContextE(%"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::PaymentRequestEventInit"*, %"class.mojo::PendingRemote"*, %"class.blink::RespondWithObserver"*, %"class.blink::WaitUntilObserver"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.mojo::PendingRemote", align 4
  %8 = bitcast %"class.mojo::PendingRemote"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 232) #11
  %10 = bitcast i8* %9 to %"class.blink::PaymentRequestEvent"*
  %11 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %7, i64 0, i32 0
  %12 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %2, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %11, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %12) #11
  call void @_ZN5blink19PaymentRequestEventC2ERKN3WTF12AtomicStringEPKNS_23PaymentRequestEventInitEN4mojo13PendingRemoteIN8payments5mojom5blink18PaymentHandlerHostEEEPNS_19RespondWithObserverEPNS_17WaitUntilObserverEPNS_16ExecutionContextE(%"class.blink::PaymentRequestEvent"* %10, %"class.WTF::AtomicString"* dereferenceable(8) %0, %"class.blink::PaymentRequestEventInit"* %1, %"class.mojo::PendingRemote"* nonnull %7, %"class.blink::RespondWithObserver"* %3, %"class.blink::WaitUntilObserver"* %4, %"class.blink::ExecutionContext"* %5) #11
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %11) #11
  %13 = getelementptr inbounds i8, i8* %9, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  ret %"class.blink::PaymentRequestEvent"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PaymentRequestEventC2ERKN3WTF12AtomicStringEPKNS_23PaymentRequestEventInitEN4mojo13PendingRemoteIN8payments5mojom5blink18PaymentHandlerHostEEEPNS_19RespondWithObserverEPNS_17WaitUntilObserverEPNS_16ExecutionContextE(%"class.blink::PaymentRequestEvent"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::PaymentRequestEventInit"*, %"class.mojo::PendingRemote"*, %"class.blink::RespondWithObserver"*, %"class.blink::WaitUntilObserver"*, %"class.blink::ExecutionContext"*) unnamed_addr #0 align 2 {
  %8 = alloca %"class.mojo::PendingRemote", align 4
  %9 = alloca %"class.base::OnceCallback", align 8
  %10 = alloca %"class.base::OnceCallback", align 8
  %11 = alloca %"class.mojo::PendingRemote", align 4
  %12 = alloca %"class.base::OnceCallback", align 8
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to { i64, i64 }*
  %15 = alloca %"class.blink::WeakPersistent", align 8
  %16 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 0
  %17 = bitcast %"class.blink::PaymentRequestEventInit"* %2 to %"class.blink::ExtendableEventInit"*
  tail call void @_ZN5blink15ExtendableEventC2ERKN3WTF12AtomicStringEPKNS_19ExtendableEventInitEPNS_17WaitUntilObserverE(%"class.blink::ExtendableEvent"* %16, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::ExtendableEventInit"* %17, %"class.blink::WaitUntilObserver"* %5) #11
  %18 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN5blink19PaymentRequestEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %"class.blink::PaymentRequestEventInit", %"class.blink::PaymentRequestEventInit"* %2, i64 0, i32 11, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 1, i32 0, i32 0
  br i1 %21, label %40, label %23

23:                                               ; preds = %7
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %41

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = zext i32 %30 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #11
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !2

37:                                               ; preds = %28
  tail call void @llvm.trap() #11
  unreachable

38:                                               ; preds = %28
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %29, align 4
  br label %41

40:                                               ; preds = %7
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  br label %41

41:                                               ; preds = %38, %23, %40
  %42 = getelementptr inbounds %"class.blink::PaymentRequestEventInit", %"class.blink::PaymentRequestEventInit"* %2, i64 0, i32 9, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  %45 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 2, i32 0, i32 0
  br i1 %44, label %63, label %46

46:                                               ; preds = %41
  store %"class.WTF::StringImpl"* %43, %"class.WTF::StringImpl"** %45, align 8
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %64

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = zext i32 %53 to i33
  %55 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #11
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !2

60:                                               ; preds = %51
  tail call void @llvm.trap() #11
  unreachable

61:                                               ; preds = %51
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %52, align 4
  br label %64

63:                                               ; preds = %41
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %45, align 8
  br label %64

64:                                               ; preds = %61, %46, %63
  %65 = getelementptr inbounds %"class.blink::PaymentRequestEventInit", %"class.blink::PaymentRequestEventInit"* %2, i64 0, i32 8, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  %68 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 3, i32 0, i32 0
  br i1 %67, label %86, label %69

69:                                               ; preds = %64
  store %"class.WTF::StringImpl"* %66, %"class.WTF::StringImpl"** %68, align 8
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %87

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i33
  %78 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %77, i33 1) #11
  %79 = extractvalue { i33, i1 } %78, 1
  %80 = extractvalue { i33, i1 } %78, 0
  %81 = icmp slt i33 %80, 0
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %84, !prof !2

83:                                               ; preds = %74
  tail call void @llvm.trap() #11
  unreachable

84:                                               ; preds = %74
  %85 = trunc i33 %80 to i32
  store i32 %85, i32* %75, align 4
  br label %87

86:                                               ; preds = %64
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %68, align 8
  br label %87

87:                                               ; preds = %84, %69, %86
  %88 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 4
  %89 = getelementptr inbounds %"class.blink::PaymentRequestEventInit", %"class.blink::PaymentRequestEventInit"* %2, i64 0, i32 1
  %90 = load i8, i8* %89, align 2, !range !3
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %88, i64 0, i32 0
  %94 = getelementptr inbounds %"class.blink::PaymentRequestEventInit", %"class.blink::PaymentRequestEventInit"* %2, i64 0, i32 5, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_17PaymentMethodDataEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector"* %93, %"class.WTF::Vector"* dereferenceable(16) %94) #11
  br label %97

95:                                               ; preds = %87
  %96 = bitcast %"class.blink::HeapVector"* %88 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 16, i1 false)
  br label %97

97:                                               ; preds = %95, %92
  %98 = getelementptr inbounds %"class.blink::PaymentRequestEventInit", %"class.blink::PaymentRequestEventInit"* %2, i64 0, i32 12, i32 0, i32 0
  %99 = load %"class.blink::PaymentCurrencyAmount"*, %"class.blink::PaymentCurrencyAmount"** %98, align 8
  %100 = icmp eq %"class.blink::PaymentCurrencyAmount"* %99, null
  br i1 %100, label %101, label %108

101:                                              ; preds = %97
  %102 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 24) #11
  %103 = bitcast i8* %102 to %"class.blink::PaymentCurrencyAmount"*
  tail call void @_ZN5blink21PaymentCurrencyAmountC1Ev(%"class.blink::PaymentCurrencyAmount"* %103) #11
  %104 = getelementptr inbounds i8, i8* %102, i64 -4
  %105 = bitcast i8* %104 to i16*
  %106 = load atomic i16, i16* %105 monotonic, align 2
  %107 = or i16 %106, 1
  store atomic i16 %107, i16* %105 release, align 2
  br label %108

108:                                              ; preds = %97, %101
  %109 = phi %"class.blink::PaymentCurrencyAmount"* [ %103, %101 ], [ %99, %97 ]
  %110 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::PaymentCurrencyAmount"* %109, %"class.blink::PaymentCurrencyAmount"** %110, align 8
  %111 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 6
  %112 = getelementptr inbounds %"class.blink::PaymentRequestEventInit", %"class.blink::PaymentRequestEventInit"* %2, i64 0, i32 2
  %113 = load i8, i8* %112, align 1, !range !3
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %118, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.blink::HeapVector.14", %"class.blink::HeapVector.14"* %111, i64 0, i32 0
  %117 = getelementptr inbounds %"class.blink::PaymentRequestEventInit", %"class.blink::PaymentRequestEventInit"* %2, i64 0, i32 6, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_22PaymentDetailsModifierEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.17"* %116, %"class.WTF::Vector.17"* dereferenceable(16) %117) #11
  br label %120

118:                                              ; preds = %108
  %119 = bitcast %"class.blink::HeapVector.14"* %111 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 16, i1 false)
  br label %120

120:                                              ; preds = %118, %115
  %121 = getelementptr inbounds %"class.blink::PaymentRequestEventInit", %"class.blink::PaymentRequestEventInit"* %2, i64 0, i32 4, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  %124 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 7, i32 0, i32 0
  br i1 %123, label %142, label %125

125:                                              ; preds = %120
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %124, align 8
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %143

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = zext i32 %132 to i33
  %134 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %133, i33 1) #11
  %135 = extractvalue { i33, i1 } %134, 1
  %136 = extractvalue { i33, i1 } %134, 0
  %137 = icmp slt i33 %136, 0
  %138 = or i1 %135, %137
  br i1 %138, label %139, label %140, !prof !2

139:                                              ; preds = %130
  tail call void @llvm.trap() #11
  unreachable

140:                                              ; preds = %130
  %141 = trunc i33 %136 to i32
  store i32 %141, i32* %131, align 4
  br label %143

142:                                              ; preds = %120
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %124, align 8
  br label %143

143:                                              ; preds = %140, %125, %142
  %144 = getelementptr inbounds %"class.blink::PaymentRequestEventInit", %"class.blink::PaymentRequestEventInit"* %2, i64 0, i32 7, i32 0, i32 0
  %145 = load %"class.blink::PaymentOptions"*, %"class.blink::PaymentOptions"** %144, align 8
  %146 = icmp eq %"class.blink::PaymentOptions"* %145, null
  br i1 %146, label %147, label %154

147:                                              ; preds = %143
  %148 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 24) #11
  %149 = bitcast i8* %148 to %"class.blink::PaymentOptions"*
  tail call void @_ZN5blink14PaymentOptionsC1Ev(%"class.blink::PaymentOptions"* %149) #11
  %150 = getelementptr inbounds i8, i8* %148, i64 -4
  %151 = bitcast i8* %150 to i16*
  %152 = load atomic i16, i16* %151 monotonic, align 2
  %153 = or i16 %152, 1
  store atomic i16 %153, i16* %151 release, align 2
  br label %154

154:                                              ; preds = %143, %147
  %155 = phi %"class.blink::PaymentOptions"* [ %149, %147 ], [ %145, %143 ]
  %156 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 8, i32 0, i32 0
  store %"class.blink::PaymentOptions"* %155, %"class.blink::PaymentOptions"** %156, align 8
  %157 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 9
  %158 = getelementptr inbounds %"class.blink::PaymentRequestEventInit", %"class.blink::PaymentRequestEventInit"* %2, i64 0, i32 3
  %159 = load i8, i8* %158, align 8, !range !3
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %164, label %161

161:                                              ; preds = %154
  %162 = getelementptr inbounds %"class.blink::HeapVector.24", %"class.blink::HeapVector.24"* %157, i64 0, i32 0
  %163 = getelementptr inbounds %"class.blink::PaymentRequestEventInit", %"class.blink::PaymentRequestEventInit"* %2, i64 0, i32 10, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_21PaymentShippingOptionEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.27"* %162, %"class.WTF::Vector.27"* dereferenceable(16) %163) #11
  br label %166

164:                                              ; preds = %154
  %165 = bitcast %"class.blink::HeapVector.24"* %157 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %165, i8 0, i64 16, i1 false)
  br label %166

166:                                              ; preds = %164, %161
  %167 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 10, i32 0, i32 0
  store %"class.blink::ScriptPromiseResolver"* null, %"class.blink::ScriptPromiseResolver"** %167, align 8
  %168 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 11, i32 0, i32 0
  store %"class.blink::RespondWithObserver"* %4, %"class.blink::RespondWithObserver"** %168, align 8
  %169 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 12
  %170 = icmp eq %"class.blink::ExecutionContext"* %6, null
  %171 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %6, i64 0, i32 1
  %172 = getelementptr inbounds %"class.blink::MojoBindingContext", %"class.blink::MojoBindingContext"* %171, i64 0, i32 0
  %173 = select i1 %170, %"class.blink::ContextLifecycleNotifier"* null, %"class.blink::ContextLifecycleNotifier"* %172
  %174 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperEEEPhm(i64 64) #11
  %175 = bitcast i8* %174 to %"class.blink::ContextLifecycleObserver"*
  %176 = bitcast i8* %174 to i32 (...)***
  %177 = getelementptr inbounds i8, i8* %174, i64 8
  %178 = bitcast i8* %177 to %"class.blink::ContextLifecycleNotifier"**
  store %"class.blink::ContextLifecycleNotifier"* null, %"class.blink::ContextLifecycleNotifier"** %178, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %176, align 8
  %179 = getelementptr inbounds i8, i8* %174, i64 16
  %180 = bitcast i8* %179 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %180) #11
  %181 = getelementptr inbounds i8, i8* %174, i64 56
  %182 = bitcast i8* %181 to i64*
  store i64 0, i64* %182, align 8
  tail call void @_ZN5blink24ContextLifecycleObserver27SetContextLifecycleNotifierEPNS_24ContextLifecycleNotifierE(%"class.blink::ContextLifecycleObserver"* %175, %"class.blink::ContextLifecycleNotifier"* %173) #11
  %183 = getelementptr inbounds i8, i8* %174, i64 -4
  %184 = bitcast i8* %183 to i16*
  %185 = load atomic i16, i16* %184 monotonic, align 2
  %186 = or i16 %185, 1
  store atomic i16 %186, i16* %184 release, align 2
  %187 = bitcast %"class.blink::HeapMojoRemote"* %169 to i8**
  store i8* %174, i8** %187, align 8
  %188 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp ne i32 %189, 0
  %191 = icmp ne %"class.blink::ExecutionContext"* %6, null
  %192 = and i1 %191, %190
  br i1 %192, label %193, label %285

193:                                              ; preds = %166
  %194 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %11, i64 0, i32 0
  %195 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %3, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %194, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %195) #11
  %196 = bitcast %"class.blink::MojoBindingContext"* %171 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)***
  %197 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*** %196, align 8
  %198 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %197, i64 6
  %199 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::MojoBindingContext"*, i8)** %198, align 8
  %200 = call %"class.base::SingleThreadTaskRunner"* %199(%"class.blink::MojoBindingContext"* %171, i8 zeroext 22) #11
  %201 = bitcast %"class.base::SingleThreadTaskRunner"* %200 to %"class.base::SequencedTaskRunner"*
  %202 = bitcast %"class.mojo::PendingRemote"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202)
  %203 = getelementptr inbounds %"class.blink::HeapMojoRemote", %"class.blink::HeapMojoRemote"* %169, i64 0, i32 0, i32 0, i32 0
  %204 = load %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %203, align 8
  %205 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %204, i64 0, i32 1
  %206 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %8, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %206, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %194) #11
  call void @_ZN4mojo6RemoteIN8payments5mojom5blink18PaymentHandlerHostEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote.1565"* %205, %"class.mojo::PendingRemote"* nonnull %8, %"class.base::SequencedTaskRunner"* %201) #11
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %206) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202)
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %194) #11
  %207 = bitcast <2 x i64>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %207) #11
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::PaymentRequestEvent"*)* @_ZN5blink19PaymentRequestEvent21OnHostConnectionErrorEv to i64), i64 0>, <2 x i64>* %13, align 16
  %208 = bitcast %"class.blink::WeakPersistent"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %208) #11
  %209 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %15, i64 0, i32 0
  %210 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %15, i64 0, i32 0, i32 0
  store %"class.blink::PaymentRequestEvent"* %0, %"class.blink::PaymentRequestEvent"** %210, align 8, !alias.scope !4
  %211 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %15, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %211, align 8, !alias.scope !4
  %212 = ptrtoint %"class.blink::PaymentRequestEvent"* %0 to i64
  switch i64 %212, label %213 [
    i64 0, label %239
    i64 -1, label %239
  ]

213:                                              ; preds = %193
  %214 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !4
  %215 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %214, i64 0, i32 1
  %216 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %215) #11, !noalias !4
  %217 = icmp eq i8* %216, null
  br i1 %217, label %218, label %220, !prof !2

218:                                              ; preds = %213
  %219 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %215, i8* %219) #11
  br label %220

220:                                              ; preds = %218, %213
  %221 = phi i8* [ %219, %218 ], [ %216, %213 ]
  %222 = bitcast i8* %221 to %"class.blink::ThreadState"**
  %223 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %222, align 8, !noalias !4
  %224 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %223, i64 0, i32 4, i32 0, i32 0, i32 0
  %225 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %224, align 8, !noalias !4
  %226 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %225, i64 0, i32 0, i32 0
  %227 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %226, align 8, !noalias !4
  %228 = icmp eq %"class.blink::PersistentNode"* %227, null
  br i1 %228, label %229, label %232, !prof !2

229:                                              ; preds = %220
  %230 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %225, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %230) #11
  %231 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %226, align 8
  br label %232

232:                                              ; preds = %229, %220
  %233 = phi %"class.blink::PersistentNode"* [ %231, %229 ], [ %227, %220 ]
  %234 = bitcast %"class.blink::PersistentNode"* %233 to i64*
  %235 = load i64, i64* %234, align 8, !noalias !4
  %236 = bitcast %"class.blink::PersistentRegion"* %225 to i64*
  store i64 %235, i64* %236, align 8, !noalias !4
  %237 = bitcast %"class.blink::PersistentNode"* %233 to %"class.blink::PersistentBase.458"**
  store %"class.blink::PersistentBase.458"* %209, %"class.blink::PersistentBase.458"** %237, align 8, !noalias !4
  %238 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %233, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19PaymentRequestEventELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %238, align 8
  store %"class.blink::PersistentNode"* %233, %"class.blink::PersistentNode"** %211, align 8, !alias.scope !4
  br label %239

239:                                              ; preds = %193, %193, %232
  %240 = call i8* @_Znwm(i64 64) #12, !noalias !7
  %241 = bitcast i8* %240 to %"struct.base::internal::BindState"*
  call void @_ZN4base8internal9BindStateIMN5blink19PaymentRequestEventEFvvEJNS2_14WeakPersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"* nonnull %241, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19PaymentRequestEventEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), { i64, i64 }* nonnull dereferenceable(16) %14, %"class.blink::WeakPersistent"* nonnull dereferenceable(16) %15) #11, !noalias !7
  %242 = bitcast %"class.base::OnceCallback"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %242)
  %243 = load %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %203, align 8
  %244 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %12, i64 0, i32 0, i32 0, i32 0
  %245 = ptrtoint i8* %240 to i64
  %246 = bitcast %"class.base::OnceCallback"* %10 to i64*
  store i64 %245, i64* %246, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %244, align 8
  %247 = bitcast %"class.base::OnceCallback"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %247) #11
  %248 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %243, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %249 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %248, align 8
  %250 = icmp eq %"class.mojo::InterfaceEndpointClient"* %249, null
  br i1 %250, label %255, label %251

251:                                              ; preds = %239
  %252 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %249, i64 0, i32 19
  %253 = load i8, i8* %252, align 8, !range !3
  %254 = icmp eq i8 %253, 0
  br i1 %254, label %255, label %260

255:                                              ; preds = %251, %239
  %256 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %243, i64 0, i32 1, i32 0
  %257 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0, i32 0, i32 0
  %258 = bitcast %"class.base::OnceCallback"* %9 to i64*
  store i64 %245, i64* %258, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %257, align 8
  call void @_ZN4mojo8internal17InterfacePtrStateIN8payments5mojom5blink18PaymentHandlerHostEE28set_connection_error_handlerEN4base12OnceCallbackIFvvEEE(%"class.mojo::internal::InterfacePtrState.1566"* %256, %"class.base::OnceCallback"* nonnull %9) #11
  %259 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %259) #11
  br label %260

260:                                              ; preds = %251, %255
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %247) #11
  %261 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %261) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %242)
  %262 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %12, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %262) #11
  %263 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %211, align 8
  %264 = icmp eq %"class.blink::PersistentNode"* %263, null
  br i1 %264, label %284, label %265

265:                                              ; preds = %260
  %266 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %267 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %266, i64 0, i32 1
  %268 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %267) #11
  %269 = icmp eq i8* %268, null
  br i1 %269, label %270, label %272, !prof !2

270:                                              ; preds = %265
  %271 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %267, i8* %271) #11
  br label %272

272:                                              ; preds = %270, %265
  %273 = phi i8* [ %271, %270 ], [ %268, %265 ]
  %274 = bitcast i8* %273 to %"class.blink::ThreadState"**
  %275 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %274, align 8
  %276 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %275, i64 0, i32 4, i32 0, i32 0, i32 0
  %277 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %276, align 8
  %278 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %211, align 8
  %279 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %277, i64 0, i32 0, i32 0
  %280 = bitcast %"class.blink::PersistentRegion"* %277 to i64*
  %281 = load i64, i64* %280, align 8
  %282 = bitcast %"class.blink::PersistentNode"* %278 to i64*
  store i64 %281, i64* %282, align 8
  %283 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %278, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %283, align 8
  store %"class.blink::PersistentNode"* %278, %"class.blink::PersistentNode"** %279, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %211, align 8
  br label %284

284:                                              ; preds = %260, %272
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %208) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %207) #11
  br label %285

285:                                              ; preds = %166, %284
  ret void
}

declare void @_ZN5blink15ExtendableEventC2ERKN3WTF12AtomicStringEPKNS_19ExtendableEventInitEPNS_17WaitUntilObserverE(%"class.blink::ExtendableEvent"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::ExtendableEventInit"*, %"class.blink::WaitUntilObserver"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PaymentRequestEvent21OnHostConnectionErrorEv(%"class.blink::PaymentRequestEvent"* nocapture) #0 align 2 {
  %2 = alloca %"class.mojo::internal::InterfacePtrState.1566", align 8
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 10, i32 0
  %5 = getelementptr inbounds %"class.blink::MemberBase.36", %"class.blink::MemberBase.36"* %4, i64 0, i32 0
  %6 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %5, align 8
  %7 = icmp eq %"class.blink::ScriptPromiseResolver"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #11
  store i32 20, i32* %3, align 4
  %10 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA29_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %3, [29 x i8]* nonnull dereferenceable(29) @.str.11) #11
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* nonnull %6, %"class.blink::DOMException"* %10, i32 2) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #11
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.blink::MemberBase.36"* %4 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %14 = load %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %14, i64 0, i32 1
  %16 = bitcast %"class.mojo::internal::InterfacePtrState.1566"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 48, i1 false) #11
  %17 = bitcast %"class.mojo::internal::InterfacePtrState.1566"* %2 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %17) #11
  %18 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.1566", %"class.mojo::internal::InterfacePtrState.1566"* %2, i64 0, i32 1
  %19 = bitcast %"class.std::__1::unique_ptr.1567"* %18 to i64*
  %20 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %14, i64 0, i32 1, i32 0, i32 1
  %21 = bitcast %"class.std::__1::unique_ptr.1567"* %20 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %19, align 8
  store i64 0, i64* %21, align 8
  %23 = bitcast %"class.mojo::Remote.1565"* %15 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %23, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %17) #11
  %24 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.1566", %"class.mojo::internal::InterfacePtrState.1566"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %25 = load %"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %24, align 8
  store %"class.payments::mojom::blink::PaymentHandlerHostProxy"* null, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %24, align 8
  %26 = icmp eq %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %11
  %28 = bitcast %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %25 to void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)***
  %29 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)**, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %29, i64 1
  %31 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %30, align 8
  call void %31(%"class.payments::mojom::blink::PaymentHandlerHostProxy"* nonnull %25) #11
  br label %32

32:                                               ; preds = %11, %27
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PaymentRequestEventD2Ev(%"class.blink::PaymentRequestEvent"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [34 x i8*] }, { [34 x i8*] }* @_ZTVN5blink19PaymentRequestEventE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #11
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #11
  br label %36

36:                                               ; preds = %19, %32, %35
  %37 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #11
  br label %53

53:                                               ; preds = %36, %49, %52
  %54 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 1, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #11
  br label %70

70:                                               ; preds = %53, %66, %69
  %71 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 0
  tail call void @_ZN5blink15ExtendableEventD2Ev(%"class.blink::ExtendableEvent"* %71) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink15ExtendableEventD2Ev(%"class.blink::ExtendableEvent"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PaymentRequestEventD0Ev(%"class.blink::PaymentRequestEvent"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink19PaymentRequestEventD2Ev(%"class.blink::PaymentRequestEvent"* %0) #11
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink19PaymentRequestEvent13InterfaceNameEv(%"class.blink::PaymentRequestEvent"* nocapture readnone) unnamed_addr #4 align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink21event_interface_names20kPaymentRequestEventE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::String"* @_ZNK5blink19PaymentRequestEvent9topOriginEv(%"class.blink::PaymentRequestEvent"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 1
  ret %"class.WTF::String"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::String"* @_ZNK5blink19PaymentRequestEvent20paymentRequestOriginEv(%"class.blink::PaymentRequestEvent"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 2
  ret %"class.WTF::String"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::String"* @_ZNK5blink19PaymentRequestEvent16paymentRequestIdEv(%"class.blink::PaymentRequestEvent"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 3
  ret %"class.WTF::String"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %"class.blink::HeapVector"* @_ZNK5blink19PaymentRequestEvent10methodDataEv(%"class.blink::PaymentRequestEvent"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 4
  ret %"class.blink::HeapVector"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19PaymentRequestEvent5totalEPNS_11ScriptStateE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::PaymentRequestEvent"* nocapture readonly, %"class.blink::ScriptState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %1, i64 0, i32 5, i32 0, i32 0
  %5 = load %"class.blink::PaymentCurrencyAmount"*, %"class.blink::PaymentCurrencyAmount"** %4, align 8, !noalias !14
  %6 = getelementptr inbounds %"class.blink::PaymentCurrencyAmount", %"class.blink::PaymentCurrencyAmount"* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.v8::Context"*, %"class.v8::Context"** %7, align 8, !noalias !14
  %9 = icmp eq %"class.v8::Context"* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::ScriptState"* %2 to %"class.v8::internal::Isolate"**
  %12 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %11, align 8, !noalias !14
  %13 = bitcast %"class.v8::Context"* %8 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %12, i64 %14) #11
  %16 = bitcast i64* %15 to %"class.v8::Context"*
  br label %17

17:                                               ; preds = %10, %3
  %18 = phi %"class.v8::Context"* [ %16, %10 ], [ null, %3 ]
  %19 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %18) #11, !noalias !14
  %20 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 0
  %21 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %20, align 8, !noalias !14
  %22 = icmp eq %"class.blink::PaymentCurrencyAmount"* %5, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %17
  %24 = ptrtoint %"class.v8::Isolate"* %21 to i64
  %25 = add i64 %24, 176
  %26 = inttoptr i64 %25 to %"class.v8::Value"*
  br label %33

27:                                               ; preds = %17
  %28 = bitcast %"class.blink::PaymentCurrencyAmount"* %5 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %29 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %29, i64 2
  %31 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %30, align 8
  %32 = tail call %"class.v8::Value"* %31(%"class.blink::IDLDictionaryBase"* nonnull %6, %"class.v8::Object"* %19, %"class.v8::Isolate"* %21) #11
  br label %33

33:                                               ; preds = %27, %23
  %34 = phi %"class.v8::Value"* [ %26, %23 ], [ %32, %27 ]
  %35 = icmp eq %"class.v8::Value"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %33
  %37 = bitcast %"class.blink::ScriptValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 24, i1 false) #11, !alias.scope !14
  br label %42

38:                                               ; preds = %33
  %39 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %20, align 8, !noalias !14
  %40 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 0
  store %"class.v8::Isolate"* %39, %"class.v8::Isolate"** %40, align 8, !alias.scope !14
  %41 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  tail call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %41, %"class.v8::Isolate"* %39, %"class.v8::Value"* nonnull %34) #11
  br label %42

42:                                               ; preds = %36, %38
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %"class.blink::HeapVector.14"* @_ZNK5blink19PaymentRequestEvent9modifiersEv(%"class.blink::PaymentRequestEvent"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 6
  ret %"class.blink::HeapVector.14"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.WTF::String"* @_ZNK5blink19PaymentRequestEvent13instrumentKeyEv(%"class.blink::PaymentRequestEvent"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 7
  ret %"class.WTF::String"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19PaymentRequestEvent14paymentOptionsEPNS_11ScriptStateE(%"class.blink::ScriptValue"* noalias sret, %"class.blink::PaymentRequestEvent"* nocapture readonly, %"class.blink::ScriptState"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %1, i64 0, i32 8, i32 0, i32 0
  %5 = load %"class.blink::PaymentOptions"*, %"class.blink::PaymentOptions"** %4, align 8
  %6 = icmp eq %"class.blink::PaymentOptions"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 0
  %9 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %8, align 8
  tail call void @_ZN5blink11ScriptValue10CreateNullEPN2v87IsolateE(%"class.blink::ScriptValue"* sret %0, %"class.v8::Isolate"* %9) #11
  br label %39

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::PaymentOptions", %"class.blink::PaymentOptions"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.v8::Context"*, %"class.v8::Context"** %12, align 8, !noalias !17
  %14 = icmp eq %"class.v8::Context"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.blink::ScriptState"* %2 to %"class.v8::internal::Isolate"**
  %17 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %16, align 8, !noalias !17
  %18 = bitcast %"class.v8::Context"* %13 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %17, i64 %19) #11
  %21 = bitcast i64* %20 to %"class.v8::Context"*
  br label %22

22:                                               ; preds = %15, %10
  %23 = phi %"class.v8::Context"* [ %21, %15 ], [ null, %10 ]
  %24 = tail call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %23) #11, !noalias !17
  %25 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 0
  %26 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %25, align 8, !noalias !17
  %27 = bitcast %"class.blink::PaymentOptions"* %5 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %28 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %28, i64 2
  %30 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %29, align 8
  %31 = tail call %"class.v8::Value"* %30(%"class.blink::IDLDictionaryBase"* nonnull %11, %"class.v8::Object"* %24, %"class.v8::Isolate"* %26) #11
  %32 = icmp eq %"class.v8::Value"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = bitcast %"class.blink::ScriptValue"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #11, !alias.scope !17
  br label %39

35:                                               ; preds = %22
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %25, align 8, !noalias !17
  %37 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 0
  store %"class.v8::Isolate"* %36, %"class.v8::Isolate"** %37, align 8, !alias.scope !17
  %38 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %0, i64 0, i32 1
  tail call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %38, %"class.v8::Isolate"* %36, %"class.v8::Value"* nonnull %31) #11
  br label %39

39:                                               ; preds = %35, %33, %7
  ret void
}

declare void @_ZN5blink11ScriptValue10CreateNullEPN2v87IsolateE(%"class.blink::ScriptValue"* sret, %"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19PaymentRequestEvent15shippingOptionsEv(%"class.absl::optional.460"* noalias sret, %"class.blink::PaymentRequestEvent"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.absl::optional.460", %"class.absl::optional.460"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  br i1 %5, label %7, label %8

7:                                                ; preds = %2
  store i8 0, i8* %6, align 8
  br label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %1, i64 0, i32 9, i32 0
  store i8 1, i8* %6, align 8
  %10 = getelementptr inbounds %"class.absl::optional.460", %"class.absl::optional.460"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_21PaymentShippingOptionEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.27"* %10, %"class.WTF::Vector.27"* dereferenceable(16) %9) #11
  br label %11

11:                                               ; preds = %8, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PaymentRequestEvent10openWindowEPNS_11ScriptStateERKN3WTF6StringE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::PaymentRequestEvent"* nocapture readonly, %"class.blink::ScriptState"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.blink::KURL", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.base::OnceCallback.1429", align 8
  %11 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm(i64 104) #11
  %12 = bitcast i8* %11 to %"class.blink::ScriptPromiseResolver"*
  tail call void @_ZN5blink21ScriptPromiseResolverC1EPNS_11ScriptStateE(%"class.blink::ScriptPromiseResolver"* %12, %"class.blink::ScriptState"* %2) #11
  %13 = getelementptr inbounds i8, i8* %11, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  %17 = getelementptr inbounds i8, i8* %11, i64 48
  %18 = bitcast i8* %17 to %"class.blink::ScriptPromise::InternalResolver"*
  %19 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 -86, i64 32, i1 false)
  tail call void @_ZNK5blink13ScriptPromise16InternalResolver7PromiseEv(%"class.blink::ScriptPromise"* sret %0, %"class.blink::ScriptPromise::InternalResolver"* %18) #11
  %20 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"* %2) #11
  %21 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %1, i64 0, i32 0, i32 0, i32 2
  %22 = load i16, i16* %21, align 8
  %23 = and i16 %22, 256
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %4
  %26 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #11
  store i32 11, i32* %5, align 4
  %27 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA51_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %5, [51 x i8]* nonnull dereferenceable(51) @.str) #11
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %12, %"class.blink::DOMException"* %27, i32 2) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #11
  br label %220

28:                                               ; preds = %4
  %29 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %29) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 112, i1 false)
  %30 = bitcast %"class.blink::ExecutionContext"* %20 to void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)***
  %31 = load void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)**, void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)*, void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)** %31, i64 20
  %33 = load void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)*, void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)** %32, align 8
  call void %33(%"class.blink::KURL"* nonnull sret %6, %"class.blink::ExecutionContext"* %20, %"class.WTF::String"* dereferenceable(8) %3) #11
  %34 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %6) #11
  br i1 %34, label %185, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 0
  %37 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %36, align 8
  %38 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  %39 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %118, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %60

50:                                               ; preds = %43
  %51 = zext i32 %49 to i33
  %52 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %51, i33 1) #11
  %53 = extractvalue { i33, i1 } %52, 1
  %54 = extractvalue { i33, i1 } %52, 0
  %55 = icmp slt i33 %54, 0
  %56 = or i1 %53, %55
  br i1 %56, label %57, label %58, !prof !2

57:                                               ; preds = %50
  call void @llvm.trap() #11
  unreachable

58:                                               ; preds = %50
  %59 = trunc i33 %54 to i32
  store i32 %59, i32* %48, align 4
  br label %60

60:                                               ; preds = %58, %43
  %61 = phi i32 [ %59, %58 ], [ %49, %43 ]
  %62 = load atomic i32, i32* %44 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %75

65:                                               ; preds = %60
  %66 = zext i32 %61 to i33
  %67 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #11
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !2

72:                                               ; preds = %65
  call void @llvm.trap() #11
  unreachable

73:                                               ; preds = %65
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %48, align 4
  br label %75

75:                                               ; preds = %73, %60
  %76 = phi i32 [ %74, %73 ], [ %61, %60 ]
  %77 = load atomic i32, i32* %44 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %75
  %81 = add i32 %76, -1
  store i32 %81, i32* %48, align 4
  br label %82

82:                                               ; preds = %80, %75
  %83 = phi i32 [ %81, %80 ], [ %76, %75 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #11
  br label %86

86:                                               ; preds = %82, %85
  %87 = load atomic i32, i32* %44 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %101

90:                                               ; preds = %86
  %91 = load i32, i32* %48, align 4
  %92 = zext i32 %91 to i33
  %93 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %92, i33 1) #11
  %94 = extractvalue { i33, i1 } %93, 1
  %95 = extractvalue { i33, i1 } %93, 0
  %96 = icmp slt i33 %95, 0
  %97 = or i1 %94, %96
  br i1 %97, label %98, label %99, !prof !2

98:                                               ; preds = %90
  call void @llvm.trap() #11
  unreachable

99:                                               ; preds = %90
  %100 = trunc i33 %95 to i32
  store i32 %100, i32* %48, align 4
  br label %101

101:                                              ; preds = %86, %99
  %102 = bitcast %"class.WTF::StringAppend"* %8 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.1 to i64), i64* %102, align 8
  %103 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %103, align 8
  %104 = load atomic i32, i32* %44 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %122

107:                                              ; preds = %101
  %108 = load i32, i32* %48, align 4
  %109 = zext i32 %108 to i33
  %110 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %109, i33 1) #11
  %111 = extractvalue { i33, i1 } %110, 1
  %112 = extractvalue { i33, i1 } %110, 0
  %113 = icmp slt i33 %112, 0
  %114 = or i1 %111, %113
  br i1 %114, label %115, label %116, !prof !2

115:                                              ; preds = %107
  call void @llvm.trap() #11
  unreachable

116:                                              ; preds = %107
  %117 = trunc i33 %112 to i32
  store i32 %117, i32* %48, align 4
  br label %122

118:                                              ; preds = %35
  %119 = bitcast %"class.WTF::StringAppend"* %8 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.1 to i64), i64* %119, align 8
  %120 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %120, align 8
  %121 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i8** %121, align 8
  br label %134

122:                                              ; preds = %116, %101
  %123 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i8** %123, align 8
  %124 = load atomic i32, i32* %44 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = load i32, i32* %48, align 4
  br i1 %126, label %128, label %130

128:                                              ; preds = %122
  %129 = add i32 %127, -1
  store i32 %129, i32* %48, align 4
  br label %130

130:                                              ; preds = %128, %122
  %131 = phi i32 [ %129, %128 ], [ %127, %122 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #11
  br label %134

134:                                              ; preds = %118, %130, %133
  %135 = phi %"class.WTF::StringImpl"** [ %120, %118 ], [ %103, %130 ], [ %103, %133 ]
  %136 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %8)
  %137 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %136, %"class.WTF::StringImpl"** %137, align 8
  %138 = call %"class.v8::Value"* @_ZN5blink16V8ThrowException15CreateTypeErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"* %37, %"class.WTF::String"* nonnull dereferenceable(8) %7) #11
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIN2v85LocalINS2_5ValueEEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %12, %"class.v8::Value"* %138, i32 2) #11
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %134
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #11
  br label %154

154:                                              ; preds = %134, %150, %153
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %156, label %170, label %157

157:                                              ; preds = %154
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %155) #11
  br label %170

170:                                              ; preds = %154, %166, %169
  br i1 %42, label %184, label %171

171:                                              ; preds = %170
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %173 = load atomic i32, i32* %172 monotonic, align 4
  %174 = and i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  br i1 %175, label %178, label %180

178:                                              ; preds = %171
  %179 = add i32 %177, -1
  store i32 %179, i32* %176, align 4
  br label %180

180:                                              ; preds = %178, %171
  %181 = phi i32 [ %179, %178 ], [ %177, %171 ]
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %180
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #11
  br label %184

184:                                              ; preds = %170, %180, %183
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  br label %219

185:                                              ; preds = %28
  %186 = call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %20) #11
  %187 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* nonnull dereferenceable(112) %6) #11
  %188 = call zeroext i1 @_ZNK5blink14SecurityOrigin16IsSameOriginWithEPKS0_(%"class.blink::SecurityOrigin"* %186, %"class.blink::SecurityOrigin"* %187) #11
  %189 = icmp eq %"class.blink::SecurityOrigin"* %187, null
  br i1 %189, label %197, label %190

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %187, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %191) #11
  %192 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %187, i64 0, i32 0, i32 0, i32 0, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %197

195:                                              ; preds = %190
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %187) #11
  %196 = bitcast %"class.blink::SecurityOrigin"* %187 to i8*
  call void @free(i8* %196) #11
  br label %197

197:                                              ; preds = %185, %190, %195
  br i1 %188, label %203, label %198

198:                                              ; preds = %197
  %199 = bitcast %"class.blink::ScriptState"* %2 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = add i64 %200, 176
  %202 = inttoptr i64 %201 to %"class.v8::Primitive"*
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIN2v85LocalINS2_9PrimitiveEEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %12, %"class.v8::Primitive"* %202, i32 1) #11
  br label %219

203:                                              ; preds = %197
  %204 = call zeroext i1 @_ZNK5blink16ExecutionContext26IsWindowInteractionAllowedEv(%"class.blink::ExecutionContext"* %20) #11
  br i1 %204, label %208, label %205

205:                                              ; preds = %203
  %206 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %206) #11
  store i32 35, i32* %9, align 4
  %207 = call %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA53_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %9, [53 x i8]* nonnull dereferenceable(53) @.str.3) #11
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %12, %"class.blink::DOMException"* %207, i32 2) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %206) #11
  br label %219

208:                                              ; preds = %203
  call void @_ZN5blink16ExecutionContext24ConsumeWindowInteractionEv(%"class.blink::ExecutionContext"* %20) #11
  %209 = icmp eq %"class.blink::ExecutionContext"* %20, null
  %210 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %20, i64 -1, i32 22
  %211 = bitcast %"class.blink::DOMTimerCoordinator"* %210 to %"class.blink::ServiceWorkerGlobalScope"*
  %212 = select i1 %209, %"class.blink::ServiceWorkerGlobalScope"* null, %"class.blink::ServiceWorkerGlobalScope"* %211
  %213 = call %"class.blink::mojom::blink::ServiceWorkerHost"* @_ZN5blink24ServiceWorkerGlobalScope20GetServiceWorkerHostEv(%"class.blink::ServiceWorkerGlobalScope"* %212) #11
  call void @_ZN5blink25ServiceWorkerWindowClient33CreateResolveWindowClientCallbackEPNS_21ScriptPromiseResolverE(%"class.base::OnceCallback.1429"* nonnull sret %10, %"class.blink::ScriptPromiseResolver"* %12) #11
  %214 = bitcast %"class.blink::mojom::blink::ServiceWorkerHost"* %213 to void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback.1429"*)***
  %215 = load void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback.1429"*)**, void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback.1429"*)*** %214, align 8
  %216 = getelementptr inbounds void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback.1429"*)*, void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback.1429"*)** %215, i64 7
  %217 = load void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback.1429"*)*, void (%"class.blink::mojom::blink::ServiceWorkerHost"*, %"class.blink::KURL"*, %"class.base::OnceCallback.1429"*)** %216, align 8
  call void %217(%"class.blink::mojom::blink::ServiceWorkerHost"* %213, %"class.blink::KURL"* nonnull dereferenceable(112) %6, %"class.base::OnceCallback.1429"* nonnull %10) #11
  %218 = getelementptr inbounds %"class.base::OnceCallback.1429", %"class.base::OnceCallback.1429"* %10, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %218) #11
  br label %219

219:                                              ; preds = %208, %205, %198, %184
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %29) #11
  br label %220

220:                                              ; preds = %25, %219
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEPKNS_11ScriptStateE(%"class.blink::ScriptState"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN5blink16V8ThrowException15CreateTypeErrorEPN2v87IsolateERKN3WTF6StringE(%"class.v8::Isolate"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1636", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1636", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.1636"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #11
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1636"* nonnull %3, i8* %8) #11
  %9 = bitcast %"class.WTF::StringTypeAdapter.1636"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #11
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1636"* nonnull %2, i8* %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #11
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #11
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #11
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #11
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #11
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #11
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #11
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #11
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #11
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #11
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink14SecurityOrigin16IsSameOriginWithEPKS0_(%"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"*) local_unnamed_addr #1

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16ExecutionContext26IsWindowInteractionAllowedEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink16ExecutionContext24ConsumeWindowInteractionEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare %"class.blink::mojom::blink::ServiceWorkerHost"* @_ZN5blink24ServiceWorkerGlobalScope20GetServiceWorkerHostEv(%"class.blink::ServiceWorkerGlobalScope"*) local_unnamed_addr #1

declare void @_ZN5blink25ServiceWorkerWindowClient33CreateResolveWindowClientCallbackEPNS_21ScriptPromiseResolverE(%"class.base::OnceCallback.1429"* sret, %"class.blink::ScriptPromiseResolver"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PaymentRequestEvent19changePaymentMethodEPNS_11ScriptStateERKN3WTF6StringERKNS_11ScriptValueERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::PaymentRequestEvent"*, %"class.blink::ScriptState"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.mojo::InlinedStructPtr.1430", align 8
  %8 = alloca %"class.mojo::InlinedStructPtr.1430", align 8
  %9 = alloca %"class.base::OnceCallback.1432", align 8
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to { i64, i64 }*
  %12 = alloca %"class.blink::WeakPersistent", align 8
  %13 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %1, i64 0, i32 10
  %14 = getelementptr inbounds %"class.blink::Member.35", %"class.blink::Member.35"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %14, align 8
  %16 = icmp eq %"class.blink::ScriptPromiseResolver"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %6
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 11, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0)) #11
  %18 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 32, i1 false)
  br label %218

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %1, i64 0, i32 12, i32 0, i32 0, i32 0
  %21 = load %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %21, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %21, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %26, align 8
  %28 = icmp eq %"class.mojo::InterfaceEndpointClient"* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %5, i32 11, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0)) #11
  %30 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false)
  br label %218

31:                                               ; preds = %25, %19
  %32 = bitcast %"class.mojo::InlinedStructPtr.1430"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #11
  %33 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1430", %"class.mojo::InlinedStructPtr.1430"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1430", %"class.mojo::InlinedStructPtr.1430"* %7, i64 0, i32 1
  %35 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1430", %"class.mojo::InlinedStructPtr.1430"* %7, i64 0, i32 0
  %36 = bitcast %"class.mojo::InlinedStructPtr.1430"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false)
  call void @_ZN8payments5mojom5blink24PaymentHandlerMethodDataC1Ev(%"class.payments::mojom::blink::PaymentHandlerMethodData"* nonnull %35) #11
  store i32 1, i32* %34, align 8, !alias.scope !20
  %37 = call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %4) #11
  %38 = icmp eq %"class.v8::Value"* %37, null
  br i1 %38, label %61, label %39

39:                                               ; preds = %31
  %40 = bitcast %"class.v8::Value"* %37 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = and i64 %41, 3
  %43 = icmp eq i64 %42, 1
  br i1 %43, label %44, label %61

44:                                               ; preds = %39
  %45 = add i64 %41, -1
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = and i64 %41, -4294967296
  %49 = zext i32 %47 to i64
  %50 = or i64 %48, %49
  %51 = add i64 %50, 7
  %52 = inttoptr i64 %51 to i16*
  %53 = load i16, i16* %52, align 2
  %54 = icmp eq i16 %53, 67
  br i1 %54, label %55, label %61

55:                                               ; preds = %44
  %56 = add i64 %41, 23
  %57 = inttoptr i64 %56 to i32*
  %58 = load i32, i32* %57, align 4
  %59 = and i32 %58, -2
  %60 = icmp eq i32 %59, 6
  br i1 %60, label %70, label %61

61:                                               ; preds = %44, %39, %31, %55
  %62 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %2, i64 0, i32 0
  %63 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %62, align 8
  %64 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1430", %"class.mojo::InlinedStructPtr.1430"* %7, i64 0, i32 0, i32 1
  call void @_ZN5blink18PaymentsValidators26ValidateAndStringifyObjectEPN2v87IsolateERKNS_11ScriptValueERN3WTF6StringERNS_14ExceptionStateE(%"class.v8::Isolate"* %63, %"class.blink::ScriptValue"* dereferenceable(24) %4, %"class.WTF::String"* dereferenceable(8) %64, %"class.blink::ExceptionState"* dereferenceable(72) %5) #11
  %65 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %5, i64 0, i32 4
  %66 = load i32, i32* %65, align 8
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %61
  %69 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 32, i1 false)
  br label %217

70:                                               ; preds = %61, %55
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %91, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i33
  %83 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #11
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !2

88:                                               ; preds = %79
  call void @llvm.trap() #11
  unreachable

89:                                               ; preds = %79
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %80, align 4
  br label %91

91:                                               ; preds = %89, %74, %70
  %92 = ptrtoint %"class.WTF::StringImpl"* %72 to i64
  %93 = bitcast %"class.mojo::InlinedStructPtr.1430"* %7 to i64*
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  store i64 %92, i64* %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #11
  br label %109

109:                                              ; preds = %91, %105, %108
  %110 = load %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %20, align 8
  %111 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %110, i64 0, i32 1, i32 0, i32 1
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.1567", %"class.std::__1::unique_ptr.1567"* %111, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %112, align 8
  %114 = icmp eq %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %113, null
  br i1 %114, label %115, label %137

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %110, i64 0, i32 1
  %117 = bitcast %"class.mojo::Remote.1565"* %116 to %"class.mojo::internal::InterfacePtrStateBase"*
  %118 = call i8* @_Znwm(i64 8) #12
  %119 = bitcast i8* %118 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8payments5mojom5blink35PaymentHandlerHostResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %119, align 8
  %120 = bitcast i8* %118 to %"class.mojo::MessageReceiver"*
  %121 = call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %117, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %120, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8payments5mojom5blink18PaymentHandlerHost5Name_E, i64 0, i64 0)) #11
  br i1 %121, label %122, label %137

122:                                              ; preds = %115
  %123 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %110, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %124 = bitcast %"class.mojo::InterfaceEndpointClient"** %123 to %"class.mojo::MessageReceiverWithResponder"**
  %125 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %124, align 8
  %126 = call i8* @_Znwm(i64 16) #12
  %127 = bitcast i8* %126 to %"class.payments::mojom::blink::PaymentHandlerHostProxy"*
  call void @_ZN8payments5mojom5blink23PaymentHandlerHostProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.payments::mojom::blink::PaymentHandlerHostProxy"* nonnull %127, %"class.mojo::MessageReceiverWithResponder"* %125) #11
  %128 = ptrtoint i8* %126 to i64
  %129 = load %"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %112, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.1567"* %111 to i64*
  store i64 %128, i64* %130, align 8
  %131 = icmp eq %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %129, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %122
  %133 = bitcast %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %129 to void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)***
  %134 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)**, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %134, i64 1
  %136 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %135, align 8
  call void %136(%"class.payments::mojom::blink::PaymentHandlerHostProxy"* nonnull %129) #11
  br label %137

137:                                              ; preds = %109, %115, %122, %132
  %138 = load %"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %112, align 8
  %139 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1430", %"class.mojo::InlinedStructPtr.1430"* %8, i64 0, i32 0
  call void @_ZN8payments5mojom5blink24PaymentHandlerMethodDataC1Ev(%"class.payments::mojom::blink::PaymentHandlerMethodData"* nonnull %139) #11
  %140 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1430", %"class.mojo::InlinedStructPtr.1430"* %8, i64 0, i32 1
  store i32 0, i32* %140, align 8
  call void @_ZN8payments5mojom5blink24PaymentHandlerMethodDataD1Ev(%"class.payments::mojom::blink::PaymentHandlerMethodData"* nonnull %139) #11
  call void @_ZN8payments5mojom5blink24PaymentHandlerMethodDataC1Ev(%"class.payments::mojom::blink::PaymentHandlerMethodData"* nonnull %139) #11
  call void @_ZN4mojo16InlinedStructPtrIN8payments5mojom5blink24PaymentHandlerMethodDataEE4SwapEPS5_(%"class.mojo::InlinedStructPtr.1430"* nonnull %8, %"class.mojo::InlinedStructPtr.1430"* nonnull %7) #11
  %141 = bitcast <2 x i64>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %141) #11
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::PaymentRequestEvent"*, %"class.mojo::StructPtr.1433"*)* @_ZN5blink19PaymentRequestEvent37OnChangePaymentRequestDetailsResponseEN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEE to i64), i64 0>, <2 x i64>* %10, align 16
  %142 = bitcast %"class.blink::WeakPersistent"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %142) #11
  %143 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %12, i64 0, i32 0
  %144 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %12, i64 0, i32 0, i32 0
  store %"class.blink::PaymentRequestEvent"* %1, %"class.blink::PaymentRequestEvent"** %144, align 8, !alias.scope !23
  %145 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %12, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %145, align 8, !alias.scope !23
  %146 = ptrtoint %"class.blink::PaymentRequestEvent"* %1 to i64
  switch i64 %146, label %147 [
    i64 0, label %173
    i64 -1, label %173
  ]

147:                                              ; preds = %137
  %148 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !23
  %149 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %148, i64 0, i32 1
  %150 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %149) #11, !noalias !23
  %151 = icmp eq i8* %150, null
  br i1 %151, label %152, label %154, !prof !2

152:                                              ; preds = %147
  %153 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %149, i8* %153) #11
  br label %154

154:                                              ; preds = %152, %147
  %155 = phi i8* [ %153, %152 ], [ %150, %147 ]
  %156 = bitcast i8* %155 to %"class.blink::ThreadState"**
  %157 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %156, align 8, !noalias !23
  %158 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %157, i64 0, i32 4, i32 0, i32 0, i32 0
  %159 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %158, align 8, !noalias !23
  %160 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %159, i64 0, i32 0, i32 0
  %161 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %160, align 8, !noalias !23
  %162 = icmp eq %"class.blink::PersistentNode"* %161, null
  br i1 %162, label %163, label %166, !prof !2

163:                                              ; preds = %154
  %164 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %159, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %164) #11
  %165 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %160, align 8
  br label %166

166:                                              ; preds = %163, %154
  %167 = phi %"class.blink::PersistentNode"* [ %165, %163 ], [ %161, %154 ]
  %168 = bitcast %"class.blink::PersistentNode"* %167 to i64*
  %169 = load i64, i64* %168, align 8, !noalias !23
  %170 = bitcast %"class.blink::PersistentRegion"* %159 to i64*
  store i64 %169, i64* %170, align 8, !noalias !23
  %171 = bitcast %"class.blink::PersistentNode"* %167 to %"class.blink::PersistentBase.458"**
  store %"class.blink::PersistentBase.458"* %143, %"class.blink::PersistentBase.458"** %171, align 8, !noalias !23
  %172 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %167, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19PaymentRequestEventELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %172, align 8
  store %"class.blink::PersistentNode"* %167, %"class.blink::PersistentNode"** %145, align 8, !alias.scope !23
  br label %173

173:                                              ; preds = %137, %137, %166
  %174 = call i8* @_Znwm(i64 64) #12, !noalias !26
  %175 = bitcast i8* %174 to %"struct.base::internal::BindState.1639"*
  call void @_ZN4base8internal9BindStateIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS2_14WeakPersistentIS3_EEEEC2ISC_JSE_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.1639"* nonnull %175, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.1433"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS3_14WeakPersistentIS4_EEEEEFvSB_EE7RunOnceEPNS0_13BindStateBaseEOSB_ to void ()*), { i64, i64 }* nonnull dereferenceable(16) %11, %"class.blink::WeakPersistent"* nonnull dereferenceable(16) %12) #11, !noalias !26
  %176 = bitcast %"class.base::OnceCallback.1432"* %9 to i8**
  store i8* %174, i8** %176, align 8, !alias.scope !26
  call void @_ZN8payments5mojom5blink23PaymentHandlerHostProxy19ChangePaymentMethodEN4mojo16InlinedStructPtrINS1_24PaymentHandlerMethodDataEEEN4base12OnceCallbackIFvNS3_9StructPtrINS1_27PaymentRequestDetailsUpdateEEEEEE(%"class.payments::mojom::blink::PaymentHandlerHostProxy"* %138, %"class.mojo::InlinedStructPtr.1430"* nonnull %8, %"class.base::OnceCallback.1432"* nonnull %9) #11
  %177 = getelementptr inbounds %"class.base::OnceCallback.1432", %"class.base::OnceCallback.1432"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %177) #11
  %178 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %145, align 8
  %179 = icmp eq %"class.blink::PersistentNode"* %178, null
  br i1 %179, label %199, label %180

180:                                              ; preds = %173
  %181 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %182 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %181, i64 0, i32 1
  %183 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %182) #11
  %184 = icmp eq i8* %183, null
  br i1 %184, label %185, label %187, !prof !2

185:                                              ; preds = %180
  %186 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %182, i8* %186) #11
  br label %187

187:                                              ; preds = %185, %180
  %188 = phi i8* [ %186, %185 ], [ %183, %180 ]
  %189 = bitcast i8* %188 to %"class.blink::ThreadState"**
  %190 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %189, align 8
  %191 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %190, i64 0, i32 4, i32 0, i32 0, i32 0
  %192 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %191, align 8
  %193 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %145, align 8
  %194 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %192, i64 0, i32 0, i32 0
  %195 = bitcast %"class.blink::PersistentRegion"* %192 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.blink::PersistentNode"* %193 to i64*
  store i64 %196, i64* %197, align 8
  %198 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %193, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %198, align 8
  store %"class.blink::PersistentNode"* %193, %"class.blink::PersistentNode"** %194, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %145, align 8
  br label %199

199:                                              ; preds = %173, %187
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %142) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141) #11
  call void @_ZN8payments5mojom5blink24PaymentHandlerMethodDataD1Ev(%"class.payments::mojom::blink::PaymentHandlerMethodData"* nonnull %139) #11
  %200 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm(i64 104) #11
  %201 = bitcast i8* %200 to %"class.blink::ScriptPromiseResolver"*
  call void @_ZN5blink21ScriptPromiseResolverC1EPNS_11ScriptStateE(%"class.blink::ScriptPromiseResolver"* %201, %"class.blink::ScriptState"* %2) #11
  %202 = getelementptr inbounds i8, i8* %200, i64 -4
  %203 = bitcast i8* %202 to i16*
  %204 = load atomic i16, i16* %203 monotonic, align 2
  %205 = or i16 %204, 1
  store atomic i16 %205, i16* %203 release, align 2
  %206 = ptrtoint i8* %200 to i64
  %207 = bitcast %"class.blink::Member.35"* %13 to i64*
  store atomic i64 %206, i64* %207 monotonic, align 8
  %208 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %209 = icmp eq i32 %208, 0
  %210 = bitcast i8* %200 to %"class.blink::ScriptPromiseResolver"*
  br i1 %209, label %214, label %211

211:                                              ; preds = %199
  %212 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %200) #11
  %213 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %14, align 8
  br label %214

214:                                              ; preds = %199, %211
  %215 = phi %"class.blink::ScriptPromiseResolver"* [ %210, %199 ], [ %213, %211 ]
  %216 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %215, i64 0, i32 5
  call void @_ZNK5blink13ScriptPromise16InternalResolver7PromiseEv(%"class.blink::ScriptPromise"* sret %0, %"class.blink::ScriptPromise::InternalResolver"* %216) #11
  br label %217

217:                                              ; preds = %214, %68
  call void @_ZN8payments5mojom5blink24PaymentHandlerMethodDataD1Ev(%"class.payments::mojom::blink::PaymentHandlerMethodData"* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #11
  br label %218

218:                                              ; preds = %217, %29, %17
  ret void
}

declare void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"*, i32, i8*) local_unnamed_addr #1

declare void @_ZN5blink18PaymentsValidators26ValidateAndStringifyObjectEPN2v87IsolateERKNS_11ScriptValueERN3WTF6StringERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.blink::ScriptValue"* dereferenceable(24), %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN8payments5mojom5blink23PaymentHandlerHostProxy19ChangePaymentMethodEN4mojo16InlinedStructPtrINS1_24PaymentHandlerMethodDataEEEN4base12OnceCallbackIFvNS3_9StructPtrINS1_27PaymentRequestDetailsUpdateEEEEEE(%"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.mojo::InlinedStructPtr.1430"*, %"class.base::OnceCallback.1432"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PaymentRequestEvent37OnChangePaymentRequestDetailsResponseEN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEE(%"class.blink::PaymentRequestEvent"* nocapture, %"class.mojo::StructPtr.1433"* readonly) #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.blink::ExceptionState", align 8
  %7 = alloca %"class.blink::HeapVector.14", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::ScriptValue", align 8
  %10 = alloca %"class.blink::HeapVector.24", align 8
  %11 = alloca %"class.blink::ScriptValue", align 8
  %12 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 10, i32 0
  %13 = getelementptr inbounds %"class.blink::MemberBase.36", %"class.blink::MemberBase.36"* %12, i64 0, i32 0
  %14 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %13, align 8
  %15 = icmp eq %"class.blink::ScriptPromiseResolver"* %14, null
  br i1 %15, label %1357, label %16

16:                                               ; preds = %2
  %17 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 96) #11
  %18 = bitcast i8* %17 to %"class.blink::PaymentRequestDetailsUpdate"*
  tail call void @_ZN5blink27PaymentRequestDetailsUpdateC1Ev(%"class.blink::PaymentRequestDetailsUpdate"* %18) #11
  %19 = getelementptr inbounds i8, i8* %17, i64 -4
  %20 = bitcast i8* %19 to i16*
  %21 = load atomic i16, i16* %20 monotonic, align 2
  %22 = or i16 %21, 1
  store atomic i16 %22, i16* %20 release, align 2
  %23 = getelementptr inbounds %"class.mojo::StructPtr.1433", %"class.mojo::StructPtr.1433"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %23, align 8
  %25 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %24, i64 0, i32 3, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %69, label %28

28:                                               ; preds = %16
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %69, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds i8, i8* %17, i64 16
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #11
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %38
  tail call void @llvm.trap() #11
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %48, %32
  %51 = ptrtoint %"class.WTF::StringImpl"* %26 to i64
  %52 = bitcast i8* %33 to i64*
  %53 = bitcast i8* %33 to %"class.WTF::StringImpl"**
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  store i64 %51, i64* %52, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #11
  br label %69

69:                                               ; preds = %68, %65, %50, %28, %16
  %70 = load %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %23, align 8
  %71 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %70, i64 0, i32 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %165, label %74

74:                                               ; preds = %69
  %75 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 24) #11
  %76 = bitcast i8* %75 to %"class.blink::PaymentCurrencyAmount"*
  tail call void @_ZN5blink21PaymentCurrencyAmountC1Ev(%"class.blink::PaymentCurrencyAmount"* %76) #11
  %77 = getelementptr inbounds i8, i8* %75, i64 -4
  %78 = bitcast i8* %77 to i16*
  %79 = load atomic i16, i16* %78 monotonic, align 2
  %80 = or i16 %79, 1
  store atomic i16 %80, i16* %78 release, align 2
  %81 = load %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %23, align 8
  %82 = getelementptr inbounds i8, i8* %75, i64 8
  %83 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %103, label %86

86:                                               ; preds = %74
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %103

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i33
  %95 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %94, i33 1) #11
  %96 = extractvalue { i33, i1 } %95, 1
  %97 = extractvalue { i33, i1 } %95, 0
  %98 = icmp slt i33 %97, 0
  %99 = or i1 %96, %98
  br i1 %99, label %100, label %101, !prof !2

100:                                              ; preds = %91
  tail call void @llvm.trap() #11
  unreachable

101:                                              ; preds = %91
  %102 = trunc i33 %97 to i32
  store i32 %102, i32* %92, align 4
  br label %103

103:                                              ; preds = %101, %86, %74
  %104 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %105 = bitcast i8* %82 to i64*
  %106 = bitcast i8* %82 to %"class.WTF::StringImpl"**
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  store i64 %104, i64* %105, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #11
  br label %122

122:                                              ; preds = %103, %118, %121
  %123 = load %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %23, align 8
  %124 = getelementptr inbounds i8, i8* %75, i64 16
  %125 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %123, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %145, label %128

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %145

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = zext i32 %135 to i33
  %137 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %136, i33 1) #11
  %138 = extractvalue { i33, i1 } %137, 1
  %139 = extractvalue { i33, i1 } %137, 0
  %140 = icmp slt i33 %139, 0
  %141 = or i1 %138, %140
  br i1 %141, label %142, label %143, !prof !2

142:                                              ; preds = %133
  tail call void @llvm.trap() #11
  unreachable

143:                                              ; preds = %133
  %144 = trunc i33 %139 to i32
  store i32 %144, i32* %134, align 4
  br label %145

145:                                              ; preds = %143, %128, %122
  %146 = ptrtoint %"class.WTF::StringImpl"* %126 to i64
  %147 = bitcast i8* %124 to i64*
  %148 = bitcast i8* %124 to %"class.WTF::StringImpl"**
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  store i64 %146, i64* %147, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #11
  br label %164

164:                                              ; preds = %145, %160, %163
  tail call void @_ZN5blink27PaymentRequestDetailsUpdate8setTotalEPNS_21PaymentCurrencyAmountE(%"class.blink::PaymentRequestDetailsUpdate"* %18, %"class.blink::PaymentCurrencyAmount"* %76) #11
  br label %165

165:                                              ; preds = %69, %164
  %166 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %13, align 8
  %167 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %166, i64 0, i32 3, i32 0, i32 0
  %168 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %167, align 8
  %169 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %169) #11
  %170 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %171 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %172 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %168, i64 0, i32 0
  %173 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %173, i8 -86, i64 32, i1 false)
  %174 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %172, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %171, %"class.v8::Isolate"* %174) #11
  %175 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %168, i64 0, i32 1, i32 0, i32 0, i32 0
  %176 = load %"class.v8::Context"*, %"class.v8::Context"** %175, align 8
  %177 = icmp eq %"class.v8::Context"* %176, null
  br i1 %177, label %185, label %178

178:                                              ; preds = %165
  %179 = bitcast %"class.blink::ScriptState"* %168 to %"class.v8::internal::Isolate"**
  %180 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %179, align 8
  %181 = bitcast %"class.v8::Context"* %176 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %180, i64 %182) #11
  %184 = bitcast i64* %183 to %"class.v8::Context"*
  br label %185

185:                                              ; preds = %165, %178
  %186 = phi %"class.v8::Context"* [ %184, %178 ], [ null, %165 ]
  store %"class.v8::Context"* %186, %"class.v8::Context"** %170, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %186) #11
  %187 = bitcast %"class.blink::ExceptionState"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %187) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %187, i8 -86, i64 72, i1 false)
  %188 = bitcast %"class.blink::ScriptState"* %168 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %190, align 8
  %191 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 0
  store i16 5, i16* %191, align 8
  %192 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 1
  store i16 0, i16* %192, align 2
  %193 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 2
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8** %193, align 8
  %194 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 1, i32 3
  %195 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 3
  %196 = bitcast i8** %194 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %196, i8 0, i64 16, i1 false) #11
  %197 = bitcast %"class.v8::Isolate"** %195 to i64*
  store i64 %189, i64* %197, align 8
  %198 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 4
  store i32 0, i32* %198, align 8
  %199 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 5, i32 0, i32 0
  %200 = bitcast %"class.WTF::StringImpl"** %199 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %200, i8 0, i64 16, i1 false) #11
  %201 = load %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %23, align 8
  %202 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %201, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %203 = load i8, i8* %202, align 8, !range !3
  %204 = icmp eq i8 %203, 0
  br i1 %204, label %534, label %205

205:                                              ; preds = %185
  %206 = bitcast %"class.blink::HeapVector.14"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %206) #11
  %207 = getelementptr inbounds %"class.blink::HeapVector.14", %"class.blink::HeapVector.14"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %208 = getelementptr inbounds %"class.blink::HeapVector.14", %"class.blink::HeapVector.14"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %209 = getelementptr inbounds %"class.blink::HeapVector.14", %"class.blink::HeapVector.14"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %206, i8 0, i64 16, i1 false) #11
  %210 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %201, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %211 = load %"class.mojo::StructPtr.1464"*, %"class.mojo::StructPtr.1464"** %210, align 8
  %212 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %201, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %213 = load i32, i32* %212, align 4
  %214 = zext i32 %213 to i64
  %215 = getelementptr inbounds %"class.mojo::StructPtr.1464", %"class.mojo::StructPtr.1464"* %211, i64 %214
  %216 = icmp eq i32 %213, 0
  br i1 %216, label %526, label %217

217:                                              ; preds = %205
  %218 = bitcast %"class.WTF::String"* %8 to i8*
  %219 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %220 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %9, i64 0, i32 0
  %221 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %9, i64 0, i32 1
  %222 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %9, i64 0, i32 1, i32 1, i32 0
  %223 = getelementptr inbounds %"class.blink::HeapVector.14", %"class.blink::HeapVector.14"* %7, i64 0, i32 0
  br label %224

224:                                              ; preds = %217, %523
  %225 = phi %"class.mojo::StructPtr.1464"* [ %211, %217 ], [ %524, %523 ]
  %226 = getelementptr inbounds %"class.mojo::StructPtr.1464", %"class.mojo::StructPtr.1464"* %225, i64 0, i32 0, i32 0, i32 0, i32 0
  %227 = load %"class.payments::mojom::blink::PaymentHandlerModifier"*, %"class.payments::mojom::blink::PaymentHandlerModifier"** %226, align 8
  %228 = icmp eq %"class.payments::mojom::blink::PaymentHandlerModifier"* %227, null
  br i1 %228, label %523, label %229

229:                                              ; preds = %224
  %230 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 72) #11
  %231 = bitcast i8* %230 to %"class.blink::PaymentDetailsModifier"*
  call void @_ZN5blink22PaymentDetailsModifierC1Ev(%"class.blink::PaymentDetailsModifier"* %231) #11
  %232 = getelementptr inbounds i8, i8* %230, i64 -4
  %233 = bitcast i8* %232 to i16*
  %234 = load atomic i16, i16* %233 monotonic, align 2
  %235 = or i16 %234, 1
  store atomic i16 %235, i16* %233 release, align 2
  %236 = ptrtoint i8* %230 to i64
  %237 = load %"class.payments::mojom::blink::PaymentHandlerModifier"*, %"class.payments::mojom::blink::PaymentHandlerModifier"** %226, align 8
  %238 = getelementptr inbounds i8, i8* %230, i64 56
  %239 = getelementptr inbounds %"class.payments::mojom::blink::PaymentHandlerModifier", %"class.payments::mojom::blink::PaymentHandlerModifier"* %237, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %240 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %239, align 8
  %241 = icmp eq %"class.WTF::StringImpl"* %240, null
  br i1 %241, label %259, label %242

242:                                              ; preds = %229
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = load atomic i32, i32* %243 monotonic, align 4
  %245 = and i32 %244, 2
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %259

247:                                              ; preds = %242
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %240, i64 0, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = zext i32 %249 to i33
  %251 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %250, i33 1) #11
  %252 = extractvalue { i33, i1 } %251, 1
  %253 = extractvalue { i33, i1 } %251, 0
  %254 = icmp slt i33 %253, 0
  %255 = or i1 %252, %254
  br i1 %255, label %256, label %257, !prof !2

256:                                              ; preds = %247
  call void @llvm.trap() #11
  unreachable

257:                                              ; preds = %247
  %258 = trunc i33 %253 to i32
  store i32 %258, i32* %248, align 4
  br label %259

259:                                              ; preds = %257, %242, %229
  %260 = ptrtoint %"class.WTF::StringImpl"* %240 to i64
  %261 = bitcast i8* %238 to i64*
  %262 = bitcast i8* %238 to %"class.WTF::StringImpl"**
  %263 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %262, align 8
  store i64 %260, i64* %261, align 8
  %264 = icmp eq %"class.WTF::StringImpl"* %263, null
  br i1 %264, label %278, label %265

265:                                              ; preds = %259
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load atomic i32, i32* %266 monotonic, align 4
  %268 = and i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %263, i64 0, i32 0
  %271 = load i32, i32* %270, align 4
  br i1 %269, label %272, label %274

272:                                              ; preds = %265
  %273 = add i32 %271, -1
  store i32 %273, i32* %270, align 4
  br label %274

274:                                              ; preds = %272, %265
  %275 = phi i32 [ %273, %272 ], [ %271, %265 ]
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %278

277:                                              ; preds = %274
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %263) #11
  br label %278

278:                                              ; preds = %259, %274, %277
  %279 = load %"class.payments::mojom::blink::PaymentHandlerModifier"*, %"class.payments::mojom::blink::PaymentHandlerModifier"** %226, align 8
  %280 = getelementptr inbounds %"class.payments::mojom::blink::PaymentHandlerModifier", %"class.payments::mojom::blink::PaymentHandlerModifier"* %279, i64 0, i32 0, i32 1
  %281 = load i32, i32* %280, align 8
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %437, label %283

283:                                              ; preds = %278
  %284 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 24) #11
  %285 = bitcast i8* %284 to %"class.blink::PaymentCurrencyAmount"*
  call void @_ZN5blink21PaymentCurrencyAmountC1Ev(%"class.blink::PaymentCurrencyAmount"* %285) #11
  %286 = getelementptr inbounds i8, i8* %284, i64 -4
  %287 = bitcast i8* %286 to i16*
  %288 = load atomic i16, i16* %287 monotonic, align 2
  %289 = or i16 %288, 1
  store atomic i16 %289, i16* %287 release, align 2
  %290 = load %"class.payments::mojom::blink::PaymentHandlerModifier"*, %"class.payments::mojom::blink::PaymentHandlerModifier"** %226, align 8
  %291 = getelementptr inbounds i8, i8* %284, i64 8
  %292 = getelementptr inbounds %"class.payments::mojom::blink::PaymentHandlerModifier", %"class.payments::mojom::blink::PaymentHandlerModifier"* %290, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %292, align 8
  %294 = icmp eq %"class.WTF::StringImpl"* %293, null
  br i1 %294, label %312, label %295

295:                                              ; preds = %283
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = and i32 %297, 2
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %312

300:                                              ; preds = %295
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 0
  %302 = load i32, i32* %301, align 4
  %303 = zext i32 %302 to i33
  %304 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %303, i33 1) #11
  %305 = extractvalue { i33, i1 } %304, 1
  %306 = extractvalue { i33, i1 } %304, 0
  %307 = icmp slt i33 %306, 0
  %308 = or i1 %305, %307
  br i1 %308, label %309, label %310, !prof !2

309:                                              ; preds = %300
  call void @llvm.trap() #11
  unreachable

310:                                              ; preds = %300
  %311 = trunc i33 %306 to i32
  store i32 %311, i32* %301, align 4
  br label %312

312:                                              ; preds = %310, %295, %283
  %313 = ptrtoint %"class.WTF::StringImpl"* %293 to i64
  %314 = bitcast i8* %291 to i64*
  %315 = bitcast i8* %291 to %"class.WTF::StringImpl"**
  %316 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %315, align 8
  store i64 %313, i64* %314, align 8
  %317 = icmp eq %"class.WTF::StringImpl"* %316, null
  br i1 %317, label %331, label %318

318:                                              ; preds = %312
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %316, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = load atomic i32, i32* %319 monotonic, align 4
  %321 = and i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %316, i64 0, i32 0
  %324 = load i32, i32* %323, align 4
  br i1 %322, label %325, label %327

325:                                              ; preds = %318
  %326 = add i32 %324, -1
  store i32 %326, i32* %323, align 4
  br label %327

327:                                              ; preds = %325, %318
  %328 = phi i32 [ %326, %325 ], [ %324, %318 ]
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %330, label %331

330:                                              ; preds = %327
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %316) #11
  br label %331

331:                                              ; preds = %312, %327, %330
  %332 = load %"class.payments::mojom::blink::PaymentHandlerModifier"*, %"class.payments::mojom::blink::PaymentHandlerModifier"** %226, align 8
  %333 = getelementptr inbounds i8, i8* %284, i64 16
  %334 = getelementptr inbounds %"class.payments::mojom::blink::PaymentHandlerModifier", %"class.payments::mojom::blink::PaymentHandlerModifier"* %332, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %335 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %334, align 8
  %336 = icmp eq %"class.WTF::StringImpl"* %335, null
  br i1 %336, label %354, label %337

337:                                              ; preds = %331
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %335, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %339 = load atomic i32, i32* %338 monotonic, align 4
  %340 = and i32 %339, 2
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %342, label %354

342:                                              ; preds = %337
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %335, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  %345 = zext i32 %344 to i33
  %346 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %345, i33 1) #11
  %347 = extractvalue { i33, i1 } %346, 1
  %348 = extractvalue { i33, i1 } %346, 0
  %349 = icmp slt i33 %348, 0
  %350 = or i1 %347, %349
  br i1 %350, label %351, label %352, !prof !2

351:                                              ; preds = %342
  call void @llvm.trap() #11
  unreachable

352:                                              ; preds = %342
  %353 = trunc i33 %348 to i32
  store i32 %353, i32* %343, align 4
  br label %354

354:                                              ; preds = %352, %337, %331
  %355 = ptrtoint %"class.WTF::StringImpl"* %335 to i64
  %356 = bitcast i8* %333 to i64*
  %357 = bitcast i8* %333 to %"class.WTF::StringImpl"**
  %358 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %357, align 8
  store i64 %355, i64* %356, align 8
  %359 = icmp eq %"class.WTF::StringImpl"* %358, null
  br i1 %359, label %373, label %360

360:                                              ; preds = %354
  %361 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %358, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %362 = load atomic i32, i32* %361 monotonic, align 4
  %363 = and i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %358, i64 0, i32 0
  %366 = load i32, i32* %365, align 4
  br i1 %364, label %367, label %369

367:                                              ; preds = %360
  %368 = add i32 %366, -1
  store i32 %368, i32* %365, align 4
  br label %369

369:                                              ; preds = %367, %360
  %370 = phi i32 [ %368, %367 ], [ %366, %360 ]
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %373

372:                                              ; preds = %369
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %358) #11
  br label %373

373:                                              ; preds = %354, %369, %372
  %374 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 40) #11
  %375 = bitcast i8* %374 to %"class.blink::PaymentItem"*
  call void @_ZN5blink11PaymentItemC1Ev(%"class.blink::PaymentItem"* %375) #11
  %376 = getelementptr inbounds i8, i8* %374, i64 -4
  %377 = bitcast i8* %376 to i16*
  %378 = load atomic i16, i16* %377 monotonic, align 2
  %379 = or i16 %378, 1
  store atomic i16 %379, i16* %377 release, align 2
  call void @_ZN5blink11PaymentItem9setAmountEPNS_21PaymentCurrencyAmountE(%"class.blink::PaymentItem"* %375, %"class.blink::PaymentCurrencyAmount"* %285) #11
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.10, i64 0, i64 0), i64 0) #11
  %380 = getelementptr inbounds i8, i8* %374, i64 24
  %381 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %382 = icmp eq %"class.WTF::StringImpl"* %381, null
  br i1 %382, label %400, label %383

383:                                              ; preds = %373
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %381, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %385 = load atomic i32, i32* %384 monotonic, align 4
  %386 = and i32 %385, 2
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %400

388:                                              ; preds = %383
  %389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %381, i64 0, i32 0
  %390 = load i32, i32* %389, align 4
  %391 = zext i32 %390 to i33
  %392 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %391, i33 1) #11
  %393 = extractvalue { i33, i1 } %392, 1
  %394 = extractvalue { i33, i1 } %392, 0
  %395 = icmp slt i33 %394, 0
  %396 = or i1 %393, %395
  br i1 %396, label %397, label %398, !prof !2

397:                                              ; preds = %388
  call void @llvm.trap() #11
  unreachable

398:                                              ; preds = %388
  %399 = trunc i33 %394 to i32
  store i32 %399, i32* %389, align 4
  br label %400

400:                                              ; preds = %398, %383, %373
  %401 = ptrtoint %"class.WTF::StringImpl"* %381 to i64
  %402 = bitcast i8* %380 to i64*
  %403 = bitcast i8* %380 to %"class.WTF::StringImpl"**
  %404 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %403, align 8
  store i64 %401, i64* %402, align 8
  %405 = icmp eq %"class.WTF::StringImpl"* %404, null
  br i1 %405, label %419, label %406

406:                                              ; preds = %400
  %407 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %404, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %408 = load atomic i32, i32* %407 monotonic, align 4
  %409 = and i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %404, i64 0, i32 0
  %412 = load i32, i32* %411, align 4
  br i1 %410, label %413, label %415

413:                                              ; preds = %406
  %414 = add i32 %412, -1
  store i32 %414, i32* %411, align 4
  br label %415

415:                                              ; preds = %413, %406
  %416 = phi i32 [ %414, %413 ], [ %412, %406 ]
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %418, label %419

418:                                              ; preds = %415
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %404) #11
  br label %419

419:                                              ; preds = %400, %415, %418
  %420 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %421 = icmp eq %"class.WTF::StringImpl"* %420, null
  br i1 %421, label %435, label %422

422:                                              ; preds = %419
  %423 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %420, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %424 = load atomic i32, i32* %423 monotonic, align 4
  %425 = and i32 %424, 2
  %426 = icmp eq i32 %425, 0
  %427 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %420, i64 0, i32 0
  %428 = load i32, i32* %427, align 4
  br i1 %426, label %429, label %431

429:                                              ; preds = %422
  %430 = add i32 %428, -1
  store i32 %430, i32* %427, align 4
  br label %431

431:                                              ; preds = %429, %422
  %432 = phi i32 [ %430, %429 ], [ %428, %422 ]
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %434, label %435

434:                                              ; preds = %431
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %420) #11
  br label %435

435:                                              ; preds = %419, %431, %434
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218) #11
  call void @_ZN5blink22PaymentDetailsModifier8setTotalEPNS_11PaymentItemE(%"class.blink::PaymentDetailsModifier"* %231, %"class.blink::PaymentItem"* %375) #11
  %436 = load %"class.payments::mojom::blink::PaymentHandlerModifier"*, %"class.payments::mojom::blink::PaymentHandlerModifier"** %226, align 8
  br label %437

437:                                              ; preds = %278, %435
  %438 = phi %"class.payments::mojom::blink::PaymentHandlerModifier"* [ %279, %278 ], [ %436, %435 ]
  %439 = getelementptr inbounds %"class.payments::mojom::blink::PaymentHandlerModifier", %"class.payments::mojom::blink::PaymentHandlerModifier"* %438, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %440 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %439, align 8
  %441 = icmp eq %"class.WTF::StringImpl"* %440, null
  br i1 %441, label %523, label %442

442:                                              ; preds = %437
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %440, i64 0, i32 1
  %444 = load i32, i32* %443, align 4
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %523, label %446

446:                                              ; preds = %442
  %447 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %172, align 8
  %448 = load %"class.v8::Context"*, %"class.v8::Context"** %175, align 8
  %449 = icmp eq %"class.v8::Context"* %448, null
  br i1 %449, label %457, label %450

450:                                              ; preds = %446
  %451 = bitcast %"class.v8::Isolate"* %447 to %"class.v8::internal::Isolate"*
  %452 = bitcast %"class.v8::Context"* %448 to i64*
  %453 = load i64, i64* %452, align 8
  %454 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %451, i64 %453) #11
  %455 = bitcast i64* %454 to %"class.v8::Context"*
  %456 = load %"class.payments::mojom::blink::PaymentHandlerModifier"*, %"class.payments::mojom::blink::PaymentHandlerModifier"** %226, align 8
  br label %457

457:                                              ; preds = %446, %450
  %458 = phi %"class.payments::mojom::blink::PaymentHandlerModifier"* [ %456, %450 ], [ %438, %446 ]
  %459 = phi %"class.v8::Context"* [ %455, %450 ], [ null, %446 ]
  %460 = getelementptr inbounds %"class.payments::mojom::blink::PaymentHandlerModifier", %"class.payments::mojom::blink::PaymentHandlerModifier"* %458, i64 0, i32 1, i32 0, i32 1
  %461 = call %"class.v8::Value"* @_ZN5blink14FromJSONStringEPN2v87IsolateENS0_5LocalINS0_7ContextEEERKN3WTF6StringERNS_14ExceptionStateE(%"class.v8::Isolate"* %447, %"class.v8::Context"* %459, %"class.WTF::String"* dereferenceable(8) %460, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #11
  %462 = load i32, i32* %198, align 8
  %463 = icmp eq i32 %462, 0
  br i1 %463, label %486, label %464

464:                                              ; preds = %457
  %465 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %13, align 8
  %466 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 5
  %467 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #11
  %468 = bitcast i8* %467 to %"class.blink::DOMException"*
  %469 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %469) #11
  %470 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %470, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %468, i32 12, %"class.WTF::String"* dereferenceable(8) %466, %"class.WTF::String"* nonnull dereferenceable(8) %3) #11
  %471 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %470, align 8
  %472 = icmp eq %"class.WTF::StringImpl"* %471, null
  br i1 %472, label %528, label %473

473:                                              ; preds = %464
  %474 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %471, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %475 = load atomic i32, i32* %474 monotonic, align 4
  %476 = and i32 %475, 2
  %477 = icmp eq i32 %476, 0
  %478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %471, i64 0, i32 0
  %479 = load i32, i32* %478, align 4
  br i1 %477, label %480, label %482

480:                                              ; preds = %473
  %481 = add i32 %479, -1
  store i32 %481, i32* %478, align 4
  br label %482

482:                                              ; preds = %480, %473
  %483 = phi i32 [ %481, %480 ], [ %479, %473 ]
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %485, label %528

485:                                              ; preds = %482
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %471) #11
  br label %528

486:                                              ; preds = %457
  %487 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %172, align 8
  store %"class.v8::Isolate"* %487, %"class.v8::Isolate"** %220, align 8
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %221, %"class.v8::Isolate"* %487, %"class.v8::Value"* %461) #11
  call void @_ZN5blink22PaymentDetailsModifier7setDataENS_11ScriptValueE(%"class.blink::PaymentDetailsModifier"* %231, %"class.blink::ScriptValue"* nonnull %9) #11
  %488 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %222, align 8
  %489 = icmp eq %"class.blink::DOMWrapperWorld"* %488, null
  br i1 %489, label %497, label %490

490:                                              ; preds = %486
  %491 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %488, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %491) #11
  %492 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %488, i64 0, i32 0, i32 0, i32 0, i32 0
  %493 = load i32, i32* %492, align 4
  %494 = icmp eq i32 %493, 0
  br i1 %494, label %495, label %497

495:                                              ; preds = %490
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %488) #11
  %496 = bitcast %"class.blink::DOMWrapperWorld"* %488 to i8*
  call void @free(i8* %496) #11
  br label %497

497:                                              ; preds = %486, %490, %495
  %498 = load i32, i32* %209, align 4
  %499 = load i32, i32* %208, align 8
  %500 = icmp eq i32 %498, %499
  br i1 %500, label %501, label %510, !prof !2

501:                                              ; preds = %497
  %502 = add i32 %498, 1
  %503 = lshr i32 %498, 2
  %504 = add i32 %502, %503
  %505 = icmp ugt i32 %504, 4
  %506 = select i1 %505, i32 %504, i32 4
  %507 = icmp ugt i32 %506, %502
  %508 = select i1 %507, i32 %506, i32 %502
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_22PaymentDetailsModifierEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.17"* nonnull %223, i32 %508) #11
  %509 = load i32, i32* %209, align 4
  br label %510

510:                                              ; preds = %501, %497
  %511 = phi i32 [ %509, %501 ], [ %498, %497 ]
  %512 = load %"class.blink::Member.20"*, %"class.blink::Member.20"** %207, align 8
  %513 = zext i32 %511 to i64
  %514 = getelementptr inbounds %"class.blink::Member.20", %"class.blink::Member.20"* %512, i64 %513
  %515 = bitcast %"class.blink::Member.20"* %514 to i64*
  store atomic i64 %236, i64* %515 monotonic, align 8
  %516 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %520, label %518

518:                                              ; preds = %510
  %519 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %230) #11
  br label %520

520:                                              ; preds = %518, %510
  %521 = load i32, i32* %209, align 4
  %522 = add i32 %521, 1
  store i32 %522, i32* %209, align 4
  br label %523

523:                                              ; preds = %224, %437, %442, %520
  %524 = getelementptr inbounds %"class.mojo::StructPtr.1464", %"class.mojo::StructPtr.1464"* %225, i64 1
  %525 = icmp eq %"class.mojo::StructPtr.1464"* %524, %215
  br i1 %525, label %526, label %224

526:                                              ; preds = %523, %205
  call void @_ZN5blink27PaymentRequestDetailsUpdate12setModifiersERKNS_10HeapVectorINS_6MemberINS_22PaymentDetailsModifierEEELj0EEE(%"class.blink::PaymentRequestDetailsUpdate"* %18, %"class.blink::HeapVector.14"* nonnull dereferenceable(16) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %206) #11
  %527 = load %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %23, align 8
  br label %534

528:                                              ; preds = %464, %482, %485
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %469) #11
  %529 = getelementptr inbounds i8, i8* %467, i64 -4
  %530 = bitcast i8* %529 to i16*
  %531 = load atomic i16, i16* %530 monotonic, align 2
  %532 = or i16 %531, 1
  store atomic i16 %532, i16* %530 release, align 2
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %465, %"class.blink::DOMException"* %468, i32 2) #11
  %533 = bitcast %"class.blink::MemberBase.36"* %12 to i64*
  store atomic i64 0, i64* %533 monotonic, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %206) #11
  br label %1326

534:                                              ; preds = %185, %526
  %535 = phi %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* [ %201, %185 ], [ %527, %526 ]
  %536 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %535, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %537 = load i8, i8* %536, align 8, !range !3
  %538 = icmp eq i8 %537, 0
  br i1 %538, label %775, label %539

539:                                              ; preds = %534
  %540 = bitcast %"class.blink::HeapVector.24"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %540) #11
  %541 = getelementptr inbounds %"class.blink::HeapVector.24", %"class.blink::HeapVector.24"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %542 = getelementptr inbounds %"class.blink::HeapVector.24", %"class.blink::HeapVector.24"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %543 = getelementptr inbounds %"class.blink::HeapVector.24", %"class.blink::HeapVector.24"* %10, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %540, i8 0, i64 16, i1 false) #11
  %544 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %535, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %545 = load %"class.mojo::StructPtr.1447"*, %"class.mojo::StructPtr.1447"** %544, align 8
  %546 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %535, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %547 = load i32, i32* %546, align 4
  %548 = zext i32 %547 to i64
  %549 = getelementptr inbounds %"class.mojo::StructPtr.1447", %"class.mojo::StructPtr.1447"* %545, i64 %548
  %550 = icmp eq i32 %547, 0
  br i1 %550, label %553, label %551

551:                                              ; preds = %539
  %552 = getelementptr inbounds %"class.blink::HeapVector.24", %"class.blink::HeapVector.24"* %10, i64 0, i32 0
  br label %555

553:                                              ; preds = %772, %539
  call void @_ZN5blink27PaymentRequestDetailsUpdate18setShippingOptionsERKNS_10HeapVectorINS_6MemberINS_21PaymentShippingOptionEEELj0EEE(%"class.blink::PaymentRequestDetailsUpdate"* %18, %"class.blink::HeapVector.24"* nonnull dereferenceable(16) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %540) #11
  %554 = load %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %23, align 8
  br label %775

555:                                              ; preds = %551, %772
  %556 = phi %"class.mojo::StructPtr.1447"* [ %545, %551 ], [ %773, %772 ]
  %557 = getelementptr inbounds %"class.mojo::StructPtr.1447", %"class.mojo::StructPtr.1447"* %556, i64 0, i32 0, i32 0, i32 0, i32 0
  %558 = load %"class.payments::mojom::blink::PaymentShippingOption"*, %"class.payments::mojom::blink::PaymentShippingOption"** %557, align 8
  %559 = icmp eq %"class.payments::mojom::blink::PaymentShippingOption"* %558, null
  br i1 %559, label %772, label %560

560:                                              ; preds = %555
  %561 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 48) #11
  %562 = bitcast i8* %561 to %"class.blink::PaymentShippingOption"*
  call void @_ZN5blink21PaymentShippingOptionC1Ev(%"class.blink::PaymentShippingOption"* %562) #11
  %563 = getelementptr inbounds i8, i8* %561, i64 -4
  %564 = bitcast i8* %563 to i16*
  %565 = load atomic i16, i16* %564 monotonic, align 2
  %566 = or i16 %565, 1
  store atomic i16 %566, i16* %564 release, align 2
  %567 = ptrtoint i8* %561 to i64
  %568 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 24) #11
  %569 = bitcast i8* %568 to %"class.blink::PaymentCurrencyAmount"*
  call void @_ZN5blink21PaymentCurrencyAmountC1Ev(%"class.blink::PaymentCurrencyAmount"* %569) #11
  %570 = getelementptr inbounds i8, i8* %568, i64 -4
  %571 = bitcast i8* %570 to i16*
  %572 = load atomic i16, i16* %571 monotonic, align 2
  %573 = or i16 %572, 1
  store atomic i16 %573, i16* %571 release, align 2
  %574 = load %"class.payments::mojom::blink::PaymentShippingOption"*, %"class.payments::mojom::blink::PaymentShippingOption"** %557, align 8
  %575 = getelementptr inbounds i8, i8* %568, i64 8
  %576 = getelementptr inbounds %"class.payments::mojom::blink::PaymentShippingOption", %"class.payments::mojom::blink::PaymentShippingOption"* %574, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %577 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %576, align 8
  %578 = icmp eq %"class.WTF::StringImpl"* %577, null
  br i1 %578, label %596, label %579

579:                                              ; preds = %560
  %580 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %577, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %581 = load atomic i32, i32* %580 monotonic, align 4
  %582 = and i32 %581, 2
  %583 = icmp eq i32 %582, 0
  br i1 %583, label %584, label %596

584:                                              ; preds = %579
  %585 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %577, i64 0, i32 0
  %586 = load i32, i32* %585, align 4
  %587 = zext i32 %586 to i33
  %588 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %587, i33 1) #11
  %589 = extractvalue { i33, i1 } %588, 1
  %590 = extractvalue { i33, i1 } %588, 0
  %591 = icmp slt i33 %590, 0
  %592 = or i1 %589, %591
  br i1 %592, label %593, label %594, !prof !2

593:                                              ; preds = %584
  call void @llvm.trap() #11
  unreachable

594:                                              ; preds = %584
  %595 = trunc i33 %590 to i32
  store i32 %595, i32* %585, align 4
  br label %596

596:                                              ; preds = %594, %579, %560
  %597 = ptrtoint %"class.WTF::StringImpl"* %577 to i64
  %598 = bitcast i8* %575 to i64*
  %599 = bitcast i8* %575 to %"class.WTF::StringImpl"**
  %600 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %599, align 8
  store i64 %597, i64* %598, align 8
  %601 = icmp eq %"class.WTF::StringImpl"* %600, null
  br i1 %601, label %615, label %602

602:                                              ; preds = %596
  %603 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %600, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %604 = load atomic i32, i32* %603 monotonic, align 4
  %605 = and i32 %604, 2
  %606 = icmp eq i32 %605, 0
  %607 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %600, i64 0, i32 0
  %608 = load i32, i32* %607, align 4
  br i1 %606, label %609, label %611

609:                                              ; preds = %602
  %610 = add i32 %608, -1
  store i32 %610, i32* %607, align 4
  br label %611

611:                                              ; preds = %609, %602
  %612 = phi i32 [ %610, %609 ], [ %608, %602 ]
  %613 = icmp eq i32 %612, 0
  br i1 %613, label %614, label %615

614:                                              ; preds = %611
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %600) #11
  br label %615

615:                                              ; preds = %596, %611, %614
  %616 = load %"class.payments::mojom::blink::PaymentShippingOption"*, %"class.payments::mojom::blink::PaymentShippingOption"** %557, align 8
  %617 = getelementptr inbounds i8, i8* %568, i64 16
  %618 = getelementptr inbounds %"class.payments::mojom::blink::PaymentShippingOption", %"class.payments::mojom::blink::PaymentShippingOption"* %616, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %619 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %618, align 8
  %620 = icmp eq %"class.WTF::StringImpl"* %619, null
  br i1 %620, label %638, label %621

621:                                              ; preds = %615
  %622 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %619, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %623 = load atomic i32, i32* %622 monotonic, align 4
  %624 = and i32 %623, 2
  %625 = icmp eq i32 %624, 0
  br i1 %625, label %626, label %638

626:                                              ; preds = %621
  %627 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %619, i64 0, i32 0
  %628 = load i32, i32* %627, align 4
  %629 = zext i32 %628 to i33
  %630 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %629, i33 1) #11
  %631 = extractvalue { i33, i1 } %630, 1
  %632 = extractvalue { i33, i1 } %630, 0
  %633 = icmp slt i33 %632, 0
  %634 = or i1 %631, %633
  br i1 %634, label %635, label %636, !prof !2

635:                                              ; preds = %626
  call void @llvm.trap() #11
  unreachable

636:                                              ; preds = %626
  %637 = trunc i33 %632 to i32
  store i32 %637, i32* %627, align 4
  br label %638

638:                                              ; preds = %636, %621, %615
  %639 = ptrtoint %"class.WTF::StringImpl"* %619 to i64
  %640 = bitcast i8* %617 to i64*
  %641 = bitcast i8* %617 to %"class.WTF::StringImpl"**
  %642 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %641, align 8
  store i64 %639, i64* %640, align 8
  %643 = icmp eq %"class.WTF::StringImpl"* %642, null
  br i1 %643, label %657, label %644

644:                                              ; preds = %638
  %645 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %642, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %646 = load atomic i32, i32* %645 monotonic, align 4
  %647 = and i32 %646, 2
  %648 = icmp eq i32 %647, 0
  %649 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %642, i64 0, i32 0
  %650 = load i32, i32* %649, align 4
  br i1 %648, label %651, label %653

651:                                              ; preds = %644
  %652 = add i32 %650, -1
  store i32 %652, i32* %649, align 4
  br label %653

653:                                              ; preds = %651, %644
  %654 = phi i32 [ %652, %651 ], [ %650, %644 ]
  %655 = icmp eq i32 %654, 0
  br i1 %655, label %656, label %657

656:                                              ; preds = %653
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %642) #11
  br label %657

657:                                              ; preds = %638, %653, %656
  call void @_ZN5blink21PaymentShippingOption9setAmountEPNS_21PaymentCurrencyAmountE(%"class.blink::PaymentShippingOption"* %562, %"class.blink::PaymentCurrencyAmount"* %569) #11
  %658 = load %"class.payments::mojom::blink::PaymentShippingOption"*, %"class.payments::mojom::blink::PaymentShippingOption"** %557, align 8
  %659 = getelementptr inbounds i8, i8* %561, i64 24
  %660 = getelementptr inbounds %"class.payments::mojom::blink::PaymentShippingOption", %"class.payments::mojom::blink::PaymentShippingOption"* %658, i64 0, i32 0, i32 0, i32 0
  %661 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %660, align 8
  %662 = icmp eq %"class.WTF::StringImpl"* %661, null
  br i1 %662, label %680, label %663

663:                                              ; preds = %657
  %664 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %661, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %665 = load atomic i32, i32* %664 monotonic, align 4
  %666 = and i32 %665, 2
  %667 = icmp eq i32 %666, 0
  br i1 %667, label %668, label %680

668:                                              ; preds = %663
  %669 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %661, i64 0, i32 0
  %670 = load i32, i32* %669, align 4
  %671 = zext i32 %670 to i33
  %672 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %671, i33 1) #11
  %673 = extractvalue { i33, i1 } %672, 1
  %674 = extractvalue { i33, i1 } %672, 0
  %675 = icmp slt i33 %674, 0
  %676 = or i1 %673, %675
  br i1 %676, label %677, label %678, !prof !2

677:                                              ; preds = %668
  call void @llvm.trap() #11
  unreachable

678:                                              ; preds = %668
  %679 = trunc i33 %674 to i32
  store i32 %679, i32* %669, align 4
  br label %680

680:                                              ; preds = %678, %663, %657
  %681 = ptrtoint %"class.WTF::StringImpl"* %661 to i64
  %682 = bitcast i8* %659 to i64*
  %683 = bitcast i8* %659 to %"class.WTF::StringImpl"**
  %684 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %683, align 8
  store i64 %681, i64* %682, align 8
  %685 = icmp eq %"class.WTF::StringImpl"* %684, null
  br i1 %685, label %699, label %686

686:                                              ; preds = %680
  %687 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %684, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %688 = load atomic i32, i32* %687 monotonic, align 4
  %689 = and i32 %688, 2
  %690 = icmp eq i32 %689, 0
  %691 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %684, i64 0, i32 0
  %692 = load i32, i32* %691, align 4
  br i1 %690, label %693, label %695

693:                                              ; preds = %686
  %694 = add i32 %692, -1
  store i32 %694, i32* %691, align 4
  br label %695

695:                                              ; preds = %693, %686
  %696 = phi i32 [ %694, %693 ], [ %692, %686 ]
  %697 = icmp eq i32 %696, 0
  br i1 %697, label %698, label %699

698:                                              ; preds = %695
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %684) #11
  br label %699

699:                                              ; preds = %680, %695, %698
  %700 = load %"class.payments::mojom::blink::PaymentShippingOption"*, %"class.payments::mojom::blink::PaymentShippingOption"** %557, align 8
  %701 = getelementptr inbounds i8, i8* %561, i64 32
  %702 = getelementptr inbounds %"class.payments::mojom::blink::PaymentShippingOption", %"class.payments::mojom::blink::PaymentShippingOption"* %700, i64 0, i32 1, i32 0, i32 0
  %703 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %702, align 8
  %704 = icmp eq %"class.WTF::StringImpl"* %703, null
  br i1 %704, label %722, label %705

705:                                              ; preds = %699
  %706 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %703, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %707 = load atomic i32, i32* %706 monotonic, align 4
  %708 = and i32 %707, 2
  %709 = icmp eq i32 %708, 0
  br i1 %709, label %710, label %722

710:                                              ; preds = %705
  %711 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %703, i64 0, i32 0
  %712 = load i32, i32* %711, align 4
  %713 = zext i32 %712 to i33
  %714 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %713, i33 1) #11
  %715 = extractvalue { i33, i1 } %714, 1
  %716 = extractvalue { i33, i1 } %714, 0
  %717 = icmp slt i33 %716, 0
  %718 = or i1 %715, %717
  br i1 %718, label %719, label %720, !prof !2

719:                                              ; preds = %710
  call void @llvm.trap() #11
  unreachable

720:                                              ; preds = %710
  %721 = trunc i33 %716 to i32
  store i32 %721, i32* %711, align 4
  br label %722

722:                                              ; preds = %720, %705, %699
  %723 = ptrtoint %"class.WTF::StringImpl"* %703 to i64
  %724 = bitcast i8* %701 to i64*
  %725 = bitcast i8* %701 to %"class.WTF::StringImpl"**
  %726 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %725, align 8
  store i64 %723, i64* %724, align 8
  %727 = icmp eq %"class.WTF::StringImpl"* %726, null
  br i1 %727, label %741, label %728

728:                                              ; preds = %722
  %729 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %726, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %730 = load atomic i32, i32* %729 monotonic, align 4
  %731 = and i32 %730, 2
  %732 = icmp eq i32 %731, 0
  %733 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %726, i64 0, i32 0
  %734 = load i32, i32* %733, align 4
  br i1 %732, label %735, label %737

735:                                              ; preds = %728
  %736 = add i32 %734, -1
  store i32 %736, i32* %733, align 4
  br label %737

737:                                              ; preds = %735, %728
  %738 = phi i32 [ %736, %735 ], [ %734, %728 ]
  %739 = icmp eq i32 %738, 0
  br i1 %739, label %740, label %741

740:                                              ; preds = %737
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %726) #11
  br label %741

741:                                              ; preds = %722, %737, %740
  %742 = load %"class.payments::mojom::blink::PaymentShippingOption"*, %"class.payments::mojom::blink::PaymentShippingOption"** %557, align 8
  %743 = getelementptr inbounds %"class.payments::mojom::blink::PaymentShippingOption", %"class.payments::mojom::blink::PaymentShippingOption"* %742, i64 0, i32 3
  %744 = load i8, i8* %743, align 8, !range !3
  %745 = getelementptr inbounds i8, i8* %561, i64 40
  store i8 %744, i8* %745, align 8
  %746 = getelementptr inbounds i8, i8* %561, i64 8
  store i8 1, i8* %746, align 8
  %747 = load i32, i32* %543, align 4
  %748 = load i32, i32* %542, align 8
  %749 = icmp eq i32 %747, %748
  br i1 %749, label %750, label %759, !prof !2

750:                                              ; preds = %741
  %751 = add i32 %747, 1
  %752 = lshr i32 %747, 2
  %753 = add i32 %751, %752
  %754 = icmp ugt i32 %753, 4
  %755 = select i1 %754, i32 %753, i32 4
  %756 = icmp ugt i32 %755, %751
  %757 = select i1 %756, i32 %755, i32 %751
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21PaymentShippingOptionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.27"* nonnull %552, i32 %757) #11
  %758 = load i32, i32* %543, align 4
  br label %759

759:                                              ; preds = %750, %741
  %760 = phi i32 [ %758, %750 ], [ %747, %741 ]
  %761 = load %"class.blink::Member.30"*, %"class.blink::Member.30"** %541, align 8
  %762 = zext i32 %760 to i64
  %763 = getelementptr inbounds %"class.blink::Member.30", %"class.blink::Member.30"* %761, i64 %762
  %764 = bitcast %"class.blink::Member.30"* %763 to i64*
  store atomic i64 %567, i64* %764 monotonic, align 8
  %765 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %766 = icmp eq i32 %765, 0
  br i1 %766, label %769, label %767

767:                                              ; preds = %759
  %768 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %561) #11
  br label %769

769:                                              ; preds = %759, %767
  %770 = load i32, i32* %543, align 4
  %771 = add i32 %770, 1
  store i32 %771, i32* %543, align 4
  br label %772

772:                                              ; preds = %555, %769
  %773 = getelementptr inbounds %"class.mojo::StructPtr.1447", %"class.mojo::StructPtr.1447"* %556, i64 1
  %774 = icmp eq %"class.mojo::StructPtr.1447"* %773, %549
  br i1 %774, label %553, label %555

775:                                              ; preds = %534, %553
  %776 = phi %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* [ %535, %534 ], [ %554, %553 ]
  %777 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %776, i64 0, i32 4, i32 0, i32 0
  %778 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %777, align 8
  %779 = icmp eq %"class.WTF::StringImpl"* %778, null
  br i1 %779, label %844, label %780

780:                                              ; preds = %775
  %781 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %778, i64 0, i32 1
  %782 = load i32, i32* %781, align 4
  %783 = icmp eq i32 %782, 0
  br i1 %783, label %844, label %784

784:                                              ; preds = %780
  %785 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %172, align 8
  %786 = load %"class.v8::Context"*, %"class.v8::Context"** %175, align 8
  %787 = icmp eq %"class.v8::Context"* %786, null
  br i1 %787, label %795, label %788

788:                                              ; preds = %784
  %789 = bitcast %"class.v8::Isolate"* %785 to %"class.v8::internal::Isolate"*
  %790 = bitcast %"class.v8::Context"* %786 to i64*
  %791 = load i64, i64* %790, align 8
  %792 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %789, i64 %791) #11
  %793 = bitcast i64* %792 to %"class.v8::Context"*
  %794 = load %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %23, align 8
  br label %795

795:                                              ; preds = %784, %788
  %796 = phi %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* [ %794, %788 ], [ %776, %784 ]
  %797 = phi %"class.v8::Context"* [ %793, %788 ], [ null, %784 ]
  %798 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %796, i64 0, i32 4
  %799 = call %"class.v8::Value"* @_ZN5blink14FromJSONStringEPN2v87IsolateENS0_5LocalINS0_7ContextEEERKN3WTF6StringERNS_14ExceptionStateE(%"class.v8::Isolate"* %785, %"class.v8::Context"* %797, %"class.WTF::String"* dereferenceable(8) %798, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %6) #11
  %800 = load i32, i32* %198, align 8
  %801 = icmp eq i32 %800, 0
  br i1 %801, label %830, label %802

802:                                              ; preds = %795
  %803 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %13, align 8
  %804 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 5
  %805 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #11
  %806 = bitcast i8* %805 to %"class.blink::DOMException"*
  %807 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %807) #11
  %808 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %808, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %806, i32 12, %"class.WTF::String"* dereferenceable(8) %804, %"class.WTF::String"* nonnull dereferenceable(8) %4) #11
  %809 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %808, align 8
  %810 = icmp eq %"class.WTF::StringImpl"* %809, null
  br i1 %810, label %824, label %811

811:                                              ; preds = %802
  %812 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %809, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %813 = load atomic i32, i32* %812 monotonic, align 4
  %814 = and i32 %813, 2
  %815 = icmp eq i32 %814, 0
  %816 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %809, i64 0, i32 0
  %817 = load i32, i32* %816, align 4
  br i1 %815, label %818, label %820

818:                                              ; preds = %811
  %819 = add i32 %817, -1
  store i32 %819, i32* %816, align 4
  br label %820

820:                                              ; preds = %818, %811
  %821 = phi i32 [ %819, %818 ], [ %817, %811 ]
  %822 = icmp eq i32 %821, 0
  br i1 %822, label %823, label %824

823:                                              ; preds = %820
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %809) #11
  br label %824

824:                                              ; preds = %802, %820, %823
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %807) #11
  %825 = getelementptr inbounds i8, i8* %805, i64 -4
  %826 = bitcast i8* %825 to i16*
  %827 = load atomic i16, i16* %826 monotonic, align 2
  %828 = or i16 %827, 1
  store atomic i16 %828, i16* %826 release, align 2
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %803, %"class.blink::DOMException"* %806, i32 2) #11
  %829 = bitcast %"class.blink::MemberBase.36"* %12 to i64*
  store atomic i64 0, i64* %829 monotonic, align 8
  br label %1326

830:                                              ; preds = %795
  %831 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %172, align 8
  %832 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %11, i64 0, i32 0
  store %"class.v8::Isolate"* %831, %"class.v8::Isolate"** %832, align 8
  %833 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %11, i64 0, i32 1
  call void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"* %833, %"class.v8::Isolate"* %831, %"class.v8::Value"* %799) #11
  call void @_ZN5blink27PaymentRequestDetailsUpdate22setPaymentMethodErrorsENS_11ScriptValueE(%"class.blink::PaymentRequestDetailsUpdate"* %18, %"class.blink::ScriptValue"* nonnull %11) #11
  %834 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %11, i64 0, i32 1, i32 1, i32 0
  %835 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %834, align 8
  %836 = icmp eq %"class.blink::DOMWrapperWorld"* %835, null
  br i1 %836, label %844, label %837

837:                                              ; preds = %830
  %838 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %835, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %838) #11
  %839 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %835, i64 0, i32 0, i32 0, i32 0, i32 0
  %840 = load i32, i32* %839, align 4
  %841 = icmp eq i32 %840, 0
  br i1 %841, label %842, label %844

842:                                              ; preds = %837
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %835) #11
  %843 = bitcast %"class.blink::DOMWrapperWorld"* %835 to i8*
  call void @free(i8* %843) #11
  br label %844

844:                                              ; preds = %775, %842, %837, %830, %780
  %845 = load %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %23, align 8
  %846 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %845, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %847 = load %"class.payments::mojom::blink::AddressErrors"*, %"class.payments::mojom::blink::AddressErrors"** %846, align 8
  %848 = icmp eq %"class.payments::mojom::blink::AddressErrors"* %847, null
  br i1 %848, label %1296, label %849

849:                                              ; preds = %844
  %850 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 88) #11
  %851 = bitcast i8* %850 to %"class.blink::AddressErrors"*
  call void @_ZN5blink13AddressErrorsC1Ev(%"class.blink::AddressErrors"* %851) #11
  %852 = getelementptr inbounds i8, i8* %850, i64 -4
  %853 = bitcast i8* %852 to i16*
  %854 = load atomic i16, i16* %853 monotonic, align 2
  %855 = or i16 %854, 1
  store atomic i16 %855, i16* %853 release, align 2
  %856 = load %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %23, align 8
  %857 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %856, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %858 = load %"class.payments::mojom::blink::AddressErrors"*, %"class.payments::mojom::blink::AddressErrors"** %857, align 8
  %859 = getelementptr inbounds i8, i8* %850, i64 8
  %860 = getelementptr inbounds %"class.payments::mojom::blink::AddressErrors", %"class.payments::mojom::blink::AddressErrors"* %858, i64 0, i32 0, i32 0, i32 0
  %861 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %860, align 8
  %862 = icmp eq %"class.WTF::StringImpl"* %861, null
  br i1 %862, label %880, label %863

863:                                              ; preds = %849
  %864 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %861, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %865 = load atomic i32, i32* %864 monotonic, align 4
  %866 = and i32 %865, 2
  %867 = icmp eq i32 %866, 0
  br i1 %867, label %868, label %880

868:                                              ; preds = %863
  %869 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %861, i64 0, i32 0
  %870 = load i32, i32* %869, align 4
  %871 = zext i32 %870 to i33
  %872 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %871, i33 1) #11
  %873 = extractvalue { i33, i1 } %872, 1
  %874 = extractvalue { i33, i1 } %872, 0
  %875 = icmp slt i33 %874, 0
  %876 = or i1 %873, %875
  br i1 %876, label %877, label %878, !prof !2

877:                                              ; preds = %868
  call void @llvm.trap() #11
  unreachable

878:                                              ; preds = %868
  %879 = trunc i33 %874 to i32
  store i32 %879, i32* %869, align 4
  br label %880

880:                                              ; preds = %878, %863, %849
  %881 = ptrtoint %"class.WTF::StringImpl"* %861 to i64
  %882 = bitcast i8* %859 to i64*
  %883 = bitcast i8* %859 to %"class.WTF::StringImpl"**
  %884 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %883, align 8
  store i64 %881, i64* %882, align 8
  %885 = icmp eq %"class.WTF::StringImpl"* %884, null
  br i1 %885, label %899, label %886

886:                                              ; preds = %880
  %887 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %884, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %888 = load atomic i32, i32* %887 monotonic, align 4
  %889 = and i32 %888, 2
  %890 = icmp eq i32 %889, 0
  %891 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %884, i64 0, i32 0
  %892 = load i32, i32* %891, align 4
  br i1 %890, label %893, label %895

893:                                              ; preds = %886
  %894 = add i32 %892, -1
  store i32 %894, i32* %891, align 4
  br label %895

895:                                              ; preds = %893, %886
  %896 = phi i32 [ %894, %893 ], [ %892, %886 ]
  %897 = icmp eq i32 %896, 0
  br i1 %897, label %898, label %899

898:                                              ; preds = %895
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %884) #11
  br label %899

899:                                              ; preds = %880, %895, %898
  %900 = load %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %23, align 8
  %901 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %900, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %902 = load %"class.payments::mojom::blink::AddressErrors"*, %"class.payments::mojom::blink::AddressErrors"** %901, align 8
  %903 = getelementptr inbounds i8, i8* %850, i64 16
  %904 = getelementptr inbounds %"class.payments::mojom::blink::AddressErrors", %"class.payments::mojom::blink::AddressErrors"* %902, i64 0, i32 1, i32 0, i32 0
  %905 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %904, align 8
  %906 = icmp eq %"class.WTF::StringImpl"* %905, null
  br i1 %906, label %924, label %907

907:                                              ; preds = %899
  %908 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %905, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %909 = load atomic i32, i32* %908 monotonic, align 4
  %910 = and i32 %909, 2
  %911 = icmp eq i32 %910, 0
  br i1 %911, label %912, label %924

912:                                              ; preds = %907
  %913 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %905, i64 0, i32 0
  %914 = load i32, i32* %913, align 4
  %915 = zext i32 %914 to i33
  %916 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %915, i33 1) #11
  %917 = extractvalue { i33, i1 } %916, 1
  %918 = extractvalue { i33, i1 } %916, 0
  %919 = icmp slt i33 %918, 0
  %920 = or i1 %917, %919
  br i1 %920, label %921, label %922, !prof !2

921:                                              ; preds = %912
  call void @llvm.trap() #11
  unreachable

922:                                              ; preds = %912
  %923 = trunc i33 %918 to i32
  store i32 %923, i32* %913, align 4
  br label %924

924:                                              ; preds = %922, %907, %899
  %925 = ptrtoint %"class.WTF::StringImpl"* %905 to i64
  %926 = bitcast i8* %903 to i64*
  %927 = bitcast i8* %903 to %"class.WTF::StringImpl"**
  %928 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %927, align 8
  store i64 %925, i64* %926, align 8
  %929 = icmp eq %"class.WTF::StringImpl"* %928, null
  br i1 %929, label %943, label %930

930:                                              ; preds = %924
  %931 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %928, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %932 = load atomic i32, i32* %931 monotonic, align 4
  %933 = and i32 %932, 2
  %934 = icmp eq i32 %933, 0
  %935 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %928, i64 0, i32 0
  %936 = load i32, i32* %935, align 4
  br i1 %934, label %937, label %939

937:                                              ; preds = %930
  %938 = add i32 %936, -1
  store i32 %938, i32* %935, align 4
  br label %939

939:                                              ; preds = %937, %930
  %940 = phi i32 [ %938, %937 ], [ %936, %930 ]
  %941 = icmp eq i32 %940, 0
  br i1 %941, label %942, label %943

942:                                              ; preds = %939
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %928) #11
  br label %943

943:                                              ; preds = %924, %939, %942
  %944 = load %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %23, align 8
  %945 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %944, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %946 = load %"class.payments::mojom::blink::AddressErrors"*, %"class.payments::mojom::blink::AddressErrors"** %945, align 8
  %947 = getelementptr inbounds i8, i8* %850, i64 24
  %948 = getelementptr inbounds %"class.payments::mojom::blink::AddressErrors", %"class.payments::mojom::blink::AddressErrors"* %946, i64 0, i32 2, i32 0, i32 0
  %949 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %948, align 8
  %950 = icmp eq %"class.WTF::StringImpl"* %949, null
  br i1 %950, label %968, label %951

951:                                              ; preds = %943
  %952 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %949, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %953 = load atomic i32, i32* %952 monotonic, align 4
  %954 = and i32 %953, 2
  %955 = icmp eq i32 %954, 0
  br i1 %955, label %956, label %968

956:                                              ; preds = %951
  %957 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %949, i64 0, i32 0
  %958 = load i32, i32* %957, align 4
  %959 = zext i32 %958 to i33
  %960 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %959, i33 1) #11
  %961 = extractvalue { i33, i1 } %960, 1
  %962 = extractvalue { i33, i1 } %960, 0
  %963 = icmp slt i33 %962, 0
  %964 = or i1 %961, %963
  br i1 %964, label %965, label %966, !prof !2

965:                                              ; preds = %956
  call void @llvm.trap() #11
  unreachable

966:                                              ; preds = %956
  %967 = trunc i33 %962 to i32
  store i32 %967, i32* %957, align 4
  br label %968

968:                                              ; preds = %966, %951, %943
  %969 = ptrtoint %"class.WTF::StringImpl"* %949 to i64
  %970 = bitcast i8* %947 to i64*
  %971 = bitcast i8* %947 to %"class.WTF::StringImpl"**
  %972 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %971, align 8
  store i64 %969, i64* %970, align 8
  %973 = icmp eq %"class.WTF::StringImpl"* %972, null
  br i1 %973, label %987, label %974

974:                                              ; preds = %968
  %975 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %972, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %976 = load atomic i32, i32* %975 monotonic, align 4
  %977 = and i32 %976, 2
  %978 = icmp eq i32 %977, 0
  %979 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %972, i64 0, i32 0
  %980 = load i32, i32* %979, align 4
  br i1 %978, label %981, label %983

981:                                              ; preds = %974
  %982 = add i32 %980, -1
  store i32 %982, i32* %979, align 4
  br label %983

983:                                              ; preds = %981, %974
  %984 = phi i32 [ %982, %981 ], [ %980, %974 ]
  %985 = icmp eq i32 %984, 0
  br i1 %985, label %986, label %987

986:                                              ; preds = %983
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %972) #11
  br label %987

987:                                              ; preds = %968, %983, %986
  %988 = load %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %23, align 8
  %989 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %988, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %990 = load %"class.payments::mojom::blink::AddressErrors"*, %"class.payments::mojom::blink::AddressErrors"** %989, align 8
  %991 = getelementptr inbounds i8, i8* %850, i64 32
  %992 = getelementptr inbounds %"class.payments::mojom::blink::AddressErrors", %"class.payments::mojom::blink::AddressErrors"* %990, i64 0, i32 3, i32 0, i32 0
  %993 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %992, align 8
  %994 = icmp eq %"class.WTF::StringImpl"* %993, null
  br i1 %994, label %1012, label %995

995:                                              ; preds = %987
  %996 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %993, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %997 = load atomic i32, i32* %996 monotonic, align 4
  %998 = and i32 %997, 2
  %999 = icmp eq i32 %998, 0
  br i1 %999, label %1000, label %1012

1000:                                             ; preds = %995
  %1001 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %993, i64 0, i32 0
  %1002 = load i32, i32* %1001, align 4
  %1003 = zext i32 %1002 to i33
  %1004 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1003, i33 1) #11
  %1005 = extractvalue { i33, i1 } %1004, 1
  %1006 = extractvalue { i33, i1 } %1004, 0
  %1007 = icmp slt i33 %1006, 0
  %1008 = or i1 %1005, %1007
  br i1 %1008, label %1009, label %1010, !prof !2

1009:                                             ; preds = %1000
  call void @llvm.trap() #11
  unreachable

1010:                                             ; preds = %1000
  %1011 = trunc i33 %1006 to i32
  store i32 %1011, i32* %1001, align 4
  br label %1012

1012:                                             ; preds = %1010, %995, %987
  %1013 = ptrtoint %"class.WTF::StringImpl"* %993 to i64
  %1014 = bitcast i8* %991 to i64*
  %1015 = bitcast i8* %991 to %"class.WTF::StringImpl"**
  %1016 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1015, align 8
  store i64 %1013, i64* %1014, align 8
  %1017 = icmp eq %"class.WTF::StringImpl"* %1016, null
  br i1 %1017, label %1031, label %1018

1018:                                             ; preds = %1012
  %1019 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1016, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1020 = load atomic i32, i32* %1019 monotonic, align 4
  %1021 = and i32 %1020, 2
  %1022 = icmp eq i32 %1021, 0
  %1023 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1016, i64 0, i32 0
  %1024 = load i32, i32* %1023, align 4
  br i1 %1022, label %1025, label %1027

1025:                                             ; preds = %1018
  %1026 = add i32 %1024, -1
  store i32 %1026, i32* %1023, align 4
  br label %1027

1027:                                             ; preds = %1025, %1018
  %1028 = phi i32 [ %1026, %1025 ], [ %1024, %1018 ]
  %1029 = icmp eq i32 %1028, 0
  br i1 %1029, label %1030, label %1031

1030:                                             ; preds = %1027
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1016) #11
  br label %1031

1031:                                             ; preds = %1012, %1027, %1030
  %1032 = load %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %23, align 8
  %1033 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %1032, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %1034 = load %"class.payments::mojom::blink::AddressErrors"*, %"class.payments::mojom::blink::AddressErrors"** %1033, align 8
  %1035 = getelementptr inbounds i8, i8* %850, i64 40
  %1036 = getelementptr inbounds %"class.payments::mojom::blink::AddressErrors", %"class.payments::mojom::blink::AddressErrors"* %1034, i64 0, i32 4, i32 0, i32 0
  %1037 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1036, align 8
  %1038 = icmp eq %"class.WTF::StringImpl"* %1037, null
  br i1 %1038, label %1056, label %1039

1039:                                             ; preds = %1031
  %1040 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1037, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1041 = load atomic i32, i32* %1040 monotonic, align 4
  %1042 = and i32 %1041, 2
  %1043 = icmp eq i32 %1042, 0
  br i1 %1043, label %1044, label %1056

1044:                                             ; preds = %1039
  %1045 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1037, i64 0, i32 0
  %1046 = load i32, i32* %1045, align 4
  %1047 = zext i32 %1046 to i33
  %1048 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1047, i33 1) #11
  %1049 = extractvalue { i33, i1 } %1048, 1
  %1050 = extractvalue { i33, i1 } %1048, 0
  %1051 = icmp slt i33 %1050, 0
  %1052 = or i1 %1049, %1051
  br i1 %1052, label %1053, label %1054, !prof !2

1053:                                             ; preds = %1044
  call void @llvm.trap() #11
  unreachable

1054:                                             ; preds = %1044
  %1055 = trunc i33 %1050 to i32
  store i32 %1055, i32* %1045, align 4
  br label %1056

1056:                                             ; preds = %1054, %1039, %1031
  %1057 = ptrtoint %"class.WTF::StringImpl"* %1037 to i64
  %1058 = bitcast i8* %1035 to i64*
  %1059 = bitcast i8* %1035 to %"class.WTF::StringImpl"**
  %1060 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1059, align 8
  store i64 %1057, i64* %1058, align 8
  %1061 = icmp eq %"class.WTF::StringImpl"* %1060, null
  br i1 %1061, label %1075, label %1062

1062:                                             ; preds = %1056
  %1063 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1060, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1064 = load atomic i32, i32* %1063 monotonic, align 4
  %1065 = and i32 %1064, 2
  %1066 = icmp eq i32 %1065, 0
  %1067 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1060, i64 0, i32 0
  %1068 = load i32, i32* %1067, align 4
  br i1 %1066, label %1069, label %1071

1069:                                             ; preds = %1062
  %1070 = add i32 %1068, -1
  store i32 %1070, i32* %1067, align 4
  br label %1071

1071:                                             ; preds = %1069, %1062
  %1072 = phi i32 [ %1070, %1069 ], [ %1068, %1062 ]
  %1073 = icmp eq i32 %1072, 0
  br i1 %1073, label %1074, label %1075

1074:                                             ; preds = %1071
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1060) #11
  br label %1075

1075:                                             ; preds = %1056, %1071, %1074
  %1076 = load %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %23, align 8
  %1077 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %1076, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %1078 = load %"class.payments::mojom::blink::AddressErrors"*, %"class.payments::mojom::blink::AddressErrors"** %1077, align 8
  %1079 = getelementptr inbounds i8, i8* %850, i64 48
  %1080 = getelementptr inbounds %"class.payments::mojom::blink::AddressErrors", %"class.payments::mojom::blink::AddressErrors"* %1078, i64 0, i32 5, i32 0, i32 0
  %1081 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1080, align 8
  %1082 = icmp eq %"class.WTF::StringImpl"* %1081, null
  br i1 %1082, label %1100, label %1083

1083:                                             ; preds = %1075
  %1084 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1081, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1085 = load atomic i32, i32* %1084 monotonic, align 4
  %1086 = and i32 %1085, 2
  %1087 = icmp eq i32 %1086, 0
  br i1 %1087, label %1088, label %1100

1088:                                             ; preds = %1083
  %1089 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1081, i64 0, i32 0
  %1090 = load i32, i32* %1089, align 4
  %1091 = zext i32 %1090 to i33
  %1092 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1091, i33 1) #11
  %1093 = extractvalue { i33, i1 } %1092, 1
  %1094 = extractvalue { i33, i1 } %1092, 0
  %1095 = icmp slt i33 %1094, 0
  %1096 = or i1 %1093, %1095
  br i1 %1096, label %1097, label %1098, !prof !2

1097:                                             ; preds = %1088
  call void @llvm.trap() #11
  unreachable

1098:                                             ; preds = %1088
  %1099 = trunc i33 %1094 to i32
  store i32 %1099, i32* %1089, align 4
  br label %1100

1100:                                             ; preds = %1098, %1083, %1075
  %1101 = ptrtoint %"class.WTF::StringImpl"* %1081 to i64
  %1102 = bitcast i8* %1079 to i64*
  %1103 = bitcast i8* %1079 to %"class.WTF::StringImpl"**
  %1104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1103, align 8
  store i64 %1101, i64* %1102, align 8
  %1105 = icmp eq %"class.WTF::StringImpl"* %1104, null
  br i1 %1105, label %1119, label %1106

1106:                                             ; preds = %1100
  %1107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1108 = load atomic i32, i32* %1107 monotonic, align 4
  %1109 = and i32 %1108, 2
  %1110 = icmp eq i32 %1109, 0
  %1111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1104, i64 0, i32 0
  %1112 = load i32, i32* %1111, align 4
  br i1 %1110, label %1113, label %1115

1113:                                             ; preds = %1106
  %1114 = add i32 %1112, -1
  store i32 %1114, i32* %1111, align 4
  br label %1115

1115:                                             ; preds = %1113, %1106
  %1116 = phi i32 [ %1114, %1113 ], [ %1112, %1106 ]
  %1117 = icmp eq i32 %1116, 0
  br i1 %1117, label %1118, label %1119

1118:                                             ; preds = %1115
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1104) #11
  br label %1119

1119:                                             ; preds = %1100, %1115, %1118
  %1120 = load %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %23, align 8
  %1121 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %1120, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %1122 = load %"class.payments::mojom::blink::AddressErrors"*, %"class.payments::mojom::blink::AddressErrors"** %1121, align 8
  %1123 = getelementptr inbounds i8, i8* %850, i64 56
  %1124 = getelementptr inbounds %"class.payments::mojom::blink::AddressErrors", %"class.payments::mojom::blink::AddressErrors"* %1122, i64 0, i32 6, i32 0, i32 0
  %1125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1124, align 8
  %1126 = icmp eq %"class.WTF::StringImpl"* %1125, null
  br i1 %1126, label %1144, label %1127

1127:                                             ; preds = %1119
  %1128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1129 = load atomic i32, i32* %1128 monotonic, align 4
  %1130 = and i32 %1129, 2
  %1131 = icmp eq i32 %1130, 0
  br i1 %1131, label %1132, label %1144

1132:                                             ; preds = %1127
  %1133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1125, i64 0, i32 0
  %1134 = load i32, i32* %1133, align 4
  %1135 = zext i32 %1134 to i33
  %1136 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1135, i33 1) #11
  %1137 = extractvalue { i33, i1 } %1136, 1
  %1138 = extractvalue { i33, i1 } %1136, 0
  %1139 = icmp slt i33 %1138, 0
  %1140 = or i1 %1137, %1139
  br i1 %1140, label %1141, label %1142, !prof !2

1141:                                             ; preds = %1132
  call void @llvm.trap() #11
  unreachable

1142:                                             ; preds = %1132
  %1143 = trunc i33 %1138 to i32
  store i32 %1143, i32* %1133, align 4
  br label %1144

1144:                                             ; preds = %1142, %1127, %1119
  %1145 = ptrtoint %"class.WTF::StringImpl"* %1125 to i64
  %1146 = bitcast i8* %1123 to i64*
  %1147 = bitcast i8* %1123 to %"class.WTF::StringImpl"**
  %1148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1147, align 8
  store i64 %1145, i64* %1146, align 8
  %1149 = icmp eq %"class.WTF::StringImpl"* %1148, null
  br i1 %1149, label %1163, label %1150

1150:                                             ; preds = %1144
  %1151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1152 = load atomic i32, i32* %1151 monotonic, align 4
  %1153 = and i32 %1152, 2
  %1154 = icmp eq i32 %1153, 0
  %1155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1148, i64 0, i32 0
  %1156 = load i32, i32* %1155, align 4
  br i1 %1154, label %1157, label %1159

1157:                                             ; preds = %1150
  %1158 = add i32 %1156, -1
  store i32 %1158, i32* %1155, align 4
  br label %1159

1159:                                             ; preds = %1157, %1150
  %1160 = phi i32 [ %1158, %1157 ], [ %1156, %1150 ]
  %1161 = icmp eq i32 %1160, 0
  br i1 %1161, label %1162, label %1163

1162:                                             ; preds = %1159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1148) #11
  br label %1163

1163:                                             ; preds = %1144, %1159, %1162
  %1164 = load %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %23, align 8
  %1165 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %1164, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %1166 = load %"class.payments::mojom::blink::AddressErrors"*, %"class.payments::mojom::blink::AddressErrors"** %1165, align 8
  %1167 = getelementptr inbounds i8, i8* %850, i64 64
  %1168 = getelementptr inbounds %"class.payments::mojom::blink::AddressErrors", %"class.payments::mojom::blink::AddressErrors"* %1166, i64 0, i32 7, i32 0, i32 0
  %1169 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1168, align 8
  %1170 = icmp eq %"class.WTF::StringImpl"* %1169, null
  br i1 %1170, label %1188, label %1171

1171:                                             ; preds = %1163
  %1172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1169, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1173 = load atomic i32, i32* %1172 monotonic, align 4
  %1174 = and i32 %1173, 2
  %1175 = icmp eq i32 %1174, 0
  br i1 %1175, label %1176, label %1188

1176:                                             ; preds = %1171
  %1177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1169, i64 0, i32 0
  %1178 = load i32, i32* %1177, align 4
  %1179 = zext i32 %1178 to i33
  %1180 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1179, i33 1) #11
  %1181 = extractvalue { i33, i1 } %1180, 1
  %1182 = extractvalue { i33, i1 } %1180, 0
  %1183 = icmp slt i33 %1182, 0
  %1184 = or i1 %1181, %1183
  br i1 %1184, label %1185, label %1186, !prof !2

1185:                                             ; preds = %1176
  call void @llvm.trap() #11
  unreachable

1186:                                             ; preds = %1176
  %1187 = trunc i33 %1182 to i32
  store i32 %1187, i32* %1177, align 4
  br label %1188

1188:                                             ; preds = %1186, %1171, %1163
  %1189 = ptrtoint %"class.WTF::StringImpl"* %1169 to i64
  %1190 = bitcast i8* %1167 to i64*
  %1191 = bitcast i8* %1167 to %"class.WTF::StringImpl"**
  %1192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1191, align 8
  store i64 %1189, i64* %1190, align 8
  %1193 = icmp eq %"class.WTF::StringImpl"* %1192, null
  br i1 %1193, label %1207, label %1194

1194:                                             ; preds = %1188
  %1195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1196 = load atomic i32, i32* %1195 monotonic, align 4
  %1197 = and i32 %1196, 2
  %1198 = icmp eq i32 %1197, 0
  %1199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1192, i64 0, i32 0
  %1200 = load i32, i32* %1199, align 4
  br i1 %1198, label %1201, label %1203

1201:                                             ; preds = %1194
  %1202 = add i32 %1200, -1
  store i32 %1202, i32* %1199, align 4
  br label %1203

1203:                                             ; preds = %1201, %1194
  %1204 = phi i32 [ %1202, %1201 ], [ %1200, %1194 ]
  %1205 = icmp eq i32 %1204, 0
  br i1 %1205, label %1206, label %1207

1206:                                             ; preds = %1203
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1192) #11
  br label %1207

1207:                                             ; preds = %1188, %1203, %1206
  %1208 = load %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %23, align 8
  %1209 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %1208, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %1210 = load %"class.payments::mojom::blink::AddressErrors"*, %"class.payments::mojom::blink::AddressErrors"** %1209, align 8
  %1211 = getelementptr inbounds i8, i8* %850, i64 72
  %1212 = getelementptr inbounds %"class.payments::mojom::blink::AddressErrors", %"class.payments::mojom::blink::AddressErrors"* %1210, i64 0, i32 8, i32 0, i32 0
  %1213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1212, align 8
  %1214 = icmp eq %"class.WTF::StringImpl"* %1213, null
  br i1 %1214, label %1232, label %1215

1215:                                             ; preds = %1207
  %1216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1217 = load atomic i32, i32* %1216 monotonic, align 4
  %1218 = and i32 %1217, 2
  %1219 = icmp eq i32 %1218, 0
  br i1 %1219, label %1220, label %1232

1220:                                             ; preds = %1215
  %1221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1213, i64 0, i32 0
  %1222 = load i32, i32* %1221, align 4
  %1223 = zext i32 %1222 to i33
  %1224 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1223, i33 1) #11
  %1225 = extractvalue { i33, i1 } %1224, 1
  %1226 = extractvalue { i33, i1 } %1224, 0
  %1227 = icmp slt i33 %1226, 0
  %1228 = or i1 %1225, %1227
  br i1 %1228, label %1229, label %1230, !prof !2

1229:                                             ; preds = %1220
  call void @llvm.trap() #11
  unreachable

1230:                                             ; preds = %1220
  %1231 = trunc i33 %1226 to i32
  store i32 %1231, i32* %1221, align 4
  br label %1232

1232:                                             ; preds = %1230, %1215, %1207
  %1233 = ptrtoint %"class.WTF::StringImpl"* %1213 to i64
  %1234 = bitcast i8* %1211 to i64*
  %1235 = bitcast i8* %1211 to %"class.WTF::StringImpl"**
  %1236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1235, align 8
  store i64 %1233, i64* %1234, align 8
  %1237 = icmp eq %"class.WTF::StringImpl"* %1236, null
  br i1 %1237, label %1251, label %1238

1238:                                             ; preds = %1232
  %1239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1240 = load atomic i32, i32* %1239 monotonic, align 4
  %1241 = and i32 %1240, 2
  %1242 = icmp eq i32 %1241, 0
  %1243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1236, i64 0, i32 0
  %1244 = load i32, i32* %1243, align 4
  br i1 %1242, label %1245, label %1247

1245:                                             ; preds = %1238
  %1246 = add i32 %1244, -1
  store i32 %1246, i32* %1243, align 4
  br label %1247

1247:                                             ; preds = %1245, %1238
  %1248 = phi i32 [ %1246, %1245 ], [ %1244, %1238 ]
  %1249 = icmp eq i32 %1248, 0
  br i1 %1249, label %1250, label %1251

1250:                                             ; preds = %1247
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1236) #11
  br label %1251

1251:                                             ; preds = %1232, %1247, %1250
  %1252 = load %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %23, align 8
  %1253 = getelementptr inbounds %"class.payments::mojom::blink::PaymentRequestDetailsUpdate", %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %1252, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %1254 = load %"class.payments::mojom::blink::AddressErrors"*, %"class.payments::mojom::blink::AddressErrors"** %1253, align 8
  %1255 = getelementptr inbounds i8, i8* %850, i64 80
  %1256 = getelementptr inbounds %"class.payments::mojom::blink::AddressErrors", %"class.payments::mojom::blink::AddressErrors"* %1254, i64 0, i32 9, i32 0, i32 0
  %1257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1256, align 8
  %1258 = icmp eq %"class.WTF::StringImpl"* %1257, null
  br i1 %1258, label %1276, label %1259

1259:                                             ; preds = %1251
  %1260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1257, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1261 = load atomic i32, i32* %1260 monotonic, align 4
  %1262 = and i32 %1261, 2
  %1263 = icmp eq i32 %1262, 0
  br i1 %1263, label %1264, label %1276

1264:                                             ; preds = %1259
  %1265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1257, i64 0, i32 0
  %1266 = load i32, i32* %1265, align 4
  %1267 = zext i32 %1266 to i33
  %1268 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1267, i33 1) #11
  %1269 = extractvalue { i33, i1 } %1268, 1
  %1270 = extractvalue { i33, i1 } %1268, 0
  %1271 = icmp slt i33 %1270, 0
  %1272 = or i1 %1269, %1271
  br i1 %1272, label %1273, label %1274, !prof !2

1273:                                             ; preds = %1264
  call void @llvm.trap() #11
  unreachable

1274:                                             ; preds = %1264
  %1275 = trunc i33 %1270 to i32
  store i32 %1275, i32* %1265, align 4
  br label %1276

1276:                                             ; preds = %1274, %1259, %1251
  %1277 = ptrtoint %"class.WTF::StringImpl"* %1257 to i64
  %1278 = bitcast i8* %1255 to i64*
  %1279 = bitcast i8* %1255 to %"class.WTF::StringImpl"**
  %1280 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1279, align 8
  store i64 %1277, i64* %1278, align 8
  %1281 = icmp eq %"class.WTF::StringImpl"* %1280, null
  br i1 %1281, label %1295, label %1282

1282:                                             ; preds = %1276
  %1283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1280, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1284 = load atomic i32, i32* %1283 monotonic, align 4
  %1285 = and i32 %1284, 2
  %1286 = icmp eq i32 %1285, 0
  %1287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1280, i64 0, i32 0
  %1288 = load i32, i32* %1287, align 4
  br i1 %1286, label %1289, label %1291

1289:                                             ; preds = %1282
  %1290 = add i32 %1288, -1
  store i32 %1290, i32* %1287, align 4
  br label %1291

1291:                                             ; preds = %1289, %1282
  %1292 = phi i32 [ %1290, %1289 ], [ %1288, %1282 ]
  %1293 = icmp eq i32 %1292, 0
  br i1 %1293, label %1294, label %1295

1294:                                             ; preds = %1291
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1280) #11
  br label %1295

1295:                                             ; preds = %1276, %1291, %1294
  call void @_ZN5blink27PaymentRequestDetailsUpdate24setShippingAddressErrorsEPNS_13AddressErrorsE(%"class.blink::PaymentRequestDetailsUpdate"* %18, %"class.blink::AddressErrors"* %851) #11
  br label %1296

1296:                                             ; preds = %844, %1295
  %1297 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %13, align 8
  %1298 = getelementptr inbounds i8, i8* %17, i64 16
  %1299 = bitcast i8* %1298 to %"class.WTF::StringImpl"**
  %1300 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1299, align 8
  %1301 = icmp eq %"class.WTF::StringImpl"* %1300, null
  br i1 %1301, label %1302, label %1322

1302:                                             ; preds = %1296
  %1303 = getelementptr inbounds i8, i8* %17, i64 88
  %1304 = bitcast i8* %1303 to %"class.blink::PaymentCurrencyAmount"**
  %1305 = load %"class.blink::PaymentCurrencyAmount"*, %"class.blink::PaymentCurrencyAmount"** %1304, align 8
  %1306 = icmp eq %"class.blink::PaymentCurrencyAmount"* %1305, null
  br i1 %1306, label %1307, label %1322

1307:                                             ; preds = %1302
  %1308 = getelementptr inbounds i8, i8* %17, i64 8
  %1309 = load i8, i8* %1308, align 8, !range !3
  %1310 = icmp eq i8 %1309, 0
  br i1 %1310, label %1311, label %1322

1311:                                             ; preds = %1307
  %1312 = call zeroext i1 @_ZNK5blink27PaymentRequestDetailsUpdate22hasPaymentMethodErrorsEv(%"class.blink::PaymentRequestDetailsUpdate"* %18)
  br i1 %1312, label %1322, label %1313

1313:                                             ; preds = %1311
  %1314 = getelementptr inbounds i8, i8* %17, i64 9
  %1315 = load i8, i8* %1314, align 1, !range !3
  %1316 = icmp eq i8 %1315, 0
  br i1 %1316, label %1317, label %1322

1317:                                             ; preds = %1313
  %1318 = getelementptr inbounds i8, i8* %17, i64 64
  %1319 = bitcast i8* %1318 to %"class.blink::AddressErrors"**
  %1320 = load %"class.blink::AddressErrors"*, %"class.blink::AddressErrors"** %1319, align 8
  %1321 = icmp eq %"class.blink::AddressErrors"* %1320, null
  br i1 %1321, label %1323, label %1322

1322:                                             ; preds = %1317, %1313, %1307, %1302, %1296, %1311
  br label %1323

1323:                                             ; preds = %1317, %1322
  %1324 = phi %"class.blink::PaymentRequestDetailsUpdate"* [ %18, %1322 ], [ null, %1317 ]
  call void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_27PaymentRequestDetailsUpdateEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"* %1297, %"class.blink::PaymentRequestDetailsUpdate"* %1324, i32 1) #11
  %1325 = bitcast %"class.blink::MemberBase.36"* %12 to i64*
  store atomic i64 0, i64* %1325 monotonic, align 8
  br label %1326

1326:                                             ; preds = %528, %824, %1323
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %190, align 8
  %1327 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %6, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %1328 = load i64*, i64** %1327, align 8
  %1329 = icmp eq i64* %1328, null
  br i1 %1329, label %1339, label %1330

1330:                                             ; preds = %1326
  %1331 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %195, align 8
  %1332 = bitcast %"class.v8::Isolate"* %1331 to %"class.v8::internal::Isolate"*
  %1333 = load i64, i64* %1328, align 8
  %1334 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %1332, i64 %1333) #11
  %1335 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %1331) #11
  br i1 %1335, label %1339, label %1336

1336:                                             ; preds = %1330
  %1337 = bitcast i64* %1334 to %"class.v8::Value"*
  %1338 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %1331, %"class.v8::Value"* %1337) #11
  br label %1339

1339:                                             ; preds = %1336, %1330, %1326
  %1340 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %199, align 8
  %1341 = icmp eq %"class.WTF::StringImpl"* %1340, null
  br i1 %1341, label %1355, label %1342

1342:                                             ; preds = %1339
  %1343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1340, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1344 = load atomic i32, i32* %1343 monotonic, align 4
  %1345 = and i32 %1344, 2
  %1346 = icmp eq i32 %1345, 0
  %1347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1340, i64 0, i32 0
  %1348 = load i32, i32* %1347, align 4
  br i1 %1346, label %1349, label %1351

1349:                                             ; preds = %1342
  %1350 = add i32 %1348, -1
  store i32 %1350, i32* %1347, align 4
  br label %1351

1351:                                             ; preds = %1349, %1342
  %1352 = phi i32 [ %1350, %1349 ], [ %1348, %1342 ]
  %1353 = icmp eq i32 %1352, 0
  br i1 %1353, label %1354, label %1355

1354:                                             ; preds = %1351
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1340) #11
  br label %1355

1355:                                             ; preds = %1339, %1351, %1354
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %187) #11
  %1356 = load %"class.v8::Context"*, %"class.v8::Context"** %170, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %1356) #11
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %171) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %169) #11
  br label %1357

1357:                                             ; preds = %2, %1355
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PaymentRequestEvent21changeShippingAddressEPNS_11ScriptStateEPNS_11AddressInitERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::PaymentRequestEvent"*, %"class.blink::ScriptState"*, %"class.blink::AddressInit"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.mojo::StructPtr.1483", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.mojo::StructPtr.1483", align 8
  %9 = alloca %"class.base::OnceCallback.1432", align 8
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to { i64, i64 }*
  %12 = alloca %"class.blink::WeakPersistent", align 8
  %13 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %1, i64 0, i32 10
  %14 = getelementptr inbounds %"class.blink::Member.35", %"class.blink::Member.35"* %13, i64 0, i32 0, i32 0
  %15 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %14, align 8
  %16 = icmp eq %"class.blink::ScriptPromiseResolver"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %5
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 11, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0)) #11
  %18 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 32, i1 false)
  br label %183

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %1, i64 0, i32 12, i32 0, i32 0, i32 0
  %21 = load %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %21, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %21, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %26, align 8
  %28 = icmp eq %"class.mojo::InterfaceEndpointClient"* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 11, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0)) #11
  %30 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 32, i1 false)
  br label %183

31:                                               ; preds = %25, %19
  %32 = icmp eq %"class.blink::AddressInit"* %3, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 12, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0)) #11
  %34 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 32, i1 false)
  br label %183

35:                                               ; preds = %31
  %36 = bitcast %"class.mojo::StructPtr.1483"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  %37 = getelementptr inbounds %"class.mojo::StructPtr.1483", %"class.mojo::StructPtr.1483"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.payments::mojom::blink::PaymentAddress"* inttoptr (i64 -6148914691236517206 to %"class.payments::mojom::blink::PaymentAddress"*), %"class.payments::mojom::blink::PaymentAddress"** %37, align 8
  call void @_ZN4mojo13TypeConverterINS_9StructPtrIN8payments5mojom5blink14PaymentAddressEEEPN5blink11AddressInitEE7ConvertEPKS8_(%"class.mojo::StructPtr.1483"* nonnull sret %6, %"class.blink::AddressInit"* nonnull %3) #11
  %38 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #11
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %39, align 8
  %40 = call zeroext i1 @_ZN5blink18PaymentsValidators22IsValidShippingAddressERKN4mojo9StructPtrIN8payments5mojom5blink14PaymentAddressEEEPN3WTF6StringE(%"class.mojo::StructPtr.1483"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull %7) #11
  br i1 %40, label %46, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %43 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %42, align 8
  %44 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %43, align 8
  call void %44(%"class.blink::ExceptionState"* %4, i32 12, %"class.WTF::String"* nonnull dereferenceable(8) %7) #11
  %45 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 32, i1 false)
  br label %161

46:                                               ; preds = %35
  %47 = load %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %20, align 8
  %48 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %47, i64 0, i32 1, i32 0, i32 1
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr.1567", %"class.std::__1::unique_ptr.1567"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %49, align 8
  %51 = icmp eq %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %50, null
  br i1 %51, label %52, label %74

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %47, i64 0, i32 1
  %54 = bitcast %"class.mojo::Remote.1565"* %53 to %"class.mojo::internal::InterfacePtrStateBase"*
  %55 = call i8* @_Znwm(i64 8) #12
  %56 = bitcast i8* %55 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8payments5mojom5blink35PaymentHandlerHostResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = bitcast i8* %55 to %"class.mojo::MessageReceiver"*
  %58 = call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %54, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %57, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8payments5mojom5blink18PaymentHandlerHost5Name_E, i64 0, i64 0)) #11
  br i1 %58, label %59, label %74

59:                                               ; preds = %52
  %60 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %47, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %61 = bitcast %"class.mojo::InterfaceEndpointClient"** %60 to %"class.mojo::MessageReceiverWithResponder"**
  %62 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %61, align 8
  %63 = call i8* @_Znwm(i64 16) #12
  %64 = bitcast i8* %63 to %"class.payments::mojom::blink::PaymentHandlerHostProxy"*
  call void @_ZN8payments5mojom5blink23PaymentHandlerHostProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.payments::mojom::blink::PaymentHandlerHostProxy"* nonnull %64, %"class.mojo::MessageReceiverWithResponder"* %62) #11
  %65 = ptrtoint i8* %63 to i64
  %66 = load %"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %49, align 8
  %67 = bitcast %"class.std::__1::unique_ptr.1567"* %48 to i64*
  store i64 %65, i64* %67, align 8
  %68 = icmp eq %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %66, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %59
  %70 = bitcast %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %66 to void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)***
  %71 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)**, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %71, i64 1
  %73 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %72, align 8
  call void %73(%"class.payments::mojom::blink::PaymentHandlerHostProxy"* nonnull %66) #11
  br label %74

74:                                               ; preds = %46, %52, %59, %69
  %75 = load %"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %49, align 8
  %76 = bitcast %"class.mojo::StructPtr.1483"* %8 to i64*
  %77 = getelementptr inbounds %"class.mojo::StructPtr.1483", %"class.mojo::StructPtr.1483"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %78 = bitcast %"class.mojo::StructPtr.1483"* %6 to i64*
  %79 = load i64, i64* %78, align 8
  store i64 %79, i64* %76, align 8
  store i64 0, i64* %78, align 8
  %80 = bitcast <2 x i64>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #11
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::PaymentRequestEvent"*, %"class.mojo::StructPtr.1433"*)* @_ZN5blink19PaymentRequestEvent37OnChangePaymentRequestDetailsResponseEN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEE to i64), i64 0>, <2 x i64>* %10, align 16
  %81 = bitcast %"class.blink::WeakPersistent"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #11
  %82 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %12, i64 0, i32 0
  %83 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %12, i64 0, i32 0, i32 0
  store %"class.blink::PaymentRequestEvent"* %1, %"class.blink::PaymentRequestEvent"** %83, align 8, !alias.scope !33
  %84 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %12, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %84, align 8, !alias.scope !33
  %85 = ptrtoint %"class.blink::PaymentRequestEvent"* %1 to i64
  switch i64 %85, label %86 [
    i64 0, label %112
    i64 -1, label %112
  ]

86:                                               ; preds = %74
  %87 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !33
  %88 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %87, i64 0, i32 1
  %89 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %88) #11, !noalias !33
  %90 = icmp eq i8* %89, null
  br i1 %90, label %91, label %93, !prof !2

91:                                               ; preds = %86
  %92 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %88, i8* %92) #11
  br label %93

93:                                               ; preds = %91, %86
  %94 = phi i8* [ %92, %91 ], [ %89, %86 ]
  %95 = bitcast i8* %94 to %"class.blink::ThreadState"**
  %96 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %95, align 8, !noalias !33
  %97 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %96, i64 0, i32 4, i32 0, i32 0, i32 0
  %98 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %97, align 8, !noalias !33
  %99 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %98, i64 0, i32 0, i32 0
  %100 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %99, align 8, !noalias !33
  %101 = icmp eq %"class.blink::PersistentNode"* %100, null
  br i1 %101, label %102, label %105, !prof !2

102:                                              ; preds = %93
  %103 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %98, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %103) #11
  %104 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %99, align 8
  br label %105

105:                                              ; preds = %102, %93
  %106 = phi %"class.blink::PersistentNode"* [ %104, %102 ], [ %100, %93 ]
  %107 = bitcast %"class.blink::PersistentNode"* %106 to i64*
  %108 = load i64, i64* %107, align 8, !noalias !33
  %109 = bitcast %"class.blink::PersistentRegion"* %98 to i64*
  store i64 %108, i64* %109, align 8, !noalias !33
  %110 = bitcast %"class.blink::PersistentNode"* %106 to %"class.blink::PersistentBase.458"**
  store %"class.blink::PersistentBase.458"* %82, %"class.blink::PersistentBase.458"** %110, align 8, !noalias !33
  %111 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %106, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19PaymentRequestEventELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %111, align 8
  store %"class.blink::PersistentNode"* %106, %"class.blink::PersistentNode"** %84, align 8, !alias.scope !33
  br label %112

112:                                              ; preds = %74, %74, %105
  %113 = call i8* @_Znwm(i64 64) #12, !noalias !36
  %114 = bitcast i8* %113 to %"struct.base::internal::BindState.1639"*
  call void @_ZN4base8internal9BindStateIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS2_14WeakPersistentIS3_EEEEC2ISC_JSE_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.1639"* nonnull %114, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.1433"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS3_14WeakPersistentIS4_EEEEEFvSB_EE7RunOnceEPNS0_13BindStateBaseEOSB_ to void ()*), { i64, i64 }* nonnull dereferenceable(16) %11, %"class.blink::WeakPersistent"* nonnull dereferenceable(16) %12) #11, !noalias !36
  %115 = bitcast %"class.base::OnceCallback.1432"* %9 to i8**
  store i8* %113, i8** %115, align 8, !alias.scope !36
  call void @_ZN8payments5mojom5blink23PaymentHandlerHostProxy21ChangeShippingAddressEN4mojo9StructPtrINS1_14PaymentAddressEEEN4base12OnceCallbackIFvNS4_INS1_27PaymentRequestDetailsUpdateEEEEEE(%"class.payments::mojom::blink::PaymentHandlerHostProxy"* %75, %"class.mojo::StructPtr.1483"* nonnull %8, %"class.base::OnceCallback.1432"* nonnull %9) #11
  %116 = getelementptr inbounds %"class.base::OnceCallback.1432", %"class.base::OnceCallback.1432"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %116) #11
  %117 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %84, align 8
  %118 = icmp eq %"class.blink::PersistentNode"* %117, null
  br i1 %118, label %138, label %119

119:                                              ; preds = %112
  %120 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %121 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %120, i64 0, i32 1
  %122 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %121) #11
  %123 = icmp eq i8* %122, null
  br i1 %123, label %124, label %126, !prof !2

124:                                              ; preds = %119
  %125 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %121, i8* %125) #11
  br label %126

126:                                              ; preds = %124, %119
  %127 = phi i8* [ %125, %124 ], [ %122, %119 ]
  %128 = bitcast i8* %127 to %"class.blink::ThreadState"**
  %129 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %129, i64 0, i32 4, i32 0, i32 0, i32 0
  %131 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %130, align 8
  %132 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %84, align 8
  %133 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %131, i64 0, i32 0, i32 0
  %134 = bitcast %"class.blink::PersistentRegion"* %131 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.blink::PersistentNode"* %132 to i64*
  store i64 %135, i64* %136, align 8
  %137 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %132, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %137, align 8
  store %"class.blink::PersistentNode"* %132, %"class.blink::PersistentNode"** %133, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %84, align 8
  br label %138

138:                                              ; preds = %112, %126
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #11
  %139 = load %"class.payments::mojom::blink::PaymentAddress"*, %"class.payments::mojom::blink::PaymentAddress"** %77, align 8
  store %"class.payments::mojom::blink::PaymentAddress"* null, %"class.payments::mojom::blink::PaymentAddress"** %77, align 8
  %140 = icmp eq %"class.payments::mojom::blink::PaymentAddress"* %139, null
  br i1 %140, label %143, label %141

141:                                              ; preds = %138
  call void @_ZN8payments5mojom5blink14PaymentAddressD1Ev(%"class.payments::mojom::blink::PaymentAddress"* nonnull %139) #11
  %142 = bitcast %"class.payments::mojom::blink::PaymentAddress"* %139 to i8*
  call void @_ZdlPv(i8* %142) #12
  br label %143

143:                                              ; preds = %138, %141
  %144 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm(i64 104) #11
  %145 = bitcast i8* %144 to %"class.blink::ScriptPromiseResolver"*
  call void @_ZN5blink21ScriptPromiseResolverC1EPNS_11ScriptStateE(%"class.blink::ScriptPromiseResolver"* %145, %"class.blink::ScriptState"* %2) #11
  %146 = getelementptr inbounds i8, i8* %144, i64 -4
  %147 = bitcast i8* %146 to i16*
  %148 = load atomic i16, i16* %147 monotonic, align 2
  %149 = or i16 %148, 1
  store atomic i16 %149, i16* %147 release, align 2
  %150 = ptrtoint i8* %144 to i64
  %151 = bitcast %"class.blink::Member.35"* %13 to i64*
  store atomic i64 %150, i64* %151 monotonic, align 8
  %152 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %153 = icmp eq i32 %152, 0
  %154 = bitcast i8* %144 to %"class.blink::ScriptPromiseResolver"*
  br i1 %153, label %158, label %155

155:                                              ; preds = %143
  %156 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %144) #11
  %157 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %14, align 8
  br label %158

158:                                              ; preds = %143, %155
  %159 = phi %"class.blink::ScriptPromiseResolver"* [ %154, %143 ], [ %157, %155 ]
  %160 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %159, i64 0, i32 5
  call void @_ZNK5blink13ScriptPromise16InternalResolver7PromiseEv(%"class.blink::ScriptPromise"* sret %0, %"class.blink::ScriptPromise::InternalResolver"* %160) #11
  br label %161

161:                                              ; preds = %158, %41
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #11
  br label %177

177:                                              ; preds = %161, %173, %176
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #11
  %178 = load %"class.payments::mojom::blink::PaymentAddress"*, %"class.payments::mojom::blink::PaymentAddress"** %37, align 8
  store %"class.payments::mojom::blink::PaymentAddress"* null, %"class.payments::mojom::blink::PaymentAddress"** %37, align 8
  %179 = icmp eq %"class.payments::mojom::blink::PaymentAddress"* %178, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %177
  call void @_ZN8payments5mojom5blink14PaymentAddressD1Ev(%"class.payments::mojom::blink::PaymentAddress"* nonnull %178) #11
  %181 = bitcast %"class.payments::mojom::blink::PaymentAddress"* %178 to i8*
  call void @_ZdlPv(i8* %181) #12
  br label %182

182:                                              ; preds = %177, %180
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %183

183:                                              ; preds = %182, %33, %29, %17
  ret void
}

declare zeroext i1 @_ZN5blink18PaymentsValidators22IsValidShippingAddressERKN4mojo9StructPtrIN8payments5mojom5blink14PaymentAddressEEEPN3WTF6StringE(%"class.mojo::StructPtr.1483"* dereferenceable(8), %"class.WTF::String"*) local_unnamed_addr #1

declare void @_ZN8payments5mojom5blink23PaymentHandlerHostProxy21ChangeShippingAddressEN4mojo9StructPtrINS1_14PaymentAddressEEEN4base12OnceCallbackIFvNS4_INS1_27PaymentRequestDetailsUpdateEEEEEE(%"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.mojo::StructPtr.1483"*, %"class.base::OnceCallback.1432"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PaymentRequestEvent20changeShippingOptionEPNS_11ScriptStateERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::ScriptPromise"* noalias sret, %"class.blink::PaymentRequestEvent"*, %"class.blink::ScriptState"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback.1432", align 8
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to { i64, i64 }*
  %9 = alloca %"class.blink::WeakPersistent", align 8
  %10 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %1, i64 0, i32 10
  %11 = getelementptr inbounds %"class.blink::Member.35", %"class.blink::Member.35"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %11, align 8
  %13 = icmp eq %"class.blink::ScriptPromiseResolver"* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %5
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 11, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0)) #11
  %15 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 32, i1 false)
  br label %162

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %1, i64 0, i32 12, i32 0, i32 0, i32 0
  %18 = load %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %18, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %18, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %23, align 8
  %25 = icmp eq %"class.mojo::InterfaceEndpointClient"* %24, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 11, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0)) #11
  %27 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false)
  br label %162

28:                                               ; preds = %22, %16
  %29 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::Member.30"*, %"class.blink::Member.30"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::Member.30", %"class.blink::Member.30"* %30, i64 %33
  %35 = icmp eq i32 %32, 0
  br i1 %35, label %54, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  br label %38

38:                                               ; preds = %38, %36
  %39 = phi i8 [ 0, %36 ], [ %47, %38 ]
  %40 = phi %"class.blink::Member.30"* [ %30, %36 ], [ %48, %38 ]
  %41 = getelementptr inbounds %"class.blink::Member.30", %"class.blink::Member.30"* %40, i64 0, i32 0, i32 0
  %42 = load %"class.blink::PaymentShippingOption"*, %"class.blink::PaymentShippingOption"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::PaymentShippingOption", %"class.blink::PaymentShippingOption"* %42, i64 0, i32 4, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %46 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"* %45) #11
  %47 = select i1 %46, i8 1, i8 %39
  %48 = getelementptr inbounds %"class.blink::Member.30", %"class.blink::Member.30"* %40, i64 1
  %49 = icmp eq %"class.blink::Member.30"* %48, %34
  %50 = or i1 %46, %49
  br i1 %50, label %51, label %38

51:                                               ; preds = %38
  %52 = and i8 %47, 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %28, %51
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %4, i32 12, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0)) #11
  %55 = bitcast %"class.blink::ScriptPromise"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 32, i1 false)
  br label %162

56:                                               ; preds = %51
  %57 = load %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"** %17, align 8
  %58 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %57, i64 0, i32 1, i32 0, i32 1
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.1567", %"class.std::__1::unique_ptr.1567"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %59, align 8
  %61 = icmp eq %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %60, null
  br i1 %61, label %62, label %84

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %57, i64 0, i32 1
  %64 = bitcast %"class.mojo::Remote.1565"* %63 to %"class.mojo::internal::InterfacePtrStateBase"*
  %65 = tail call i8* @_Znwm(i64 8) #12
  %66 = bitcast i8* %65 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8payments5mojom5blink35PaymentHandlerHostResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = bitcast i8* %65 to %"class.mojo::MessageReceiver"*
  %68 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %64, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %67, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8payments5mojom5blink18PaymentHandlerHost5Name_E, i64 0, i64 0)) #11
  br i1 %68, label %69, label %84

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %57, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %71 = bitcast %"class.mojo::InterfaceEndpointClient"** %70 to %"class.mojo::MessageReceiverWithResponder"**
  %72 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %71, align 8
  %73 = tail call i8* @_Znwm(i64 16) #12
  %74 = bitcast i8* %73 to %"class.payments::mojom::blink::PaymentHandlerHostProxy"*
  tail call void @_ZN8payments5mojom5blink23PaymentHandlerHostProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.payments::mojom::blink::PaymentHandlerHostProxy"* nonnull %74, %"class.mojo::MessageReceiverWithResponder"* %72) #11
  %75 = ptrtoint i8* %73 to i64
  %76 = load %"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %59, align 8
  %77 = bitcast %"class.std::__1::unique_ptr.1567"* %58 to i64*
  store i64 %75, i64* %77, align 8
  %78 = icmp eq %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %76, null
  br i1 %78, label %84, label %79

79:                                               ; preds = %69
  %80 = bitcast %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %76 to void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)***
  %81 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)**, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %81, i64 1
  %83 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %82, align 8
  tail call void %83(%"class.payments::mojom::blink::PaymentHandlerHostProxy"* nonnull %76) #11
  br label %84

84:                                               ; preds = %56, %62, %69, %79
  %85 = load %"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %59, align 8
  %86 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #11
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::PaymentRequestEvent"*, %"class.mojo::StructPtr.1433"*)* @_ZN5blink19PaymentRequestEvent37OnChangePaymentRequestDetailsResponseEN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEE to i64), i64 0>, <2 x i64>* %7, align 16
  %87 = bitcast %"class.blink::WeakPersistent"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #11
  %88 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %9, i64 0, i32 0
  %89 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %9, i64 0, i32 0, i32 0
  store %"class.blink::PaymentRequestEvent"* %1, %"class.blink::PaymentRequestEvent"** %89, align 8, !alias.scope !43
  %90 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %9, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %90, align 8, !alias.scope !43
  %91 = ptrtoint %"class.blink::PaymentRequestEvent"* %1 to i64
  switch i64 %91, label %92 [
    i64 0, label %118
    i64 -1, label %118
  ]

92:                                               ; preds = %84
  %93 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !43
  %94 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %93, i64 0, i32 1
  %95 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %94) #11, !noalias !43
  %96 = icmp eq i8* %95, null
  br i1 %96, label %97, label %99, !prof !2

97:                                               ; preds = %92
  %98 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %94, i8* %98) #11
  br label %99

99:                                               ; preds = %97, %92
  %100 = phi i8* [ %98, %97 ], [ %95, %92 ]
  %101 = bitcast i8* %100 to %"class.blink::ThreadState"**
  %102 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %101, align 8, !noalias !43
  %103 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %102, i64 0, i32 4, i32 0, i32 0, i32 0
  %104 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %103, align 8, !noalias !43
  %105 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %104, i64 0, i32 0, i32 0
  %106 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %105, align 8, !noalias !43
  %107 = icmp eq %"class.blink::PersistentNode"* %106, null
  br i1 %107, label %108, label %111, !prof !2

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %104, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %109) #11
  %110 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %105, align 8
  br label %111

111:                                              ; preds = %108, %99
  %112 = phi %"class.blink::PersistentNode"* [ %110, %108 ], [ %106, %99 ]
  %113 = bitcast %"class.blink::PersistentNode"* %112 to i64*
  %114 = load i64, i64* %113, align 8, !noalias !43
  %115 = bitcast %"class.blink::PersistentRegion"* %104 to i64*
  store i64 %114, i64* %115, align 8, !noalias !43
  %116 = bitcast %"class.blink::PersistentNode"* %112 to %"class.blink::PersistentBase.458"**
  store %"class.blink::PersistentBase.458"* %88, %"class.blink::PersistentBase.458"** %116, align 8, !noalias !43
  %117 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %112, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19PaymentRequestEventELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %117, align 8
  store %"class.blink::PersistentNode"* %112, %"class.blink::PersistentNode"** %90, align 8, !alias.scope !43
  br label %118

118:                                              ; preds = %84, %84, %111
  %119 = call i8* @_Znwm(i64 64) #12, !noalias !46
  %120 = bitcast i8* %119 to %"struct.base::internal::BindState.1639"*
  call void @_ZN4base8internal9BindStateIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS2_14WeakPersistentIS3_EEEEC2ISC_JSE_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.1639"* nonnull %120, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.1433"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS3_14WeakPersistentIS4_EEEEEFvSB_EE7RunOnceEPNS0_13BindStateBaseEOSB_ to void ()*), { i64, i64 }* nonnull dereferenceable(16) %8, %"class.blink::WeakPersistent"* nonnull dereferenceable(16) %9) #11, !noalias !46
  %121 = bitcast %"class.base::OnceCallback.1432"* %6 to i8**
  store i8* %119, i8** %121, align 8, !alias.scope !46
  call void @_ZN8payments5mojom5blink23PaymentHandlerHostProxy20ChangeShippingOptionERKN3WTF6StringEN4base12OnceCallbackIFvN4mojo9StructPtrINS1_27PaymentRequestDetailsUpdateEEEEEE(%"class.payments::mojom::blink::PaymentHandlerHostProxy"* %85, %"class.WTF::String"* dereferenceable(8) %3, %"class.base::OnceCallback.1432"* nonnull %6) #11
  %122 = getelementptr inbounds %"class.base::OnceCallback.1432", %"class.base::OnceCallback.1432"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %122) #11
  %123 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %90, align 8
  %124 = icmp eq %"class.blink::PersistentNode"* %123, null
  br i1 %124, label %144, label %125

125:                                              ; preds = %118
  %126 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %127 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %126, i64 0, i32 1
  %128 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %127) #11
  %129 = icmp eq i8* %128, null
  br i1 %129, label %130, label %132, !prof !2

130:                                              ; preds = %125
  %131 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %127, i8* %131) #11
  br label %132

132:                                              ; preds = %130, %125
  %133 = phi i8* [ %131, %130 ], [ %128, %125 ]
  %134 = bitcast i8* %133 to %"class.blink::ThreadState"**
  %135 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %134, align 8
  %136 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %135, i64 0, i32 4, i32 0, i32 0, i32 0
  %137 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %136, align 8
  %138 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %90, align 8
  %139 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %137, i64 0, i32 0, i32 0
  %140 = bitcast %"class.blink::PersistentRegion"* %137 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.blink::PersistentNode"* %138 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %138, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %143, align 8
  store %"class.blink::PersistentNode"* %138, %"class.blink::PersistentNode"** %139, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %90, align 8
  br label %144

144:                                              ; preds = %118, %132
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #11
  %145 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm(i64 104) #11
  %146 = bitcast i8* %145 to %"class.blink::ScriptPromiseResolver"*
  call void @_ZN5blink21ScriptPromiseResolverC1EPNS_11ScriptStateE(%"class.blink::ScriptPromiseResolver"* %146, %"class.blink::ScriptState"* %2) #11
  %147 = getelementptr inbounds i8, i8* %145, i64 -4
  %148 = bitcast i8* %147 to i16*
  %149 = load atomic i16, i16* %148 monotonic, align 2
  %150 = or i16 %149, 1
  store atomic i16 %150, i16* %148 release, align 2
  %151 = ptrtoint i8* %145 to i64
  %152 = bitcast %"class.blink::Member.35"* %10 to i64*
  store atomic i64 %151, i64* %152 monotonic, align 8
  %153 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %154 = icmp eq i32 %153, 0
  %155 = bitcast i8* %145 to %"class.blink::ScriptPromiseResolver"*
  br i1 %154, label %159, label %156

156:                                              ; preds = %144
  %157 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %145) #11
  %158 = load %"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptPromiseResolver"** %11, align 8
  br label %159

159:                                              ; preds = %144, %156
  %160 = phi %"class.blink::ScriptPromiseResolver"* [ %155, %144 ], [ %158, %156 ]
  %161 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %160, i64 0, i32 5
  call void @_ZNK5blink13ScriptPromise16InternalResolver7PromiseEv(%"class.blink::ScriptPromise"* sret %0, %"class.blink::ScriptPromise::InternalResolver"* %161) #11
  br label %162

162:                                              ; preds = %54, %159, %26, %14
  ret void
}

declare void @_ZN8payments5mojom5blink23PaymentHandlerHostProxy20ChangeShippingOptionERKN3WTF6StringEN4base12OnceCallbackIFvN4mojo9StructPtrINS1_27PaymentRequestDetailsUpdateEEEEEE(%"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.WTF::String"* dereferenceable(8), %"class.base::OnceCallback.1432"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19PaymentRequestEvent11respondWithEPNS_11ScriptStateENS_13ScriptPromiseERNS_14ExceptionStateE(%"class.blink::PaymentRequestEvent"* nocapture, %"class.blink::ScriptState"*, %"class.blink::ScriptPromise"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::ScriptPromise", align 8
  %6 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 256
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState17ThrowDOMExceptionENS_16DOMExceptionCodeEPKc(%"class.blink::ExceptionState"* %3, i32 11, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0)) #11
  br label %27

11:                                               ; preds = %4
  %12 = or i16 %7, 16
  store i16 %12, i16* %6, align 8
  %13 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 11, i32 0, i32 0
  %14 = load %"class.blink::RespondWithObserver"*, %"class.blink::RespondWithObserver"** %13, align 8
  %15 = icmp eq %"class.blink::RespondWithObserver"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %11
  call void @_ZN5blink13ScriptPromiseC1ERKS0_(%"class.blink::ScriptPromise"* nonnull %5, %"class.blink::ScriptPromise"* dereferenceable(32) %2) #11
  call void @_ZN5blink19RespondWithObserver11RespondWithEPNS_11ScriptStateENS_13ScriptPromiseERNS_14ExceptionStateE(%"class.blink::RespondWithObserver"* nonnull %14, %"class.blink::ScriptState"* %1, %"class.blink::ScriptPromise"* nonnull %5, %"class.blink::ExceptionState"* dereferenceable(72) %3) #11
  %17 = getelementptr inbounds %"class.blink::ScriptPromise", %"class.blink::ScriptPromise"* %5, i64 0, i32 1, i32 1, i32 1, i32 0
  %18 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %17, align 8
  %19 = icmp eq %"class.blink::DOMWrapperWorld"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %18, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %21) #11
  %22 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %18) #11
  %26 = bitcast %"class.blink::DOMWrapperWorld"* %18 to i8*
  call void @free(i8* %26) #11
  br label %27

27:                                               ; preds = %11, %25, %20, %16, %10
  ret void
}

declare void @_ZN5blink19RespondWithObserver11RespondWithEPNS_11ScriptStateENS_13ScriptPromiseERNS_14ExceptionStateE(%"class.blink::RespondWithObserver"*, %"class.blink::ScriptState"*, %"class.blink::ScriptPromise"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink13ScriptPromiseC1ERKS0_(%"class.blink::ScriptPromise"*, %"class.blink::ScriptPromise"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19PaymentRequestEvent5TraceEPNS_7VisitorE(%"class.blink::PaymentRequestEvent"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 4
  %4 = bitcast %"class.blink::HeapVector"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #11
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17PaymentMethodDataEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 5
  %20 = bitcast %"class.blink::Member.10"* %19 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %18
  %24 = inttoptr i64 %21 to i8*
  %25 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %26 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %26, i64 5
  %28 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %27, align 8
  tail call void %28(%"class.blink::Visitor"* %1, i8* nonnull %24, i8* nonnull %24, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21PaymentCurrencyAmountEE5TraceEPNS_7VisitorEPKv) #11
  br label %29

29:                                               ; preds = %18, %23
  %30 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 6
  %31 = bitcast %"class.blink::HeapVector.14"* %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  %34 = bitcast %"class.blink::HeapVector.14"* %30 to i8**
  %35 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %35, i64 11
  %37 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %1, i8** %34) #11
  br i1 %33, label %44, label %38

38:                                               ; preds = %29
  %39 = inttoptr i64 %32 to i8*
  %40 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %41 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, i64 5
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, align 8
  tail call void %43(%"class.blink::Visitor"* %1, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %44

44:                                               ; preds = %29, %38
  %45 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 8
  %46 = bitcast %"class.blink::Member.22"* %45 to i64*
  %47 = load atomic i64, i64* %46 monotonic, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %44
  %50 = inttoptr i64 %47 to i8*
  %51 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %52, i64 5
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %53, align 8
  tail call void %54(%"class.blink::Visitor"* %1, i8* nonnull %50, i8* nonnull %50, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14PaymentOptionsEE5TraceEPNS_7VisitorEPKv) #11
  br label %55

55:                                               ; preds = %44, %49
  %56 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 9
  %57 = bitcast %"class.blink::HeapVector.24"* %56 to i64*
  %58 = load atomic i64, i64* %57 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  %60 = bitcast %"class.blink::HeapVector.24"* %56 to i8**
  %61 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %62 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %61, i64 11
  %63 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %62, align 8
  tail call void %63(%"class.blink::Visitor"* %1, i8** %60) #11
  br i1 %59, label %70, label %64

64:                                               ; preds = %55
  %65 = inttoptr i64 %58 to i8*
  %66 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %67, i64 5
  %69 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %68, align 8
  tail call void %69(%"class.blink::Visitor"* %1, i8* nonnull %65, i8* nonnull %65, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %70

70:                                               ; preds = %55, %64
  %71 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 10
  %72 = bitcast %"class.blink::Member.35"* %71 to i64*
  %73 = load atomic i64, i64* %72 monotonic, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %81, label %75

75:                                               ; preds = %70
  %76 = inttoptr i64 %73 to i8*
  %77 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %78 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %78, i64 5
  %80 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %79, align 8
  tail call void %80(%"class.blink::Visitor"* %1, i8* nonnull %76, i8* nonnull %76, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv) #11
  br label %81

81:                                               ; preds = %70, %75
  %82 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 11
  %83 = bitcast %"class.blink::Member.287"* %82 to i64*
  %84 = load atomic i64, i64* %83 monotonic, align 8
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %92, label %86

86:                                               ; preds = %81
  %87 = inttoptr i64 %84 to i8*
  %88 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %89 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %89, i64 5
  %91 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %90, align 8
  tail call void %91(%"class.blink::Visitor"* %1, i8* nonnull %87, i8* nonnull %87, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19RespondWithObserverEE5TraceEPNS_7VisitorEPKv) #11
  br label %92

92:                                               ; preds = %81, %86
  %93 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 12
  %94 = bitcast %"class.blink::HeapMojoRemote"* %93 to i64*
  %95 = load atomic i64, i64* %94 monotonic, align 8
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %103, label %97

97:                                               ; preds = %92
  %98 = inttoptr i64 %95 to i8*
  %99 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %100 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %100, i64 5
  %102 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %101, align 8
  tail call void %102(%"class.blink::Visitor"* %1, i8* nonnull %98, i8* nonnull %98, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv) #11
  br label %103

103:                                              ; preds = %92, %97
  %104 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ExtendableEvent5TraceEPNS_7VisitorE(%"class.blink::ExtendableEvent"* %104, %"class.blink::Visitor"* %1) #11
  ret void
}

declare void @_ZNK5blink15ExtendableEvent5TraceEPNS_7VisitorE(%"class.blink::ExtendableEvent"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZN5blink27PaymentRequestDetailsUpdate8setTotalEPNS_21PaymentCurrencyAmountE(%"class.blink::PaymentRequestDetailsUpdate"*, %"class.blink::PaymentCurrencyAmount"*) local_unnamed_addr #1

declare void @_ZN5blink11PaymentItem9setAmountEPNS_21PaymentCurrencyAmountE(%"class.blink::PaymentItem"*, %"class.blink::PaymentCurrencyAmount"*) local_unnamed_addr #1

declare void @_ZN5blink22PaymentDetailsModifier8setTotalEPNS_11PaymentItemE(%"class.blink::PaymentDetailsModifier"*, %"class.blink::PaymentItem"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN5blink14FromJSONStringEPN2v87IsolateENS0_5LocalINS0_7ContextEEERKN3WTF6StringERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Context"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink22PaymentDetailsModifier7setDataENS_11ScriptValueE(%"class.blink::PaymentDetailsModifier"*, %"class.blink::ScriptValue"*) local_unnamed_addr #1

declare void @_ZN5blink27PaymentRequestDetailsUpdate12setModifiersERKNS_10HeapVectorINS_6MemberINS_22PaymentDetailsModifierEEELj0EEE(%"class.blink::PaymentRequestDetailsUpdate"*, %"class.blink::HeapVector.14"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink21PaymentShippingOption9setAmountEPNS_21PaymentCurrencyAmountE(%"class.blink::PaymentShippingOption"*, %"class.blink::PaymentCurrencyAmount"*) local_unnamed_addr #1

declare void @_ZN5blink27PaymentRequestDetailsUpdate18setShippingOptionsERKNS_10HeapVectorINS_6MemberINS_21PaymentShippingOptionEEELj0EEE(%"class.blink::PaymentRequestDetailsUpdate"*, %"class.blink::HeapVector.24"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink27PaymentRequestDetailsUpdate22setPaymentMethodErrorsENS_11ScriptValueE(%"class.blink::PaymentRequestDetailsUpdate"*, %"class.blink::ScriptValue"*) local_unnamed_addr #1

declare void @_ZN5blink27PaymentRequestDetailsUpdate24setShippingAddressErrorsEPNS_13AddressErrorsE(%"class.blink::PaymentRequestDetailsUpdate"*, %"class.blink::AddressErrors"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink27PaymentRequestDetailsUpdate22hasPaymentMethodErrorsEv(%"class.blink::PaymentRequestDetailsUpdate"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::PaymentRequestDetailsUpdate", %"class.blink::PaymentRequestDetailsUpdate"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.blink::PaymentRequestDetailsUpdate", %"class.blink::PaymentRequestDetailsUpdate"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %1
  %7 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #11
  %8 = icmp eq %"class.v8::Value"* %7, null
  br i1 %8, label %31, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.v8::Value"* %7 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 3
  %13 = icmp eq i64 %12, 1
  br i1 %13, label %14, label %31

14:                                               ; preds = %9
  %15 = add i64 %11, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = and i64 %11, -4294967296
  %19 = zext i32 %17 to i64
  %20 = or i64 %18, %19
  %21 = add i64 %20, 7
  %22 = inttoptr i64 %21 to i16*
  %23 = load i16, i16* %22, align 2
  %24 = icmp eq i16 %23, 67
  br i1 %24, label %25, label %31

25:                                               ; preds = %14
  %26 = add i64 %11, 23
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = and i32 %28, -2
  %30 = icmp eq i32 %29, 6
  br i1 %30, label %56, label %31

31:                                               ; preds = %14, %9, %6, %25
  %32 = tail call %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"* %2) #11
  %33 = icmp eq %"class.v8::Value"* %32, null
  br i1 %33, label %56, label %34

34:                                               ; preds = %31
  %35 = bitcast %"class.v8::Value"* %32 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 3
  %38 = icmp eq i64 %37, 1
  br i1 %38, label %39, label %56

39:                                               ; preds = %34
  %40 = add i64 %36, -1
  %41 = inttoptr i64 %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = and i64 %36, -4294967296
  %44 = zext i32 %42 to i64
  %45 = or i64 %43, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load i16, i16* %47, align 2
  %49 = icmp eq i16 %48, 67
  br i1 %49, label %50, label %56

50:                                               ; preds = %39
  %51 = add i64 %36, 23
  %52 = inttoptr i64 %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, -2
  %55 = icmp ne i32 %54, 10
  br label %56

56:                                               ; preds = %50, %39, %34, %31, %25, %1
  %57 = phi i1 [ false, %25 ], [ false, %1 ], [ true, %31 ], [ %55, %50 ], [ true, %34 ], [ true, %39 ]
  ret i1 %57
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink19PaymentRequestEvent18GetWrapperTypeInfoEv(%"class.blink::PaymentRequestEvent"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink19PaymentRequestEvent18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5Event35DoneDispatchingEventAtCurrentTargetEv(%"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink5Event9IsUIEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event12IsMouseEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event12IsFocusEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event15IsKeyboardEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event12IsTouchEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event14IsGestureEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event12IsWheelEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event14IsPointerEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event12IsInputEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event18IsCompositionEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event11IsDragEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event16IsClipboardEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event25IsBeforeTextInsertedEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event25IsBeforeCreatePolicyEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event19IsBeforeUnloadEventEv(%"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink5Event12IsErrorEventEv(%"class.blink::Event"*) unnamed_addr #1

declare void @_ZN5blink5Event14preventDefaultEv(%"class.blink::Event"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Event22CanBeDispatchedInWorldERKNS_15DOMWrapperWorldE(%"class.blink::Event"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink5Event46ShouldDispatchEvenWhenExecutionContextIsPausedEv(%"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZN5blink5Event13DispatchEventERNS_15EventDispatcherE(%"class.blink::Event"*, %"class.blink::EventDispatcher"*) unnamed_addr #1

declare void @_ZN5blink5Event14ReceivedTargetEv(%"class.blink::Event"*) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN5blink14PaymentOptionsC1Ev(%"class.blink::PaymentOptions"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.13, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZNK5blink13ScriptPromise16InternalResolver7PromiseEv(%"class.blink::ScriptPromise"* sret, %"class.blink::ScriptPromise::InternalResolver"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK5blink11ScriptValue7V8ValueEv(%"class.blink::ScriptValue"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8payments5mojom5blink24PaymentHandlerMethodDataD1Ev(%"class.payments::mojom::blink::PaymentHandlerMethodData"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8payments5mojom5blink14PaymentAddressD1Ev(%"class.payments::mojom::blink::PaymentAddress"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"*, %"class.v8::Isolate"*) unnamed_addr #1

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20WorldSafeV8ReferenceIN2v85ValueEEC2EPNS1_7IsolateENS1_5LocalIS2_EE(%"class.blink::WorldSafeV8Reference"*, %"class.v8::Isolate"*, %"class.v8::Value"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.scoped_refptr.283, %class.scoped_refptr.283* %4, i64 0, i32 0
  %6 = icmp eq %"class.v8::Value"* %2, null
  %7 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  br i1 %6, label %61, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %0, i64 0, i32 0
  %10 = bitcast %"class.v8::Value"* %2 to i64*
  %11 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %12 = bitcast %"class.blink::WorldSafeV8Reference"* %0 to i64*
  %13 = tail call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %11, i64* nonnull %10, i64* %12, i1 zeroext false) #11
  %14 = ptrtoint i64* %13 to i64
  store atomic i64 %14, i64* %12 monotonic, align 8
  tail call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.280"* dereferenceable(8) %9) #11
  %15 = tail call zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"* %1) #11
  br i1 %15, label %16, label %38

16:                                               ; preds = %8
  %17 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #11
  %18 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %17) #11
  %19 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %18, i64 0, i32 2, i32 0
  %20 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %19, align 8
  %21 = icmp eq %"class.blink::DOMWrapperWorld"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %20, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %23) #11
  br label %24

24:                                               ; preds = %22, %16
  %25 = ptrtoint %"class.blink::DOMWrapperWorld"* %20 to i64
  %26 = bitcast %class.scoped_refptr.283* %4 to i64*
  %27 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %25, i64* %26, align 8
  %28 = icmp eq %"class.blink::DOMWrapperWorld"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #11
  %31 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %27) #11
  %35 = bitcast %"class.blink::DOMWrapperWorld"* %27 to i8*
  tail call void @free(i8* %35) #11
  br label %36

36:                                               ; preds = %24, %29, %34
  %37 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  tail call void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32) %37, %"class.v8::Value"* nonnull %2) #11
  br label %61

38:                                               ; preds = %8
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %2) #11
  br i1 %39, label %40, label %61

40:                                               ; preds = %38
  %41 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %42 = tail call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* nonnull %41) #11
  %43 = tail call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %42)
  %44 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %43, i64 0, i32 2, i32 0
  %45 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %44, align 8
  %46 = icmp eq %"class.blink::DOMWrapperWorld"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %45, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %48) #11
  br label %49

49:                                               ; preds = %47, %40
  %50 = ptrtoint %"class.blink::DOMWrapperWorld"* %45 to i64
  %51 = bitcast %class.scoped_refptr.283* %4 to i64*
  %52 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %5, align 8
  store i64 %50, i64* %51, align 8
  %53 = icmp eq %"class.blink::DOMWrapperWorld"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #11
  %56 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %52) #11
  %60 = bitcast %"class.blink::DOMWrapperWorld"* %52 to i8*
  tail call void @free(i8* %60) #11
  br label %61

61:                                               ; preds = %59, %54, %49, %38, %3, %36
  ret void
}

declare zeroext i1 @_ZN2v87Isolate9InContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZN5blink28WorldSafeV8ReferenceInternal30MaybeCheckCreationContextWorldERKNS_15DOMWrapperWorldEN2v85LocalINS4_5ValueEEE(%"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.v8::Context"* %0 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 23
  %13 = inttoptr i64 %12 to i8**
  %14 = load i8*, i8** %13, align 1
  %15 = bitcast i8* %14 to %"class.blink::ScriptState"*
  %16 = icmp eq i8* %14, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %1
  %18 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.15, i64 0, i64 0), i32 175, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0)) #11
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  br label %20

20:                                               ; preds = %1, %17
  %21 = getelementptr inbounds i8, i8* %14, i64 8
  %22 = bitcast i8* %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %23, null
  %25 = icmp eq %"class.v8::Context"* %0, null
  %26 = or i1 %25, %24
  br i1 %26, label %31, label %27

27:                                               ; preds = %20
  %28 = load i64, i64* %23, align 8
  %29 = load i64, i64* %4, align 8
  %30 = icmp eq i64 %28, %29
  br i1 %30, label %36, label %33

31:                                               ; preds = %20
  %32 = and i1 %25, %24
  br i1 %32, label %36, label %33

33:                                               ; preds = %27, %31
  %34 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.15, i64 0, i64 0), i32 176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0)) #11
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  br label %36

36:                                               ; preds = %27, %31, %33
  ret %"class.blink::ScriptState"* %15
}

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #1

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.280"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN2v82V819DisposeTracedGlobalEPm(i64*) local_unnamed_addr #1

declare i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"*, i64*, i64*, i1 zeroext) local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"*) unnamed_addr #3

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

declare void @_ZN5blink13AddressErrorsC1Ev(%"class.blink::AddressErrors"*) unnamed_addr #1

declare void @_ZN5blink21PaymentCurrencyAmountC1Ev(%"class.blink::PaymentCurrencyAmount"*) unnamed_addr #1

declare void @_ZN5blink22PaymentDetailsModifierC1Ev(%"class.blink::PaymentDetailsModifier"*) unnamed_addr #1

declare void @_ZN5blink11PaymentItemC1Ev(%"class.blink::PaymentItem"*) unnamed_addr #1

declare void @_ZN5blink27PaymentRequestDetailsUpdateC1Ev(%"class.blink::PaymentRequestDetailsUpdate"*) unnamed_addr #1

declare void @_ZN5blink21PaymentShippingOptionC1Ev(%"class.blink::PaymentShippingOption"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #11
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #11
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #11
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #11
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #11
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #11
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17PaymentMethodDataEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector"*, %"class.WTF::Vector"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.9"* null, %"class.blink::Member.9"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17PaymentMethodDataEEEEEmm(i64 %9) #11
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17PaymentMethodDataEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #11
  %13 = ptrtoint %"class.blink::HeapVectorBacking"* %12 to i64
  %14 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking"* %12 to %"class.blink::Member.9"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #11
  %22 = load %"class.blink::Member.9"*, %"class.blink::Member.9"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member.9"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.9"*, %"class.blink::Member.9"** %28, align 8
  %30 = icmp ne %"class.blink::Member.9"* %24, null
  %31 = icmp ne %"class.blink::Member.9"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !53

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member.9"* %24 to i8*
  %37 = bitcast %"class.blink::Member.9"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #11
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member.9"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member.9"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member.9", %"class.blink::Member.9"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17PaymentMethodDataEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.19, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17PaymentMethodDataEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.21, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_17PaymentMethodDataEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_17PaymentMethodDataEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17PaymentMethodDataEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17PaymentMethodDataEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17PaymentMethodDataEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([175 x i8], [175 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17PaymentMethodDataEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17PaymentMethodDataEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.9"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.9", %"class.blink::Member.9"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.9"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17PaymentMethodDataEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17PaymentMethodDataEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17PaymentMethodDataEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PaymentMethodData"*
  %4 = bitcast i8* %1 to void (%"class.blink::PaymentMethodData"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::PaymentMethodData"*, %"class.blink::Visitor"*)**, void (%"class.blink::PaymentMethodData"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::PaymentMethodData"*, %"class.blink::Visitor"*)*, void (%"class.blink::PaymentMethodData"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::PaymentMethodData"*, %"class.blink::Visitor"*)*, void (%"class.blink::PaymentMethodData"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::PaymentMethodData"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_22PaymentDetailsModifierEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.17"*, %"class.WTF::Vector.17"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.20"* null, %"class.blink::Member.20"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_22PaymentDetailsModifierEEEEEmm(i64 %9) #11
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking.1608"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #11
  %13 = ptrtoint %"class.blink::HeapVectorBacking.1608"* %12 to i64
  %14 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking.1608"* %12 to %"class.blink::Member.20"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking.1608", %"class.blink::HeapVectorBacking.1608"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #11
  %22 = load %"class.blink::Member.20"*, %"class.blink::Member.20"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member.20"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.20"*, %"class.blink::Member.20"** %28, align 8
  %30 = icmp ne %"class.blink::Member.20"* %24, null
  %31 = icmp ne %"class.blink::Member.20"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !53

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member.20"* %24 to i8*
  %37 = bitcast %"class.blink::Member.20"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #11
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member.20"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member.20"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member.20", %"class.blink::Member.20"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_22PaymentDetailsModifierEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.19, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1608"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.21, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1608"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1608"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_22PaymentDetailsModifierEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.20"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.20", %"class.blink::Member.20"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.20"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_22PaymentDetailsModifierEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_22PaymentDetailsModifierEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PaymentDetailsModifier"*
  %4 = bitcast i8* %1 to void (%"class.blink::PaymentDetailsModifier"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::PaymentDetailsModifier"*, %"class.blink::Visitor"*)**, void (%"class.blink::PaymentDetailsModifier"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::PaymentDetailsModifier"*, %"class.blink::Visitor"*)*, void (%"class.blink::PaymentDetailsModifier"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::PaymentDetailsModifier"*, %"class.blink::Visitor"*)*, void (%"class.blink::PaymentDetailsModifier"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::PaymentDetailsModifier"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21PaymentShippingOptionEEELj0ENS1_13HeapAllocatorEEC2ERKS6_(%"class.WTF::Vector.27"*, %"class.WTF::Vector.27"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Member.30"* null, %"class.blink::Member.30"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %6, align 8
  %7 = icmp eq i32 %4, 0
  br i1 %7, label %23, label %8

8:                                                ; preds = %2
  %9 = zext i32 %4 to i64
  %10 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21PaymentShippingOptionEEEEEmm(i64 %9) #11
  %11 = lshr i64 %10, 3
  %12 = tail call %"class.blink::HeapVectorBacking.1620"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %11) #11
  %13 = ptrtoint %"class.blink::HeapVectorBacking.1620"* %12 to i64
  %14 = bitcast %"class.WTF::Vector.27"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = trunc i64 %11 to i32
  store i32 %15, i32* %6, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  %18 = bitcast %"class.blink::HeapVectorBacking.1620"* %12 to %"class.blink::Member.30"*
  br i1 %17, label %23, label %19

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::HeapVectorBacking.1620", %"class.blink::HeapVectorBacking.1620"* %12, i64 0, i32 0
  %21 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %20) #11
  %22 = load %"class.blink::Member.30"*, %"class.blink::Member.30"** %5, align 8
  br label %23

23:                                               ; preds = %2, %8, %19
  %24 = phi %"class.blink::Member.30"* [ null, %2 ], [ %18, %8 ], [ %22, %19 ]
  %25 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %1, i64 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %1, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.blink::Member.30"*, %"class.blink::Member.30"** %28, align 8
  %30 = icmp ne %"class.blink::Member.30"* %24, null
  %31 = icmp ne %"class.blink::Member.30"* %29, null
  %32 = and i1 %31, %30
  br i1 %32, label %33, label %53, !prof !53

33:                                               ; preds = %23
  %34 = load i32, i32* %25, align 4
  %35 = zext i32 %34 to i64
  %36 = bitcast %"class.blink::Member.30"* %24 to i8*
  %37 = bitcast %"class.blink::Member.30"* %29 to i8*
  %38 = shl nuw nsw i64 %35, 3
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %36, i8* nonnull %37, i64 %38) #11
  %39 = icmp eq i32 %34, 0
  br i1 %39, label %53, label %40

40:                                               ; preds = %33, %50
  %41 = phi i64 [ %43, %50 ], [ %35, %33 ]
  %42 = phi %"class.blink::Member.30"* [ %51, %50 ], [ %24, %33 ]
  %43 = add nsw i64 %41, -1
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::Member.30"* %42 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %46, %40
  %51 = getelementptr inbounds %"class.blink::Member.30", %"class.blink::Member.30"* %42, i64 1
  %52 = icmp eq i64 %43, 0
  br i1 %52, label %53, label %40

53:                                               ; preds = %50, %23, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21PaymentShippingOptionEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.18, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.19, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.1620"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.21, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.1620"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.1620"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([183 x i8], [183 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_21PaymentShippingOptionEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.30"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.30", %"class.blink::Member.30"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.30"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21PaymentShippingOptionEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21PaymentShippingOptionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PaymentShippingOption"*
  %4 = bitcast i8* %1 to void (%"class.blink::PaymentShippingOption"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::PaymentShippingOption"*, %"class.blink::Visitor"*)**, void (%"class.blink::PaymentShippingOption"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::PaymentShippingOption"*, %"class.blink::Visitor"*)*, void (%"class.blink::PaymentShippingOption"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::PaymentShippingOption"*, %"class.blink::Visitor"*)*, void (%"class.blink::PaymentShippingOption"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::PaymentShippingOption"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([172 x i8], [172 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS1_19HeapMojoWrapperModeE0EE7WrapperEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ContextLifecycleObserver"*
  tail call void @_ZNK5blink24ContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ContextLifecycleObserver"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %0, i64 16
  %4 = getelementptr inbounds i8, i8* %0, i64 56
  %5 = bitcast i8* %4 to %"class.payments::mojom::blink::PaymentHandlerHostProxy"**
  %6 = load %"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %5, align 8
  store %"class.payments::mojom::blink::PaymentHandlerHostProxy"* null, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %5, align 8
  %7 = icmp eq %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %6 to void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)***
  %10 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)**, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %10, i64 1
  %12 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %11, align 8
  tail call void %12(%"class.payments::mojom::blink::PaymentHandlerHostProxy"* nonnull %6) #11
  br label %13

13:                                               ; preds = %1, %8
  %14 = bitcast i8* %3 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %14) #11
  %15 = bitcast i8* %0 to %"class.blink::ContextLifecycleObserver"*
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %15) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7Wrapper5TraceEPNS_7VisitorE(%"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0
  tail call void @_ZNK5blink24ContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ContextLifecycleObserver"* %3, %"class.blink::Visitor"* %1) #11
  ret void
}

declare void @_ZNK5blink24ContextLifecycleObserver5TraceEPNS_7VisitorE(%"class.blink::ContextLifecycleObserver"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperD2Ev(%"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %4, align 8
  store %"class.payments::mojom::blink::PaymentHandlerHostProxy"* null, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %4, align 8
  %6 = icmp eq %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %5 to void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)***
  %9 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)**, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %9, i64 1
  %11 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %10, align 8
  tail call void %11(%"class.payments::mojom::blink::PaymentHandlerHostProxy"* nonnull %5) #11
  br label %12

12:                                               ; preds = %1, %7
  %13 = bitcast %"class.mojo::Remote.1565"* %3 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %13) #11
  %14 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %14) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperD0Ev(%"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7WrapperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %4, align 8
  store %"class.payments::mojom::blink::PaymentHandlerHostProxy"* null, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %4, align 8
  %6 = icmp eq %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %5 to void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)***
  %9 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)**, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %9, i64 1
  %11 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %10, align 8
  tail call void %11(%"class.payments::mojom::blink::PaymentHandlerHostProxy"* nonnull %5) #11
  br label %12

12:                                               ; preds = %1, %7
  %13 = bitcast %"class.mojo::Remote.1565"* %3 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %13) #11
  %14 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 0
  tail call void @_ZN5blink24ContextLifecycleObserverD2Ev(%"class.blink::ContextLifecycleObserver"* %14) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink24ContextLifecycleObserver35IsExecutionContextLifecycleObserverEv(%"class.blink::ContextLifecycleObserver"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14HeapMojoRemoteIN8payments5mojom5blink18PaymentHandlerHostELNS_19HeapMojoWrapperModeE0EE7Wrapper16ContextDestroyedEv(%"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.mojo::internal::InterfacePtrState.1566", align 8
  %3 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 1
  %4 = bitcast %"class.mojo::internal::InterfacePtrState.1566"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 48, i1 false) #11
  %5 = bitcast %"class.mojo::internal::InterfacePtrState.1566"* %2 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %5) #11
  %6 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.1566", %"class.mojo::internal::InterfacePtrState.1566"* %2, i64 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.1567"* %6 to i64*
  %8 = getelementptr inbounds %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper", %"class.blink::HeapMojoRemote<payments::mojom::blink::PaymentHandlerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr.1567"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %7, align 8
  store i64 0, i64* %9, align 8
  %11 = bitcast %"class.mojo::Remote.1565"* %3 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %11, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %5) #11
  %12 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.1566", %"class.mojo::internal::InterfacePtrState.1566"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %12, align 8
  store %"class.payments::mojom::blink::PaymentHandlerHostProxy"* null, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %12, align 8
  %14 = icmp eq %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %13 to void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)***
  %17 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)**, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %17, i64 1
  %19 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %18, align 8
  call void %19(%"class.payments::mojom::blink::PaymentHandlerHostProxy"* nonnull %13) #11
  br label %20

20:                                               ; preds = %1, %15
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #3

declare void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #1

declare void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"*, %"class.mojo::internal::InterfacePtrStateBase"*) local_unnamed_addr #1

declare void @_ZN5blink24ContextLifecycleObserver27SetContextLifecycleNotifierEPNS_24ContextLifecycleNotifierE(%"class.blink::ContextLifecycleObserver"*, %"class.blink::ContextLifecycleNotifier"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN8payments5mojom5blink18PaymentHandlerHostEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote.1565"*, %"class.mojo::PendingRemote"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::InterfacePtrState.1566", align 8
  %5 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = bitcast %"class.mojo::internal::InterfacePtrState.1566"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false) #11
  %10 = bitcast %"class.mojo::internal::InterfacePtrState.1566"* %4 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #11
  %11 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.1566", %"class.mojo::internal::InterfacePtrState.1566"* %4, i64 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.1567"* %11 to i64*
  %13 = getelementptr inbounds %"class.mojo::Remote.1565", %"class.mojo::Remote.1565"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.1567"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = bitcast %"class.mojo::Remote.1565"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %16, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #11
  %17 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.1566", %"class.mojo::internal::InterfacePtrState.1566"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %17, align 8
  store %"class.payments::mojom::blink::PaymentHandlerHostProxy"* null, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %17, align 8
  %19 = icmp eq %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %18, null
  br i1 %19, label %52, label %20

20:                                               ; preds = %8
  %21 = bitcast %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %18 to void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)***
  %22 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)**, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %22, i64 1
  %24 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %23, align 8
  call void %24(%"class.payments::mojom::blink::PaymentHandlerHostProxy"* nonnull %18) #11
  br label %52

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %1, i64 0, i32 0
  %27 = bitcast %"class.mojo::Remote.1565"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"* %27, %"struct.mojo::internal::PendingRemoteState"* %26, %"class.base::SequencedTaskRunner"* %2) #11
  %28 = getelementptr inbounds %"class.mojo::Remote.1565", %"class.mojo::Remote.1565"* %0, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.1567", %"class.std::__1::unique_ptr.1567"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %29, align 8
  %31 = icmp eq %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %30, null
  br i1 %31, label %32, label %62

32:                                               ; preds = %25
  %33 = tail call i8* @_Znwm(i64 8) #12
  %34 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8payments5mojom5blink35PaymentHandlerHostResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = bitcast i8* %33 to %"class.mojo::MessageReceiver"*
  %36 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %27, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %35, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8payments5mojom5blink18PaymentHandlerHost5Name_E, i64 0, i64 0)) #11
  br i1 %36, label %37, label %62

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.mojo::Remote.1565", %"class.mojo::Remote.1565"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = bitcast %"class.mojo::InterfaceEndpointClient"** %38 to %"class.mojo::MessageReceiverWithResponder"**
  %40 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %39, align 8
  %41 = tail call i8* @_Znwm(i64 16) #12
  %42 = bitcast i8* %41 to %"class.payments::mojom::blink::PaymentHandlerHostProxy"*
  tail call void @_ZN8payments5mojom5blink23PaymentHandlerHostProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.payments::mojom::blink::PaymentHandlerHostProxy"* nonnull %42, %"class.mojo::MessageReceiverWithResponder"* %40) #11
  %43 = ptrtoint i8* %41 to i64
  %44 = load %"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %29, align 8
  %45 = bitcast %"class.std::__1::unique_ptr.1567"* %28 to i64*
  store i64 %43, i64* %45, align 8
  %46 = icmp eq %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %44, null
  br i1 %46, label %62, label %47

47:                                               ; preds = %37
  %48 = bitcast %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %44 to void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)***
  %49 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)**, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %49, i64 1
  %51 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %50, align 8
  tail call void %51(%"class.payments::mojom::blink::PaymentHandlerHostProxy"* nonnull %44) #11
  br label %62

52:                                               ; preds = %20, %8
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #11
  %53 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw sub i32* %56, i32 1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %55, i64 -2
  %61 = bitcast %"class.base::RefCountedThreadSafe"* %60 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %61) #11
  br label %62

62:                                               ; preds = %47, %37, %32, %25, %52, %54, %59
  ret void
}

declare void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"*, %"struct.mojo::internal::PendingRemoteState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiver"*, i8*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZN8payments5mojom5blink23PaymentHandlerHostProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.mojo::MessageReceiverWithResponder"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal17InterfacePtrStateIN8payments5mojom5blink18PaymentHandlerHostEE28set_connection_error_handlerEN4base12OnceCallbackIFvvEEE(%"class.mojo::internal::InterfacePtrState.1566"*, %"class.base::OnceCallback"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.1566", %"class.mojo::internal::InterfacePtrState.1566"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.1567", %"class.std::__1::unique_ptr.1567"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %5, align 8
  %7 = icmp eq %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %6, null
  br i1 %7, label %8, label %29

8:                                                ; preds = %2
  %9 = bitcast %"class.mojo::internal::InterfacePtrState.1566"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  %10 = tail call i8* @_Znwm(i64 8) #12
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN8payments5mojom5blink35PaymentHandlerHostResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = bitcast i8* %10 to %"class.mojo::MessageReceiver"*
  %13 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %9, i1 zeroext false, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %12, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN8payments5mojom5blink18PaymentHandlerHost5Name_E, i64 0, i64 0)) #11
  br i1 %13, label %14, label %29

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.1566", %"class.mojo::internal::InterfacePtrState.1566"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %16 = bitcast %"class.mojo::InterfaceEndpointClient"** %15 to %"class.mojo::MessageReceiverWithResponder"**
  %17 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %16, align 8
  %18 = tail call i8* @_Znwm(i64 16) #12
  %19 = bitcast i8* %18 to %"class.payments::mojom::blink::PaymentHandlerHostProxy"*
  tail call void @_ZN8payments5mojom5blink23PaymentHandlerHostProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.payments::mojom::blink::PaymentHandlerHostProxy"* nonnull %19, %"class.mojo::MessageReceiverWithResponder"* %17) #11
  %20 = ptrtoint i8* %18 to i64
  %21 = load %"class.payments::mojom::blink::PaymentHandlerHostProxy"*, %"class.payments::mojom::blink::PaymentHandlerHostProxy"** %5, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.1567"* %4 to i64*
  store i64 %20, i64* %22, align 8
  %23 = icmp eq %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %21, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %14
  %25 = bitcast %"class.payments::mojom::blink::PaymentHandlerHostProxy"* %21 to void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)***
  %26 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)**, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %26, i64 1
  %28 = load void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)*, void (%"class.payments::mojom::blink::PaymentHandlerHostProxy"*)** %27, align 8
  tail call void %28(%"class.payments::mojom::blink::PaymentHandlerHostProxy"* nonnull %21) #11
  br label %29

29:                                               ; preds = %2, %8, %14, %24
  %30 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState.1566", %"class.mojo::internal::InterfacePtrState.1566"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"class.mojo::InterfaceEndpointClient"*, %"class.mojo::InterfaceEndpointClient"** %30, align 8
  %32 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %33 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %34, i64* %35, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %32, align 8
  %36 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %31, i64 0, i32 17, i32 0
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %38 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %36, %"class.base::internal::CallbackBase"* nonnull dereferenceable(8) %37) #11
  %39 = getelementptr inbounds %"class.mojo::InterfaceEndpointClient", %"class.mojo::InterfaceEndpointClient"* %31, i64 0, i32 18, i32 0
  call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %39) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #11
  ret void
}

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19PaymentRequestEventELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_19PaymentRequestEventELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_19PaymentRequestEventELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PaymentRequestEvent"**
  %4 = load %"class.blink::PaymentRequestEvent"*, %"class.blink::PaymentRequestEvent"** %3, align 8
  %5 = icmp eq %"class.blink::PaymentRequestEvent"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::PaymentRequestEvent", %"class.blink::PaymentRequestEvent"* %4, i64 -1, i32 12
  %20 = bitcast %"class.blink::HeapMojoRemote"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::PaymentRequestEvent"* null, %"class.blink::PaymentRequestEvent"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #11
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !2

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #11
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19PaymentRequestEventEFvvEJNS3_14WeakPersistentIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %3 = bitcast void (%"class.base::internal::BindStateBase"*)** %2 to %"class.blink::PaymentRequestEvent"**
  %4 = load %"class.blink::PaymentRequestEvent"*, %"class.blink::PaymentRequestEvent"** %3, align 8
  %5 = icmp eq %"class.blink::PaymentRequestEvent"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %8 = bitcast %"class.blink::PaymentRequestEvent"* %4 to i8*
  %9 = bitcast %"class.base::internal::BindStateBase"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %12 = bitcast void ()** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds i8, i8* %8, i64 %13
  %15 = bitcast i8* %14 to %"class.blink::PaymentRequestEvent"*
  %16 = and i64 %10, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %6
  %19 = bitcast i8* %14 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = add i64 %10, -1
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = bitcast i8* %22 to void (%"class.blink::PaymentRequestEvent"*)**
  %24 = load void (%"class.blink::PaymentRequestEvent"*)*, void (%"class.blink::PaymentRequestEvent"*)** %23, align 8
  br label %27

25:                                               ; preds = %6
  %26 = inttoptr i64 %10 to void (%"class.blink::PaymentRequestEvent"*)*
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi void (%"class.blink::PaymentRequestEvent"*)* [ %24, %18 ], [ %26, %25 ]
  tail call void %28(%"class.blink::PaymentRequestEvent"* %15) #11
  br label %29

29:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19PaymentRequestEventEFvvEJNS2_14WeakPersistentIS3_EEEEC2IS5_JS7_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::WeakPersistent"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink19PaymentRequestEventEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink19PaymentRequestEventEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #11
  %6 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 1, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::WeakPersistent"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState", %"struct.base::internal::BindState"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #11
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !2

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #11
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 4, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !2

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #11
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase.458"**
  store %"class.blink::PersistentBase.458"* %11, %"class.blink::PersistentBase.458"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19PaymentRequestEventELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19PaymentRequestEventEFvvEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #11
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #11
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink19PaymentRequestEventEFvvEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  switch i32 %1, label %9 [
    i32 0, label %3
    i32 1, label %8
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::PaymentRequestEvent"**
  %6 = load %"class.blink::PaymentRequestEvent"*, %"class.blink::PaymentRequestEvent"** %5, align 8
  %7 = icmp eq %"class.blink::PaymentRequestEvent"* %6, null
  br label %9

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %2, %3, %8
  %10 = phi i1 [ true, %8 ], [ %7, %3 ], [ false, %2 ]
  ret i1 %10
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"*) local_unnamed_addr #1

declare void @_ZN5blink21ScriptPromiseResolverC1EPNS_11ScriptStateE(%"class.blink::ScriptPromiseResolver"*, %"class.blink::ScriptState"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21ScriptPromiseResolverEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21ScriptPromiseResolverEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21ScriptPromiseResolverEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21ScriptPromiseResolverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptPromiseResolver"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptPromiseResolver"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptPromiseResolver"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_21ScriptPromiseResolverEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptPromiseResolver"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptPromiseResolver"*)***
  %4 = load void (%"class.blink::ScriptPromiseResolver"*)**, void (%"class.blink::ScriptPromiseResolver"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptPromiseResolver"*)*, void (%"class.blink::ScriptPromiseResolver"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptPromiseResolver"*)*, void (%"class.blink::ScriptPromiseResolver"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptPromiseResolver"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21ScriptPromiseResolverEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA51_KcEEEPS1_DpOT_(i32* dereferenceable(4), [51 x i8]* dereferenceable(51)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #11
  %6 = bitcast i8* %5 to %"class.blink::DOMException"*
  %7 = load i32, i32* %0, align 4
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = getelementptr inbounds [51 x i8], [51 x i8]* %1, i64 0, i64 0
  %10 = icmp eq [51 x i8]* %1, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call i64 @strlen(i8* nonnull %9) #13
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i64 [ %12, %11 ], [ 0, %2 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %9, i64 %14) #11
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %6, i32 %7, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #11
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #11
  br label %32

32:                                               ; preds = %13, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #11
  br label %49

49:                                               ; preds = %32, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  %50 = getelementptr inbounds i8, i8* %5, i64 -4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = or i16 %52, 1
  store atomic i16 %53, i16* %51 release, align 2
  ret %"class.blink::DOMException"* %6
}

declare void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_12DOMExceptionEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, %"class.blink::DOMException"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %134

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %134, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %17, align 8
  %19 = icmp eq %"class.blink::V8PerContextData"* %18, null
  br i1 %19, label %134, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %22 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #11
  %23 = icmp eq %"class.blink::ExecutionContext"* %22, null
  br i1 %23, label %134, label %24

24:                                               ; preds = %20
  %25 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #11
  %26 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %25, i64 0, i32 13
  %27 = load i8, i8* %26, align 4, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %134

29:                                               ; preds = %24
  store i32 %2, i32* %7, align 8
  %30 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %32 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %34 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %34, %"class.v8::Isolate"* %36) #11
  %37 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.v8::Context"*, %"class.v8::Context"** %37, align 8
  %39 = icmp eq %"class.v8::Context"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %29
  %41 = bitcast %"class.blink::ScriptState"* %33 to %"class.v8::internal::Isolate"**
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = bitcast %"class.v8::Context"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %44) #11
  %46 = bitcast i64* %45 to %"class.v8::Context"*
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.v8::Context"* [ %46, %40 ], [ null, %29 ]
  store %"class.v8::Context"* %48, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %48) #11
  %49 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  %50 = load i32, i32* %49, align 4
  store i32 0, i32* %49, align 4
  %51 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %52 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %51, i64 0, i32 0
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #11
  %55 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %53, i32 1) #11
  %56 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %57 = getelementptr inbounds %"class.blink::DOMException", %"class.blink::DOMException"* %1, i64 0, i32 0
  %58 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %59 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %58, i64 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::Context"*, %"class.v8::Context"** %59, align 8
  %61 = icmp eq %"class.v8::Context"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %47
  %63 = bitcast %"class.blink::ScriptState"* %58 to %"class.v8::internal::Isolate"**
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %65 = bitcast %"class.v8::Context"* %60 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %66) #11
  %68 = bitcast i64* %67 to %"class.v8::Context"*
  br label %69

69:                                               ; preds = %47, %62
  %70 = phi %"class.v8::Context"* [ %68, %62 ], [ null, %47 ]
  %71 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %70) #11
  %72 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %73 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %72, i64 0, i32 0
  %74 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %73, align 8
  %75 = icmp eq %"class.blink::DOMException"* %1, null
  br i1 %75, label %76, label %79, !prof !2

76:                                               ; preds = %69
  %77 = ptrtoint %"class.v8::Isolate"* %74 to i64
  %78 = add i64 %77, 176
  br label %95

79:                                               ; preds = %69
  %80 = call %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"* nonnull %57, %"class.v8::Isolate"* %74) #11
  %81 = ptrtoint %"class.v8::Object"* %80 to i64
  %82 = icmp eq %"class.v8::Object"* %80, null
  br i1 %82, label %83, label %95

83:                                               ; preds = %79
  %84 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %71) #11
  %85 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %84) #11
  %86 = bitcast %"class.blink::DOMException"* %1 to %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)***
  %87 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)**, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*** %86, align 8
  %88 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %87, i64 7
  %89 = load %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)*, %"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)** %88, align 8
  %90 = call %"class.v8::Value"* %89(%"class.blink::ScriptWrappable"* nonnull %57, %"class.blink::ScriptState"* %85) #11
  %91 = icmp eq %"class.v8::Value"* %90, null
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %83
  call void @_ZN2v82V812ToLocalEmptyEv() #11
  br label %93

93:                                               ; preds = %92, %83
  %94 = ptrtoint %"class.v8::Value"* %90 to i64
  br label %95

95:                                               ; preds = %76, %79, %93
  %96 = phi i64 [ %78, %76 ], [ %94, %93 ], [ %81, %79 ]
  %97 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.280", %"class.blink::TraceWrapperV8Reference.280"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i64*, i64** %97, align 8
  %99 = icmp eq i64* %98, null
  br i1 %99, label %102, label %100

100:                                              ; preds = %95
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %98) #11
  %101 = bitcast %"class.blink::TraceWrapperV8Reference.280"* %56 to i64*
  store atomic i64 0, i64* %101 monotonic, align 8
  br label %102

102:                                              ; preds = %100, %95
  %103 = icmp eq i64 %96, 0
  br i1 %103, label %110, label %104

104:                                              ; preds = %102
  %105 = inttoptr i64 %96 to i64*
  %106 = bitcast %"class.v8::Isolate"* %53 to %"class.v8::internal::Isolate"*
  %107 = bitcast %"class.blink::TraceWrapperV8Reference.280"* %56 to i64*
  %108 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %106, i64* nonnull %105, i64* %107, i1 zeroext false) #11
  %109 = ptrtoint i64* %108 to i64
  store atomic i64 %109, i64* %107 monotonic, align 8
  br label %110

110:                                              ; preds = %102, %104
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.280"* dereferenceable(8) %56) #11
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #11
  %111 = icmp eq i32* %49, null
  br i1 %111, label %113, label %112

112:                                              ; preds = %110
  store i32 %50, i32* %49, align 4
  br label %113

113:                                              ; preds = %110, %112
  %114 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #11
  %115 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %114) #11
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #11
  br label %132

117:                                              ; preds = %113
  %118 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #11
  %119 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %120 = ptrtoint i64* %4 to i64
  %121 = sub i64 %119, %120
  %122 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %123 = icmp ult i64 %121, %122
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #11
  br i1 %123, label %126, label %124, !prof !53

124:                                              ; preds = %117
  %125 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  br label %126

126:                                              ; preds = %117, %124
  %127 = phi i32* [ %125, %124 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %117 ]
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %131, label %130

130:                                              ; preds = %126
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #11
  br label %132

131:                                              ; preds = %126
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #11
  br label %132

132:                                              ; preds = %131, %130, %116
  %133 = load %"class.v8::Context"*, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %133) #11
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #11
  br label %134

134:                                              ; preds = %24, %16, %10, %20, %3, %132
  ret void
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"*) local_unnamed_addr #1

declare void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"*, %"class.v8::Isolate"*, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"*) local_unnamed_addr #1

declare void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"*) local_unnamed_addr #1

declare dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Object"* @_ZN5blink12DOMDataStore10GetWrapperEPNS_15ScriptWrappableEPN2v87IsolateE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %6 = ptrtoint i64* %3 to i64
  %7 = sub i64 %5, %6
  %8 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %9 = icmp ult i64 %7, %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  %10 = load i32, i32* @_ZN5blink15DOMWrapperWorld41number_of_non_main_worlds_in_main_thread_E, align 4
  %11 = icmp eq i32 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %15 = bitcast %"class.blink::TraceWrapperV8Reference"* %14 to %"class.v8::Object"**
  %16 = load %"class.v8::Object"*, %"class.v8::Object"** %15, align 8
  %17 = icmp eq %"class.v8::Object"* %16, null
  br i1 %17, label %68, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.v8::Object"* %16 to i64*
  %20 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %21 = load i64, i64* %19, align 8
  %22 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %20, i64 %21) #11
  %23 = bitcast i64* %22 to %"class.v8::Object"*
  br label %68

24:                                               ; preds = %2
  %25 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #11
  %26 = call %"class.blink::ScriptState"* @_ZN5blink11ScriptState4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %25) #11
  %27 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %28, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::DOMDataStore"*, %"class.blink::DOMDataStore"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 1
  %32 = load i8, i8* %31, align 8, !range !3
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %45, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"class.blink::ScriptWrappable", %"class.blink::ScriptWrappable"* %0, i64 0, i32 1
  %36 = bitcast %"class.blink::TraceWrapperV8Reference"* %35 to %"class.v8::Object"**
  %37 = load %"class.v8::Object"*, %"class.v8::Object"** %36, align 8
  %38 = icmp eq %"class.v8::Object"* %37, null
  br i1 %38, label %68, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::Object"* %37 to i64*
  %41 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %42 = load i64, i64* %40, align 8
  %43 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %41, i64 %42) #11
  %44 = bitcast i64* %43 to %"class.v8::Object"*
  br label %68

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0
  %47 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0
  %48 = call { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.53"* %47, %"class.blink::ScriptWrappable"* %0) #11
  %49 = extractvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %48, 0
  %50 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %46, i64 0, i32 0, i32 0
  %51 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::DOMDataStore", %"class.blink::DOMDataStore"* %30, i64 0, i32 3, i32 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %51, i64 %54
  %56 = icmp eq %"struct.WTF::KeyValuePair"* %49, %55
  br i1 %56, label %68, label %57

57:                                               ; preds = %45
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %49, i64 0, i32 1
  %59 = bitcast %"class.blink::TraceWrapperV8Reference"* %58 to %"class.v8::Object"**
  %60 = load %"class.v8::Object"*, %"class.v8::Object"** %59, align 8
  %61 = icmp eq %"class.v8::Object"* %60, null
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.v8::Object"* %60 to i64*
  %64 = bitcast %"class.v8::Isolate"* %1 to %"class.v8::internal::Isolate"*
  %65 = load i64, i64* %63, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %65) #11
  %67 = bitcast i64* %66 to %"class.v8::Object"*
  br label %68

68:                                               ; preds = %62, %57, %45, %39, %34, %18, %13
  %69 = phi %"class.v8::Object"* [ %23, %18 ], [ null, %13 ], [ %44, %39 ], [ null, %34 ], [ %67, %62 ], [ null, %57 ], [ null, %45 ]
  ret %"class.v8::Object"* %69
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_15ScriptWrappableEEENS_12KeyValuePairIS5_NS1_23TraceWrapperV8ReferenceIN2v86ObjectEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.53"*, %"class.blink::ScriptWrappable"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ScriptWrappable"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.53", %"class.WTF::HashTable.53"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.53", %"class.WTF::HashTable.53"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %34, align 8
  %36 = icmp eq %"class.blink::ScriptWrappable"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %56 = icmp eq %"class.blink::ScriptWrappable"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %63, align 8
  %65 = icmp eq %"class.blink::ScriptWrappable"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } undef, %"struct.WTF::KeyValuePair"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %78, %"struct.WTF::KeyValuePair"* %77, 1
  ret { %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"* } %79
}

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1636", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.1636"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1636", %"class.WTF::StringTypeAdapter.1636"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.1636"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1636"* nonnull %4, i8* %14) #11
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.472"* %9) #11
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.472"* %9) #11
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %25, i8* %26) #11
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #11
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %41, i8* %42) #11
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #11
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1636", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1637", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1636", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1636"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1636"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1636"* nonnull %5, i8* %10) #11
  %11 = bitcast %"class.WTF::StringTypeAdapter.1636"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1636", %"class.WTF::StringTypeAdapter.1636"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #11
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1636"* nonnull %3, i8* %14) #11
  %15 = bitcast %"class.WTF::StringTypeAdapter.1637"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1637", %"class.WTF::StringTypeAdapter.1637"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1637", %"class.WTF::StringTypeAdapter.1637"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #11
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1637"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1636"* nonnull %3, i8* %1) #11
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1637", %"class.WTF::StringTypeAdapter.1637"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1638"* nonnull %34, i8* %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.472"* %6) #11
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1636"* nonnull %5, i8* %40) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1636", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1637", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1636", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.1636"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.1636"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1636"* nonnull %5, i8* %10) #11
  %11 = bitcast %"class.WTF::StringTypeAdapter.1636"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1636", %"class.WTF::StringTypeAdapter.1636"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #11
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1636"* nonnull %3, i8* %14) #11
  %15 = bitcast %"class.WTF::StringTypeAdapter.1637"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1637", %"class.WTF::StringTypeAdapter.1637"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1637", %"class.WTF::StringTypeAdapter.1637"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #11
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.1637"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1636"* nonnull %3, i16* %1) #11
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1637", %"class.WTF::StringTypeAdapter.1637"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1638"* nonnull %34, i16* %37) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #11
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.472"* %6) #11
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1636"* nonnull %5, i16* %40) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1636"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.472"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1636", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.1636"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1636", %"class.WTF::StringTypeAdapter.1636"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.472", %"class.WTF::StringAppend.472"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.1636"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1636"* nonnull %4, i8* %13) #11
  %14 = getelementptr inbounds %"class.WTF::StringAppend.472", %"class.WTF::StringAppend.472"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i8* %30, i8* %31) #11
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #11
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #11
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.24, i64 0, i64 0), i8* %45, i8* %46) #11
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.23, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #11
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #11
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1636"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1638"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1636"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1638"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIN2v85LocalINS2_5ValueEEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, %"class.v8::Value"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %108

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %108, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %17, align 8
  %19 = icmp eq %"class.blink::V8PerContextData"* %18, null
  br i1 %19, label %108, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %22 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #11
  %23 = icmp eq %"class.blink::ExecutionContext"* %22, null
  br i1 %23, label %108, label %24

24:                                               ; preds = %20
  %25 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #11
  %26 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %25, i64 0, i32 13
  %27 = load i8, i8* %26, align 4, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %108

29:                                               ; preds = %24
  store i32 %2, i32* %7, align 8
  %30 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %32 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %34 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %34, %"class.v8::Isolate"* %36) #11
  %37 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.v8::Context"*, %"class.v8::Context"** %37, align 8
  %39 = icmp eq %"class.v8::Context"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %29
  %41 = bitcast %"class.blink::ScriptState"* %33 to %"class.v8::internal::Isolate"**
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = bitcast %"class.v8::Context"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %44) #11
  %46 = bitcast i64* %45 to %"class.v8::Context"*
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.v8::Context"* [ %46, %40 ], [ null, %29 ]
  store %"class.v8::Context"* %48, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %48) #11
  %49 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  %50 = load i32, i32* %49, align 4
  store i32 0, i32* %49, align 4
  %51 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %52 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %51, i64 0, i32 0
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #11
  %55 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %53, i32 1) #11
  %56 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %57 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %58 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %57, i64 0, i32 1, i32 0, i32 0, i32 0
  %59 = load %"class.v8::Context"*, %"class.v8::Context"** %58, align 8
  %60 = icmp eq %"class.v8::Context"* %59, null
  br i1 %60, label %68, label %61

61:                                               ; preds = %47
  %62 = bitcast %"class.blink::ScriptState"* %57 to %"class.v8::internal::Isolate"**
  %63 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %62, align 8
  %64 = bitcast %"class.v8::Context"* %59 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %63, i64 %65) #11
  %67 = bitcast i64* %66 to %"class.v8::Context"*
  br label %68

68:                                               ; preds = %47, %61
  %69 = phi %"class.v8::Context"* [ %67, %61 ], [ null, %47 ]
  %70 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %69) #11
  %71 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.280", %"class.blink::TraceWrapperV8Reference.280"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = icmp eq i64* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %68
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %72) #11
  %75 = bitcast %"class.blink::TraceWrapperV8Reference.280"* %56 to i64*
  store atomic i64 0, i64* %75 monotonic, align 8
  br label %76

76:                                               ; preds = %74, %68
  %77 = icmp eq %"class.v8::Value"* %1, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.v8::Value"* %1 to i64*
  %80 = bitcast %"class.v8::Isolate"* %53 to %"class.v8::internal::Isolate"*
  %81 = bitcast %"class.blink::TraceWrapperV8Reference.280"* %56 to i64*
  %82 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %80, i64* nonnull %79, i64* %81, i1 zeroext false) #11
  %83 = ptrtoint i64* %82 to i64
  store atomic i64 %83, i64* %81 monotonic, align 8
  br label %84

84:                                               ; preds = %76, %78
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.280"* dereferenceable(8) %56) #11
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #11
  %85 = icmp eq i32* %49, null
  br i1 %85, label %87, label %86

86:                                               ; preds = %84
  store i32 %50, i32* %49, align 4
  br label %87

87:                                               ; preds = %84, %86
  %88 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #11
  %89 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %88) #11
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #11
  br label %106

91:                                               ; preds = %87
  %92 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #11
  %93 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %94 = ptrtoint i64* %4 to i64
  %95 = sub i64 %93, %94
  %96 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %97 = icmp ult i64 %95, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #11
  br i1 %97, label %100, label %98, !prof !53

98:                                               ; preds = %91
  %99 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  br label %100

100:                                              ; preds = %91, %98
  %101 = phi i32* [ %99, %98 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %91 ]
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %105, label %104

104:                                              ; preds = %100
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #11
  br label %106

105:                                              ; preds = %100
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #11
  br label %106

106:                                              ; preds = %105, %104, %90
  %107 = load %"class.v8::Context"*, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %107) #11
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #11
  br label %108

108:                                              ; preds = %24, %16, %10, %20, %3, %106
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIN2v85LocalINS2_9PrimitiveEEEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, %"class.v8::Primitive"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %108

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %108, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %17, align 8
  %19 = icmp eq %"class.blink::V8PerContextData"* %18, null
  br i1 %19, label %108, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %22 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #11
  %23 = icmp eq %"class.blink::ExecutionContext"* %22, null
  br i1 %23, label %108, label %24

24:                                               ; preds = %20
  %25 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #11
  %26 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %25, i64 0, i32 13
  %27 = load i8, i8* %26, align 4, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %108

29:                                               ; preds = %24
  store i32 %2, i32* %7, align 8
  %30 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %32 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %34 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %34, %"class.v8::Isolate"* %36) #11
  %37 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.v8::Context"*, %"class.v8::Context"** %37, align 8
  %39 = icmp eq %"class.v8::Context"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %29
  %41 = bitcast %"class.blink::ScriptState"* %33 to %"class.v8::internal::Isolate"**
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = bitcast %"class.v8::Context"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %44) #11
  %46 = bitcast i64* %45 to %"class.v8::Context"*
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.v8::Context"* [ %46, %40 ], [ null, %29 ]
  store %"class.v8::Context"* %48, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %48) #11
  %49 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  %50 = load i32, i32* %49, align 4
  store i32 0, i32* %49, align 4
  %51 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %52 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %51, i64 0, i32 0
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #11
  %55 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %53, i32 1) #11
  %56 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %57 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %58 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %57, i64 0, i32 1, i32 0, i32 0, i32 0
  %59 = load %"class.v8::Context"*, %"class.v8::Context"** %58, align 8
  %60 = icmp eq %"class.v8::Context"* %59, null
  br i1 %60, label %68, label %61

61:                                               ; preds = %47
  %62 = bitcast %"class.blink::ScriptState"* %57 to %"class.v8::internal::Isolate"**
  %63 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %62, align 8
  %64 = bitcast %"class.v8::Context"* %59 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %63, i64 %65) #11
  %67 = bitcast i64* %66 to %"class.v8::Context"*
  br label %68

68:                                               ; preds = %47, %61
  %69 = phi %"class.v8::Context"* [ %67, %61 ], [ null, %47 ]
  %70 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %69) #11
  %71 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.280", %"class.blink::TraceWrapperV8Reference.280"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = icmp eq i64* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %68
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %72) #11
  %75 = bitcast %"class.blink::TraceWrapperV8Reference.280"* %56 to i64*
  store atomic i64 0, i64* %75 monotonic, align 8
  br label %76

76:                                               ; preds = %74, %68
  %77 = icmp eq %"class.v8::Primitive"* %1, null
  br i1 %77, label %84, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.v8::Primitive"* %1 to i64*
  %80 = bitcast %"class.v8::Isolate"* %53 to %"class.v8::internal::Isolate"*
  %81 = bitcast %"class.blink::TraceWrapperV8Reference.280"* %56 to i64*
  %82 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %80, i64* nonnull %79, i64* %81, i1 zeroext false) #11
  %83 = ptrtoint i64* %82 to i64
  store atomic i64 %83, i64* %81 monotonic, align 8
  br label %84

84:                                               ; preds = %76, %78
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.280"* dereferenceable(8) %56) #11
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #11
  %85 = icmp eq i32* %49, null
  br i1 %85, label %87, label %86

86:                                               ; preds = %84
  store i32 %50, i32* %49, align 4
  br label %87

87:                                               ; preds = %84, %86
  %88 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #11
  %89 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %88) #11
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #11
  br label %106

91:                                               ; preds = %87
  %92 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #11
  %93 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %94 = ptrtoint i64* %4 to i64
  %95 = sub i64 %93, %94
  %96 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %97 = icmp ult i64 %95, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #11
  br i1 %97, label %100, label %98, !prof !53

98:                                               ; preds = %91
  %99 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  br label %100

100:                                              ; preds = %91, %98
  %101 = phi i32* [ %99, %98 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %91 ]
  %102 = load i32, i32* %101, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %105, label %104

104:                                              ; preds = %100
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #11
  br label %106

105:                                              ; preds = %100
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #11
  br label %106

106:                                              ; preds = %105, %104, %90
  %107 = load %"class.v8::Context"*, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %107) #11
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #11
  br label %108

108:                                              ; preds = %24, %16, %10, %20, %3, %106
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA53_KcEEEPS1_DpOT_(i32* dereferenceable(4), [53 x i8]* dereferenceable(53)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #11
  %6 = bitcast i8* %5 to %"class.blink::DOMException"*
  %7 = load i32, i32* %0, align 4
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = getelementptr inbounds [53 x i8], [53 x i8]* %1, i64 0, i64 0
  %10 = icmp eq [53 x i8]* %1, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call i64 @strlen(i8* nonnull %9) #13
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i64 [ %12, %11 ], [ 0, %2 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %9, i64 %14) #11
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %6, i32 %7, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #11
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #11
  br label %32

32:                                               ; preds = %13, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #11
  br label %49

49:                                               ; preds = %32, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  %50 = getelementptr inbounds i8, i8* %5, i64 -4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = or i16 %52, 1
  store atomic i16 %53, i16* %51 release, align 2
  ret %"class.blink::DOMException"* %6
}

declare void @_ZN8payments5mojom5blink24PaymentHandlerMethodDataC1Ev(%"class.payments::mojom::blink::PaymentHandlerMethodData"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo16InlinedStructPtrIN8payments5mojom5blink24PaymentHandlerMethodDataEE4SwapEPS5_(%"class.mojo::InlinedStructPtr.1430"*, %"class.mojo::InlinedStructPtr.1430"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.payments::mojom::blink::PaymentHandlerMethodData", align 8
  %4 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1430", %"class.mojo::InlinedStructPtr.1430"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1430", %"class.mojo::InlinedStructPtr.1430"* %1, i64 0, i32 0
  %6 = bitcast %"class.payments::mojom::blink::PaymentHandlerMethodData"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.payments::mojom::blink::PaymentHandlerMethodData", %"class.payments::mojom::blink::PaymentHandlerMethodData"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.payments::mojom::blink::PaymentHandlerMethodData", %"class.payments::mojom::blink::PaymentHandlerMethodData"* %3, i64 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1430", %"class.mojo::InlinedStructPtr.1430"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.payments::mojom::blink::PaymentHandlerMethodData", %"class.payments::mojom::blink::PaymentHandlerMethodData"* %3, i64 0, i32 1
  %11 = bitcast %"class.WTF::String"* %10 to i64*
  store i64 -6148914691236517206, i64* %11, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %7, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %31, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %21 to i33
  %23 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %22, i33 1) #11
  %24 = extractvalue { i33, i1 } %23, 1
  %25 = extractvalue { i33, i1 } %23, 0
  %26 = icmp slt i33 %25, 0
  %27 = or i1 %24, %26
  br i1 %27, label %28, label %29, !prof !2

28:                                               ; preds = %19
  tail call void @llvm.trap() #11
  unreachable

29:                                               ; preds = %19
  %30 = trunc i33 %25 to i32
  store i32 %30, i32* %20, align 4
  br label %31

31:                                               ; preds = %29, %14, %2
  %32 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1430", %"class.mojo::InlinedStructPtr.1430"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %8, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #11
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %40
  tail call void @llvm.trap() #11
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %52

52:                                               ; preds = %31, %35, %50
  %53 = tail call dereferenceable(16) %"class.payments::mojom::blink::PaymentHandlerMethodData"* @_ZN8payments5mojom5blink24PaymentHandlerMethodDataaSERKS2_(%"class.payments::mojom::blink::PaymentHandlerMethodData"* %4, %"class.payments::mojom::blink::PaymentHandlerMethodData"* dereferenceable(16) %5) #11
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %73, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i33
  %65 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #11
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !2

70:                                               ; preds = %61
  tail call void @llvm.trap() #11
  unreachable

71:                                               ; preds = %61
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %62, align 4
  br label %73

73:                                               ; preds = %71, %56, %52
  %74 = ptrtoint %"class.WTF::StringImpl"* %54 to i64
  %75 = bitcast %"class.mojo::InlinedStructPtr.1430"* %1 to i64*
  %76 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1430", %"class.mojo::InlinedStructPtr.1430"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  store i64 %74, i64* %75, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #11
  br label %92

92:                                               ; preds = %91, %88, %73
  %93 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1430", %"class.mojo::InlinedStructPtr.1430"* %1, i64 0, i32 0, i32 1
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %113, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %113

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = zext i32 %103 to i33
  %105 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %104, i33 1) #11
  %106 = extractvalue { i33, i1 } %105, 1
  %107 = extractvalue { i33, i1 } %105, 0
  %108 = icmp slt i33 %107, 0
  %109 = or i1 %106, %108
  br i1 %109, label %110, label %111, !prof !2

110:                                              ; preds = %101
  tail call void @llvm.trap() #11
  unreachable

111:                                              ; preds = %101
  %112 = trunc i33 %107 to i32
  store i32 %112, i32* %102, align 4
  br label %113

113:                                              ; preds = %111, %96, %92
  %114 = ptrtoint %"class.WTF::StringImpl"* %94 to i64
  %115 = bitcast %"class.WTF::String"* %93 to i64*
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %93, i64 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  store i64 %114, i64* %115, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #11
  br label %132

132:                                              ; preds = %113, %128, %131
  call void @_ZN8payments5mojom5blink24PaymentHandlerMethodDataD1Ev(%"class.payments::mojom::blink::PaymentHandlerMethodData"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  %133 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1430", %"class.mojo::InlinedStructPtr.1430"* %0, i64 0, i32 1
  %134 = getelementptr inbounds %"class.mojo::InlinedStructPtr.1430", %"class.mojo::InlinedStructPtr.1430"* %1, i64 0, i32 1
  %135 = load i32, i32* %133, align 4
  %136 = load i32, i32* %134, align 4
  store i32 %136, i32* %133, align 4
  store i32 %135, i32* %134, align 4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.payments::mojom::blink::PaymentHandlerMethodData"* @_ZN8payments5mojom5blink24PaymentHandlerMethodDataaSERKS2_(%"class.payments::mojom::blink::PaymentHandlerMethodData"*, %"class.payments::mojom::blink::PaymentHandlerMethodData"* dereferenceable(16)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.payments::mojom::blink::PaymentHandlerMethodData", %"class.payments::mojom::blink::PaymentHandlerMethodData"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #11
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %11
  tail call void @llvm.trap() #11
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %21, %6, %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %4 to i64
  %25 = bitcast %"class.payments::mojom::blink::PaymentHandlerMethodData"* %0 to i64*
  %26 = getelementptr inbounds %"class.payments::mojom::blink::PaymentHandlerMethodData", %"class.payments::mojom::blink::PaymentHandlerMethodData"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #11
  br label %42

42:                                               ; preds = %23, %38, %41
  %43 = getelementptr inbounds %"class.payments::mojom::blink::PaymentHandlerMethodData", %"class.payments::mojom::blink::PaymentHandlerMethodData"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.payments::mojom::blink::PaymentHandlerMethodData", %"class.payments::mojom::blink::PaymentHandlerMethodData"* %1, i64 0, i32 1, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #11
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  tail call void @llvm.trap() #11
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %62, %47, %42
  %65 = ptrtoint %"class.WTF::StringImpl"* %45 to i64
  %66 = bitcast %"class.WTF::String"* %43 to i64*
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %43, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 %65, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #11
  br label %83

83:                                               ; preds = %64, %79, %82
  ret %"class.payments::mojom::blink::PaymentHandlerMethodData"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS3_14WeakPersistentIS4_EEEEEFvSB_EE7RunOnceEPNS0_13BindStateBaseEOSB_(%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr.1433"* dereferenceable(8)) #0 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr.1433", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::PaymentRequestEvent"**
  %6 = load %"class.blink::PaymentRequestEvent"*, %"class.blink::PaymentRequestEvent"** %5, align 8
  %7 = icmp eq %"class.blink::PaymentRequestEvent"* %6, null
  br i1 %7, label %41, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %10 = bitcast %"class.blink::PaymentRequestEvent"* %6 to i8*
  %11 = bitcast %"class.base::internal::BindStateBase"* %9 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %14 = bitcast void ()** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.mojo::StructPtr.1433"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds i8, i8* %10, i64 %15
  %18 = bitcast i8* %17 to %"class.blink::PaymentRequestEvent"*
  %19 = and i64 %12, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %8
  %22 = bitcast i8* %17 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = add i64 %12, -1
  %25 = getelementptr i8, i8* %23, i64 %24
  %26 = bitcast i8* %25 to void (%"class.blink::PaymentRequestEvent"*, %"class.mojo::StructPtr.1433"*)**
  %27 = load void (%"class.blink::PaymentRequestEvent"*, %"class.mojo::StructPtr.1433"*)*, void (%"class.blink::PaymentRequestEvent"*, %"class.mojo::StructPtr.1433"*)** %26, align 8
  br label %30

28:                                               ; preds = %8
  %29 = inttoptr i64 %12 to void (%"class.blink::PaymentRequestEvent"*, %"class.mojo::StructPtr.1433"*)*
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi void (%"class.blink::PaymentRequestEvent"*, %"class.mojo::StructPtr.1433"*)* [ %27, %21 ], [ %29, %28 ]
  %32 = bitcast %"class.mojo::StructPtr.1433"* %3 to i64*
  %33 = getelementptr inbounds %"class.mojo::StructPtr.1433", %"class.mojo::StructPtr.1433"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.mojo::StructPtr.1433"* %1 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  store i64 0, i64* %34, align 8
  call void %31(%"class.blink::PaymentRequestEvent"* %18, %"class.mojo::StructPtr.1433"* nonnull %3) #11
  %36 = load %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %33, align 8
  store %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* null, %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"** %33, align 8
  %37 = icmp eq %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %30
  call void @_ZN8payments5mojom5blink27PaymentRequestDetailsUpdateD1Ev(%"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* nonnull %36) #11
  %39 = bitcast %"class.payments::mojom::blink::PaymentRequestDetailsUpdate"* %36 to i8*
  call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %38, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %41

41:                                               ; preds = %2, %40
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8payments5mojom5blink27PaymentRequestDetailsUpdateD1Ev(%"class.payments::mojom::blink::PaymentRequestDetailsUpdate"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS2_14WeakPersistentIS3_EEEEC2ISC_JSE_EEENSt3__117integral_constantIbLb1EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.1639"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::WeakPersistent"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState.1639", %"struct.base::internal::BindState.1639"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSH_21CancellationQueryModeE) #11
  %6 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"struct.base::internal::BindState.1639", %"struct.base::internal::BindState.1639"* %0, i64 0, i32 1, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState.1639", %"struct.base::internal::BindState.1639"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::WeakPersistent"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState.1639", %"struct.base::internal::BindState.1639"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #11
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !2

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #11
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 4, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !2

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #11
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase.458"**
  store %"class.blink::PersistentBase.458"* %11, %"class.blink::PersistentBase.458"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19PaymentRequestEventELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS2_14WeakPersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #11
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !2

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #11
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS3_14WeakPersistentIS4_EEEEEEEbPKNS0_13BindStateBaseENSH_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  switch i32 %1, label %9 [
    i32 0, label %3
    i32 1, label %8
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.blink::PaymentRequestEvent"**
  %6 = load %"class.blink::PaymentRequestEvent"*, %"class.blink::PaymentRequestEvent"** %5, align 8
  %7 = icmp eq %"class.blink::PaymentRequestEvent"* %6, null
  br label %9

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %2, %3, %8
  %10 = phi i1 [ true, %8 ], [ %7, %3 ], [ false, %2 ]
  ret i1 %10
}

declare void @_ZN4mojo13TypeConverterINS_9StructPtrIN8payments5mojom5blink14PaymentAddressEEEPN5blink11AddressInitEE7ConvertEPKS8_(%"class.mojo::StructPtr.1483"* sret, %"class.blink::AddressInit"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21PaymentCurrencyAmountEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PaymentCurrencyAmount"*
  %4 = bitcast i8* %1 to void (%"class.blink::PaymentCurrencyAmount"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::PaymentCurrencyAmount"*, %"class.blink::Visitor"*)**, void (%"class.blink::PaymentCurrencyAmount"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::PaymentCurrencyAmount"*, %"class.blink::Visitor"*)*, void (%"class.blink::PaymentCurrencyAmount"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::PaymentCurrencyAmount"*, %"class.blink::Visitor"*)*, void (%"class.blink::PaymentCurrencyAmount"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::PaymentCurrencyAmount"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14PaymentOptionsEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::PaymentOptions"*
  %4 = bitcast i8* %1 to void (%"class.blink::PaymentOptions"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::PaymentOptions"*, %"class.blink::Visitor"*)**, void (%"class.blink::PaymentOptions"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::PaymentOptions"*, %"class.blink::Visitor"*)*, void (%"class.blink::PaymentOptions"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::PaymentOptions"*, %"class.blink::Visitor"*)*, void (%"class.blink::PaymentOptions"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::PaymentOptions"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19RespondWithObserverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::RespondWithObserver"*
  %4 = bitcast i8* %1 to void (%"class.blink::RespondWithObserver"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::RespondWithObserver"*, %"class.blink::Visitor"*)**, void (%"class.blink::RespondWithObserver"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::RespondWithObserver"*, %"class.blink::Visitor"*)*, void (%"class.blink::RespondWithObserver"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::RespondWithObserver"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_22PaymentDetailsModifierEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.17"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !53

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.20"*, %"class.blink::Member.20"** %8, align 8
  %10 = icmp eq %"class.blink::Member.20"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_22PaymentDetailsModifierEEEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1608"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1608"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1608", %"class.blink::HeapVectorBacking.1608"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.20"*, %"class.blink::Member.20"** %8, align 8
  %26 = icmp eq %"class.blink::Member.20"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.20"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.26, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_22PaymentDetailsModifierEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.17"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_22PaymentDetailsModifierEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.17"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.17"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_22PaymentDetailsModifierEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1608"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_22PaymentDetailsModifierEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1608"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.20"*, %"class.blink::Member.20"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1608"* %17, null
  %23 = icmp ne %"class.blink::Member.20"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.20"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !53

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.17"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1608", %"class.blink::HeapVectorBacking.1608"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector.17"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1608", %"class.blink::HeapVectorBacking.1608"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21PaymentShippingOptionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.27"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !53

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.30"*, %"class.blink::Member.30"** %8, align 8
  %10 = icmp eq %"class.blink::Member.30"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21PaymentShippingOptionEEEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.1620"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking.1620"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.27"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.1620", %"class.blink::HeapVectorBacking.1620"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.30"*, %"class.blink::Member.30"** %8, align 8
  %26 = icmp eq %"class.blink::Member.30"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.30"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.26, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_21PaymentShippingOptionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.27"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_21PaymentShippingOptionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.27"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.27"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.27"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_21PaymentShippingOptionEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.1620"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_21PaymentShippingOptionEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking.1620"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.30"*, %"class.blink::Member.30"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.1620"* %17, null
  %23 = icmp ne %"class.blink::Member.30"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.30"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !53

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.27"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.1620", %"class.blink::HeapVectorBacking.1620"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector.27"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector.27"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.1620", %"class.blink::HeapVectorBacking.1620"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ScriptPromiseResolver15ResolveOrRejectIPNS_27PaymentRequestDetailsUpdateEEEvT_NS0_15ResolutionStateE(%"class.blink::ScriptPromiseResolver"*, %"class.blink::PaymentRequestDetailsUpdate"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca i64, align 8
  %5 = alloca %"class.blink::ScriptState::Scope", align 8
  %6 = alloca %"class.v8::MicrotasksScope", align 8
  %7 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %125

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.v8::Context"*, %"class.v8::Context"** %13, align 8
  %15 = icmp eq %"class.v8::Context"* %14, null
  br i1 %15, label %125, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %12, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::V8PerContextData"*, %"class.blink::V8PerContextData"** %17, align 8
  %19 = icmp eq %"class.blink::V8PerContextData"* %18, null
  br i1 %19, label %125, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::ScriptPromiseResolver"* %0 to %"class.blink::ExecutionContextLifecycleObserver"*
  %22 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #11
  %23 = icmp eq %"class.blink::ExecutionContext"* %22, null
  br i1 %23, label %125, label %24

24:                                               ; preds = %20
  %25 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #11
  %26 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %25, i64 0, i32 13
  %27 = load i8, i8* %26, align 4, !range !3
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %125

29:                                               ; preds = %24
  store i32 %2, i32* %7, align 8
  %30 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 1, i32 0
  %32 = bitcast %"class.blink::ScriptState::Scope"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false)
  %33 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %34 = getelementptr inbounds %"class.blink::ScriptState::Scope", %"class.blink::ScriptState::Scope"* %5, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 0
  %36 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %35, align 8
  call void @_ZN2v811HandleScopeC1EPNS_7IsolateE(%"class.v8::HandleScope"* nonnull %34, %"class.v8::Isolate"* %36) #11
  %37 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.v8::Context"*, %"class.v8::Context"** %37, align 8
  %39 = icmp eq %"class.v8::Context"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %29
  %41 = bitcast %"class.blink::ScriptState"* %33 to %"class.v8::internal::Isolate"**
  %42 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %41, align 8
  %43 = bitcast %"class.v8::Context"* %38 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %44) #11
  %46 = bitcast i64* %45 to %"class.v8::Context"*
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.v8::Context"* [ %46, %40 ], [ null, %29 ]
  store %"class.v8::Context"* %48, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %48) #11
  %49 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  %50 = load i32, i32* %49, align 4
  store i32 0, i32* %49, align 4
  %51 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %52 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %51, i64 0, i32 0
  %53 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %52, align 8
  %54 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #11
  %55 = bitcast %"class.v8::MicrotasksScope"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  call void @_ZN2v815MicrotasksScopeC1EPNS_7IsolateENS0_4TypeE(%"class.v8::MicrotasksScope"* nonnull %6, %"class.v8::Isolate"* %53, i32 1) #11
  %56 = getelementptr inbounds %"class.blink::ScriptPromiseResolver", %"class.blink::ScriptPromiseResolver"* %0, i64 0, i32 6
  %57 = getelementptr inbounds %"class.blink::PaymentRequestDetailsUpdate", %"class.blink::PaymentRequestDetailsUpdate"* %1, i64 0, i32 0
  %58 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %59 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %58, i64 0, i32 1, i32 0, i32 0, i32 0
  %60 = load %"class.v8::Context"*, %"class.v8::Context"** %59, align 8
  %61 = icmp eq %"class.v8::Context"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %47
  %63 = bitcast %"class.blink::ScriptState"* %58 to %"class.v8::internal::Isolate"**
  %64 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %63, align 8
  %65 = bitcast %"class.v8::Context"* %60 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %64, i64 %66) #11
  %68 = bitcast i64* %67 to %"class.v8::Context"*
  br label %69

69:                                               ; preds = %47, %62
  %70 = phi %"class.v8::Context"* [ %68, %62 ], [ null, %47 ]
  %71 = call %"class.v8::Object"* @_ZN2v87Context6GlobalEv(%"class.v8::Context"* %70) #11
  %72 = load %"class.blink::ScriptState"*, %"class.blink::ScriptState"** %11, align 8
  %73 = getelementptr inbounds %"class.blink::ScriptState", %"class.blink::ScriptState"* %72, i64 0, i32 0
  %74 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %73, align 8
  %75 = icmp eq %"class.blink::PaymentRequestDetailsUpdate"* %1, null
  br i1 %75, label %76, label %80

76:                                               ; preds = %69
  %77 = ptrtoint %"class.v8::Isolate"* %74 to i64
  %78 = add i64 %77, 176
  %79 = inttoptr i64 %78 to %"class.v8::Value"*
  br label %86

80:                                               ; preds = %69
  %81 = bitcast %"class.blink::PaymentRequestDetailsUpdate"* %1 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %82 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %81, align 8
  %83 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %82, i64 2
  %84 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %83, align 8
  %85 = call %"class.v8::Value"* %84(%"class.blink::IDLDictionaryBase"* nonnull %57, %"class.v8::Object"* %71, %"class.v8::Isolate"* %74) #11
  br label %86

86:                                               ; preds = %76, %80
  %87 = phi %"class.v8::Value"* [ %79, %76 ], [ %85, %80 ]
  %88 = getelementptr inbounds %"class.blink::TraceWrapperV8Reference.280", %"class.blink::TraceWrapperV8Reference.280"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i64*, i64** %88, align 8
  %90 = icmp eq i64* %89, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %86
  call void @_ZN2v82V819DisposeTracedGlobalEPm(i64* nonnull %89) #11
  %92 = bitcast %"class.blink::TraceWrapperV8Reference.280"* %56 to i64*
  store atomic i64 0, i64* %92 monotonic, align 8
  br label %93

93:                                               ; preds = %91, %86
  %94 = icmp eq %"class.v8::Value"* %87, null
  br i1 %94, label %101, label %95

95:                                               ; preds = %93
  %96 = bitcast %"class.v8::Value"* %87 to i64*
  %97 = bitcast %"class.v8::Isolate"* %53 to %"class.v8::internal::Isolate"*
  %98 = bitcast %"class.blink::TraceWrapperV8Reference.280"* %56 to i64*
  %99 = call i64* @_ZN2v82V824GlobalizeTracedReferenceEPNS_8internal7IsolateEPmS4_b(%"class.v8::internal::Isolate"* %97, i64* nonnull %96, i64* %98, i1 zeroext false) #11
  %100 = ptrtoint i64* %99 to i64
  store atomic i64 %100, i64* %98 monotonic, align 8
  br label %101

101:                                              ; preds = %93, %95
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.280"* dereferenceable(8) %56) #11
  call void @_ZN2v815MicrotasksScopeD1Ev(%"class.v8::MicrotasksScope"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #11
  %102 = icmp eq i32* %49, null
  br i1 %102, label %104, label %103

103:                                              ; preds = %101
  store i32 %50, i32* %49, align 4
  br label %104

104:                                              ; preds = %101, %103
  %105 = call %"class.blink::ExecutionContext"* @_ZNK5blink33ExecutionContextLifecycleObserver19GetExecutionContextEv(%"class.blink::ExecutionContextLifecycleObserver"* %21) #11
  %106 = call zeroext i1 @_ZNK5blink16ExecutionContext15IsContextPausedEv(%"class.blink::ExecutionContext"* %105) #11
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #11
  br label %123

108:                                              ; preds = %104
  %109 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %109) #11
  %110 = load i64, i64* @_ZN3WTF8internal25g_main_thread_stack_startE, align 8
  %111 = ptrtoint i64* %4 to i64
  %112 = sub i64 %110, %111
  %113 = load i64, i64* @_ZN3WTF8internal39g_main_thread_underestimated_stack_sizeE, align 8
  %114 = icmp ult i64 %112, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #11
  br i1 %114, label %117, label %115, !prof !53

115:                                              ; preds = %108
  %116 = call dereferenceable(4) i32* @_ZN5blink20ScriptForbiddenScope17GetMutableCounterEv() #11
  br label %117

117:                                              ; preds = %108, %115
  %118 = phi i32* [ %116, %115 ], [ @_ZN5blink20ScriptForbiddenScope22g_main_thread_counter_E, %108 ]
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %122, label %121

121:                                              ; preds = %117
  call void @_ZN5blink21ScriptPromiseResolver23ScheduleResolveOrRejectEv(%"class.blink::ScriptPromiseResolver"* %0) #11
  br label %123

122:                                              ; preds = %117
  call void @_ZN5blink21ScriptPromiseResolver26ResolveOrRejectImmediatelyEv(%"class.blink::ScriptPromiseResolver"* %0) #11
  br label %123

123:                                              ; preds = %122, %121, %107
  %124 = load %"class.v8::Context"*, %"class.v8::Context"** %31, align 8
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %124) #11
  call void @_ZN2v811HandleScopeD1Ev(%"class.v8::HandleScope"* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #11
  br label %125

125:                                              ; preds = %24, %16, %10, %20, %3, %123
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DOMException"* @_ZN5blink25MakeGarbageCollectedTraitINS_12DOMExceptionEE4CallIJNS_16DOMExceptionCodeERA29_KcEEEPS1_DpOT_(i32* dereferenceable(4), [29 x i8]* dereferenceable(29)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #11
  %6 = bitcast i8* %5 to %"class.blink::DOMException"*
  %7 = load i32, i32* %0, align 4
  %8 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = getelementptr inbounds [29 x i8], [29 x i8]* %1, i64 0, i64 0
  %10 = icmp eq [29 x i8]* %1, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = tail call i64 @strlen(i8* nonnull %9) #13
  br label %13

13:                                               ; preds = %2, %11
  %14 = phi i64 [ %12, %11 ], [ 0, %2 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* %9, i64 %14) #11
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  call void @_ZN5blink12DOMExceptionC1ENS_16DOMExceptionCodeERKN3WTF6StringES5_(%"class.blink::DOMException"* %6, i32 %7, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #11
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #11
  br label %32

32:                                               ; preds = %13, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #11
  br label %49

49:                                               ; preds = %32, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  %50 = getelementptr inbounds i8, i8* %5, i64 -4
  %51 = bitcast i8* %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = or i16 %52, 1
  store atomic i16 %53, i16* %51 release, align 2
  ret %"class.blink::DOMException"* %6
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN5blink18WrapWeakPersistentINS_19PaymentRequestEventEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!6 = distinct !{!6, !"_ZN5blink18WrapWeakPersistentINS_19PaymentRequestEventEEENS_14WeakPersistentIT_EEPS3_"}
!7 = !{!8, !10, !12}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19PaymentRequestEventEFvvEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19PaymentRequestEventEFvvEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIMN5blink19PaymentRequestEventEFvvEJNS1_14WeakPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIMN5blink19PaymentRequestEventEFvvEJNS1_14WeakPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!12 = distinct !{!12, !13, !"_ZN3WTF4BindIMN5blink19PaymentRequestEventEFvvEJNS1_14WeakPersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!13 = distinct !{!13, !"_ZN3WTF4BindIMN5blink19PaymentRequestEventEFvvEJNS1_14WeakPersistentIS2_EEEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN5blink11ScriptValue4FromIRKNS_6MemberIKNS_21PaymentCurrencyAmountEEEEES0_PNS_11ScriptStateEOT_: argument 0"}
!16 = distinct !{!16, !"_ZN5blink11ScriptValue4FromIRKNS_6MemberIKNS_21PaymentCurrencyAmountEEEEES0_PNS_11ScriptStateEOT_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink11ScriptValue4FromIRKNS_6MemberIKNS_14PaymentOptionsEEEEES0_PNS_11ScriptStateEOT_: argument 0"}
!19 = distinct !{!19, !"_ZN5blink11ScriptValue4FromIRKNS_6MemberIKNS_14PaymentOptionsEEEEES0_PNS_11ScriptStateEOT_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN8payments5mojom5blink24PaymentHandlerMethodData3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!22 = distinct !{!22, !"_ZN8payments5mojom5blink24PaymentHandlerMethodData3NewIJEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN5blink18WrapWeakPersistentINS_19PaymentRequestEventEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!25 = distinct !{!25, !"_ZN5blink18WrapWeakPersistentINS_19PaymentRequestEventEEENS_14WeakPersistentIT_EEPS3_"}
!26 = !{!27, !29, !31}
!27 = distinct !{!27, !28, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!28 = distinct !{!28, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_"}
!29 = distinct !{!29, !30, !"_ZN4base8BindOnceIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS1_14WeakPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!30 = distinct !{!30, !"_ZN4base8BindOnceIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS1_14WeakPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!31 = distinct !{!31, !32, !"_ZN3WTF4BindIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS1_14WeakPersistentIS2_EEEFvS9_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!32 = distinct !{!32, !"_ZN3WTF4BindIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS1_14WeakPersistentIS2_EEEFvS9_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN5blink18WrapWeakPersistentINS_19PaymentRequestEventEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!35 = distinct !{!35, !"_ZN5blink18WrapWeakPersistentINS_19PaymentRequestEventEEENS_14WeakPersistentIT_EEPS3_"}
!36 = !{!37, !39, !41}
!37 = distinct !{!37, !38, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!38 = distinct !{!38, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_"}
!39 = distinct !{!39, !40, !"_ZN4base8BindOnceIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS1_14WeakPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!40 = distinct !{!40, !"_ZN4base8BindOnceIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS1_14WeakPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!41 = distinct !{!41, !42, !"_ZN3WTF4BindIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS1_14WeakPersistentIS2_EEEFvS9_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!42 = distinct !{!42, !"_ZN3WTF4BindIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS1_14WeakPersistentIS2_EEEFvS9_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZN5blink18WrapWeakPersistentINS_19PaymentRequestEventEEENS_14WeakPersistentIT_EEPS3_: argument 0"}
!45 = distinct !{!45, !"_ZN5blink18WrapWeakPersistentINS_19PaymentRequestEventEEENS_14WeakPersistentIT_EEPS3_"}
!46 = !{!47, !49, !51}
!47 = distinct !{!47, !48, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!48 = distinct !{!48, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS3_14WeakPersistentIS4_EEEEEDcOT0_DpOT1_"}
!49 = distinct !{!49, !50, !"_ZN4base8BindOnceIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS1_14WeakPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_: argument 0"}
!50 = distinct !{!50, !"_ZN4base8BindOnceIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS1_14WeakPersistentIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSH_DpOSI_"}
!51 = distinct !{!51, !52, !"_ZN3WTF4BindIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS1_14WeakPersistentIS2_EEEFvS9_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!52 = distinct !{!52, !"_ZN3WTF4BindIMN5blink19PaymentRequestEventEFvN4mojo9StructPtrIN8payments5mojom5blink27PaymentRequestDetailsUpdateEEEEJNS1_14WeakPersistentIS2_EEEFvS9_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!53 = !{!"branch_weights", i32 2000, i32 1}
