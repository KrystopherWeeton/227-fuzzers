; ModuleID = '../../components/sessions/content/navigation_task_id.cc'
source_filename = "../../components/sessions/content/navigation_task_id.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sessions::NavigationTaskId" = type { %"class.base::SupportsUserData::Data", i64, i64, i64 }
%"class.base::SupportsUserData::Data" = type { i32 (...)** }
%"class.content::NavigationEntry" = type { %"class.base::SupportsUserData.base", [7 x i8] }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::SupportsUserData" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing", [7 x i8] }>

@_ZTVN8sessions16NavigationTaskIdE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.sessions::NavigationTaskId"*)* @_ZN8sessions16NavigationTaskIdD2Ev to i8*), i8* bitcast (void (%"class.sessions::NavigationTaskId"*)* @_ZN8sessions16NavigationTaskIdD0Ev to i8*), i8* bitcast (%"class.base::SupportsUserData::Data"* (%"class.sessions::NavigationTaskId"*)* @_ZN8sessions16NavigationTaskId5CloneEv to i8*)] }, align 8
@_ZN8sessionsL10kTaskIdKeyE = internal constant [13 x i8] c"task_id_data\00", align 1

@_ZN8sessions16NavigationTaskIdC1Ev = hidden unnamed_addr alias void (%"class.sessions::NavigationTaskId"*), void (%"class.sessions::NavigationTaskId"*)* @_ZN8sessions16NavigationTaskIdC2Ev
@_ZN8sessions16NavigationTaskIdC1ERKS0_ = hidden unnamed_addr alias void (%"class.sessions::NavigationTaskId"*, %"class.sessions::NavigationTaskId"*), void (%"class.sessions::NavigationTaskId"*, %"class.sessions::NavigationTaskId"*)* @_ZN8sessions16NavigationTaskIdC2ERKS0_
@_ZN8sessions16NavigationTaskIdD1Ev = hidden unnamed_addr alias void (%"class.sessions::NavigationTaskId"*), void (%"class.sessions::NavigationTaskId"*)* @_ZN8sessions16NavigationTaskIdD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8sessions16NavigationTaskIdC2Ev(%"class.sessions::NavigationTaskId"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sessions::NavigationTaskId", %"class.sessions::NavigationTaskId"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8sessions16NavigationTaskIdE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.sessions::NavigationTaskId", %"class.sessions::NavigationTaskId"* %0, i64 0, i32 1
  %4 = bitcast i64* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -1, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8sessions16NavigationTaskIdC2ERKS0_(%"class.sessions::NavigationTaskId"* nocapture, %"class.sessions::NavigationTaskId"* nocapture readonly dereferenceable(32)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.sessions::NavigationTaskId", %"class.sessions::NavigationTaskId"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8sessions16NavigationTaskIdE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.sessions::NavigationTaskId", %"class.sessions::NavigationTaskId"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.sessions::NavigationTaskId", %"class.sessions::NavigationTaskId"* %1, i64 0, i32 1
  %6 = bitcast i64* %4 to i8*
  %7 = bitcast i64* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN8sessions16NavigationTaskIdD2Ev(%"class.sessions::NavigationTaskId"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8sessions16NavigationTaskIdD0Ev(%"class.sessions::NavigationTaskId"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.sessions::NavigationTaskId"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.sessions::NavigationTaskId"* @_ZN8sessions16NavigationTaskId3GetEPN7content15NavigationEntryE(%"class.content::NavigationEntry"*) local_unnamed_addr #1 align 2 {
  %2 = bitcast %"class.content::NavigationEntry"* %0 to %"class.base::SupportsUserData"*
  %3 = tail call %"class.base::SupportsUserData::Data"* @_ZNK4base16SupportsUserData11GetUserDataEPKv(%"class.base::SupportsUserData"* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN8sessionsL10kTaskIdKeyE, i64 0, i64 0)) #8
  %4 = icmp eq %"class.base::SupportsUserData::Data"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.base::SupportsUserData::Data"* %3 to %"class.sessions::NavigationTaskId"*
  br label %13

7:                                                ; preds = %1
  %8 = tail call i8* @_Znwm(i64 32) #7
  %9 = bitcast i8* %8 to %"class.sessions::NavigationTaskId"*
  %10 = bitcast i8* %8 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8sessions16NavigationTaskIdE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 -1, i64 24, i1 false) #8
  %12 = bitcast i8* %8 to %"class.base::SupportsUserData::Data"*
  tail call void @_ZN4base16SupportsUserData11SetUserDataEPKvNSt3__110unique_ptrINS0_4DataENS3_14default_deleteIS5_EEEE(%"class.base::SupportsUserData"* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN8sessionsL10kTaskIdKeyE, i64 0, i64 0), %"class.base::SupportsUserData::Data"* nonnull %12) #8
  br label %13

13:                                               ; preds = %7, %5
  %14 = phi %"class.sessions::NavigationTaskId"* [ %6, %5 ], [ %9, %7 ]
  ret %"class.sessions::NavigationTaskId"* %14
}

declare %"class.base::SupportsUserData::Data"* @_ZNK4base16SupportsUserData11GetUserDataEPKv(%"class.base::SupportsUserData"*, i8*) local_unnamed_addr #5

declare void @_ZN4base16SupportsUserData11SetUserDataEPKvNSt3__110unique_ptrINS0_4DataENS3_14default_deleteIS5_EEEE(%"class.base::SupportsUserData"*, i8*, %"class.base::SupportsUserData::Data"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::SupportsUserData::Data"* @_ZN8sessions16NavigationTaskId5CloneEv(%"class.sessions::NavigationTaskId"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = tail call i8* @_Znwm(i64 32) #7
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8sessions16NavigationTaskIdE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = getelementptr inbounds %"class.sessions::NavigationTaskId", %"class.sessions::NavigationTaskId"* %0, i64 0, i32 1
  %6 = bitcast i64* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %6, i64 24, i1 false) #8
  %7 = bitcast i8* %2 to %"class.base::SupportsUserData::Data"*
  ret %"class.base::SupportsUserData::Data"* %7
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
