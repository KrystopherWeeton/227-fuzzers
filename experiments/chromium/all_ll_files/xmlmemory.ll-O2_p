; ModuleID = '../../third_party/libxml/src/xmlmemory.c'
source_filename = "../../third_party/libxml/src/xmlmemory.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._xmlMutex = type opaque
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@xmlGenericError = external local_unnamed_addr global void (i8*, i8*, ...)*, align 8
@xmlGenericErrorContext = external local_unnamed_addr global i8*, align 8
@.str = private unnamed_addr constant [41 x i8] c"xmlMallocBreakpoint reached on block %d\0A\00", align 1
@xmlMemStopAtBlock = internal global i32 0, align 4
@xmlMemInitialized = internal unnamed_addr global i1 false, align 4
@.str.1 = private unnamed_addr constant [34 x i8] c"xmlMallocLoc : Unsigned overflow\0A\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"xmlMallocLoc : Out of free space\0A\00", align 1
@xmlMemMutex = internal unnamed_addr global %struct._xmlMutex* null, align 8
@block = internal unnamed_addr global i32 0, align 4
@debugMemSize = internal unnamed_addr global i64 0, align 8
@debugMemBlocks = internal unnamed_addr global i64 0, align 8
@debugMaxMemSize = internal unnamed_addr global i64 0, align 8
@xmlMemTraceBlockAt = internal global i8* null, align 8
@.str.3 = private unnamed_addr constant [21 x i8] c"%p : Malloc(%lu) Ok\0A\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"xmlMallocAtomicLoc : Unsigned overflow\0A\00", align 1
@.str.5 = private unnamed_addr constant [40 x i8] c"xmlMallocAtomicLoc : Out of free space\0A\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.7 = private unnamed_addr constant [35 x i8] c"xmlReallocLoc : Unsigned overflow\0A\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"%p : Realloced(%lu -> %lu) Ok\0A\00", align 1
@.str.9 = private unnamed_addr constant [40 x i8] c"trying to free pointer from freed area\0A\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"%p : Freed()\0A\00", align 1
@.str.11 = private unnamed_addr constant [22 x i8] c"xmlMemFree(%p) error\0A\00", align 1
@.str.12 = private unnamed_addr constant [37 x i8] c"xmlMemStrdupLoc : Unsigned overflow\0A\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"%p : Strdup() Ok\0A\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c".memorylist\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.16 = private unnamed_addr constant [51 x i8] c"Memory list not compiled (MEM_LIST not defined !)\0A\00", align 1
@.str.17 = private unnamed_addr constant [43 x i8] c"      MEMORY ALLOCATED : %lu, MAX was %lu\0A\00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"XML_MEM_BREAKPOINT\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"%ud\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"XML_MEM_TRACE\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"%p\00", align 1
@xmlFree = external local_unnamed_addr global void (i8*)*, align 8
@xmlMalloc = external local_unnamed_addr global i8* (i64)*, align 8
@xmlMallocAtomic = external local_unnamed_addr global i8* (i64)*, align 8
@xmlRealloc = external local_unnamed_addr global i8* (i8*, i64)*, align 8
@xmlMemStrdup = external local_unnamed_addr global i8* (i8*)*, align 8
@.str.22 = private unnamed_addr constant [36 x i8] c"Memory tag error occurs :%p \0A\09 bye\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @xmlMallocBreakpoint() local_unnamed_addr #0 {
  %1 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %2 = load i8*, i8** @xmlGenericErrorContext, align 8
  %3 = load i32, i32* @xmlMemStopAtBlock, align 4
  tail call void (i8*, i8*, ...) %1(i8* %2, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i32 %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @xmlMallocLoc(i64, i8*, i32) local_unnamed_addr #0 {
  %4 = load i1, i1* @xmlMemInitialized, align 4
  br i1 %4, label %16, label %5

5:                                                ; preds = %3
  store i1 true, i1* @xmlMemInitialized, align 4
  %6 = tail call %struct._xmlMutex* @xmlNewMutex() #12
  store %struct._xmlMutex* %6, %struct._xmlMutex** @xmlMemMutex, align 8
  %7 = tail call i8* @getenv(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i64 0, i64 0)) #12
  %8 = icmp eq i8* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0), i32* nonnull @xmlMemStopAtBlock) #12
  br label %11

11:                                               ; preds = %9, %5
  %12 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0)) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %11
  %15 = tail call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i8** nonnull @xmlMemTraceBlockAt) #12
  br label %16

16:                                               ; preds = %14, %11, %3
  %17 = icmp ugt i64 %0, -41
  br i1 %17, label %18, label %21

18:                                               ; preds = %16
  %19 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %20 = load i8*, i8** @xmlGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %19(i8* %20, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0)) #12
  br label %68

21:                                               ; preds = %16
  %22 = add nuw i64 %0, 40
  %23 = tail call noalias i8* @malloc(i64 %22) #12
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %27 = load i8*, i8** @xmlGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %26(i8* %27, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0)) #12
  br label %68

28:                                               ; preds = %21
  %29 = bitcast i8* %23 to i32*
  store i32 23205, i32* %29, align 8
  %30 = getelementptr inbounds i8, i8* %23, i64 16
  %31 = bitcast i8* %30 to i64*
  store i64 %0, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %23, i64 4
  %33 = bitcast i8* %32 to i32*
  store i32 1, i32* %33, align 4
  %34 = getelementptr inbounds i8, i8* %23, i64 24
  %35 = bitcast i8* %34 to i8**
  store i8* %1, i8** %35, align 8
  %36 = getelementptr inbounds i8, i8* %23, i64 32
  %37 = bitcast i8* %36 to i32*
  store i32 %2, i32* %37, align 8
  %38 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlMemMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %38) #12
  %39 = load i32, i32* @block, align 4
  %40 = add i32 %39, 1
  store i32 %40, i32* @block, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %23, i64 8
  %43 = bitcast i8* %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = load i64, i64* @debugMemSize, align 8
  %45 = add i64 %44, %0
  store i64 %45, i64* @debugMemSize, align 8
  %46 = load i64, i64* @debugMemBlocks, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* @debugMemBlocks, align 8
  %48 = load i64, i64* @debugMaxMemSize, align 8
  %49 = icmp ugt i64 %45, %48
  br i1 %49, label %50, label %51

50:                                               ; preds = %28
  store i64 %45, i64* @debugMaxMemSize, align 8
  br label %51

51:                                               ; preds = %50, %28
  %52 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlMemMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %52) #12
  %53 = load i32, i32* @xmlMemStopAtBlock, align 4
  %54 = icmp eq i32 %40, %53
  br i1 %54, label %55, label %58

55:                                               ; preds = %51
  %56 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %57 = load i8*, i8** @xmlGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %56(i8* %57, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i32 %40) #12
  br label %58

58:                                               ; preds = %55, %51
  %59 = getelementptr inbounds i8, i8* %23, i64 40
  %60 = load i8*, i8** @xmlMemTraceBlockAt, align 8
  %61 = icmp eq i8* %60, %59
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %64 = load i8*, i8** @xmlGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %63(i8* %64, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i8* %59, i64 %0) #12
  %65 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %66 = load i8*, i8** @xmlGenericErrorContext, align 8
  %67 = load i32, i32* @xmlMemStopAtBlock, align 4
  tail call void (i8*, i8*, ...) %65(i8* %66, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i32 %67) #12
  br label %68

68:                                               ; preds = %58, %62, %25, %18
  %69 = phi i8* [ null, %18 ], [ null, %25 ], [ %59, %62 ], [ %59, %58 ]
  ret i8* %69
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlInitMemory() local_unnamed_addr #0 {
  %1 = load i1, i1* @xmlMemInitialized, align 4
  br i1 %1, label %13, label %2

2:                                                ; preds = %0
  store i1 true, i1* @xmlMemInitialized, align 4
  %3 = tail call %struct._xmlMutex* @xmlNewMutex() #12
  store %struct._xmlMutex* %3, %struct._xmlMutex** @xmlMemMutex, align 8
  %4 = tail call i8* @getenv(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i64 0, i64 0)) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0), i32* nonnull @xmlMemStopAtBlock) #12
  br label %8

8:                                                ; preds = %2, %6
  %9 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0)) #12
  %10 = icmp eq i8* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %8
  %12 = tail call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i8** nonnull @xmlMemTraceBlockAt) #12
  br label %13

13:                                               ; preds = %11, %8, %0
  %14 = phi i32 [ -1, %0 ], [ 0, %8 ], [ 0, %11 ]
  ret i32 %14
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @xmlMemoryDump() local_unnamed_addr #1 {
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #2

declare void @xmlMutexLock(%struct._xmlMutex*) local_unnamed_addr #3

declare void @xmlMutexUnlock(%struct._xmlMutex*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @xmlMallocAtomicLoc(i64, i8*, i32) local_unnamed_addr #0 {
  %4 = load i1, i1* @xmlMemInitialized, align 4
  br i1 %4, label %16, label %5

5:                                                ; preds = %3
  store i1 true, i1* @xmlMemInitialized, align 4
  %6 = tail call %struct._xmlMutex* @xmlNewMutex() #12
  store %struct._xmlMutex* %6, %struct._xmlMutex** @xmlMemMutex, align 8
  %7 = tail call i8* @getenv(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i64 0, i64 0)) #12
  %8 = icmp eq i8* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %5
  %10 = tail call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0), i32* nonnull @xmlMemStopAtBlock) #12
  br label %11

11:                                               ; preds = %9, %5
  %12 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0)) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %11
  %15 = tail call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i8** nonnull @xmlMemTraceBlockAt) #12
  br label %16

16:                                               ; preds = %14, %11, %3
  %17 = icmp ugt i64 %0, -41
  br i1 %17, label %18, label %21

18:                                               ; preds = %16
  %19 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %20 = load i8*, i8** @xmlGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %19(i8* %20, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0)) #12
  br label %68

21:                                               ; preds = %16
  %22 = add nuw i64 %0, 40
  %23 = tail call noalias i8* @malloc(i64 %22) #12
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %27 = load i8*, i8** @xmlGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %26(i8* %27, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5, i64 0, i64 0)) #12
  br label %68

28:                                               ; preds = %21
  %29 = bitcast i8* %23 to i32*
  store i32 23205, i32* %29, align 8
  %30 = getelementptr inbounds i8, i8* %23, i64 16
  %31 = bitcast i8* %30 to i64*
  store i64 %0, i64* %31, align 8
  %32 = getelementptr inbounds i8, i8* %23, i64 4
  %33 = bitcast i8* %32 to i32*
  store i32 4, i32* %33, align 4
  %34 = getelementptr inbounds i8, i8* %23, i64 24
  %35 = bitcast i8* %34 to i8**
  store i8* %1, i8** %35, align 8
  %36 = getelementptr inbounds i8, i8* %23, i64 32
  %37 = bitcast i8* %36 to i32*
  store i32 %2, i32* %37, align 8
  %38 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlMemMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %38) #12
  %39 = load i32, i32* @block, align 4
  %40 = add i32 %39, 1
  store i32 %40, i32* @block, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %23, i64 8
  %43 = bitcast i8* %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = load i64, i64* @debugMemSize, align 8
  %45 = add i64 %44, %0
  store i64 %45, i64* @debugMemSize, align 8
  %46 = load i64, i64* @debugMemBlocks, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* @debugMemBlocks, align 8
  %48 = load i64, i64* @debugMaxMemSize, align 8
  %49 = icmp ugt i64 %45, %48
  br i1 %49, label %50, label %51

50:                                               ; preds = %28
  store i64 %45, i64* @debugMaxMemSize, align 8
  br label %51

51:                                               ; preds = %50, %28
  %52 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlMemMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %52) #12
  %53 = load i32, i32* @xmlMemStopAtBlock, align 4
  %54 = icmp eq i32 %40, %53
  br i1 %54, label %55, label %58

55:                                               ; preds = %51
  %56 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %57 = load i8*, i8** @xmlGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %56(i8* %57, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i32 %40) #12
  br label %58

58:                                               ; preds = %55, %51
  %59 = getelementptr inbounds i8, i8* %23, i64 40
  %60 = load i8*, i8** @xmlMemTraceBlockAt, align 8
  %61 = icmp eq i8* %60, %59
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %64 = load i8*, i8** @xmlGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %63(i8* %64, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i8* %59, i64 %0) #12
  %65 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %66 = load i8*, i8** @xmlGenericErrorContext, align 8
  %67 = load i32, i32* @xmlMemStopAtBlock, align 4
  tail call void (i8*, i8*, ...) %65(i8* %66, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i32 %67) #12
  br label %68

68:                                               ; preds = %58, %62, %25, %18
  %69 = phi i8* [ null, %18 ], [ null, %25 ], [ %59, %62 ], [ %59, %58 ]
  ret i8* %69
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @xmlMemMalloc(i64) local_unnamed_addr #0 {
  %2 = tail call i8* @xmlMallocLoc(i64 %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i32 0)
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @xmlReallocLoc(i8*, i64, i8*, i32) local_unnamed_addr #0 {
  %5 = icmp eq i8* %0, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = tail call i8* @xmlMallocLoc(i64 %1, i8* %2, i32 %3)
  br label %93

8:                                                ; preds = %4
  %9 = load i1, i1* @xmlMemInitialized, align 4
  br i1 %9, label %21, label %10

10:                                               ; preds = %8
  store i1 true, i1* @xmlMemInitialized, align 4
  %11 = tail call %struct._xmlMutex* @xmlNewMutex() #12
  store %struct._xmlMutex* %11, %struct._xmlMutex** @xmlMemMutex, align 8
  %12 = tail call i8* @getenv(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i64 0, i64 0)) #12
  %13 = icmp eq i8* %12, null
  br i1 %13, label %16, label %14

14:                                               ; preds = %10
  %15 = tail call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0), i32* nonnull @xmlMemStopAtBlock) #12
  br label %16

16:                                               ; preds = %14, %10
  %17 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0)) #12
  %18 = icmp eq i8* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %16
  %20 = tail call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %17, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i8** nonnull @xmlMemTraceBlockAt) #12
  br label %21

21:                                               ; preds = %19, %16, %8
  %22 = getelementptr inbounds i8, i8* %0, i64 -40
  %23 = getelementptr inbounds i8, i8* %0, i64 -32
  %24 = bitcast i8* %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = load i32, i32* @xmlMemStopAtBlock, align 4
  %27 = zext i32 %26 to i64
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %29, label %32

29:                                               ; preds = %21
  %30 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %31 = load i8*, i8** @xmlGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %30(i8* %31, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i32 %26) #12
  br label %32

32:                                               ; preds = %29, %21
  %33 = bitcast i8* %22 to i32*
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 23205
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %38 = load i8*, i8** @xmlGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %37(i8* %38, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.22, i64 0, i64 0), i8* %22) #12
  br label %93

39:                                               ; preds = %32
  store i32 -23206, i32* %33, align 8
  %40 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlMemMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %40) #12
  %41 = getelementptr inbounds i8, i8* %0, i64 -24
  %42 = bitcast i8* %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = load i64, i64* @debugMemSize, align 8
  %45 = sub i64 %44, %43
  store i64 %45, i64* @debugMemSize, align 8
  %46 = load i64, i64* @debugMemBlocks, align 8
  %47 = add i64 %46, -1
  store i64 %47, i64* @debugMemBlocks, align 8
  %48 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlMemMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %48) #12
  %49 = icmp ugt i64 %1, -41
  br i1 %49, label %50, label %53

50:                                               ; preds = %39
  %51 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %52 = load i8*, i8** @xmlGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %51(i8* %52, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0)) #12
  br label %93

53:                                               ; preds = %39
  %54 = add nuw i64 %1, 40
  %55 = tail call i8* @realloc(i8* %22, i64 %54) #12
  %56 = icmp eq i8* %55, null
  br i1 %56, label %57, label %58

57:                                               ; preds = %53
  tail call void @free(i8* %22) #12
  br label %93

58:                                               ; preds = %53
  %59 = load i8*, i8** @xmlMemTraceBlockAt, align 8
  %60 = icmp eq i8* %59, %0
  br i1 %60, label %61, label %70

61:                                               ; preds = %58
  %62 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %63 = load i8*, i8** @xmlGenericErrorContext, align 8
  %64 = getelementptr inbounds i8, i8* %55, i64 16
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %65, align 8
  tail call void (i8*, i8*, ...) %62(i8* %63, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i8* nonnull %0, i64 %66, i64 %1) #12
  %67 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %68 = load i8*, i8** @xmlGenericErrorContext, align 8
  %69 = load i32, i32* @xmlMemStopAtBlock, align 4
  tail call void (i8*, i8*, ...) %67(i8* %68, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i32 %69) #12
  br label %70

70:                                               ; preds = %58, %61
  %71 = bitcast i8* %55 to i32*
  store i32 23205, i32* %71, align 8
  %72 = getelementptr inbounds i8, i8* %55, i64 8
  %73 = bitcast i8* %72 to i64*
  store i64 %25, i64* %73, align 8
  %74 = getelementptr inbounds i8, i8* %55, i64 4
  %75 = bitcast i8* %74 to i32*
  store i32 2, i32* %75, align 4
  %76 = getelementptr inbounds i8, i8* %55, i64 16
  %77 = bitcast i8* %76 to i64*
  store i64 %1, i64* %77, align 8
  %78 = getelementptr inbounds i8, i8* %55, i64 24
  %79 = bitcast i8* %78 to i8**
  store i8* %2, i8** %79, align 8
  %80 = getelementptr inbounds i8, i8* %55, i64 32
  %81 = bitcast i8* %80 to i32*
  store i32 %3, i32* %81, align 8
  %82 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlMemMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %82) #12
  %83 = load i64, i64* @debugMemSize, align 8
  %84 = add i64 %83, %1
  store i64 %84, i64* @debugMemSize, align 8
  %85 = load i64, i64* @debugMemBlocks, align 8
  %86 = add i64 %85, 1
  store i64 %86, i64* @debugMemBlocks, align 8
  %87 = load i64, i64* @debugMaxMemSize, align 8
  %88 = icmp ugt i64 %84, %87
  br i1 %88, label %89, label %90

89:                                               ; preds = %70
  store i64 %84, i64* @debugMaxMemSize, align 8
  br label %90

90:                                               ; preds = %89, %70
  %91 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlMemMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %91) #12
  %92 = getelementptr inbounds i8, i8* %55, i64 40
  br label %93

93:                                               ; preds = %36, %57, %90, %50, %6
  %94 = phi i8* [ %7, %6 ], [ null, %50 ], [ %92, %90 ], [ null, %57 ], [ null, %36 ]
  ret i8* %94
}

; Function Attrs: nounwind
declare noalias i8* @realloc(i8* nocapture, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden noalias i8* @xmlMemRealloc(i8*, i64) local_unnamed_addr #0 {
  %3 = tail call i8* @xmlReallocLoc(i8* %0, i64 %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i32 0)
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @xmlMemFree(i8*) local_unnamed_addr #0 {
  %2 = ptrtoint i8* %0 to i64
  switch i64 %2, label %6 [
    i64 0, label %50
    i64 -1, label %3
  ]

3:                                                ; preds = %1
  %4 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %5 = load i8*, i8** @xmlGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %4(i8* %5, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9, i64 0, i64 0)) #12
  br label %44

6:                                                ; preds = %1
  %7 = load i8*, i8** @xmlMemTraceBlockAt, align 8
  %8 = icmp eq i8* %7, %0
  br i1 %8, label %9, label %15

9:                                                ; preds = %6
  %10 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %11 = load i8*, i8** @xmlGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %10(i8* %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0), i8* %0) #12
  %12 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %13 = load i8*, i8** @xmlGenericErrorContext, align 8
  %14 = load i32, i32* @xmlMemStopAtBlock, align 4
  tail call void (i8*, i8*, ...) %12(i8* %13, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i32 %14) #12
  br label %15

15:                                               ; preds = %9, %6
  %16 = getelementptr inbounds i8, i8* %0, i64 -40
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 23205
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %22 = load i8*, i8** @xmlGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %21(i8* %22, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.22, i64 0, i64 0), i8* %16) #12
  br label %44

23:                                               ; preds = %15
  %24 = load i32, i32* @xmlMemStopAtBlock, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %0, i64 -32
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, %25
  br i1 %29, label %30, label %33

30:                                               ; preds = %23
  %31 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %32 = load i8*, i8** @xmlGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %31(i8* %32, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i32 %24) #12
  br label %33

33:                                               ; preds = %30, %23
  store i32 -23206, i32* %17, align 8
  %34 = getelementptr inbounds i8, i8* %0, i64 -24
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %0, i8 -1, i64 %36, i1 false)
  %37 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlMemMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %37) #12
  %38 = load i64, i64* %35, align 8
  %39 = load i64, i64* @debugMemSize, align 8
  %40 = sub i64 %39, %38
  store i64 %40, i64* @debugMemSize, align 8
  %41 = load i64, i64* @debugMemBlocks, align 8
  %42 = add i64 %41, -1
  store i64 %42, i64* @debugMemBlocks, align 8
  %43 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlMemMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %43) #12
  tail call void @free(i8* %16) #12
  br label %50

44:                                               ; preds = %20, %3
  %45 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %46 = load i8*, i8** @xmlGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %45(i8* %46, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0), i8* nonnull %0) #12
  %47 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %48 = load i8*, i8** @xmlGenericErrorContext, align 8
  %49 = load i32, i32* @xmlMemStopAtBlock, align 4
  tail call void (i8*, i8*, ...) %47(i8* %48, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i32 %49) #12
  br label %50

50:                                               ; preds = %1, %44, %33
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden i8* @xmlMemStrdupLoc(i8* nocapture readonly, i8*, i32) local_unnamed_addr #0 {
  %4 = tail call i64 @strlen(i8* %0) #13
  %5 = add i64 %4, 1
  %6 = load i1, i1* @xmlMemInitialized, align 4
  br i1 %6, label %18, label %7

7:                                                ; preds = %3
  store i1 true, i1* @xmlMemInitialized, align 4
  %8 = tail call %struct._xmlMutex* @xmlNewMutex() #12
  store %struct._xmlMutex* %8, %struct._xmlMutex** @xmlMemMutex, align 8
  %9 = tail call i8* @getenv(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i64 0, i64 0)) #12
  %10 = icmp eq i8* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = tail call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0), i32* nonnull @xmlMemStopAtBlock) #12
  br label %13

13:                                               ; preds = %11, %7
  %14 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0)) #12
  %15 = icmp eq i8* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %13
  %17 = tail call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* nonnull %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i8** nonnull @xmlMemTraceBlockAt) #12
  br label %18

18:                                               ; preds = %16, %13, %3
  %19 = icmp ugt i64 %5, -41
  br i1 %19, label %20, label %23

20:                                               ; preds = %18
  %21 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %22 = load i8*, i8** @xmlGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %21(i8* %22, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.12, i64 0, i64 0)) #12
  br label %68

23:                                               ; preds = %18
  %24 = add i64 %4, 41
  %25 = tail call noalias i8* @malloc(i64 %24) #12
  %26 = icmp eq i8* %25, null
  br i1 %26, label %68, label %27

27:                                               ; preds = %23
  %28 = bitcast i8* %25 to i32*
  store i32 23205, i32* %28, align 8
  %29 = getelementptr inbounds i8, i8* %25, i64 16
  %30 = bitcast i8* %29 to i64*
  store i64 %5, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %25, i64 4
  %32 = bitcast i8* %31 to i32*
  store i32 3, i32* %32, align 4
  %33 = getelementptr inbounds i8, i8* %25, i64 24
  %34 = bitcast i8* %33 to i8**
  store i8* %1, i8** %34, align 8
  %35 = getelementptr inbounds i8, i8* %25, i64 32
  %36 = bitcast i8* %35 to i32*
  store i32 %2, i32* %36, align 8
  %37 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlMemMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %37) #12
  %38 = load i32, i32* @block, align 4
  %39 = add i32 %38, 1
  store i32 %39, i32* @block, align 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %25, i64 8
  %42 = bitcast i8* %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = load i64, i64* @debugMemSize, align 8
  %44 = add i64 %43, %5
  store i64 %44, i64* @debugMemSize, align 8
  %45 = load i64, i64* @debugMemBlocks, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* @debugMemBlocks, align 8
  %47 = load i64, i64* @debugMaxMemSize, align 8
  %48 = icmp ugt i64 %44, %47
  br i1 %48, label %49, label %50

49:                                               ; preds = %27
  store i64 %44, i64* @debugMaxMemSize, align 8
  br label %50

50:                                               ; preds = %49, %27
  %51 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlMemMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %51) #12
  %52 = getelementptr inbounds i8, i8* %25, i64 40
  %53 = load i32, i32* @xmlMemStopAtBlock, align 4
  %54 = icmp eq i32 %39, %53
  br i1 %54, label %55, label %58

55:                                               ; preds = %50
  %56 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %57 = load i8*, i8** @xmlGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %56(i8* %57, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i32 %53) #12
  br label %58

58:                                               ; preds = %55, %50
  %59 = tail call i8* @strcpy(i8* %52, i8* %0) #12
  %60 = load i8*, i8** @xmlMemTraceBlockAt, align 8
  %61 = icmp eq i8* %60, %52
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %64 = load i8*, i8** @xmlGenericErrorContext, align 8
  tail call void (i8*, i8*, ...) %63(i8* %64, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* %52) #12
  %65 = load void (i8*, i8*, ...)*, void (i8*, i8*, ...)** @xmlGenericError, align 8
  %66 = load i8*, i8** @xmlGenericErrorContext, align 8
  %67 = load i32, i32* @xmlMemStopAtBlock, align 4
  tail call void (i8*, i8*, ...) %65(i8* %66, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0), i32 %67) #12
  br label %68

68:                                               ; preds = %23, %58, %62, %20
  %69 = phi i8* [ null, %20 ], [ %52, %62 ], [ %52, %58 ], [ null, %23 ]
  ret i8* %69
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i8* @strcpy(i8* returned, i8* nocapture readonly) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @xmlMemoryStrdup(i8* nocapture readonly) local_unnamed_addr #0 {
  %2 = tail call i8* @xmlMemStrdupLoc(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i32 0)
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlMemUsed() local_unnamed_addr #0 {
  %1 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlMemMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %1) #12
  %2 = load i64, i64* @debugMemSize, align 8
  %3 = trunc i64 %2 to i32
  %4 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlMemMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %4) #12
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @xmlMemBlocks() local_unnamed_addr #0 {
  %1 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlMemMutex, align 8
  tail call void @xmlMutexLock(%struct._xmlMutex* %1) #12
  %2 = load i64, i64* @debugMemBlocks, align 8
  %3 = trunc i64 %2 to i32
  %4 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlMemMutex, align 8
  tail call void @xmlMutexUnlock(%struct._xmlMutex* %4) #12
  ret i32 %3
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @xmlMemDisplayLast(%struct._IO_FILE*, i64) local_unnamed_addr #7 {
  %3 = icmp slt i64 %1, 1
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = icmp eq %struct._IO_FILE* %0, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = tail call %struct._IO_FILE* @fopen64(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0))
  %8 = icmp eq %struct._IO_FILE* %7, null
  br i1 %8, label %14, label %11

9:                                                ; preds = %4
  %10 = tail call i64 @fwrite(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.16, i64 0, i64 0), i64 50, i64 1, %struct._IO_FILE* nonnull %0)
  br label %14

11:                                               ; preds = %6
  %12 = tail call i64 @fwrite(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.16, i64 0, i64 0), i64 50, i64 1, %struct._IO_FILE* nonnull %7)
  %13 = tail call i32 @fclose(%struct._IO_FILE* nonnull %7)
  br label %14

14:                                               ; preds = %9, %11, %6, %2
  ret void
}

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @fprintf(%struct._IO_FILE* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @xmlMemDisplay(%struct._IO_FILE*) local_unnamed_addr #7 {
  %2 = icmp eq %struct._IO_FILE* %0, null
  br i1 %2, label %3, label %6

3:                                                ; preds = %1
  %4 = tail call %struct._IO_FILE* @fopen64(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0))
  %5 = icmp eq %struct._IO_FILE* %4, null
  br i1 %5, label %11, label %8

6:                                                ; preds = %1
  %7 = tail call i64 @fwrite(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.16, i64 0, i64 0), i64 50, i64 1, %struct._IO_FILE* nonnull %0)
  br label %11

8:                                                ; preds = %3
  %9 = tail call i64 @fwrite(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.16, i64 0, i64 0), i64 50, i64 1, %struct._IO_FILE* nonnull %4)
  %10 = tail call i32 @fclose(%struct._IO_FILE* nonnull %4)
  br label %11

11:                                               ; preds = %6, %8, %3
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @xmlMemShow(%struct._IO_FILE*, i32) local_unnamed_addr #7 {
  %3 = icmp eq %struct._IO_FILE* %0, null
  br i1 %3, label %8, label %4

4:                                                ; preds = %2
  %5 = load i64, i64* @debugMemSize, align 8
  %6 = load i64, i64* @debugMaxMemSize, align 8
  %7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17, i64 0, i64 0), i64 %5, i64 %6)
  br label %8

8:                                                ; preds = %2, %4
  ret void
}

declare %struct._xmlMutex* @xmlNewMutex() local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare i32 @__isoc99_sscanf(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @xmlCleanupMemory() local_unnamed_addr #0 {
  %1 = load i1, i1* @xmlMemInitialized, align 4
  br i1 %1, label %2, label %4

2:                                                ; preds = %0
  %3 = load %struct._xmlMutex*, %struct._xmlMutex** @xmlMemMutex, align 8
  tail call void @xmlFreeMutex(%struct._xmlMutex* %3) #12
  store %struct._xmlMutex* null, %struct._xmlMutex** @xmlMemMutex, align 8
  store i1 false, i1* @xmlMemInitialized, align 4
  br label %4

4:                                                ; preds = %0, %2
  ret void
}

declare void @xmlFreeMutex(%struct._xmlMutex*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @xmlMemSetup(void (i8*)*, i8* (i64)*, i8* (i8*, i64)*, i8* (i8*)*) local_unnamed_addr #9 {
  %5 = icmp eq void (i8*)* %0, null
  %6 = icmp eq i8* (i64)* %1, null
  %7 = or i1 %5, %6
  %8 = icmp eq i8* (i8*, i64)* %2, null
  %9 = or i1 %7, %8
  %10 = icmp eq i8* (i8*)* %3, null
  %11 = or i1 %9, %10
  br i1 %11, label %13, label %12

12:                                               ; preds = %4
  store void (i8*)* %0, void (i8*)** @xmlFree, align 8
  store i8* (i64)* %1, i8* (i64)** @xmlMalloc, align 8
  store i8* (i64)* %1, i8* (i64)** @xmlMallocAtomic, align 8
  store i8* (i8*, i64)* %2, i8* (i8*, i64)** @xmlRealloc, align 8
  store i8* (i8*)* %3, i8* (i8*)** @xmlMemStrdup, align 8
  br label %13

13:                                               ; preds = %4, %12
  %14 = phi i32 [ 0, %12 ], [ -1, %4 ]
  ret i32 %14
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @xmlMemGet(void (i8*)**, i8* (i64)**, i8* (i8*, i64)**, i8* (i8*)**) local_unnamed_addr #10 {
  %5 = icmp eq void (i8*)** %0, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %4
  %7 = load i64, i64* bitcast (void (i8*)** @xmlFree to i64*), align 8
  %8 = bitcast void (i8*)** %0 to i64*
  store i64 %7, i64* %8, align 8
  br label %9

9:                                                ; preds = %4, %6
  %10 = icmp eq i8* (i64)** %1, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %9
  %12 = load i64, i64* bitcast (i8* (i64)** @xmlMalloc to i64*), align 8
  %13 = bitcast i8* (i64)** %1 to i64*
  store i64 %12, i64* %13, align 8
  br label %14

14:                                               ; preds = %9, %11
  %15 = icmp eq i8* (i8*, i64)** %2, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  %17 = load i64, i64* bitcast (i8* (i8*, i64)** @xmlRealloc to i64*), align 8
  %18 = bitcast i8* (i8*, i64)** %2 to i64*
  store i64 %17, i64* %18, align 8
  br label %19

19:                                               ; preds = %14, %16
  %20 = icmp eq i8* (i8*)** %3, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %19
  %22 = load i64, i64* bitcast (i8* (i8*)** @xmlMemStrdup to i64*), align 8
  %23 = bitcast i8* (i8*)** %3 to i64*
  store i64 %22, i64* %23, align 8
  br label %24

24:                                               ; preds = %19, %21
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @xmlGcMemSetup(void (i8*)*, i8* (i64)*, i8* (i64)*, i8* (i8*, i64)*, i8* (i8*)*) local_unnamed_addr #9 {
  %6 = icmp eq void (i8*)* %0, null
  %7 = icmp eq i8* (i64)* %1, null
  %8 = or i1 %6, %7
  %9 = icmp eq i8* (i64)* %2, null
  %10 = or i1 %8, %9
  %11 = icmp eq i8* (i8*, i64)* %3, null
  %12 = or i1 %10, %11
  %13 = icmp eq i8* (i8*)* %4, null
  %14 = or i1 %12, %13
  br i1 %14, label %16, label %15

15:                                               ; preds = %5
  store void (i8*)* %0, void (i8*)** @xmlFree, align 8
  store i8* (i64)* %1, i8* (i64)** @xmlMalloc, align 8
  store i8* (i64)* %2, i8* (i64)** @xmlMallocAtomic, align 8
  store i8* (i8*, i64)* %3, i8* (i8*, i64)** @xmlRealloc, align 8
  store i8* (i8*)* %4, i8* (i8*)** @xmlMemStrdup, align 8
  br label %16

16:                                               ; preds = %5, %15
  %17 = phi i32 [ 0, %15 ], [ -1, %5 ]
  ret i32 %17
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @xmlGcMemGet(void (i8*)**, i8* (i64)**, i8* (i64)**, i8* (i8*, i64)**, i8* (i8*)**) local_unnamed_addr #10 {
  %6 = icmp eq void (i8*)** %0, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %5
  %8 = load i64, i64* bitcast (void (i8*)** @xmlFree to i64*), align 8
  %9 = bitcast void (i8*)** %0 to i64*
  store i64 %8, i64* %9, align 8
  br label %10

10:                                               ; preds = %5, %7
  %11 = icmp eq i8* (i64)** %1, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %10
  %13 = load i64, i64* bitcast (i8* (i64)** @xmlMalloc to i64*), align 8
  %14 = bitcast i8* (i64)** %1 to i64*
  store i64 %13, i64* %14, align 8
  br label %15

15:                                               ; preds = %10, %12
  %16 = icmp eq i8* (i64)** %2, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %15
  %18 = load i64, i64* bitcast (i8* (i64)** @xmlMallocAtomic to i64*), align 8
  %19 = bitcast i8* (i64)** %2 to i64*
  store i64 %18, i64* %19, align 8
  br label %20

20:                                               ; preds = %15, %17
  %21 = icmp eq i8* (i8*, i64)** %3, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %20
  %23 = load i64, i64* bitcast (i8* (i8*, i64)** @xmlRealloc to i64*), align 8
  %24 = bitcast i8* (i8*, i64)** %3 to i64*
  store i64 %23, i64* %24, align 8
  br label %25

25:                                               ; preds = %20, %22
  %26 = icmp eq i8* (i8*)** %4, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %25
  %28 = load i64, i64* bitcast (i8* (i8*)** @xmlMemStrdup to i64*), align 8
  %29 = bitcast i8* (i8*)** %4 to i64*
  store i64 %28, i64* %29, align 8
  br label %30

30:                                               ; preds = %25, %27
  ret i32 0
}

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
