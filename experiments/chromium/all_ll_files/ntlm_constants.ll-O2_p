; ModuleID = '../../net/ntlm/ntlm_constants.cc'
source_filename = "../../net/ntlm/ntlm_constants.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.net::ntlm::AvPair" = type { %"class.std::__1::vector", i64, i32, i16, i16 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

@_ZN3net4ntlm6AvPairC1Ev = hidden unnamed_addr alias void (%"struct.net::ntlm::AvPair"*), void (%"struct.net::ntlm::AvPair"*)* @_ZN3net4ntlm6AvPairC2Ev
@_ZN3net4ntlm6AvPairC1ENS0_14TargetInfoAvIdEt = hidden unnamed_addr alias void (%"struct.net::ntlm::AvPair"*, i16, i16), void (%"struct.net::ntlm::AvPair"*, i16, i16)* @_ZN3net4ntlm6AvPairC2ENS0_14TargetInfoAvIdEt
@_ZN3net4ntlm6AvPairC1ENS0_14TargetInfoAvIdENSt3__16vectorIhNS3_9allocatorIhEEEE = hidden unnamed_addr alias void (%"struct.net::ntlm::AvPair"*, i16, %"class.std::__1::vector"*), void (%"struct.net::ntlm::AvPair"*, i16, %"class.std::__1::vector"*)* @_ZN3net4ntlm6AvPairC2ENS0_14TargetInfoAvIdENSt3__16vectorIhNS3_9allocatorIhEEEE
@_ZN3net4ntlm6AvPairC1ERKS1_ = hidden unnamed_addr alias void (%"struct.net::ntlm::AvPair"*, %"struct.net::ntlm::AvPair"*), void (%"struct.net::ntlm::AvPair"*, %"struct.net::ntlm::AvPair"*)* @_ZN3net4ntlm6AvPairC2ERKS1_
@_ZN3net4ntlm6AvPairC1EOS1_ = hidden unnamed_addr alias void (%"struct.net::ntlm::AvPair"*, %"struct.net::ntlm::AvPair"*), void (%"struct.net::ntlm::AvPair"*, %"struct.net::ntlm::AvPair"*)* @_ZN3net4ntlm6AvPairC2EOS1_
@_ZN3net4ntlm6AvPairD1Ev = hidden unnamed_addr alias void (%"struct.net::ntlm::AvPair"*), void (%"struct.net::ntlm::AvPair"*)* @_ZN3net4ntlm6AvPairD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net4ntlm6AvPairC2Ev(%"struct.net::ntlm::AvPair"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.net::ntlm::AvPair"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net4ntlm6AvPairC2ENS0_14TargetInfoAvIdEt(%"struct.net::ntlm::AvPair"* nocapture, i16 zeroext, i16 zeroext) unnamed_addr #0 align 2 {
  %4 = bitcast %"struct.net::ntlm::AvPair"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #5
  %5 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 3
  store i16 %1, i16* %5, align 4
  %6 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 4
  store i16 %2, i16* %6, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net4ntlm6AvPairC2ENS0_14TargetInfoAvIdENSt3__16vectorIhNS3_9allocatorIhEEEE(%"struct.net::ntlm::AvPair"* nocapture, i16 zeroext, %"class.std::__1::vector"* nocapture) unnamed_addr #0 align 2 {
  %4 = bitcast %"struct.net::ntlm::AvPair"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #5
  %5 = bitcast %"class.std::__1::vector"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.net::ntlm::AvPair"* %0 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = bitcast i8** %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast i8** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"class.std::__1::vector"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #5
  %19 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 3
  store i16 %1, i16* %19, align 4
  %20 = load i64, i64* %12, align 8
  %21 = load i64, i64* %7, align 8
  %22 = sub i64 %20, %21
  %23 = trunc i64 %22 to i16
  %24 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 4
  store i16 %23, i16* %24, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net4ntlm6AvPairC2ERKS1_(%"struct.net::ntlm::AvPair"*, %"struct.net::ntlm::AvPair"* nocapture readonly dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::ntlm::AvPair"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #5
  %4 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"struct.net::ntlm::AvPair"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %33, label %11

11:                                               ; preds = %2
  %12 = icmp slt i64 %9, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = bitcast %"struct.net::ntlm::AvPair"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #6
  unreachable

15:                                               ; preds = %11
  %16 = tail call i8* @_Znwm(i64 %9) #7
  %17 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 0, i32 0, i32 1
  store i8* %16, i8** %17, align 8
  %18 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 0, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %16, i64 %9
  %20 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store i8* %19, i8** %20, align 8
  %21 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %1, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = load i64, i64* %5, align 8
  %24 = bitcast i8** %17 to i64*
  %25 = ptrtoint i8* %22 to i64
  %26 = sub i64 %23, %25
  %27 = icmp sgt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %15
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %16, i8* align 1 %22, i64 %26, i1 false) #5
  %29 = getelementptr inbounds i8, i8* %16, i64 %26
  br label %30

30:                                               ; preds = %28, %15
  %31 = phi i8* [ %29, %28 ], [ %16, %15 ]
  %32 = ptrtoint i8* %31 to i64
  store i64 %32, i64* %24, align 8
  br label %33

33:                                               ; preds = %2, %30
  %34 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 1
  %35 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %1, i64 0, i32 1
  %36 = bitcast i64* %34 to i8*
  %37 = bitcast i64* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net4ntlm6AvPairC2EOS1_(%"struct.net::ntlm::AvPair"* nocapture, %"struct.net::ntlm::AvPair"* nocapture dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.net::ntlm::AvPair"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #5
  %4 = bitcast %"struct.net::ntlm::AvPair"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"struct.net::ntlm::AvPair"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast i8** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i8** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"struct.net::ntlm::AvPair"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #5
  %18 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %1, i64 0, i32 1
  %20 = bitcast i64* %18 to i8*
  %21 = bitcast i64* %19 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net4ntlm6AvPairD2Ev(%"struct.net::ntlm::AvPair"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i8* %3 to i64
  %7 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  store i64 %6, i64* %8, align 8
  tail call void @_ZdlPv(i8* nonnull %3) #7
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"struct.net::ntlm::AvPair"* @_ZN3net4ntlm6AvPairaSERKS1_(%"struct.net::ntlm::AvPair"* returned, %"struct.net::ntlm::AvPair"* readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"struct.net::ntlm::AvPair"* %0, %1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* %5, i8* %7, i8* %9) #5
  br label %10

10:                                               ; preds = %2, %4
  %11 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %1, i64 0, i32 1
  %13 = bitcast i64* %11 to i8*
  %14 = bitcast i64* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 16, i1 false)
  ret %"struct.net::ntlm::AvPair"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"struct.net::ntlm::AvPair"* @_ZN3net4ntlm6AvPairaSEOS1_(%"struct.net::ntlm::AvPair"* returned, %"struct.net::ntlm::AvPair"* nocapture dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i64*
  store i64 %7, i64* %9, align 8
  tail call void @_ZdlPv(i8* nonnull %4) #7
  %10 = bitcast %"struct.net::ntlm::AvPair"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #5
  br label %11

11:                                               ; preds = %2, %6
  %12 = bitcast %"struct.net::ntlm::AvPair"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"struct.net::ntlm::AvPair"* %0 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %1, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 0, i32 0, i32 1
  %19 = bitcast i8** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast i8** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"struct.net::ntlm::AvPair"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #5
  %26 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.net::ntlm::AvPair", %"struct.net::ntlm::AvPair"* %1, i64 0, i32 1
  %28 = bitcast i64* %26 to i8*
  %29 = bitcast i64* %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %29, i64 16, i1 false)
  ret %"struct.net::ntlm::AvPair"* %0
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = ptrtoint i8* %1 to i64
  %6 = sub i64 %4, %5
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp ugt i64 %6, %12
  %14 = inttoptr i64 %11 to i8*
  br i1 %13, label %40, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %11
  %20 = icmp ugt i64 %6, %19
  %21 = getelementptr inbounds i8, i8* %1, i64 %19
  %22 = select i1 %20, i8* %21, i8* %2
  %23 = ptrtoint i8* %22 to i64
  %24 = sub i64 %23, %5
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %1, i64 %24, i1 false) #5
  br label %27

27:                                               ; preds = %15, %26
  br i1 %20, label %28, label %38

28:                                               ; preds = %27
  %29 = load i64, i64* %17, align 8
  %30 = sub i64 %4, %23
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = inttoptr i64 %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %22, i64 %30, i1 false) #5
  %34 = getelementptr inbounds i8, i8* %33, i64 %30
  %35 = ptrtoint i8* %34 to i64
  br label %36

36:                                               ; preds = %28, %32
  %37 = phi i64 [ %35, %32 ], [ %29, %28 ]
  store i64 %37, i64* %17, align 8
  br label %66

38:                                               ; preds = %27
  %39 = getelementptr inbounds i8, i8* %14, i64 %24
  store i8* %39, i8** %16, align 8
  br label %66

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %11, i64* %45, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #7
  %46 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #5
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi i64 [ %9, %40 ], [ 0, %43 ]
  %49 = icmp slt i64 %6, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #6
  unreachable

52:                                               ; preds = %47
  %53 = icmp ult i64 %48, 4611686018427387903
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = shl i64 %48, 1
  %56 = icmp ult i64 %55, %6
  %57 = select i1 %56, i64 %6, i64 %55
  br label %58

58:                                               ; preds = %54, %52
  %59 = phi i64 [ %57, %54 ], [ 9223372036854775807, %52 ]
  %60 = tail call i8* @_Znwm(i64 %59) #7
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  store i8* %60, i8** %61, align 8
  store i8* %60, i8** %41, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8* %62, i8** %7, align 8
  %63 = bitcast i8** %61 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 %1, i64 %6, i1 false) #5
  %64 = getelementptr inbounds i8, i8* %60, i64 %6
  %65 = ptrtoint i8* %64 to i64
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %36, %38, %58
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { noreturn nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
