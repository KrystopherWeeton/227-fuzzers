; ModuleID = '../../chrome/browser/diagnostics/diagnostics_controller.cc'
source_filename = "../../chrome/browser/diagnostics/diagnostics_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.diagnostics::DiagnosticsController" = type { %"class.std::__1::unique_ptr", %"class.diagnostics::DiagnosticsWriter"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.diagnostics::DiagnosticsModel"* }
%"class.diagnostics::DiagnosticsModel" = type { i32 (...)** }
%"class.diagnostics::DiagnosticsWriter" = type { %"class.diagnostics::DiagnosticsModel::Observer", %"class.std::__1::unique_ptr.1", i32, i32 }
%"class.diagnostics::DiagnosticsModel::Observer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.diagnostics::SimpleConsole"* }
%"class.diagnostics::SimpleConsole" = type opaque
%"class.base::CommandLine" = type { %"class.std::__1::vector", %"class.std::__1::map", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN4base9SingletonIN11diagnostics21DiagnosticsControllerENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv = comdat any

$_ZN4base9SingletonIN11diagnostics21DiagnosticsControllerENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E = comdat any

@.str = private unnamed_addr constant [30 x i8] c"No diagnostics have been run.\00", align 1
@_ZN4base9SingletonIN11diagnostics21DiagnosticsControllerENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E = linkonce_odr hidden global i64 0, comdat, align 8

@_ZN11diagnostics21DiagnosticsControllerC1Ev = hidden unnamed_addr alias void (%"class.diagnostics::DiagnosticsController"*), void (%"class.diagnostics::DiagnosticsController"*)* @_ZN11diagnostics21DiagnosticsControllerC2Ev
@_ZN11diagnostics21DiagnosticsControllerD1Ev = hidden unnamed_addr alias void (%"class.diagnostics::DiagnosticsController"*), void (%"class.diagnostics::DiagnosticsController"*)* @_ZN11diagnostics21DiagnosticsControllerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.diagnostics::DiagnosticsController"* @_ZN11diagnostics21DiagnosticsController11GetInstanceEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i64, i64* @_ZN4base9SingletonIN11diagnostics21DiagnosticsControllerENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E acquire, align 8
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %10, label %3

3:                                                ; preds = %0
  %4 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* nonnull @_ZN4base9SingletonIN11diagnostics21DiagnosticsControllerENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E) #8
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = tail call i8* @_Znwm(i64 16) #9
  %7 = ptrtoint i8* %6 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 16, i1 false) #8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* nonnull @_ZN4base9SingletonIN11diagnostics21DiagnosticsControllerENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E, i64 %7, void (i8*)* nonnull @_ZN4base9SingletonIN11diagnostics21DiagnosticsControllerENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv, i8* null) #8
  br label %10

8:                                                ; preds = %3
  %9 = load atomic i64, i64* @_ZN4base9SingletonIN11diagnostics21DiagnosticsControllerENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E acquire, align 8
  br label %10

10:                                               ; preds = %0, %5, %8
  %11 = phi i64 [ %1, %0 ], [ %7, %5 ], [ %9, %8 ]
  %12 = inttoptr i64 %11 to %"class.diagnostics::DiagnosticsController"*
  ret %"class.diagnostics::DiagnosticsController"* %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11diagnostics21DiagnosticsControllerC2Ev(%"class.diagnostics::DiagnosticsController"* nocapture) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.diagnostics::DiagnosticsController"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11diagnostics21DiagnosticsControllerD2Ev(%"class.diagnostics::DiagnosticsController"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.diagnostics::DiagnosticsController", %"class.diagnostics::DiagnosticsController"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel"** %2, align 8
  store %"class.diagnostics::DiagnosticsModel"* null, %"class.diagnostics::DiagnosticsModel"** %2, align 8
  %4 = icmp eq %"class.diagnostics::DiagnosticsModel"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.diagnostics::DiagnosticsModel"* %3 to void (%"class.diagnostics::DiagnosticsModel"*)***
  %7 = load void (%"class.diagnostics::DiagnosticsModel"*)**, void (%"class.diagnostics::DiagnosticsModel"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.diagnostics::DiagnosticsModel"*)*, void (%"class.diagnostics::DiagnosticsModel"*)** %7, i64 1
  %9 = load void (%"class.diagnostics::DiagnosticsModel"*)*, void (%"class.diagnostics::DiagnosticsModel"*)** %8, align 8
  tail call void %9(%"class.diagnostics::DiagnosticsModel"* nonnull %3) #8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(8) %"class.diagnostics::DiagnosticsModel"* @_ZNK11diagnostics21DiagnosticsController10GetResultsEv(%"class.diagnostics::DiagnosticsController"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.diagnostics::DiagnosticsController", %"class.diagnostics::DiagnosticsController"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel"** %2, align 8
  ret %"class.diagnostics::DiagnosticsModel"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN11diagnostics21DiagnosticsController10HasResultsEv(%"class.diagnostics::DiagnosticsController"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.diagnostics::DiagnosticsController", %"class.diagnostics::DiagnosticsController"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel"** %2, align 8
  %4 = icmp eq %"class.diagnostics::DiagnosticsModel"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.diagnostics::DiagnosticsModel"* %3 to i32 (%"class.diagnostics::DiagnosticsModel"*)***
  %7 = load i32 (%"class.diagnostics::DiagnosticsModel"*)**, i32 (%"class.diagnostics::DiagnosticsModel"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.diagnostics::DiagnosticsModel"*)*, i32 (%"class.diagnostics::DiagnosticsModel"*)** %7, i64 2
  %9 = load i32 (%"class.diagnostics::DiagnosticsModel"*)*, i32 (%"class.diagnostics::DiagnosticsModel"*)** %8, align 8
  %10 = tail call i32 %9(%"class.diagnostics::DiagnosticsModel"* nonnull %3) #8
  %11 = icmp sgt i32 %10, 0
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi i1 [ false, %1 ], [ %11, %5 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11diagnostics21DiagnosticsController12ClearResultsEv(%"class.diagnostics::DiagnosticsController"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.diagnostics::DiagnosticsController", %"class.diagnostics::DiagnosticsController"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel"** %2, align 8
  store %"class.diagnostics::DiagnosticsModel"* null, %"class.diagnostics::DiagnosticsModel"** %2, align 8
  %4 = icmp eq %"class.diagnostics::DiagnosticsModel"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.diagnostics::DiagnosticsModel"* %3 to void (%"class.diagnostics::DiagnosticsModel"*)***
  %7 = load void (%"class.diagnostics::DiagnosticsModel"*)**, void (%"class.diagnostics::DiagnosticsModel"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.diagnostics::DiagnosticsModel"*)*, void (%"class.diagnostics::DiagnosticsModel"*)** %7, i64 1
  %9 = load void (%"class.diagnostics::DiagnosticsModel"*)*, void (%"class.diagnostics::DiagnosticsModel"*)** %8, align 8
  tail call void %9(%"class.diagnostics::DiagnosticsModel"* nonnull %3) #8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN11diagnostics21DiagnosticsController20RecordRegularStartupEv(%"class.diagnostics::DiagnosticsController"* nocapture) local_unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11diagnostics21DiagnosticsController3RunERKN4base11CommandLineEPNS_17DiagnosticsWriterE(%"class.diagnostics::DiagnosticsController"* nocapture, %"class.base::CommandLine"* dereferenceable(56), %"class.diagnostics::DiagnosticsWriter"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.diagnostics::DiagnosticsController", %"class.diagnostics::DiagnosticsController"* %0, i64 0, i32 1
  store %"class.diagnostics::DiagnosticsWriter"* %2, %"class.diagnostics::DiagnosticsWriter"** %4, align 8
  %5 = tail call %"class.diagnostics::DiagnosticsModel"* @_ZN11diagnostics20MakeDiagnosticsModelERKN4base11CommandLineE(%"class.base::CommandLine"* dereferenceable(56) %1) #8
  %6 = getelementptr inbounds %"class.diagnostics::DiagnosticsController", %"class.diagnostics::DiagnosticsController"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel"** %6, align 8
  store %"class.diagnostics::DiagnosticsModel"* %5, %"class.diagnostics::DiagnosticsModel"** %6, align 8
  %8 = icmp eq %"class.diagnostics::DiagnosticsModel"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.diagnostics::DiagnosticsModel"* %7 to void (%"class.diagnostics::DiagnosticsModel"*)***
  %11 = load void (%"class.diagnostics::DiagnosticsModel"*)**, void (%"class.diagnostics::DiagnosticsModel"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.diagnostics::DiagnosticsModel"*)*, void (%"class.diagnostics::DiagnosticsModel"*)** %11, i64 1
  %13 = load void (%"class.diagnostics::DiagnosticsModel"*)*, void (%"class.diagnostics::DiagnosticsModel"*)** %12, align 8
  tail call void %13(%"class.diagnostics::DiagnosticsModel"* nonnull %7) #8
  %14 = load %"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel"** %6, align 8
  br label %15

15:                                               ; preds = %3, %9
  %16 = phi %"class.diagnostics::DiagnosticsModel"* [ %5, %3 ], [ %14, %9 ]
  %17 = bitcast %"class.diagnostics::DiagnosticsWriter"** %4 to %"class.diagnostics::DiagnosticsModel::Observer"**
  %18 = load %"class.diagnostics::DiagnosticsModel::Observer"*, %"class.diagnostics::DiagnosticsModel::Observer"** %17, align 8
  %19 = bitcast %"class.diagnostics::DiagnosticsModel"* %16 to void (%"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel::Observer"*)***
  %20 = load void (%"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel::Observer"*)**, void (%"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel::Observer"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel::Observer"*)*, void (%"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel::Observer"*)** %20, i64 4
  %22 = load void (%"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel::Observer"*)*, void (%"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel::Observer"*)** %21, align 8
  tail call void %22(%"class.diagnostics::DiagnosticsModel"* %16, %"class.diagnostics::DiagnosticsModel::Observer"* %18) #8
  ret i32 0
}

declare %"class.diagnostics::DiagnosticsModel"* @_ZN11diagnostics20MakeDiagnosticsModelERKN4base11CommandLineE(%"class.base::CommandLine"* dereferenceable(56)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN11diagnostics21DiagnosticsController11RunRecoveryERKN4base11CommandLineEPNS_17DiagnosticsWriterE(%"class.diagnostics::DiagnosticsController"* nocapture, %"class.base::CommandLine"* nocapture readnone dereferenceable(56), %"class.diagnostics::DiagnosticsWriter"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.diagnostics::DiagnosticsController", %"class.diagnostics::DiagnosticsController"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel"** %5, align 8
  %7 = icmp eq %"class.diagnostics::DiagnosticsModel"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.diagnostics::DiagnosticsModel"* %6 to i32 (%"class.diagnostics::DiagnosticsModel"*)***
  %10 = load i32 (%"class.diagnostics::DiagnosticsModel"*)**, i32 (%"class.diagnostics::DiagnosticsModel"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.diagnostics::DiagnosticsModel"*)*, i32 (%"class.diagnostics::DiagnosticsModel"*)** %10, i64 2
  %12 = load i32 (%"class.diagnostics::DiagnosticsModel"*)*, i32 (%"class.diagnostics::DiagnosticsModel"*)** %11, align 8
  %13 = tail call i32 %12(%"class.diagnostics::DiagnosticsModel"* nonnull %6) #8
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %37, label %15

15:                                               ; preds = %3, %8
  %16 = icmp eq %"class.diagnostics::DiagnosticsWriter"* %2, null
  br i1 %16, label %45, label %17

17:                                               ; preds = %15
  %18 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #8
  %19 = tail call i8* @_Znwm(i64 32) #9
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast i64* %21 to <2 x i64>*
  store <2 x i64> <i64 29, i64 -9223372036854775776>, <2 x i64>* %22, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %19, i8* align 1 getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i64 29, i1 false) #8
  %23 = getelementptr inbounds i8, i8* %19, i64 29
  store i8 0, i8* %23, align 1
  %24 = call zeroext i1 @_ZN11diagnostics17DiagnosticsWriter13WriteInfoLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.diagnostics::DiagnosticsWriter"* nonnull %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #8
  %25 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %17
  %30 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %17, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #8
  %32 = load %"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel"** %5, align 8
  %33 = bitcast %"class.diagnostics::DiagnosticsWriter"* %2 to void (%"class.diagnostics::DiagnosticsWriter"*, %"class.diagnostics::DiagnosticsModel"*)***
  %34 = load void (%"class.diagnostics::DiagnosticsWriter"*, %"class.diagnostics::DiagnosticsModel"*)**, void (%"class.diagnostics::DiagnosticsWriter"*, %"class.diagnostics::DiagnosticsModel"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.diagnostics::DiagnosticsWriter"*, %"class.diagnostics::DiagnosticsModel"*)*, void (%"class.diagnostics::DiagnosticsWriter"*, %"class.diagnostics::DiagnosticsModel"*)** %34, i64 5
  %36 = load void (%"class.diagnostics::DiagnosticsWriter"*, %"class.diagnostics::DiagnosticsModel"*)*, void (%"class.diagnostics::DiagnosticsWriter"*, %"class.diagnostics::DiagnosticsModel"*)** %35, align 8
  call void %36(%"class.diagnostics::DiagnosticsWriter"* nonnull %2, %"class.diagnostics::DiagnosticsModel"* %32) #8
  br label %45

37:                                               ; preds = %8
  %38 = getelementptr inbounds %"class.diagnostics::DiagnosticsController", %"class.diagnostics::DiagnosticsController"* %0, i64 0, i32 1
  store %"class.diagnostics::DiagnosticsWriter"* %2, %"class.diagnostics::DiagnosticsWriter"** %38, align 8
  %39 = load %"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel"** %5, align 8
  %40 = getelementptr inbounds %"class.diagnostics::DiagnosticsWriter", %"class.diagnostics::DiagnosticsWriter"* %2, i64 0, i32 0
  %41 = bitcast %"class.diagnostics::DiagnosticsModel"* %39 to void (%"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel::Observer"*)***
  %42 = load void (%"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel::Observer"*)**, void (%"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel::Observer"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel::Observer"*)*, void (%"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel::Observer"*)** %42, i64 5
  %44 = load void (%"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel::Observer"*)*, void (%"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel::Observer"*)** %43, align 8
  tail call void %44(%"class.diagnostics::DiagnosticsModel"* %39, %"class.diagnostics::DiagnosticsModel::Observer"* %40) #8
  br label %45

45:                                               ; preds = %31, %15, %37
  %46 = phi i32 [ 0, %37 ], [ -1, %15 ], [ -1, %31 ]
  ret i32 %46
}

declare zeroext i1 @_ZN11diagnostics17DiagnosticsWriter13WriteInfoLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.diagnostics::DiagnosticsWriter"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base9SingletonIN11diagnostics21DiagnosticsControllerENS_22DefaultSingletonTraitsIS2_EES2_E6OnExitEPv(i8*) #0 comdat align 2 {
  %2 = load atomic i64, i64* @_ZN4base9SingletonIN11diagnostics21DiagnosticsControllerENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E monotonic, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %16, label %4

4:                                                ; preds = %1
  %5 = inttoptr i64 %2 to %"class.diagnostics::DiagnosticsController"*
  %6 = getelementptr inbounds %"class.diagnostics::DiagnosticsController", %"class.diagnostics::DiagnosticsController"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.diagnostics::DiagnosticsModel"*, %"class.diagnostics::DiagnosticsModel"** %6, align 8
  store %"class.diagnostics::DiagnosticsModel"* null, %"class.diagnostics::DiagnosticsModel"** %6, align 8
  %8 = icmp eq %"class.diagnostics::DiagnosticsModel"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = bitcast %"class.diagnostics::DiagnosticsModel"* %7 to void (%"class.diagnostics::DiagnosticsModel"*)***
  %11 = load void (%"class.diagnostics::DiagnosticsModel"*)**, void (%"class.diagnostics::DiagnosticsModel"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.diagnostics::DiagnosticsModel"*)*, void (%"class.diagnostics::DiagnosticsModel"*)** %11, i64 1
  %13 = load void (%"class.diagnostics::DiagnosticsModel"*)*, void (%"class.diagnostics::DiagnosticsModel"*)** %12, align 8
  tail call void %13(%"class.diagnostics::DiagnosticsModel"* nonnull %7) #8
  br label %14

14:                                               ; preds = %9, %4
  %15 = inttoptr i64 %2 to i8*
  tail call void @_ZdlPv(i8* %15) #9
  br label %16

16:                                               ; preds = %1, %14
  store i64 0, i64* @_ZN4base9SingletonIN11diagnostics21DiagnosticsControllerENS_22DefaultSingletonTraitsIS2_EES2_E9instance_E, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #4

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
