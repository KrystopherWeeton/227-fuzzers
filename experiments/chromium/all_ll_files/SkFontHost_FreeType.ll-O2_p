; ModuleID = '../../third_party/skia/src/ports/SkFontHost_FreeType.cpp'
source_filename = "../../third_party/skia/src/ports/SkFontHost_FreeType.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.FT_MemoryRec_ = type { i8*, {}*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%struct.SkFaceRec = type <{ %struct.SkFaceRec*, %"class.std::__1::unique_ptr", %struct.FT_StreamRec_, %"class.std::__1::unique_ptr.1", i32, i32, %class.SkAutoSTMalloc, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.SkStreamAsset* }
%class.SkStreamAsset = type { %class.SkStreamSeekable }
%class.SkStreamSeekable = type { %class.SkStreamRewindable }
%class.SkStreamRewindable = type { %class.SkStream }
%class.SkStream = type { i32 (...)** }
%class.SkAutoSTMalloc = type { i32*, %union.anon }
%union.anon = type { [4 x i32] }
%class.FreeTypeLibrary = type { i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_MM_Var_*, i32, i32*)*, %struct.FT_LibraryRec_*, i8, i8, i32 }
%struct.FT_MM_Var_ = type { i32, i32, i32, %struct.FT_Var_Axis_*, %struct.FT_Var_Named_Style_* }
%struct.FT_Var_Axis_ = type { i8*, i64, i64, i64, i64, i32 }
%struct.FT_Var_Named_Style_ = type { i64*, i32, i32 }
%struct.anon = type { i8*, i32 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%struct.anon.81 = type { i8*, i8 }
%class.SkScalerContext_FreeType = type <{ %class.SkScalerContext_FreeType_Base, %"class.std::__1::unique_ptr.31", %struct.FT_FaceRec_*, %struct.FT_SizeRec_*, i32, %class.SkMatrix, [4 x i8], %struct.FT_Matrix_, %struct.SkPoint, i32, i8, i8, [2 x i8] }>
%class.SkScalerContext_FreeType_Base = type { %class.SkScalerContext }
%class.SkScalerContext = type { i32 (...)**, %struct.SkScalerContextRec, %class.sk_sp.21, %class.sk_sp.22, %class.sk_sp.23, i8, %class.SkTMaskPreBlend }
%struct.SkScalerContextRec = type { i32, float, float, float, [2 x [2 x float]], float, float, i32, i8, i8, i8, i8, i8, i8, i16 }
%class.sk_sp.21 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.sk_sp.22 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.23 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkTMaskPreBlend = type { %class.sk_sp.24, i8*, i8*, i8* }
%class.sk_sp.24 = type { %class.SkTMaskGamma* }
%class.SkTMaskGamma = type { %class.SkRefCnt.base, [8 x [256 x i8]], i8, [3 x i8] }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %struct.SkFaceRec* }
%class.SkMatrix = type { [9 x float], i32 }
%struct.FT_Matrix_ = type { i64, i64, i64, i64 }
%struct.SkPoint = type { float, float }
%class.sk_sp.39 = type { %class.SkTypeface_FreeType* }
%class.SkTypeface_FreeType = type { %class.SkTypeface.base, %class.SkSharedMutex, %class.SkCharToGlyphCache }
%class.SkTypeface.base = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8 }>
%class.SkSharedMutex = type { %"struct.std::__1::atomic", %class.SkSemaphore, %class.SkSemaphore }
%class.SkCharToGlyphCache = type { %class.SkTDArray, %class.SkTDArray.17, double }
%class.SkTDArray = type { i32*, i32, i32 }
%class.SkTDArray.17 = type { i16*, i32, i32 }
%struct.SkScalerContextEffects = type { %class.SkPathEffect*, %class.SkMaskFilter* }
%class.SkDescriptor = type { i32, i32, i32 }
%"class.SkTypeface_FreeType::Scanner" = type { %struct.FT_LibraryRec_*, %class.SkMutex }
%struct.SkAdvancedTypefaceMetrics = type { %class.SkString, %class.SkString, i32, i8, i8, i16, i16, i16, i16, i16, %struct.SkIRect }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.AutoFTAccess = type { %struct.SkFaceRec* }
%struct.PS_FontInfoRec_ = type { i8*, i8*, i8*, i8*, i8*, i64, i8, i16, i16 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkFontData = type { %"class.std::__1::unique_ptr.1", i32, i32, %class.SkAutoSTMalloc }
%struct.SkFontArguments = type { i32, %"struct.SkFontArguments::VariationPosition" }
%"struct.SkFontArguments::VariationPosition" = type { %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32 }
%"struct.SkFontArguments::VariationPosition::Coordinate" = type { i32, float }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray = type { %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"*, i64 }
%"struct.SkTypeface_FreeType::Scanner::AxisDefinition" = type { i32, i32, i32, i32 }
%class.SkAutoSTMalloc.46 = type { %"struct.SkFontArguments::VariationPosition::Coordinate"*, %union.anon.47 }
%union.anon.47 = type { [8 x i32] }
%class.SkAutoSTMalloc.82 = type { i64*, %union.anon.83 }
%union.anon.83 = type { [1 x i64], [24 x i8] }
%struct.FT_Color_ = type { i8, i8, i8, i8 }
%struct.FT_Open_Args_ = type { i32, i8*, i64, i8*, %struct.FT_StreamRec_*, %struct.FT_ModuleRec_*, i32, %struct.FT_Parameter_* }
%struct.FT_ModuleRec_ = type opaque
%struct.FT_Parameter_ = type { i64, i8* }
%class.SkGlyph = type { i16, i16, i16, i16, i8*, %"struct.SkGlyph::PathData"*, float, float, i8, i8, %struct.SkPackedGlyphID }
%"struct.SkGlyph::PathData" = type <{ %"struct.SkGlyph::Intercept"*, %class.SkPath, i8, [7 x i8] }>
%"struct.SkGlyph::Intercept" = type { %"struct.SkGlyph::Intercept"*, [2 x float], [2 x float] }
%class.SkPath = type <{ %class.sk_sp.54, i32, %"struct.std::__1::atomic.6", %"struct.std::__1::atomic.6", i8, i8 }>
%class.sk_sp.54 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray.55, %class.SkTDArray.56, %class.SkTDArray.57, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray.55 = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.56 = type { i8*, i32, i32 }
%class.SkTDArray.57 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.58 }
%class.SkTDArray.58 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.59", [3 x i8] }
%"struct.std::__1::atomic.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__cxx_atomic_impl.61" }
%"struct.std::__1::__cxx_atomic_impl.61" = type { %"struct.std::__1::__cxx_atomic_base_impl.62" }
%"struct.std::__1::__cxx_atomic_base_impl.62" = type { i8 }
%struct.SkPackedGlyphID = type { i32 }
%struct.FT_LayerIterator_ = type { i32, i32, i8* }
%struct.FT_Opaque_Paint_ = type { i8*, i8 }
%struct.SkFontMetrics = type { i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%"class.SkTypeface::LocalizedStrings" = type { i32 (...)** }
%class.sk_sp.64 = type { %"class.SkOTUtils::LocalizedStrings_NameTable"* }
%"class.SkOTUtils::LocalizedStrings_NameTable" = type <{ %"class.SkTypeface::LocalizedStrings", i16*, i32, i32, %"class.std::__1::unique_ptr.65", %"class.SkOTTableName::Iterator", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { i8* }
%"class.SkOTTableName::Iterator" = type <{ i8*, i64, i64, i32 }>
%"struct.SkFontParameters::Variation::Axis" = type <{ i32, float, float, float, i16, [2 x i8] }>
%class.sk_sp.77 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.78, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.78 = type { %"struct.std::__1::atomic" }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.84", %"class.std::__1::__tuple_leaf.85" }
%"class.std::__1::__tuple_leaf" = type { i32 }
%"class.std::__1::__tuple_leaf.84" = type { i32 }
%"class.std::__1::__tuple_leaf.85" = type { i32 }
%"class.SkOTUtils::LocalizedStrings_SingleName" = type <{ %"class.SkTypeface::LocalizedStrings", %class.SkString, %class.SkString, i8, [7 x i8] }>
%"struct.SkTypeface::LocalizedString" = type { %class.SkString, %class.SkString }

$_ZN12AutoFTAccessC2EPK19SkTypeface_FreeType = comdat any

$_ZN12AutoFTAccessD2Ev = comdat any

$_ZN19SkTypeface_FreeTypeD2Ev = comdat any

$_ZN19SkTypeface_FreeTypeD0Ev = comdat any

$_ZNK12SkWeakRefCnt16internal_disposeEv = comdat any

$_ZNK12SkWeakRefCnt12weak_disposeEv = comdat any

$_ZNK10SkTypeface14onGetCTFontRefEv = comdat any

$_ZN15FreeTypeLibraryC2Ev = comdat any

$_ZN8SkTArrayIN19SkTypeface_FreeType7Scanner14AxisDefinitionELb1EE12checkReallocEiNS3_11ReallocTypeE = comdat any

$_ZN9SkOTUtils27LocalizedStrings_SingleNameD2Ev = comdat any

$_ZN9SkOTUtils27LocalizedStrings_SingleNameD0Ev = comdat any

$_ZN9SkOTUtils27LocalizedStrings_SingleName4nextEPN10SkTypeface15LocalizedStringE = comdat any

$_ZTVN9SkOTUtils27LocalizedStrings_SingleNameE = comdat any

@gFTMemory = hidden global { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* } { i8* null, i8* (%struct.FT_MemoryRec_*, i64)* @_ZL11sk_ft_allocP13FT_MemoryRec_l, void (%struct.FT_MemoryRec_*, i8*)* @_ZL10sk_ft_freeP13FT_MemoryRec_Pv, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* @_ZL13sk_ft_reallocP13FT_MemoryRec_llPv }, align 8
@_ZL12gFaceRecHead = internal unnamed_addr global %struct.SkFaceRec* null, align 8
@_ZL10gFTLibrary = internal unnamed_addr global %class.FreeTypeLibrary* null, align 8
@_ZTV24SkScalerContext_FreeType = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkScalerContext_FreeType*)* @_ZN24SkScalerContext_FreeTypeD2Ev to i8*), i8* bitcast (void (%class.SkScalerContext_FreeType*)* @_ZN24SkScalerContext_FreeTypeD0Ev to i8*), i8* bitcast (i1 (%class.SkScalerContext_FreeType*, %class.SkGlyph*)* @_ZN24SkScalerContext_FreeType15generateAdvanceEP7SkGlyph to i8*), i8* bitcast (void (%class.SkScalerContext_FreeType*, %class.SkGlyph*)* @_ZN24SkScalerContext_FreeType15generateMetricsEP7SkGlyph to i8*), i8* bitcast (void (%class.SkScalerContext_FreeType*, %class.SkGlyph*)* @_ZN24SkScalerContext_FreeType13generateImageERK7SkGlyph to i8*), i8* bitcast (i1 (%class.SkScalerContext_FreeType*, i16, %class.SkPath*)* @_ZN24SkScalerContext_FreeType12generatePathEtP6SkPath to i8*), i8* bitcast (void (%class.SkScalerContext_FreeType*, %struct.SkFontMetrics*)* @_ZN24SkScalerContext_FreeType19generateFontMetricsEP13SkFontMetrics to i8*)] }, align 8
@__const._ZN24SkScalerContext_FreeType15generateMetricsEP7SkGlyph.bounds = private unnamed_addr constant %struct.FT_BBox_ { i64 9223372036854775807, i64 9223372036854775807, i64 -9223372036854775808, i64 -9223372036854775808 }, align 8
@.str = private unnamed_addr constant [4 x i8] c"und\00", align 1
@_ZZNK19SkTypeface_FreeType7Scanner8scanFontEP13SkStreamAssetiP8SkStringP11SkFontStylePbP9SkSTArrayILi4ENS0_14AxisDefinitionELb1EEE13commonWeights = internal constant [25 x %struct.anon] [%struct.anon { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 400 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i32 900 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i32 700 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i32 350 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i32 600 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i32 0, i32 0), i32 600 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i32 800 }, %struct.anon { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i32 0, i32 0), i32 800 }, %struct.anon { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i32 0, i32 0), i32 200 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i32 0, i32 0), i32 100 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i32 0, i32 0), i32 900 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i32 0, i32 0), i32 300 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i32 0, i32 0), i32 500 }, %struct.anon { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i32 400 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), i32 400 }, %struct.anon { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i32 0, i32 0), i32 400 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i32 0, i32 0), i32 400 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i32 0, i32 0), i32 600 }, %struct.anon { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i32 0, i32 0), i32 400 }, %struct.anon { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i32 0, i32 0), i32 100 }, %struct.anon { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i32 0, i32 0), i32 800 }, %struct.anon { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i32 0, i32 0), i32 1000 }, %struct.anon { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i32 800 }, %struct.anon { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i32 0, i32 0), i32 1000 }, %struct.anon { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i32 0, i32 0), i32 200 }], align 16
@.str.1 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"black\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"bold\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"book\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"demi\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"demibold\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"extra\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"extrabold\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"extralight\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"hairline\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"heavy\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"light\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"medium\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"plain\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"regular\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c"roman\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"semibold\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"standard\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"thin\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"ultra\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"ultrablack\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"ultrabold\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"ultraheavy\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"ultralight\00", align 1
@_ZTV19SkTypeface_FreeType = hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkTypeface_FreeType*)* @_ZN19SkTypeface_FreeTypeD2Ev to i8*), i8* bitcast (void (%class.SkTypeface_FreeType*)* @_ZN19SkTypeface_FreeTypeD0Ev to i8*), i8* bitcast (void (%class.SkWeakRefCnt*)* @_ZNK12SkWeakRefCnt16internal_disposeEv to i8*), i8* bitcast (void (%class.SkWeakRefCnt*)* @_ZNK12SkWeakRefCnt12weak_disposeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%class.SkScalerContext* (%class.SkTypeface_FreeType*, %struct.SkScalerContextEffects*, %class.SkDescriptor*)* @_ZNK19SkTypeface_FreeType21onCreateScalerContextERK22SkScalerContextEffectsPK12SkDescriptor to i8*), i8* bitcast (void (%class.SkTypeface_FreeType*, %struct.SkScalerContextRec*)* @_ZNK19SkTypeface_FreeType11onFilterRecEP18SkScalerContextRec to i8*), i8* bitcast (%struct.SkAdvancedTypefaceMetrics* (%class.SkTypeface_FreeType*)* @_ZNK19SkTypeface_FreeType20onGetAdvancedMetricsEv to i8*), i8* bitcast (void (%class.SkTypeface_FreeType*, %class.SkString*)* @_ZNK19SkTypeface_FreeType23getPostScriptGlyphNamesEP8SkString to i8*), i8* bitcast (void (%class.SkTypeface_FreeType*, i32*)* @_ZNK19SkTypeface_FreeType20getGlyphToUnicodeMapEPi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%class.SkTypeface_FreeType*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)* @_ZNK19SkTypeface_FreeType28onGetVariationDesignPositionEPN15SkFontArguments17VariationPosition10CoordinateEi to i8*), i8* bitcast (i32 (%class.SkTypeface_FreeType*, %"struct.SkFontParameters::Variation::Axis"*, i32)* @_ZNK19SkTypeface_FreeType30onGetVariationDesignParametersEPN16SkFontParameters9Variation4AxisEi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkTypeface_FreeType*, i32*, i32, i16*)* @_ZNK19SkTypeface_FreeType15onCharsToGlyphsEPKiiPt to i8*), i8* bitcast (i32 (%class.SkTypeface_FreeType*)* @_ZNK19SkTypeface_FreeType13onCountGlyphsEv to i8*), i8* bitcast (i32 (%class.SkTypeface_FreeType*)* @_ZNK19SkTypeface_FreeType9onGetUPEMEv to i8*), i8* bitcast (i1 (%class.SkTypeface_FreeType*, i16*, i32, i32*)* @_ZNK19SkTypeface_FreeType27onGetKerningPairAdjustmentsEPKtiPi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.SkTypeface_FreeType*, %class.SkString*)* @_ZNK19SkTypeface_FreeType19onGetPostScriptNameEP8SkString to i8*), i8* bitcast (%"class.SkTypeface::LocalizedStrings"* (%class.SkTypeface_FreeType*)* @_ZNK19SkTypeface_FreeType26onCreateFamilyNameIteratorEv to i8*), i8* bitcast (i32 (%class.SkTypeface_FreeType*, i32*)* @_ZNK19SkTypeface_FreeType14onGetTableTagsEPj to i8*), i8* bitcast (i64 (%class.SkTypeface_FreeType*, i32, i64, i64, i8*)* @_ZNK19SkTypeface_FreeType14onGetTableDataEjmmPv to i8*), i8* bitcast (void (%class.sk_sp.77*, %class.SkTypeface_FreeType*, i32)* @_ZNK19SkTypeface_FreeType15onCopyTableDataEj to i8*), i8* bitcast (i1 (%class.SkTypeface*, %struct.SkRect*)* @_ZNK10SkTypeface15onComputeBoundsEP6SkRect to i8*), i8* bitcast (i8* (%class.SkTypeface*)* @_ZNK10SkTypeface14onGetCTFontRefEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZZL9f_t_mutexvE5mutex = internal unnamed_addr global %class.SkMutex* null, align 8
@_ZGVZL9f_t_mutexvE5mutex = internal global i64 0, align 8
@.str.26 = private unnamed_addr constant [57 x i8] c"../../third_party/skia/src/ports/SkFontHost_FreeType.cpp\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.28 = private unnamed_addr constant [17 x i8] c"ref_ft_library()\00", align 1
@_ZZL13get_font_typeP11FT_FaceRec_E6values = internal unnamed_addr constant [4 x %struct.anon.81] [%struct.anon.81 { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i32 0, i32 0), i8 0 }, %struct.anon.81 { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0), i8 1 }, %struct.anon.81 { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i32 0, i32 0), i8 2 }, %struct.anon.81 { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i32 0, i32 0), i8 3 }], align 16
@.str.29 = private unnamed_addr constant [7 x i8] c"Type 1\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"CID Type 1\00", align 1
@.str.31 = private unnamed_addr constant [4 x i8] c"CFF\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"TrueType\00", align 1
@_ZL8gFTCount = internal unnamed_addr global i32 0, align 4
@_ZTVN9SkOTUtils27LocalizedStrings_SingleNameE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkOTUtils::LocalizedStrings_SingleName"*)* @_ZN9SkOTUtils27LocalizedStrings_SingleNameD2Ev to i8*), i8* bitcast (void (%"class.SkOTUtils::LocalizedStrings_SingleName"*)* @_ZN9SkOTUtils27LocalizedStrings_SingleNameD0Ev to i8*), i8* bitcast (i1 (%"class.SkOTUtils::LocalizedStrings_SingleName"*, %"struct.SkTypeface::LocalizedString"*)* @_ZN9SkOTUtils27LocalizedStrings_SingleName4nextEPN10SkTypeface15LocalizedStringE to i8*)] }, comdat, align 8

@_ZN9SkFaceRecC1ENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEj = hidden unnamed_addr alias void (%struct.SkFaceRec*, %class.SkStreamAsset*, i32), void (%struct.SkFaceRec*, %class.SkStreamAsset*, i32)* @_ZN9SkFaceRecC2ENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEj
@_ZN24SkScalerContext_FreeTypeC1E5sk_spI19SkTypeface_FreeTypeERK22SkScalerContextEffectsPK12SkDescriptor = hidden unnamed_addr alias void (%class.SkScalerContext_FreeType*, %class.sk_sp.39*, %struct.SkScalerContextEffects*, %class.SkDescriptor*), void (%class.SkScalerContext_FreeType*, %class.sk_sp.39*, %struct.SkScalerContextEffects*, %class.SkDescriptor*)* @_ZN24SkScalerContext_FreeTypeC2E5sk_spI19SkTypeface_FreeTypeERK22SkScalerContextEffectsPK12SkDescriptor
@_ZN24SkScalerContext_FreeTypeD1Ev = hidden unnamed_addr alias void (%class.SkScalerContext_FreeType*), void (%class.SkScalerContext_FreeType*)* @_ZN24SkScalerContext_FreeTypeD2Ev
@_ZN19SkTypeface_FreeType7ScannerC1Ev = hidden unnamed_addr alias void (%"class.SkTypeface_FreeType::Scanner"*), void (%"class.SkTypeface_FreeType::Scanner"*)* @_ZN19SkTypeface_FreeType7ScannerC2Ev
@_ZN19SkTypeface_FreeType7ScannerD1Ev = hidden unnamed_addr alias void (%"class.SkTypeface_FreeType::Scanner"*), void (%"class.SkTypeface_FreeType::Scanner"*)* @_ZN19SkTypeface_FreeType7ScannerD2Ev

; Function Attrs: nounwind ssp uwtable
define internal i8* @_ZL11sk_ft_allocP13FT_MemoryRec_l(%struct.FT_MemoryRec_* nocapture readnone, i64) #0 {
  %3 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %1, i32 2) #15
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL10sk_ft_freeP13FT_MemoryRec_Pv(%struct.FT_MemoryRec_* nocapture readnone, i8*) #0 {
  tail call void @_Z7sk_freePv(i8* %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @_ZL13sk_ft_reallocP13FT_MemoryRec_llPv(%struct.FT_MemoryRec_* nocapture readnone, i64, i64, i8*) #0 {
  %5 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %3, i64 %2) #15
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkFaceRecC2ENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEj(%struct.SkFaceRec*, %class.SkStreamAsset*, i32) unnamed_addr #0 align 2 {
  %4 = ptrtoint %class.SkStreamAsset* %1 to i64
  %5 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %0, i64 0, i32 3
  %6 = bitcast %"class.std::__1::unique_ptr.1"* %5 to i64*
  %7 = bitcast %struct.SkFaceRec* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  store i64 %4, i64* %6, align 8
  %8 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %0, i64 0, i32 4
  store i32 1, i32* %8, align 8
  %9 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %0, i64 0, i32 5
  store i32 %2, i32* %9, align 4
  %10 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %0, i64 0, i32 6, i32 0
  %11 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %0, i64 0, i32 6, i32 1, i32 0, i64 0
  store i32* %11, i32** %10, align 8
  %12 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %0, i64 0, i32 7
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %0, i64 0, i32 8
  store i8 0, i8* %13, align 4
  %14 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %0, i64 0, i32 2
  %15 = bitcast %struct.FT_StreamRec_* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %15, i8 0, i64 80, i1 false) #15
  %16 = bitcast %class.SkStreamAsset* %1 to i64 (%class.SkStreamAsset*)***
  %17 = load i64 (%class.SkStreamAsset*)**, i64 (%class.SkStreamAsset*)*** %16, align 8
  %18 = getelementptr inbounds i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %17, i64 11
  %19 = load i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %18, align 8
  %20 = tail call i64 %19(%class.SkStreamAsset* %1) #15
  %21 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %0, i64 0, i32 2, i32 1
  store i64 %20, i64* %21, align 8
  %22 = load i64, i64* %6, align 8
  %23 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %0, i64 0, i32 2, i32 3, i32 0
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %0, i64 0, i32 2, i32 5
  store i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* @_ZL15sk_ft_stream_ioP13FT_StreamRec_mPhm, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %24, align 8
  %25 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %0, i64 0, i32 2, i32 6
  store void (%struct.FT_StreamRec_*)* @_ZL18sk_ft_stream_closeP13FT_StreamRec_, void (%struct.FT_StreamRec_*)** %25, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i64 @_ZL15sk_ft_stream_ioP13FT_StreamRec_mPhm(%struct.FT_StreamRec_* nocapture readonly, i64, i8*, i64) #0 {
  %5 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %0, i64 0, i32 3
  %6 = bitcast %union.FT_StreamDesc_* %5 to %class.SkStreamAsset**
  %7 = load %class.SkStreamAsset*, %class.SkStreamAsset** %6, align 8
  %8 = icmp eq i64 %3, 0
  br i1 %8, label %23, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkStreamAsset, %class.SkStreamAsset* %7, i64 0, i32 0
  %11 = bitcast %class.SkStreamAsset* %7 to i1 (%class.SkStreamSeekable*, i64)***
  %12 = load i1 (%class.SkStreamSeekable*, i64)**, i1 (%class.SkStreamSeekable*, i64)*** %11, align 8
  %13 = getelementptr inbounds i1 (%class.SkStreamSeekable*, i64)*, i1 (%class.SkStreamSeekable*, i64)** %12, i64 8
  %14 = load i1 (%class.SkStreamSeekable*, i64)*, i1 (%class.SkStreamSeekable*, i64)** %13, align 8
  %15 = tail call zeroext i1 %14(%class.SkStreamSeekable* %10, i64 %1) #15
  br i1 %15, label %16, label %23

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.SkStreamAsset, %class.SkStreamAsset* %7, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %class.SkStreamAsset* %7 to i64 (%class.SkStream*, i8*, i64)***
  %19 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %18, align 8
  %20 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %19, i64 2
  %21 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %20, align 8
  %22 = tail call i64 %21(%class.SkStream* %17, i8* %2, i64 %3) #15
  br label %23

23:                                               ; preds = %16, %4, %9
  %24 = phi i64 [ 0, %9 ], [ %22, %16 ], [ 0, %4 ]
  ret i64 %24
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZL18sk_ft_stream_closeP13FT_StreamRec_(%struct.FT_StreamRec_* nocapture) #1 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z13unref_ft_faceP9SkFaceRec(%struct.SkFaceRec* nocapture readonly) local_unnamed_addr #0 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %13, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 16) #16
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %12, align 8
  store i8* %8, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %13

13:                                               ; preds = %1, %4, %7
  %14 = load %struct.SkFaceRec*, %struct.SkFaceRec** @_ZL12gFaceRecHead, align 8
  %15 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %16

16:                                               ; preds = %20, %13
  %17 = phi %struct.SkFaceRec* [ %14, %13 ], [ %22, %20 ]
  %18 = phi %struct.SkFaceRec* [ null, %13 ], [ %17, %20 ]
  %19 = icmp eq %struct.SkFaceRec* %17, null
  br i1 %19, label %59, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %17, i64 0, i32 0
  %22 = load %struct.SkFaceRec*, %struct.SkFaceRec** %21, align 8
  %23 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %17, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %23, align 8
  %25 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %15, align 8
  %26 = icmp eq %struct.FT_FaceRec_* %24, %25
  br i1 %26, label %27, label %16

27:                                               ; preds = %20
  %28 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %17, i64 0, i32 1, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %17, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, -1
  store i32 %31, i32* %29, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %59

33:                                               ; preds = %27
  %34 = icmp eq %struct.SkFaceRec* %18, null
  %35 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %18, i64 0, i32 0
  %36 = select i1 %34, %struct.SkFaceRec** @_ZL12gFaceRecHead, %struct.SkFaceRec** %35
  store %struct.SkFaceRec* %22, %struct.SkFaceRec** %36, align 8
  %37 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %17, i64 0, i32 6, i32 0
  %38 = load i32*, i32** %37, align 8
  %39 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %17, i64 0, i32 6, i32 1, i32 0, i64 0
  %40 = icmp eq i32* %38, %39
  br i1 %40, label %43, label %41

41:                                               ; preds = %33
  %42 = bitcast i32* %38 to i8*
  tail call void @_Z7sk_freePv(i8* %42) #15
  br label %43

43:                                               ; preds = %41, %33
  %44 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %17, i64 0, i32 3, i32 0, i32 0, i32 0
  %45 = load %class.SkStreamAsset*, %class.SkStreamAsset** %44, align 8
  store %class.SkStreamAsset* null, %class.SkStreamAsset** %44, align 8
  %46 = icmp eq %class.SkStreamAsset* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = bitcast %class.SkStreamAsset* %45 to void (%class.SkStreamAsset*)***
  %49 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %48, align 8
  %50 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %49, i64 1
  %51 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %50, align 8
  tail call void %51(%class.SkStreamAsset* nonnull %45) #15
  br label %52

52:                                               ; preds = %47, %43
  %53 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %28, align 8
  store %struct.FT_FaceRec_* null, %struct.FT_FaceRec_** %28, align 8
  %54 = icmp eq %struct.FT_FaceRec_* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %52
  %56 = tail call i32 @FT_Done_Face(%struct.FT_FaceRec_* nonnull %53) #15
  br label %57

57:                                               ; preds = %52, %55
  %58 = bitcast %struct.SkFaceRec* %17 to i8*
  tail call void @_ZdlPv(i8* %58) #16
  br label %59

59:                                               ; preds = %16, %27, %57
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.SkAdvancedTypefaceMetrics* @_ZNK19SkTypeface_FreeType20onGetAdvancedMetricsEv(%class.SkTypeface_FreeType*) unnamed_addr #0 align 2 {
  %2 = alloca %class.AutoFTAccess, align 8
  %3 = alloca %struct.PS_FontInfoRec_, align 8
  %4 = bitcast %class.AutoFTAccess* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #15
  %5 = getelementptr inbounds %class.AutoFTAccess, %class.AutoFTAccess* %2, i64 0, i32 0
  store %struct.SkFaceRec* inttoptr (i64 -6148914691236517206 to %struct.SkFaceRec*), %struct.SkFaceRec** %5, align 8
  call void @_ZN12AutoFTAccessC2EPK19SkTypeface_FreeType(%class.AutoFTAccess* nonnull %2, %class.SkTypeface_FreeType* %0)
  %6 = load %struct.SkFaceRec*, %struct.SkFaceRec** %5, align 8
  %7 = icmp eq %struct.SkFaceRec* %6, null
  br i1 %7, label %156, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %9, align 8
  %11 = icmp eq %struct.FT_FaceRec_* %10, null
  br i1 %11, label %156, label %12

12:                                               ; preds = %8
  %13 = call i8* @_Znwm(i64 48) #16
  %14 = bitcast i8* %13 to %class.SkString*
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %14) #15
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  %16 = bitcast i8* %15 to %class.SkString*
  call void @_ZN8SkStringC1Ev(%class.SkString* %16) #15
  %17 = getelementptr inbounds i8, i8* %13, i64 16
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %13, i64 20
  store i8 4, i8* %19, align 4
  %20 = getelementptr inbounds i8, i8* %13, i64 21
  call void @llvm.memset.p0i8.i64(i8* align 1 %20, i8 0, i64 27, i1 false) #15
  %21 = call i8* @FT_Get_Postscript_Name(%struct.FT_FaceRec_* nonnull %10) #15
  call void @_ZN8SkString3setEPKc(%class.SkString* nonnull %14, i8* %21) #15
  %22 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSERKS_(%class.SkString* %16, %class.SkString* nonnull dereferenceable(8) %14) #15
  %23 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %10, i64 0, i32 2
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 256
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %12
  %28 = load i8, i8* %20, align 1
  %29 = or i8 %28, 1
  store i8 %29, i8* %20, align 1
  br label %30

30:                                               ; preds = %12, %27
  %31 = call zeroext i16 @FT_Get_FSType_Flags(%struct.FT_FaceRec_* nonnull %10) #15
  %32 = and i16 %31, 514
  %33 = icmp eq i16 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %30
  %35 = load i8, i8* %20, align 1
  %36 = or i8 %35, 2
  store i8 %36, i8* %20, align 1
  br label %37

37:                                               ; preds = %34, %30
  %38 = call zeroext i16 @FT_Get_FSType_Flags(%struct.FT_FaceRec_* nonnull %10) #15
  %39 = and i16 %38, 256
  %40 = icmp eq i16 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %37
  %42 = load i8, i8* %20, align 1
  %43 = or i8 %42, 4
  store i8 %43, i8* %20, align 1
  br label %44

44:                                               ; preds = %41, %37
  %45 = call i8* @FT_Get_X11_Font_Format(%struct.FT_FaceRec_* nonnull %10) #15
  %46 = call i32 @strcmp(i8* %45, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0)) #17
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = call i32 @strcmp(i8* %45, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0)) #17
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %58, %55, %48, %44
  %52 = phi %struct.anon.81* [ getelementptr inbounds ([4 x %struct.anon.81], [4 x %struct.anon.81]* @_ZZL13get_font_typeP11FT_FaceRec_E6values, i64 0, i64 0), %44 ], [ getelementptr inbounds ([4 x %struct.anon.81], [4 x %struct.anon.81]* @_ZZL13get_font_typeP11FT_FaceRec_E6values, i64 0, i64 1), %48 ], [ getelementptr inbounds ([4 x %struct.anon.81], [4 x %struct.anon.81]* @_ZZL13get_font_typeP11FT_FaceRec_E6values, i64 0, i64 2), %55 ], [ getelementptr inbounds ([4 x %struct.anon.81], [4 x %struct.anon.81]* @_ZZL13get_font_typeP11FT_FaceRec_E6values, i64 0, i64 3), %58 ]
  %53 = getelementptr inbounds %struct.anon.81, %struct.anon.81* %52, i64 0, i32 1
  %54 = load i8, i8* %53, align 8
  br label %61

55:                                               ; preds = %48
  %56 = call i32 @strcmp(i8* %45, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0)) #17
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %51, label %58

58:                                               ; preds = %55
  %59 = call i32 @strcmp(i8* %45, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i64 0, i64 0)) #17
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %51, label %61

61:                                               ; preds = %51, %58
  %62 = phi i8 [ %54, %51 ], [ 4, %58 ]
  store i8 %62, i8* %19, align 4
  store i32 0, i32* %18, align 8
  %63 = load i64, i64* %23, align 8
  %64 = lshr i64 %63, 2
  %65 = trunc i64 %64 to i32
  %66 = and i32 %65, 1
  store i32 %66, i32* %18, align 4
  %67 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %10, i64 0, i32 3
  %68 = load i64, i64* %67, align 8
  %69 = and i64 %68, 1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %73, label %71

71:                                               ; preds = %61
  %72 = or i32 %66, 64
  store i32 %72, i32* %18, align 4
  br label %73

73:                                               ; preds = %61, %71
  %74 = bitcast %struct.PS_FontInfoRec_* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %74) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 -86, i64 56, i1 false)
  %75 = call i32 @FT_Get_PS_Font_Info(%struct.FT_FaceRec_* nonnull %10, %struct.PS_FontInfoRec_* nonnull %3) #15
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %73
  %78 = getelementptr inbounds %struct.PS_FontInfoRec_, %struct.PS_FontInfoRec_* %3, i64 0, i32 5
  %79 = load i64, i64* %78, align 8
  %80 = trunc i64 %79 to i16
  br label %90

81:                                               ; preds = %73
  %82 = call i8* @FT_Get_Sfnt_Table(%struct.FT_FaceRec_* nonnull %10, i32 5) #15
  %83 = icmp eq i8* %82, null
  br i1 %83, label %90, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds i8, i8* %82, i64 8
  %86 = bitcast i8* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = lshr i64 %87, 16
  %89 = trunc i64 %88 to i16
  br label %90

90:                                               ; preds = %81, %84, %77
  %91 = phi i16 [ %89, %84 ], [ %80, %77 ], [ 0, %81 ]
  %92 = getelementptr inbounds i8, i8* %13, i64 22
  %93 = bitcast i8* %92 to i16*
  store i16 %91, i16* %93, align 2
  %94 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %10, i64 0, i32 14
  %95 = load i16, i16* %94, align 2
  %96 = getelementptr inbounds i8, i8* %13, i64 24
  %97 = bitcast i8* %96 to i16*
  store i16 %95, i16* %97, align 8
  %98 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %10, i64 0, i32 15
  %99 = load i16, i16* %98, align 4
  %100 = getelementptr inbounds i8, i8* %13, i64 26
  %101 = bitcast i8* %100 to i16*
  store i16 %99, i16* %101, align 2
  %102 = call i8* @FT_Get_Sfnt_Table(%struct.FT_FaceRec_* nonnull %10, i32 6) #15
  %103 = icmp eq i8* %102, null
  br i1 %103, label %124, label %104

104:                                              ; preds = %90
  %105 = getelementptr inbounds i8, i8* %102, i64 24
  %106 = bitcast i8* %105 to i16*
  %107 = load i16, i16* %106, align 8
  %108 = getelementptr inbounds i8, i8* %13, i64 30
  %109 = bitcast i8* %108 to i16*
  store i16 %107, i16* %109, align 2
  %110 = getelementptr inbounds i8, i8* %102, i64 60
  %111 = load i8, i8* %110, align 4
  %112 = and i8 %111, 63
  %113 = add nsw i8 %112, -2
  %114 = icmp ult i8 %113, 5
  br i1 %114, label %115, label %118

115:                                              ; preds = %104
  %116 = load i32, i32* %18, align 4
  %117 = or i32 %116, 2
  store i32 %117, i32* %18, align 4
  br label %136

118:                                              ; preds = %104
  %119 = add nsw i8 %112, -9
  %120 = icmp ult i8 %119, 4
  br i1 %120, label %121, label %136

121:                                              ; preds = %118
  %122 = load i32, i32* %18, align 4
  %123 = or i32 %122, 8
  store i32 %123, i32* %18, align 4
  br label %136

124:                                              ; preds = %90
  %125 = call i8* @FT_Get_Sfnt_Table(%struct.FT_FaceRec_* nonnull %10, i32 2) #15
  %126 = icmp eq i8* %125, null
  br i1 %126, label %136, label %127

127:                                              ; preds = %124
  %128 = bitcast i8* %125 to i16*
  %129 = load i16, i16* %128, align 8
  switch i16 %129, label %130 [
    i16 -1, label %136
    i16 1, label %136
    i16 0, label %136
  ]

130:                                              ; preds = %127
  %131 = getelementptr inbounds i8, i8* %125, i64 122
  %132 = bitcast i8* %131 to i16*
  %133 = load i16, i16* %132, align 2
  %134 = getelementptr inbounds i8, i8* %13, i64 30
  %135 = bitcast i8* %134 to i16*
  store i16 %133, i16* %135, align 2
  br label %136

136:                                              ; preds = %130, %124, %118, %121, %115, %127, %127, %127
  %137 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %10, i64 0, i32 12, i32 0
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %10, i64 0, i32 12, i32 3
  %140 = load i64, i64* %139, align 8
  %141 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %10, i64 0, i32 12, i32 2
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %10, i64 0, i32 12, i32 1
  %144 = load i64, i64* %143, align 8
  %145 = shl i64 %140, 32
  %146 = and i64 %138, 4294967295
  %147 = or i64 %145, %146
  %148 = shl i64 %144, 32
  %149 = and i64 %142, 4294967295
  %150 = or i64 %148, %149
  %151 = getelementptr inbounds i8, i8* %13, i64 32
  %152 = bitcast i8* %151 to i64*
  store i64 %147, i64* %152, align 8
  %153 = getelementptr inbounds i8, i8* %13, i64 40
  %154 = bitcast i8* %153 to i64*
  store i64 %150, i64* %154, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %74) #15
  %155 = bitcast i8* %13 to %struct.SkAdvancedTypefaceMetrics*
  br label %156

156:                                              ; preds = %1, %8, %136
  %157 = phi %struct.SkAdvancedTypefaceMetrics* [ %155, %136 ], [ null, %8 ], [ null, %1 ]
  call void @_ZN12AutoFTAccessD2Ev(%class.AutoFTAccess* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #15
  ret %struct.SkAdvancedTypefaceMetrics* %157
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12AutoFTAccessC2EPK19SkTypeface_FreeType(%class.AutoFTAccess*, %class.SkTypeface_FreeType*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.AutoFTAccess, %class.AutoFTAccess* %0, i64 0, i32 0
  store %struct.SkFaceRec* null, %struct.SkFaceRec** %3, align 8
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %15, !prof !2

6:                                                ; preds = %2
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %6
  %10 = tail call i8* @_Znwm(i64 16) #16
  %11 = bitcast i8* %10 to i32*
  store i32 1, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %10, i64 4
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  %14 = bitcast i8* %13 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %14, align 8
  store i8* %10, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %15

15:                                               ; preds = %2, %6, %9
  %16 = load %class.SkMutex*, %class.SkMutex** @_ZZL9f_t_mutexvE5mutex, align 8
  %17 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acquire
  %19 = icmp slt i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %16, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %21) #15
  br label %22

22:                                               ; preds = %15, %20
  %23 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %34, !prof !2

25:                                               ; preds = %22
  %26 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %25
  %29 = tail call i8* @_Znwm(i64 16) #16
  %30 = bitcast i8* %29 to i32*
  store i32 1, i32* %30, align 4
  %31 = getelementptr inbounds i8, i8* %29, i64 4
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds i8, i8* %29, i64 8
  %33 = bitcast i8* %32 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %33, align 8
  store i8* %29, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %34

34:                                               ; preds = %22, %25, %28
  %35 = load i32, i32* @_ZL8gFTCount, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %34
  %38 = load %class.FreeTypeLibrary*, %class.FreeTypeLibrary** @_ZL10gFTLibrary, align 8
  br label %43

39:                                               ; preds = %34
  %40 = tail call i8* @_Znwm(i64 32) #16
  %41 = bitcast i8* %40 to %class.FreeTypeLibrary*
  tail call void @_ZN15FreeTypeLibraryC2Ev(%class.FreeTypeLibrary* nonnull %41) #15
  store i8* %40, i8** bitcast (%class.FreeTypeLibrary** @_ZL10gFTLibrary to i8**), align 8
  %42 = load i32, i32* @_ZL8gFTCount, align 4
  br label %43

43:                                               ; preds = %37, %39
  %44 = phi %class.FreeTypeLibrary* [ %41, %39 ], [ %38, %37 ]
  %45 = phi i32 [ %42, %39 ], [ %35, %37 ]
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* @_ZL8gFTCount, align 4
  %47 = getelementptr inbounds %class.FreeTypeLibrary, %class.FreeTypeLibrary* %44, i64 0, i32 2
  %48 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %47, align 8
  %49 = icmp eq %struct.FT_LibraryRec_* %48, null
  br i1 %49, label %50, label %51

50:                                               ; preds = %43
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.26, i64 0, i64 0), i32 501, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i64 0, i64 0)) #18
  unreachable

51:                                               ; preds = %43
  %52 = tail call fastcc %struct.SkFaceRec* @_ZL11ref_ft_facePK19SkTypeface_FreeType(%class.SkTypeface_FreeType* %1)
  store %struct.SkFaceRec* %52, %struct.SkFaceRec** %3, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN8SkString3setEPKc(%class.SkString*, i8*) local_unnamed_addr #5

declare i8* @FT_Get_Postscript_Name(%struct.FT_FaceRec_*) local_unnamed_addr #5

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSERKS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i32 @FT_Get_PS_Font_Info(%struct.FT_FaceRec_*, %struct.PS_FontInfoRec_*) local_unnamed_addr #5

declare i8* @FT_Get_Sfnt_Table(%struct.FT_FaceRec_*, i32) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12AutoFTAccessD2Ev(%class.AutoFTAccess*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.AutoFTAccess, %class.AutoFTAccess* %0, i64 0, i32 0
  %3 = load %struct.SkFaceRec*, %struct.SkFaceRec** %2, align 8
  %4 = icmp eq %struct.SkFaceRec* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_Z13unref_ft_faceP9SkFaceRec(%struct.SkFaceRec* nonnull %3)
  br label %6

6:                                                ; preds = %1, %5
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %18, !prof !2

9:                                                ; preds = %6
  %10 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %9
  %13 = tail call i8* @_Znwm(i64 16) #16
  %14 = bitcast i8* %13 to i32*
  store i32 1, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %13, i64 4
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds i8, i8* %13, i64 8
  %17 = bitcast i8* %16 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %17, align 8
  store i8* %13, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %18

18:                                               ; preds = %6, %9, %12
  %19 = load i32, i32* @_ZL8gFTCount, align 4
  %20 = add nsw i32 %19, -1
  store i32 %20, i32* @_ZL8gFTCount, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %33

22:                                               ; preds = %18
  %23 = load %class.FreeTypeLibrary*, %class.FreeTypeLibrary** @_ZL10gFTLibrary, align 8
  %24 = icmp eq %class.FreeTypeLibrary* %23, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %class.FreeTypeLibrary, %class.FreeTypeLibrary* %23, i64 0, i32 2
  %27 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %26, align 8
  %28 = icmp eq %struct.FT_LibraryRec_* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = tail call i32 @FT_Done_Library(%struct.FT_LibraryRec_* nonnull %27) #15
  br label %31

31:                                               ; preds = %29, %25
  %32 = bitcast %class.FreeTypeLibrary* %23 to i8*
  tail call void @_ZdlPv(i8* %32) #16
  br label %33

33:                                               ; preds = %18, %22, %31
  %34 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %45, !prof !2

36:                                               ; preds = %33
  %37 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  %40 = tail call i8* @_Znwm(i64 16) #16
  %41 = bitcast i8* %40 to i32*
  store i32 1, i32* %41, align 4
  %42 = getelementptr inbounds i8, i8* %40, i64 4
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds i8, i8* %40, i64 8
  %44 = bitcast i8* %43 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %44, align 8
  store i8* %40, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %45

45:                                               ; preds = %33, %36, %39
  %46 = load %class.SkMutex*, %class.SkMutex** @_ZZL9f_t_mutexvE5mutex, align 8
  %47 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 1 release
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %45
  %51 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %46, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %51, i32 1) #15
  br label %52

52:                                               ; preds = %45, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19SkTypeface_FreeType20getGlyphToUnicodeMapEPi(%class.SkTypeface_FreeType*, i32* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %class.AutoFTAccess, align 8
  %4 = alloca i32, align 4
  %5 = bitcast %class.AutoFTAccess* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %class.AutoFTAccess, %class.AutoFTAccess* %3, i64 0, i32 0
  store %struct.SkFaceRec* inttoptr (i64 -6148914691236517206 to %struct.SkFaceRec*), %struct.SkFaceRec** %6, align 8
  call void @_ZN12AutoFTAccessC2EPK19SkTypeface_FreeType(%class.AutoFTAccess* nonnull %3, %class.SkTypeface_FreeType* %0)
  %7 = load %struct.SkFaceRec*, %struct.SkFaceRec** %6, align 8
  %8 = icmp eq %struct.SkFaceRec* %7, null
  br i1 %8, label %41, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %10, align 8
  %12 = icmp eq %struct.FT_FaceRec_* %11, null
  br i1 %12, label %41, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %11, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = shl i64 %15, 2
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %13
  %19 = bitcast i32* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %19, i8 0, i64 %16, i1 false) #15
  br label %20

20:                                               ; preds = %13, %18
  %21 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #15
  store i32 -1431655766, i32* %4, align 4
  %22 = call i64 @FT_Get_First_Char(%struct.FT_FaceRec_* nonnull %11, i32* nonnull %4) #15
  %23 = load i32, i32* %4, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %40, label %25

25:                                               ; preds = %20, %34
  %26 = phi i32 [ %38, %34 ], [ %23, %20 ]
  %27 = phi i64 [ %37, %34 ], [ %22, %20 ]
  %28 = zext i32 %26 to i64
  %29 = getelementptr inbounds i32, i32* %1, i64 %28
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = trunc i64 %27 to i32
  store i32 %33, i32* %29, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = shl i64 %27, 32
  %36 = ashr exact i64 %35, 32
  %37 = call i64 @FT_Get_Next_Char(%struct.FT_FaceRec_* nonnull %11, i64 %36, i32* nonnull %4) #15
  %38 = load i32, i32* %4, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %25

40:                                               ; preds = %34, %20
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #15
  br label %41

41:                                               ; preds = %2, %9, %40
  call void @_ZN12AutoFTAccessD2Ev(%class.AutoFTAccess* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret void
}

declare i64 @FT_Get_First_Char(%struct.FT_FaceRec_*, i32*) local_unnamed_addr #5

declare i64 @FT_Get_Next_Char(%struct.FT_FaceRec_*, i64, i32*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19SkTypeface_FreeType23getPostScriptGlyphNamesEP8SkString(%class.SkTypeface_FreeType*, %class.SkString*) unnamed_addr #0 align 2 {
  %3 = alloca %class.AutoFTAccess, align 8
  %4 = alloca [128 x i8], align 16
  %5 = bitcast %class.AutoFTAccess* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %class.AutoFTAccess, %class.AutoFTAccess* %3, i64 0, i32 0
  store %struct.SkFaceRec* inttoptr (i64 -6148914691236517206 to %struct.SkFaceRec*), %struct.SkFaceRec** %6, align 8
  call void @_ZN12AutoFTAccessC2EPK19SkTypeface_FreeType(%class.AutoFTAccess* nonnull %3, %class.SkTypeface_FreeType* %0)
  %7 = load %struct.SkFaceRec*, %struct.SkFaceRec** %6, align 8
  %8 = icmp eq %struct.SkFaceRec* %7, null
  br i1 %8, label %32, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %10, align 8
  %12 = icmp eq %struct.FT_FaceRec_* %11, null
  br i1 %12, label %32, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %11, i64 0, i32 4
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %11, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 512
  %19 = icmp ne i64 %18, 0
  %20 = icmp sgt i64 %15, 0
  %21 = and i1 %19, %20
  br i1 %21, label %22, label %32

22:                                               ; preds = %13
  %23 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi i64 [ 0, %22 ], [ %30, %24 ]
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %23) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 -86, i64 128, i1 false)
  %26 = trunc i64 %25 to i32
  %27 = call i32 @FT_Get_Glyph_Name(%struct.FT_FaceRec_* nonnull %11, i32 %26, i8* nonnull %23, i32 128) #15
  %28 = getelementptr inbounds %class.SkString, %class.SkString* %1, i64 %25
  %29 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString* %28, i8* nonnull %23) #15
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %23) #15
  %30 = add nuw nsw i64 %25, 1
  %31 = icmp eq i64 %30, %15
  br i1 %31, label %32, label %24

32:                                               ; preds = %24, %13, %2, %9
  call void @_ZN12AutoFTAccessD2Ev(%class.AutoFTAccess* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret void
}

declare i32 @FT_Get_Glyph_Name(%struct.FT_FaceRec_*, i32, i8*, i32) local_unnamed_addr #5

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString*, i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK19SkTypeface_FreeType19onGetPostScriptNameEP8SkString(%class.SkTypeface_FreeType*, %class.SkString*) unnamed_addr #0 align 2 {
  %3 = alloca %class.AutoFTAccess, align 8
  %4 = bitcast %class.AutoFTAccess* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #15
  %5 = getelementptr inbounds %class.AutoFTAccess, %class.AutoFTAccess* %3, i64 0, i32 0
  store %struct.SkFaceRec* inttoptr (i64 -6148914691236517206 to %struct.SkFaceRec*), %struct.SkFaceRec** %5, align 8
  call void @_ZN12AutoFTAccessC2EPK19SkTypeface_FreeType(%class.AutoFTAccess* nonnull %3, %class.SkTypeface_FreeType* %0)
  %6 = load %struct.SkFaceRec*, %struct.SkFaceRec** %5, align 8
  %7 = icmp eq %struct.SkFaceRec* %6, null
  br i1 %7, label %19, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %6, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %9, align 8
  %11 = icmp eq %struct.FT_FaceRec_* %10, null
  br i1 %11, label %19, label %12

12:                                               ; preds = %8
  %13 = call i8* @FT_Get_Postscript_Name(%struct.FT_FaceRec_* nonnull %10) #15
  %14 = icmp eq i8* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %12
  %16 = icmp eq %class.SkString* %1, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString* nonnull %1, i8* nonnull %13) #15
  br label %19

19:                                               ; preds = %2, %12, %15, %17, %8
  %20 = phi i1 [ false, %8 ], [ false, %12 ], [ true, %15 ], [ true, %17 ], [ false, %2 ]
  call void @_ZN12AutoFTAccessD2Ev(%class.AutoFTAccess* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #15
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkScalerContext* @_ZNK19SkTypeface_FreeType21onCreateScalerContextERK22SkScalerContextEffectsPK12SkDescriptor(%class.SkTypeface_FreeType*, %struct.SkScalerContextEffects* dereferenceable(16), %class.SkDescriptor*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.39, align 8
  %5 = alloca %class.sk_sp.21, align 8
  %6 = icmp eq %class.SkTypeface_FreeType* %0, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.SkTypeface_FreeType, %class.SkTypeface_FreeType* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic, !noalias !3
  br label %10

10:                                               ; preds = %3, %7
  %11 = ptrtoint %class.SkTypeface_FreeType* %0 to i64
  %12 = bitcast %class.sk_sp.39* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12)
  %13 = tail call i8* @_Znwm(i64 248) #16
  %14 = bitcast i8* %13 to %class.SkScalerContext_FreeType*
  %15 = bitcast %class.sk_sp.39* %4 to i64*
  store i64 %11, i64* %15, align 8
  call void @_ZN24SkScalerContext_FreeTypeC2E5sk_spI19SkTypeface_FreeTypeERK22SkScalerContextEffectsPK12SkDescriptor(%class.SkScalerContext_FreeType* nonnull %14, %class.sk_sp.39* nonnull %4, %struct.SkScalerContextEffects* dereferenceable(16) %1, %class.SkDescriptor* %2) #15
  %16 = getelementptr inbounds %class.sk_sp.39, %class.sk_sp.39* %4, i64 0, i32 0
  %17 = load %class.SkTypeface_FreeType*, %class.SkTypeface_FreeType** %16, align 8
  %18 = icmp eq %class.SkTypeface_FreeType* %17, null
  br i1 %18, label %29, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %class.SkTypeface_FreeType, %class.SkTypeface_FreeType* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 -1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %29

23:                                               ; preds = %19
  %24 = bitcast %class.SkTypeface_FreeType* %17 to %class.SkRefCntBase*
  %25 = bitcast %class.SkTypeface_FreeType* %17 to void (%class.SkRefCntBase*)***
  %26 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %26, i64 2
  %28 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, align 8
  tail call void %28(%class.SkRefCntBase* nonnull %24) #15
  br label %29

29:                                               ; preds = %23, %19, %10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12)
  %30 = getelementptr inbounds i8, i8* %13, i64 144
  %31 = bitcast i8* %30 to %struct.FT_SizeRec_**
  %32 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %31, align 8
  %33 = icmp eq %struct.FT_SizeRec_* %32, null
  br i1 %33, label %40, label %34

34:                                               ; preds = %29
  %35 = ptrtoint i8* %13 to i64
  %36 = getelementptr inbounds i8, i8* %13, i64 136
  %37 = bitcast i8* %36 to %struct.FT_FaceRec_**
  %38 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %37, align 8
  %39 = icmp eq %struct.FT_FaceRec_* %38, null
  br i1 %39, label %40, label %66

40:                                               ; preds = %34, %29
  br i1 %6, label %44, label %41

41:                                               ; preds = %40
  %42 = getelementptr inbounds %class.SkTypeface_FreeType, %class.SkTypeface_FreeType* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw add i32* %42, i32 1 monotonic, !noalias !6
  br label %44

44:                                               ; preds = %40, %41
  %45 = bitcast %class.sk_sp.21* %5 to i64*
  store i64 %11, i64* %45, align 8
  %46 = call %class.SkScalerContext* @_ZN15SkScalerContext9MakeEmptyE5sk_spI10SkTypefaceERK22SkScalerContextEffectsPK12SkDescriptor(%class.sk_sp.21* nonnull %5, %struct.SkScalerContextEffects* dereferenceable(16) %1, %class.SkDescriptor* %2) #15
  %47 = ptrtoint %class.SkScalerContext* %46 to i64
  %48 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %5, i64 0, i32 0
  %49 = load %class.SkTypeface*, %class.SkTypeface** %48, align 8
  %50 = icmp eq %class.SkTypeface* %49, null
  br i1 %50, label %61, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %49, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = atomicrmw add i32* %52, i32 -1 acq_rel
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %55, label %61

55:                                               ; preds = %51
  %56 = bitcast %class.SkTypeface* %49 to %class.SkRefCntBase*
  %57 = bitcast %class.SkTypeface* %49 to void (%class.SkRefCntBase*)***
  %58 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %57, align 8
  %59 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, i64 2
  %60 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %59, align 8
  call void %60(%class.SkRefCntBase* nonnull %56) #15
  br label %61

61:                                               ; preds = %55, %51, %44
  %62 = bitcast i8* %13 to void (%class.SkScalerContext_FreeType*)***
  %63 = load void (%class.SkScalerContext_FreeType*)**, void (%class.SkScalerContext_FreeType*)*** %62, align 8
  %64 = getelementptr inbounds void (%class.SkScalerContext_FreeType*)*, void (%class.SkScalerContext_FreeType*)** %63, i64 1
  %65 = load void (%class.SkScalerContext_FreeType*)*, void (%class.SkScalerContext_FreeType*)** %64, align 8
  call void %65(%class.SkScalerContext_FreeType* nonnull %14) #15
  br label %66

66:                                               ; preds = %34, %61
  %67 = phi i64 [ %47, %61 ], [ %35, %34 ]
  %68 = inttoptr i64 %67 to %class.SkScalerContext*
  ret %class.SkScalerContext* %68
}

declare %class.SkScalerContext* @_ZN15SkScalerContext9MakeEmptyE5sk_spI10SkTypefaceERK22SkScalerContextEffectsPK12SkDescriptor(%class.sk_sp.21*, %struct.SkScalerContextEffects* dereferenceable(16), %class.SkDescriptor*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkFontData* @_ZNK19SkTypeface_FreeType13cloneFontDataERK15SkFontArguments(%class.SkTypeface_FreeType*, %struct.SkFontArguments* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.AutoFTAccess, align 8
  %4 = alloca %class.SkSTArray, align 8
  %5 = alloca %class.SkAutoSTMalloc.46, align 8
  %6 = alloca %class.SkString, align 8
  %7 = alloca %class.SkAutoSTMalloc, align 8
  %8 = alloca %class.SkSTArray, align 8
  %9 = alloca i32, align 4
  %10 = bitcast %class.AutoFTAccess* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #15
  %11 = getelementptr inbounds %class.AutoFTAccess, %class.AutoFTAccess* %3, i64 0, i32 0
  store %struct.SkFaceRec* inttoptr (i64 -6148914691236517206 to %struct.SkFaceRec*), %struct.SkFaceRec** %11, align 8
  call void @_ZN12AutoFTAccessC2EPK19SkTypeface_FreeType(%class.AutoFTAccess* nonnull %3, %class.SkTypeface_FreeType* %0)
  %12 = load %struct.SkFaceRec*, %struct.SkFaceRec** %11, align 8
  %13 = icmp eq %struct.SkFaceRec* %12, null
  br i1 %13, label %238, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %15, align 8
  %17 = icmp eq %struct.FT_FaceRec_* %16, null
  br i1 %17, label %238, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %19) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 64, i1 false)
  %20 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 64
  %21 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %4, i64 0, i32 0, i32 0, i64 72
  %22 = bitcast i8* %21 to i64*
  %23 = bitcast i8* %20 to i8**
  store i8* %19, i8** %23, align 8
  store i64 34359738368, i64* %22, align 8
  %24 = call zeroext i1 @_ZN19SkTypeface_FreeType7Scanner7GetAxesEP11FT_FaceRec_P9SkSTArrayILi4ENS0_14AxisDefinitionELb1EE(%struct.FT_FaceRec_* nonnull %16, %class.SkSTArray* nonnull %4)
  br i1 %24, label %25, label %230

25:                                               ; preds = %18
  %26 = load i64, i64* %22, align 8
  %27 = lshr i64 %26, 1
  %28 = trunc i64 %27 to i32
  %29 = and i32 %28, 2147483647
  %30 = bitcast %class.SkAutoSTMalloc.46* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 40, i1 false)
  %31 = zext i32 %29 to i64
  %32 = icmp ugt i32 %29, 4
  br i1 %32, label %33, label %37

33:                                               ; preds = %25
  %34 = call i8* @_Z15sk_malloc_throwmm(i64 %31, i64 8) #15
  %35 = bitcast %class.SkAutoSTMalloc.46* %5 to i8**
  store i8* %34, i8** %35, align 8
  %36 = bitcast i8* %34 to %"struct.SkFontArguments::VariationPosition::Coordinate"*
  br label %45

37:                                               ; preds = %25
  %38 = icmp eq i32 %29, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %37
  %40 = getelementptr inbounds %class.SkAutoSTMalloc.46, %class.SkAutoSTMalloc.46* %5, i64 0, i32 1
  %41 = bitcast %class.SkAutoSTMalloc.46* %5 to %union.anon.47**
  store %union.anon.47* %40, %union.anon.47** %41, align 8
  %42 = bitcast %union.anon.47* %40 to %"struct.SkFontArguments::VariationPosition::Coordinate"*
  br label %45

43:                                               ; preds = %37
  %44 = getelementptr inbounds %class.SkAutoSTMalloc.46, %class.SkAutoSTMalloc.46* %5, i64 0, i32 0
  store %"struct.SkFontArguments::VariationPosition::Coordinate"* null, %"struct.SkFontArguments::VariationPosition::Coordinate"** %44, align 8
  br label %45

45:                                               ; preds = %33, %39, %43
  %46 = phi %"struct.SkFontArguments::VariationPosition::Coordinate"* [ %36, %33 ], [ %42, %39 ], [ null, %43 ]
  %47 = getelementptr inbounds %class.SkAutoSTMalloc.46, %class.SkAutoSTMalloc.46* %5, i64 0, i32 0
  %48 = call fastcc i32 @_ZL26GetVariationDesignPositionR12AutoFTAccessPN15SkFontArguments17VariationPosition10CoordinateEi(%class.AutoFTAccess* nonnull dereferenceable(8) %3, %"struct.SkFontArguments::VariationPosition::Coordinate"* %46, i32 %29)
  %49 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #15
  %50 = getelementptr inbounds %class.SkString, %class.SkString* %6, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %50, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %6) #15
  %51 = bitcast %class.SkAutoSTMalloc* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #15
  %52 = getelementptr inbounds %class.SkAutoSTMalloc, %class.SkAutoSTMalloc* %7, i64 0, i32 0
  %53 = getelementptr inbounds %class.SkAutoSTMalloc, %class.SkAutoSTMalloc* %7, i64 0, i32 1, i32 0, i64 0
  %54 = bitcast %class.SkAutoSTMalloc* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 -86, i64 24, i1 false)
  br i1 %32, label %55, label %58

55:                                               ; preds = %45
  %56 = call i8* @_Z15sk_malloc_throwmm(i64 %31, i64 4) #15
  %57 = bitcast %class.SkAutoSTMalloc* %7 to i8**
  store i8* %56, i8** %57, align 8
  br label %62

58:                                               ; preds = %45
  %59 = icmp eq i32 %29, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %58
  store i32* %53, i32** %52, align 8
  br label %62

61:                                               ; preds = %58
  store i32* null, i32** %52, align 8
  br label %62

62:                                               ; preds = %55, %60, %61
  %63 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %8, i64 0, i32 0, i32 0, i64 64
  %64 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %8, i64 0, i32 0, i32 0, i64 0
  %65 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %8, i64 0, i32 0, i32 0, i64 72
  %66 = bitcast i8* %65 to i64*
  %67 = bitcast i8* %63 to i8**
  store i8* %64, i8** %67, align 8
  store i64 34359738368, i64* %66, align 8
  %68 = load i64, i64* %22, align 8
  %69 = lshr i64 %68, 1
  %70 = and i64 %69, 2147483647
  %71 = icmp ult i64 %70, 5
  %72 = bitcast %class.SkSTArray* %8 to %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"*
  br i1 %71, label %97, label %73

73:                                               ; preds = %62
  %74 = shl nuw i64 %70, 33
  store i64 %74, i64* %66, align 8
  %75 = call i8* @_Z15sk_malloc_throwmm(i64 %70, i64 16) #15
  %76 = load i64, i64* %66, align 8
  %77 = shl i64 %76, 3
  %78 = and i64 %77, 34359738352
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %73
  %81 = load i8*, i8** %67, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %75, i8* align 1 %81, i64 %78, i1 false) #15
  %82 = load i64, i64* %66, align 8
  br label %83

83:                                               ; preds = %80, %73
  %84 = phi i64 [ %76, %73 ], [ %82, %80 ]
  %85 = and i64 %84, 1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %83
  %88 = load i8*, i8** %67, align 8
  call void @_Z7sk_freePv(i8* %88) #15
  %89 = load i64, i64* %66, align 8
  br label %90

90:                                               ; preds = %87, %83
  %91 = phi i64 [ %89, %87 ], [ %84, %83 ]
  store i8* %75, i8** %67, align 8
  %92 = and i64 %91, -4294967298
  %93 = or i64 %92, 1
  store i64 %93, i64* %66, align 8
  %94 = load i64, i64* %22, align 8
  %95 = bitcast i8* %75 to %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"*
  %96 = and i64 %93, -8589934591
  br label %97

97:                                               ; preds = %62, %90
  %98 = phi %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"* [ %72, %62 ], [ %95, %90 ]
  %99 = phi i64 [ 34359738368, %62 ], [ %96, %90 ]
  %100 = phi i64 [ %68, %62 ], [ %94, %90 ]
  %101 = and i64 %100, 4294967294
  %102 = or i64 %99, %101
  store i64 %102, i64* %66, align 8
  %103 = bitcast i8* %20 to %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"**
  %104 = load %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"*, %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"** %103, align 8
  %105 = icmp eq i64 %101, 0
  br i1 %105, label %125, label %106

106:                                              ; preds = %97
  %107 = bitcast i8* %63 to %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"**
  %108 = bitcast %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"* %98 to i8*
  %109 = bitcast %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"* %104 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %108, i8* align 4 %109, i64 16, i1 false) #15
  %110 = load i64, i64* %66, align 8
  %111 = and i64 %110, 4294967292
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %125, label %113

113:                                              ; preds = %106, %113
  %114 = phi i64 [ %120, %113 ], [ 1, %106 ]
  %115 = load %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"*, %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"** %107, align 8
  %116 = getelementptr inbounds %"struct.SkTypeface_FreeType::Scanner::AxisDefinition", %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"* %115, i64 %114
  %117 = bitcast %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"* %116 to i8*
  %118 = getelementptr inbounds %"struct.SkTypeface_FreeType::Scanner::AxisDefinition", %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"* %104, i64 %114
  %119 = bitcast %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"* %118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %117, i8* align 4 %119, i64 16, i1 false) #15
  %120 = add nuw nsw i64 %114, 1
  %121 = load i64, i64* %66, align 8
  %122 = lshr i64 %121, 1
  %123 = and i64 %122, 2147483647
  %124 = icmp ult i64 %120, %123
  br i1 %124, label %113, label %125

125:                                              ; preds = %113, %106, %97
  %126 = getelementptr inbounds %struct.SkFontArguments, %struct.SkFontArguments* %1, i64 0, i32 1, i32 0
  %127 = load %"struct.SkFontArguments::VariationPosition::Coordinate"*, %"struct.SkFontArguments::VariationPosition::Coordinate"** %126, align 8
  %128 = getelementptr inbounds %struct.SkFontArguments, %struct.SkFontArguments* %1, i64 0, i32 1, i32 1
  %129 = load i32, i32* %128, align 8
  %130 = load i32*, i32** %52, align 8
  %131 = icmp eq i32 %48, %29
  %132 = load %"struct.SkFontArguments::VariationPosition::Coordinate"*, %"struct.SkFontArguments::VariationPosition::Coordinate"** %47, align 8
  %133 = select i1 %131, %"struct.SkFontArguments::VariationPosition::Coordinate"* %132, %"struct.SkFontArguments::VariationPosition::Coordinate"* null
  call void @_ZN19SkTypeface_FreeType7Scanner17computeAxisValuesE9SkSTArrayILi4ENS0_14AxisDefinitionELb1EEN15SkFontArguments17VariationPositionEPiRK8SkStringPKNS5_10CoordinateE(%class.SkSTArray* nonnull %8, %"struct.SkFontArguments::VariationPosition::Coordinate"* %127, i32 %129, i32* %130, %class.SkString* dereferenceable(8) undef, %"struct.SkFontArguments::VariationPosition::Coordinate"* %133)
  %134 = load i64, i64* %66, align 8
  %135 = and i64 %134, 1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %139, label %137

137:                                              ; preds = %125
  %138 = load i8*, i8** %67, align 8
  call void @_Z7sk_freePv(i8* %138) #15
  br label %139

139:                                              ; preds = %125, %137
  %140 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %140) #15
  store i32 -1431655766, i32* %9, align 4
  %141 = bitcast %class.SkTypeface_FreeType* %0 to %class.SkTypeface*
  %142 = call %class.SkStreamAsset* @_ZNK10SkTypeface10openStreamEPi(%class.SkTypeface* %141, i32* nonnull %9) #15
  %143 = ptrtoint %class.SkStreamAsset* %142 to i64
  %144 = load i32*, i32** %52, align 8
  %145 = call i8* @_Znwm(i64 40) #16
  %146 = load i32, i32* %9, align 4
  %147 = bitcast i8* %145 to i64*
  store i64 %143, i64* %147, align 8
  %148 = getelementptr inbounds i8, i8* %145, i64 8
  %149 = bitcast i8* %148 to i32*
  store i32 %146, i32* %149, align 8
  %150 = getelementptr inbounds i8, i8* %145, i64 12
  %151 = bitcast i8* %150 to i32*
  store i32 %29, i32* %151, align 4
  %152 = getelementptr inbounds i8, i8* %145, i64 16
  br i1 %32, label %157, label %153

153:                                              ; preds = %139
  %154 = icmp eq i32 %29, 0
  br i1 %154, label %155, label %162

155:                                              ; preds = %153
  %156 = bitcast i8* %152 to i32**
  store i32* null, i32** %156, align 8
  br label %216

157:                                              ; preds = %139
  %158 = call i8* @_Z15sk_malloc_throwmm(i64 %31, i64 4) #15
  %159 = bitcast i8* %152 to i8**
  store i8* %158, i8** %159, align 8
  %160 = bitcast i8* %158 to i32*
  %161 = load i32, i32* %144, align 4
  store i32 %161, i32* %160, align 4
  br label %168

162:                                              ; preds = %153
  %163 = getelementptr inbounds i8, i8* %145, i64 24
  %164 = bitcast i8* %152 to i8**
  store i8* %163, i8** %164, align 8
  %165 = bitcast i8* %163 to i32*
  %166 = load i32, i32* %144, align 4
  store i32 %166, i32* %165, align 4
  %167 = icmp eq i32 %29, 1
  br i1 %167, label %216, label %168

168:                                              ; preds = %162, %157
  %169 = bitcast i8* %152 to i32**
  %170 = add nsw i64 %31, -1
  %171 = add nsw i64 %31, -2
  %172 = and i64 %170, 3
  %173 = icmp ult i64 %171, 3
  br i1 %173, label %201, label %174

174:                                              ; preds = %168
  %175 = sub nsw i64 %170, %172
  br label %176

176:                                              ; preds = %176, %174
  %177 = phi i64 [ 1, %174 ], [ %198, %176 ]
  %178 = phi i64 [ %175, %174 ], [ %199, %176 ]
  %179 = load i32*, i32** %169, align 8
  %180 = getelementptr inbounds i32, i32* %144, i64 %177
  %181 = load i32, i32* %180, align 4
  %182 = getelementptr inbounds i32, i32* %179, i64 %177
  store i32 %181, i32* %182, align 4
  %183 = add nuw nsw i64 %177, 1
  %184 = load i32*, i32** %169, align 8
  %185 = getelementptr inbounds i32, i32* %144, i64 %183
  %186 = load i32, i32* %185, align 4
  %187 = getelementptr inbounds i32, i32* %184, i64 %183
  store i32 %186, i32* %187, align 4
  %188 = add nuw nsw i64 %177, 2
  %189 = load i32*, i32** %169, align 8
  %190 = getelementptr inbounds i32, i32* %144, i64 %188
  %191 = load i32, i32* %190, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 %188
  store i32 %191, i32* %192, align 4
  %193 = add nuw nsw i64 %177, 3
  %194 = load i32*, i32** %169, align 8
  %195 = getelementptr inbounds i32, i32* %144, i64 %193
  %196 = load i32, i32* %195, align 4
  %197 = getelementptr inbounds i32, i32* %194, i64 %193
  store i32 %196, i32* %197, align 4
  %198 = add nuw nsw i64 %177, 4
  %199 = add i64 %178, -4
  %200 = icmp eq i64 %199, 0
  br i1 %200, label %201, label %176

201:                                              ; preds = %176, %168
  %202 = phi i64 [ 1, %168 ], [ %198, %176 ]
  %203 = icmp eq i64 %172, 0
  br i1 %203, label %214, label %204

204:                                              ; preds = %201, %204
  %205 = phi i64 [ %211, %204 ], [ %202, %201 ]
  %206 = phi i64 [ %212, %204 ], [ %172, %201 ]
  %207 = load i32*, i32** %169, align 8
  %208 = getelementptr inbounds i32, i32* %144, i64 %205
  %209 = load i32, i32* %208, align 4
  %210 = getelementptr inbounds i32, i32* %207, i64 %205
  store i32 %209, i32* %210, align 4
  %211 = add nuw nsw i64 %205, 1
  %212 = add i64 %206, -1
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %204, !llvm.loop !9

214:                                              ; preds = %204, %201
  %215 = load i32*, i32** %52, align 8
  br label %216

216:                                              ; preds = %214, %162, %155
  %217 = phi i32* [ %215, %214 ], [ %144, %162 ], [ %144, %155 ]
  %218 = ptrtoint i8* %145 to i64
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %140) #15
  %219 = icmp eq i32* %217, %53
  br i1 %219, label %222, label %220

220:                                              ; preds = %216
  %221 = bitcast i32* %217 to i8*
  call void @_Z7sk_freePv(i8* %221) #15
  br label %222

222:                                              ; preds = %216, %220
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #15
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #15
  %223 = load %"struct.SkFontArguments::VariationPosition::Coordinate"*, %"struct.SkFontArguments::VariationPosition::Coordinate"** %47, align 8
  %224 = getelementptr inbounds %class.SkAutoSTMalloc.46, %class.SkAutoSTMalloc.46* %5, i64 0, i32 1
  %225 = bitcast %union.anon.47* %224 to %"struct.SkFontArguments::VariationPosition::Coordinate"*
  %226 = icmp eq %"struct.SkFontArguments::VariationPosition::Coordinate"* %223, %225
  br i1 %226, label %229, label %227

227:                                              ; preds = %222
  %228 = bitcast %"struct.SkFontArguments::VariationPosition::Coordinate"* %223 to i8*
  call void @_Z7sk_freePv(i8* %228) #15
  br label %229

229:                                              ; preds = %222, %227
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #15
  br label %230

230:                                              ; preds = %18, %229
  %231 = phi i64 [ %218, %229 ], [ 0, %18 ]
  %232 = load i64, i64* %22, align 8
  %233 = and i64 %232, 1
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %237, label %235

235:                                              ; preds = %230
  %236 = load i8*, i8** %23, align 8
  call void @_Z7sk_freePv(i8* %236) #15
  br label %237

237:                                              ; preds = %230, %235
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %19) #15
  br label %238

238:                                              ; preds = %2, %14, %237
  %239 = phi i64 [ %231, %237 ], [ 0, %14 ], [ 0, %2 ]
  call void @_ZN12AutoFTAccessD2Ev(%class.AutoFTAccess* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #15
  %240 = inttoptr i64 %239 to %class.SkFontData*
  ret %class.SkFontData* %240
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN19SkTypeface_FreeType7Scanner7GetAxesEP11FT_FaceRec_P9SkSTArrayILi4ENS0_14AxisDefinitionELb1EE(%struct.FT_FaceRec_*, %class.SkSTArray*) local_unnamed_addr #0 align 2 {
  %3 = alloca %struct.FT_MM_Var_*, align 8
  %4 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 256
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %71, label %8

8:                                                ; preds = %2
  %9 = bitcast %struct.FT_MM_Var_** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  store %struct.FT_MM_Var_* null, %struct.FT_MM_Var_** %3, align 8
  %10 = call i32 @FT_Get_MM_Var(%struct.FT_FaceRec_* %0, %struct.FT_MM_Var_** nonnull %3) #15
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %69

12:                                               ; preds = %8
  %13 = bitcast %struct.FT_MM_Var_** %3 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %1, i64 0, i32 0, i32 0, i64 64
  %16 = bitcast i8* %15 to %class.SkTArray*
  %17 = bitcast i8* %14 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %1, i64 0, i32 0, i32 0, i64 72
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, -4294967295
  store i64 %22, i64* %20, align 8
  call void @_ZN8SkTArrayIN19SkTypeface_FreeType7Scanner14AxisDefinitionELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray* %16, i32 %18, i32 0) #15
  %23 = load i64, i64* %20, align 8
  %24 = shl i32 %18, 1
  %25 = zext i32 %24 to i64
  %26 = and i64 %23, -8589934591
  %27 = or i64 %26, %25
  store i64 %27, i64* %20, align 8
  %28 = load %struct.FT_MM_Var_*, %struct.FT_MM_Var_** %3, align 8
  %29 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %12
  %33 = bitcast i8* %15 to %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"**
  br label %37

34:                                               ; preds = %37, %12
  %35 = icmp eq i8* %14, null
  br i1 %35, label %69, label %36

36:                                               ; preds = %34
  call void @_Z7sk_freePv(i8* nonnull %14) #15
  br label %69

37:                                               ; preds = %32, %37
  %38 = phi %struct.FT_MM_Var_* [ %28, %32 ], [ %65, %37 ]
  %39 = phi i32 [ 0, %32 ], [ %64, %37 ]
  %40 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %38, i64 0, i32 3
  %41 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %40, align 8
  %42 = zext i32 %39 to i64
  %43 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %41, i64 %42, i32 4
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %44 to i32
  %46 = load %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"*, %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"** %33, align 8
  %47 = sext i32 %39 to i64
  %48 = getelementptr inbounds %"struct.SkTypeface_FreeType::Scanner::AxisDefinition", %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"* %46, i64 %47, i32 0
  store i32 %45, i32* %48, align 4
  %49 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %41, i64 %42, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = trunc i64 %50 to i32
  %52 = load %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"*, %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"** %33, align 8
  %53 = getelementptr inbounds %"struct.SkTypeface_FreeType::Scanner::AxisDefinition", %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"* %52, i64 %47, i32 1
  store i32 %51, i32* %53, align 4
  %54 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %41, i64 %42, i32 2
  %55 = load i64, i64* %54, align 8
  %56 = trunc i64 %55 to i32
  %57 = load %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"*, %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"** %33, align 8
  %58 = getelementptr inbounds %"struct.SkTypeface_FreeType::Scanner::AxisDefinition", %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"* %57, i64 %47, i32 2
  store i32 %56, i32* %58, align 4
  %59 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %41, i64 %42, i32 3
  %60 = load i64, i64* %59, align 8
  %61 = trunc i64 %60 to i32
  %62 = load %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"*, %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"** %33, align 8
  %63 = getelementptr inbounds %"struct.SkTypeface_FreeType::Scanner::AxisDefinition", %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"* %62, i64 %47, i32 3
  store i32 %61, i32* %63, align 4
  %64 = add nuw i32 %39, 1
  %65 = load %struct.FT_MM_Var_*, %struct.FT_MM_Var_** %3, align 8
  %66 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %65, i64 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp ult i32 %64, %67
  br i1 %68, label %37, label %34

69:                                               ; preds = %8, %36, %34
  %70 = phi i1 [ true, %34 ], [ true, %36 ], [ false, %8 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  br label %71

71:                                               ; preds = %69, %2
  %72 = phi i1 [ true, %2 ], [ %70, %69 ]
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL26GetVariationDesignPositionR12AutoFTAccessPN15SkFontArguments17VariationPosition10CoordinateEi(%class.AutoFTAccess* nocapture readonly dereferenceable(8), %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32) unnamed_addr #0 {
  %4 = alloca %struct.FT_MM_Var_*, align 8
  %5 = alloca %class.SkAutoSTMalloc.82, align 8
  %6 = getelementptr inbounds %class.AutoFTAccess, %class.AutoFTAccess* %0, i64 0, i32 0
  %7 = load %struct.SkFaceRec*, %struct.SkFaceRec** %6, align 8
  %8 = icmp eq %struct.SkFaceRec* %7, null
  br i1 %8, label %145, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %10, align 8
  %12 = icmp eq %struct.FT_FaceRec_* %11, null
  br i1 %12, label %145, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %11, i64 0, i32 2
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 256
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %145, label %18

18:                                               ; preds = %13
  %19 = bitcast %struct.FT_MM_Var_** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #15
  store %struct.FT_MM_Var_* null, %struct.FT_MM_Var_** %4, align 8
  %20 = call i32 @FT_Get_MM_Var(%struct.FT_FaceRec_* nonnull %11, %struct.FT_MM_Var_** nonnull %4) #15
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %143

22:                                               ; preds = %18
  %23 = bitcast %struct.FT_MM_Var_** %4 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq %"struct.SkFontArguments::VariationPosition::Coordinate"* %1, null
  %26 = bitcast i8* %24 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = icmp sgt i32 %27, %2
  %29 = or i1 %25, %28
  br i1 %29, label %139, label %30

30:                                               ; preds = %22
  %31 = bitcast %class.SkAutoSTMalloc.82* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %31) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 40, i1 false)
  %32 = load i32, i32* %26, align 8
  %33 = icmp ugt i32 %32, 4
  br i1 %33, label %34, label %39

34:                                               ; preds = %30
  %35 = zext i32 %32 to i64
  %36 = call i8* @_Z15sk_malloc_throwmm(i64 %35, i64 8) #15
  %37 = bitcast %class.SkAutoSTMalloc.82* %5 to i8**
  store i8* %36, i8** %37, align 8
  %38 = bitcast i8* %36 to i64*
  br label %46

39:                                               ; preds = %30
  %40 = icmp eq i32 %32, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %class.SkAutoSTMalloc.82, %class.SkAutoSTMalloc.82* %5, i64 0, i32 1, i32 0, i64 0
  %43 = getelementptr inbounds %class.SkAutoSTMalloc.82, %class.SkAutoSTMalloc.82* %5, i64 0, i32 0
  store i64* %42, i64** %43, align 8
  br label %46

44:                                               ; preds = %39
  %45 = getelementptr inbounds %class.SkAutoSTMalloc.82, %class.SkAutoSTMalloc.82* %5, i64 0, i32 0
  store i64* null, i64** %45, align 8
  br label %46

46:                                               ; preds = %34, %41, %44
  %47 = phi i64* [ %38, %34 ], [ %42, %41 ], [ null, %44 ]
  %48 = load %class.FreeTypeLibrary*, %class.FreeTypeLibrary** @_ZL10gFTLibrary, align 8
  %49 = getelementptr inbounds %class.FreeTypeLibrary, %class.FreeTypeLibrary* %48, i64 0, i32 0
  %50 = load i32 (%struct.FT_FaceRec_*, i32, i64*)*, i32 (%struct.FT_FaceRec_*, i32, i64*)** %49, align 8
  %51 = icmp eq i32 (%struct.FT_FaceRec_*, i32, i64*)* %50, null
  br i1 %51, label %84, label %52

52:                                               ; preds = %46
  %53 = load %struct.FT_MM_Var_*, %struct.FT_MM_Var_** %4, align 8
  %54 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %53, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %class.SkAutoSTMalloc.82, %class.SkAutoSTMalloc.82* %5, i64 0, i32 0
  %57 = call i32 %50(%struct.FT_FaceRec_* nonnull %11, i32 %55, i64* %47) #15
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %84

59:                                               ; preds = %52
  %60 = load %struct.FT_MM_Var_*, %struct.FT_MM_Var_** %4, align 8
  %61 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %60, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %130, label %64

64:                                               ; preds = %59
  %65 = load i64*, i64** %56, align 8
  %66 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %60, i64 0, i32 3
  br label %67

67:                                               ; preds = %64, %67
  %68 = phi i32 [ %81, %67 ], [ 0, %64 ]
  %69 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %66, align 8
  %70 = zext i32 %68 to i64
  %71 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %69, i64 %70, i32 4
  %72 = load i64, i64* %71, align 8
  %73 = trunc i64 %72 to i32
  %74 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %1, i64 %70, i32 0
  store i32 %73, i32* %74, align 4
  %75 = sext i32 %68 to i64
  %76 = getelementptr inbounds i64, i64* %65, i64 %75
  %77 = load i64, i64* %76, align 8
  %78 = sitofp i64 %77 to float
  %79 = fmul float %78, 0x3EF0000000000000
  %80 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %1, i64 %70, i32 1
  store float %79, float* %80, align 4
  %81 = add nuw i32 %68, 1
  %82 = load i32, i32* %61, align 8
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %67, label %130

84:                                               ; preds = %52, %46
  %85 = load %struct.SkFaceRec*, %struct.SkFaceRec** %6, align 8
  %86 = icmp eq %struct.SkFaceRec* %85, null
  br i1 %86, label %90, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %85, i64 0, i32 7
  %89 = load i32, i32* %88, align 8
  br label %90

90:                                               ; preds = %84, %87
  %91 = phi i32 [ %89, %87 ], [ 0, %84 ]
  %92 = load %struct.FT_MM_Var_*, %struct.FT_MM_Var_** %4, align 8
  %93 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %92, i64 0, i32 0
  %94 = load i32, i32* %93, align 8
  %95 = icmp eq i32 %91, %94
  br i1 %95, label %96, label %123

96:                                               ; preds = %90
  %97 = icmp eq i32 %91, 0
  br i1 %97, label %130, label %98

98:                                               ; preds = %96
  %99 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %92, i64 0, i32 3
  br label %100

100:                                              ; preds = %98, %112
  %101 = phi i64 [ 0, %98 ], [ %119, %112 ]
  %102 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %99, align 8
  %103 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %102, i64 %101, i32 4
  %104 = load i64, i64* %103, align 8
  %105 = trunc i64 %104 to i32
  %106 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %1, i64 %101, i32 0
  store i32 %105, i32* %106, align 4
  %107 = load %struct.SkFaceRec*, %struct.SkFaceRec** %6, align 8
  %108 = icmp eq %struct.SkFaceRec* %107, null
  br i1 %108, label %112, label %109

109:                                              ; preds = %100
  %110 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %107, i64 0, i32 6, i32 0
  %111 = load i32*, i32** %110, align 8
  br label %112

112:                                              ; preds = %100, %109
  %113 = phi i32* [ %111, %109 ], [ null, %100 ]
  %114 = getelementptr inbounds i32, i32* %113, i64 %101
  %115 = load i32, i32* %114, align 4
  %116 = sitofp i32 %115 to float
  %117 = fmul float %116, 0x3EF0000000000000
  %118 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %1, i64 %101, i32 1
  store float %117, float* %118, align 4
  %119 = add nuw nsw i64 %101, 1
  %120 = load i32, i32* %93, align 8
  %121 = zext i32 %120 to i64
  %122 = icmp ult i64 %119, %121
  br i1 %122, label %100, label %130

123:                                              ; preds = %90
  br i1 %86, label %130, label %124

124:                                              ; preds = %123
  %125 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %85, i64 0, i32 8
  %126 = load i8, i8* %125, align 4, !range !11
  %127 = shl nuw i8 %126, 7
  %128 = ashr exact i8 %127, 7
  %129 = sext i8 %128 to i32
  br label %130

130:                                              ; preds = %67, %112, %96, %59, %124, %123
  %131 = phi i32 [ 0, %123 ], [ %129, %124 ], [ 0, %59 ], [ 0, %96 ], [ %120, %112 ], [ %82, %67 ]
  %132 = getelementptr inbounds %class.SkAutoSTMalloc.82, %class.SkAutoSTMalloc.82* %5, i64 0, i32 0
  %133 = load i64*, i64** %132, align 8
  %134 = getelementptr inbounds %class.SkAutoSTMalloc.82, %class.SkAutoSTMalloc.82* %5, i64 0, i32 1, i32 0, i64 0
  %135 = icmp eq i64* %133, %134
  br i1 %135, label %138, label %136

136:                                              ; preds = %130
  %137 = bitcast i64* %133 to i8*
  call void @_Z7sk_freePv(i8* %137) #15
  br label %138

138:                                              ; preds = %130, %136
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %31) #15
  br label %139

139:                                              ; preds = %22, %138
  %140 = phi i32 [ %131, %138 ], [ %27, %22 ]
  %141 = icmp eq i8* %24, null
  br i1 %141, label %143, label %142

142:                                              ; preds = %139
  call void @_Z7sk_freePv(i8* nonnull %24) #15
  br label %143

143:                                              ; preds = %142, %139, %18
  %144 = phi i32 [ -1, %18 ], [ %140, %139 ], [ %140, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #15
  br label %145

145:                                              ; preds = %3, %13, %9, %143
  %146 = phi i32 [ %144, %143 ], [ -1, %9 ], [ 0, %13 ], [ -1, %3 ]
  ret i32 %146
}

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkTypeface_FreeType7Scanner17computeAxisValuesE9SkSTArrayILi4ENS0_14AxisDefinitionELb1EEN15SkFontArguments17VariationPositionEPiRK8SkStringPKNS5_10CoordinateE(%class.SkSTArray* nocapture readonly, %"struct.SkFontArguments::VariationPosition::Coordinate"* nocapture readonly, i32, i32* nocapture, %class.SkString* nocapture readnone dereferenceable(8), %"struct.SkFontArguments::VariationPosition::Coordinate"* readonly) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %0, i64 0, i32 0, i32 0, i64 72
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 4294967294
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %class.SkSTArray, %class.SkSTArray* %0, i64 0, i32 0, i32 0, i64 64
  %14 = bitcast i8* %13 to %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"**
  %15 = icmp eq %"struct.SkFontArguments::VariationPosition::Coordinate"* %5, null
  %16 = sext i32 %2 to i64
  br label %18

17:                                               ; preds = %88, %6
  ret void

18:                                               ; preds = %12, %88
  %19 = phi i64 [ 0, %12 ], [ %89, %88 ]
  %20 = load %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"*, %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"** %14, align 8
  %21 = getelementptr inbounds %"struct.SkTypeface_FreeType::Scanner::AxisDefinition", %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"* %20, i64 %19
  %22 = getelementptr inbounds %"struct.SkTypeface_FreeType::Scanner::AxisDefinition", %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"* %20, i64 %19, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = sitofp i32 %23 to float
  %25 = fmul float %24, 0x3EF0000000000000
  %26 = getelementptr inbounds %"struct.SkTypeface_FreeType::Scanner::AxisDefinition", %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"* %20, i64 %19, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = sitofp i32 %27 to float
  %29 = fmul float %28, 0x3EF0000000000000
  %30 = getelementptr inbounds %"struct.SkTypeface_FreeType::Scanner::AxisDefinition", %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"* %20, i64 %19, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds i32, i32* %3, i64 %19
  store i32 %31, i32* %32, align 4
  br i1 %15, label %64, label %33

33:                                               ; preds = %18
  %34 = load i64, i64* %8, align 8
  %35 = and i64 %34, 4294967294
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %64, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.SkTypeface_FreeType::Scanner::AxisDefinition", %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = lshr i64 %34, 1
  %41 = and i64 %40, 2147483647
  br label %44

42:                                               ; preds = %44
  %43 = icmp ult i64 %49, %41
  br i1 %43, label %44, label %64

44:                                               ; preds = %37, %42
  %45 = phi i64 [ 0, %37 ], [ %49, %42 ]
  %46 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %5, i64 %45, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %39, %47
  %49 = add nuw nsw i64 %45, 1
  br i1 %48, label %50, label %42

50:                                               ; preds = %44
  %51 = and i64 %45, 4294967295
  %52 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %5, i64 %51, i32 1
  %53 = load float, float* %52, align 4
  %54 = fcmp olt float %29, %53
  %55 = select i1 %54, float %29, float %53
  %56 = fcmp olt float %25, %55
  %57 = select i1 %56, float %55, float %25
  %58 = fmul float %57, 6.553600e+04
  %59 = fcmp olt float %58, 0x41DFFFFFE0000000
  %60 = select i1 %59, float %58, float 0x41DFFFFFE0000000
  %61 = fcmp ogt float %60, 0xC1DFFFFFE0000000
  %62 = select i1 %61, float %60, float 0xC1DFFFFFE0000000
  %63 = fptosi float %62 to i32
  store i32 %63, i32* %32, align 4
  br label %64

64:                                               ; preds = %42, %33, %50, %18
  %65 = getelementptr inbounds %"struct.SkTypeface_FreeType::Scanner::AxisDefinition", %"struct.SkTypeface_FreeType::Scanner::AxisDefinition"* %21, i64 0, i32 0
  br label %66

66:                                               ; preds = %70, %64
  %67 = phi i64 [ %68, %70 ], [ %16, %64 ]
  %68 = add nsw i64 %67, -1
  %69 = icmp sgt i64 %67, 0
  br i1 %69, label %70, label %88

70:                                               ; preds = %66
  %71 = load i32, i32* %65, align 4
  %72 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %1, i64 %68, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %71, %73
  br i1 %74, label %75, label %66

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"struct.SkFontArguments::VariationPosition::Coordinate", %"struct.SkFontArguments::VariationPosition::Coordinate"* %1, i64 %68, i32 1
  %77 = load float, float* %76, align 4
  %78 = fcmp olt float %29, %77
  %79 = select i1 %78, float %29, float %77
  %80 = fcmp olt float %25, %79
  %81 = select i1 %80, float %79, float %25
  %82 = fmul float %81, 6.553600e+04
  %83 = fcmp olt float %82, 0x41DFFFFFE0000000
  %84 = select i1 %83, float %82, float 0x41DFFFFFE0000000
  %85 = fcmp ogt float %84, 0xC1DFFFFFE0000000
  %86 = select i1 %85, float %84, float 0xC1DFFFFFE0000000
  %87 = fptosi float %86 to i32
  store i32 %87, i32* %32, align 4
  br label %88

88:                                               ; preds = %66, %75
  %89 = add nuw nsw i64 %19, 1
  %90 = load i64, i64* %8, align 8
  %91 = lshr i64 %90, 1
  %92 = and i64 %91, 2147483647
  %93 = icmp ult i64 %89, %92
  br i1 %93, label %18, label %17
}

declare %class.SkStreamAsset* @_ZNK10SkTypeface10openStreamEPi(%class.SkTypeface*, i32*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19SkTypeface_FreeType11onFilterRecEP18SkScalerContextRec(%class.SkTypeface_FreeType* nocapture readnone, %struct.SkScalerContextRec*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 1
  %4 = load float, float* %3, align 4
  %5 = fcmp ogt float %4, 1.638400e+04
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store float 1.638400e+04, float* %3, align 4
  br label %7

7:                                                ; preds = %6, %2
  %8 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 12
  %9 = load i8, i8* %8, align 4
  %10 = icmp eq i8 %9, 4
  br i1 %10, label %11, label %91

11:                                               ; preds = %7
  %12 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %23, !prof !2

14:                                               ; preds = %11
  %15 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %14
  %18 = tail call i8* @_Znwm(i64 16) #16
  %19 = bitcast i8* %18 to i32*
  store i32 1, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %18, i64 4
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds i8, i8* %18, i64 8
  %22 = bitcast i8* %21 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %22, align 8
  store i8* %18, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %23

23:                                               ; preds = %11, %14, %17
  %24 = load %class.SkMutex*, %class.SkMutex** @_ZZL9f_t_mutexvE5mutex, align 8
  %25 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw sub i32* %25, i32 1 acquire
  %27 = icmp slt i32 %26, 1
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  %29 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %24, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %29) #15
  br label %30

30:                                               ; preds = %23, %28
  %31 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %42, !prof !2

33:                                               ; preds = %30
  %34 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %42, label %36

36:                                               ; preds = %33
  %37 = tail call i8* @_Znwm(i64 16) #16
  %38 = bitcast i8* %37 to i32*
  store i32 1, i32* %38, align 4
  %39 = getelementptr inbounds i8, i8* %37, i64 4
  store i8 0, i8* %39, align 1
  %40 = getelementptr inbounds i8, i8* %37, i64 8
  %41 = bitcast i8* %40 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %41, align 8
  store i8* %37, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %42

42:                                               ; preds = %30, %33, %36
  %43 = load i32, i32* @_ZL8gFTCount, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %42
  %46 = load %class.FreeTypeLibrary*, %class.FreeTypeLibrary** @_ZL10gFTLibrary, align 8
  br label %51

47:                                               ; preds = %42
  %48 = tail call i8* @_Znwm(i64 32) #16
  %49 = bitcast i8* %48 to %class.FreeTypeLibrary*
  tail call void @_ZN15FreeTypeLibraryC2Ev(%class.FreeTypeLibrary* nonnull %49) #15
  store i8* %48, i8** bitcast (%class.FreeTypeLibrary** @_ZL10gFTLibrary to i8**), align 8
  %50 = load i32, i32* @_ZL8gFTCount, align 4
  br label %51

51:                                               ; preds = %45, %47
  %52 = phi %class.FreeTypeLibrary* [ %49, %47 ], [ %46, %45 ]
  %53 = phi i32 [ %50, %47 ], [ %43, %45 ]
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* @_ZL8gFTCount, align 4
  %55 = getelementptr inbounds %class.FreeTypeLibrary, %class.FreeTypeLibrary* %52, i64 0, i32 3
  %56 = load i8, i8* %55, align 8, !range !11
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %51
  store i8 1, i8* %8, align 4
  br label %59

59:                                               ; preds = %51, %58
  %60 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %71, !prof !2

62:                                               ; preds = %59
  %63 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %71, label %65

65:                                               ; preds = %62
  %66 = tail call i8* @_Znwm(i64 16) #16
  %67 = bitcast i8* %66 to i32*
  store i32 1, i32* %67, align 4
  %68 = getelementptr inbounds i8, i8* %66, i64 4
  store i8 0, i8* %68, align 1
  %69 = getelementptr inbounds i8, i8* %66, i64 8
  %70 = bitcast i8* %69 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %70, align 8
  store i8* %66, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %71

71:                                               ; preds = %59, %62, %65
  %72 = load i32, i32* @_ZL8gFTCount, align 4
  %73 = add nsw i32 %72, -1
  store i32 %73, i32* @_ZL8gFTCount, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %86

75:                                               ; preds = %71
  %76 = load %class.FreeTypeLibrary*, %class.FreeTypeLibrary** @_ZL10gFTLibrary, align 8
  %77 = icmp eq %class.FreeTypeLibrary* %76, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %class.FreeTypeLibrary, %class.FreeTypeLibrary* %76, i64 0, i32 2
  %80 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %79, align 8
  %81 = icmp eq %struct.FT_LibraryRec_* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %78
  %83 = tail call i32 @FT_Done_Library(%struct.FT_LibraryRec_* nonnull %80) #15
  br label %84

84:                                               ; preds = %82, %78
  %85 = bitcast %class.FreeTypeLibrary* %76 to i8*
  tail call void @_ZdlPv(i8* %85) #16
  br label %86

86:                                               ; preds = %71, %75, %84
  %87 = atomicrmw add i32* %25, i32 1 release
  %88 = icmp slt i32 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %86
  %90 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %24, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %90, i32 1) #15
  br label %91

91:                                               ; preds = %89, %86, %7
  %92 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 14
  %93 = load i16, i16* %92, align 2
  %94 = lshr i16 %93, 7
  %95 = and i16 %94, 3
  %96 = icmp eq i16 %95, 3
  br i1 %96, label %97, label %101

97:                                               ; preds = %91
  %98 = load i8, i8* %8, align 4
  %99 = icmp eq i8 %98, 4
  %100 = select i1 %99, i16 3, i16 2
  br label %101

101:                                              ; preds = %97, %91
  %102 = phi i16 [ %95, %91 ], [ %100, %97 ]
  %103 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 3
  %104 = load float, float* %103, align 4
  %105 = fcmp oeq float %104, 0.000000e+00
  br i1 %105, label %106, label %123

106:                                              ; preds = %101
  %107 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 4, i64 0, i64 1
  %108 = load float, float* %107, align 4
  %109 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 4, i64 1, i64 0
  %110 = load float, float* %109, align 4
  %111 = fcmp oeq float %108, 0.000000e+00
  %112 = fcmp oeq float %110, 0.000000e+00
  %113 = and i1 %111, %112
  br i1 %113, label %122, label %114

114:                                              ; preds = %106
  %115 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 4, i64 0, i64 0
  %116 = load float, float* %115, align 4
  %117 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 4, i64 1, i64 1
  %118 = load float, float* %117, align 4
  %119 = fcmp oeq float %116, 0.000000e+00
  %120 = fcmp oeq float %118, 0.000000e+00
  %121 = and i1 %119, %120
  br i1 %121, label %122, label %123

122:                                              ; preds = %106, %114
  br label %123

123:                                              ; preds = %101, %114, %122
  %124 = phi i16 [ %102, %122 ], [ 0, %114 ], [ 0, %101 ]
  %125 = and i16 %93, -385
  %126 = shl nsw i16 %124, 7
  %127 = or i16 %126, %125
  store i16 %127, i16* %92, align 2
  %128 = load i8, i8* %8, align 4
  %129 = icmp eq i8 %128, 4
  br i1 %129, label %134, label %130

130:                                              ; preds = %123
  tail call void @_ZN18SkScalerContextRec17setLuminanceColorEj(%struct.SkScalerContextRec* %1, i32 0) #15
  %131 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 9
  store i8 64, i8* %131, align 1
  %132 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 8
  store i8 64, i8* %132, align 4
  %133 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %1, i64 0, i32 10
  store i8 0, i8* %133, align 2
  br label %134

134:                                              ; preds = %130, %123
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN19SkTypeface_FreeType13GetUnitsPerEmEP11FT_FaceRec_(%struct.FT_FaceRec_*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 13
  %3 = load i16, i16* %2, align 8
  %4 = uitofp i16 %3 to float
  %5 = icmp eq i16 %3, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = tail call i8* @FT_Get_Sfnt_Table(%struct.FT_FaceRec_* %0, i32 0) #15
  %8 = icmp eq i8* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds i8, i8* %7, i64 34
  %11 = bitcast i8* %10 to i16*
  %12 = load i16, i16* %11, align 2
  %13 = uitofp i16 %12 to float
  br label %14

14:                                               ; preds = %9, %6, %1
  %15 = phi float [ %4, %1 ], [ %13, %9 ], [ %4, %6 ]
  %16 = fptosi float %15 to i32
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK19SkTypeface_FreeType9onGetUPEMEv(%class.SkTypeface_FreeType*) unnamed_addr #0 align 2 {
  %2 = alloca %class.AutoFTAccess, align 8
  %3 = bitcast %class.AutoFTAccess* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #15
  %4 = getelementptr inbounds %class.AutoFTAccess, %class.AutoFTAccess* %2, i64 0, i32 0
  store %struct.SkFaceRec* inttoptr (i64 -6148914691236517206 to %struct.SkFaceRec*), %struct.SkFaceRec** %4, align 8
  call void @_ZN12AutoFTAccessC2EPK19SkTypeface_FreeType(%class.AutoFTAccess* nonnull %2, %class.SkTypeface_FreeType* %0)
  %5 = load %struct.SkFaceRec*, %struct.SkFaceRec** %4, align 8
  %6 = icmp eq %struct.SkFaceRec* %5, null
  br i1 %6, label %27, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %8, align 8
  %10 = icmp eq %struct.FT_FaceRec_* %9, null
  br i1 %10, label %27, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 0, i32 13
  %13 = load i16, i16* %12, align 8
  %14 = uitofp i16 %13 to float
  %15 = icmp eq i16 %13, 0
  br i1 %15, label %16, label %24

16:                                               ; preds = %11
  %17 = call i8* @FT_Get_Sfnt_Table(%struct.FT_FaceRec_* nonnull %9, i32 0) #15
  %18 = icmp eq i8* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %17, i64 34
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = uitofp i16 %22 to float
  br label %24

24:                                               ; preds = %11, %16, %19
  %25 = phi float [ %14, %11 ], [ %23, %19 ], [ %14, %16 ]
  %26 = fptosi float %25 to i32
  br label %27

27:                                               ; preds = %1, %7, %24
  %28 = phi i32 [ %26, %24 ], [ 0, %7 ], [ 0, %1 ]
  call void @_ZN12AutoFTAccessD2Ev(%class.AutoFTAccess* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #15
  ret i32 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK19SkTypeface_FreeType27onGetKerningPairAdjustmentsEPKtiPi(%class.SkTypeface_FreeType*, i16* nocapture readonly, i32, i32* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %class.AutoFTAccess, align 8
  %6 = alloca %struct.FT_Vector_, align 8
  %7 = bitcast %class.AutoFTAccess* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = getelementptr inbounds %class.AutoFTAccess, %class.AutoFTAccess* %5, i64 0, i32 0
  store %struct.SkFaceRec* inttoptr (i64 -6148914691236517206 to %struct.SkFaceRec*), %struct.SkFaceRec** %8, align 8
  call void @_ZN12AutoFTAccessC2EPK19SkTypeface_FreeType(%class.AutoFTAccess* nonnull %5, %class.SkTypeface_FreeType* %0)
  %9 = load %struct.SkFaceRec*, %struct.SkFaceRec** %8, align 8
  %10 = icmp eq %struct.SkFaceRec* %9, null
  br i1 %10, label %45, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %12, align 8
  %14 = icmp eq %struct.FT_FaceRec_* %13, null
  br i1 %14, label %45, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %13, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 64
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %45, label %20

20:                                               ; preds = %15
  %21 = add i32 %2, -1
  %22 = icmp sgt i32 %21, 0
  br i1 %22, label %23, label %45

23:                                               ; preds = %20
  %24 = bitcast %struct.FT_Vector_* %6 to i8*
  %25 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %6, i64 0, i32 0
  %26 = zext i32 %21 to i64
  %27 = bitcast %struct.FT_Vector_* %6 to i8*
  br label %28

28:                                               ; preds = %39, %23
  %29 = phi i64 [ 0, %23 ], [ %33, %39 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #15
  %30 = getelementptr inbounds i16, i16* %1, i64 %29
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 16, i1 false)
  %31 = load i16, i16* %30, align 2
  %32 = zext i16 %31 to i32
  %33 = add nuw nsw i64 %29, 1
  %34 = getelementptr inbounds i16, i16* %1, i64 %33
  %35 = load i16, i16* %34, align 2
  %36 = zext i16 %35 to i32
  %37 = call i32 @FT_Get_Kerning(%struct.FT_FaceRec_* nonnull %13, i32 %32, i32 %36, i32 2, %struct.FT_Vector_* nonnull %6) #15
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %44

39:                                               ; preds = %28
  %40 = load i64, i64* %25, align 8
  %41 = trunc i64 %40 to i32
  %42 = getelementptr inbounds i32, i32* %3, i64 %29
  store i32 %41, i32* %42, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #15
  %43 = icmp eq i64 %33, %26
  br i1 %43, label %45, label %28

44:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #15
  br label %45

45:                                               ; preds = %39, %20, %4, %44, %11, %15
  %46 = phi i1 [ false, %15 ], [ false, %11 ], [ false, %44 ], [ false, %4 ], [ true, %20 ], [ true, %39 ]
  call void @_ZN12AutoFTAccessD2Ev(%class.AutoFTAccess* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  ret i1 %46
}

declare i32 @FT_Get_Kerning(%struct.FT_FaceRec_*, i32, i32, i32, %struct.FT_Vector_*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24SkScalerContext_FreeTypeC2E5sk_spI19SkTypeface_FreeTypeERK22SkScalerContextEffectsPK12SkDescriptor(%class.SkScalerContext_FreeType*, %class.sk_sp.39* nocapture, %struct.SkScalerContextEffects* dereferenceable(16), %class.SkDescriptor*) unnamed_addr #0 align 2 {
  %5 = alloca %struct.FT_SizeRec_*, align 8
  %6 = alloca %class.sk_sp.21, align 8
  %7 = getelementptr inbounds %class.sk_sp.39, %class.sk_sp.39* %1, i64 0, i32 0
  %8 = bitcast %class.sk_sp.39* %1 to i64*
  %9 = load i64, i64* %8, align 8
  store %class.SkTypeface_FreeType* null, %class.SkTypeface_FreeType** %7, align 8
  %10 = bitcast %class.sk_sp.21* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 0, i32 0
  %12 = bitcast %class.sk_sp.21* %6 to i64*
  store i64 %9, i64* %12, align 8
  call void @_ZN15SkScalerContextC2E5sk_spI10SkTypefaceERK22SkScalerContextEffectsPK12SkDescriptor(%class.SkScalerContext* %11, %class.sk_sp.21* nonnull %6, %struct.SkScalerContextEffects* dereferenceable(16) %2, %class.SkDescriptor* %3) #15
  %13 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %6, i64 0, i32 0
  %14 = load %class.SkTypeface*, %class.SkTypeface** %13, align 8
  %15 = icmp eq %class.SkTypeface* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = bitcast %class.SkTypeface* %14 to %class.SkRefCntBase*
  %22 = bitcast %class.SkTypeface* %14 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  call void %25(%class.SkRefCntBase* nonnull %21) #15
  br label %26

26:                                               ; preds = %20, %16, %4
  %27 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTV24SkScalerContext_FreeType, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 1
  %29 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 2
  %30 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 3
  %31 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 4
  %32 = bitcast %"class.std::__1::unique_ptr.31"* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 24, i1 false)
  store i32 -1, i32* %31, align 8
  %33 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 5
  %34 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %33, i64 0, i32 0, i64 0
  %35 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 5, i32 0, i64 1
  %36 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 5, i32 0, i64 3
  %37 = bitcast %class.SkMatrix* %33 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %37, align 4
  %38 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 5, i32 0, i64 4
  %39 = bitcast float* %38 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %39, align 4
  %40 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 5, i32 0, i64 8
  store float 1.000000e+00, float* %40, align 4
  %41 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 5, i32 1
  store i32 16, i32* %41, align 4
  %42 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %53, !prof !2

44:                                               ; preds = %26
  %45 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %53, label %47

47:                                               ; preds = %44
  %48 = call i8* @_Znwm(i64 16) #16
  %49 = bitcast i8* %48 to i32*
  store i32 1, i32* %49, align 4
  %50 = getelementptr inbounds i8, i8* %48, i64 4
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds i8, i8* %48, i64 8
  %52 = bitcast i8* %51 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %52, align 8
  store i8* %48, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %53

53:                                               ; preds = %26, %44, %47
  %54 = load %class.SkMutex*, %class.SkMutex** @_ZZL9f_t_mutexvE5mutex, align 8
  %55 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = atomicrmw sub i32* %55, i32 1 acquire
  %57 = icmp slt i32 %56, 1
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %54, i64 0, i32 0
  call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %59) #15
  br label %60

60:                                               ; preds = %53, %58
  %61 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %72, !prof !2

63:                                               ; preds = %60
  %64 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %63
  %67 = call i8* @_Znwm(i64 16) #16
  %68 = bitcast i8* %67 to i32*
  store i32 1, i32* %68, align 4
  %69 = getelementptr inbounds i8, i8* %67, i64 4
  store i8 0, i8* %69, align 1
  %70 = getelementptr inbounds i8, i8* %67, i64 8
  %71 = bitcast i8* %70 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %71, align 8
  store i8* %67, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %72

72:                                               ; preds = %60, %63, %66
  %73 = load i32, i32* @_ZL8gFTCount, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %72
  %76 = load %class.FreeTypeLibrary*, %class.FreeTypeLibrary** @_ZL10gFTLibrary, align 8
  br label %81

77:                                               ; preds = %72
  %78 = call i8* @_Znwm(i64 32) #16
  %79 = bitcast i8* %78 to %class.FreeTypeLibrary*
  call void @_ZN15FreeTypeLibraryC2Ev(%class.FreeTypeLibrary* nonnull %79) #15
  store i8* %78, i8** bitcast (%class.FreeTypeLibrary** @_ZL10gFTLibrary to i8**), align 8
  %80 = load i32, i32* @_ZL8gFTCount, align 4
  br label %81

81:                                               ; preds = %75, %77
  %82 = phi %class.FreeTypeLibrary* [ %79, %77 ], [ %76, %75 ]
  %83 = phi i32 [ %80, %77 ], [ %73, %75 ]
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* @_ZL8gFTCount, align 4
  %85 = getelementptr inbounds %class.FreeTypeLibrary, %class.FreeTypeLibrary* %82, i64 0, i32 2
  %86 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %85, align 8
  %87 = icmp eq %struct.FT_LibraryRec_* %86, null
  br i1 %87, label %88, label %89

88:                                               ; preds = %81
  call fastcc void @"_ZZN24SkScalerContext_FreeTypeC1E5sk_spI19SkTypeface_FreeTypeERK22SkScalerContextEffectsPK12SkDescriptorENK3$_0clEv"()
  unreachable

89:                                               ; preds = %81
  %90 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 0, i32 0, i32 2, i32 0
  %91 = bitcast %class.SkTypeface** %90 to %class.SkTypeface_FreeType**
  %92 = load %class.SkTypeface_FreeType*, %class.SkTypeface_FreeType** %91, align 8
  %93 = call fastcc %struct.SkFaceRec* @_ZL11ref_ft_facePK19SkTypeface_FreeType(%class.SkTypeface_FreeType* %92)
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.31"* %28, i64 0, i32 0, i32 0, i32 0
  %95 = load %struct.SkFaceRec*, %struct.SkFaceRec** %94, align 8
  store %struct.SkFaceRec* %93, %struct.SkFaceRec** %94, align 8
  %96 = icmp eq %struct.SkFaceRec* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %89
  call void @_Z13unref_ft_faceP9SkFaceRec(%struct.SkFaceRec* nonnull %95) #15
  %98 = load %struct.SkFaceRec*, %struct.SkFaceRec** %94, align 8
  br label %99

99:                                               ; preds = %89, %97
  %100 = phi %struct.SkFaceRec* [ %93, %89 ], [ %98, %97 ]
  %101 = icmp eq %struct.SkFaceRec* %100, null
  br i1 %101, label %328, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 0, i32 0, i32 1
  %104 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 0, i32 0, i32 1, i32 14
  %105 = load i16, i16* %104, align 2
  %106 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 11
  %107 = lshr i16 %105, 9
  %108 = trunc i16 %107 to i8
  %109 = and i8 %108, 1
  store i8 %109, i8* %106, align 1
  %110 = lshr i16 %105, 12
  %111 = trunc i16 %110 to i8
  %112 = and i8 %111, 1
  %113 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 0, i32 0, i32 1, i32 12
  %114 = load i8, i8* %113, align 8
  %115 = icmp eq i8 %114, 0
  %116 = lshr i16 %105, 7
  %117 = and i16 %116, 3
  br i1 %115, label %118, label %122

118:                                              ; preds = %102
  %119 = icmp eq i16 %117, 0
  %120 = select i1 %119, i32 2, i32 131072
  %121 = select i1 %119, i8 1, i8 %112
  br label %136

122:                                              ; preds = %102
  %123 = zext i16 %117 to i32
  switch i32 %123, label %136 [
    i32 0, label %124
    i32 1, label %125
    i32 3, label %131
  ]

124:                                              ; preds = %122
  br label %136

125:                                              ; preds = %122
  %126 = load %class.FreeTypeLibrary*, %class.FreeTypeLibrary** @_ZL10gFTLibrary, align 8
  %127 = getelementptr inbounds %class.FreeTypeLibrary, %class.FreeTypeLibrary* %126, i64 0, i32 4
  %128 = load i8, i8* %127, align 1, !range !11
  %129 = icmp eq i8 %128, 0
  %130 = select i1 %129, i8 %112, i8 1
  br label %136

131:                                              ; preds = %122
  %132 = icmp eq i8 %114, 4
  br i1 %132, label %133, label %136

133:                                              ; preds = %131
  %134 = icmp eq i8 %109, 0
  %135 = select i1 %134, i32 196608, i32 262144
  br label %136

136:                                              ; preds = %125, %118, %133, %124, %131, %122
  %137 = phi i32 [ 0, %131 ], [ 2, %124 ], [ %120, %118 ], [ 65536, %125 ], [ 0, %122 ], [ %135, %133 ]
  %138 = phi i8 [ %112, %131 ], [ 1, %124 ], [ %121, %118 ], [ %130, %125 ], [ %112, %122 ], [ %112, %133 ]
  %139 = and i16 %105, 32
  %140 = zext i16 %139 to i32
  %141 = or i32 %137, %140
  %142 = and i16 %105, 4
  %143 = icmp eq i16 %142, 0
  %144 = or i32 %141, 8
  %145 = select i1 %143, i32 %144, i32 %141
  %146 = or i32 %145, 1049088
  %147 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 9
  store i32 %146, i32* %147, align 8
  %148 = bitcast %struct.FT_SizeRec_** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #15
  store %struct.FT_SizeRec_* inttoptr (i64 -6148914691236517206 to %struct.FT_SizeRec_*), %struct.FT_SizeRec_** %5, align 8
  %149 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %100, i64 0, i32 1, i32 0, i32 0, i32 0
  %150 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %149, align 8
  %151 = call i32 @FT_New_Size(%struct.FT_FaceRec_* %150, %struct.FT_SizeRec_** nonnull %5) #15
  %152 = icmp ne i32 %151, 0
  %153 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #15
  %154 = icmp eq %struct.FT_SizeRec_* %153, null
  %155 = or i1 %154, %152
  br i1 %155, label %328, label %156

156:                                              ; preds = %136
  %157 = call i32 @FT_Activate_Size(%struct.FT_SizeRec_* nonnull %153) #15
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %326

159:                                              ; preds = %156
  %160 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 8
  %161 = call zeroext i1 @_ZN18SkScalerContextRec15computeMatricesENS_14PreMatrixScaleEP7SkPointP8SkMatrixS4_S4_S4_(%struct.SkScalerContextRec* %103, i32 0, %struct.SkPoint* %160, %class.SkMatrix* %33, %class.SkMatrix* null, %class.SkMatrix* null, %class.SkMatrix* null) #15
  %162 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %160, i64 0, i32 0
  %163 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 8, i32 1
  %164 = load float, float* %163, align 4
  %165 = fmul float %164, 6.400000e+01
  %166 = fptosi float %165 to i32
  %167 = sext i32 %166 to i64
  %168 = load %struct.SkFaceRec*, %struct.SkFaceRec** %94, align 8
  %169 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %168, i64 0, i32 1, i32 0, i32 0, i32 0
  %170 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %169, align 8
  %171 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %170, i64 0, i32 2
  %172 = load i64, i64* %171, align 8
  %173 = and i64 %172, 1
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %212, label %175

175:                                              ; preds = %159
  %176 = load float, float* %162, align 8
  %177 = fmul float %176, 6.400000e+01
  %178 = fptosi float %177 to i32
  %179 = sext i32 %178 to i64
  %180 = call i32 @FT_Set_Char_Size(%struct.FT_FaceRec_* %170, i64 %179, i64 %167, i32 72, i32 72) #15
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %326

182:                                              ; preds = %175
  %183 = load float, float* %162, align 8
  %184 = fcmp olt float %183, 1.000000e+00
  %185 = load float, float* %163, align 4
  %186 = fcmp olt float %185, 1.000000e+00
  %187 = or i1 %184, %186
  br i1 %187, label %188, label %277

188:                                              ; preds = %182
  %189 = load %struct.SkFaceRec*, %struct.SkFaceRec** %94, align 8
  %190 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %189, i64 0, i32 1, i32 0, i32 0, i32 0
  %191 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %190, align 8
  %192 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %191, i64 0, i32 13
  %193 = load i16, i16* %192, align 8
  %194 = uitofp i16 %193 to float
  %195 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %191, i64 0, i32 22
  %196 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %195, align 8
  %197 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %196, i64 0, i32 2, i32 2
  %198 = load i64, i64* %197, align 8
  %199 = sitofp i64 %198 to float
  %200 = fmul float %199, 0x3EF0000000000000
  %201 = fmul float %200, %194
  %202 = fmul float %201, 1.562500e-02
  %203 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %196, i64 0, i32 2, i32 3
  %204 = load i64, i64* %203, align 8
  %205 = sitofp i64 %204 to float
  %206 = fmul float %205, 0x3EF0000000000000
  %207 = fmul float %206, %194
  %208 = fmul float %207, 1.562500e-02
  %209 = fdiv float %183, %202
  %210 = fdiv float %185, %208
  %211 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix* %33, float %209, float %210) #15
  br label %277

212:                                              ; preds = %159
  %213 = and i64 %172, 2
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %326, label %215

215:                                              ; preds = %212
  %216 = icmp eq %struct.FT_FaceRec_* %170, null
  br i1 %216, label %247, label %217

217:                                              ; preds = %215
  %218 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %170, i64 0, i32 7
  %219 = load i32, i32* %218, align 8
  %220 = icmp sgt i32 %219, 0
  br i1 %220, label %221, label %247

221:                                              ; preds = %217
  %222 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %170, i64 0, i32 8
  %223 = load %struct.FT_Bitmap_Size_*, %struct.FT_Bitmap_Size_** %222, align 8
  %224 = sext i32 %219 to i64
  br label %225

225:                                              ; preds = %241, %221
  %226 = phi i64 [ 0, %221 ], [ %245, %241 ]
  %227 = phi i64 [ 0, %221 ], [ %244, %241 ]
  %228 = phi i32 [ -1, %221 ], [ %243, %241 ]
  %229 = getelementptr inbounds %struct.FT_Bitmap_Size_, %struct.FT_Bitmap_Size_* %223, i64 %226, i32 4
  %230 = load i64, i64* %229, align 8
  %231 = icmp eq i64 %230, %167
  %232 = trunc i64 %226 to i32
  br i1 %231, label %248, label %233

233:                                              ; preds = %225
  %234 = icmp slt i64 %227, %167
  br i1 %234, label %235, label %237

235:                                              ; preds = %233
  %236 = icmp slt i64 %227, %230
  br label %241

237:                                              ; preds = %233
  %238 = icmp sgt i64 %230, %167
  %239 = icmp slt i64 %230, %227
  %240 = and i1 %238, %239
  br label %241

241:                                              ; preds = %237, %235
  %242 = phi i1 [ %240, %237 ], [ %236, %235 ]
  %243 = select i1 %242, i32 %232, i32 %228
  %244 = select i1 %242, i64 %230, i64 %227
  %245 = add nuw nsw i64 %226, 1
  %246 = icmp eq i64 %245, %224
  br i1 %246, label %250, label %225

247:                                              ; preds = %215, %217
  store i32 -1, i32* %31, align 8
  br label %326

248:                                              ; preds = %225
  %249 = trunc i64 %226 to i32
  br label %250

250:                                              ; preds = %241, %248
  %251 = phi i32 [ %249, %248 ], [ %243, %241 ]
  store i32 %251, i32* %31, align 8
  %252 = icmp eq i32 %251, -1
  br i1 %252, label %326, label %253

253:                                              ; preds = %250
  %254 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %169, align 8
  %255 = call i32 @FT_Select_Size(%struct.FT_FaceRec_* %254, i32 %251) #15
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %258, label %257

257:                                              ; preds = %253
  store i32 -1, i32* %31, align 8
  br label %326

258:                                              ; preds = %253
  %259 = load float, float* %162, align 4
  %260 = load %struct.SkFaceRec*, %struct.SkFaceRec** %94, align 8
  %261 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %260, i64 0, i32 1, i32 0, i32 0, i32 0
  %262 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %261, align 8
  %263 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %262, i64 0, i32 22
  %264 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %263, align 8
  %265 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %264, i64 0, i32 2, i32 0
  %266 = load i16, i16* %265, align 8
  %267 = uitofp i16 %266 to float
  %268 = fdiv float %259, %267
  %269 = load float, float* %163, align 4
  %270 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %264, i64 0, i32 2, i32 1
  %271 = load i16, i16* %270, align 2
  %272 = uitofp i16 %271 to float
  %273 = fdiv float %269, %272
  %274 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix* %33, float %268, float %273) #15
  %275 = load i32, i32* %147, align 8
  %276 = and i32 %275, -9
  store i32 %276, i32* %147, align 8
  br label %277

277:                                              ; preds = %182, %258, %188
  %278 = phi i8 [ %138, %188 ], [ 0, %258 ], [ %138, %182 ]
  %279 = load float, float* %34, align 4
  %280 = fmul float %279, 6.553600e+04
  %281 = fcmp olt float %280, 0x41DFFFFFE0000000
  %282 = select i1 %281, float %280, float 0x41DFFFFFE0000000
  %283 = fcmp ogt float %282, 0xC1DFFFFFE0000000
  %284 = select i1 %283, float %282, float 0xC1DFFFFFE0000000
  %285 = fptosi float %284 to i32
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 7, i32 0
  store i64 %286, i64* %287, align 8
  %288 = load float, float* %35, align 4
  %289 = fmul float %288, -6.553600e+04
  %290 = fcmp olt float %289, 0x41DFFFFFE0000000
  %291 = select i1 %290, float %289, float 0x41DFFFFFE0000000
  %292 = fcmp ogt float %291, 0xC1DFFFFFE0000000
  %293 = select i1 %292, float %291, float 0xC1DFFFFFE0000000
  %294 = fptosi float %293 to i32
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 7, i32 1
  store i64 %295, i64* %296, align 8
  %297 = load float, float* %36, align 4
  %298 = fmul float %297, -6.553600e+04
  %299 = fcmp olt float %298, 0x41DFFFFFE0000000
  %300 = select i1 %299, float %298, float 0x41DFFFFFE0000000
  %301 = fcmp ogt float %300, 0xC1DFFFFFE0000000
  %302 = select i1 %301, float %300, float 0xC1DFFFFFE0000000
  %303 = fptosi float %302 to i32
  %304 = sext i32 %303 to i64
  %305 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 7, i32 2
  store i64 %304, i64* %305, align 8
  %306 = load float, float* %38, align 4
  %307 = fmul float %306, 6.553600e+04
  %308 = fcmp olt float %307, 0x41DFFFFFE0000000
  %309 = select i1 %308, float %307, float 0x41DFFFFFE0000000
  %310 = fcmp ogt float %309, 0xC1DFFFFFE0000000
  %311 = select i1 %310, float %309, float 0xC1DFFFFFE0000000
  %312 = fptosi float %311 to i32
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 7, i32 3
  store i64 %313, i64* %314, align 8
  %315 = load %struct.SkFaceRec*, %struct.SkFaceRec** %94, align 8
  %316 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %315, i64 0, i32 1, i32 0, i32 0, i32 0
  %317 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %316, align 8
  %318 = call i32 @FT_Palette_Select(%struct.FT_FaceRec_* %317, i16 zeroext 0, %struct.FT_Color_** null) #15
  store %struct.FT_SizeRec_* %153, %struct.FT_SizeRec_** %30, align 8
  %319 = load %struct.SkFaceRec*, %struct.SkFaceRec** %94, align 8
  %320 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %319, i64 0, i32 1, i32 0, i32 0, i32 0
  %321 = bitcast %struct.FT_FaceRec_** %320 to i64*
  %322 = load i64, i64* %321, align 8
  %323 = bitcast %struct.FT_FaceRec_** %29 to i64*
  store i64 %322, i64* %323, align 8
  %324 = and i8 %278, 1
  %325 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 10
  store i8 %324, i8* %325, align 4
  br label %328

326:                                              ; preds = %247, %175, %156, %257, %250, %212
  %327 = call i32 @FT_Done_Size(%struct.FT_SizeRec_* nonnull %153) #15
  br label %328

328:                                              ; preds = %136, %326, %277, %99
  %329 = atomicrmw add i32* %55, i32 1 release
  %330 = icmp slt i32 %329, 0
  br i1 %330, label %331, label %333

331:                                              ; preds = %328
  %332 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %54, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %332, i32 1) #15
  br label %333

333:                                              ; preds = %328, %331
  ret void
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal fastcc void @"_ZZN24SkScalerContext_FreeTypeC1E5sk_spI19SkTypeface_FreeTypeERK22SkScalerContextEffectsPK12SkDescriptorENK3$_0clEv"() unnamed_addr #7 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.26, i64 0, i64 0), i32 960, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i64 0, i64 0)) #18
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.SkFaceRec* @_ZL11ref_ft_facePK19SkTypeface_FreeType(%class.SkTypeface_FreeType*) unnamed_addr #0 {
  %2 = alloca %class.SkAutoSTMalloc.82, align 8
  %3 = alloca %struct.FT_Open_Args_, align 8
  %4 = alloca %struct.FT_FaceRec_*, align 8
  %5 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %16, !prof !2

7:                                                ; preds = %1
  %8 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %7
  %11 = tail call i8* @_Znwm(i64 16) #16
  %12 = bitcast i8* %11 to i32*
  store i32 1, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %11, i64 4
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds i8, i8* %11, i64 8
  %15 = bitcast i8* %14 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %15, align 8
  store i8* %11, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %16

16:                                               ; preds = %1, %7, %10
  %17 = getelementptr inbounds %class.SkTypeface_FreeType, %class.SkTypeface_FreeType* %0, i64 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = load %struct.SkFaceRec*, %struct.SkFaceRec** @_ZL12gFaceRecHead, align 8
  %20 = icmp eq %struct.SkFaceRec* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %16, %30
  %22 = phi %struct.SkFaceRec* [ %32, %30 ], [ %19, %16 ]
  %23 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %22, i64 0, i32 5
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, %18
  br i1 %25, label %26, label %30

26:                                               ; preds = %21
  %27 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %22, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = add i32 %28, 1
  store i32 %29, i32* %27, align 8
  br label %272

30:                                               ; preds = %21
  %31 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %22, i64 0, i32 0
  %32 = load %struct.SkFaceRec*, %struct.SkFaceRec** %31, align 8
  %33 = icmp eq %struct.SkFaceRec* %32, null
  br i1 %33, label %34, label %21

34:                                               ; preds = %30, %16
  %35 = bitcast %class.SkTypeface_FreeType* %0 to %class.SkFontData* (%class.SkTypeface_FreeType*)***
  %36 = load %class.SkFontData* (%class.SkTypeface_FreeType*)**, %class.SkFontData* (%class.SkTypeface_FreeType*)*** %35, align 8
  %37 = getelementptr inbounds %class.SkFontData* (%class.SkTypeface_FreeType*)*, %class.SkFontData* (%class.SkTypeface_FreeType*)** %36, i64 26
  %38 = load %class.SkFontData* (%class.SkTypeface_FreeType*)*, %class.SkFontData* (%class.SkTypeface_FreeType*)** %37, align 8
  %39 = tail call %class.SkFontData* %38(%class.SkTypeface_FreeType* %0) #15
  %40 = icmp eq %class.SkFontData* %39, null
  br i1 %40, label %272, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %class.SkFontData, %class.SkFontData* %39, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %class.SkStreamAsset*, %class.SkStreamAsset** %42, align 8
  %44 = icmp eq %class.SkStreamAsset* %43, null
  br i1 %44, label %254, label %45

45:                                               ; preds = %41
  %46 = tail call i8* @_Znwm(i64 144) #16
  %47 = bitcast i8* %46 to %struct.SkFaceRec*
  %48 = load %class.SkStreamAsset*, %class.SkStreamAsset** %42, align 8
  store %class.SkStreamAsset* null, %class.SkStreamAsset** %42, align 8
  %49 = ptrtoint %class.SkStreamAsset* %48 to i64
  %50 = getelementptr inbounds i8, i8* %46, i64 96
  %51 = bitcast i8* %50 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 0, i64 16, i1 false) #15
  store i64 %49, i64* %51, align 8
  %52 = getelementptr inbounds i8, i8* %46, i64 104
  %53 = bitcast i8* %52 to i32*
  store i32 1, i32* %53, align 8
  %54 = getelementptr inbounds i8, i8* %46, i64 108
  %55 = bitcast i8* %54 to i32*
  store i32 %18, i32* %55, align 4
  %56 = getelementptr inbounds i8, i8* %46, i64 112
  %57 = getelementptr inbounds i8, i8* %46, i64 120
  %58 = bitcast i8* %57 to i32*
  %59 = bitcast i8* %56 to i8**
  store i8* %57, i8** %59, align 8
  %60 = getelementptr inbounds i8, i8* %46, i64 136
  %61 = bitcast i8* %60 to i32*
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds i8, i8* %46, i64 140
  store i8 0, i8* %62, align 4
  %63 = getelementptr inbounds i8, i8* %46, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %63, i8 0, i64 80, i1 false) #15
  %64 = bitcast %class.SkStreamAsset* %48 to i64 (%class.SkStreamAsset*)***
  %65 = load i64 (%class.SkStreamAsset*)**, i64 (%class.SkStreamAsset*)*** %64, align 8
  %66 = getelementptr inbounds i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %65, i64 11
  %67 = load i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %66, align 8
  %68 = tail call i64 %67(%class.SkStreamAsset* %48) #15
  %69 = getelementptr inbounds i8, i8* %46, i64 24
  %70 = bitcast i8* %69 to i64*
  store i64 %68, i64* %70, align 8
  %71 = load i64, i64* %51, align 8
  %72 = getelementptr inbounds i8, i8* %46, i64 40
  %73 = bitcast i8* %72 to i64*
  store i64 %71, i64* %73, align 8
  %74 = getelementptr inbounds i8, i8* %46, i64 56
  %75 = bitcast i8* %74 to i64 (%struct.FT_StreamRec_*, i64, i8*, i64)**
  store i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* @_ZL15sk_ft_stream_ioP13FT_StreamRec_mPhm, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %75, align 8
  %76 = getelementptr inbounds i8, i8* %46, i64 64
  %77 = bitcast i8* %76 to void (%struct.FT_StreamRec_*)**
  store void (%struct.FT_StreamRec_*)* @_ZL18sk_ft_stream_closeP13FT_StreamRec_, void (%struct.FT_StreamRec_*)** %77, align 8
  %78 = bitcast %struct.FT_Open_Args_* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %78) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %78, i8 0, i64 64, i1 false)
  %79 = bitcast i8* %50 to %class.SkStreamAsset**
  %80 = inttoptr i64 %71 to %class.SkStreamAsset*
  %81 = getelementptr inbounds %class.SkStreamAsset, %class.SkStreamAsset* %80, i64 0, i32 0, i32 0, i32 0
  %82 = inttoptr i64 %71 to i8* (%class.SkStream*)***
  %83 = load i8* (%class.SkStream*)**, i8* (%class.SkStream*)*** %82, align 8
  %84 = getelementptr inbounds i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %83, i64 12
  %85 = load i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %84, align 8
  %86 = tail call i8* %85(%class.SkStream* %81) #15
  %87 = icmp eq i8* %86, null
  %88 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %3, i64 0, i32 0
  br i1 %87, label %98, label %89

89:                                               ; preds = %45
  store i32 1, i32* %88, align 8
  %90 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %3, i64 0, i32 1
  store i8* %86, i8** %90, align 8
  %91 = load %class.SkStreamAsset*, %class.SkStreamAsset** %79, align 8
  %92 = bitcast %class.SkStreamAsset* %91 to i64 (%class.SkStreamAsset*)***
  %93 = load i64 (%class.SkStreamAsset*)**, i64 (%class.SkStreamAsset*)*** %92, align 8
  %94 = getelementptr inbounds i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %93, i64 11
  %95 = load i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %94, align 8
  %96 = tail call i64 %95(%class.SkStreamAsset* %91) #15
  %97 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %3, i64 0, i32 2
  store i64 %96, i64* %97, align 8
  br label %101

98:                                               ; preds = %45
  store i32 2, i32* %88, align 8
  %99 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %3, i64 0, i32 4
  %100 = bitcast %struct.FT_StreamRec_** %99 to i8**
  store i8* %63, i8** %100, align 8
  br label %101

101:                                              ; preds = %98, %89
  %102 = bitcast %struct.FT_FaceRec_** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #15
  store %struct.FT_FaceRec_* inttoptr (i64 -6148914691236517206 to %struct.FT_FaceRec_*), %struct.FT_FaceRec_** %4, align 8
  %103 = load %class.FreeTypeLibrary*, %class.FreeTypeLibrary** @_ZL10gFTLibrary, align 8
  %104 = getelementptr inbounds %class.FreeTypeLibrary, %class.FreeTypeLibrary* %103, i64 0, i32 2
  %105 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %104, align 8
  %106 = getelementptr inbounds %class.SkFontData, %class.SkFontData* %39, i64 0, i32 1
  %107 = load i32, i32* %106, align 8
  %108 = sext i32 %107 to i64
  %109 = call i32 @FT_Open_Face(%struct.FT_LibraryRec_* %105, %struct.FT_Open_Args_* nonnull %3, i64 %108, %struct.FT_FaceRec_** nonnull %4) #15
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %229

111:                                              ; preds = %101
  %112 = getelementptr inbounds i8, i8* %46, i64 8
  %113 = bitcast %struct.FT_FaceRec_** %4 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast i8* %112 to %struct.FT_FaceRec_**
  %116 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %115, align 8
  %117 = bitcast i8* %112 to i64*
  store i64 %114, i64* %117, align 8
  %118 = icmp eq %struct.FT_FaceRec_* %116, null
  %119 = inttoptr i64 %114 to %struct.FT_FaceRec_*
  br i1 %118, label %123, label %120

120:                                              ; preds = %111
  %121 = call i32 @FT_Done_Face(%struct.FT_FaceRec_* nonnull %116) #15
  %122 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %115, align 8
  br label %123

123:                                              ; preds = %111, %120
  %124 = phi %struct.FT_FaceRec_* [ %119, %111 ], [ %122, %120 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #15
  %125 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %124, i64 0, i32 2
  %126 = load i64, i64* %125, align 8
  %127 = and i64 %126, 256
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %222, label %129

129:                                              ; preds = %123
  %130 = load i32, i32* %106, align 8
  %131 = icmp sgt i32 %130, 65535
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  store i8 1, i8* %62, align 4
  br label %222

133:                                              ; preds = %129
  %134 = bitcast %class.SkAutoSTMalloc.82* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %134) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 -86, i64 40, i1 false) #15
  %135 = getelementptr inbounds %class.SkFontData, %class.SkFontData* %39, i64 0, i32 2
  %136 = load i32, i32* %135, align 4
  %137 = icmp ugt i32 %136, 4
  br i1 %137, label %145, label %138

138:                                              ; preds = %133
  %139 = icmp eq i32 %136, 0
  br i1 %139, label %143, label %140

140:                                              ; preds = %138
  %141 = getelementptr inbounds %class.SkAutoSTMalloc.82, %class.SkAutoSTMalloc.82* %2, i64 0, i32 1, i32 0, i64 0
  %142 = getelementptr inbounds %class.SkAutoSTMalloc.82, %class.SkAutoSTMalloc.82* %2, i64 0, i32 0
  store i64* %141, i64** %142, align 8
  br label %152

143:                                              ; preds = %138
  %144 = getelementptr inbounds %class.SkAutoSTMalloc.82, %class.SkAutoSTMalloc.82* %2, i64 0, i32 0
  store i64* null, i64** %144, align 8
  br label %156

145:                                              ; preds = %133
  %146 = sext i32 %136 to i64
  %147 = call i8* @_Z15sk_malloc_throwmm(i64 %146, i64 8) #15
  %148 = bitcast %class.SkAutoSTMalloc.82* %2 to i8**
  store i8* %147, i8** %148, align 8
  %149 = load i32, i32* %135, align 4
  %150 = bitcast i8* %147 to i64*
  %151 = icmp sgt i32 %149, 0
  br i1 %151, label %152, label %156

152:                                              ; preds = %145, %140
  %153 = phi i64* [ %141, %140 ], [ %150, %145 ]
  %154 = getelementptr inbounds %class.SkFontData, %class.SkFontData* %39, i64 0, i32 3, i32 0
  %155 = getelementptr inbounds %class.SkAutoSTMalloc.82, %class.SkAutoSTMalloc.82* %2, i64 0, i32 0
  br label %163

156:                                              ; preds = %163, %145, %143
  %157 = phi i64* [ %150, %145 ], [ null, %143 ], [ %175, %163 ]
  %158 = phi i32 [ %149, %145 ], [ 0, %143 ], [ %172, %163 ]
  %159 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %115, align 8
  %160 = getelementptr inbounds %class.SkAutoSTMalloc.82, %class.SkAutoSTMalloc.82* %2, i64 0, i32 0
  %161 = call i32 @FT_Set_Var_Design_Coordinates(%struct.FT_FaceRec_* %159, i32 %158, i64* %157) #15
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %176, label %214

163:                                              ; preds = %163, %152
  %164 = phi i64* [ %153, %152 ], [ %175, %163 ]
  %165 = phi i64 [ 0, %152 ], [ %171, %163 ]
  %166 = load i32*, i32** %154, align 8
  %167 = getelementptr inbounds i32, i32* %166, i64 %165
  %168 = load i32, i32* %167, align 4
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds i64, i64* %164, i64 %165
  store i64 %169, i64* %170, align 8
  %171 = add nuw nsw i64 %165, 1
  %172 = load i32, i32* %135, align 4
  %173 = sext i32 %172 to i64
  %174 = icmp slt i64 %171, %173
  %175 = load i64*, i64** %155, align 8
  br i1 %174, label %163, label %156

176:                                              ; preds = %156
  %177 = load i32, i32* %135, align 4
  store i32 %177, i32* %61, align 8
  %178 = sext i32 %177 to i64
  %179 = bitcast i8* %56 to i32**
  %180 = load i32*, i32** %179, align 8
  %181 = icmp eq i32* %180, %58
  br i1 %181, label %184, label %182

182:                                              ; preds = %176
  %183 = bitcast i32* %180 to i8*
  call void @_Z7sk_freePv(i8* %183) #15
  br label %184

184:                                              ; preds = %182, %176
  %185 = icmp ugt i32 %177, 4
  br i1 %185, label %186, label %189

186:                                              ; preds = %184
  %187 = call i8* @_Z15sk_malloc_throwmm(i64 %178, i64 4) #15
  store i8* %187, i8** %59, align 8
  %188 = bitcast i8* %187 to i32*
  br label %193

189:                                              ; preds = %184
  %190 = icmp eq i32 %177, 0
  br i1 %190, label %192, label %191

191:                                              ; preds = %189
  store i8* %57, i8** %59, align 8
  br label %193

192:                                              ; preds = %189
  store i32* null, i32** %179, align 8
  br label %193

193:                                              ; preds = %192, %191, %186
  %194 = phi i32* [ %188, %186 ], [ %58, %191 ], [ null, %192 ]
  %195 = load i32, i32* %61, align 8
  %196 = icmp sgt i32 %195, 0
  br i1 %196, label %197, label %214

197:                                              ; preds = %193
  %198 = getelementptr inbounds %class.SkFontData, %class.SkFontData* %39, i64 0, i32 3, i32 0
  %199 = load i32*, i32** %198, align 8
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %194, align 4
  %201 = load i32, i32* %61, align 8
  %202 = icmp sgt i32 %201, 1
  br i1 %202, label %203, label %214

203:                                              ; preds = %197, %203
  %204 = phi i64 [ %210, %203 ], [ 1, %197 ]
  %205 = load i32*, i32** %179, align 8
  %206 = load i32*, i32** %198, align 8
  %207 = getelementptr inbounds i32, i32* %206, i64 %204
  %208 = load i32, i32* %207, align 4
  %209 = getelementptr inbounds i32, i32* %205, i64 %204
  store i32 %208, i32* %209, align 4
  %210 = add nuw nsw i64 %204, 1
  %211 = load i32, i32* %61, align 8
  %212 = sext i32 %211 to i64
  %213 = icmp slt i64 %210, %212
  br i1 %213, label %203, label %214

214:                                              ; preds = %203, %197, %193, %156
  %215 = load i64*, i64** %160, align 8
  %216 = getelementptr inbounds %class.SkAutoSTMalloc.82, %class.SkAutoSTMalloc.82* %2, i64 0, i32 1, i32 0, i64 0
  %217 = icmp eq i64* %215, %216
  br i1 %217, label %220, label %218

218:                                              ; preds = %214
  %219 = bitcast i64* %215 to i8*
  call void @_Z7sk_freePv(i8* %219) #15
  br label %220

220:                                              ; preds = %218, %214
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %134) #15
  %221 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %115, align 8
  br label %222

222:                                              ; preds = %123, %132, %220
  %223 = phi %struct.FT_FaceRec_* [ %124, %123 ], [ %124, %132 ], [ %221, %220 ]
  %224 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %223, i64 0, i32 23
  %225 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %224, align 8
  %226 = icmp eq %struct.FT_CharMapRec_* %225, null
  br i1 %226, label %227, label %251

227:                                              ; preds = %222
  %228 = call i32 @FT_Select_Charmap(%struct.FT_FaceRec_* %223, i32 1937337698) #15
  br label %251

229:                                              ; preds = %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %78) #15
  %230 = bitcast i8* %56 to i32**
  %231 = load i32*, i32** %230, align 8
  %232 = icmp eq i32* %231, %58
  br i1 %232, label %235, label %233

233:                                              ; preds = %229
  %234 = bitcast i32* %231 to i8*
  call void @_Z7sk_freePv(i8* %234) #15
  br label %235

235:                                              ; preds = %233, %229
  %236 = load %class.SkStreamAsset*, %class.SkStreamAsset** %79, align 8
  store %class.SkStreamAsset* null, %class.SkStreamAsset** %79, align 8
  %237 = icmp eq %class.SkStreamAsset* %236, null
  br i1 %237, label %243, label %238

238:                                              ; preds = %235
  %239 = bitcast %class.SkStreamAsset* %236 to void (%class.SkStreamAsset*)***
  %240 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %239, align 8
  %241 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %240, i64 1
  %242 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %241, align 8
  call void %242(%class.SkStreamAsset* nonnull %236) #15
  br label %243

243:                                              ; preds = %238, %235
  %244 = getelementptr inbounds i8, i8* %46, i64 8
  %245 = bitcast i8* %244 to %struct.FT_FaceRec_**
  %246 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %245, align 8
  store %struct.FT_FaceRec_* null, %struct.FT_FaceRec_** %245, align 8
  %247 = icmp eq %struct.FT_FaceRec_* %246, null
  br i1 %247, label %250, label %248

248:                                              ; preds = %243
  %249 = call i32 @FT_Done_Face(%struct.FT_FaceRec_* nonnull %246) #15
  br label %250

250:                                              ; preds = %248, %243
  call void @_ZdlPv(i8* nonnull %46) #16
  br label %254

251:                                              ; preds = %227, %222
  %252 = load i64, i64* bitcast (%struct.SkFaceRec** @_ZL12gFaceRecHead to i64*), align 8
  %253 = bitcast i8* %46 to i64*
  store i64 %252, i64* %253, align 8
  store i8* %46, i8** bitcast (%struct.SkFaceRec** @_ZL12gFaceRecHead to i8**), align 8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %78) #15
  br label %254

254:                                              ; preds = %251, %41, %250
  %255 = phi %struct.SkFaceRec* [ %47, %251 ], [ null, %250 ], [ null, %41 ]
  %256 = getelementptr inbounds %class.SkFontData, %class.SkFontData* %39, i64 0, i32 3, i32 0
  %257 = load i32*, i32** %256, align 8
  %258 = getelementptr inbounds %class.SkFontData, %class.SkFontData* %39, i64 0, i32 3, i32 1, i32 0, i64 0
  %259 = icmp eq i32* %257, %258
  br i1 %259, label %262, label %260

260:                                              ; preds = %254
  %261 = bitcast i32* %257 to i8*
  call void @_Z7sk_freePv(i8* %261) #15
  br label %262

262:                                              ; preds = %260, %254
  %263 = load %class.SkStreamAsset*, %class.SkStreamAsset** %42, align 8
  store %class.SkStreamAsset* null, %class.SkStreamAsset** %42, align 8
  %264 = icmp eq %class.SkStreamAsset* %263, null
  br i1 %264, label %270, label %265

265:                                              ; preds = %262
  %266 = bitcast %class.SkStreamAsset* %263 to void (%class.SkStreamAsset*)***
  %267 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %266, align 8
  %268 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %267, i64 1
  %269 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %268, align 8
  call void %269(%class.SkStreamAsset* nonnull %263) #15
  br label %270

270:                                              ; preds = %265, %262
  %271 = bitcast %class.SkFontData* %39 to i8*
  call void @_ZdlPv(i8* %271) #16
  br label %272

272:                                              ; preds = %34, %270, %26
  %273 = phi %struct.SkFaceRec* [ %22, %26 ], [ %255, %270 ], [ null, %34 ]
  ret %struct.SkFaceRec* %273
}

declare i32 @FT_Activate_Size(%struct.FT_SizeRec_*) local_unnamed_addr #5

declare zeroext i1 @_ZN18SkScalerContextRec15computeMatricesENS_14PreMatrixScaleEP7SkPointP8SkMatrixS4_S4_S4_(%struct.SkScalerContextRec*, i32, %struct.SkPoint*, %class.SkMatrix*, %class.SkMatrix*, %class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #5

declare i32 @FT_Set_Char_Size(%struct.FT_FaceRec_*, i64, i64, i32, i32) local_unnamed_addr #5

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #5

declare i32 @FT_Select_Size(%struct.FT_FaceRec_*, i32) local_unnamed_addr #5

declare i32 @FT_Palette_Select(%struct.FT_FaceRec_*, i16 zeroext, %struct.FT_Color_**) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24SkScalerContext_FreeTypeD2Ev(%class.SkScalerContext_FreeType*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTV24SkScalerContext_FreeType, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %14, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %5
  %9 = tail call i8* @_Znwm(i64 16) #16
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 4
  %11 = getelementptr inbounds i8, i8* %9, i64 4
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds i8, i8* %9, i64 8
  %13 = bitcast i8* %12 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %13, align 8
  store i8* %9, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %14

14:                                               ; preds = %1, %5, %8
  %15 = load %class.SkMutex*, %class.SkMutex** @_ZZL9f_t_mutexvE5mutex, align 8
  %16 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 acquire
  %18 = icmp slt i32 %17, 1
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %15, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %20) #15
  br label %21

21:                                               ; preds = %14, %19
  %22 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 3
  %23 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %22, align 8
  %24 = icmp eq %struct.FT_SizeRec_* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call i32 @FT_Done_Size(%struct.FT_SizeRec_* nonnull %23) #15
  br label %27

27:                                               ; preds = %21, %25
  %28 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %struct.SkFaceRec*, %struct.SkFaceRec** %28, align 8
  store %struct.SkFaceRec* null, %struct.SkFaceRec** %28, align 8
  %30 = icmp eq %struct.SkFaceRec* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %27
  tail call void @_Z13unref_ft_faceP9SkFaceRec(%struct.SkFaceRec* nonnull %29) #15
  br label %32

32:                                               ; preds = %27, %31
  %33 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %44, !prof !2

35:                                               ; preds = %32
  %36 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %35
  %39 = tail call i8* @_Znwm(i64 16) #16
  %40 = bitcast i8* %39 to i32*
  store i32 1, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %39, i64 4
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds i8, i8* %39, i64 8
  %43 = bitcast i8* %42 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %43, align 8
  store i8* %39, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %44

44:                                               ; preds = %32, %35, %38
  %45 = load i32, i32* @_ZL8gFTCount, align 4
  %46 = add nsw i32 %45, -1
  store i32 %46, i32* @_ZL8gFTCount, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %59

48:                                               ; preds = %44
  %49 = load %class.FreeTypeLibrary*, %class.FreeTypeLibrary** @_ZL10gFTLibrary, align 8
  %50 = icmp eq %class.FreeTypeLibrary* %49, null
  br i1 %50, label %59, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %class.FreeTypeLibrary, %class.FreeTypeLibrary* %49, i64 0, i32 2
  %53 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %52, align 8
  %54 = icmp eq %struct.FT_LibraryRec_* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  %56 = tail call i32 @FT_Done_Library(%struct.FT_LibraryRec_* nonnull %53) #15
  br label %57

57:                                               ; preds = %55, %51
  %58 = bitcast %class.FreeTypeLibrary* %49 to i8*
  tail call void @_ZdlPv(i8* %58) #16
  br label %59

59:                                               ; preds = %44, %48, %57
  %60 = atomicrmw add i32* %16, i32 1 release
  %61 = icmp slt i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %59
  %63 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %15, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %63, i32 1) #15
  br label %64

64:                                               ; preds = %59, %62
  %65 = load %struct.SkFaceRec*, %struct.SkFaceRec** %28, align 8
  store %struct.SkFaceRec* null, %struct.SkFaceRec** %28, align 8
  %66 = icmp eq %struct.SkFaceRec* %65, null
  br i1 %66, label %68, label %67

67:                                               ; preds = %64
  tail call void @_Z13unref_ft_faceP9SkFaceRec(%struct.SkFaceRec* nonnull %65) #15
  br label %68

68:                                               ; preds = %64, %67
  %69 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 0, i32 0
  tail call void @_ZN15SkScalerContextD2Ev(%class.SkScalerContext* %69) #15
  ret void
}

declare i32 @FT_Done_Size(%struct.FT_SizeRec_*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24SkScalerContext_FreeTypeD0Ev(%class.SkScalerContext_FreeType*) unnamed_addr #0 align 2 {
  tail call void @_ZN24SkScalerContext_FreeTypeD2Ev(%class.SkScalerContext_FreeType* %0) #15
  %2 = bitcast %class.SkScalerContext_FreeType* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN24SkScalerContext_FreeType9setupSizeEv(%class.SkScalerContext_FreeType*) local_unnamed_addr #0 align 2 {
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %13, !prof !2

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = tail call i8* @_Znwm(i64 16) #16
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  %12 = bitcast i8* %11 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %12, align 8
  store i8* %8, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %13

13:                                               ; preds = %1, %4, %7
  %14 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 3
  %15 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %14, align 8
  %16 = tail call i32 @FT_Activate_Size(%struct.FT_SizeRec_* %15) #15
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 2
  %20 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %19, align 8
  %21 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 7
  tail call void @FT_Set_Transform(%struct.FT_FaceRec_* %20, %struct.FT_Matrix_* %21, %struct.FT_Vector_* null) #15
  br label %22

22:                                               ; preds = %13, %18
  ret i32 %16
}

declare void @FT_Set_Transform(%struct.FT_FaceRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN24SkScalerContext_FreeType15generateAdvanceEP7SkGlyph(%class.SkScalerContext_FreeType*, %class.SkGlyph*) unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 10
  %5 = load i8, i8* %4, align 4, !range !11
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %79, label %7

7:                                                ; preds = %2
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %19, !prof !2

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %10
  %14 = tail call i8* @_Znwm(i64 16) #16
  %15 = bitcast i8* %14 to i32*
  store i32 1, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %14, i64 4
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds i8, i8* %14, i64 8
  %18 = bitcast i8* %17 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %18, align 8
  store i8* %14, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %19

19:                                               ; preds = %7, %10, %13
  %20 = load %class.SkMutex*, %class.SkMutex** @_ZZL9f_t_mutexvE5mutex, align 8
  %21 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acquire
  %23 = icmp slt i32 %22, 1
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %20, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %25) #15
  br label %26

26:                                               ; preds = %19, %24
  %27 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %38, !prof !2

29:                                               ; preds = %26
  %30 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %29
  %33 = tail call i8* @_Znwm(i64 16) #16
  %34 = bitcast i8* %33 to i32*
  store i32 1, i32* %34, align 4
  %35 = getelementptr inbounds i8, i8* %33, i64 4
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds i8, i8* %33, i64 8
  %37 = bitcast i8* %36 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %37, align 8
  store i8* %33, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %38

38:                                               ; preds = %32, %29, %26
  %39 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 3
  %40 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %39, align 8
  %41 = tail call i32 @FT_Activate_Size(%struct.FT_SizeRec_* %40) #15
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  tail call void @_ZN7SkGlyph11zeroMetricsEv(%class.SkGlyph* %1) #15
  br label %73

44:                                               ; preds = %38
  %45 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 2
  %46 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %45, align 8
  %47 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 7
  tail call void @FT_Set_Transform(%struct.FT_FaceRec_* %46, %struct.FT_Matrix_* %47, %struct.FT_Vector_* null) #15
  %48 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #15
  store i64 -6148914691236517206, i64* %3, align 8
  %49 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %45, align 8
  %50 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 10, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = lshr i32 %51, 2
  %53 = and i32 %52, 65535
  %54 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 9
  %55 = load i32, i32* %54, align 8
  %56 = or i32 %55, 536870912
  %57 = call i32 @FT_Get_Advance(%struct.FT_FaceRec_* %49, i32 %53, i32 %56, i64* nonnull %3) #15
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %71

59:                                               ; preds = %44
  %60 = load i64, i64* %3, align 8
  %61 = sitofp i64 %60 to float
  %62 = fmul float %61, 0x3EF0000000000000
  %63 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 5, i32 0, i64 0
  %64 = load float, float* %63, align 4
  %65 = fmul float %64, %62
  %66 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 6
  store float %65, float* %66, align 8
  %67 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 5, i32 0, i64 3
  %68 = load float, float* %67, align 4
  %69 = fmul float %62, %68
  %70 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 7
  store float %69, float* %70, align 4
  br label %71

71:                                               ; preds = %44, %59
  %72 = phi i1 [ true, %59 ], [ false, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #15
  br label %73

73:                                               ; preds = %71, %43
  %74 = phi i1 [ true, %43 ], [ %72, %71 ]
  %75 = atomicrmw add i32* %21, i32 1 release
  %76 = icmp slt i32 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %20, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %78, i32 1) #15
  br label %79

79:                                               ; preds = %77, %73, %2
  %80 = phi i1 [ false, %2 ], [ %74, %73 ], [ %74, %77 ]
  ret i1 %80
}

declare void @_ZN7SkGlyph11zeroMetricsEv(%class.SkGlyph*) local_unnamed_addr #5

declare i32 @FT_Get_Advance(%struct.FT_FaceRec_*, i32, i32, i64*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24SkScalerContext_FreeType22getBBoxForCurrentGlyphEPK7SkGlyphP8FT_BBox_b(%class.SkScalerContext_FreeType*, %class.SkGlyph* nocapture readonly, %struct.FT_BBox_*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 2
  %6 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %5, align 8
  %7 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %6, i64 0, i32 21
  %8 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %7, align 8
  %9 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %8, i64 0, i32 13
  tail call void @FT_Outline_Get_CBox(%struct.FT_Outline_* %9, %struct.FT_BBox_* %2) #15
  %10 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 0, i32 0, i32 1, i32 14
  %11 = load i16, i16* %10, align 2
  %12 = and i16 %11, 16
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %35, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 10, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = shl i32 %16, 4
  %18 = and i32 %17, 48
  %19 = lshr i32 %16, 14
  %20 = and i32 %19, 48
  %21 = zext i32 %18 to i64
  %22 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %2, i64 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = add nsw i64 %23, %21
  store i64 %24, i64* %22, align 8
  %25 = zext i32 %20 to i64
  %26 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %2, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = sub nsw i64 %27, %25
  store i64 %28, i64* %26, align 8
  %29 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %2, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = add nsw i64 %30, %21
  store i64 %31, i64* %29, align 8
  %32 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %2, i64 0, i32 3
  %33 = load i64, i64* %32, align 8
  %34 = sub nsw i64 %33, %25
  store i64 %34, i64* %32, align 8
  br label %35

35:                                               ; preds = %4, %14
  br i1 %3, label %36, label %47

36:                                               ; preds = %35
  %37 = bitcast %struct.FT_BBox_* %2 to <2 x i64>*
  %38 = load <2 x i64>, <2 x i64>* %37, align 8
  %39 = and <2 x i64> %38, <i64 -64, i64 -64>
  %40 = bitcast %struct.FT_BBox_* %2 to <2 x i64>*
  store <2 x i64> %39, <2 x i64>* %40, align 8
  %41 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %2, i64 0, i32 2
  %42 = bitcast i64* %41 to <2 x i64>*
  %43 = load <2 x i64>, <2 x i64>* %42, align 8
  %44 = add nsw <2 x i64> %43, <i64 63, i64 63>
  %45 = and <2 x i64> %44, <i64 -64, i64 -64>
  %46 = bitcast i64* %41 to <2 x i64>*
  store <2 x i64> %45, <2 x i64>* %46, align 8
  br label %47

47:                                               ; preds = %35, %36
  ret void
}

declare void @FT_Outline_Get_CBox(%struct.FT_Outline_*, %struct.FT_BBox_*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN24SkScalerContext_FreeType16getCBoxForLetterEcP8FT_BBox_(%class.SkScalerContext_FreeType* nocapture readonly, i8 signext, %struct.FT_BBox_*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 2
  %5 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %4, align 8
  %6 = sext i8 %1 to i64
  %7 = tail call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %5, i64 %6) #15
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %24, label %9

9:                                                ; preds = %3
  %10 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %4, align 8
  %11 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 9
  %12 = load i32, i32* %11, align 8
  %13 = tail call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %10, i32 %7, i32 %12) #15
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %24

15:                                               ; preds = %9
  %16 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %4, align 8
  %17 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %16, i64 0, i32 21
  %18 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %17, align 8
  %19 = trunc i32 %7 to i16
  tail call void @_ZN24SkScalerContext_FreeType16emboldenIfNeededEP11FT_FaceRec_P16FT_GlyphSlotRec_t(%class.SkScalerContext_FreeType* %0, %struct.FT_FaceRec_* %16, %struct.FT_GlyphSlotRec_* %18, i16 zeroext %19)
  %20 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %4, align 8
  %21 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %20, i64 0, i32 21
  %22 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %21, align 8
  %23 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %22, i64 0, i32 13
  tail call void @FT_Outline_Get_CBox(%struct.FT_Outline_* %23, %struct.FT_BBox_* %2) #15
  br label %24

24:                                               ; preds = %9, %3, %15
  %25 = phi i1 [ true, %15 ], [ false, %3 ], [ false, %9 ]
  ret i1 %25
}

declare i32 @FT_Get_Char_Index(%struct.FT_FaceRec_*, i64) local_unnamed_addr #5

declare i32 @FT_Load_Glyph(%struct.FT_FaceRec_*, i32, i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24SkScalerContext_FreeType16emboldenIfNeededEP11FT_FaceRec_P16FT_GlyphSlotRec_t(%class.SkScalerContext_FreeType* nocapture readonly, %struct.FT_FaceRec_* nocapture readonly, %struct.FT_GlyphSlotRec_*, i16 zeroext) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 0, i32 0, i32 1, i32 14
  %6 = load i16, i16* %5, align 2
  %7 = and i16 %6, 8
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %43, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 9
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %43 [
    i32 1869968492, label %12
    i32 1651078259, label %24
  ]

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 13
  %14 = load i16, i16* %13, align 8
  %15 = zext i16 %14 to i64
  %16 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 22
  %17 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %16, align 8
  %18 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %17, i64 0, i32 2, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = tail call i64 @FT_MulFix(i64 %15, i64 %19) #15
  %21 = sdiv i64 %20, 24
  %22 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 13
  %23 = tail call i32 @FT_Outline_Embolden(%struct.FT_Outline_* %22, i64 %21) #15
  br label %43

24:                                               ; preds = %9
  %25 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 2
  %26 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %25, align 8
  %27 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %26, i64 0, i32 21
  %28 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %27, align 8
  %29 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %28, i64 0, i32 10, i32 3
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %32, label %37

32:                                               ; preds = %24
  %33 = zext i16 %3 to i32
  %34 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 9
  %35 = load i32, i32* %34, align 8
  %36 = tail call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %26, i32 %33, i32 %35) #15
  br label %37

37:                                               ; preds = %24, %32
  %38 = tail call i32 @FT_GlyphSlot_Own_Bitmap(%struct.FT_GlyphSlotRec_* %2) #15
  %39 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 0
  %40 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %39, align 8
  %41 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %2, i64 0, i32 10
  %42 = tail call i32 @FT_Bitmap_Embolden(%struct.FT_LibraryRec_* %40, %struct.FT_Bitmap_* %41, i64 64, i64 0) #15
  br label %43

43:                                               ; preds = %9, %4, %37, %12
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN24SkScalerContext_FreeType16updateGlyphIfLCDEP7SkGlyph(%class.SkScalerContext_FreeType* nocapture readonly, %class.SkGlyph* nocapture) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 8
  %4 = load i8, i8* %3, align 8
  %5 = icmp eq i8 %4, 4
  br i1 %5, label %6, label %35

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 11
  %8 = load i8, i8* %7, align 1, !range !11
  %9 = icmp eq i8 %8, 0
  %10 = load %class.FreeTypeLibrary*, %class.FreeTypeLibrary** @_ZL10gFTLibrary, align 8
  %11 = getelementptr inbounds %class.FreeTypeLibrary, %class.FreeTypeLibrary* %10, i64 0, i32 5
  %12 = load i32, i32* %11, align 4
  br i1 %9, label %24, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 1
  %15 = load i16, i16* %14, align 2
  %16 = trunc i32 %12 to i16
  %17 = add i16 %15, %16
  store i16 %17, i16* %14, align 2
  %18 = load i32, i32* %11, align 4
  %19 = lshr i32 %18, 1
  %20 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 2
  %21 = load i16, i16* %20, align 4
  %22 = trunc i32 %19 to i16
  %23 = sub i16 %21, %22
  store i16 %23, i16* %20, align 4
  br label %35

24:                                               ; preds = %6
  %25 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 0
  %26 = load i16, i16* %25, align 8
  %27 = trunc i32 %12 to i16
  %28 = add i16 %26, %27
  store i16 %28, i16* %25, align 8
  %29 = load i32, i32* %11, align 4
  %30 = lshr i32 %29, 1
  %31 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 3
  %32 = load i16, i16* %31, align 2
  %33 = trunc i32 %30 to i16
  %34 = sub i16 %32, %33
  store i16 %34, i16* %31, align 2
  br label %35

35:                                               ; preds = %13, %24, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN24SkScalerContext_FreeType20shouldSubpixelBitmapERK7SkGlyphRK8SkMatrix(%class.SkScalerContext_FreeType* nocapture readonly, %class.SkGlyph* nocapture readonly dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 2
  %5 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %4, align 8
  %6 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 0, i32 21
  %7 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %7, i64 0, i32 9
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1651078259
  br i1 %10, label %11, label %24

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 0, i32 0, i32 1, i32 14
  %13 = load i16, i16* %12, align 2
  %14 = and i16 %13, 16
  %15 = icmp eq i16 %14, 0
  br i1 %15, label %24, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 10, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = and i32 %18, 3
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = and i32 %18, 786432
  %23 = icmp ne i32 %22, 0
  br label %24

24:                                               ; preds = %11, %16, %21, %3
  %25 = phi i1 [ false, %11 ], [ false, %3 ], [ true, %16 ], [ %23, %21 ]
  %26 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %5, i64 0, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, 1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %42, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = trunc i32 %32 to i8
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %2) #15
  %37 = zext i8 %36 to i32
  store i32 %37, i32* %31, align 4
  br label %38

38:                                               ; preds = %30, %35
  %39 = phi i32 [ %37, %35 ], [ %32, %30 ]
  %40 = and i32 %39, 15
  %41 = icmp ne i32 %40, 0
  br label %42

42:                                               ; preds = %24, %38
  %43 = phi i1 [ true, %24 ], [ %41, %38 ]
  %44 = and i1 %25, %43
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24SkScalerContext_FreeType15generateMetricsEP7SkGlyph(%class.SkScalerContext_FreeType*, %class.SkGlyph*) unnamed_addr #0 align 2 {
  %3 = alloca %struct.FT_BBox_, align 8
  %4 = alloca %struct.FT_LayerIterator_, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.FT_Opaque_Paint_, align 8
  %8 = alloca %struct.FT_BBox_, align 8
  %9 = alloca %struct.FT_Outline_, align 8
  %10 = alloca %struct.FT_Outline_, align 8
  %11 = alloca %struct.FT_BBox_, align 8
  %12 = alloca { <2 x float>, <2 x float> }, align 8
  %13 = bitcast { <2 x float>, <2 x float> }* %12 to %struct.SkRect*
  %14 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %25, !prof !2

16:                                               ; preds = %2
  %17 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %16
  %20 = tail call i8* @_Znwm(i64 16) #16
  %21 = bitcast i8* %20 to i32*
  store i32 1, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %20, i64 4
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds i8, i8* %20, i64 8
  %24 = bitcast i8* %23 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %24, align 8
  store i8* %20, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %25

25:                                               ; preds = %2, %16, %19
  %26 = load %class.SkMutex*, %class.SkMutex** @_ZZL9f_t_mutexvE5mutex, align 8
  %27 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw sub i32* %27, i32 1 acquire
  %29 = icmp slt i32 %28, 1
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %26, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %31) #15
  br label %32

32:                                               ; preds = %25, %30
  %33 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 0, i32 0, i32 1, i32 12
  %34 = load i8, i8* %33, align 8
  %35 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 8
  store i8 %34, i8* %35, align 8
  %36 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %47, !prof !2

38:                                               ; preds = %32
  %39 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %47, label %41

41:                                               ; preds = %38
  %42 = tail call i8* @_Znwm(i64 16) #16
  %43 = bitcast i8* %42 to i32*
  store i32 1, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %42, i64 4
  store i8 0, i8* %44, align 1
  %45 = getelementptr inbounds i8, i8* %42, i64 8
  %46 = bitcast i8* %45 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %46, align 8
  store i8* %42, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %47

47:                                               ; preds = %41, %38, %32
  %48 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 3
  %49 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %48, align 8
  %50 = tail call i32 @FT_Activate_Size(%struct.FT_SizeRec_* %49) #15
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %53, label %52

52:                                               ; preds = %47
  tail call void @_ZN7SkGlyph11zeroMetricsEv(%class.SkGlyph* %1) #15
  br label %622

53:                                               ; preds = %47
  %54 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 2
  %55 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %56 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 7
  tail call void @FT_Set_Transform(%struct.FT_FaceRec_* %55, %struct.FT_Matrix_* %56, %struct.FT_Vector_* null) #15
  %57 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %58 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 10, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = lshr i32 %59, 2
  %61 = and i32 %60, 65535
  %62 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 9
  %63 = load i32, i32* %62, align 8
  %64 = or i32 %63, 4194304
  %65 = tail call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %57, i32 %61, i32 %64) #15
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %53
  tail call void @_ZN7SkGlyph11zeroMetricsEv(%class.SkGlyph* %1) #15
  br label %622

68:                                               ; preds = %53
  %69 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %70 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %69, i64 0, i32 21
  %71 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %70, align 8
  %72 = load i32, i32* %58, align 4
  %73 = lshr i32 %72, 2
  %74 = trunc i32 %73 to i16
  tail call void @_ZN24SkScalerContext_FreeType16emboldenIfNeededEP11FT_FaceRec_P16FT_GlyphSlotRec_t(%class.SkScalerContext_FreeType* %0, %struct.FT_FaceRec_* %69, %struct.FT_GlyphSlotRec_* %71, i16 zeroext %74)
  %75 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %76 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %75, i64 0, i32 21
  %77 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %76, align 8
  %78 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %77, i64 0, i32 9
  %79 = load i32, i32* %78, align 8
  switch i32 %79, label %587 [
    i32 1869968492, label %80
    i32 1651078259, label %448
  ]

80:                                               ; preds = %68
  %81 = bitcast %struct.FT_BBox_* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %81) #15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %81, i8* align 8 bitcast (%struct.FT_BBox_* @__const._ZN24SkScalerContext_FreeType15generateMetricsEP7SkGlyph.bounds to i8*), i64 32, i1 false)
  %82 = bitcast %struct.FT_LayerIterator_* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %82) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 0, i64 16, i1 false)
  %83 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83) #15
  store i32 -1431655766, i32* %5, align 4
  %84 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84) #15
  store i32 -1431655766, i32* %6, align 4
  %85 = bitcast %struct.FT_Opaque_Paint_* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %85) #15
  %86 = getelementptr inbounds %struct.FT_Opaque_Paint_, %struct.FT_Opaque_Paint_* %7, i64 0, i32 1
  %87 = bitcast i8* %86 to i64*
  store i64 -6148914691236517206, i64* %87, align 8
  %88 = getelementptr inbounds %struct.FT_Opaque_Paint_, %struct.FT_Opaque_Paint_* %7, i64 0, i32 0
  store i8* null, i8** %88, align 8
  %89 = load i32, i32* %58, align 4
  %90 = lshr i32 %89, 2
  %91 = and i32 %90, 65535
  %92 = call zeroext i8 @FT_Get_Color_Glyph_Paint(%struct.FT_FaceRec_* %75, i32 %91, i32 0, %struct.FT_Opaque_Paint_* nonnull %7) #15
  %93 = icmp eq i8 %92, 0
  %94 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  br i1 %93, label %95, label %113

95:                                               ; preds = %80
  %96 = load i32, i32* %58, align 4
  %97 = lshr i32 %96, 2
  %98 = and i32 %97, 65535
  %99 = call zeroext i8 @FT_Get_Color_Glyph_Layer(%struct.FT_FaceRec_* %94, i32 %98, i32* nonnull %5, i32* nonnull %6, %struct.FT_LayerIterator_* nonnull %4) #15
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %330, label %101

101:                                              ; preds = %95
  %102 = bitcast %struct.FT_BBox_* %11 to i8*
  %103 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %11, i64 0, i32 0
  %104 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %11, i64 0, i32 1
  %105 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %11, i64 0, i32 2
  %106 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %11, i64 0, i32 3
  %107 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 0, i32 0, i32 1, i32 14
  %108 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 0
  %109 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 1
  %110 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 2
  %111 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 3
  %112 = bitcast %struct.FT_BBox_* %11 to i8*
  br label %239

113:                                              ; preds = %80
  call void @FT_Set_Transform(%struct.FT_FaceRec_* %94, %struct.FT_Matrix_* null, %struct.FT_Vector_* null) #15
  %114 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %115 = load i32, i32* %58, align 4
  %116 = lshr i32 %115, 2
  %117 = and i32 %116, 65535
  %118 = load i32, i32* %62, align 8
  %119 = or i32 %118, 4194304
  %120 = call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %114, i32 %117, i32 %119) #15
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %129

122:                                              ; preds = %113
  %123 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %124 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %123, i64 0, i32 21
  %125 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %124, align 8
  %126 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %125, i64 0, i32 13, i32 0
  %127 = load i16, i16* %126, align 8
  %128 = icmp eq i16 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %113, %122
  call void @_ZN7SkGlyph11zeroMetricsEv(%class.SkGlyph* %1) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %81) #15
  br label %622

130:                                              ; preds = %122
  %131 = load i32, i32* %58, align 4
  %132 = lshr i32 %131, 2
  %133 = trunc i32 %132 to i16
  call void @_ZN24SkScalerContext_FreeType16emboldenIfNeededEP11FT_FaceRec_P16FT_GlyphSlotRec_t(%class.SkScalerContext_FreeType* %0, %struct.FT_FaceRec_* %123, %struct.FT_GlyphSlotRec_* %125, i16 zeroext %133)
  %134 = bitcast %struct.FT_BBox_* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %134) #15
  %135 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %8, i64 0, i32 0
  %136 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %8, i64 0, i32 1
  %137 = bitcast %struct.FT_BBox_* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 -86, i64 32, i1 false)
  %138 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %139 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %138, i64 0, i32 21
  %140 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %139, align 8
  %141 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %140, i64 0, i32 13
  call void @FT_Outline_Get_CBox(%struct.FT_Outline_* %141, %struct.FT_BBox_* nonnull %8) #15
  %142 = bitcast %struct.FT_Outline_* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %142) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 -86, i64 40, i1 false)
  %143 = load %class.FreeTypeLibrary*, %class.FreeTypeLibrary** @_ZL10gFTLibrary, align 8
  %144 = getelementptr inbounds %class.FreeTypeLibrary, %class.FreeTypeLibrary* %143, i64 0, i32 2
  %145 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %144, align 8
  %146 = call i32 @FT_Outline_New(%struct.FT_LibraryRec_* %145, i32 4, i32 0, %struct.FT_Outline_* nonnull %9) #15
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %238

148:                                              ; preds = %130
  %149 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %8, i64 0, i32 3
  %150 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %8, i64 0, i32 2
  %151 = load i64, i64* %135, align 8
  %152 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %9, i64 0, i32 2
  %153 = load %struct.FT_Vector_*, %struct.FT_Vector_** %152, align 8
  %154 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %153, i64 0, i32 0
  store i64 %151, i64* %154, align 8
  %155 = load i64, i64* %136, align 8
  %156 = load %struct.FT_Vector_*, %struct.FT_Vector_** %152, align 8
  %157 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %156, i64 0, i32 1
  store i64 %155, i64* %157, align 8
  %158 = load i64, i64* %135, align 8
  %159 = load %struct.FT_Vector_*, %struct.FT_Vector_** %152, align 8
  %160 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %159, i64 1, i32 0
  store i64 %158, i64* %160, align 8
  %161 = load i64, i64* %149, align 8
  %162 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %159, i64 1, i32 1
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %159, i64 2, i32 0
  %164 = bitcast i64* %150 to <2 x i64>*
  %165 = load <2 x i64>, <2 x i64>* %164, align 8
  %166 = bitcast i64* %163 to <2 x i64>*
  store <2 x i64> %165, <2 x i64>* %166, align 8
  %167 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %159, i64 3, i32 0
  %168 = extractelement <2 x i64> %165, i32 0
  store i64 %168, i64* %167, align 8
  %169 = load i64, i64* %136, align 8
  %170 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %159, i64 3, i32 1
  store i64 %169, i64* %170, align 8
  call void @FT_Outline_Transform(%struct.FT_Outline_* nonnull %9, %struct.FT_Matrix_* %56) #15
  %171 = bitcast %struct.FT_Outline_* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %171)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %171, i8 -86, i64 40, i1 false)
  %172 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %173 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %172, i64 0, i32 21
  %174 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %173, align 8
  %175 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %174, i64 0, i32 13
  %176 = bitcast %struct.FT_Outline_* %175 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %171, i8* align 8 %176, i64 40, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %176, i8* nonnull align 8 %142, i64 40, i1 false)
  %177 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %178 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %177, i64 0, i32 21
  %179 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %178, align 8
  %180 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %179, i64 0, i32 13
  call void @FT_Outline_Get_CBox(%struct.FT_Outline_* %180, %struct.FT_BBox_* nonnull %3) #15
  %181 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 0, i32 0, i32 1, i32 14
  %182 = load i16, i16* %181, align 2
  %183 = and i16 %182, 16
  %184 = icmp eq i16 %183, 0
  br i1 %184, label %185, label %194

185:                                              ; preds = %148
  %186 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 0
  %187 = load i64, i64* %186, align 8
  %188 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 1
  %189 = load i64, i64* %188, align 8
  %190 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 2
  %191 = load i64, i64* %190, align 8
  %192 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 3
  %193 = load i64, i64* %192, align 8
  br label %214

194:                                              ; preds = %148
  %195 = load i32, i32* %58, align 4
  %196 = shl i32 %195, 4
  %197 = and i32 %196, 48
  %198 = lshr i32 %195, 14
  %199 = and i32 %198, 48
  %200 = zext i32 %197 to i64
  %201 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 0
  %202 = load i64, i64* %201, align 8
  %203 = add nsw i64 %202, %200
  store i64 %203, i64* %201, align 8
  %204 = zext i32 %199 to i64
  %205 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 1
  %206 = load i64, i64* %205, align 8
  %207 = sub nsw i64 %206, %204
  store i64 %207, i64* %205, align 8
  %208 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 2
  %209 = load i64, i64* %208, align 8
  %210 = add nsw i64 %209, %200
  store i64 %210, i64* %208, align 8
  %211 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 3
  %212 = load i64, i64* %211, align 8
  %213 = sub nsw i64 %212, %204
  store i64 %213, i64* %211, align 8
  br label %214

214:                                              ; preds = %185, %194
  %215 = phi i64 [ %193, %185 ], [ %213, %194 ]
  %216 = phi i64 [ %191, %185 ], [ %210, %194 ]
  %217 = phi i64 [ %189, %185 ], [ %207, %194 ]
  %218 = phi i64 [ %187, %185 ], [ %203, %194 ]
  %219 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 0
  %220 = and i64 %218, -64
  store i64 %220, i64* %219, align 8
  %221 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 1
  %222 = and i64 %217, -64
  store i64 %222, i64* %221, align 8
  %223 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 2
  %224 = add nsw i64 %216, 63
  %225 = and i64 %224, -64
  store i64 %225, i64* %223, align 8
  %226 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 3
  %227 = add nsw i64 %215, 63
  %228 = and i64 %227, -64
  store i64 %228, i64* %226, align 8
  %229 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %230 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %229, i64 0, i32 21
  %231 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %230, align 8
  %232 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %231, i64 0, i32 13
  %233 = bitcast %struct.FT_Outline_* %232 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* nonnull align 8 %171, i64 40, i1 false)
  %234 = load %class.FreeTypeLibrary*, %class.FreeTypeLibrary** @_ZL10gFTLibrary, align 8
  %235 = getelementptr inbounds %class.FreeTypeLibrary, %class.FreeTypeLibrary* %234, i64 0, i32 2
  %236 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %235, align 8
  %237 = call i32 @FT_Outline_Done(%struct.FT_LibraryRec_* %236, %struct.FT_Outline_* nonnull %9) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %171)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %142) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %134) #15
  br label %316

238:                                              ; preds = %130
  call void @_ZN7SkGlyph11zeroMetricsEv(%class.SkGlyph* %1) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %142) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %134) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %81) #15
  br label %622

239:                                              ; preds = %101, %309
  %240 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %241 = load i32, i32* %5, align 4
  %242 = load i32, i32* %62, align 8
  %243 = or i32 %242, 4194304
  %244 = call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %240, i32 %241, i32 %243) #15
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %247, label %246

246:                                              ; preds = %239
  call void @_ZN7SkGlyph11zeroMetricsEv(%class.SkGlyph* %1) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %81) #15
  br label %622

247:                                              ; preds = %239
  %248 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %249 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %248, i64 0, i32 21
  %250 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %249, align 8
  %251 = load i32, i32* %5, align 4
  %252 = trunc i32 %251 to i16
  call void @_ZN24SkScalerContext_FreeType16emboldenIfNeededEP11FT_FaceRec_P16FT_GlyphSlotRec_t(%class.SkScalerContext_FreeType* %0, %struct.FT_FaceRec_* %248, %struct.FT_GlyphSlotRec_* %250, i16 zeroext %252)
  %253 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %254 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %253, i64 0, i32 21
  %255 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %254, align 8
  %256 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %255, i64 0, i32 13, i32 0
  %257 = load i16, i16* %256, align 8
  %258 = icmp sgt i16 %257, 0
  br i1 %258, label %259, label %309

259:                                              ; preds = %247
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %102) #15
  %260 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %255, i64 0, i32 13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 32, i1 false)
  call void @FT_Outline_Get_CBox(%struct.FT_Outline_* %260, %struct.FT_BBox_* nonnull %11) #15
  %261 = load i16, i16* %107, align 2
  %262 = and i16 %261, 16
  %263 = icmp eq i16 %262, 0
  br i1 %263, label %264, label %269

264:                                              ; preds = %259
  %265 = load i64, i64* %103, align 8
  %266 = load i64, i64* %104, align 8
  %267 = load i64, i64* %105, align 8
  %268 = load i64, i64* %106, align 8
  br label %285

269:                                              ; preds = %259
  %270 = load i32, i32* %58, align 4
  %271 = shl i32 %270, 4
  %272 = and i32 %271, 48
  %273 = lshr i32 %270, 14
  %274 = and i32 %273, 48
  %275 = zext i32 %272 to i64
  %276 = load i64, i64* %103, align 8
  %277 = add nsw i64 %276, %275
  store i64 %277, i64* %103, align 8
  %278 = zext i32 %274 to i64
  %279 = load i64, i64* %104, align 8
  %280 = sub nsw i64 %279, %278
  store i64 %280, i64* %104, align 8
  %281 = load i64, i64* %105, align 8
  %282 = add nsw i64 %281, %275
  store i64 %282, i64* %105, align 8
  %283 = load i64, i64* %106, align 8
  %284 = sub nsw i64 %283, %278
  store i64 %284, i64* %106, align 8
  br label %285

285:                                              ; preds = %264, %269
  %286 = phi i64 [ %268, %264 ], [ %284, %269 ]
  %287 = phi i64 [ %267, %264 ], [ %282, %269 ]
  %288 = phi i64 [ %266, %264 ], [ %280, %269 ]
  %289 = phi i64 [ %265, %264 ], [ %277, %269 ]
  %290 = and i64 %289, -64
  %291 = and i64 %288, -64
  %292 = add nsw i64 %287, 63
  %293 = and i64 %292, -64
  %294 = add nsw i64 %286, 63
  %295 = and i64 %294, -64
  %296 = load i64, i64* %108, align 8
  %297 = icmp slt i64 %296, %290
  %298 = select i1 %297, i64 %296, i64 %290
  store i64 %298, i64* %108, align 8
  %299 = load i64, i64* %109, align 8
  %300 = icmp slt i64 %299, %291
  %301 = select i1 %300, i64 %299, i64 %291
  store i64 %301, i64* %109, align 8
  %302 = load i64, i64* %110, align 8
  %303 = icmp slt i64 %293, %302
  %304 = select i1 %303, i64 %302, i64 %293
  store i64 %304, i64* %110, align 8
  %305 = load i64, i64* %111, align 8
  %306 = icmp slt i64 %295, %305
  %307 = select i1 %306, i64 %305, i64 %295
  store i64 %307, i64* %111, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %102) #15
  %308 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  br label %309

309:                                              ; preds = %285, %247
  %310 = phi %struct.FT_FaceRec_* [ %308, %285 ], [ %253, %247 ]
  %311 = load i32, i32* %58, align 4
  %312 = lshr i32 %311, 2
  %313 = and i32 %312, 65535
  %314 = call zeroext i8 @FT_Get_Color_Glyph_Layer(%struct.FT_FaceRec_* %310, i32 %313, i32* nonnull %5, i32* nonnull %6, %struct.FT_LayerIterator_* nonnull %4) #15
  %315 = icmp eq i8 %314, 0
  br i1 %315, label %316, label %239

316:                                              ; preds = %309, %214
  store i8 3, i8* %35, align 8
  %317 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 0
  %318 = load i64, i64* %317, align 8
  %319 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 2
  %320 = load i64, i64* %319, align 8
  %321 = icmp slt i64 %318, %320
  br i1 %321, label %322, label %328

322:                                              ; preds = %316
  %323 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 1
  %324 = load i64, i64* %323, align 8
  %325 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 3
  %326 = load i64, i64* %325, align 8
  %327 = icmp slt i64 %324, %326
  br i1 %327, label %389, label %328

328:                                              ; preds = %322, %316
  %329 = bitcast %struct.FT_BBox_* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %329, i8 0, i64 32, i1 false)
  br label %389

330:                                              ; preds = %95
  %331 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %332 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %331, i64 0, i32 21
  %333 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %332, align 8
  %334 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %333, i64 0, i32 13, i32 0
  %335 = load i16, i16* %334, align 8
  %336 = icmp sgt i16 %335, 0
  br i1 %336, label %337, label %387

337:                                              ; preds = %330
  %338 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %333, i64 0, i32 13
  call void @FT_Outline_Get_CBox(%struct.FT_Outline_* %338, %struct.FT_BBox_* nonnull %3) #15
  %339 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 0, i32 0, i32 1, i32 14
  %340 = load i16, i16* %339, align 2
  %341 = and i16 %340, 16
  %342 = icmp eq i16 %341, 0
  br i1 %342, label %343, label %352

343:                                              ; preds = %337
  %344 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 0
  %345 = load i64, i64* %344, align 8
  %346 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 1
  %347 = load i64, i64* %346, align 8
  %348 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 2
  %349 = load i64, i64* %348, align 8
  %350 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 3
  %351 = load i64, i64* %350, align 8
  br label %372

352:                                              ; preds = %337
  %353 = load i32, i32* %58, align 4
  %354 = shl i32 %353, 4
  %355 = and i32 %354, 48
  %356 = lshr i32 %353, 14
  %357 = and i32 %356, 48
  %358 = zext i32 %355 to i64
  %359 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 0
  %360 = load i64, i64* %359, align 8
  %361 = add nsw i64 %360, %358
  store i64 %361, i64* %359, align 8
  %362 = zext i32 %357 to i64
  %363 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 1
  %364 = load i64, i64* %363, align 8
  %365 = sub nsw i64 %364, %362
  store i64 %365, i64* %363, align 8
  %366 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 2
  %367 = load i64, i64* %366, align 8
  %368 = add nsw i64 %367, %358
  store i64 %368, i64* %366, align 8
  %369 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 3
  %370 = load i64, i64* %369, align 8
  %371 = sub nsw i64 %370, %362
  store i64 %371, i64* %369, align 8
  br label %372

372:                                              ; preds = %343, %352
  %373 = phi i64 [ %351, %343 ], [ %371, %352 ]
  %374 = phi i64 [ %349, %343 ], [ %368, %352 ]
  %375 = phi i64 [ %347, %343 ], [ %365, %352 ]
  %376 = phi i64 [ %345, %343 ], [ %361, %352 ]
  %377 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 0
  %378 = and i64 %376, -64
  store i64 %378, i64* %377, align 8
  %379 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 1
  %380 = and i64 %375, -64
  store i64 %380, i64* %379, align 8
  %381 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 2
  %382 = add nsw i64 %374, 63
  %383 = and i64 %382, -64
  store i64 %383, i64* %381, align 8
  %384 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 3
  %385 = add nsw i64 %373, 63
  %386 = and i64 %385, -64
  store i64 %386, i64* %384, align 8
  br label %389

387:                                              ; preds = %330
  %388 = bitcast %struct.FT_BBox_* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %388, i8 0, i64 32, i1 false)
  br label %389

389:                                              ; preds = %372, %387, %322, %328
  %390 = phi i64 [ %386, %372 ], [ 0, %387 ], [ %326, %322 ], [ 0, %328 ]
  %391 = phi i64 [ %383, %372 ], [ 0, %387 ], [ %320, %322 ], [ 0, %328 ]
  %392 = phi i64 [ %380, %372 ], [ 0, %387 ], [ %324, %322 ], [ 0, %328 ]
  %393 = phi i64 [ %378, %372 ], [ 0, %387 ], [ %318, %322 ], [ 0, %328 ]
  %394 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 0
  %395 = ashr i64 %393, 6
  store i64 %395, i64* %394, align 8
  %396 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 1
  %397 = ashr i64 %392, 6
  store i64 %397, i64* %396, align 8
  %398 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 2
  %399 = add nsw i64 %391, 63
  %400 = ashr i64 %399, 6
  store i64 %400, i64* %398, align 8
  %401 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 3
  %402 = add nsw i64 %390, 63
  %403 = ashr i64 %402, 6
  store i64 %403, i64* %401, align 8
  %404 = sub nsw i64 %400, %395
  %405 = sub nsw i64 %403, %397
  %406 = sub nsw i64 0, %403
  %407 = sub nsw i64 32768, %403
  %408 = add nsw i64 %395, 32768
  %409 = or i64 %404, %408
  %410 = or i64 %409, %405
  %411 = or i64 %410, %407
  %412 = icmp ult i64 %411, 65536
  %413 = select i1 %412, i64 %404, i64 0
  %414 = select i1 %412, i64 %405, i64 0
  %415 = select i1 %412, i64 %406, i64 0
  %416 = select i1 %412, i64 %395, i64 0
  %417 = trunc i64 %413 to i16
  %418 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 0
  store i16 %417, i16* %418, align 8
  %419 = trunc i64 %414 to i16
  %420 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 1
  store i16 %419, i16* %420, align 2
  %421 = trunc i64 %415 to i16
  %422 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 2
  store i16 %421, i16* %422, align 4
  %423 = trunc i64 %416 to i16
  %424 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 3
  store i16 %423, i16* %424, align 2
  %425 = load i8, i8* %35, align 8
  %426 = icmp eq i8 %425, 4
  br i1 %426, label %427, label %447

427:                                              ; preds = %389
  %428 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 11
  %429 = load i8, i8* %428, align 1, !range !11
  %430 = icmp eq i8 %429, 0
  %431 = load %class.FreeTypeLibrary*, %class.FreeTypeLibrary** @_ZL10gFTLibrary, align 8
  %432 = getelementptr inbounds %class.FreeTypeLibrary, %class.FreeTypeLibrary* %431, i64 0, i32 5
  %433 = load i32, i32* %432, align 4
  %434 = trunc i32 %433 to i16
  br i1 %430, label %441, label %435

435:                                              ; preds = %427
  %436 = add i16 %434, %419
  store i16 %436, i16* %420, align 2
  %437 = load i32, i32* %432, align 4
  %438 = lshr i32 %437, 1
  %439 = trunc i32 %438 to i16
  %440 = sub i16 %421, %439
  store i16 %440, i16* %422, align 4
  br label %447

441:                                              ; preds = %427
  %442 = add i16 %434, %417
  store i16 %442, i16* %418, align 8
  %443 = load i32, i32* %432, align 4
  %444 = lshr i32 %443, 1
  %445 = trunc i32 %444 to i16
  %446 = sub i16 %423, %445
  store i16 %446, i16* %424, align 2
  br label %447

447:                                              ; preds = %441, %435, %389
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %85) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %82) #15
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %81) #15
  br label %588

448:                                              ; preds = %68
  %449 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %77, i64 0, i32 10, i32 5
  %450 = load i8, i8* %449, align 2
  %451 = icmp eq i8 %450, 7
  br i1 %451, label %452, label %456

452:                                              ; preds = %448
  store i8 3, i8* %35, align 8
  %453 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %454 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %453, i64 0, i32 21
  %455 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %454, align 8
  br label %456

456:                                              ; preds = %452, %448
  %457 = phi %struct.FT_GlyphSlotRec_* [ %455, %452 ], [ %77, %448 ]
  %458 = bitcast { <2 x float>, <2 x float> }* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %458) #15
  %459 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0, i64 0
  %460 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %13, i64 0, i32 1
  %461 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1, i64 0
  %462 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %13, i64 0, i32 3
  %463 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %457, i64 0, i32 11
  %464 = load i32, i32* %463, align 8
  %465 = sitofp i32 %464 to float
  %466 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %457, i64 0, i32 12
  %467 = load i32, i32* %466, align 4
  %468 = sitofp i32 %467 to float
  %469 = fsub float -0.000000e+00, %468
  %470 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %457, i64 0, i32 10, i32 1
  %471 = load i32, i32* %470, align 4
  %472 = uitofp i32 %471 to float
  %473 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %457, i64 0, i32 10, i32 0
  %474 = load i32, i32* %473, align 8
  %475 = uitofp i32 %474 to float
  %476 = insertelement <2 x float> undef, float %465, i32 0
  %477 = insertelement <2 x float> %476, float %469, i32 1
  %478 = fadd float %465, %472
  %479 = insertelement <2 x float> undef, float %478, i32 0
  %480 = fsub float %475, %468
  %481 = insertelement <2 x float> %479, float %480, i32 1
  %482 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 0
  store <2 x float> %477, <2 x float>* %482, align 8
  %483 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %12, i64 0, i32 1
  store <2 x float> %481, <2 x float>* %483, align 8
  %484 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 5
  %485 = call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %484, %struct.SkRect* nonnull %13, %struct.SkRect* nonnull dereferenceable(16) %13, i32 1) #15
  %486 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %487 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %486, i64 0, i32 21
  %488 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %487, align 8
  %489 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %488, i64 0, i32 9
  %490 = load i32, i32* %489, align 8
  %491 = icmp eq i32 %490, 1651078259
  br i1 %491, label %492, label %504

492:                                              ; preds = %456
  %493 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 0, i32 0, i32 1, i32 14
  %494 = load i16, i16* %493, align 2
  %495 = and i16 %494, 16
  %496 = icmp eq i16 %495, 0
  br i1 %496, label %504, label %497

497:                                              ; preds = %492
  %498 = load i32, i32* %58, align 4
  %499 = and i32 %498, 3
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %504

501:                                              ; preds = %497
  %502 = and i32 %498, 786432
  %503 = icmp ne i32 %502, 0
  br label %504

504:                                              ; preds = %501, %497, %492, %456
  %505 = phi i1 [ false, %492 ], [ false, %456 ], [ true, %497 ], [ %503, %501 ]
  %506 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %486, i64 0, i32 2
  %507 = load i64, i64* %506, align 8
  %508 = and i64 %507, 1
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %522, label %510

510:                                              ; preds = %504
  %511 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 5, i32 1
  %512 = load i32, i32* %511, align 4
  %513 = trunc i32 %512 to i8
  %514 = icmp slt i8 %513, 0
  br i1 %514, label %515, label %518

515:                                              ; preds = %510
  %516 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %484) #15
  %517 = zext i8 %516 to i32
  store i32 %517, i32* %511, align 4
  br label %518

518:                                              ; preds = %515, %510
  %519 = phi i32 [ %517, %515 ], [ %512, %510 ]
  %520 = and i32 %519, 15
  %521 = icmp ne i32 %520, 0
  br label %522

522:                                              ; preds = %504, %518
  %523 = phi i1 [ true, %504 ], [ %521, %518 ]
  %524 = and i1 %505, %523
  br i1 %524, label %530, label %525

525:                                              ; preds = %522
  %526 = load float, float* %459, align 8
  %527 = load float, float* %460, align 4
  %528 = load float, float* %461, align 8
  %529 = load float, float* %462, align 4
  br label %548

530:                                              ; preds = %522
  %531 = load i32, i32* %58, align 4
  %532 = shl i32 %531, 14
  %533 = and i32 %532, 49152
  %534 = sitofp i32 %533 to float
  %535 = fmul float %534, 0x3EF0000000000000
  %536 = lshr i32 %531, 4
  %537 = and i32 %536, 49152
  %538 = sitofp i32 %537 to float
  %539 = fmul float %538, 0x3EF0000000000000
  %540 = load float, float* %459, align 8
  %541 = fadd float %540, %535
  store float %541, float* %459, align 8
  %542 = load float, float* %460, align 4
  %543 = fadd float %542, %539
  store float %543, float* %460, align 4
  %544 = load float, float* %461, align 8
  %545 = fadd float %535, %544
  store float %545, float* %461, align 8
  %546 = load float, float* %462, align 4
  %547 = fadd float %539, %546
  store float %547, float* %462, align 4
  br label %548

548:                                              ; preds = %525, %530
  %549 = phi float [ %529, %525 ], [ %547, %530 ]
  %550 = phi float [ %528, %525 ], [ %545, %530 ]
  %551 = phi float [ %527, %525 ], [ %543, %530 ]
  %552 = phi float [ %526, %525 ], [ %541, %530 ]
  %553 = call float @llvm.floor.f32(float %552) #15
  %554 = fcmp olt float %553, 0x41DFFFFFE0000000
  %555 = select i1 %554, float %553, float 0x41DFFFFFE0000000
  %556 = fcmp ogt float %555, 0xC1DFFFFFE0000000
  %557 = select i1 %556, float %555, float 0xC1DFFFFFE0000000
  %558 = fptosi float %557 to i32
  %559 = call float @llvm.floor.f32(float %551) #15
  %560 = fcmp olt float %559, 0x41DFFFFFE0000000
  %561 = select i1 %560, float %559, float 0x41DFFFFFE0000000
  %562 = fcmp ogt float %561, 0xC1DFFFFFE0000000
  %563 = select i1 %562, float %561, float 0xC1DFFFFFE0000000
  %564 = fptosi float %563 to i32
  %565 = call float @llvm.ceil.f32(float %550) #15
  %566 = fcmp olt float %565, 0x41DFFFFFE0000000
  %567 = select i1 %566, float %565, float 0x41DFFFFFE0000000
  %568 = fcmp ogt float %567, 0xC1DFFFFFE0000000
  %569 = select i1 %568, float %567, float 0xC1DFFFFFE0000000
  %570 = fptosi float %569 to i32
  %571 = call float @llvm.ceil.f32(float %549) #15
  %572 = fcmp olt float %571, 0x41DFFFFFE0000000
  %573 = select i1 %572, float %571, float 0x41DFFFFFE0000000
  %574 = fcmp ogt float %573, 0xC1DFFFFFE0000000
  %575 = select i1 %574, float %573, float 0xC1DFFFFFE0000000
  %576 = fptosi float %575 to i32
  %577 = sub i32 %570, %558
  %578 = trunc i32 %577 to i16
  %579 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 0
  store i16 %578, i16* %579, align 8
  %580 = sub i32 %576, %564
  %581 = trunc i32 %580 to i16
  %582 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 1
  store i16 %581, i16* %582, align 2
  %583 = trunc i32 %564 to i16
  %584 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 2
  store i16 %583, i16* %584, align 4
  %585 = trunc i32 %558 to i16
  %586 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 3
  store i16 %585, i16* %586, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %458) #15
  br label %588

587:                                              ; preds = %68
  tail call void @_ZN7SkGlyph11zeroMetricsEv(%class.SkGlyph* %1) #15
  br label %622

588:                                              ; preds = %447, %548
  %589 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 10
  %590 = load i8, i8* %589, align 4, !range !11
  %591 = icmp eq i8 %590, 0
  %592 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %593 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %592, i64 0, i32 21
  %594 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %593, align 8
  br i1 %591, label %608, label %595

595:                                              ; preds = %588
  %596 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %594, i64 0, i32 6
  %597 = load i64, i64* %596, align 8
  %598 = sitofp i64 %597 to float
  %599 = fmul float %598, 0x3EF0000000000000
  %600 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 5, i32 0, i64 0
  %601 = load float, float* %600, align 4
  %602 = fmul float %601, %599
  %603 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 6
  store float %602, float* %603, align 8
  %604 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 5, i32 0, i64 3
  %605 = load float, float* %604, align 4
  %606 = fmul float %599, %605
  %607 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 7
  store float %606, float* %607, align 4
  br label %622

608:                                              ; preds = %588
  %609 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %594, i64 0, i32 8, i32 0
  %610 = load i64, i64* %609, align 8
  %611 = sitofp i64 %610 to float
  %612 = fmul float %611, 1.562500e-02
  %613 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 6
  store float %612, float* %613, align 8
  %614 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %54, align 8
  %615 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %614, i64 0, i32 21
  %616 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %615, align 8
  %617 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %616, i64 0, i32 8, i32 1
  %618 = load i64, i64* %617, align 8
  %619 = sitofp i64 %618 to float
  %620 = fmul float %619, -1.562500e-02
  %621 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 7
  store float %620, float* %621, align 4
  br label %622

622:                                              ; preds = %238, %246, %129, %67, %587, %595, %608, %52
  %623 = atomicrmw add i32* %27, i32 1 release
  %624 = icmp slt i32 %623, 0
  br i1 %624, label %625, label %627

625:                                              ; preds = %622
  %626 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %26, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %626, i32 1) #15
  br label %627

627:                                              ; preds = %622, %625
  ret void
}

declare zeroext i8 @FT_Get_Color_Glyph_Paint(%struct.FT_FaceRec_*, i32, i32, %struct.FT_Opaque_Paint_*) local_unnamed_addr #5

declare i32 @FT_Outline_New(%struct.FT_LibraryRec_*, i32, i32, %struct.FT_Outline_*) local_unnamed_addr #5

declare void @FT_Outline_Transform(%struct.FT_Outline_*, %struct.FT_Matrix_*) local_unnamed_addr #5

declare i32 @FT_Outline_Done(%struct.FT_LibraryRec_*, %struct.FT_Outline_*) local_unnamed_addr #5

declare zeroext i8 @FT_Get_Color_Glyph_Layer(%struct.FT_FaceRec_*, i32, i32*, i32*, %struct.FT_LayerIterator_*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24SkScalerContext_FreeType13generateImageERK7SkGlyph(%class.SkScalerContext_FreeType*, %class.SkGlyph* dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkMatrix, align 16
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %15, !prof !2

6:                                                ; preds = %2
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %6
  %10 = tail call i8* @_Znwm(i64 16) #16
  %11 = bitcast i8* %10 to i32*
  store i32 1, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %10, i64 4
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  %14 = bitcast i8* %13 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %14, align 8
  store i8* %10, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %15

15:                                               ; preds = %2, %6, %9
  %16 = load %class.SkMutex*, %class.SkMutex** @_ZZL9f_t_mutexvE5mutex, align 8
  %17 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acquire
  %19 = icmp slt i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %16, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %21) #15
  br label %22

22:                                               ; preds = %15, %20
  %23 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %34, !prof !2

25:                                               ; preds = %22
  %26 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %25
  %29 = tail call i8* @_Znwm(i64 16) #16
  %30 = bitcast i8* %29 to i32*
  store i32 1, i32* %30, align 4
  %31 = getelementptr inbounds i8, i8* %29, i64 4
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds i8, i8* %29, i64 8
  %33 = bitcast i8* %32 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %33, align 8
  store i8* %29, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %34

34:                                               ; preds = %28, %25, %22
  %35 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 3
  %36 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %35, align 8
  %37 = tail call i32 @FT_Activate_Size(%struct.FT_SizeRec_* %36) #15
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 4
  %41 = load i8*, i8** %40, align 8
  %42 = tail call i64 @_ZNK7SkGlyph9imageSizeEv(%class.SkGlyph* %1) #15
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %133, label %44

44:                                               ; preds = %39
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %41, i8 0, i64 %42, i1 false) #15
  br label %133

45:                                               ; preds = %34
  %46 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 2
  %47 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %46, align 8
  %48 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 7
  tail call void @FT_Set_Transform(%struct.FT_FaceRec_* %47, %struct.FT_Matrix_* %48, %struct.FT_Vector_* null) #15
  %49 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %46, align 8
  %50 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 10, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = lshr i32 %51, 2
  %53 = and i32 %52, 65535
  %54 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 9
  %55 = load i32, i32* %54, align 8
  %56 = tail call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %49, i32 %53, i32 %55) #15
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %64, label %58

58:                                               ; preds = %45
  %59 = getelementptr inbounds %class.SkGlyph, %class.SkGlyph* %1, i64 0, i32 4
  %60 = load i8*, i8** %59, align 8
  %61 = tail call i64 @_ZNK7SkGlyph9imageSizeEv(%class.SkGlyph* %1) #15
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %133, label %63

63:                                               ; preds = %58
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %60, i8 0, i64 %61, i1 false) #15
  br label %133

64:                                               ; preds = %45
  %65 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %46, align 8
  %66 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %65, i64 0, i32 21
  %67 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %66, align 8
  %68 = load i32, i32* %50, align 4
  %69 = lshr i32 %68, 2
  %70 = trunc i32 %69 to i16
  tail call void @_ZN24SkScalerContext_FreeType16emboldenIfNeededEP11FT_FaceRec_P16FT_GlyphSlotRec_t(%class.SkScalerContext_FreeType* %0, %struct.FT_FaceRec_* %65, %struct.FT_GlyphSlotRec_* %67, i16 zeroext %70)
  %71 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 5
  %72 = bitcast %class.SkMatrix* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %72) #15
  %73 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 1
  %74 = bitcast %class.SkMatrix* %3 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %74, align 16
  %75 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 4
  %76 = bitcast float* %75 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %76, align 16
  %77 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %3, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %77, align 16
  store i32 16, i32* %73, align 4
  %78 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %46, align 8
  %79 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %78, i64 0, i32 21
  %80 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %79, align 8
  %81 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %80, i64 0, i32 9
  %82 = load i32, i32* %81, align 8
  %83 = icmp eq i32 %82, 1651078259
  br i1 %83, label %84, label %96

84:                                               ; preds = %64
  %85 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 0, i32 0, i32 1, i32 14
  %86 = load i16, i16* %85, align 2
  %87 = and i16 %86, 16
  %88 = icmp eq i16 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %84
  %90 = load i32, i32* %50, align 4
  %91 = and i32 %90, 3
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %89
  %94 = and i32 %90, 786432
  %95 = icmp ne i32 %94, 0
  br label %96

96:                                               ; preds = %93, %89, %84, %64
  %97 = phi i1 [ false, %84 ], [ false, %64 ], [ true, %89 ], [ %95, %93 ]
  %98 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %78, i64 0, i32 2
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %99, 1
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %114, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 5, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = trunc i32 %104 to i8
  %106 = icmp slt i8 %105, 0
  br i1 %106, label %107, label %110

107:                                              ; preds = %102
  %108 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %71) #15
  %109 = zext i8 %108 to i32
  store i32 %109, i32* %103, align 4
  br label %110

110:                                              ; preds = %107, %102
  %111 = phi i32 [ %109, %107 ], [ %104, %102 ]
  %112 = and i32 %111, 15
  %113 = icmp ne i32 %112, 0
  br label %114

114:                                              ; preds = %96, %110
  %115 = phi i1 [ true, %96 ], [ %113, %110 ]
  %116 = and i1 %97, %115
  br i1 %116, label %117, label %129

117:                                              ; preds = %114
  %118 = bitcast %class.SkMatrix* %71 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %72, i8* align 4 %118, i64 40, i1 false)
  %119 = load i32, i32* %50, align 4
  %120 = shl i32 %119, 14
  %121 = and i32 %120, 49152
  %122 = sitofp i32 %121 to float
  %123 = fmul float %122, 0x3EF0000000000000
  %124 = lshr i32 %119, 4
  %125 = and i32 %124, 49152
  %126 = sitofp i32 %125 to float
  %127 = fmul float %126, 0x3EF0000000000000
  %128 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %3, float %123, float %127) #15
  br label %129

129:                                              ; preds = %117, %114
  %130 = phi %class.SkMatrix* [ %3, %117 ], [ %71, %114 ]
  %131 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 0
  %132 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %46, align 8
  call void @_ZN29SkScalerContext_FreeType_Base18generateGlyphImageEP11FT_FaceRec_RK7SkGlyphRK8SkMatrix(%class.SkScalerContext_FreeType_Base* %131, %struct.FT_FaceRec_* %132, %class.SkGlyph* dereferenceable(40) %1, %class.SkMatrix* dereferenceable(40) %130) #15
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %72) #15
  br label %133

133:                                              ; preds = %129, %58, %63, %44, %39
  %134 = atomicrmw add i32* %17, i32 1 release
  %135 = icmp slt i32 %134, 0
  br i1 %135, label %136, label %138

136:                                              ; preds = %133
  %137 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %16, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %137, i32 1) #15
  br label %138

138:                                              ; preds = %133, %136
  ret void
}

declare i64 @_ZNK7SkGlyph9imageSizeEv(%class.SkGlyph*) local_unnamed_addr #5

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #5

declare void @_ZN29SkScalerContext_FreeType_Base18generateGlyphImageEP11FT_FaceRec_RK7SkGlyphRK8SkMatrix(%class.SkScalerContext_FreeType_Base*, %struct.FT_FaceRec_*, %class.SkGlyph* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN24SkScalerContext_FreeType12generatePathEtP6SkPath(%class.SkScalerContext_FreeType*, i16 zeroext, %class.SkPath*) unnamed_addr #0 align 2 {
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %15, !prof !2

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %15, label %9

9:                                                ; preds = %6
  %10 = tail call i8* @_Znwm(i64 16) #16
  %11 = bitcast i8* %10 to i32*
  store i32 1, i32* %11, align 4
  %12 = getelementptr inbounds i8, i8* %10, i64 4
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds i8, i8* %10, i64 8
  %14 = bitcast i8* %13 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %14, align 8
  store i8* %10, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %15

15:                                               ; preds = %3, %6, %9
  %16 = load %class.SkMutex*, %class.SkMutex** @_ZZL9f_t_mutexvE5mutex, align 8
  %17 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acquire
  %19 = icmp slt i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %16, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %21) #15
  br label %22

22:                                               ; preds = %15, %20
  %23 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 2
  %24 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %23, align 8
  %25 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %24, i64 0, i32 2
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, 1
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %68, label %29

29:                                               ; preds = %22
  %30 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %41, !prof !2

32:                                               ; preds = %29
  %33 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %32
  %36 = tail call i8* @_Znwm(i64 16) #16
  %37 = bitcast i8* %36 to i32*
  store i32 1, i32* %37, align 4
  %38 = getelementptr inbounds i8, i8* %36, i64 4
  store i8 0, i8* %38, align 1
  %39 = getelementptr inbounds i8, i8* %36, i64 8
  %40 = bitcast i8* %39 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %40, align 8
  store i8* %36, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %41

41:                                               ; preds = %35, %32, %29
  %42 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 3
  %43 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %42, align 8
  %44 = tail call i32 @FT_Activate_Size(%struct.FT_SizeRec_* %43) #15
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %68

46:                                               ; preds = %41
  %47 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %23, align 8
  %48 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 7
  tail call void @FT_Set_Transform(%struct.FT_FaceRec_* %47, %struct.FT_Matrix_* %48, %struct.FT_Vector_* null) #15
  %49 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 9
  %50 = load i32, i32* %49, align 8
  %51 = and i32 %50, -13
  %52 = or i32 %51, 8
  %53 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %23, align 8
  %54 = zext i16 %1 to i32
  %55 = tail call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %53, i32 %54, i32 %52) #15
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %68

57:                                               ; preds = %46
  %58 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %23, align 8
  %59 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %58, i64 0, i32 21
  %60 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %59, align 8
  %61 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %60, i64 0, i32 9
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 1869968492
  br i1 %63, label %64, label %68

64:                                               ; preds = %57
  tail call void @_ZN24SkScalerContext_FreeType16emboldenIfNeededEP11FT_FaceRec_P16FT_GlyphSlotRec_t(%class.SkScalerContext_FreeType* %0, %struct.FT_FaceRec_* %58, %struct.FT_GlyphSlotRec_* %60, i16 zeroext %1)
  %65 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 0
  %66 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %23, align 8
  %67 = tail call zeroext i1 @_ZN29SkScalerContext_FreeType_Base17generateGlyphPathEP11FT_FaceRec_P6SkPath(%class.SkScalerContext_FreeType_Base* %65, %struct.FT_FaceRec_* %66, %class.SkPath* %2) #15
  br i1 %67, label %70, label %68

68:                                               ; preds = %64, %46, %57, %22, %41
  %69 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath* %2) #15
  br label %70

70:                                               ; preds = %68, %64
  %71 = phi i1 [ true, %64 ], [ false, %68 ]
  %72 = atomicrmw add i32* %17, i32 1 release
  %73 = icmp slt i32 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %70
  %75 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %16, i64 0, i32 0
  tail call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %75, i32 1) #15
  br label %76

76:                                               ; preds = %70, %74
  ret i1 %71
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath*) local_unnamed_addr #5

declare zeroext i1 @_ZN29SkScalerContext_FreeType_Base17generateGlyphPathEP11FT_FaceRec_P6SkPath(%class.SkScalerContext_FreeType_Base*, %struct.FT_FaceRec_*, %class.SkPath*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN24SkScalerContext_FreeType19generateFontMetricsEP13SkFontMetrics(%class.SkScalerContext_FreeType*, %struct.SkFontMetrics*) unnamed_addr #0 align 2 {
  %3 = alloca %struct.FT_BBox_, align 8
  %4 = alloca %struct.FT_BBox_, align 8
  %5 = icmp eq %struct.SkFontMetrics* %1, null
  br i1 %5, label %405, label %6

6:                                                ; preds = %2
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %18, !prof !2

9:                                                ; preds = %6
  %10 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %9
  %13 = tail call i8* @_Znwm(i64 16) #16
  %14 = bitcast i8* %13 to i32*
  store i32 1, i32* %14, align 4
  %15 = getelementptr inbounds i8, i8* %13, i64 4
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds i8, i8* %13, i64 8
  %17 = bitcast i8* %16 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %17, align 8
  store i8* %13, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %18

18:                                               ; preds = %6, %9, %12
  %19 = load %class.SkMutex*, %class.SkMutex** @_ZZL9f_t_mutexvE5mutex, align 8
  %20 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acquire
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  %24 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %19, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %24) #15
  br label %25

25:                                               ; preds = %18, %23
  %26 = load atomic i8, i8* bitcast (i64* @_ZGVZL9f_t_mutexvE5mutex to i8*) acquire, align 8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %37, !prof !2

28:                                               ; preds = %25
  %29 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %28
  %32 = tail call i8* @_Znwm(i64 16) #16
  %33 = bitcast i8* %32 to i32*
  store i32 1, i32* %33, align 4
  %34 = getelementptr inbounds i8, i8* %32, i64 4
  store i8 0, i8* %34, align 1
  %35 = getelementptr inbounds i8, i8* %32, i64 8
  %36 = bitcast i8* %35 to %"struct.SkSemaphore::OSSemaphore"**
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %36, align 8
  store i8* %32, i8** bitcast (%class.SkMutex** @_ZZL9f_t_mutexvE5mutex to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZL9f_t_mutexvE5mutex) #15
  br label %37

37:                                               ; preds = %31, %28, %25
  %38 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 3
  %39 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %38, align 8
  %40 = tail call i32 @FT_Activate_Size(%struct.FT_SizeRec_* %39) #15
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %37
  %43 = bitcast %struct.SkFontMetrics* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %43, i8 0, i64 64, i1 false) #15
  br label %400

44:                                               ; preds = %37
  %45 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 2
  %46 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %45, align 8
  %47 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 7
  tail call void @FT_Set_Transform(%struct.FT_FaceRec_* %46, %struct.FT_Matrix_* %47, %struct.FT_Vector_* null) #15
  %48 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %45, align 8
  %49 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 0
  store i32 0, i32* %49, align 4
  %50 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %48, i64 0, i32 13
  %51 = load i16, i16* %50, align 8
  %52 = uitofp i16 %51 to float
  %53 = icmp eq i16 %51, 0
  br i1 %53, label %54, label %62

54:                                               ; preds = %44
  %55 = tail call i8* @FT_Get_Sfnt_Table(%struct.FT_FaceRec_* %48, i32 0) #15
  %56 = icmp eq i8* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds i8, i8* %55, i64 34
  %59 = bitcast i8* %58 to i16*
  %60 = load i16, i16* %59, align 2
  %61 = uitofp i16 %60 to float
  br label %62

62:                                               ; preds = %44, %54, %57
  %63 = phi float [ %52, %44 ], [ %61, %57 ], [ %52, %54 ]
  %64 = fptosi float %63 to i32
  %65 = sitofp i32 %64 to float
  %66 = tail call i8* @FT_Get_Sfnt_Table(%struct.FT_FaceRec_* %48, i32 2) #15
  %67 = icmp ne i8* %66, null
  br i1 %67, label %68, label %105

68:                                               ; preds = %62
  %69 = getelementptr inbounds i8, i8* %66, i64 120
  %70 = bitcast i8* %69 to i16*
  %71 = load i16, i16* %70, align 8
  %72 = sitofp i16 %71 to float
  %73 = fdiv float %72, %65
  %74 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 8, i32 1
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %73
  %77 = getelementptr inbounds i8, i8* %66, i64 2
  %78 = bitcast i8* %77 to i16*
  %79 = load i16, i16* %78, align 2
  %80 = sitofp i16 %79 to float
  %81 = fdiv float %80, %65
  %82 = getelementptr inbounds i8, i8* %66, i64 26
  %83 = bitcast i8* %82 to i16*
  %84 = load i16, i16* %83, align 2
  %85 = sitofp i16 %84 to float
  %86 = fdiv float %85, %65
  %87 = getelementptr inbounds i8, i8* %66, i64 28
  %88 = bitcast i8* %87 to i16*
  %89 = load i16, i16* %88, align 4
  %90 = sitofp i16 %89 to float
  %91 = fsub float -0.000000e+00, %90
  %92 = fdiv float %91, %65
  %93 = load i32, i32* %49, align 4
  %94 = or i32 %93, 12
  store i32 %94, i32* %49, align 4
  %95 = bitcast i8* %66 to i16*
  %96 = load i16, i16* %95, align 8
  switch i16 %96, label %97 [
    i16 -1, label %105
    i16 1, label %105
    i16 0, label %105
  ]

97:                                               ; preds = %68
  %98 = getelementptr inbounds i8, i8* %66, i64 122
  %99 = bitcast i8* %98 to i16*
  %100 = load i16, i16* %99, align 2
  %101 = sitofp i16 %100 to float
  %102 = fdiv float %101, %65
  %103 = load float, float* %74, align 4
  %104 = fmul float %103, %102
  br label %105

105:                                              ; preds = %68, %68, %68, %97, %62
  %106 = phi float [ %76, %97 ], [ %76, %68 ], [ 0.000000e+00, %62 ], [ %76, %68 ], [ %76, %68 ]
  %107 = phi float [ %81, %97 ], [ %81, %68 ], [ 0.000000e+00, %62 ], [ %81, %68 ], [ %81, %68 ]
  %108 = phi float [ %104, %97 ], [ 0.000000e+00, %68 ], [ 0.000000e+00, %62 ], [ 0.000000e+00, %68 ], [ 0.000000e+00, %68 ]
  %109 = phi float [ %86, %97 ], [ %86, %68 ], [ 0.000000e+00, %62 ], [ %86, %68 ], [ %86, %68 ]
  %110 = phi float [ %92, %97 ], [ %92, %68 ], [ 0.000000e+00, %62 ], [ %92, %68 ], [ %92, %68 ]
  %111 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %48, i64 0, i32 2
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, 1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %255, label %115

115:                                              ; preds = %105
  br i1 %67, label %116, label %137

116:                                              ; preds = %115
  %117 = bitcast i8* %66 to i16*
  %118 = load i16, i16* %117, align 8
  %119 = icmp eq i16 %118, -1
  br i1 %119, label %137, label %120

120:                                              ; preds = %116
  %121 = getelementptr inbounds i8, i8* %66, i64 84
  %122 = bitcast i8* %121 to i16*
  %123 = load i16, i16* %122, align 4
  %124 = trunc i16 %123 to i8
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %137

126:                                              ; preds = %120
  %127 = getelementptr inbounds i8, i8* %66, i64 90
  %128 = bitcast i8* %127 to i16*
  %129 = load i16, i16* %128, align 2
  %130 = getelementptr inbounds i8, i8* %66, i64 92
  %131 = bitcast i8* %130 to i16*
  %132 = load i16, i16* %131, align 4
  %133 = getelementptr inbounds i8, i8* %66, i64 94
  %134 = bitcast i8* %133 to i16*
  %135 = load i16, i16* %134, align 2
  %136 = sitofp i16 %135 to float
  br label %150

137:                                              ; preds = %116, %120, %115
  %138 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %48, i64 0, i32 14
  %139 = load i16, i16* %138, align 2
  %140 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %48, i64 0, i32 15
  %141 = load i16, i16* %140, align 4
  %142 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %48, i64 0, i32 16
  %143 = load i16, i16* %142, align 2
  %144 = sext i16 %143 to i32
  %145 = sext i16 %141 to i32
  %146 = sext i16 %139 to i32
  %147 = sub nsw i32 %145, %146
  %148 = add nsw i32 %147, %144
  %149 = sitofp i32 %148 to float
  br label %150

150:                                              ; preds = %137, %126
  %151 = phi i16 [ %129, %126 ], [ %139, %137 ]
  %152 = phi i16 [ %132, %126 ], [ %141, %137 ]
  %153 = phi float [ %136, %126 ], [ %149, %137 ]
  %154 = sitofp i16 %152 to float
  %155 = sitofp i16 %151 to float
  %156 = fsub float -0.000000e+00, %154
  %157 = fsub float -0.000000e+00, %155
  %158 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %48, i64 0, i32 12, i32 0
  %159 = load i64, i64* %158, align 8
  %160 = sitofp i64 %159 to float
  %161 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %48, i64 0, i32 12, i32 2
  %162 = load i64, i64* %161, align 8
  %163 = sitofp i64 %162 to float
  %164 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %48, i64 0, i32 12, i32 1
  %165 = load i64, i64* %164, align 8
  %166 = sitofp i64 %165 to float
  %167 = fsub float -0.000000e+00, %166
  %168 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %48, i64 0, i32 12, i32 3
  %169 = load i64, i64* %168, align 8
  %170 = sitofp i64 %169 to float
  %171 = fsub float -0.000000e+00, %170
  %172 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %48, i64 0, i32 20
  %173 = load i16, i16* %172, align 2
  %174 = sitofp i16 %173 to float
  %175 = insertelement <8 x float> undef, float %157, i32 0
  %176 = insertelement <8 x float> %175, float %156, i32 1
  %177 = insertelement <8 x float> %176, float %153, i32 2
  %178 = insertelement <8 x float> %177, float %160, i32 3
  %179 = insertelement <8 x float> %178, float %163, i32 4
  %180 = insertelement <8 x float> %179, float %167, i32 5
  %181 = insertelement <8 x float> %180, float %171, i32 6
  %182 = insertelement <8 x float> %181, float %174, i32 7
  %183 = insertelement <8 x float> undef, float %65, i32 0
  %184 = shufflevector <8 x float> %183, <8 x float> undef, <8 x i32> zeroinitializer
  %185 = fdiv <8 x float> %182, %184
  %186 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %48, i64 0, i32 19
  %187 = load i16, i16* %186, align 4
  %188 = sext i16 %187 to i32
  %189 = sdiv i16 %173, 2
  %190 = sext i16 %189 to i32
  %191 = add nsw i32 %188, %190
  %192 = sitofp i32 %191 to float
  %193 = fsub float -0.000000e+00, %192
  %194 = fdiv float %193, %65
  %195 = load i32, i32* %49, align 4
  %196 = or i32 %195, 3
  store i32 %196, i32* %49, align 4
  %197 = fcmp une float %106, 0.000000e+00
  br i1 %197, label %225, label %198

198:                                              ; preds = %150
  %199 = bitcast %struct.FT_BBox_* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %199) #15
  %200 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %3, i64 0, i32 3
  %201 = bitcast %struct.FT_BBox_* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %201, i8 -86, i64 32, i1 false)
  %202 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %45, align 8
  %203 = tail call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %202, i64 120) #15
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %223, label %205

205:                                              ; preds = %198
  %206 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %45, align 8
  %207 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 9
  %208 = load i32, i32* %207, align 8
  %209 = tail call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %206, i32 %203, i32 %208) #15
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %223

211:                                              ; preds = %205
  %212 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %45, align 8
  %213 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %212, i64 0, i32 21
  %214 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %213, align 8
  %215 = trunc i32 %203 to i16
  tail call void @_ZN24SkScalerContext_FreeType16emboldenIfNeededEP11FT_FaceRec_P16FT_GlyphSlotRec_t(%class.SkScalerContext_FreeType* %0, %struct.FT_FaceRec_* %212, %struct.FT_GlyphSlotRec_* %214, i16 zeroext %215) #15
  %216 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %45, align 8
  %217 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %216, i64 0, i32 21
  %218 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %217, align 8
  %219 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %218, i64 0, i32 13
  call void @FT_Outline_Get_CBox(%struct.FT_Outline_* %219, %struct.FT_BBox_* nonnull %3) #15
  %220 = load i64, i64* %200, align 8
  %221 = sitofp i64 %220 to float
  %222 = fmul float %221, 1.562500e-02
  br label %223

223:                                              ; preds = %205, %198, %211
  %224 = phi float [ %222, %211 ], [ %106, %198 ], [ %106, %205 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %199) #15
  br label %225

225:                                              ; preds = %223, %150
  %226 = phi float [ %106, %150 ], [ %224, %223 ]
  %227 = fcmp une float %108, 0.000000e+00
  br i1 %227, label %321, label %228

228:                                              ; preds = %225
  %229 = bitcast %struct.FT_BBox_* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %229) #15
  %230 = getelementptr inbounds %struct.FT_BBox_, %struct.FT_BBox_* %4, i64 0, i32 3
  %231 = bitcast %struct.FT_BBox_* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %231, i8 -86, i64 32, i1 false)
  %232 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %45, align 8
  %233 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %232, i64 72) #15
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %253, label %235

235:                                              ; preds = %228
  %236 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %45, align 8
  %237 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 9
  %238 = load i32, i32* %237, align 8
  %239 = call i32 @FT_Load_Glyph(%struct.FT_FaceRec_* %236, i32 %233, i32 %238) #15
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %253

241:                                              ; preds = %235
  %242 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %45, align 8
  %243 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %242, i64 0, i32 21
  %244 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %243, align 8
  %245 = trunc i32 %233 to i16
  call void @_ZN24SkScalerContext_FreeType16emboldenIfNeededEP11FT_FaceRec_P16FT_GlyphSlotRec_t(%class.SkScalerContext_FreeType* %0, %struct.FT_FaceRec_* %242, %struct.FT_GlyphSlotRec_* %244, i16 zeroext %245) #15
  %246 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %45, align 8
  %247 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %246, i64 0, i32 21
  %248 = load %struct.FT_GlyphSlotRec_*, %struct.FT_GlyphSlotRec_** %247, align 8
  %249 = getelementptr inbounds %struct.FT_GlyphSlotRec_, %struct.FT_GlyphSlotRec_* %248, i64 0, i32 13
  call void @FT_Outline_Get_CBox(%struct.FT_Outline_* %249, %struct.FT_BBox_* nonnull %4) #15
  %250 = load i64, i64* %230, align 8
  %251 = sitofp i64 %250 to float
  %252 = fmul float %251, 1.562500e-02
  br label %253

253:                                              ; preds = %235, %228, %241
  %254 = phi float [ %252, %241 ], [ %108, %228 ], [ %108, %235 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %229) #15
  br label %321

255:                                              ; preds = %105
  %256 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 4
  %257 = load i32, i32* %256, align 8
  %258 = icmp eq i32 %257, -1
  br i1 %258, label %319, label %259

259:                                              ; preds = %255
  %260 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %48, i64 0, i32 22
  %261 = load %struct.FT_SizeRec_*, %struct.FT_SizeRec_** %260, align 8
  %262 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %261, i64 0, i32 2, i32 0
  %263 = load i16, i16* %262, align 8
  %264 = uitofp i16 %263 to float
  %265 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %261, i64 0, i32 2, i32 1
  %266 = load i16, i16* %265, align 2
  %267 = uitofp i16 %266 to float
  %268 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %261, i64 0, i32 2, i32 4
  %269 = load i64, i64* %268, align 8
  %270 = sitofp i64 %269 to float
  %271 = fsub float -0.000000e+00, %270
  %272 = fmul float %267, 6.400000e+01
  %273 = fdiv float %271, %272
  %274 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %261, i64 0, i32 2, i32 5
  %275 = load i64, i64* %274, align 8
  %276 = sitofp i64 %275 to float
  %277 = fsub float -0.000000e+00, %276
  %278 = fdiv float %277, %272
  %279 = getelementptr inbounds %struct.FT_SizeRec_, %struct.FT_SizeRec_* %261, i64 0, i32 2, i32 6
  %280 = load i64, i64* %279, align 8
  %281 = sitofp i64 %280 to float
  %282 = fdiv float %281, %272
  %283 = fadd float %273, %282
  %284 = fsub float %283, %278
  %285 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %48, i64 0, i32 8
  %286 = load %struct.FT_Bitmap_Size_*, %struct.FT_Bitmap_Size_** %285, align 8
  %287 = sext i32 %257 to i64
  %288 = getelementptr inbounds %struct.FT_Bitmap_Size_, %struct.FT_Bitmap_Size_* %286, i64 %287, i32 1
  %289 = load i16, i16* %288, align 2
  %290 = sitofp i16 %289 to float
  %291 = fdiv float %290, %264
  %292 = load i32, i32* %49, align 4
  %293 = and i32 %292, -20
  %294 = or i32 %293, 16
  store i32 %294, i32* %49, align 4
  %295 = tail call i8* @FT_Get_Sfnt_Table(%struct.FT_FaceRec_* %48, i32 5) #15
  %296 = icmp eq i8* %295, null
  %297 = insertelement <8 x float> <float undef, float undef, float undef, float 0.000000e+00, float undef, float undef, float undef, float undef>, float %273, i32 0
  %298 = insertelement <8 x float> %297, float %278, i32 1
  %299 = insertelement <8 x float> %298, float %284, i32 2
  %300 = insertelement <8 x float> %299, float %291, i32 4
  %301 = insertelement <8 x float> %300, float %278, i32 5
  %302 = insertelement <8 x float> %301, float %273, i32 6
  %303 = insertelement <8 x float> %302, float 0.000000e+00, i32 7
  br i1 %296, label %321, label %304

304:                                              ; preds = %259
  %305 = getelementptr inbounds i8, i8* %295, i64 18
  %306 = bitcast i8* %305 to i16*
  %307 = load i16, i16* %306, align 2
  %308 = sitofp i16 %307 to float
  %309 = fdiv float %308, %65
  %310 = getelementptr inbounds i8, i8* %295, i64 16
  %311 = bitcast i8* %310 to i16*
  %312 = load i16, i16* %311, align 8
  %313 = sitofp i16 %312 to float
  %314 = fsub float -0.000000e+00, %313
  %315 = fdiv float %314, %65
  %316 = load i32, i32* %49, align 4
  %317 = or i32 %316, 3
  store i32 %317, i32* %49, align 4
  %318 = insertelement <8 x float> %302, float %309, i32 7
  br label %321

319:                                              ; preds = %255
  %320 = bitcast %struct.SkFontMetrics* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %320, i8 0, i64 64, i1 false) #15
  br label %400

321:                                              ; preds = %304, %259, %225, %253
  %322 = phi float [ %226, %225 ], [ %226, %253 ], [ %106, %259 ], [ %106, %304 ]
  %323 = phi float [ %108, %225 ], [ %254, %253 ], [ %108, %259 ], [ %108, %304 ]
  %324 = phi float [ %194, %225 ], [ %194, %253 ], [ 0.000000e+00, %259 ], [ %315, %304 ]
  %325 = phi <8 x float> [ %185, %225 ], [ %185, %253 ], [ %303, %259 ], [ %318, %304 ]
  %326 = fcmp une float %322, 0.000000e+00
  br i1 %326, label %333, label %327

327:                                              ; preds = %321
  %328 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 8, i32 1
  %329 = load float, float* %328, align 4
  %330 = extractelement <8 x float> %325, i32 0
  %331 = fmul float %330, %329
  %332 = fsub float -0.000000e+00, %331
  br label %333

333:                                              ; preds = %327, %321
  %334 = phi float [ %322, %321 ], [ %332, %327 ]
  %335 = fcmp une float %107, 0.000000e+00
  %336 = extractelement <8 x float> %325, i32 3
  %337 = extractelement <8 x float> %325, i32 4
  %338 = fsub float %337, %336
  %339 = select i1 %335, float %107, float %338
  %340 = fcmp une float %323, 0.000000e+00
  %341 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 8, i32 1
  %342 = load float, float* %341, align 4
  %343 = extractelement <8 x float> %325, i32 0
  %344 = fmul float %343, %342
  %345 = fsub float -0.000000e+00, %344
  %346 = select i1 %340, float %323, float %345
  %347 = extractelement <8 x float> %325, i32 2
  %348 = fcmp olt float %347, 0.000000e+00
  %349 = select i1 %348, float 0.000000e+00, float %347
  %350 = getelementptr inbounds %class.SkScalerContext_FreeType, %class.SkScalerContext_FreeType* %0, i64 0, i32 8, i32 1
  %351 = extractelement <8 x float> %325, i32 6
  %352 = fmul float %351, %342
  %353 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 1
  store float %352, float* %353, align 4
  %354 = load float, float* %350, align 4
  %355 = fmul float %343, %354
  %356 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 2
  store float %355, float* %356, align 4
  %357 = load float, float* %350, align 4
  %358 = extractelement <8 x float> %325, i32 1
  %359 = fmul float %358, %357
  %360 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 3
  store float %359, float* %360, align 4
  %361 = load float, float* %350, align 4
  %362 = extractelement <8 x float> %325, i32 5
  %363 = fmul float %362, %361
  %364 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 4
  store float %363, float* %364, align 4
  %365 = load float, float* %350, align 4
  %366 = fmul float %349, %365
  %367 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 5
  store float %366, float* %367, align 4
  %368 = load float, float* %350, align 4
  %369 = fmul float %339, %368
  %370 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 6
  store float %369, float* %370, align 4
  %371 = load float, float* %350, align 4
  %372 = fmul float %336, %371
  %373 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 8
  store float %372, float* %373, align 4
  %374 = load float, float* %350, align 4
  %375 = fmul float %337, %374
  %376 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 9
  store float %375, float* %376, align 4
  %377 = fsub float %375, %372
  %378 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 7
  store float %377, float* %378, align 4
  %379 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 10
  store float %334, float* %379, align 4
  %380 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 11
  store float %346, float* %380, align 4
  %381 = load float, float* %350, align 4
  %382 = extractelement <8 x float> %325, i32 7
  %383 = fmul float %382, %381
  %384 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 12
  store float %383, float* %384, align 4
  %385 = load float, float* %350, align 4
  %386 = fmul float %324, %385
  %387 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 13
  store float %386, float* %387, align 4
  %388 = load float, float* %350, align 4
  %389 = fmul float %109, %388
  %390 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 14
  store float %389, float* %390, align 4
  %391 = load float, float* %350, align 4
  %392 = fmul float %110, %391
  %393 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %1, i64 0, i32 15
  store float %392, float* %393, align 4
  %394 = load i64, i64* %111, align 8
  %395 = and i64 %394, 256
  %396 = icmp eq i64 %395, 0
  br i1 %396, label %400, label %397

397:                                              ; preds = %333
  %398 = load i32, i32* %49, align 4
  %399 = or i32 %398, 16
  store i32 %399, i32* %49, align 4
  br label %400

400:                                              ; preds = %319, %333, %397, %42
  %401 = atomicrmw add i32* %20, i32 1 release
  %402 = icmp slt i32 %401, 0
  br i1 %402, label %403, label %405

403:                                              ; preds = %400
  %404 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %19, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %404, i32 1) #15
  br label %405

405:                                              ; preds = %403, %400, %2
  ret void
}

declare i64 @FT_MulFix(i64, i64) local_unnamed_addr #5

declare i32 @FT_Outline_Embolden(%struct.FT_Outline_*, i64) local_unnamed_addr #5

declare i32 @FT_GlyphSlot_Own_Bitmap(%struct.FT_GlyphSlotRec_*) local_unnamed_addr #5

declare i32 @FT_Bitmap_Embolden(%struct.FT_LibraryRec_*, %struct.FT_Bitmap_*, i64, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19SkTypeface_FreeType15onCharsToGlyphsEPKiiPt(%class.SkTypeface_FreeType*, i32* nocapture readonly, i32, i16* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %class.AutoFTAccess, align 8
  %6 = getelementptr inbounds %class.SkTypeface_FreeType, %class.SkTypeface_FreeType* %0, i64 0, i32 1
  tail call void @_ZN13SkSharedMutex13acquireSharedEv(%class.SkSharedMutex* %6) #15
  %7 = getelementptr inbounds %class.SkTypeface_FreeType, %class.SkTypeface_FreeType* %0, i64 0, i32 2
  %8 = icmp sgt i32 %2, 0
  br i1 %8, label %9, label %26

9:                                                ; preds = %4
  %10 = zext i32 %2 to i64
  br label %11

11:                                               ; preds = %18, %9
  %12 = phi i64 [ 0, %9 ], [ %21, %18 ]
  %13 = phi i32 [ 0, %9 ], [ %22, %18 ]
  %14 = getelementptr inbounds i32, i32* %1, i64 %12
  %15 = load i32, i32* %14, align 4
  %16 = tail call i32 @_ZNK18SkCharToGlyphCache14findGlyphIndexEi(%class.SkCharToGlyphCache* %7, i32 %15) #15
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %11
  %19 = trunc i32 %16 to i16
  %20 = getelementptr inbounds i16, i16* %3, i64 %12
  store i16 %19, i16* %20, align 2
  %21 = add nuw nsw i64 %12, 1
  %22 = add nuw nsw i32 %13, 1
  %23 = icmp eq i64 %21, %10
  br i1 %23, label %26, label %11

24:                                               ; preds = %11
  %25 = trunc i64 %12 to i32
  br label %26

26:                                               ; preds = %18, %24, %4
  %27 = phi i32 [ 0, %4 ], [ %25, %24 ], [ %22, %18 ]
  %28 = icmp eq i32 %27, %2
  tail call void @_ZN13SkSharedMutex13releaseSharedEv(%class.SkSharedMutex* %6) #15
  br i1 %28, label %73, label %29

29:                                               ; preds = %26
  tail call void @_ZN13SkSharedMutex7acquireEv(%class.SkSharedMutex* %6) #15
  %30 = bitcast %class.AutoFTAccess* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #15
  %31 = getelementptr inbounds %class.AutoFTAccess, %class.AutoFTAccess* %5, i64 0, i32 0
  store %struct.SkFaceRec* inttoptr (i64 -6148914691236517206 to %struct.SkFaceRec*), %struct.SkFaceRec** %31, align 8
  call void @_ZN12AutoFTAccessC2EPK19SkTypeface_FreeType(%class.AutoFTAccess* nonnull %5, %class.SkTypeface_FreeType* %0)
  %32 = load %struct.SkFaceRec*, %struct.SkFaceRec** %31, align 8
  %33 = icmp eq %struct.SkFaceRec* %32, null
  br i1 %33, label %43, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %32, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %35, align 8
  %37 = icmp eq %struct.FT_FaceRec_* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = icmp slt i32 %27, %2
  br i1 %39, label %40, label %67

40:                                               ; preds = %38
  %41 = zext i32 %27 to i64
  %42 = zext i32 %2 to i64
  br label %49

43:                                               ; preds = %29, %34
  %44 = icmp eq i32 %2, 0
  br i1 %44, label %72, label %45

45:                                               ; preds = %43
  %46 = sext i32 %2 to i64
  %47 = shl nsw i64 %46, 1
  %48 = bitcast i16* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %48, i8 0, i64 %47, i1 false) #15
  br label %72

49:                                               ; preds = %64, %40
  %50 = phi i64 [ %41, %40 ], [ %65, %64 ]
  %51 = getelementptr inbounds i32, i32* %1, i64 %50
  %52 = load i32, i32* %51, align 4
  %53 = call i32 @_ZNK18SkCharToGlyphCache14findGlyphIndexEi(%class.SkCharToGlyphCache* %7, i32 %52) #15
  %54 = icmp sgt i32 %53, -1
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = trunc i32 %53 to i16
  %57 = getelementptr inbounds i16, i16* %3, i64 %50
  store i16 %56, i16* %57, align 2
  br label %64

58:                                               ; preds = %49
  %59 = sext i32 %52 to i64
  %60 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* nonnull %36, i64 %59) #15
  %61 = trunc i32 %60 to i16
  %62 = getelementptr inbounds i16, i16* %3, i64 %50
  store i16 %61, i16* %62, align 2
  %63 = xor i32 %53, -1
  call void @_ZN18SkCharToGlyphCache18insertCharAndGlyphEiit(%class.SkCharToGlyphCache* %7, i32 %63, i32 %52, i16 zeroext %61) #15
  br label %64

64:                                               ; preds = %58, %55
  %65 = add nuw nsw i64 %50, 1
  %66 = icmp eq i64 %65, %42
  br i1 %66, label %67, label %49

67:                                               ; preds = %64, %38
  %68 = getelementptr inbounds %class.SkTypeface_FreeType, %class.SkTypeface_FreeType* %0, i64 0, i32 2, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp sgt i32 %69, 512
  br i1 %70, label %71, label %72

71:                                               ; preds = %67
  call void @_ZN18SkCharToGlyphCache5resetEv(%class.SkCharToGlyphCache* %7) #15
  br label %72

72:                                               ; preds = %45, %43, %67, %71
  call void @_ZN12AutoFTAccessD2Ev(%class.AutoFTAccess* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #15
  call void @_ZN13SkSharedMutex7releaseEv(%class.SkSharedMutex* %6) #15
  br label %73

73:                                               ; preds = %26, %72
  ret void
}

declare i32 @_ZNK18SkCharToGlyphCache14findGlyphIndexEi(%class.SkCharToGlyphCache*, i32) local_unnamed_addr #5

declare void @_ZN18SkCharToGlyphCache18insertCharAndGlyphEiit(%class.SkCharToGlyphCache*, i32, i32, i16 zeroext) local_unnamed_addr #5

declare void @_ZN18SkCharToGlyphCache5resetEv(%class.SkCharToGlyphCache*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK19SkTypeface_FreeType13onCountGlyphsEv(%class.SkTypeface_FreeType*) unnamed_addr #0 align 2 {
  %2 = alloca %class.AutoFTAccess, align 8
  %3 = bitcast %class.AutoFTAccess* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #15
  %4 = getelementptr inbounds %class.AutoFTAccess, %class.AutoFTAccess* %2, i64 0, i32 0
  store %struct.SkFaceRec* inttoptr (i64 -6148914691236517206 to %struct.SkFaceRec*), %struct.SkFaceRec** %4, align 8
  call void @_ZN12AutoFTAccessC2EPK19SkTypeface_FreeType(%class.AutoFTAccess* nonnull %2, %class.SkTypeface_FreeType* %0)
  %5 = load %struct.SkFaceRec*, %struct.SkFaceRec** %4, align 8
  %6 = icmp eq %struct.SkFaceRec* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %8, align 8
  %10 = icmp eq %struct.FT_FaceRec_* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %9, i64 0, i32 4
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  br label %15

15:                                               ; preds = %1, %7, %11
  %16 = phi i32 [ %14, %11 ], [ 0, %7 ], [ 0, %1 ]
  call void @_ZN12AutoFTAccessD2Ev(%class.AutoFTAccess* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #15
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkTypeface::LocalizedStrings"* @_ZNK19SkTypeface_FreeType26onCreateFamilyNameIteratorEv(%class.SkTypeface_FreeType*) unnamed_addr #0 align 2 {
  %2 = alloca %class.SkString, align 8
  %3 = alloca %class.SkString, align 8
  %4 = alloca %class.sk_sp.64, align 8
  %5 = alloca %class.SkString, align 8
  %6 = alloca %class.SkString, align 8
  %7 = bitcast %class.sk_sp.64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = bitcast %class.SkTypeface_FreeType* %0 to %class.SkTypeface*
  call void @_ZN9SkOTUtils26LocalizedStrings_NameTable18MakeForFamilyNamesERK10SkTypeface(%class.sk_sp.64* nonnull sret %4, %class.SkTypeface* dereferenceable(48) %8) #15
  %9 = getelementptr inbounds %class.sk_sp.64, %class.sk_sp.64* %4, i64 0, i32 0
  %10 = load %"class.SkOTUtils::LocalizedStrings_NameTable"*, %"class.SkOTUtils::LocalizedStrings_NameTable"** %9, align 8
  %11 = getelementptr inbounds %"class.SkOTUtils::LocalizedStrings_NameTable", %"class.SkOTUtils::LocalizedStrings_NameTable"* %10, i64 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  %12 = icmp eq %"class.SkOTUtils::LocalizedStrings_NameTable"* %10, null
  br i1 %12, label %13, label %28

13:                                               ; preds = %1
  %14 = bitcast %class.SkString* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #15
  %15 = getelementptr inbounds %class.SkString, %class.SkString* %5, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %15, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %5) #15
  call void @_ZNK10SkTypeface13getFamilyNameEP8SkString(%class.SkTypeface* %8, %class.SkString* nonnull %5) #15
  %16 = bitcast %class.SkString* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %class.SkString, %class.SkString* %6, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %17, align 8
  call void @_ZN8SkStringC1EPKc(%class.SkString* nonnull %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)) #15
  %18 = bitcast %class.SkString* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = bitcast %class.SkString* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = call i8* @_Znwm(i64 32) #16, !noalias !12
  call void @_ZN8SkStringC1ERKS_(%class.SkString* nonnull %2, %class.SkString* nonnull dereferenceable(8) %5) #15, !noalias !12
  call void @_ZN8SkStringC1ERKS_(%class.SkString* nonnull %3, %class.SkString* nonnull dereferenceable(8) %6) #15, !noalias !12
  %21 = bitcast i8* %20 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9SkOTUtils27LocalizedStrings_SingleNameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8, !noalias !12
  %22 = getelementptr inbounds i8, i8* %20, i64 8
  %23 = bitcast i8* %22 to %class.SkString*
  call void @_ZN8SkStringC1ERKS_(%class.SkString* %23, %class.SkString* nonnull dereferenceable(8) %2) #15, !noalias !12
  %24 = getelementptr inbounds i8, i8* %20, i64 16
  %25 = bitcast i8* %24 to %class.SkString*
  call void @_ZN8SkStringC1ERKS_(%class.SkString* %25, %class.SkString* nonnull dereferenceable(8) %3) #15, !noalias !12
  %26 = getelementptr inbounds i8, i8* %20, i64 24
  store i8 1, i8* %26, align 8, !noalias !12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %3) #15, !noalias !12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %2) #15, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  %27 = bitcast i8* %20 to %"class.SkTypeface::LocalizedStrings"*
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #15
  br label %28

28:                                               ; preds = %1, %13
  %29 = phi %"class.SkTypeface::LocalizedStrings"* [ %11, %1 ], [ %27, %13 ]
  ret %"class.SkTypeface::LocalizedStrings"* %29
}

declare void @_ZN9SkOTUtils26LocalizedStrings_NameTable18MakeForFamilyNamesERK10SkTypeface(%class.sk_sp.64* sret, %class.SkTypeface* dereferenceable(48)) local_unnamed_addr #5

declare void @_ZNK10SkTypeface13getFamilyNameEP8SkString(%class.SkTypeface*, %class.SkString*) local_unnamed_addr #5

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK19SkTypeface_FreeType28onGetVariationDesignPositionEPN15SkFontArguments17VariationPosition10CoordinateEi(%class.SkTypeface_FreeType*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %class.AutoFTAccess, align 8
  %5 = bitcast %class.AutoFTAccess* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %class.AutoFTAccess, %class.AutoFTAccess* %4, i64 0, i32 0
  store %struct.SkFaceRec* inttoptr (i64 -6148914691236517206 to %struct.SkFaceRec*), %struct.SkFaceRec** %6, align 8
  call void @_ZN12AutoFTAccessC2EPK19SkTypeface_FreeType(%class.AutoFTAccess* nonnull %4, %class.SkTypeface_FreeType* %0)
  %7 = call fastcc i32 @_ZL26GetVariationDesignPositionR12AutoFTAccessPN15SkFontArguments17VariationPosition10CoordinateEi(%class.AutoFTAccess* nonnull dereferenceable(8) %4, %"struct.SkFontArguments::VariationPosition::Coordinate"* %1, i32 %2)
  call void @_ZN12AutoFTAccessD2Ev(%class.AutoFTAccess* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK19SkTypeface_FreeType30onGetVariationDesignParametersEPN16SkFontParameters9Variation4AxisEi(%class.SkTypeface_FreeType*, %"struct.SkFontParameters::Variation::Axis"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %class.AutoFTAccess, align 8
  %5 = alloca %struct.FT_MM_Var_*, align 8
  %6 = alloca i32, align 4
  %7 = bitcast %class.AutoFTAccess* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = getelementptr inbounds %class.AutoFTAccess, %class.AutoFTAccess* %4, i64 0, i32 0
  store %struct.SkFaceRec* inttoptr (i64 -6148914691236517206 to %struct.SkFaceRec*), %struct.SkFaceRec** %8, align 8
  call void @_ZN12AutoFTAccessC2EPK19SkTypeface_FreeType(%class.AutoFTAccess* nonnull %4, %class.SkTypeface_FreeType* %0)
  %9 = load %struct.SkFaceRec*, %struct.SkFaceRec** %8, align 8
  %10 = icmp eq %struct.SkFaceRec* %9, null
  br i1 %10, label %100, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %12, align 8
  %14 = icmp eq %struct.FT_FaceRec_* %13, null
  br i1 %14, label %100, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %13, i64 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 256
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %100, label %20

20:                                               ; preds = %15
  %21 = bitcast %struct.FT_MM_Var_** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #15
  store %struct.FT_MM_Var_* null, %struct.FT_MM_Var_** %5, align 8
  %22 = call i32 @FT_Get_MM_Var(%struct.FT_FaceRec_* nonnull %13, %struct.FT_MM_Var_** nonnull %5) #15
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %98

24:                                               ; preds = %20
  %25 = bitcast %struct.FT_MM_Var_** %5 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = icmp eq %"struct.SkFontParameters::Variation::Axis"* %1, null
  %28 = bitcast i8* %26 to %struct.FT_MM_Var_*
  %29 = bitcast i8* %26 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp sgt i32 %30, %2
  %32 = or i1 %27, %31
  br i1 %32, label %94, label %33

33:                                               ; preds = %24
  %34 = icmp eq i32 %30, 0
  br i1 %34, label %94, label %35

35:                                               ; preds = %33
  %36 = bitcast i32* %6 to i8*
  br label %37

37:                                               ; preds = %35, %85
  %38 = phi i64 [ 0, %35 ], [ %88, %85 ]
  %39 = phi %struct.FT_MM_Var_* [ %28, %35 ], [ %89, %85 ]
  %40 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %39, i64 0, i32 3
  %41 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %40, align 8
  %42 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %41, i64 %38, i32 4
  %43 = load i64, i64* %42, align 8
  %44 = trunc i64 %43 to i32
  %45 = getelementptr inbounds %"struct.SkFontParameters::Variation::Axis", %"struct.SkFontParameters::Variation::Axis"* %1, i64 %38, i32 0
  store i32 %44, i32* %45, align 4
  %46 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %40, align 8
  %47 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %46, i64 %38, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = sitofp i64 %48 to float
  %50 = fmul float %49, 0x3EF0000000000000
  %51 = getelementptr inbounds %"struct.SkFontParameters::Variation::Axis", %"struct.SkFontParameters::Variation::Axis"* %1, i64 %38, i32 1
  store float %50, float* %51, align 4
  %52 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %40, align 8
  %53 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %52, i64 %38, i32 2
  %54 = load i64, i64* %53, align 8
  %55 = sitofp i64 %54 to float
  %56 = fmul float %55, 0x3EF0000000000000
  %57 = getelementptr inbounds %"struct.SkFontParameters::Variation::Axis", %"struct.SkFontParameters::Variation::Axis"* %1, i64 %38, i32 2
  store float %56, float* %57, align 4
  %58 = load %struct.FT_Var_Axis_*, %struct.FT_Var_Axis_** %40, align 8
  %59 = getelementptr inbounds %struct.FT_Var_Axis_, %struct.FT_Var_Axis_* %58, i64 %38, i32 3
  %60 = load i64, i64* %59, align 8
  %61 = sitofp i64 %60 to float
  %62 = fmul float %61, 0x3EF0000000000000
  %63 = getelementptr inbounds %"struct.SkFontParameters::Variation::Axis", %"struct.SkFontParameters::Variation::Axis"* %1, i64 %38, i32 3
  store float %62, float* %63, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36) #15
  store i32 0, i32* %6, align 4
  %64 = load %class.FreeTypeLibrary*, %class.FreeTypeLibrary** @_ZL10gFTLibrary, align 8
  %65 = getelementptr inbounds %class.FreeTypeLibrary, %class.FreeTypeLibrary* %64, i64 0, i32 1
  %66 = load i32 (%struct.FT_MM_Var_*, i32, i32*)*, i32 (%struct.FT_MM_Var_*, i32, i32*)** %65, align 8
  %67 = icmp eq i32 (%struct.FT_MM_Var_*, i32, i32*)* %66, null
  br i1 %67, label %72, label %68

68:                                               ; preds = %37
  %69 = trunc i64 %38 to i32
  %70 = call i32 %66(%struct.FT_MM_Var_* %39, i32 %69, i32* nonnull %6) #15
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %68, %37
  %73 = getelementptr inbounds %"struct.SkFontParameters::Variation::Axis", %"struct.SkFontParameters::Variation::Axis"* %1, i64 %38, i32 4
  %74 = load i16, i16* %73, align 4
  %75 = and i16 %74, -2
  br label %85

76:                                               ; preds = %68
  %77 = load i32, i32* %6, align 4
  %78 = and i32 %77, 1
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"struct.SkFontParameters::Variation::Axis", %"struct.SkFontParameters::Variation::Axis"* %1, i64 %38, i32 4
  %81 = load i16, i16* %80, align 4
  %82 = or i16 %81, 1
  %83 = and i16 %81, -2
  %84 = select i1 %79, i16 %83, i16 %82
  br label %85

85:                                               ; preds = %76, %72
  %86 = phi i16* [ %73, %72 ], [ %80, %76 ]
  %87 = phi i16 [ %75, %72 ], [ %84, %76 ]
  store i16 %87, i16* %86, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36) #15
  %88 = add nuw nsw i64 %38, 1
  %89 = load %struct.FT_MM_Var_*, %struct.FT_MM_Var_** %5, align 8
  %90 = getelementptr inbounds %struct.FT_MM_Var_, %struct.FT_MM_Var_* %89, i64 0, i32 0
  %91 = load i32, i32* %90, align 8
  %92 = zext i32 %91 to i64
  %93 = icmp ult i64 %88, %92
  br i1 %93, label %37, label %94

94:                                               ; preds = %85, %24, %33
  %95 = phi i32 [ 0, %33 ], [ %30, %24 ], [ %91, %85 ]
  %96 = icmp eq i8* %26, null
  br i1 %96, label %98, label %97

97:                                               ; preds = %94
  call void @_Z7sk_freePv(i8* nonnull %26) #15
  br label %98

98:                                               ; preds = %97, %94, %20
  %99 = phi i32 [ -1, %20 ], [ %95, %94 ], [ %95, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #15
  br label %100

100:                                              ; preds = %3, %15, %11, %98
  %101 = phi i32 [ %99, %98 ], [ -1, %11 ], [ 0, %15 ], [ -1, %3 ]
  call void @_ZN12AutoFTAccessD2Ev(%class.AutoFTAccess* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  ret i32 %101
}

declare i32 @FT_Get_MM_Var(%struct.FT_FaceRec_*, %struct.FT_MM_Var_**) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK19SkTypeface_FreeType14onGetTableTagsEPj(%class.SkTypeface_FreeType*, i32*) unnamed_addr #0 align 2 {
  %3 = alloca %class.AutoFTAccess, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = bitcast %class.AutoFTAccess* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = getelementptr inbounds %class.AutoFTAccess, %class.AutoFTAccess* %3, i64 0, i32 0
  store %struct.SkFaceRec* inttoptr (i64 -6148914691236517206 to %struct.SkFaceRec*), %struct.SkFaceRec** %8, align 8
  call void @_ZN12AutoFTAccessC2EPK19SkTypeface_FreeType(%class.AutoFTAccess* nonnull %3, %class.SkTypeface_FreeType* %0)
  %9 = load %struct.SkFaceRec*, %struct.SkFaceRec** %8, align 8
  %10 = icmp eq %struct.SkFaceRec* %9, null
  br i1 %10, label %45, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %12, align 8
  %14 = icmp eq %struct.FT_FaceRec_* %13, null
  br i1 %14, label %45, label %15

15:                                               ; preds = %11
  %16 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  store i64 0, i64* %4, align 8
  %17 = call i32 @FT_Sfnt_Table_Info(%struct.FT_FaceRec_* nonnull %13, i32 0, i64* null, i64* nonnull %4) #15
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %43

19:                                               ; preds = %15
  %20 = icmp ne i32* %1, null
  %21 = load i64, i64* %4, align 8
  %22 = icmp ne i64 %21, 0
  %23 = and i1 %20, %22
  br i1 %23, label %24, label %40

24:                                               ; preds = %19
  %25 = bitcast i64* %5 to i8*
  %26 = bitcast i64* %6 to i8*
  br label %27

27:                                               ; preds = %24, %32
  %28 = phi i64 [ 0, %24 ], [ %36, %32 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #15
  store i64 -6148914691236517206, i64* %5, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #15
  store i64 -6148914691236517206, i64* %6, align 8
  %29 = trunc i64 %28 to i32
  %30 = call i32 @FT_Sfnt_Table_Info(%struct.FT_FaceRec_* nonnull %13, i32 %29, i64* nonnull %5, i64* nonnull %6) #15
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %27
  %33 = load i64, i64* %5, align 8
  %34 = trunc i64 %33 to i32
  %35 = getelementptr inbounds i32, i32* %1, i64 %28
  store i32 %34, i32* %35, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #15
  %36 = add nuw i64 %28, 1
  %37 = load i64, i64* %4, align 8
  %38 = icmp ult i64 %36, %37
  br i1 %38, label %27, label %40

39:                                               ; preds = %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #15
  br label %43

40:                                               ; preds = %32, %19
  %41 = phi i64 [ %21, %19 ], [ %37, %32 ]
  %42 = trunc i64 %41 to i32
  br label %43

43:                                               ; preds = %39, %15, %40
  %44 = phi i32 [ %42, %40 ], [ 0, %39 ], [ 0, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %45

45:                                               ; preds = %2, %11, %43
  %46 = phi i32 [ %44, %43 ], [ 0, %11 ], [ 0, %2 ]
  call void @_ZN12AutoFTAccessD2Ev(%class.AutoFTAccess* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  ret i32 %46
}

declare i32 @FT_Sfnt_Table_Info(%struct.FT_FaceRec_*, i32, i64*, i64*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK19SkTypeface_FreeType14onGetTableDataEjmmPv(%class.SkTypeface_FreeType*, i32, i64, i64, i8*) unnamed_addr #0 align 2 {
  %6 = alloca %class.AutoFTAccess, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = bitcast %class.AutoFTAccess* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %class.AutoFTAccess, %class.AutoFTAccess* %6, i64 0, i32 0
  store %struct.SkFaceRec* inttoptr (i64 -6148914691236517206 to %struct.SkFaceRec*), %struct.SkFaceRec** %10, align 8
  call void @_ZN12AutoFTAccessC2EPK19SkTypeface_FreeType(%class.AutoFTAccess* nonnull %6, %class.SkTypeface_FreeType* %0)
  %11 = load %struct.SkFaceRec*, %struct.SkFaceRec** %10, align 8
  %12 = icmp eq %struct.SkFaceRec* %11, null
  br i1 %12, label %40, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %14, align 8
  %16 = icmp eq %struct.FT_FaceRec_* %15, null
  br i1 %16, label %40, label %17

17:                                               ; preds = %13
  %18 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #15
  store i64 0, i64* %7, align 8
  %19 = zext i32 %1 to i64
  %20 = call i32 @FT_Load_Sfnt_Table(%struct.FT_FaceRec_* nonnull %15, i64 %19, i64 0, i8* null, i64* nonnull %7) #15
  %21 = icmp ne i32 %20, 0
  %22 = load i64, i64* %7, align 8
  %23 = icmp ult i64 %22, %2
  %24 = or i1 %21, %23
  br i1 %24, label %38, label %25

25:                                               ; preds = %17
  %26 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #15
  %27 = sub i64 %22, %2
  %28 = icmp ult i64 %27, %3
  %29 = select i1 %28, i64 %27, i64 %3
  store i64 %29, i64* %8, align 8
  %30 = icmp eq i8* %4, null
  br i1 %30, label %36, label %31

31:                                               ; preds = %25
  %32 = call i32 @FT_Load_Sfnt_Table(%struct.FT_FaceRec_* nonnull %15, i64 %19, i64 %2, i8* nonnull %4, i64* nonnull %8) #15
  %33 = icmp eq i32 %32, 0
  %34 = load i64, i64* %8, align 8
  %35 = select i1 %33, i64 %34, i64 0
  br label %36

36:                                               ; preds = %31, %25
  %37 = phi i64 [ %29, %25 ], [ %35, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #15
  br label %38

38:                                               ; preds = %17, %36
  %39 = phi i64 [ %37, %36 ], [ 0, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #15
  br label %40

40:                                               ; preds = %5, %13, %38
  %41 = phi i64 [ %39, %38 ], [ 0, %13 ], [ 0, %5 ]
  call void @_ZN12AutoFTAccessD2Ev(%class.AutoFTAccess* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  ret i64 %41
}

declare i32 @FT_Load_Sfnt_Table(%struct.FT_FaceRec_*, i64, i64, i8*, i64*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK19SkTypeface_FreeType15onCopyTableDataEj(%class.sk_sp.77* noalias nocapture sret, %class.SkTypeface_FreeType*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %class.AutoFTAccess, align 8
  %5 = alloca i64, align 8
  %6 = alloca %class.sk_sp.77, align 8
  %7 = bitcast %class.AutoFTAccess* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #15
  %8 = getelementptr inbounds %class.AutoFTAccess, %class.AutoFTAccess* %4, i64 0, i32 0
  store %struct.SkFaceRec* inttoptr (i64 -6148914691236517206 to %struct.SkFaceRec*), %struct.SkFaceRec** %8, align 8
  call void @_ZN12AutoFTAccessC2EPK19SkTypeface_FreeType(%class.AutoFTAccess* nonnull %4, %class.SkTypeface_FreeType* %1)
  %9 = load %struct.SkFaceRec*, %struct.SkFaceRec** %8, align 8
  %10 = icmp eq %struct.SkFaceRec* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.SkFaceRec, %struct.SkFaceRec* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %12, align 8
  %14 = icmp eq %struct.FT_FaceRec_* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %3, %11
  %16 = getelementptr inbounds %class.sk_sp.77, %class.sk_sp.77* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %16, align 8
  br label %49

17:                                               ; preds = %11
  %18 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #15
  store i64 0, i64* %5, align 8
  %19 = zext i32 %2 to i64
  %20 = call i32 @FT_Load_Sfnt_Table(%struct.FT_FaceRec_* nonnull %13, i64 %19, i64 0, i8* null, i64* nonnull %5) #15
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.sk_sp.77, %class.sk_sp.77* %0, i64 0, i32 0
  store %class.SkData* null, %class.SkData** %23, align 8
  br label %48

24:                                               ; preds = %17
  %25 = bitcast %class.sk_sp.77* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #15
  %26 = getelementptr inbounds %class.sk_sp.77, %class.sk_sp.77* %6, i64 0, i32 0
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %26, align 8
  %27 = load i64, i64* %5, align 8
  call void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.77* nonnull sret %6, i64 %27) #15
  %28 = load %class.SkData*, %class.SkData** %26, align 8
  %29 = icmp eq %class.SkData* %28, null
  br i1 %29, label %44, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %class.SkData, %class.SkData* %28, i64 0, i32 3
  %32 = load i8*, i8** %31, align 8
  %33 = call i32 @FT_Load_Sfnt_Table(%struct.FT_FaceRec_* nonnull %13, i64 %19, i64 0, i8* %32, i64* nonnull %5) #15
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %44, label %35

35:                                               ; preds = %30
  %36 = load %class.SkData*, %class.SkData** %26, align 8
  store %class.SkData* null, %class.SkData** %26, align 8
  %37 = icmp eq %class.SkData* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %class.SkData, %class.SkData* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw add i32* %39, i32 -1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %44

42:                                               ; preds = %38
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %36) #15
  %43 = bitcast %class.SkData* %36 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %43) #15
  br label %44

44:                                               ; preds = %24, %30, %35, %38, %42
  %45 = bitcast %class.sk_sp.77* %6 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %class.sk_sp.77* %0 to i64*
  store i64 %46, i64* %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #15
  br label %48

48:                                               ; preds = %44, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #15
  br label %49

49:                                               ; preds = %48, %15
  call void @_ZN12AutoFTAccessD2Ev(%class.AutoFTAccess* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #15
  ret void
}

declare void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.77* sret, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkFontData* @_ZNK19SkTypeface_FreeType12makeFontDataEv(%class.SkTypeface_FreeType*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkTypeface_FreeType* %0 to %class.SkFontData* (%class.SkTypeface_FreeType*)***
  %3 = load %class.SkFontData* (%class.SkTypeface_FreeType*)**, %class.SkFontData* (%class.SkTypeface_FreeType*)*** %2, align 8
  %4 = getelementptr inbounds %class.SkFontData* (%class.SkTypeface_FreeType*)*, %class.SkFontData* (%class.SkTypeface_FreeType*)** %3, i64 26
  %5 = load %class.SkFontData* (%class.SkTypeface_FreeType*)*, %class.SkFontData* (%class.SkTypeface_FreeType*)** %4, align 8
  %6 = tail call %class.SkFontData* %5(%class.SkTypeface_FreeType* %0) #15
  ret %class.SkFontData* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkTypeface_FreeType7ScannerC2Ev(%"class.SkTypeface_FreeType::Scanner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkTypeface_FreeType::Scanner", %"class.SkTypeface_FreeType::Scanner"* %0, i64 0, i32 0
  store %struct.FT_LibraryRec_* null, %struct.FT_LibraryRec_** %2, align 8
  %3 = getelementptr inbounds %"class.SkTypeface_FreeType::Scanner", %"class.SkTypeface_FreeType::Scanner"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %3, align 4
  %4 = getelementptr inbounds %"class.SkTypeface_FreeType::Scanner", %"class.SkTypeface_FreeType::Scanner"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %"class.SkTypeface_FreeType::Scanner", %"class.SkTypeface_FreeType::Scanner"* %0, i64 0, i32 1, i32 0, i32 2
  store %"struct.SkSemaphore::OSSemaphore"* null, %"struct.SkSemaphore::OSSemaphore"** %5, align 8
  %6 = tail call i32 @FT_New_Library(%struct.FT_MemoryRec_* bitcast ({ i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }* @gFTMemory to %struct.FT_MemoryRec_*), %struct.FT_LibraryRec_** %2) #15
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %2, align 8
  tail call void @FT_Add_Default_Modules(%struct.FT_LibraryRec_* %9) #15
  br label %10

10:                                               ; preds = %1, %8
  ret void
}

declare i32 @FT_New_Library(%struct.FT_MemoryRec_*, %struct.FT_LibraryRec_**) local_unnamed_addr #5

declare void @FT_Add_Default_Modules(%struct.FT_LibraryRec_*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN19SkTypeface_FreeType7ScannerD2Ev(%"class.SkTypeface_FreeType::Scanner"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkTypeface_FreeType::Scanner", %"class.SkTypeface_FreeType::Scanner"* %0, i64 0, i32 0
  %3 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %2, align 8
  %4 = icmp eq %struct.FT_LibraryRec_* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call i32 @FT_Done_Library(%struct.FT_LibraryRec_* nonnull %3) #15
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.SkTypeface_FreeType::Scanner", %"class.SkTypeface_FreeType::Scanner"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore* %8) #15
  ret void
}

declare i32 @FT_Done_Library(%struct.FT_LibraryRec_*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %struct.FT_FaceRec_* @_ZNK19SkTypeface_FreeType7Scanner8openFaceEP13SkStreamAssetiP13FT_StreamRec_(%"class.SkTypeface_FreeType::Scanner"* nocapture readonly, %class.SkStreamAsset*, i32, %struct.FT_StreamRec_*) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.FT_Open_Args_, align 8
  %6 = alloca %struct.FT_FaceRec_*, align 8
  %7 = getelementptr inbounds %"class.SkTypeface_FreeType::Scanner", %"class.SkTypeface_FreeType::Scanner"* %0, i64 0, i32 0
  %8 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %7, align 8
  %9 = icmp eq %struct.FT_LibraryRec_* %8, null
  %10 = icmp eq %class.SkStreamAsset* %1, null
  %11 = or i1 %10, %9
  br i1 %11, label %52, label %12

12:                                               ; preds = %4
  %13 = bitcast %struct.FT_Open_Args_* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 64, i1 false)
  %14 = getelementptr inbounds %class.SkStreamAsset, %class.SkStreamAsset* %1, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %class.SkStreamAsset* %1 to i8* (%class.SkStream*)***
  %16 = load i8* (%class.SkStream*)**, i8* (%class.SkStream*)*** %15, align 8
  %17 = getelementptr inbounds i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %16, i64 12
  %18 = load i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %17, align 8
  %19 = tail call i8* %18(%class.SkStream* %14) #15
  %20 = icmp eq i8* %19, null
  br i1 %20, label %29, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %5, i64 0, i32 1
  store i8* %19, i8** %22, align 8
  %23 = bitcast %class.SkStreamAsset* %1 to i64 (%class.SkStreamAsset*)***
  %24 = load i64 (%class.SkStreamAsset*)**, i64 (%class.SkStreamAsset*)*** %23, align 8
  %25 = getelementptr inbounds i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %24, i64 11
  %26 = load i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %25, align 8
  %27 = tail call i64 %26(%class.SkStreamAsset* nonnull %1) #15
  %28 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %5, i64 0, i32 2
  store i64 %27, i64* %28, align 8
  br label %42

29:                                               ; preds = %12
  %30 = bitcast %struct.FT_StreamRec_* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 80, i1 false)
  %31 = bitcast %class.SkStreamAsset* %1 to i64 (%class.SkStreamAsset*)***
  %32 = load i64 (%class.SkStreamAsset*)**, i64 (%class.SkStreamAsset*)*** %31, align 8
  %33 = getelementptr inbounds i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %32, i64 11
  %34 = load i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %33, align 8
  %35 = tail call i64 %34(%class.SkStreamAsset* nonnull %1) #15
  %36 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %3, i64 0, i32 1
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %3, i64 0, i32 3
  %38 = bitcast %union.FT_StreamDesc_* %37 to %class.SkStreamAsset**
  store %class.SkStreamAsset* %1, %class.SkStreamAsset** %38, align 8
  %39 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %3, i64 0, i32 5
  store i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* @_ZL15sk_ft_stream_ioP13FT_StreamRec_mPhm, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %39, align 8
  %40 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %3, i64 0, i32 6
  store void (%struct.FT_StreamRec_*)* @_ZL18sk_ft_stream_closeP13FT_StreamRec_, void (%struct.FT_StreamRec_*)** %40, align 8
  %41 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %5, i64 0, i32 4
  store %struct.FT_StreamRec_* %3, %struct.FT_StreamRec_** %41, align 8
  br label %42

42:                                               ; preds = %29, %21
  %43 = phi i32 [ 2, %29 ], [ 1, %21 ]
  %44 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %5, i64 0, i32 0
  store i32 %43, i32* %44, align 8
  %45 = bitcast %struct.FT_FaceRec_** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #15
  store %struct.FT_FaceRec_* inttoptr (i64 -6148914691236517206 to %struct.FT_FaceRec_*), %struct.FT_FaceRec_** %6, align 8
  %46 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %7, align 8
  %47 = sext i32 %2 to i64
  %48 = call i32 @FT_Open_Face(%struct.FT_LibraryRec_* %46, %struct.FT_Open_Args_* nonnull %5, i64 %47, %struct.FT_FaceRec_** nonnull %6) #15
  %49 = icmp eq i32 %48, 0
  %50 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %6, align 8
  %51 = select i1 %49, %struct.FT_FaceRec_* %50, %struct.FT_FaceRec_* null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13) #15
  br label %52

52:                                               ; preds = %4, %42
  %53 = phi %struct.FT_FaceRec_* [ %51, %42 ], [ null, %4 ]
  ret %struct.FT_FaceRec_* %53
}

declare i32 @FT_Open_Face(%struct.FT_LibraryRec_*, %struct.FT_Open_Args_*, i64, %struct.FT_FaceRec_**) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK19SkTypeface_FreeType7Scanner14recognizedFontEP13SkStreamAssetPi(%"class.SkTypeface_FreeType::Scanner"*, %class.SkStreamAsset*, i32* nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.FT_Open_Args_, align 8
  %5 = alloca %struct.FT_FaceRec_*, align 8
  %6 = alloca %struct.FT_StreamRec_, align 8
  %7 = getelementptr inbounds %"class.SkTypeface_FreeType::Scanner", %"class.SkTypeface_FreeType::Scanner"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acquire
  %10 = icmp slt i32 %9, 1
  br i1 %10, label %11, label %13

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %7, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %12) #15
  br label %13

13:                                               ; preds = %3, %11
  %14 = bitcast %struct.FT_StreamRec_* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %14) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 80, i1 false)
  %15 = getelementptr inbounds %"class.SkTypeface_FreeType::Scanner", %"class.SkTypeface_FreeType::Scanner"* %0, i64 0, i32 0
  %16 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %15, align 8
  %17 = icmp eq %struct.FT_LibraryRec_* %16, null
  %18 = icmp eq %class.SkStreamAsset* %1, null
  %19 = or i1 %18, %17
  br i1 %19, label %64, label %20

20:                                               ; preds = %13
  %21 = bitcast %struct.FT_Open_Args_* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %21) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 64, i1 false) #15
  %22 = getelementptr inbounds %class.SkStreamAsset, %class.SkStreamAsset* %1, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %class.SkStreamAsset* %1 to i8* (%class.SkStream*)***
  %24 = load i8* (%class.SkStream*)**, i8* (%class.SkStream*)*** %23, align 8
  %25 = getelementptr inbounds i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %24, i64 12
  %26 = load i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %25, align 8
  %27 = tail call i8* %26(%class.SkStream* %22) #15
  %28 = icmp eq i8* %27, null
  br i1 %28, label %37, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %4, i64 0, i32 1
  store i8* %27, i8** %30, align 8
  %31 = bitcast %class.SkStreamAsset* %1 to i64 (%class.SkStreamAsset*)***
  %32 = load i64 (%class.SkStreamAsset*)**, i64 (%class.SkStreamAsset*)*** %31, align 8
  %33 = getelementptr inbounds i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %32, i64 11
  %34 = load i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %33, align 8
  %35 = tail call i64 %34(%class.SkStreamAsset* nonnull %1) #15
  %36 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %4, i64 0, i32 2
  store i64 %35, i64* %36, align 8
  br label %49

37:                                               ; preds = %20
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 80, i1 false) #15
  %38 = bitcast %class.SkStreamAsset* %1 to i64 (%class.SkStreamAsset*)***
  %39 = load i64 (%class.SkStreamAsset*)**, i64 (%class.SkStreamAsset*)*** %38, align 8
  %40 = getelementptr inbounds i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %39, i64 11
  %41 = load i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %40, align 8
  %42 = tail call i64 %41(%class.SkStreamAsset* nonnull %1) #15
  %43 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %6, i64 0, i32 1
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %6, i64 0, i32 3
  %45 = bitcast %union.FT_StreamDesc_* %44 to %class.SkStreamAsset**
  store %class.SkStreamAsset* %1, %class.SkStreamAsset** %45, align 8
  %46 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %6, i64 0, i32 5
  store i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* @_ZL15sk_ft_stream_ioP13FT_StreamRec_mPhm, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %46, align 8
  %47 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %6, i64 0, i32 6
  store void (%struct.FT_StreamRec_*)* @_ZL18sk_ft_stream_closeP13FT_StreamRec_, void (%struct.FT_StreamRec_*)** %47, align 8
  %48 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %4, i64 0, i32 4
  store %struct.FT_StreamRec_* %6, %struct.FT_StreamRec_** %48, align 8
  br label %49

49:                                               ; preds = %37, %29
  %50 = phi i32 [ 2, %37 ], [ 1, %29 ]
  %51 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %4, i64 0, i32 0
  store i32 %50, i32* %51, align 8
  %52 = bitcast %struct.FT_FaceRec_** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #15
  store %struct.FT_FaceRec_* inttoptr (i64 -6148914691236517206 to %struct.FT_FaceRec_*), %struct.FT_FaceRec_** %5, align 8
  %53 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %15, align 8
  %54 = call i32 @FT_Open_Face(%struct.FT_LibraryRec_* %53, %struct.FT_Open_Args_* nonnull %4, i64 -1, %struct.FT_FaceRec_** nonnull %5) #15
  %55 = icmp ne i32 %54, 0
  %56 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %21) #15
  %57 = icmp eq %struct.FT_FaceRec_* %56, null
  %58 = or i1 %55, %57
  br i1 %58, label %64, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %56, i64 0, i32 0
  %61 = load i64, i64* %60, align 8
  %62 = trunc i64 %61 to i32
  store i32 %62, i32* %2, align 4
  %63 = call i32 @FT_Done_Face(%struct.FT_FaceRec_* nonnull %56) #15
  br label %64

64:                                               ; preds = %49, %13, %59
  %65 = phi i1 [ true, %59 ], [ false, %49 ], [ false, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %14) #15
  %66 = atomicrmw add i32* %8, i32 1 release
  %67 = icmp slt i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %64
  %69 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %7, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %69, i32 1) #15
  br label %70

70:                                               ; preds = %64, %68
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK19SkTypeface_FreeType7Scanner8scanFontEP13SkStreamAssetiP8SkStringP11SkFontStylePbP9SkSTArrayILi4ENS0_14AxisDefinitionELb1EE(%"class.SkTypeface_FreeType::Scanner"*, %class.SkStreamAsset*, i32, %class.SkString*, %class.SkFontStyle*, i8*, %class.SkSTArray*) local_unnamed_addr #0 align 2 {
  %8 = alloca %struct.FT_Open_Args_, align 8
  %9 = alloca %struct.FT_FaceRec_*, align 8
  %10 = alloca %struct.FT_StreamRec_, align 8
  %11 = alloca %struct.PS_FontInfoRec_, align 8
  %12 = getelementptr inbounds %"class.SkTypeface_FreeType::Scanner", %"class.SkTypeface_FreeType::Scanner"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i32* %13, i32 1 acquire
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %7
  %17 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %12, i64 0, i32 0
  tail call void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore* %17) #15
  br label %18

18:                                               ; preds = %7, %16
  %19 = bitcast %struct.FT_StreamRec_* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %19) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 80, i1 false)
  %20 = getelementptr inbounds %"class.SkTypeface_FreeType::Scanner", %"class.SkTypeface_FreeType::Scanner"* %0, i64 0, i32 0
  %21 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %20, align 8
  %22 = icmp eq %struct.FT_LibraryRec_* %21, null
  %23 = icmp eq %class.SkStreamAsset* %1, null
  %24 = or i1 %23, %22
  br i1 %24, label %153, label %25

25:                                               ; preds = %18
  %26 = bitcast %struct.FT_Open_Args_* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %26) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 64, i1 false) #15
  %27 = getelementptr inbounds %class.SkStreamAsset, %class.SkStreamAsset* %1, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %class.SkStreamAsset* %1 to i8* (%class.SkStream*)***
  %29 = load i8* (%class.SkStream*)**, i8* (%class.SkStream*)*** %28, align 8
  %30 = getelementptr inbounds i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %29, i64 12
  %31 = load i8* (%class.SkStream*)*, i8* (%class.SkStream*)** %30, align 8
  %32 = tail call i8* %31(%class.SkStream* %27) #15
  %33 = icmp eq i8* %32, null
  br i1 %33, label %42, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %8, i64 0, i32 1
  store i8* %32, i8** %35, align 8
  %36 = bitcast %class.SkStreamAsset* %1 to i64 (%class.SkStreamAsset*)***
  %37 = load i64 (%class.SkStreamAsset*)**, i64 (%class.SkStreamAsset*)*** %36, align 8
  %38 = getelementptr inbounds i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %37, i64 11
  %39 = load i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %38, align 8
  %40 = tail call i64 %39(%class.SkStreamAsset* nonnull %1) #15
  %41 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %8, i64 0, i32 2
  store i64 %40, i64* %41, align 8
  br label %54

42:                                               ; preds = %25
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 80, i1 false) #15
  %43 = bitcast %class.SkStreamAsset* %1 to i64 (%class.SkStreamAsset*)***
  %44 = load i64 (%class.SkStreamAsset*)**, i64 (%class.SkStreamAsset*)*** %43, align 8
  %45 = getelementptr inbounds i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %44, i64 11
  %46 = load i64 (%class.SkStreamAsset*)*, i64 (%class.SkStreamAsset*)** %45, align 8
  %47 = tail call i64 %46(%class.SkStreamAsset* nonnull %1) #15
  %48 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %10, i64 0, i32 1
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %10, i64 0, i32 3
  %50 = bitcast %union.FT_StreamDesc_* %49 to %class.SkStreamAsset**
  store %class.SkStreamAsset* %1, %class.SkStreamAsset** %50, align 8
  %51 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %10, i64 0, i32 5
  store i64 (%struct.FT_StreamRec_*, i64, i8*, i64)* @_ZL15sk_ft_stream_ioP13FT_StreamRec_mPhm, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)** %51, align 8
  %52 = getelementptr inbounds %struct.FT_StreamRec_, %struct.FT_StreamRec_* %10, i64 0, i32 6
  store void (%struct.FT_StreamRec_*)* @_ZL18sk_ft_stream_closeP13FT_StreamRec_, void (%struct.FT_StreamRec_*)** %52, align 8
  %53 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %8, i64 0, i32 4
  store %struct.FT_StreamRec_* %10, %struct.FT_StreamRec_** %53, align 8
  br label %54

54:                                               ; preds = %42, %34
  %55 = phi i32 [ 2, %42 ], [ 1, %34 ]
  %56 = getelementptr inbounds %struct.FT_Open_Args_, %struct.FT_Open_Args_* %8, i64 0, i32 0
  store i32 %55, i32* %56, align 8
  %57 = bitcast %struct.FT_FaceRec_** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #15
  store %struct.FT_FaceRec_* inttoptr (i64 -6148914691236517206 to %struct.FT_FaceRec_*), %struct.FT_FaceRec_** %9, align 8
  %58 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %20, align 8
  %59 = sext i32 %2 to i64
  %60 = call i32 @FT_Open_Face(%struct.FT_LibraryRec_* %58, %struct.FT_Open_Args_* nonnull %8, i64 %59, %struct.FT_FaceRec_** nonnull %9) #15
  %61 = icmp ne i32 %60, 0
  %62 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #15
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %26) #15
  %63 = icmp eq %struct.FT_FaceRec_* %62, null
  %64 = or i1 %61, %63
  br i1 %64, label %153, label %65

65:                                               ; preds = %54
  %66 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %62, i64 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = and i64 %67, 2
  %69 = icmp eq i64 %68, 0
  %70 = select i1 %69, i32 400, i32 700
  %71 = trunc i64 %67 to i32
  %72 = and i32 %71, 1
  %73 = bitcast %struct.PS_FontInfoRec_* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %73) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 56, i1 false)
  %74 = call i8* @FT_Get_Sfnt_Table(%struct.FT_FaceRec_* nonnull %62, i32 2) #15
  %75 = icmp eq i8* %74, null
  br i1 %75, label %95, label %76

76:                                               ; preds = %65
  %77 = bitcast i8* %74 to i16*
  %78 = load i16, i16* %77, align 8
  %79 = icmp eq i16 %78, -1
  br i1 %79, label %95, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds i8, i8* %74, i64 4
  %82 = bitcast i8* %81 to i16*
  %83 = load i16, i16* %82, align 4
  %84 = zext i16 %83 to i32
  %85 = getelementptr inbounds i8, i8* %74, i64 6
  %86 = bitcast i8* %85 to i16*
  %87 = load i16, i16* %86, align 2
  %88 = zext i16 %87 to i32
  %89 = getelementptr inbounds i8, i8* %74, i64 84
  %90 = bitcast i8* %89 to i16*
  %91 = load i16, i16* %90, align 4
  %92 = and i16 %91, 512
  %93 = icmp eq i16 %92, 0
  %94 = select i1 %93, i32 %72, i32 2
  br label %109

95:                                               ; preds = %76, %65
  %96 = call i32 @FT_Get_PS_Font_Info(%struct.FT_FaceRec_* nonnull %62, %struct.PS_FontInfoRec_* nonnull %11) #15
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %109

98:                                               ; preds = %95
  %99 = getelementptr inbounds %struct.PS_FontInfoRec_, %struct.PS_FontInfoRec_* %11, i64 0, i32 4
  %100 = load i8*, i8** %99, align 8
  %101 = icmp eq i8* %100, null
  br i1 %101, label %109, label %102

102:                                              ; preds = %98
  %103 = call i32 @_Z13SkStrLCSearchPKPKciS0_m(i8** getelementptr inbounds ([25 x %struct.anon], [25 x %struct.anon]* @_ZZNK19SkTypeface_FreeType7Scanner8scanFontEP13SkStreamAssetiP8SkStringP11SkFontStylePbP9SkSTArrayILi4ENS0_14AxisDefinitionELb1EEE13commonWeights, i64 0, i64 0, i32 0), i32 25, i8* nonnull %100, i64 16) #15
  %104 = icmp sgt i32 %103, -1
  br i1 %104, label %105, label %109

105:                                              ; preds = %102
  %106 = sext i32 %103 to i64
  %107 = getelementptr inbounds [25 x %struct.anon], [25 x %struct.anon]* @_ZZNK19SkTypeface_FreeType7Scanner8scanFontEP13SkStreamAssetiP8SkStringP11SkFontStylePbP9SkSTArrayILi4ENS0_14AxisDefinitionELb1EEE13commonWeights, i64 0, i64 %106, i32 1
  %108 = load i32, i32* %107, align 8
  br label %109

109:                                              ; preds = %80, %105, %102, %98, %95
  %110 = phi i32 [ %70, %98 ], [ %70, %95 ], [ %84, %80 ], [ %108, %105 ], [ %70, %102 ]
  %111 = phi i32 [ 5, %98 ], [ 5, %95 ], [ %88, %80 ], [ 5, %105 ], [ 5, %102 ]
  %112 = phi i32 [ %72, %98 ], [ %72, %95 ], [ %94, %80 ], [ %72, %105 ], [ %72, %102 ]
  %113 = icmp eq %class.SkString* %3, null
  br i1 %113, label %117, label %114

114:                                              ; preds = %109
  %115 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %62, i64 0, i32 5
  %116 = load i8*, i8** %115, align 8
  call void @_ZN8SkString3setEPKc(%class.SkString* nonnull %3, i8* %116) #15
  br label %117

117:                                              ; preds = %109, %114
  %118 = icmp eq %class.SkFontStyle* %4, null
  br i1 %118, label %137, label %119

119:                                              ; preds = %117
  %120 = icmp slt i32 %110, 1000
  %121 = select i1 %120, i32 %110, i32 1000
  %122 = icmp sgt i32 %121, 0
  %123 = select i1 %122, i32 %121, i32 0
  %124 = icmp ult i32 %111, 9
  %125 = select i1 %124, i32 %111, i32 9
  %126 = icmp sgt i32 %125, 1
  %127 = select i1 %126, i32 %125, i32 1
  %128 = shl nuw nsw i32 %127, 16
  %129 = add nuw nsw i32 %128, %123
  %130 = icmp slt i32 %112, 2
  %131 = select i1 %130, i32 %112, i32 2
  %132 = icmp sgt i32 %131, 0
  %133 = select i1 %132, i32 %131, i32 0
  %134 = shl nsw i32 %133, 24
  %135 = add nuw nsw i32 %129, %134
  %136 = getelementptr inbounds %class.SkFontStyle, %class.SkFontStyle* %4, i64 0, i32 0
  store i32 %135, i32* %136, align 4
  br label %137

137:                                              ; preds = %117, %119
  %138 = icmp eq i8* %5, null
  br i1 %138, label %145, label %139

139:                                              ; preds = %137
  %140 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %62, i64 0, i32 2
  %141 = load i64, i64* %140, align 8
  %142 = lshr i64 %141, 2
  %143 = trunc i64 %142 to i8
  %144 = and i8 %143, 1
  store i8 %144, i8* %5, align 1
  br label %145

145:                                              ; preds = %137, %139
  %146 = icmp eq %class.SkSTArray* %6, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %145
  %148 = call zeroext i1 @_ZN19SkTypeface_FreeType7Scanner7GetAxesEP11FT_FaceRec_P9SkSTArrayILi4ENS0_14AxisDefinitionELb1EE(%struct.FT_FaceRec_* nonnull %62, %class.SkSTArray* nonnull %6)
  br i1 %148, label %149, label %150

149:                                              ; preds = %145, %147
  br label %150

150:                                              ; preds = %147, %149
  %151 = phi i1 [ true, %149 ], [ false, %147 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %73) #15
  %152 = call i32 @FT_Done_Face(%struct.FT_FaceRec_* nonnull %62) #15
  br label %153

153:                                              ; preds = %54, %18, %150
  %154 = phi i1 [ %151, %150 ], [ false, %54 ], [ false, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %19) #15
  %155 = atomicrmw add i32* %13, i32 1 release
  %156 = icmp slt i32 %155, 0
  br i1 %156, label %157, label %159

157:                                              ; preds = %153
  %158 = getelementptr inbounds %class.SkMutex, %class.SkMutex* %12, i64 0, i32 0
  call void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore* %158, i32 1) #15
  br label %159

159:                                              ; preds = %153, %157
  ret i1 %154
}

declare i32 @_Z13SkStrLCSearchPKPKciS0_m(i8**, i32, i8*, i64) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkTypeface_FreeTypeD2Ev(%class.SkTypeface_FreeType*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %class.SkTypeface_FreeType, %class.SkTypeface_FreeType* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTV19SkTypeface_FreeType, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkTypeface_FreeType, %class.SkTypeface_FreeType* %0, i64 0, i32 2
  tail call void @_ZN18SkCharToGlyphCacheD1Ev(%class.SkCharToGlyphCache* %3) #15
  %4 = getelementptr inbounds %class.SkTypeface_FreeType, %class.SkTypeface_FreeType* %0, i64 0, i32 1
  tail call void @_ZN13SkSharedMutexD1Ev(%class.SkSharedMutex* %4) #15
  %5 = bitcast %class.SkTypeface_FreeType* %0 to %class.SkTypeface*
  tail call void @_ZN10SkTypefaceD2Ev(%class.SkTypeface* %5) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19SkTypeface_FreeTypeD0Ev(%class.SkTypeface_FreeType*) unnamed_addr #9 comdat align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkWeakRefCnt16internal_disposeEv(%class.SkWeakRefCnt*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.SkWeakRefCnt* %0 to void (%class.SkWeakRefCnt*)***
  %3 = load void (%class.SkWeakRefCnt*)**, void (%class.SkWeakRefCnt*)*** %2, align 8
  %4 = getelementptr inbounds void (%class.SkWeakRefCnt*)*, void (%class.SkWeakRefCnt*)** %3, i64 3
  %5 = load void (%class.SkWeakRefCnt*)*, void (%class.SkWeakRefCnt*)** %4, align 8
  tail call void %5(%class.SkWeakRefCnt* %0) #15
  %6 = getelementptr inbounds %class.SkWeakRefCnt, %class.SkWeakRefCnt* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp ne i32 %7, 1
  %9 = icmp eq %class.SkWeakRefCnt* %0, null
  %10 = or i1 %9, %8
  br i1 %10, label %17, label %11

11:                                               ; preds = %1
  %12 = bitcast %class.SkWeakRefCnt* %0 to %class.SkRefCntBase*
  %13 = bitcast %class.SkWeakRefCnt* %0 to void (%class.SkRefCntBase*)***
  %14 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, i64 1
  %16 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %15, align 8
  tail call void %16(%class.SkRefCntBase* nonnull %12) #15
  br label %17

17:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkWeakRefCnt12weak_disposeEv(%class.SkWeakRefCnt*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

declare zeroext i1 @_ZNK10SkTypeface15onComputeBoundsEP6SkRect(%class.SkTypeface*, %struct.SkRect*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK10SkTypeface14onGetCTFontRefEv(%class.SkTypeface*) unnamed_addr #0 comdat align 2 {
  ret i8* null
}

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #5

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #5

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #10

declare void @_ZN11SkSemaphore6osWaitEv(%class.SkSemaphore*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #11

declare zeroext i16 @FT_Get_FSType_Flags(%struct.FT_FaceRec_*) local_unnamed_addr #5

declare i8* @FT_Get_X11_Font_Format(%struct.FT_FaceRec_*) local_unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #12

declare void @_ZN11SkSemaphore8osSignalEi(%class.SkSemaphore*, i32) local_unnamed_addr #5

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15FreeTypeLibraryC2Ev(%class.FreeTypeLibrary*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::tuple", align 4
  %3 = getelementptr inbounds %class.FreeTypeLibrary, %class.FreeTypeLibrary* %0, i64 0, i32 2
  %4 = getelementptr inbounds %class.FreeTypeLibrary, %class.FreeTypeLibrary* %0, i64 0, i32 5
  store i32 0, i32* %4, align 4
  %5 = bitcast %class.FreeTypeLibrary* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 26, i1 false)
  %6 = tail call i32 @FT_New_Library(%struct.FT_MemoryRec_* bitcast ({ i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }* @gFTMemory to %struct.FT_MemoryRec_*), %struct.FT_LibraryRec_** %3) #15
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %22

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.FreeTypeLibrary, %class.FreeTypeLibrary* %0, i64 0, i32 0
  %10 = getelementptr inbounds %class.FreeTypeLibrary, %class.FreeTypeLibrary* %0, i64 0, i32 4
  %11 = getelementptr inbounds %class.FreeTypeLibrary, %class.FreeTypeLibrary* %0, i64 0, i32 3
  %12 = getelementptr inbounds %class.FreeTypeLibrary, %class.FreeTypeLibrary* %0, i64 0, i32 1
  %13 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %3, align 8
  tail call void @FT_Add_Default_Modules(%struct.FT_LibraryRec_* %13) #15
  %14 = bitcast %"class.std::__1::tuple"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %14) #15
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 2, i32 0
  store i32 0, i32* %15, align 4
  store i32 0, i32* %16, align 4
  store i32 0, i32* %17, align 4
  %18 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %3, align 8
  call void @FT_Library_Version(%struct.FT_LibraryRec_* %18, i32* nonnull %15, i32* %16, i32* %17) #15
  store i32 (%struct.FT_FaceRec_*, i32, i64*)* @FT_Get_Var_Design_Coordinates, i32 (%struct.FT_FaceRec_*, i32, i64*)** %9, align 8
  %19 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %3, align 8
  call void @FT_Set_Default_Properties(%struct.FT_LibraryRec_* %19) #15
  store i8 1, i8* %10, align 1
  store i32 (%struct.FT_MM_Var_*, i32, i32*)* @FT_Get_Var_Axis_Flags, i32 (%struct.FT_MM_Var_*, i32, i32*)** %12, align 8
  %20 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %3, align 8
  %21 = call i32 @FT_Library_SetLcdFilter(%struct.FT_LibraryRec_* %20, i32 1) #15
  store i8 1, i8* %11, align 8
  store i32 2, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %14) #15
  br label %22

22:                                               ; preds = %1, %8
  ret void
}

declare void @FT_Library_Version(%struct.FT_LibraryRec_*, i32*, i32*, i32*) local_unnamed_addr #5

declare i32 @FT_Get_Var_Design_Coordinates(%struct.FT_FaceRec_*, i32, i64*) #5

declare void @FT_Set_Default_Properties(%struct.FT_LibraryRec_*) local_unnamed_addr #5

declare i32 @FT_Get_Var_Axis_Flags(%struct.FT_MM_Var_*, i32, i32*) #5

declare i32 @FT_Library_SetLcdFilter(%struct.FT_LibraryRec_*, i32) local_unnamed_addr #5

declare void @_ZN18SkScalerContextRec17setLuminanceColorEj(%struct.SkScalerContextRec*, i32) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #13

declare void @_ZN15SkScalerContextC2E5sk_spI10SkTypefaceERK22SkScalerContextEffectsPK12SkDescriptor(%class.SkScalerContext*, %class.sk_sp.21*, %struct.SkScalerContextEffects* dereferenceable(16), %class.SkDescriptor*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN15SkScalerContextD2Ev(%class.SkScalerContext*) unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #14

declare i32 @FT_Select_Charmap(%struct.FT_FaceRec_*, i32) local_unnamed_addr #5

declare i32 @FT_Done_Face(%struct.FT_FaceRec_*) local_unnamed_addr #5

declare i32 @FT_Set_Var_Design_Coordinates(%struct.FT_FaceRec_*, i32, i64*) local_unnamed_addr #5

declare i32 @FT_New_Size(%struct.FT_FaceRec_*, %struct.FT_SizeRec_**) local_unnamed_addr #5

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #5

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #13

declare void @_ZN13SkSharedMutex13acquireSharedEv(%class.SkSharedMutex*) local_unnamed_addr #5

declare void @_ZN13SkSharedMutex13releaseSharedEv(%class.SkSharedMutex*) local_unnamed_addr #5

declare void @_ZN13SkSharedMutex7acquireEv(%class.SkSharedMutex*) local_unnamed_addr #5

declare void @_ZN13SkSharedMutex7releaseEv(%class.SkSharedMutex*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN11SkSemaphoreD1Ev(%class.SkSemaphore*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN18SkCharToGlyphCacheD1Ev(%class.SkCharToGlyphCache*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN13SkSharedMutexD1Ev(%class.SkSharedMutex*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN10SkTypefaceD2Ev(%class.SkTypeface*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayIN19SkTypeface_FreeType7Scanner14AxisDefinitionELb1EE12checkReallocEiNS3_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %65

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %65, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 16) #15
  %45 = load i64, i64* %4, align 8
  %46 = shl i64 %45, 3
  %47 = and i64 %46, 34359738352
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %35
  %50 = bitcast %class.SkTArray* %0 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %44, i8* align 1 %51, i64 %47, i1 false) #15
  %52 = load i64, i64* %4, align 8
  br label %53

53:                                               ; preds = %35, %49
  %54 = phi i64 [ %45, %35 ], [ %52, %49 ]
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  %57 = bitcast %class.SkTArray* %0 to i8**
  br i1 %56, label %61, label %58

58:                                               ; preds = %53
  %59 = load i8*, i8** %57, align 8
  tail call void @_Z7sk_freePv(i8* %59) #15
  %60 = load i64, i64* %4, align 8
  br label %61

61:                                               ; preds = %53, %58
  %62 = phi i64 [ %60, %58 ], [ %54, %53 ]
  store i8* %44, i8** %57, align 8
  %63 = and i64 %62, -4294967298
  %64 = or i64 %63, 1
  store i64 %64, i64* %4, align 8
  br label %65

65:                                               ; preds = %61, %32, %21
  ret void
}

declare void @_ZN8SkStringC1ERKS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkOTUtils27LocalizedStrings_SingleNameD2Ev(%"class.SkOTUtils::LocalizedStrings_SingleName"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkOTUtils::LocalizedStrings_SingleName", %"class.SkOTUtils::LocalizedStrings_SingleName"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9SkOTUtils27LocalizedStrings_SingleNameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkOTUtils::LocalizedStrings_SingleName", %"class.SkOTUtils::LocalizedStrings_SingleName"* %0, i64 0, i32 2
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %3) #15
  %4 = getelementptr inbounds %"class.SkOTUtils::LocalizedStrings_SingleName", %"class.SkOTUtils::LocalizedStrings_SingleName"* %0, i64 0, i32 1
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %4) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkOTUtils27LocalizedStrings_SingleNameD0Ev(%"class.SkOTUtils::LocalizedStrings_SingleName"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkOTUtils::LocalizedStrings_SingleName", %"class.SkOTUtils::LocalizedStrings_SingleName"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9SkOTUtils27LocalizedStrings_SingleNameE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.SkOTUtils::LocalizedStrings_SingleName", %"class.SkOTUtils::LocalizedStrings_SingleName"* %0, i64 0, i32 2
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %3) #15
  %4 = getelementptr inbounds %"class.SkOTUtils::LocalizedStrings_SingleName", %"class.SkOTUtils::LocalizedStrings_SingleName"* %0, i64 0, i32 1
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %4) #15
  %5 = bitcast %"class.SkOTUtils::LocalizedStrings_SingleName"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN9SkOTUtils27LocalizedStrings_SingleName4nextEPN10SkTypeface15LocalizedStringE(%"class.SkOTUtils::LocalizedStrings_SingleName"*, %"struct.SkTypeface::LocalizedString"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkOTUtils::LocalizedStrings_SingleName", %"class.SkOTUtils::LocalizedStrings_SingleName"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.SkTypeface::LocalizedString", %"struct.SkTypeface::LocalizedString"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(8) %class.SkString* @_ZN8SkStringaSERKS_(%class.SkString* %4, %class.SkString* dereferenceable(8) %3) #15
  %6 = getelementptr inbounds %"class.SkOTUtils::LocalizedStrings_SingleName", %"class.SkOTUtils::LocalizedStrings_SingleName"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.SkTypeface::LocalizedString", %"struct.SkTypeface::LocalizedString"* %1, i64 0, i32 1
  %8 = tail call dereferenceable(8) %class.SkString* @_ZN8SkStringaSERKS_(%class.SkString* %7, %class.SkString* dereferenceable(8) %6) #15
  %9 = getelementptr inbounds %"class.SkOTUtils::LocalizedStrings_SingleName", %"class.SkOTUtils::LocalizedStrings_SingleName"* %0, i64 0, i32 3
  %10 = load i8, i8* %9, align 8, !range !11
  %11 = icmp ne i8 %10, 0
  store i8 0, i8* %9, align 8
  ret i1 %11
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone speculatable }
attributes #14 = { cold noreturn nounwind }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }
attributes #17 = { nounwind readonly }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_Z9sk_ref_spI19SkTypeface_FreeTypeE5sk_spIT_EPS2_: argument 0"}
!5 = distinct !{!5, !"_Z9sk_ref_spI19SkTypeface_FreeTypeE5sk_spIT_EPS2_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_Z9sk_ref_spI19SkTypeface_FreeTypeE5sk_spIT_EPS2_: argument 0"}
!8 = distinct !{!8, !"_Z9sk_ref_spI19SkTypeface_FreeTypeE5sk_spIT_EPS2_"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = !{i8 0, i8 2}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_Z10sk_make_spIN9SkOTUtils27LocalizedStrings_SingleNameEJR8SkStringS3_EE5sk_spIT_EDpOT0_: argument 0"}
!14 = distinct !{!14, !"_Z10sk_make_spIN9SkOTUtils27LocalizedStrings_SingleNameEJR8SkStringS3_EE5sk_spIT_EDpOT0_"}
