; ModuleID = '../../components/security_interstitials/content/origin_policy_interstitial_page.cc'
source_filename = "../../components/security_interstitials/content/origin_policy_interstitial_page.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.security_interstitials::OriginPolicyInterstitialPage" = type <{ %"class.security_interstitials::SecurityInterstitialPage", i32, [4 x i8] }>
%"class.security_interstitials::SecurityInterstitialPage" = type { i32 (...)**, %"class.content::WebContents"*, %class.GURL, i8, i8, i8, %"class.std::__1::unique_ptr.12" }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.GURL* }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.security_interstitials::SecurityInterstitialControllerClient"* }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.security_interstitials::SecurityInterstitialControllerClient" = type { %"class.security_interstitials::ControllerClient", %"class.content::WebContents"*, %class.PrefService*, %"class.std::__1::basic_string", %class.GURL, %"class.std::__1::unique_ptr.21" }
%"class.security_interstitials::ControllerClient" = type { i32 (...)**, %"class.std::__1::unique_ptr.15", %class.GURL }
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.security_interstitials::MetricsHelper"* }
%"class.security_interstitials::MetricsHelper" = type opaque
%class.PrefService = type opaque
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.security_interstitials::SettingsPageHelper"* }
%"class.security_interstitials::SettingsPageHelper" = type opaque
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.30" }
%"union.absl::variant_internal::DestructibleUnionImpl.30" = type { %"union.absl::variant_internal::DestructibleUnionImpl.31" }
%"union.absl::variant_internal::DestructibleUnionImpl.31" = type { %"union.absl::variant_internal::DestructibleUnionImpl.32" }
%"union.absl::variant_internal::DestructibleUnionImpl.32" = type { %"union.absl::variant_internal::DestructibleUnionImpl.33" }
%"union.absl::variant_internal::DestructibleUnionImpl.33" = type { %"class.std::__1::basic_string" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%struct.anon.57 = type { i8*, i32 }
%"class.std::__1::vector.58" = type { %"class.std::__1::__vector_base.59" }
%"class.std::__1::__vector_base.59" = type { %"class.std::__1::basic_string.60"*, %"class.std::__1::basic_string.60"*, %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::basic_string.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.63 }
%union.anon.63 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.std::__1::basic_string.60"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.74 }
%union.anon.74 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.64 }
%struct.anon.64 = type { %"struct.std::__1::__padding.65", i8 }
%"struct.std::__1::__padding.65" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.content::NavigationController" = type { i32 (...)** }
%"class.std::__1::vector.76" = type opaque
%"class.content::BrowserContext" = type opaque

@_ZTVN22security_interstitials28OriginPolicyInterstitialPageE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.security_interstitials::OriginPolicyInterstitialPage"*)* @_ZN22security_interstitials28OriginPolicyInterstitialPageD2Ev to i8*), i8* bitcast (void (%"class.security_interstitials::OriginPolicyInterstitialPage"*)* @_ZN22security_interstitials28OriginPolicyInterstitialPageD0Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.security_interstitials::SecurityInterstitialPage"*)* @_ZN22security_interstitials24SecurityInterstitialPage15GetHTMLContentsEv to i8*), i8* bitcast (void (%"class.security_interstitials::OriginPolicyInterstitialPage"*)* @_ZN22security_interstitials28OriginPolicyInterstitialPage21OnInterstitialClosingEv to i8*), i8* bitcast (i1 (%"class.security_interstitials::SecurityInterstitialPage"*)* @_ZNK22security_interstitials24SecurityInterstitialPage16ShouldDisplayURLEv to i8*), i8* bitcast (void (%"class.security_interstitials::OriginPolicyInterstitialPage"*, %"class.std::__1::basic_string"*)* @_ZN22security_interstitials28OriginPolicyInterstitialPage15CommandReceivedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE to i8*), i8* bitcast (i8* (%"class.security_interstitials::SecurityInterstitialPage"*)* @_ZN22security_interstitials24SecurityInterstitialPage17GetTypeForTestingEv to i8*), i8* bitcast (void (%"class.security_interstitials::OriginPolicyInterstitialPage"*, %"class.base::DictionaryValue"*)* @_ZN22security_interstitials28OriginPolicyInterstitialPage27PopulateInterstitialStringsEPN4base15DictionaryValueE to i8*), i8* bitcast (i32 (%"class.security_interstitials::SecurityInterstitialPage"*)* @_ZN22security_interstitials24SecurityInterstitialPage17GetHTMLTemplateIdEv to i8*)] }, align 8
@.str = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"ORIGIN_POLICY\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"overridable\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"closeDetails\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"explanationParagraph\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"finalParagraph\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"heading\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"openDetails\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"optInLink\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"enhancedProtectionMessage\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"primaryButtonText\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"primaryParagraph\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"recurrentErrorParagraph\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"tabTitle\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"hide_primary_button\00", align 1
@.str.15 = private unnamed_addr constant [31 x i8] c"show_recurrent_error_paragraph\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.19 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"s\00", align 1

@_ZN22security_interstitials28OriginPolicyInterstitialPageC1EPN7content11WebContentsERK4GURLNSt3__110unique_ptrINS_36SecurityInterstitialControllerClientENS7_14default_deleteIS9_EEEEN7network17OriginPolicyStateE = hidden unnamed_addr alias void (%"class.security_interstitials::OriginPolicyInterstitialPage"*, %"class.content::WebContents"*, %class.GURL*, %"class.security_interstitials::SecurityInterstitialControllerClient"*, i32), void (%"class.security_interstitials::OriginPolicyInterstitialPage"*, %"class.content::WebContents"*, %class.GURL*, %"class.security_interstitials::SecurityInterstitialControllerClient"*, i32)* @_ZN22security_interstitials28OriginPolicyInterstitialPageC2EPN7content11WebContentsERK4GURLNSt3__110unique_ptrINS_36SecurityInterstitialControllerClientENS7_14default_deleteIS9_EEEEN7network17OriginPolicyStateE
@_ZN22security_interstitials28OriginPolicyInterstitialPageD1Ev = hidden unnamed_addr alias void (%"class.security_interstitials::OriginPolicyInterstitialPage"*), void (%"class.security_interstitials::OriginPolicyInterstitialPage"*)* @_ZN22security_interstitials28OriginPolicyInterstitialPageD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22security_interstitials28OriginPolicyInterstitialPageC2EPN7content11WebContentsERK4GURLNSt3__110unique_ptrINS_36SecurityInterstitialControllerClientENS7_14default_deleteIS9_EEEEN7network17OriginPolicyStateE(%"class.security_interstitials::OriginPolicyInterstitialPage"*, %"class.content::WebContents"*, %class.GURL* dereferenceable(120), %"class.security_interstitials::SecurityInterstitialControllerClient"*, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.security_interstitials::OriginPolicyInterstitialPage", %"class.security_interstitials::OriginPolicyInterstitialPage"* %0, i64 0, i32 0
  tail call void @_ZN22security_interstitials24SecurityInterstitialPageC2EPN7content11WebContentsERK4GURLNSt3__110unique_ptrINS_36SecurityInterstitialControllerClientENS7_14default_deleteIS9_EEEE(%"class.security_interstitials::SecurityInterstitialPage"* %6, %"class.content::WebContents"* %1, %class.GURL* dereferenceable(120) %2, %"class.security_interstitials::SecurityInterstitialControllerClient"* %3) #10
  %7 = getelementptr inbounds %"class.security_interstitials::OriginPolicyInterstitialPage", %"class.security_interstitials::OriginPolicyInterstitialPage"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN22security_interstitials28OriginPolicyInterstitialPageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.security_interstitials::OriginPolicyInterstitialPage", %"class.security_interstitials::OriginPolicyInterstitialPage"* %0, i64 0, i32 1
  store i32 %4, i32* %8, align 8
  ret void
}

declare void @_ZN22security_interstitials24SecurityInterstitialPageC2EPN7content11WebContentsERK4GURLNSt3__110unique_ptrINS_36SecurityInterstitialControllerClientENS7_14default_deleteIS9_EEEE(%"class.security_interstitials::SecurityInterstitialPage"*, %"class.content::WebContents"*, %class.GURL* dereferenceable(120), %"class.security_interstitials::SecurityInterstitialControllerClient"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN22security_interstitials24SecurityInterstitialPageD2Ev(%"class.security_interstitials::SecurityInterstitialPage"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22security_interstitials28OriginPolicyInterstitialPageD2Ev(%"class.security_interstitials::OriginPolicyInterstitialPage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.security_interstitials::OriginPolicyInterstitialPage", %"class.security_interstitials::OriginPolicyInterstitialPage"* %0, i64 0, i32 0
  tail call void @_ZN22security_interstitials24SecurityInterstitialPageD2Ev(%"class.security_interstitials::SecurityInterstitialPage"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22security_interstitials28OriginPolicyInterstitialPageD0Ev(%"class.security_interstitials::OriginPolicyInterstitialPage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.security_interstitials::OriginPolicyInterstitialPage", %"class.security_interstitials::OriginPolicyInterstitialPage"* %0, i64 0, i32 0
  tail call void @_ZN22security_interstitials24SecurityInterstitialPageD2Ev(%"class.security_interstitials::SecurityInterstitialPage"* %2) #10
  %3 = bitcast %"class.security_interstitials::OriginPolicyInterstitialPage"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN22security_interstitials28OriginPolicyInterstitialPage21OnInterstitialClosingEv(%"class.security_interstitials::OriginPolicyInterstitialPage"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22security_interstitials28OriginPolicyInterstitialPage27PopulateInterstitialStringsEPN4base15DictionaryValueE(%"class.security_interstitials::OriginPolicyInterstitialPage"*, %"class.base::DictionaryValue"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca [11 x %struct.anon.57], align 16
  %5 = alloca %"class.std::__1::vector.58", align 8
  %6 = alloca [2 x %"class.std::__1::basic_string.60"], align 8
  %7 = alloca %class.GURL, align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.url::Origin", align 8
  %10 = alloca %class.GURL, align 8
  %11 = alloca %"class.std::__1::basic_string.60", align 8
  %12 = alloca %"class.std::__1::basic_string.60", align 8
  %13 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i64 13) #10
  %14 = tail call %"class.base::Value"* @_ZN4base15DictionaryValue10SetBooleanENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::DictionaryValue"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i64 11, i1 zeroext true) #10
  %15 = getelementptr inbounds %"class.security_interstitials::OriginPolicyInterstitialPage", %"class.security_interstitials::OriginPolicyInterstitialPage"* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 2
  %18 = select i1 %17, i32 20943, i32 0
  %19 = icmp eq i32 %16, 1
  %20 = select i1 %19, i32 20942, i32 %18
  %21 = bitcast [11 x %struct.anon.57]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %21) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -86, i64 176, i1 false)
  %22 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 0
  %23 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 0, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8** %23, align 16
  %24 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 0, i32 1
  store i32 20945, i32* %24, align 8
  %25 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 1, i32 0
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i8** %25, align 16
  %26 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 1, i32 1
  store i32 %20, i32* %26, align 8
  %27 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 2, i32 0
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i8** %27, align 16
  %28 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 2, i32 1
  store i32 20944, i32* %28, align 8
  %29 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 3, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8** %29, align 16
  %30 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 3, i32 1
  store i32 20937, i32* %30, align 8
  %31 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 4, i32 0
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i8** %31, align 16
  %32 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 4, i32 1
  store i32 20941, i32* %32, align 8
  %33 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 5, i32 0
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i8** %33, align 16
  %34 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 5, i32 1
  store i32 20899, i32* %34, align 8
  %35 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 6, i32 0
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i8** %35, align 16
  %36 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 6, i32 1
  store i32 20900, i32* %36, align 8
  %37 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 7, i32 0
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8** %37, align 16
  %38 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 7, i32 1
  store i32 20940, i32* %38, align 8
  %39 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 8, i32 0
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8** %39, align 16
  %40 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 8, i32 1
  store i32 20938, i32* %40, align 8
  %41 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 9, i32 0
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i8** %41, align 16
  %42 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 9, i32 1
  store i32 20939, i32* %42, align 8
  %43 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 10, i32 0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i8** %43, align 16
  %44 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 10, i32 1
  store i32 20936, i32* %44, align 8
  %45 = bitcast %"class.std::__1::vector.58"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #10
  %46 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %5, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %5, i64 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.std::__1::vector.58", %"class.std::__1::vector.58"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast [2 x %"class.std::__1::basic_string.60"]* %6 to i8*
  %50 = bitcast %"class.std::__1::vector.58"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %49) #10
  %51 = getelementptr inbounds [2 x %"class.std::__1::basic_string.60"], [2 x %"class.std::__1::basic_string.60"]* %6, i64 0, i64 0
  %52 = bitcast %class.GURL* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %52) #10
  %53 = getelementptr inbounds %"class.security_interstitials::OriginPolicyInterstitialPage", %"class.security_interstitials::OriginPolicyInterstitialPage"* %0, i64 0, i32 0
  call void @_ZNK22security_interstitials24SecurityInterstitialPage11request_urlEv(%class.GURL* nonnull sret %7, %"class.security_interstitials::SecurityInterstitialPage"* %53) #10
  %54 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL* nonnull %7) #10
  %55 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  %62 = select i1 %58, i8* %60, i8* %61
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = zext i8 %57 to i64
  %66 = select i1 %58, i64 %64, i64 %65
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.60"* nonnull sret %51, i8* %62, i64 %66) #10
  %67 = getelementptr inbounds [2 x %"class.std::__1::basic_string.60"], [2 x %"class.std::__1::basic_string.60"]* %6, i64 0, i64 1
  %68 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #10
  %69 = bitcast %"class.url::Origin"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %69) #10
  %70 = bitcast %class.GURL* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %70) #10
  call void @_ZNK22security_interstitials24SecurityInterstitialPage11request_urlEv(%class.GURL* nonnull sret %10, %"class.security_interstitials::SecurityInterstitialPage"* %53) #10
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %9, %class.GURL* nonnull dereferenceable(120) %10) #10
  call void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.url::Origin"* nonnull %9) #10
  %71 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = select i1 %74, i8* %76, i8* %68
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = zext i8 %73 to i64
  %81 = select i1 %74, i64 %79, i64 %80
  call void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.60"* sret %67, i8* %77, i64 %81) #10
  %82 = call i8* @_Znwm(i64 48) #11
  %83 = bitcast %"class.std::__1::basic_string.60"** %47 to i8**
  store i8* %82, i8** %83, align 8
  %84 = bitcast %"class.std::__1::vector.58"* %5 to i8**
  store i8* %82, i8** %84, align 8
  %85 = getelementptr inbounds i8, i8* %82, i64 48
  %86 = bitcast %"class.std::__1::basic_string.60"** %48 to i8**
  store i8* %85, i8** %86, align 8
  %87 = bitcast %"class.std::__1::basic_string.60"** %47 to i64*
  %88 = bitcast [2 x %"class.std::__1::basic_string.60"]* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %88, i64 0, i32 1, i32 1
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %94, label %92

92:                                               ; preds = %2
  %93 = bitcast [2 x %"class.std::__1::basic_string.60"]* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %82, i8* nonnull align 8 %93, i64 24, i1 false) #10
  br label %274

94:                                               ; preds = %2
  %95 = getelementptr inbounds [2 x %"class.std::__1::basic_string.60"], [2 x %"class.std::__1::basic_string.60"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i16*, i16** %95, align 8
  %97 = bitcast i16* %96 to i8*
  %98 = getelementptr inbounds [2 x %"class.std::__1::basic_string.60"], [2 x %"class.std::__1::basic_string.60"]* %6, i64 0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = icmp ult i64 %99, 11
  br i1 %100, label %101, label %104

101:                                              ; preds = %94
  %102 = trunc i64 %99 to i8
  %103 = getelementptr inbounds i8, i8* %82, i64 23
  store i8 %102, i8* %103, align 1
  br label %123

104:                                              ; preds = %94
  %105 = icmp ugt i64 %99, 9223372036854775791
  br i1 %105, label %106, label %109

106:                                              ; preds = %424, %104
  %107 = phi i8* [ %82, %104 ], [ %276, %424 ]
  %108 = bitcast i8* %107 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %108) #12
  unreachable

109:                                              ; preds = %104
  %110 = add nuw nsw i64 %99, 8
  %111 = and i64 %110, -8
  %112 = icmp slt i64 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %426, %109
  call void @abort() #12
  unreachable

114:                                              ; preds = %109
  %115 = shl i64 %111, 1
  %116 = call i8* @_Znwm(i64 %115) #11
  %117 = bitcast i8* %82 to i8**
  store i8* %116, i8** %117, align 8
  %118 = or i64 %111, -9223372036854775808
  %119 = getelementptr inbounds i8, i8* %82, i64 16
  %120 = bitcast i8* %119 to i64*
  store i64 %118, i64* %120, align 8
  %121 = getelementptr inbounds i8, i8* %82, i64 8
  %122 = bitcast i8* %121 to i64*
  store i64 %99, i64* %122, align 8
  br label %123

123:                                              ; preds = %114, %101
  %124 = phi i8* [ %82, %101 ], [ %116, %114 ]
  %125 = bitcast i8* %124 to i16*
  %126 = add nuw nsw i64 %99, 1
  %127 = add i64 %99, 1
  %128 = icmp ult i64 %127, 16
  br i1 %128, label %221, label %129

129:                                              ; preds = %123
  %130 = shl i64 %99, 1
  %131 = add i64 %130, 2
  %132 = getelementptr i8, i8* %124, i64 %131
  %133 = add i64 %99, 1
  %134 = getelementptr i16, i16* %96, i64 %133
  %135 = bitcast i16* %134 to i8*
  %136 = icmp ult i8* %124, %135
  %137 = icmp ugt i8* %132, %97
  %138 = and i1 %136, %137
  br i1 %138, label %221, label %139

139:                                              ; preds = %129
  %140 = and i64 %127, -16
  %141 = sub i64 %126, %140
  %142 = getelementptr i16, i16* %96, i64 %140
  %143 = getelementptr i16, i16* %125, i64 %140
  %144 = add i64 %140, -16
  %145 = lshr exact i64 %144, 4
  %146 = add nuw nsw i64 %145, 1
  %147 = and i64 %146, 3
  %148 = icmp ult i64 %144, 48
  br i1 %148, label %200, label %149

149:                                              ; preds = %139
  %150 = sub nsw i64 %146, %147
  br label %151

151:                                              ; preds = %151, %149
  %152 = phi i64 [ 0, %149 ], [ %197, %151 ]
  %153 = phi i64 [ %150, %149 ], [ %198, %151 ]
  %154 = getelementptr i16, i16* %96, i64 %152
  %155 = getelementptr i16, i16* %125, i64 %152
  %156 = bitcast i16* %154 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !2
  %158 = getelementptr i16, i16* %154, i64 8
  %159 = bitcast i16* %158 to <8 x i16>*
  %160 = load <8 x i16>, <8 x i16>* %159, align 2, !alias.scope !2
  %161 = bitcast i16* %155 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %161, align 2, !alias.scope !5, !noalias !2
  %162 = getelementptr i16, i16* %155, i64 8
  %163 = bitcast i16* %162 to <8 x i16>*
  store <8 x i16> %160, <8 x i16>* %163, align 2, !alias.scope !5, !noalias !2
  %164 = or i64 %152, 16
  %165 = getelementptr i16, i16* %96, i64 %164
  %166 = getelementptr i16, i16* %125, i64 %164
  %167 = bitcast i16* %165 to <8 x i16>*
  %168 = load <8 x i16>, <8 x i16>* %167, align 2, !alias.scope !2
  %169 = getelementptr i16, i16* %165, i64 8
  %170 = bitcast i16* %169 to <8 x i16>*
  %171 = load <8 x i16>, <8 x i16>* %170, align 2, !alias.scope !2
  %172 = bitcast i16* %166 to <8 x i16>*
  store <8 x i16> %168, <8 x i16>* %172, align 2, !alias.scope !5, !noalias !2
  %173 = getelementptr i16, i16* %166, i64 8
  %174 = bitcast i16* %173 to <8 x i16>*
  store <8 x i16> %171, <8 x i16>* %174, align 2, !alias.scope !5, !noalias !2
  %175 = or i64 %152, 32
  %176 = getelementptr i16, i16* %96, i64 %175
  %177 = getelementptr i16, i16* %125, i64 %175
  %178 = bitcast i16* %176 to <8 x i16>*
  %179 = load <8 x i16>, <8 x i16>* %178, align 2, !alias.scope !2
  %180 = getelementptr i16, i16* %176, i64 8
  %181 = bitcast i16* %180 to <8 x i16>*
  %182 = load <8 x i16>, <8 x i16>* %181, align 2, !alias.scope !2
  %183 = bitcast i16* %177 to <8 x i16>*
  store <8 x i16> %179, <8 x i16>* %183, align 2, !alias.scope !5, !noalias !2
  %184 = getelementptr i16, i16* %177, i64 8
  %185 = bitcast i16* %184 to <8 x i16>*
  store <8 x i16> %182, <8 x i16>* %185, align 2, !alias.scope !5, !noalias !2
  %186 = or i64 %152, 48
  %187 = getelementptr i16, i16* %96, i64 %186
  %188 = getelementptr i16, i16* %125, i64 %186
  %189 = bitcast i16* %187 to <8 x i16>*
  %190 = load <8 x i16>, <8 x i16>* %189, align 2, !alias.scope !2
  %191 = getelementptr i16, i16* %187, i64 8
  %192 = bitcast i16* %191 to <8 x i16>*
  %193 = load <8 x i16>, <8 x i16>* %192, align 2, !alias.scope !2
  %194 = bitcast i16* %188 to <8 x i16>*
  store <8 x i16> %190, <8 x i16>* %194, align 2, !alias.scope !5, !noalias !2
  %195 = getelementptr i16, i16* %188, i64 8
  %196 = bitcast i16* %195 to <8 x i16>*
  store <8 x i16> %193, <8 x i16>* %196, align 2, !alias.scope !5, !noalias !2
  %197 = add i64 %152, 64
  %198 = add i64 %153, -4
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %151, !llvm.loop !7

200:                                              ; preds = %151, %139
  %201 = phi i64 [ 0, %139 ], [ %197, %151 ]
  %202 = icmp eq i64 %147, 0
  br i1 %202, label %219, label %203

203:                                              ; preds = %200, %203
  %204 = phi i64 [ %216, %203 ], [ %201, %200 ]
  %205 = phi i64 [ %217, %203 ], [ %147, %200 ]
  %206 = getelementptr i16, i16* %96, i64 %204
  %207 = getelementptr i16, i16* %125, i64 %204
  %208 = bitcast i16* %206 to <8 x i16>*
  %209 = load <8 x i16>, <8 x i16>* %208, align 2, !alias.scope !2
  %210 = getelementptr i16, i16* %206, i64 8
  %211 = bitcast i16* %210 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2, !alias.scope !2
  %213 = bitcast i16* %207 to <8 x i16>*
  store <8 x i16> %209, <8 x i16>* %213, align 2, !alias.scope !5, !noalias !2
  %214 = getelementptr i16, i16* %207, i64 8
  %215 = bitcast i16* %214 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %215, align 2, !alias.scope !5, !noalias !2
  %216 = add i64 %204, 16
  %217 = add i64 %205, -1
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %219, label %203, !llvm.loop !9

219:                                              ; preds = %203, %200
  %220 = icmp eq i64 %127, %140
  br i1 %220, label %274, label %221

221:                                              ; preds = %219, %129, %123
  %222 = phi i64 [ %126, %129 ], [ %126, %123 ], [ %141, %219 ]
  %223 = phi i16* [ %96, %129 ], [ %96, %123 ], [ %142, %219 ]
  %224 = phi i16* [ %125, %129 ], [ %125, %123 ], [ %143, %219 ]
  %225 = add i64 %222, -1
  %226 = and i64 %222, 7
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %239, label %228

228:                                              ; preds = %221, %228
  %229 = phi i64 [ %234, %228 ], [ %222, %221 ]
  %230 = phi i16* [ %236, %228 ], [ %223, %221 ]
  %231 = phi i16* [ %235, %228 ], [ %224, %221 ]
  %232 = phi i64 [ %237, %228 ], [ %226, %221 ]
  %233 = load i16, i16* %230, align 2
  store i16 %233, i16* %231, align 2
  %234 = add i64 %229, -1
  %235 = getelementptr inbounds i16, i16* %231, i64 1
  %236 = getelementptr inbounds i16, i16* %230, i64 1
  %237 = add i64 %232, -1
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %239, label %228, !llvm.loop !11

239:                                              ; preds = %228, %221
  %240 = phi i64 [ %222, %221 ], [ %234, %228 ]
  %241 = phi i16* [ %223, %221 ], [ %236, %228 ]
  %242 = phi i16* [ %224, %221 ], [ %235, %228 ]
  %243 = icmp ult i64 %225, 7
  br i1 %243, label %274, label %244

244:                                              ; preds = %239, %244
  %245 = phi i64 [ %270, %244 ], [ %240, %239 ]
  %246 = phi i16* [ %272, %244 ], [ %241, %239 ]
  %247 = phi i16* [ %271, %244 ], [ %242, %239 ]
  %248 = load i16, i16* %246, align 2
  store i16 %248, i16* %247, align 2
  %249 = getelementptr inbounds i16, i16* %247, i64 1
  %250 = getelementptr inbounds i16, i16* %246, i64 1
  %251 = load i16, i16* %250, align 2
  store i16 %251, i16* %249, align 2
  %252 = getelementptr inbounds i16, i16* %247, i64 2
  %253 = getelementptr inbounds i16, i16* %246, i64 2
  %254 = load i16, i16* %253, align 2
  store i16 %254, i16* %252, align 2
  %255 = getelementptr inbounds i16, i16* %247, i64 3
  %256 = getelementptr inbounds i16, i16* %246, i64 3
  %257 = load i16, i16* %256, align 2
  store i16 %257, i16* %255, align 2
  %258 = getelementptr inbounds i16, i16* %247, i64 4
  %259 = getelementptr inbounds i16, i16* %246, i64 4
  %260 = load i16, i16* %259, align 2
  store i16 %260, i16* %258, align 2
  %261 = getelementptr inbounds i16, i16* %247, i64 5
  %262 = getelementptr inbounds i16, i16* %246, i64 5
  %263 = load i16, i16* %262, align 2
  store i16 %263, i16* %261, align 2
  %264 = getelementptr inbounds i16, i16* %247, i64 6
  %265 = getelementptr inbounds i16, i16* %246, i64 6
  %266 = load i16, i16* %265, align 2
  store i16 %266, i16* %264, align 2
  %267 = getelementptr inbounds i16, i16* %247, i64 7
  %268 = getelementptr inbounds i16, i16* %246, i64 7
  %269 = load i16, i16* %268, align 2
  store i16 %269, i16* %267, align 2
  %270 = add i64 %245, -8
  %271 = getelementptr inbounds i16, i16* %247, i64 8
  %272 = getelementptr inbounds i16, i16* %246, i64 8
  %273 = icmp eq i64 %270, 0
  br i1 %273, label %274, label %244, !llvm.loop !12

274:                                              ; preds = %239, %244, %219, %92
  %275 = getelementptr inbounds [2 x %"class.std::__1::basic_string.60"], [2 x %"class.std::__1::basic_string.60"]* %6, i64 0, i64 1
  %276 = getelementptr inbounds i8, i8* %82, i64 24
  %277 = bitcast %"class.std::__1::basic_string.60"* %275 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %278 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %277, i64 0, i32 1, i32 1
  %279 = load i8, i8* %278, align 1
  %280 = icmp slt i8 %279, 0
  br i1 %280, label %417, label %413

281:                                              ; preds = %593
  %282 = getelementptr inbounds [2 x %"class.std::__1::basic_string.60"], [2 x %"class.std::__1::basic_string.60"]* %6, i64 0, i64 1
  %283 = bitcast %"class.std::__1::basic_string.60"* %282 to i8**
  %284 = load i8*, i8** %283, align 8
  call void @_ZdlPv(i8* %284) #11
  br label %285

285:                                              ; preds = %413, %593, %281
  %286 = bitcast [2 x %"class.std::__1::basic_string.60"]* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %287 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %286, i64 0, i32 1, i32 1
  %288 = load i8, i8* %287, align 1
  %289 = icmp slt i8 %288, 0
  br i1 %289, label %407, label %410

290:                                              ; preds = %410
  %291 = load i8*, i8** %75, align 8
  call void @_ZdlPv(i8* %291) #11
  br label %292

292:                                              ; preds = %410, %290
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %9) #10
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %70) #10
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %69) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #10
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %52) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %49) #10
  %293 = getelementptr inbounds [11 x %struct.anon.57], [11 x %struct.anon.57]* %4, i64 0, i64 11
  %294 = bitcast %"class.logging::CheckError"* %3 to i8*
  %295 = bitcast %"class.std::__1::basic_string.60"* %11 to i8*
  %296 = bitcast %"class.std::__1::basic_string.60"* %12 to i8*
  %297 = bitcast %"class.std::__1::basic_string.60"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %298 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %297, i64 0, i32 1, i32 1
  %299 = getelementptr inbounds %"class.std::__1::basic_string.60", %"class.std::__1::basic_string.60"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %300 = bitcast %"class.std::__1::basic_string.60"* %12 to i16*
  %301 = getelementptr inbounds %"class.std::__1::basic_string.60", %"class.std::__1::basic_string.60"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %302 = bitcast %"class.std::__1::basic_string.60"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %303 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %302, i64 0, i32 1, i32 1
  %304 = bitcast %"class.std::__1::basic_string.60"* %11 to i8**
  %305 = bitcast %"class.std::__1::basic_string.60"* %12 to i8**
  br label %318

306:                                              ; preds = %348
  %307 = call %"class.content::WebContents"* @_ZNK22security_interstitials24SecurityInterstitialPage12web_contentsEv(%"class.security_interstitials::SecurityInterstitialPage"* %53) #10
  %308 = bitcast %"class.content::WebContents"* %307 to %"class.content::NavigationController"* (%"class.content::WebContents"*)***
  %309 = load %"class.content::NavigationController"* (%"class.content::WebContents"*)**, %"class.content::NavigationController"* (%"class.content::WebContents"*)*** %308, align 8
  %310 = getelementptr inbounds %"class.content::NavigationController"* (%"class.content::WebContents"*)*, %"class.content::NavigationController"* (%"class.content::WebContents"*)** %309, i64 5
  %311 = load %"class.content::NavigationController"* (%"class.content::WebContents"*)*, %"class.content::NavigationController"* (%"class.content::WebContents"*)** %310, align 8
  %312 = call dereferenceable(8) %"class.content::NavigationController"* %311(%"class.content::WebContents"* %307) #10
  %313 = bitcast %"class.content::NavigationController"* %312 to i1 (%"class.content::NavigationController"*)***
  %314 = load i1 (%"class.content::NavigationController"*)**, i1 (%"class.content::NavigationController"*)*** %313, align 8
  %315 = getelementptr inbounds i1 (%"class.content::NavigationController"*)*, i1 (%"class.content::NavigationController"*)** %314, i64 21
  %316 = load i1 (%"class.content::NavigationController"*)*, i1 (%"class.content::NavigationController"*)** %315, align 8
  %317 = call zeroext i1 %316(%"class.content::NavigationController"* %312) #10
  br i1 %317, label %351, label %366

318:                                              ; preds = %292, %348
  %319 = phi %struct.anon.57* [ %22, %292 ], [ %349, %348 ]
  %320 = getelementptr inbounds %struct.anon.57, %struct.anon.57* %319, i64 0, i32 0
  %321 = load i8*, i8** %320, align 8
  %322 = icmp eq i8* %321, null
  br i1 %322, label %325, label %323

323:                                              ; preds = %318
  %324 = call i64 @strlen(i8* nonnull %321) #10
  br label %327

325:                                              ; preds = %318
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %294) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.19, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #10
  %326 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %294) #10
  br label %327

327:                                              ; preds = %323, %325
  %328 = phi i64 [ 0, %325 ], [ %324, %323 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %295) #10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %296) #10
  %329 = getelementptr inbounds %struct.anon.57, %struct.anon.57* %319, i64 0, i32 1
  %330 = load i32, i32* %329, align 8
  call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.60"* nonnull sret %12, i32 %330) #10
  %331 = load i8, i8* %298, align 1
  %332 = icmp slt i8 %331, 0
  %333 = load i16*, i16** %299, align 8
  %334 = select i1 %332, i16* %333, i16* %300
  %335 = load i64, i64* %301, align 8
  %336 = zext i8 %331 to i64
  %337 = select i1 %332, i64 %335, i64 %336
  call void @_ZN4base25ReplaceStringPlaceholdersENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS1_6vectorINS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEENS7_IS9_EEEEPNS5_ImNS7_ImEEEE(%"class.std::__1::basic_string.60"* nonnull sret %11, i16* %334, i64 %337, %"class.std::__1::vector.58"* nonnull dereferenceable(24) %5, %"class.std::__1::vector.76"* null) #10
  %338 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"* %1, i8* %321, i64 %328, %"class.std::__1::basic_string.60"* nonnull dereferenceable(24) %11) #10
  %339 = load i8, i8* %303, align 1
  %340 = icmp slt i8 %339, 0
  br i1 %340, label %341, label %343

341:                                              ; preds = %327
  %342 = load i8*, i8** %304, align 8
  call void @_ZdlPv(i8* %342) #11
  br label %343

343:                                              ; preds = %327, %341
  %344 = load i8, i8* %298, align 1
  %345 = icmp slt i8 %344, 0
  br i1 %345, label %346, label %348

346:                                              ; preds = %343
  %347 = load i8*, i8** %305, align 8
  call void @_ZdlPv(i8* %347) #11
  br label %348

348:                                              ; preds = %343, %346
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %296) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %295) #10
  %349 = getelementptr inbounds %struct.anon.57, %struct.anon.57* %319, i64 1
  %350 = icmp eq %struct.anon.57* %349, %293
  br i1 %350, label %306, label %318

351:                                              ; preds = %306
  %352 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %1, i64 0, i32 0
  %353 = call %"class.std::__1::basic_string"* @_ZN4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %352, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i64 17) #10
  %354 = bitcast %"class.std::__1::basic_string"* %353 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %355 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %354, i64 0, i32 1, i32 0
  %356 = load i8, i8* %355, align 1
  %357 = icmp slt i8 %356, 0
  br i1 %357, label %358, label %361

358:                                              ; preds = %351
  %359 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %353, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %360 = load i64, i64* %359, align 8
  br label %363

361:                                              ; preds = %351
  %362 = zext i8 %356 to i64
  br label %363

363:                                              ; preds = %358, %361
  %364 = phi i64 [ %360, %358 ], [ %362, %361 ]
  %365 = icmp eq i64 %364, 0
  br label %366

366:                                              ; preds = %363, %306
  %367 = phi i1 [ true, %306 ], [ %365, %363 ]
  %368 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetBooleanENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::DictionaryValue"* %1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0), i64 19, i1 zeroext %367) #10
  %369 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %1, i64 0, i32 0
  %370 = call %"class.std::__1::basic_string"* @_ZN4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"* %369, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0), i64 23) #10
  %371 = bitcast %"class.std::__1::basic_string"* %370 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %372 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %371, i64 0, i32 1, i32 0
  %373 = load i8, i8* %372, align 1
  %374 = icmp slt i8 %373, 0
  br i1 %374, label %375, label %378

375:                                              ; preds = %366
  %376 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %370, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %377 = load i64, i64* %376, align 8
  br label %380

378:                                              ; preds = %366
  %379 = zext i8 %373 to i64
  br label %380

380:                                              ; preds = %375, %378
  %381 = phi i64 [ %377, %375 ], [ %379, %378 ]
  %382 = icmp ne i64 %381, 0
  %383 = call %"class.base::Value"* @_ZN4base15DictionaryValue10SetBooleanENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::DictionaryValue"* %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i64 0, i64 0), i64 30, i1 zeroext %382) #10
  %384 = load %"class.std::__1::basic_string.60"*, %"class.std::__1::basic_string.60"** %46, align 8
  %385 = icmp eq %"class.std::__1::basic_string.60"* %384, null
  br i1 %385, label %406, label %386

386:                                              ; preds = %380
  %387 = bitcast %"class.std::__1::basic_string.60"* %384 to i8*
  %388 = load %"class.std::__1::basic_string.60"*, %"class.std::__1::basic_string.60"** %47, align 8
  %389 = icmp eq %"class.std::__1::basic_string.60"* %388, %384
  br i1 %389, label %404, label %390

390:                                              ; preds = %386, %400
  %391 = phi %"class.std::__1::basic_string.60"* [ %392, %400 ], [ %388, %386 ]
  %392 = getelementptr inbounds %"class.std::__1::basic_string.60", %"class.std::__1::basic_string.60"* %391, i64 -1
  %393 = bitcast %"class.std::__1::basic_string.60"* %392 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %394 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %393, i64 0, i32 1, i32 1
  %395 = load i8, i8* %394, align 1
  %396 = icmp slt i8 %395, 0
  br i1 %396, label %397, label %400

397:                                              ; preds = %390
  %398 = bitcast %"class.std::__1::basic_string.60"* %392 to i8**
  %399 = load i8*, i8** %398, align 8
  call void @_ZdlPv(i8* %399) #11
  br label %400

400:                                              ; preds = %397, %390
  %401 = icmp eq %"class.std::__1::basic_string.60"* %392, %384
  br i1 %401, label %402, label %390

402:                                              ; preds = %400
  %403 = load i8*, i8** %84, align 8
  br label %404

404:                                              ; preds = %402, %386
  %405 = phi i8* [ %403, %402 ], [ %387, %386 ]
  store %"class.std::__1::basic_string.60"* %384, %"class.std::__1::basic_string.60"** %47, align 8
  call void @_ZdlPv(i8* %405) #11
  br label %406

406:                                              ; preds = %380, %404
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #10
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %21) #10
  ret void

407:                                              ; preds = %285
  %408 = bitcast [2 x %"class.std::__1::basic_string.60"]* %6 to i8**
  %409 = load i8*, i8** %408, align 8
  call void @_ZdlPv(i8* %409) #11
  br label %410

410:                                              ; preds = %407, %285
  %411 = load i8, i8* %72, align 1
  %412 = icmp slt i8 %411, 0
  br i1 %412, label %290, label %292

413:                                              ; preds = %274
  %414 = bitcast %"class.std::__1::basic_string.60"* %275 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %276, i8* align 8 %414, i64 24, i1 false) #10
  %415 = getelementptr inbounds i8, i8* %82, i64 48
  %416 = ptrtoint i8* %415 to i64
  store i64 %416, i64* %87, align 8
  br label %285

417:                                              ; preds = %274
  %418 = getelementptr inbounds %"class.std::__1::basic_string.60", %"class.std::__1::basic_string.60"* %275, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %419 = load i16*, i16** %418, align 8
  %420 = bitcast i16* %419 to i8*
  %421 = getelementptr inbounds [2 x %"class.std::__1::basic_string.60"], [2 x %"class.std::__1::basic_string.60"]* %6, i64 0, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %422 = load i64, i64* %421, align 8
  %423 = icmp ult i64 %422, 11
  br i1 %423, label %439, label %424

424:                                              ; preds = %417
  %425 = icmp ugt i64 %422, 9223372036854775791
  br i1 %425, label %106, label %426

426:                                              ; preds = %424
  %427 = add nuw nsw i64 %422, 8
  %428 = and i64 %427, -8
  %429 = icmp slt i64 %428, 0
  br i1 %429, label %113, label %430

430:                                              ; preds = %426
  %431 = shl i64 %428, 1
  %432 = call i8* @_Znwm(i64 %431) #11
  %433 = bitcast i8* %276 to i8**
  store i8* %432, i8** %433, align 8
  %434 = or i64 %428, -9223372036854775808
  %435 = getelementptr inbounds i8, i8* %82, i64 40
  %436 = bitcast i8* %435 to i64*
  store i64 %434, i64* %436, align 8
  %437 = getelementptr inbounds i8, i8* %82, i64 32
  %438 = bitcast i8* %437 to i64*
  store i64 %422, i64* %438, align 8
  br label %442

439:                                              ; preds = %417
  %440 = trunc i64 %422 to i8
  %441 = getelementptr inbounds i8, i8* %82, i64 47
  store i8 %440, i8* %441, align 1
  br label %442

442:                                              ; preds = %439, %430
  %443 = phi i8* [ %276, %439 ], [ %432, %430 ]
  %444 = bitcast i8* %443 to i16*
  %445 = add nuw nsw i64 %422, 1
  %446 = add i64 %422, 1
  %447 = icmp ult i64 %446, 16
  br i1 %447, label %540, label %448

448:                                              ; preds = %442
  %449 = shl i64 %422, 1
  %450 = add i64 %449, 2
  %451 = getelementptr i8, i8* %443, i64 %450
  %452 = add i64 %422, 1
  %453 = getelementptr i16, i16* %419, i64 %452
  %454 = bitcast i16* %453 to i8*
  %455 = icmp ult i8* %443, %454
  %456 = icmp ugt i8* %451, %420
  %457 = and i1 %455, %456
  br i1 %457, label %540, label %458

458:                                              ; preds = %448
  %459 = and i64 %446, -16
  %460 = sub i64 %445, %459
  %461 = getelementptr i16, i16* %419, i64 %459
  %462 = getelementptr i16, i16* %444, i64 %459
  %463 = add i64 %459, -16
  %464 = lshr exact i64 %463, 4
  %465 = add nuw nsw i64 %464, 1
  %466 = and i64 %465, 3
  %467 = icmp ult i64 %463, 48
  br i1 %467, label %519, label %468

468:                                              ; preds = %458
  %469 = sub nsw i64 %465, %466
  br label %470

470:                                              ; preds = %470, %468
  %471 = phi i64 [ 0, %468 ], [ %516, %470 ]
  %472 = phi i64 [ %469, %468 ], [ %517, %470 ]
  %473 = getelementptr i16, i16* %419, i64 %471
  %474 = getelementptr i16, i16* %444, i64 %471
  %475 = bitcast i16* %473 to <8 x i16>*
  %476 = load <8 x i16>, <8 x i16>* %475, align 2, !alias.scope !13
  %477 = getelementptr i16, i16* %473, i64 8
  %478 = bitcast i16* %477 to <8 x i16>*
  %479 = load <8 x i16>, <8 x i16>* %478, align 2, !alias.scope !13
  %480 = bitcast i16* %474 to <8 x i16>*
  store <8 x i16> %476, <8 x i16>* %480, align 2, !alias.scope !16, !noalias !13
  %481 = getelementptr i16, i16* %474, i64 8
  %482 = bitcast i16* %481 to <8 x i16>*
  store <8 x i16> %479, <8 x i16>* %482, align 2, !alias.scope !16, !noalias !13
  %483 = or i64 %471, 16
  %484 = getelementptr i16, i16* %419, i64 %483
  %485 = getelementptr i16, i16* %444, i64 %483
  %486 = bitcast i16* %484 to <8 x i16>*
  %487 = load <8 x i16>, <8 x i16>* %486, align 2, !alias.scope !13
  %488 = getelementptr i16, i16* %484, i64 8
  %489 = bitcast i16* %488 to <8 x i16>*
  %490 = load <8 x i16>, <8 x i16>* %489, align 2, !alias.scope !13
  %491 = bitcast i16* %485 to <8 x i16>*
  store <8 x i16> %487, <8 x i16>* %491, align 2, !alias.scope !16, !noalias !13
  %492 = getelementptr i16, i16* %485, i64 8
  %493 = bitcast i16* %492 to <8 x i16>*
  store <8 x i16> %490, <8 x i16>* %493, align 2, !alias.scope !16, !noalias !13
  %494 = or i64 %471, 32
  %495 = getelementptr i16, i16* %419, i64 %494
  %496 = getelementptr i16, i16* %444, i64 %494
  %497 = bitcast i16* %495 to <8 x i16>*
  %498 = load <8 x i16>, <8 x i16>* %497, align 2, !alias.scope !13
  %499 = getelementptr i16, i16* %495, i64 8
  %500 = bitcast i16* %499 to <8 x i16>*
  %501 = load <8 x i16>, <8 x i16>* %500, align 2, !alias.scope !13
  %502 = bitcast i16* %496 to <8 x i16>*
  store <8 x i16> %498, <8 x i16>* %502, align 2, !alias.scope !16, !noalias !13
  %503 = getelementptr i16, i16* %496, i64 8
  %504 = bitcast i16* %503 to <8 x i16>*
  store <8 x i16> %501, <8 x i16>* %504, align 2, !alias.scope !16, !noalias !13
  %505 = or i64 %471, 48
  %506 = getelementptr i16, i16* %419, i64 %505
  %507 = getelementptr i16, i16* %444, i64 %505
  %508 = bitcast i16* %506 to <8 x i16>*
  %509 = load <8 x i16>, <8 x i16>* %508, align 2, !alias.scope !13
  %510 = getelementptr i16, i16* %506, i64 8
  %511 = bitcast i16* %510 to <8 x i16>*
  %512 = load <8 x i16>, <8 x i16>* %511, align 2, !alias.scope !13
  %513 = bitcast i16* %507 to <8 x i16>*
  store <8 x i16> %509, <8 x i16>* %513, align 2, !alias.scope !16, !noalias !13
  %514 = getelementptr i16, i16* %507, i64 8
  %515 = bitcast i16* %514 to <8 x i16>*
  store <8 x i16> %512, <8 x i16>* %515, align 2, !alias.scope !16, !noalias !13
  %516 = add i64 %471, 64
  %517 = add i64 %472, -4
  %518 = icmp eq i64 %517, 0
  br i1 %518, label %519, label %470, !llvm.loop !18

519:                                              ; preds = %470, %458
  %520 = phi i64 [ 0, %458 ], [ %516, %470 ]
  %521 = icmp eq i64 %466, 0
  br i1 %521, label %538, label %522

522:                                              ; preds = %519, %522
  %523 = phi i64 [ %535, %522 ], [ %520, %519 ]
  %524 = phi i64 [ %536, %522 ], [ %466, %519 ]
  %525 = getelementptr i16, i16* %419, i64 %523
  %526 = getelementptr i16, i16* %444, i64 %523
  %527 = bitcast i16* %525 to <8 x i16>*
  %528 = load <8 x i16>, <8 x i16>* %527, align 2, !alias.scope !13
  %529 = getelementptr i16, i16* %525, i64 8
  %530 = bitcast i16* %529 to <8 x i16>*
  %531 = load <8 x i16>, <8 x i16>* %530, align 2, !alias.scope !13
  %532 = bitcast i16* %526 to <8 x i16>*
  store <8 x i16> %528, <8 x i16>* %532, align 2, !alias.scope !16, !noalias !13
  %533 = getelementptr i16, i16* %526, i64 8
  %534 = bitcast i16* %533 to <8 x i16>*
  store <8 x i16> %531, <8 x i16>* %534, align 2, !alias.scope !16, !noalias !13
  %535 = add i64 %523, 16
  %536 = add i64 %524, -1
  %537 = icmp eq i64 %536, 0
  br i1 %537, label %538, label %522, !llvm.loop !19

538:                                              ; preds = %522, %519
  %539 = icmp eq i64 %446, %459
  br i1 %539, label %593, label %540

540:                                              ; preds = %538, %448, %442
  %541 = phi i64 [ %445, %448 ], [ %445, %442 ], [ %460, %538 ]
  %542 = phi i16* [ %419, %448 ], [ %419, %442 ], [ %461, %538 ]
  %543 = phi i16* [ %444, %448 ], [ %444, %442 ], [ %462, %538 ]
  %544 = add i64 %541, -1
  %545 = and i64 %541, 7
  %546 = icmp eq i64 %545, 0
  br i1 %546, label %558, label %547

547:                                              ; preds = %540, %547
  %548 = phi i64 [ %553, %547 ], [ %541, %540 ]
  %549 = phi i16* [ %555, %547 ], [ %542, %540 ]
  %550 = phi i16* [ %554, %547 ], [ %543, %540 ]
  %551 = phi i64 [ %556, %547 ], [ %545, %540 ]
  %552 = load i16, i16* %549, align 2
  store i16 %552, i16* %550, align 2
  %553 = add i64 %548, -1
  %554 = getelementptr inbounds i16, i16* %550, i64 1
  %555 = getelementptr inbounds i16, i16* %549, i64 1
  %556 = add i64 %551, -1
  %557 = icmp eq i64 %556, 0
  br i1 %557, label %558, label %547, !llvm.loop !20

558:                                              ; preds = %547, %540
  %559 = phi i64 [ %541, %540 ], [ %553, %547 ]
  %560 = phi i16* [ %542, %540 ], [ %555, %547 ]
  %561 = phi i16* [ %543, %540 ], [ %554, %547 ]
  %562 = icmp ult i64 %544, 7
  br i1 %562, label %593, label %563

563:                                              ; preds = %558, %563
  %564 = phi i64 [ %589, %563 ], [ %559, %558 ]
  %565 = phi i16* [ %591, %563 ], [ %560, %558 ]
  %566 = phi i16* [ %590, %563 ], [ %561, %558 ]
  %567 = load i16, i16* %565, align 2
  store i16 %567, i16* %566, align 2
  %568 = getelementptr inbounds i16, i16* %566, i64 1
  %569 = getelementptr inbounds i16, i16* %565, i64 1
  %570 = load i16, i16* %569, align 2
  store i16 %570, i16* %568, align 2
  %571 = getelementptr inbounds i16, i16* %566, i64 2
  %572 = getelementptr inbounds i16, i16* %565, i64 2
  %573 = load i16, i16* %572, align 2
  store i16 %573, i16* %571, align 2
  %574 = getelementptr inbounds i16, i16* %566, i64 3
  %575 = getelementptr inbounds i16, i16* %565, i64 3
  %576 = load i16, i16* %575, align 2
  store i16 %576, i16* %574, align 2
  %577 = getelementptr inbounds i16, i16* %566, i64 4
  %578 = getelementptr inbounds i16, i16* %565, i64 4
  %579 = load i16, i16* %578, align 2
  store i16 %579, i16* %577, align 2
  %580 = getelementptr inbounds i16, i16* %566, i64 5
  %581 = getelementptr inbounds i16, i16* %565, i64 5
  %582 = load i16, i16* %581, align 2
  store i16 %582, i16* %580, align 2
  %583 = getelementptr inbounds i16, i16* %566, i64 6
  %584 = getelementptr inbounds i16, i16* %565, i64 6
  %585 = load i16, i16* %584, align 2
  store i16 %585, i16* %583, align 2
  %586 = getelementptr inbounds i16, i16* %566, i64 7
  %587 = getelementptr inbounds i16, i16* %565, i64 7
  %588 = load i16, i16* %587, align 2
  store i16 %588, i16* %586, align 2
  %589 = add i64 %564, -8
  %590 = getelementptr inbounds i16, i16* %566, i64 8
  %591 = getelementptr inbounds i16, i16* %565, i64 8
  %592 = icmp eq i64 %589, 0
  br i1 %592, label %593, label %563, !llvm.loop !21

593:                                              ; preds = %558, %563, %538
  %594 = getelementptr inbounds [2 x %"class.std::__1::basic_string.60"], [2 x %"class.std::__1::basic_string.60"]* %6, i64 0, i64 1
  %595 = bitcast %"class.std::__1::basic_string.60"* %594 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %596 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %595, i64 0, i32 1, i32 1
  %597 = load i8, i8* %596, align 1
  %598 = getelementptr inbounds i8, i8* %82, i64 48
  %599 = ptrtoint i8* %598 to i64
  store i64 %599, i64* %87, align 8
  %600 = icmp slt i8 %597, 0
  br i1 %600, label %281, label %285
}

declare %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"*, i8*, i64, i8*, i64) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base15DictionaryValue10SetBooleanENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.base::DictionaryValue"*, i8*, i64, i1 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN4base12ASCIIToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string.60"* sret, i8*, i64) local_unnamed_addr #1

declare void @_ZNK22security_interstitials24SecurityInterstitialPage11request_urlEv(%class.GURL* sret, %"class.security_interstitials::SecurityInterstitialPage"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4GURL4specEv(%class.GURL*) local_unnamed_addr #1

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* sret, %"class.url::Origin"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEERKNS2_12basic_stringIDsNS3_IDsEENS2_9allocatorIDsEEEE(%"class.base::DictionaryValue"*, i8*, i64, %"class.std::__1::basic_string.60"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base25ReplaceStringPlaceholdersENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS1_6vectorINS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEENS7_IS9_EEEEPNS5_ImNS7_ImEEEE(%"class.std::__1::basic_string.60"* sret, i16*, i64, %"class.std::__1::vector.58"* dereferenceable(24), %"class.std::__1::vector.76"*) local_unnamed_addr #1

declare void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string.60"* sret, i32) local_unnamed_addr #1

declare %"class.content::WebContents"* @_ZNK22security_interstitials24SecurityInterstitialPage12web_contentsEv(%"class.security_interstitials::SecurityInterstitialPage"*) local_unnamed_addr #1

declare %"class.std::__1::basic_string"* @_ZN4base5Value13FindStringKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Value"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22security_interstitials28OriginPolicyInterstitialPage15CommandReceivedERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.security_interstitials::OriginPolicyInterstitialPage"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %class.GURL, align 8
  %4 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = zext i8 %6 to i64
  %11 = select i1 %7, i64 %9, i64 %10
  %12 = icmp eq i64 %11, 1
  br i1 %12, label %13, label %32

13:                                               ; preds = %2
  %14 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0), i64 1) #10
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %13
  %17 = load i8, i8* %5, align 1
  %18 = load i64, i64* %8, align 8
  %19 = zext i8 %17 to i64
  br label %32

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.security_interstitials::OriginPolicyInterstitialPage", %"class.security_interstitials::OriginPolicyInterstitialPage"* %0, i64 0, i32 0
  %22 = tail call %"class.content::WebContents"* @_ZNK22security_interstitials24SecurityInterstitialPage12web_contentsEv(%"class.security_interstitials::SecurityInterstitialPage"* %21) #10
  %23 = bitcast %"class.content::WebContents"* %22 to %"class.content::NavigationController"* (%"class.content::WebContents"*)***
  %24 = load %"class.content::NavigationController"* (%"class.content::WebContents"*)**, %"class.content::NavigationController"* (%"class.content::WebContents"*)*** %23, align 8
  %25 = getelementptr inbounds %"class.content::NavigationController"* (%"class.content::WebContents"*)*, %"class.content::NavigationController"* (%"class.content::WebContents"*)** %24, i64 5
  %26 = load %"class.content::NavigationController"* (%"class.content::WebContents"*)*, %"class.content::NavigationController"* (%"class.content::WebContents"*)** %25, align 8
  %27 = tail call dereferenceable(8) %"class.content::NavigationController"* %26(%"class.content::WebContents"* %22) #10
  %28 = bitcast %"class.content::NavigationController"* %27 to void (%"class.content::NavigationController"*)***
  %29 = load void (%"class.content::NavigationController"*)**, void (%"class.content::NavigationController"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.content::NavigationController"*)*, void (%"class.content::NavigationController"*)** %29, i64 24
  %31 = load void (%"class.content::NavigationController"*)*, void (%"class.content::NavigationController"*)** %30, align 8
  tail call void %31(%"class.content::NavigationController"* %27) #10
  br label %74

32:                                               ; preds = %16, %2
  %33 = phi i64 [ %19, %16 ], [ %10, %2 ]
  %34 = phi i64 [ %18, %16 ], [ %9, %2 ]
  %35 = phi i8 [ %17, %16 ], [ %6, %2 ]
  %36 = icmp slt i8 %35, 0
  %37 = select i1 %36, i64 %34, i64 %33
  %38 = icmp eq i64 %37, 1
  br i1 %38, label %39, label %65

39:                                               ; preds = %32
  %40 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0), i64 1) #10
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %39
  %43 = load i8, i8* %5, align 1
  %44 = load i64, i64* %8, align 8
  %45 = zext i8 %43 to i64
  br label %65

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.security_interstitials::OriginPolicyInterstitialPage", %"class.security_interstitials::OriginPolicyInterstitialPage"* %0, i64 0, i32 0
  %48 = tail call %"class.content::WebContents"* @_ZNK22security_interstitials24SecurityInterstitialPage12web_contentsEv(%"class.security_interstitials::SecurityInterstitialPage"* %47) #10
  %49 = bitcast %"class.content::WebContents"* %48 to %"class.content::BrowserContext"* (%"class.content::WebContents"*)***
  %50 = load %"class.content::BrowserContext"* (%"class.content::WebContents"*)**, %"class.content::BrowserContext"* (%"class.content::WebContents"*)*** %49, align 8
  %51 = getelementptr inbounds %"class.content::BrowserContext"* (%"class.content::WebContents"*)*, %"class.content::BrowserContext"* (%"class.content::WebContents"*)** %50, i64 6
  %52 = load %"class.content::BrowserContext"* (%"class.content::WebContents"*)*, %"class.content::BrowserContext"* (%"class.content::WebContents"*)** %51, align 8
  %53 = tail call %"class.content::BrowserContext"* %52(%"class.content::WebContents"* %48) #10
  %54 = bitcast %class.GURL* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %54) #10
  call void @_ZNK22security_interstitials24SecurityInterstitialPage11request_urlEv(%class.GURL* nonnull sret %3, %"class.security_interstitials::SecurityInterstitialPage"* %47) #10
  call void @_ZN7content27OriginPolicyAddExceptionForEPNS_14BrowserContextERK4GURL(%"class.content::BrowserContext"* %53, %class.GURL* nonnull dereferenceable(120) %3) #10
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %54) #10
  %55 = call %"class.content::WebContents"* @_ZNK22security_interstitials24SecurityInterstitialPage12web_contentsEv(%"class.security_interstitials::SecurityInterstitialPage"* %47) #10
  %56 = bitcast %"class.content::WebContents"* %55 to %"class.content::NavigationController"* (%"class.content::WebContents"*)***
  %57 = load %"class.content::NavigationController"* (%"class.content::WebContents"*)**, %"class.content::NavigationController"* (%"class.content::WebContents"*)*** %56, align 8
  %58 = getelementptr inbounds %"class.content::NavigationController"* (%"class.content::WebContents"*)*, %"class.content::NavigationController"* (%"class.content::WebContents"*)** %57, i64 5
  %59 = load %"class.content::NavigationController"* (%"class.content::WebContents"*)*, %"class.content::NavigationController"* (%"class.content::WebContents"*)** %58, align 8
  %60 = call dereferenceable(8) %"class.content::NavigationController"* %59(%"class.content::WebContents"* %55) #10
  %61 = bitcast %"class.content::NavigationController"* %60 to void (%"class.content::NavigationController"*, i32, i1)***
  %62 = load void (%"class.content::NavigationController"*, i32, i1)**, void (%"class.content::NavigationController"*, i32, i1)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.content::NavigationController"*, i32, i1)*, void (%"class.content::NavigationController"*, i32, i1)** %62, i64 28
  %64 = load void (%"class.content::NavigationController"*, i32, i1)*, void (%"class.content::NavigationController"*, i32, i1)** %63, align 8
  call void %64(%"class.content::NavigationController"* %60, i32 1, i1 zeroext true) #10
  br label %74

65:                                               ; preds = %42, %32
  %66 = phi i64 [ %45, %42 ], [ %33, %32 ]
  %67 = phi i64 [ %44, %42 ], [ %34, %32 ]
  %68 = phi i8 [ %43, %42 ], [ %35, %32 ]
  %69 = icmp slt i8 %68, 0
  %70 = select i1 %69, i64 %67, i64 %66
  %71 = icmp eq i64 %70, 1
  br i1 %71, label %72, label %74

72:                                               ; preds = %65
  %73 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %1, i64 0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), i64 1) #10
  br label %74

74:                                               ; preds = %72, %65, %46, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22security_interstitials28OriginPolicyInterstitialPage11DontProceedEv(%"class.security_interstitials::OriginPolicyInterstitialPage"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.security_interstitials::OriginPolicyInterstitialPage", %"class.security_interstitials::OriginPolicyInterstitialPage"* %0, i64 0, i32 0
  %3 = tail call %"class.content::WebContents"* @_ZNK22security_interstitials24SecurityInterstitialPage12web_contentsEv(%"class.security_interstitials::SecurityInterstitialPage"* %2) #10
  %4 = bitcast %"class.content::WebContents"* %3 to %"class.content::NavigationController"* (%"class.content::WebContents"*)***
  %5 = load %"class.content::NavigationController"* (%"class.content::WebContents"*)**, %"class.content::NavigationController"* (%"class.content::WebContents"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.content::NavigationController"* (%"class.content::WebContents"*)*, %"class.content::NavigationController"* (%"class.content::WebContents"*)** %5, i64 5
  %7 = load %"class.content::NavigationController"* (%"class.content::WebContents"*)*, %"class.content::NavigationController"* (%"class.content::WebContents"*)** %6, align 8
  %8 = tail call dereferenceable(8) %"class.content::NavigationController"* %7(%"class.content::WebContents"* %3) #10
  %9 = bitcast %"class.content::NavigationController"* %8 to void (%"class.content::NavigationController"*)***
  %10 = load void (%"class.content::NavigationController"*)**, void (%"class.content::NavigationController"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.content::NavigationController"*)*, void (%"class.content::NavigationController"*)** %10, i64 24
  %12 = load void (%"class.content::NavigationController"*)*, void (%"class.content::NavigationController"*)** %11, align 8
  tail call void %12(%"class.content::NavigationController"* %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN22security_interstitials28OriginPolicyInterstitialPage7ProceedEv(%"class.security_interstitials::OriginPolicyInterstitialPage"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.GURL, align 8
  %3 = getelementptr inbounds %"class.security_interstitials::OriginPolicyInterstitialPage", %"class.security_interstitials::OriginPolicyInterstitialPage"* %0, i64 0, i32 0
  %4 = tail call %"class.content::WebContents"* @_ZNK22security_interstitials24SecurityInterstitialPage12web_contentsEv(%"class.security_interstitials::SecurityInterstitialPage"* %3) #10
  %5 = bitcast %"class.content::WebContents"* %4 to %"class.content::BrowserContext"* (%"class.content::WebContents"*)***
  %6 = load %"class.content::BrowserContext"* (%"class.content::WebContents"*)**, %"class.content::BrowserContext"* (%"class.content::WebContents"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.content::BrowserContext"* (%"class.content::WebContents"*)*, %"class.content::BrowserContext"* (%"class.content::WebContents"*)** %6, i64 6
  %8 = load %"class.content::BrowserContext"* (%"class.content::WebContents"*)*, %"class.content::BrowserContext"* (%"class.content::WebContents"*)** %7, align 8
  %9 = tail call %"class.content::BrowserContext"* %8(%"class.content::WebContents"* %4) #10
  %10 = bitcast %class.GURL* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %10) #10
  call void @_ZNK22security_interstitials24SecurityInterstitialPage11request_urlEv(%class.GURL* nonnull sret %2, %"class.security_interstitials::SecurityInterstitialPage"* %3) #10
  call void @_ZN7content27OriginPolicyAddExceptionForEPNS_14BrowserContextERK4GURL(%"class.content::BrowserContext"* %9, %class.GURL* nonnull dereferenceable(120) %2) #10
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %10) #10
  %11 = call %"class.content::WebContents"* @_ZNK22security_interstitials24SecurityInterstitialPage12web_contentsEv(%"class.security_interstitials::SecurityInterstitialPage"* %3) #10
  %12 = bitcast %"class.content::WebContents"* %11 to %"class.content::NavigationController"* (%"class.content::WebContents"*)***
  %13 = load %"class.content::NavigationController"* (%"class.content::WebContents"*)**, %"class.content::NavigationController"* (%"class.content::WebContents"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.content::NavigationController"* (%"class.content::WebContents"*)*, %"class.content::NavigationController"* (%"class.content::WebContents"*)** %13, i64 5
  %15 = load %"class.content::NavigationController"* (%"class.content::WebContents"*)*, %"class.content::NavigationController"* (%"class.content::WebContents"*)** %14, align 8
  %16 = call dereferenceable(8) %"class.content::NavigationController"* %15(%"class.content::WebContents"* %11) #10
  %17 = bitcast %"class.content::NavigationController"* %16 to void (%"class.content::NavigationController"*, i32, i1)***
  %18 = load void (%"class.content::NavigationController"*, i32, i1)**, void (%"class.content::NavigationController"*, i32, i1)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.content::NavigationController"*, i32, i1)*, void (%"class.content::NavigationController"*, i32, i1)** %18, i64 28
  %20 = load void (%"class.content::NavigationController"*, i32, i1)*, void (%"class.content::NavigationController"*, i32, i1)** %19, align 8
  call void %20(%"class.content::NavigationController"* %16, i32 1, i1 zeroext true) #10
  ret void
}

declare void @_ZN7content27OriginPolicyAddExceptionForEPNS_14BrowserContextERK4GURL(%"class.content::BrowserContext"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare void @_ZN22security_interstitials24SecurityInterstitialPage15GetHTMLContentsEv(%"class.std::__1::basic_string"* sret, %"class.security_interstitials::SecurityInterstitialPage"*) unnamed_addr #1

declare zeroext i1 @_ZNK22security_interstitials24SecurityInterstitialPage16ShouldDisplayURLEv(%"class.security_interstitials::SecurityInterstitialPage"*) unnamed_addr #1

declare i8* @_ZN22security_interstitials24SecurityInterstitialPage17GetTypeForTestingEv(%"class.security_interstitials::SecurityInterstitialPage"*) unnamed_addr #1

declare i32 @_ZN22security_interstitials24SecurityInterstitialPage17GetHTMLTemplateIdEv(%"class.security_interstitials::SecurityInterstitialPage"*) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
