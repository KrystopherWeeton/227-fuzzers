; ModuleID = '../../third_party/crashpad/crashpad/minidump/minidump_string_writer.cc'
source_filename = "../../third_party/crashpad/crashpad/minidump/minidump_string_writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.crashpad::internal::MinidumpStringWriter" = type { %"class.crashpad::internal::MinidumpWritable.base", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string" }
%"class.crashpad::internal::MinidumpWritable.base" = type <{ i32 (...)**, %"class.std::__1::vector", %"class.std::__1::vector.1", i64, i32 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32**, i32**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32** }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %struct.MINIDUMP_LOCATION_DESCRIPTOR**, %"class.std::__1::__compressed_pair.3" }
%struct.MINIDUMP_LOCATION_DESCRIPTOR = type { i32, i32 }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %struct.MINIDUMP_LOCATION_DESCRIPTOR** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %struct.MINIDUMP_STRING* }
%struct.MINIDUMP_STRING = type { i32, [0 x i16] }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.crashpad::internal::MinidumpStringWriter.32" = type { %"class.crashpad::internal::MinidumpWritable.base", %"class.std::__1::unique_ptr.33", %"class.std::__1::basic_string.16" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.crashpad::MinidumpUTF8String"* }
%"struct.crashpad::MinidumpUTF8String" = type { i32, [0 x i8] }
%"class.std::__1::basic_string.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.19 }
%union.anon.19 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.crashpad::internal::MinidumpStringListWriter" = type { %"class.crashpad::internal::MinidumpRVAListWriter" }
%"class.crashpad::internal::MinidumpRVAListWriter" = type { %"class.crashpad::internal::MinidumpWritable.base", %"class.std::__1::unique_ptr.39", %"class.std::__1::vector.45", %"class.std::__1::vector.53" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.crashpad::MinidumpRVAList"* }
%"struct.crashpad::MinidumpRVAList" = type { i32, [0 x i32] }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"class.std::__1::unique_ptr.47"*, %"class.std::__1::unique_ptr.47"*, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.crashpad::internal::MinidumpWritable"* }
%"class.crashpad::internal::MinidumpWritable" = type <{ i32 (...)**, %"class.std::__1::vector", %"class.std::__1::vector.1", i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::unique_ptr.47"* }
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { i32*, i32*, %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { i32* }
%"class.crashpad::internal::MinidumpStringListWriter.78" = type { %"class.crashpad::internal::MinidumpRVAListWriter" }
%"class.crashpad::internal::MinidumpUTF16StringWriter" = type { %"class.crashpad::internal::MinidumpStringWriter" }
%"class.crashpad::internal::MinidumpUTF8StringWriter" = type { %"class.crashpad::internal::MinidumpStringWriter.32" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.16", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.crashpad::FileWriterInterface" = type { %"class.crashpad::FileSeekerInterface" }
%"class.crashpad::FileSeekerInterface" = type { i32 (...)** }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"struct.crashpad::WritableIoVec"*, %"struct.crashpad::WritableIoVec"*, %"class.std::__1::__compressed_pair.27" }
%"struct.crashpad::WritableIoVec" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.crashpad::WritableIoVec"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.20 }
%struct.anon.20 = type { i8 }
%"class.std::__1::vector.60" = type { %"class.std::__1::__vector_base.61" }
%"class.std::__1::__vector_base.61" = type { %"class.std::__1::basic_string.16"*, %"class.std::__1::basic_string.16"*, %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.std::__1::basic_string.16"* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEEC5Ev = comdat any

$_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEED5Ev = comdat any

$_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEE6FreezeEv = comdat any

$_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEE12SizeOfObjectEv = comdat any

$_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEE11WriteObjectEPNS_19FileWriterInterfaceE = comdat any

$_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEE10set_stringERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE = comdat any

$_ZNK8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEE6stringEv = comdat any

$_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEEC5Ev = comdat any

$_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEED5Ev = comdat any

$_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEE6FreezeEv = comdat any

$_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEE12SizeOfObjectEv = comdat any

$_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEE11WriteObjectEPNS_19FileWriterInterfaceE = comdat any

$_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEE10set_stringERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE = comdat any

$_ZNK8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEE6stringEv = comdat any

$_ZN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEEC5Ev = comdat any

$_ZN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEED5Ev = comdat any

$_ZN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEE20InitializeFromVectorERKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE = comdat any

$_ZN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEE13AddStringUTF8ERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE = comdat any

$_ZNK8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEE8IsUsefulEv = comdat any

$_ZN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEEC5Ev = comdat any

$_ZN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEED5Ev = comdat any

$_ZN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEE20InitializeFromVectorERKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE = comdat any

$_ZN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEE13AddStringUTF8ERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE = comdat any

$_ZNK8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEE8IsUsefulEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZTVN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEEE = comdat any

$_ZTVN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEEE = comdat any

$_ZTVN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEEE = comdat any

$_ZTVN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEEE = comdat any

@_ZTVN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEEE = weak_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.crashpad::internal::MinidumpStringWriter"*)* @_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEED2Ev to i8*), i8* bitcast (void (%"class.crashpad::internal::MinidumpStringWriter"*)* @_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEED0Ev to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)* @_ZN8crashpad8internal16MinidumpWritable15WriteEverythingEPNS_19FileWriterInterfaceE to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpStringWriter"*)* @_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEE6FreezeEv to i8*), i8* bitcast (i64 (%"class.crashpad::internal::MinidumpStringWriter"*)* @_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEE12SizeOfObjectEv to i8*), i8* bitcast (i64 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable9AlignmentEv to i8*), i8* bitcast (void ()* @_ZN8crashpad8internal16MinidumpWritable8ChildrenEv to i8*), i8* bitcast (i32 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable10WritePhaseEv to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, i64)* @_ZN8crashpad8internal16MinidumpWritable21WillWriteAtOffsetImplEl to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpStringWriter"*, %"class.crashpad::FileWriterInterface"*)* @_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEE11WriteObjectEPNS_19FileWriterInterfaceE to i8*)] }, comdat, align 8
@.str = private unnamed_addr constant [71 x i8] c"../../third_party/crashpad/crashpad/minidump/minidump_string_writer.cc\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"string_bytes \00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c" out of range\00", align 1
@_ZTVN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEEE = weak_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.crashpad::internal::MinidumpStringWriter.32"*)* @_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEED2Ev to i8*), i8* bitcast (void (%"class.crashpad::internal::MinidumpStringWriter.32"*)* @_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEED0Ev to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)* @_ZN8crashpad8internal16MinidumpWritable15WriteEverythingEPNS_19FileWriterInterfaceE to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpStringWriter.32"*)* @_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEE6FreezeEv to i8*), i8* bitcast (i64 (%"class.crashpad::internal::MinidumpStringWriter.32"*)* @_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEE12SizeOfObjectEv to i8*), i8* bitcast (i64 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable9AlignmentEv to i8*), i8* bitcast (void ()* @_ZN8crashpad8internal16MinidumpWritable8ChildrenEv to i8*), i8* bitcast (i32 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable10WritePhaseEv to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, i64)* @_ZN8crashpad8internal16MinidumpWritable21WillWriteAtOffsetImplEl to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpStringWriter.32"*, %"class.crashpad::FileWriterInterface"*)* @_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEE11WriteObjectEPNS_19FileWriterInterfaceE to i8*)] }, comdat, align 8
@_ZTVN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEEE = weak_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.crashpad::internal::MinidumpStringListWriter"*)* @_ZN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEED2Ev to i8*), i8* bitcast (void (%"class.crashpad::internal::MinidumpStringListWriter"*)* @_ZN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEED0Ev to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)* @_ZN8crashpad8internal16MinidumpWritable15WriteEverythingEPNS_19FileWriterInterfaceE to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpRVAListWriter"*)* @_ZN8crashpad8internal21MinidumpRVAListWriter6FreezeEv to i8*), i8* bitcast (i64 (%"class.crashpad::internal::MinidumpRVAListWriter"*)* @_ZN8crashpad8internal21MinidumpRVAListWriter12SizeOfObjectEv to i8*), i8* bitcast (i64 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable9AlignmentEv to i8*), i8* bitcast (void ()* @_ZN8crashpad8internal21MinidumpRVAListWriter8ChildrenEv to i8*), i8* bitcast (i32 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable10WritePhaseEv to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, i64)* @_ZN8crashpad8internal16MinidumpWritable21WillWriteAtOffsetImplEl to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpRVAListWriter"*, %"class.crashpad::FileWriterInterface"*)* @_ZN8crashpad8internal21MinidumpRVAListWriter11WriteObjectEPNS_19FileWriterInterfaceE to i8*)] }, comdat, align 8
@_ZTVN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEEE = weak_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.crashpad::internal::MinidumpStringListWriter.78"*)* @_ZN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEED2Ev to i8*), i8* bitcast (void (%"class.crashpad::internal::MinidumpStringListWriter.78"*)* @_ZN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEED0Ev to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)* @_ZN8crashpad8internal16MinidumpWritable15WriteEverythingEPNS_19FileWriterInterfaceE to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpRVAListWriter"*)* @_ZN8crashpad8internal21MinidumpRVAListWriter6FreezeEv to i8*), i8* bitcast (i64 (%"class.crashpad::internal::MinidumpRVAListWriter"*)* @_ZN8crashpad8internal21MinidumpRVAListWriter12SizeOfObjectEv to i8*), i8* bitcast (i64 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable9AlignmentEv to i8*), i8* bitcast (void ()* @_ZN8crashpad8internal21MinidumpRVAListWriter8ChildrenEv to i8*), i8* bitcast (i32 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable10WritePhaseEv to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, i64)* @_ZN8crashpad8internal16MinidumpWritable21WillWriteAtOffsetImplEl to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpRVAListWriter"*, %"class.crashpad::FileWriterInterface"*)* @_ZN8crashpad8internal21MinidumpRVAListWriter11WriteObjectEPNS_19FileWriterInterfaceE to i8*)] }, comdat, align 8
@_ZTVN8crashpad8internal25MinidumpUTF16StringWriterE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.crashpad::internal::MinidumpUTF16StringWriter"*)* @_ZN8crashpad8internal25MinidumpUTF16StringWriterD2Ev to i8*), i8* bitcast (void (%"class.crashpad::internal::MinidumpUTF16StringWriter"*)* @_ZN8crashpad8internal25MinidumpUTF16StringWriterD0Ev to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)* @_ZN8crashpad8internal16MinidumpWritable15WriteEverythingEPNS_19FileWriterInterfaceE to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpStringWriter"*)* @_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEE6FreezeEv to i8*), i8* bitcast (i64 (%"class.crashpad::internal::MinidumpStringWriter"*)* @_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEE12SizeOfObjectEv to i8*), i8* bitcast (i64 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable9AlignmentEv to i8*), i8* bitcast (void ()* @_ZN8crashpad8internal16MinidumpWritable8ChildrenEv to i8*), i8* bitcast (i32 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable10WritePhaseEv to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, i64)* @_ZN8crashpad8internal16MinidumpWritable21WillWriteAtOffsetImplEl to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpStringWriter"*, %"class.crashpad::FileWriterInterface"*)* @_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEE11WriteObjectEPNS_19FileWriterInterfaceE to i8*)] }, align 8
@_ZTVN8crashpad8internal24MinidumpUTF8StringWriterE = hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.crashpad::internal::MinidumpUTF8StringWriter"*)* @_ZN8crashpad8internal24MinidumpUTF8StringWriterD2Ev to i8*), i8* bitcast (void (%"class.crashpad::internal::MinidumpUTF8StringWriter"*)* @_ZN8crashpad8internal24MinidumpUTF8StringWriterD0Ev to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*)* @_ZN8crashpad8internal16MinidumpWritable15WriteEverythingEPNS_19FileWriterInterfaceE to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpStringWriter.32"*)* @_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEE6FreezeEv to i8*), i8* bitcast (i64 (%"class.crashpad::internal::MinidumpStringWriter.32"*)* @_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEE12SizeOfObjectEv to i8*), i8* bitcast (i64 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable9AlignmentEv to i8*), i8* bitcast (void ()* @_ZN8crashpad8internal16MinidumpWritable8ChildrenEv to i8*), i8* bitcast (i32 (%"class.crashpad::internal::MinidumpWritable"*)* @_ZN8crashpad8internal16MinidumpWritable10WritePhaseEv to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpWritable"*, i64)* @_ZN8crashpad8internal16MinidumpWritable21WillWriteAtOffsetImplEl to i8*), i8* bitcast (i1 (%"class.crashpad::internal::MinidumpStringWriter.32"*, %"class.crashpad::FileWriterInterface"*)* @_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEE11WriteObjectEPNS_19FileWriterInterfaceE to i8*)] }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.crashpad::internal::MinidumpStringWriter"*), void (%"class.crashpad::internal::MinidumpStringWriter"*)* @_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEEC2Ev
@_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEED1Ev = weak_odr hidden unnamed_addr alias void (%"class.crashpad::internal::MinidumpStringWriter"*), void (%"class.crashpad::internal::MinidumpStringWriter"*)* @_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEED2Ev
@_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.crashpad::internal::MinidumpStringWriter.32"*), void (%"class.crashpad::internal::MinidumpStringWriter.32"*)* @_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEEC2Ev
@_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEED1Ev = weak_odr hidden unnamed_addr alias void (%"class.crashpad::internal::MinidumpStringWriter.32"*), void (%"class.crashpad::internal::MinidumpStringWriter.32"*)* @_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEED2Ev
@_ZN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.crashpad::internal::MinidumpStringListWriter"*), void (%"class.crashpad::internal::MinidumpStringListWriter"*)* @_ZN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEEC2Ev
@_ZN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEED1Ev = weak_odr hidden unnamed_addr alias void (%"class.crashpad::internal::MinidumpStringListWriter"*), void (%"class.crashpad::internal::MinidumpStringListWriter"*)* @_ZN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEED2Ev
@_ZN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEEC1Ev = weak_odr hidden unnamed_addr alias void (%"class.crashpad::internal::MinidumpStringListWriter.78"*), void (%"class.crashpad::internal::MinidumpStringListWriter.78"*)* @_ZN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEEC2Ev
@_ZN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEED1Ev = weak_odr hidden unnamed_addr alias void (%"class.crashpad::internal::MinidumpStringListWriter.78"*), void (%"class.crashpad::internal::MinidumpStringListWriter.78"*)* @_ZN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEED2Ev
@_ZN8crashpad8internal25MinidumpUTF16StringWriterD1Ev = hidden unnamed_addr alias void (%"class.crashpad::internal::MinidumpUTF16StringWriter"*), void (%"class.crashpad::internal::MinidumpUTF16StringWriter"*)* @_ZN8crashpad8internal25MinidumpUTF16StringWriterD2Ev
@_ZN8crashpad8internal24MinidumpUTF8StringWriterD1Ev = hidden unnamed_addr alias void (%"class.crashpad::internal::MinidumpUTF8StringWriter"*), void (%"class.crashpad::internal::MinidumpUTF8StringWriter"*)* @_ZN8crashpad8internal24MinidumpUTF8StringWriterD2Ev

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEEC2Ev(%"class.crashpad::internal::MinidumpStringWriter"*) unnamed_addr #0 comdat($_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEEC5Ev) align 2 {
  %2 = bitcast %"class.crashpad::internal::MinidumpStringWriter"* %0 to %"class.crashpad::internal::MinidumpWritable"*
  tail call void @_ZN8crashpad8internal16MinidumpWritableC2Ev(%"class.crashpad::internal::MinidumpWritable"* %2) #8
  %3 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter", %"class.crashpad::internal::MinidumpStringWriter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter", %"class.crashpad::internal::MinidumpStringWriter"* %0, i64 0, i32 1
  %5 = tail call i8* @_Znwm(i64 4) #9
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6, align 4
  %7 = ptrtoint i8* %5 to i64
  %8 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter", %"class.crashpad::internal::MinidumpStringWriter"* %0, i64 0, i32 2
  %10 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #8
  ret void
}

declare void @_ZN8crashpad8internal16MinidumpWritableC2Ev(%"class.crashpad::internal::MinidumpWritable"*) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEED2Ev(%"class.crashpad::internal::MinidumpStringWriter"*) unnamed_addr #0 comdat($_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter", %"class.crashpad::internal::MinidumpStringWriter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter", %"class.crashpad::internal::MinidumpStringWriter"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter", %"class.crashpad::internal::MinidumpStringWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %struct.MINIDUMP_STRING*, %struct.MINIDUMP_STRING** %12, align 8
  store %struct.MINIDUMP_STRING* null, %struct.MINIDUMP_STRING** %12, align 8
  %14 = icmp eq %struct.MINIDUMP_STRING* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %struct.MINIDUMP_STRING* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #9
  br label %17

17:                                               ; preds = %11, %15
  %18 = bitcast %"class.crashpad::internal::MinidumpStringWriter"* %0 to %"class.crashpad::internal::MinidumpWritable"*
  tail call void @_ZN8crashpad8internal16MinidumpWritableD2Ev(%"class.crashpad::internal::MinidumpWritable"* %18) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8crashpad8internal16MinidumpWritableD2Ev(%"class.crashpad::internal::MinidumpWritable"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEED0Ev(%"class.crashpad::internal::MinidumpStringWriter"*) unnamed_addr #0 comdat($_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter", %"class.crashpad::internal::MinidumpStringWriter"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter", %"class.crashpad::internal::MinidumpStringWriter"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter", %"class.crashpad::internal::MinidumpStringWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %struct.MINIDUMP_STRING*, %struct.MINIDUMP_STRING** %12, align 8
  store %struct.MINIDUMP_STRING* null, %struct.MINIDUMP_STRING** %12, align 8
  %14 = icmp eq %struct.MINIDUMP_STRING* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %struct.MINIDUMP_STRING* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #9
  br label %17

17:                                               ; preds = %11, %15
  %18 = bitcast %"class.crashpad::internal::MinidumpStringWriter"* %0 to %"class.crashpad::internal::MinidumpWritable"*
  tail call void @_ZN8crashpad8internal16MinidumpWritableD2Ev(%"class.crashpad::internal::MinidumpWritable"* %18) #8
  %19 = bitcast %"class.crashpad::internal::MinidumpStringWriter"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEE6FreezeEv(%"class.crashpad::internal::MinidumpStringWriter"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = bitcast %"class.crashpad::internal::MinidumpStringWriter"* %0 to %"class.crashpad::internal::MinidumpWritable"*
  %4 = tail call zeroext i1 @_ZN8crashpad8internal16MinidumpWritable6FreezeEv(%"class.crashpad::internal::MinidumpWritable"* %3) #8
  br i1 %4, label %5, label %34

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter", %"class.crashpad::internal::MinidumpStringWriter"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter", %"class.crashpad::internal::MinidumpStringWriter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %16

14:                                               ; preds = %5
  %15 = zext i8 %9 to i64
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi i64 [ %13, %11 ], [ %15, %14 ]
  %18 = shl i64 %17, 1
  %19 = icmp ult i64 %18, 4294967296
  br i1 %19, label %20, label %25

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter", %"class.crashpad::internal::MinidumpStringWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %struct.MINIDUMP_STRING*, %struct.MINIDUMP_STRING** %21, align 8
  %23 = getelementptr inbounds %struct.MINIDUMP_STRING, %struct.MINIDUMP_STRING* %22, i64 0, i32 0
  %24 = trunc i64 %18 to i32
  store i32 %24, i32* %23, align 4
  br label %34

25:                                               ; preds = %16
  %26 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #8
  br i1 %26, label %27, label %34

27:                                               ; preds = %25
  %28 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %28) #8
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 46, i32 2) #8
  %29 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %30 = bitcast %"class.std::__1::basic_ostringstream"* %29 to %"class.std::__1::basic_ostream"*
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %30, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i64 13) #8
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %31, i64 %18) #8
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 13) #8
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %28) #8
  br label %34

34:                                               ; preds = %27, %25, %20, %1
  %35 = phi i1 [ false, %1 ], [ true, %20 ], [ false, %25 ], [ false, %27 ]
  ret i1 %35
}

declare zeroext i1 @_ZN8crashpad8internal16MinidumpWritable6FreezeEv(%"class.crashpad::internal::MinidumpWritable"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEE12SizeOfObjectEv(%"class.crashpad::internal::MinidumpStringWriter"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter", %"class.crashpad::internal::MinidumpStringWriter"* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter", %"class.crashpad::internal::MinidumpStringWriter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %12

10:                                               ; preds = %1
  %11 = zext i8 %5 to i64
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %9, %7 ], [ %11, %10 ]
  %14 = shl i64 %13, 1
  %15 = add i64 %14, 6
  ret i64 %15
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEE11WriteObjectEPNS_19FileWriterInterfaceE(%"class.crashpad::internal::MinidumpStringWriter"*, %"class.crashpad::FileWriterInterface"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.25", align 8
  %4 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter", %"class.crashpad::internal::MinidumpStringWriter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = bitcast %struct.MINIDUMP_STRING** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.25"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %3, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %3, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = tail call i8* @_Znwm(i64 16) #9
  %12 = bitcast %"class.std::__1::vector.25"* %3 to i8**
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds i8, i8* %11, i64 16
  %14 = bitcast %"struct.crashpad::WritableIoVec"** %10 to i8**
  store i8* %13, i8** %14, align 8
  %15 = bitcast i8* %11 to i64*
  store i64 %6, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to i64*
  store i64 4, i64* %17, align 8
  %18 = bitcast %"struct.crashpad::WritableIoVec"** %9 to i64*
  %19 = ptrtoint i8* %13 to i64
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter", %"class.crashpad::internal::MinidumpStringWriter"* %0, i64 0, i32 2
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %2
  %26 = bitcast %"class.std::__1::basic_string"* %20 to i8**
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter", %"class.crashpad::internal::MinidumpStringWriter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  br label %33

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %32 = zext i8 %23 to i64
  br label %33

33:                                               ; preds = %25, %30
  %34 = phi i8* [ %27, %25 ], [ %31, %30 ]
  %35 = phi i64 [ %29, %25 ], [ %32, %30 ]
  %36 = shl i64 %35, 1
  %37 = add i64 %36, 2
  %38 = bitcast %"class.std::__1::vector.25"* %3 to i64*
  %39 = tail call i8* @_Znwm(i64 32) #9
  %40 = getelementptr inbounds i8, i8* %39, i64 16
  %41 = bitcast i8* %40 to i8**
  store i8* %34, i8** %41, align 8
  %42 = getelementptr inbounds i8, i8* %39, i64 24
  %43 = bitcast i8* %42 to i64*
  store i64 %37, i64* %43, align 8
  %44 = insertelement <2 x i8*> undef, i8* %39, i32 0
  %45 = shufflevector <2 x i8*> %44, <2 x i8*> undef, <2 x i32> zeroinitializer
  %46 = getelementptr i8, <2 x i8*> %45, <2 x i64> <i64 32, i64 32>
  %47 = ptrtoint <2 x i8*> %46 to <2 x i64>
  %48 = ptrtoint i8* %39 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %11, i64 16, i1 false) #8
  store i64 %48, i64* %38, align 8
  %49 = bitcast %"struct.crashpad::WritableIoVec"** %9 to <2 x i64>*
  store <2 x i64> %47, <2 x i64>* %49, align 8
  tail call void @_ZdlPv(i8* nonnull %11) #9
  %50 = bitcast %"class.crashpad::FileWriterInterface"* %1 to i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.25"*)***
  %51 = load i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.25"*)**, i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.25"*)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.25"*)*, i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.25"*)** %51, i64 4
  %53 = load i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.25"*)*, i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.25"*)** %52, align 8
  %54 = call zeroext i1 %53(%"class.crashpad::FileWriterInterface"* %1, %"class.std::__1::vector.25"* nonnull %3) #8
  %55 = load %"struct.crashpad::WritableIoVec"*, %"struct.crashpad::WritableIoVec"** %8, align 8
  %56 = icmp eq %"struct.crashpad::WritableIoVec"* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %33
  %58 = ptrtoint %"struct.crashpad::WritableIoVec"* %55 to i64
  store i64 %58, i64* %18, align 8
  %59 = bitcast %"struct.crashpad::WritableIoVec"* %55 to i8*
  call void @_ZdlPv(i8* %59) #9
  br label %60

60:                                               ; preds = %33, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  ret i1 %54
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEE10set_stringERKNSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"class.crashpad::internal::MinidumpStringWriter"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter", %"class.crashpad::internal::MinidumpStringWriter"* %0, i64 0, i32 2
  %4 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %3, %"class.std::__1::basic_string"* dereferenceable(24) %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEE6stringEv(%"class.crashpad::internal::MinidumpStringWriter"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter", %"class.crashpad::internal::MinidumpStringWriter"* %0, i64 0, i32 2
  ret %"class.std::__1::basic_string"* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEEC2Ev(%"class.crashpad::internal::MinidumpStringWriter.32"*) unnamed_addr #0 comdat($_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEEC5Ev) align 2 {
  %2 = bitcast %"class.crashpad::internal::MinidumpStringWriter.32"* %0 to %"class.crashpad::internal::MinidumpWritable"*
  tail call void @_ZN8crashpad8internal16MinidumpWritableC2Ev(%"class.crashpad::internal::MinidumpWritable"* %2) #8
  %3 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter.32", %"class.crashpad::internal::MinidumpStringWriter.32"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter.32", %"class.crashpad::internal::MinidumpStringWriter.32"* %0, i64 0, i32 1
  %5 = tail call i8* @_Znwm(i64 4) #9
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6, align 4
  %7 = ptrtoint i8* %5 to i64
  %8 = bitcast %"class.std::__1::unique_ptr.33"* %4 to i64*
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter.32", %"class.crashpad::internal::MinidumpStringWriter.32"* %0, i64 0, i32 2
  %10 = bitcast %"class.std::__1::basic_string.16"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEED2Ev(%"class.crashpad::internal::MinidumpStringWriter.32"*) unnamed_addr #0 comdat($_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter.32", %"class.crashpad::internal::MinidumpStringWriter.32"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter.32", %"class.crashpad::internal::MinidumpStringWriter.32"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string.16"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string.16", %"class.std::__1::basic_string.16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter.32", %"class.crashpad::internal::MinidumpStringWriter.32"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"struct.crashpad::MinidumpUTF8String"*, %"struct.crashpad::MinidumpUTF8String"** %12, align 8
  store %"struct.crashpad::MinidumpUTF8String"* null, %"struct.crashpad::MinidumpUTF8String"** %12, align 8
  %14 = icmp eq %"struct.crashpad::MinidumpUTF8String"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.crashpad::MinidumpUTF8String"* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #9
  br label %17

17:                                               ; preds = %11, %15
  %18 = bitcast %"class.crashpad::internal::MinidumpStringWriter.32"* %0 to %"class.crashpad::internal::MinidumpWritable"*
  tail call void @_ZN8crashpad8internal16MinidumpWritableD2Ev(%"class.crashpad::internal::MinidumpWritable"* %18) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEED0Ev(%"class.crashpad::internal::MinidumpStringWriter.32"*) unnamed_addr #0 comdat($_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter.32", %"class.crashpad::internal::MinidumpStringWriter.32"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter.32", %"class.crashpad::internal::MinidumpStringWriter.32"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string.16"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string.16", %"class.std::__1::basic_string.16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter.32", %"class.crashpad::internal::MinidumpStringWriter.32"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"struct.crashpad::MinidumpUTF8String"*, %"struct.crashpad::MinidumpUTF8String"** %12, align 8
  store %"struct.crashpad::MinidumpUTF8String"* null, %"struct.crashpad::MinidumpUTF8String"** %12, align 8
  %14 = icmp eq %"struct.crashpad::MinidumpUTF8String"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.crashpad::MinidumpUTF8String"* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #9
  br label %17

17:                                               ; preds = %11, %15
  %18 = bitcast %"class.crashpad::internal::MinidumpStringWriter.32"* %0 to %"class.crashpad::internal::MinidumpWritable"*
  tail call void @_ZN8crashpad8internal16MinidumpWritableD2Ev(%"class.crashpad::internal::MinidumpWritable"* %18) #8
  %19 = bitcast %"class.crashpad::internal::MinidumpStringWriter.32"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEE6FreezeEv(%"class.crashpad::internal::MinidumpStringWriter.32"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::LogMessage", align 8
  %3 = bitcast %"class.crashpad::internal::MinidumpStringWriter.32"* %0 to %"class.crashpad::internal::MinidumpWritable"*
  %4 = tail call zeroext i1 @_ZN8crashpad8internal16MinidumpWritable6FreezeEv(%"class.crashpad::internal::MinidumpWritable"* %3) #8
  br i1 %4, label %5, label %32

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter.32", %"class.crashpad::internal::MinidumpStringWriter.32"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::basic_string.16"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = zext i8 %9 to i64
  br label %17

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter.32", %"class.crashpad::internal::MinidumpStringWriter.32"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, 4294967296
  br i1 %16, label %17, label %23

17:                                               ; preds = %13, %11
  %18 = phi i64 [ %12, %11 ], [ %15, %13 ]
  %19 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter.32", %"class.crashpad::internal::MinidumpStringWriter.32"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.crashpad::MinidumpUTF8String"*, %"struct.crashpad::MinidumpUTF8String"** %19, align 8
  %21 = getelementptr inbounds %"struct.crashpad::MinidumpUTF8String", %"struct.crashpad::MinidumpUTF8String"* %20, i64 0, i32 0
  %22 = trunc i64 %18 to i32
  store i32 %22, i32* %21, align 4
  br label %32

23:                                               ; preds = %13
  %24 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #8
  br i1 %24, label %25, label %32

25:                                               ; preds = %23
  %26 = bitcast %"class.logging::LogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %26) #8
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %2, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 46, i32 2) #8
  %27 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %2, i64 0, i32 2
  %28 = bitcast %"class.std::__1::basic_ostringstream"* %27 to %"class.std::__1::basic_ostream"*
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %28, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i64 13) #8
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %29, i64 %15) #8
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %30, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 13) #8
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %26) #8
  br label %32

32:                                               ; preds = %25, %23, %17, %1
  %33 = phi i1 [ false, %1 ], [ true, %17 ], [ false, %23 ], [ false, %25 ]
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEE12SizeOfObjectEv(%"class.crashpad::internal::MinidumpStringWriter.32"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter.32", %"class.crashpad::internal::MinidumpStringWriter.32"* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::basic_string.16"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter.32", %"class.crashpad::internal::MinidumpStringWriter.32"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  br label %12

10:                                               ; preds = %1
  %11 = zext i8 %5 to i64
  br label %12

12:                                               ; preds = %7, %10
  %13 = phi i64 [ %9, %7 ], [ %11, %10 ]
  %14 = add i64 %13, 5
  ret i64 %14
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEE11WriteObjectEPNS_19FileWriterInterfaceE(%"class.crashpad::internal::MinidumpStringWriter.32"*, %"class.crashpad::FileWriterInterface"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.25", align 8
  %4 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter.32", %"class.crashpad::internal::MinidumpStringWriter.32"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = bitcast %"struct.crashpad::MinidumpUTF8String"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.25"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %3, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %3, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::vector.25", %"class.std::__1::vector.25"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = tail call i8* @_Znwm(i64 16) #9
  %12 = bitcast %"class.std::__1::vector.25"* %3 to i8**
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds i8, i8* %11, i64 16
  %14 = bitcast %"struct.crashpad::WritableIoVec"** %10 to i8**
  store i8* %13, i8** %14, align 8
  %15 = bitcast i8* %11 to i64*
  store i64 %6, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to i64*
  store i64 4, i64* %17, align 8
  %18 = bitcast %"struct.crashpad::WritableIoVec"** %9 to i64*
  %19 = ptrtoint i8* %13 to i64
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter.32", %"class.crashpad::internal::MinidumpStringWriter.32"* %0, i64 0, i32 2
  %21 = bitcast %"class.std::__1::basic_string.16"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.std::__1::basic_string.16", %"class.std::__1::basic_string.16"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter.32", %"class.crashpad::internal::MinidumpStringWriter.32"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  br label %33

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::basic_string.16"* %20 to i8*
  %32 = zext i8 %23 to i64
  br label %33

33:                                               ; preds = %25, %30
  %34 = phi i8* [ %27, %25 ], [ %31, %30 ]
  %35 = phi i64 [ %29, %25 ], [ %32, %30 ]
  %36 = add i64 %35, 1
  %37 = bitcast %"class.std::__1::vector.25"* %3 to i64*
  %38 = tail call i8* @_Znwm(i64 32) #9
  %39 = getelementptr inbounds i8, i8* %38, i64 16
  %40 = bitcast i8* %39 to i8**
  store i8* %34, i8** %40, align 8
  %41 = getelementptr inbounds i8, i8* %38, i64 24
  %42 = bitcast i8* %41 to i64*
  store i64 %36, i64* %42, align 8
  %43 = insertelement <2 x i8*> undef, i8* %38, i32 0
  %44 = shufflevector <2 x i8*> %43, <2 x i8*> undef, <2 x i32> zeroinitializer
  %45 = getelementptr i8, <2 x i8*> %44, <2 x i64> <i64 32, i64 32>
  %46 = ptrtoint <2 x i8*> %45 to <2 x i64>
  %47 = ptrtoint i8* %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %11, i64 16, i1 false) #8
  store i64 %47, i64* %37, align 8
  %48 = bitcast %"struct.crashpad::WritableIoVec"** %9 to <2 x i64>*
  store <2 x i64> %46, <2 x i64>* %48, align 8
  tail call void @_ZdlPv(i8* nonnull %11) #9
  %49 = bitcast %"class.crashpad::FileWriterInterface"* %1 to i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.25"*)***
  %50 = load i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.25"*)**, i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.25"*)*** %49, align 8
  %51 = getelementptr inbounds i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.25"*)*, i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.25"*)** %50, i64 4
  %52 = load i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.25"*)*, i1 (%"class.crashpad::FileWriterInterface"*, %"class.std::__1::vector.25"*)** %51, align 8
  %53 = call zeroext i1 %52(%"class.crashpad::FileWriterInterface"* %1, %"class.std::__1::vector.25"* nonnull %3) #8
  %54 = load %"struct.crashpad::WritableIoVec"*, %"struct.crashpad::WritableIoVec"** %8, align 8
  %55 = icmp eq %"struct.crashpad::WritableIoVec"* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %33
  %57 = ptrtoint %"struct.crashpad::WritableIoVec"* %54 to i64
  store i64 %57, i64* %18, align 8
  %58 = bitcast %"struct.crashpad::WritableIoVec"* %54 to i8*
  call void @_ZdlPv(i8* %58) #9
  br label %59

59:                                               ; preds = %33, %56
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEE10set_stringERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.crashpad::internal::MinidumpStringWriter.32"*, %"class.std::__1::basic_string.16"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter.32", %"class.crashpad::internal::MinidumpStringWriter.32"* %0, i64 0, i32 2
  %4 = icmp eq %"class.std::__1::basic_string.16"* %3, %1
  br i1 %4, label %34, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.16"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.16"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %24, label %14

14:                                               ; preds = %5
  br i1 %13, label %18, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.16"* %3 to i8*
  %17 = bitcast %"class.std::__1::basic_string.16"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #8
  br label %34

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.std::__1::basic_string.16", %"class.std::__1::basic_string.16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::basic_string.16", %"class.std::__1::basic_string.16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = tail call dereferenceable(24) %"class.std::__1::basic_string.16"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.16"* %3, i8* %20, i64 %22) #8
  br label %34

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.std::__1::basic_string.16", %"class.std::__1::basic_string.16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string.16", %"class.std::__1::basic_string.16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.std::__1::basic_string.16"* %1 to i8*
  %30 = zext i8 %12 to i64
  %31 = select i1 %13, i8* %26, i8* %29
  %32 = select i1 %13, i64 %28, i64 %30
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string.16"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.16"* %3, i8* %31, i64 %32) #8
  br label %34

34:                                               ; preds = %2, %15, %18, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden dereferenceable(24) %"class.std::__1::basic_string.16"* @_ZNK8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEE6stringEv(%"class.crashpad::internal::MinidumpStringWriter.32"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringWriter.32", %"class.crashpad::internal::MinidumpStringWriter.32"* %0, i64 0, i32 2
  ret %"class.std::__1::basic_string.16"* %2
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEEC2Ev(%"class.crashpad::internal::MinidumpStringListWriter"*) unnamed_addr #0 comdat($_ZN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringListWriter", %"class.crashpad::internal::MinidumpStringListWriter"* %0, i64 0, i32 0
  tail call void @_ZN8crashpad8internal21MinidumpRVAListWriterC2Ev(%"class.crashpad::internal::MinidumpRVAListWriter"* %2) #8
  %3 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringListWriter", %"class.crashpad::internal::MinidumpStringListWriter"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN8crashpad8internal21MinidumpRVAListWriterC2Ev(%"class.crashpad::internal::MinidumpRVAListWriter"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEED2Ev(%"class.crashpad::internal::MinidumpStringListWriter"*) unnamed_addr #0 comdat($_ZN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringListWriter", %"class.crashpad::internal::MinidumpStringListWriter"* %0, i64 0, i32 0
  tail call void @_ZN8crashpad8internal21MinidumpRVAListWriterD2Ev(%"class.crashpad::internal::MinidumpRVAListWriter"* %2) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8crashpad8internal21MinidumpRVAListWriterD2Ev(%"class.crashpad::internal::MinidumpRVAListWriter"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEED0Ev(%"class.crashpad::internal::MinidumpStringListWriter"*) unnamed_addr #0 comdat($_ZN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringListWriter", %"class.crashpad::internal::MinidumpStringListWriter"* %0, i64 0, i32 0
  tail call void @_ZN8crashpad8internal21MinidumpRVAListWriterD2Ev(%"class.crashpad::internal::MinidumpRVAListWriter"* %2) #8
  %3 = bitcast %"class.crashpad::internal::MinidumpStringListWriter"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEE20InitializeFromVectorERKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE(%"class.crashpad::internal::MinidumpStringListWriter"*, %"class.std::__1::vector.60"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string.16"*, %"class.std::__1::basic_string.16"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.std::__1::basic_string.16"*, %"class.std::__1::basic_string.16"** %5, align 8
  %7 = icmp eq %"class.std::__1::basic_string.16"* %4, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %9, %2
  ret void

9:                                                ; preds = %2, %9
  %10 = phi %"class.std::__1::basic_string.16"* [ %11, %9 ], [ %4, %2 ]
  tail call void @_ZN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEE13AddStringUTF8ERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.crashpad::internal::MinidumpStringListWriter"* %0, %"class.std::__1::basic_string.16"* dereferenceable(24) %10)
  %11 = getelementptr inbounds %"class.std::__1::basic_string.16", %"class.std::__1::basic_string.16"* %10, i64 1
  %12 = icmp eq %"class.std::__1::basic_string.16"* %11, %6
  br i1 %12, label %8, label %9
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEE13AddStringUTF8ERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.crashpad::internal::MinidumpStringListWriter"*, %"class.std::__1::basic_string.16"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = tail call i8* @_Znwm(i64 104) #9
  %5 = bitcast i8* %4 to %"class.crashpad::internal::MinidumpWritable"*
  tail call void @_ZN8crashpad8internal16MinidumpWritableC2Ev(%"class.crashpad::internal::MinidumpWritable"* nonnull %5) #8
  %6 = bitcast i8* %4 to i32 (...)***
  %7 = getelementptr inbounds i8, i8* %4, i64 72
  %8 = tail call i8* @_Znwm(i64 4) #9
  %9 = bitcast i8* %8 to i32*
  store i32 0, i32* %9, align 4
  %10 = ptrtoint i8* %8 to i64
  %11 = bitcast i8* %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN8crashpad8internal25MinidumpUTF16StringWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #8
  call void @_ZN8crashpad8internal18MinidumpWriterUtil18ConvertUTF8ToUTF16ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.std::__1::basic_string.16"* dereferenceable(24) %1) #8
  %14 = bitcast i8* %12 to %"class.std::__1::basic_string"*
  %15 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #8
  %16 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %2
  %21 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %22 = load i8*, i8** %21, align 8
  call void @_ZdlPv(i8* %22) #9
  br label %23

23:                                               ; preds = %20, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #8
  %24 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringListWriter", %"class.crashpad::internal::MinidumpStringListWriter"* %0, i64 0, i32 0
  call void @_ZN8crashpad8internal21MinidumpRVAListWriter8AddChildENSt3__110unique_ptrINS0_16MinidumpWritableENS2_14default_deleteIS4_EEEE(%"class.crashpad::internal::MinidumpRVAListWriter"* %24, %"class.crashpad::internal::MinidumpWritable"* nonnull %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad8internal25MinidumpUTF16StringWriter7SetUTF8ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.crashpad::internal::MinidumpUTF16StringWriter"*, %"class.std::__1::basic_string.16"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8
  call void @_ZN8crashpad8internal18MinidumpWriterUtil18ConvertUTF8ToUTF16ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.std::__1::basic_string.16"* dereferenceable(24) %1) #8
  %5 = getelementptr inbounds %"class.crashpad::internal::MinidumpUTF16StringWriter", %"class.crashpad::internal::MinidumpUTF16StringWriter"* %0, i64 0, i32 0, i32 2
  %6 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #8
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %13 = load i8*, i8** %12, align 8
  call void @_ZdlPv(i8* %13) #9
  br label %14

14:                                               ; preds = %2, %11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8
  ret void
}

declare void @_ZN8crashpad8internal21MinidumpRVAListWriter8AddChildENSt3__110unique_ptrINS0_16MinidumpWritableENS2_14default_deleteIS4_EEEE(%"class.crashpad::internal::MinidumpRVAListWriter"*, %"class.crashpad::internal::MinidumpWritable"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK8crashpad8internal24MinidumpStringListWriterINS0_25MinidumpUTF16StringWriterEE8IsUsefulEv(%"class.crashpad::internal::MinidumpStringListWriter"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringListWriter", %"class.crashpad::internal::MinidumpStringListWriter"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.47"*, %"class.std::__1::unique_ptr.47"** %2, align 8
  %4 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringListWriter", %"class.crashpad::internal::MinidumpStringListWriter"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.47"*, %"class.std::__1::unique_ptr.47"** %4, align 8
  %6 = icmp ne %"class.std::__1::unique_ptr.47"* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEEC2Ev(%"class.crashpad::internal::MinidumpStringListWriter.78"*) unnamed_addr #0 comdat($_ZN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEEC5Ev) align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringListWriter.78", %"class.crashpad::internal::MinidumpStringListWriter.78"* %0, i64 0, i32 0
  tail call void @_ZN8crashpad8internal21MinidumpRVAListWriterC2Ev(%"class.crashpad::internal::MinidumpRVAListWriter"* %2) #8
  %3 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringListWriter.78", %"class.crashpad::internal::MinidumpStringListWriter.78"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEED2Ev(%"class.crashpad::internal::MinidumpStringListWriter.78"*) unnamed_addr #0 comdat($_ZN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringListWriter.78", %"class.crashpad::internal::MinidumpStringListWriter.78"* %0, i64 0, i32 0
  tail call void @_ZN8crashpad8internal21MinidumpRVAListWriterD2Ev(%"class.crashpad::internal::MinidumpRVAListWriter"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEED0Ev(%"class.crashpad::internal::MinidumpStringListWriter.78"*) unnamed_addr #0 comdat($_ZN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEED5Ev) align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringListWriter.78", %"class.crashpad::internal::MinidumpStringListWriter.78"* %0, i64 0, i32 0
  tail call void @_ZN8crashpad8internal21MinidumpRVAListWriterD2Ev(%"class.crashpad::internal::MinidumpRVAListWriter"* %2) #8
  %3 = bitcast %"class.crashpad::internal::MinidumpStringListWriter.78"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEE20InitializeFromVectorERKNSt3__16vectorINS4_12basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS9_ISB_EEEE(%"class.crashpad::internal::MinidumpStringListWriter.78"*, %"class.std::__1::vector.60"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string.16"*, %"class.std::__1::basic_string.16"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.60", %"class.std::__1::vector.60"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.std::__1::basic_string.16"*, %"class.std::__1::basic_string.16"** %5, align 8
  %7 = icmp eq %"class.std::__1::basic_string.16"* %4, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringListWriter.78", %"class.crashpad::internal::MinidumpStringListWriter.78"* %0, i64 0, i32 0
  br label %11

10:                                               ; preds = %37, %2
  ret void

11:                                               ; preds = %8, %37
  %12 = phi %"class.std::__1::basic_string.16"* [ %4, %8 ], [ %38, %37 ]
  %13 = tail call i8* @_Znwm(i64 104) #9
  %14 = bitcast i8* %13 to %"class.crashpad::internal::MinidumpWritable"*
  tail call void @_ZN8crashpad8internal16MinidumpWritableC2Ev(%"class.crashpad::internal::MinidumpWritable"* nonnull %14) #8
  %15 = bitcast i8* %13 to i32 (...)***
  %16 = getelementptr inbounds i8, i8* %13, i64 72
  %17 = tail call i8* @_Znwm(i64 4) #9
  %18 = bitcast i8* %17 to i32*
  store i32 0, i32* %18, align 4
  %19 = ptrtoint i8* %17 to i64
  %20 = bitcast i8* %16 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %13, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN8crashpad8internal24MinidumpUTF8StringWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %22 = bitcast i8* %21 to %"class.std::__1::basic_string.16"*
  %23 = icmp eq %"class.std::__1::basic_string.16"* %12, %22
  br i1 %23, label %37, label %24

24:                                               ; preds = %11
  %25 = bitcast %"class.std::__1::basic_string.16"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = bitcast %"class.std::__1::basic_string.16"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %30, i64 24, i1 false) #8
  br label %37

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.std::__1::basic_string.16", %"class.std::__1::basic_string.16"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::basic_string.16", %"class.std::__1::basic_string.16"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = tail call dereferenceable(24) %"class.std::__1::basic_string.16"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.16"* %22, i8* %33, i64 %35) #8
  br label %37

37:                                               ; preds = %11, %29, %31
  tail call void @_ZN8crashpad8internal21MinidumpRVAListWriter8AddChildENSt3__110unique_ptrINS0_16MinidumpWritableENS2_14default_deleteIS4_EEEE(%"class.crashpad::internal::MinidumpRVAListWriter"* %9, %"class.crashpad::internal::MinidumpWritable"* nonnull %14) #8
  %38 = getelementptr inbounds %"class.std::__1::basic_string.16", %"class.std::__1::basic_string.16"* %12, i64 1
  %39 = icmp eq %"class.std::__1::basic_string.16"* %38, %6
  br i1 %39, label %10, label %11
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEE13AddStringUTF8ERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.crashpad::internal::MinidumpStringListWriter.78"*, %"class.std::__1::basic_string.16"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = tail call i8* @_Znwm(i64 104) #9
  %4 = bitcast i8* %3 to %"class.crashpad::internal::MinidumpWritable"*
  tail call void @_ZN8crashpad8internal16MinidumpWritableC2Ev(%"class.crashpad::internal::MinidumpWritable"* nonnull %4) #8
  %5 = bitcast i8* %3 to i32 (...)***
  %6 = getelementptr inbounds i8, i8* %3, i64 72
  %7 = tail call i8* @_Znwm(i64 4) #9
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8, align 4
  %9 = ptrtoint i8* %7 to i64
  %10 = bitcast i8* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %3, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN8crashpad8internal24MinidumpUTF8StringWriterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %12 = bitcast i8* %11 to %"class.std::__1::basic_string.16"*
  %13 = icmp eq %"class.std::__1::basic_string.16"* %12, %1
  br i1 %13, label %27, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.std::__1::basic_string.16"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %14
  %20 = bitcast %"class.std::__1::basic_string.16"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %20, i64 24, i1 false) #8
  br label %27

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::basic_string.16", %"class.std::__1::basic_string.16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::basic_string.16", %"class.std::__1::basic_string.16"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = tail call dereferenceable(24) %"class.std::__1::basic_string.16"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.16"* %12, i8* %23, i64 %25) #8
  br label %27

27:                                               ; preds = %21, %19, %2
  %28 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringListWriter.78", %"class.crashpad::internal::MinidumpStringListWriter.78"* %0, i64 0, i32 0
  tail call void @_ZN8crashpad8internal21MinidumpRVAListWriter8AddChildENSt3__110unique_ptrINS0_16MinidumpWritableENS2_14default_deleteIS4_EEEE(%"class.crashpad::internal::MinidumpRVAListWriter"* %28, %"class.crashpad::internal::MinidumpWritable"* nonnull %4) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK8crashpad8internal24MinidumpStringListWriterINS0_24MinidumpUTF8StringWriterEE8IsUsefulEv(%"class.crashpad::internal::MinidumpStringListWriter.78"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringListWriter.78", %"class.crashpad::internal::MinidumpStringListWriter.78"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.47"*, %"class.std::__1::unique_ptr.47"** %2, align 8
  %4 = getelementptr inbounds %"class.crashpad::internal::MinidumpStringListWriter.78", %"class.crashpad::internal::MinidumpStringListWriter.78"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.47"*, %"class.std::__1::unique_ptr.47"** %4, align 8
  %6 = icmp ne %"class.std::__1::unique_ptr.47"* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad8internal25MinidumpUTF16StringWriterD2Ev(%"class.crashpad::internal::MinidumpUTF16StringWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpUTF16StringWriter", %"class.crashpad::internal::MinidumpUTF16StringWriter"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::internal::MinidumpUTF16StringWriter", %"class.crashpad::internal::MinidumpUTF16StringWriter"* %0, i64 0, i32 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.crashpad::internal::MinidumpUTF16StringWriter", %"class.crashpad::internal::MinidumpUTF16StringWriter"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %struct.MINIDUMP_STRING*, %struct.MINIDUMP_STRING** %12, align 8
  store %struct.MINIDUMP_STRING* null, %struct.MINIDUMP_STRING** %12, align 8
  %14 = icmp eq %struct.MINIDUMP_STRING* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %struct.MINIDUMP_STRING* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #9
  br label %17

17:                                               ; preds = %11, %15
  %18 = bitcast %"class.crashpad::internal::MinidumpUTF16StringWriter"* %0 to %"class.crashpad::internal::MinidumpWritable"*
  tail call void @_ZN8crashpad8internal16MinidumpWritableD2Ev(%"class.crashpad::internal::MinidumpWritable"* %18) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad8internal25MinidumpUTF16StringWriterD0Ev(%"class.crashpad::internal::MinidumpUTF16StringWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpUTF16StringWriter", %"class.crashpad::internal::MinidumpUTF16StringWriter"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN8crashpad8internal20MinidumpStringWriterINS0_31MinidumpStringWriterUTF16TraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::internal::MinidumpUTF16StringWriter", %"class.crashpad::internal::MinidumpUTF16StringWriter"* %0, i64 0, i32 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %4, i64 0, i32 1, i32 1
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.crashpad::internal::MinidumpUTF16StringWriter", %"class.crashpad::internal::MinidumpUTF16StringWriter"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %struct.MINIDUMP_STRING*, %struct.MINIDUMP_STRING** %12, align 8
  store %struct.MINIDUMP_STRING* null, %struct.MINIDUMP_STRING** %12, align 8
  %14 = icmp eq %struct.MINIDUMP_STRING* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %struct.MINIDUMP_STRING* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #9
  br label %17

17:                                               ; preds = %11, %15
  %18 = bitcast %"class.crashpad::internal::MinidumpUTF16StringWriter"* %0 to %"class.crashpad::internal::MinidumpWritable"*
  tail call void @_ZN8crashpad8internal16MinidumpWritableD2Ev(%"class.crashpad::internal::MinidumpWritable"* %18) #8
  %19 = bitcast %"class.crashpad::internal::MinidumpUTF16StringWriter"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #9
  ret void
}

declare void @_ZN8crashpad8internal18MinidumpWriterUtil18ConvertUTF8ToUTF16ERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string.16"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad8internal24MinidumpUTF8StringWriterD2Ev(%"class.crashpad::internal::MinidumpUTF8StringWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpUTF8StringWriter", %"class.crashpad::internal::MinidumpUTF8StringWriter"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::internal::MinidumpUTF8StringWriter", %"class.crashpad::internal::MinidumpUTF8StringWriter"* %0, i64 0, i32 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string.16"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string.16", %"class.std::__1::basic_string.16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.crashpad::internal::MinidumpUTF8StringWriter", %"class.crashpad::internal::MinidumpUTF8StringWriter"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"struct.crashpad::MinidumpUTF8String"*, %"struct.crashpad::MinidumpUTF8String"** %12, align 8
  store %"struct.crashpad::MinidumpUTF8String"* null, %"struct.crashpad::MinidumpUTF8String"** %12, align 8
  %14 = icmp eq %"struct.crashpad::MinidumpUTF8String"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.crashpad::MinidumpUTF8String"* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #9
  br label %17

17:                                               ; preds = %11, %15
  %18 = bitcast %"class.crashpad::internal::MinidumpUTF8StringWriter"* %0 to %"class.crashpad::internal::MinidumpWritable"*
  tail call void @_ZN8crashpad8internal16MinidumpWritableD2Ev(%"class.crashpad::internal::MinidumpWritable"* %18) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad8internal24MinidumpUTF8StringWriterD0Ev(%"class.crashpad::internal::MinidumpUTF8StringWriter"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.crashpad::internal::MinidumpUTF8StringWriter", %"class.crashpad::internal::MinidumpUTF8StringWriter"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN8crashpad8internal20MinidumpStringWriterINS0_30MinidumpStringWriterUTF8TraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.crashpad::internal::MinidumpUTF8StringWriter", %"class.crashpad::internal::MinidumpUTF8StringWriter"* %0, i64 0, i32 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string.16"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string.16", %"class.std::__1::basic_string.16"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"class.crashpad::internal::MinidumpUTF8StringWriter", %"class.crashpad::internal::MinidumpUTF8StringWriter"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"struct.crashpad::MinidumpUTF8String"*, %"struct.crashpad::MinidumpUTF8String"** %12, align 8
  store %"struct.crashpad::MinidumpUTF8String"* null, %"struct.crashpad::MinidumpUTF8String"** %12, align 8
  %14 = icmp eq %"struct.crashpad::MinidumpUTF8String"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.crashpad::MinidumpUTF8String"* %13 to i8*
  tail call void @_ZdlPv(i8* %16) #9
  br label %17

17:                                               ; preds = %11, %15
  %18 = bitcast %"class.crashpad::internal::MinidumpUTF8StringWriter"* %0 to %"class.crashpad::internal::MinidumpWritable"*
  tail call void @_ZN8crashpad8internal16MinidumpWritableD2Ev(%"class.crashpad::internal::MinidumpWritable"* %18) #8
  %19 = bitcast %"class.crashpad::internal::MinidumpUTF8StringWriter"* %0 to i8*
  tail call void @_ZdlPv(i8* %19) #9
  ret void
}

declare zeroext i1 @_ZN8crashpad8internal16MinidumpWritable15WriteEverythingEPNS_19FileWriterInterfaceE(%"class.crashpad::internal::MinidumpWritable"*, %"class.crashpad::FileWriterInterface"*) unnamed_addr #1

declare i64 @_ZN8crashpad8internal16MinidumpWritable9AlignmentEv(%"class.crashpad::internal::MinidumpWritable"*) unnamed_addr #1

declare void @_ZN8crashpad8internal16MinidumpWritable8ChildrenEv() unnamed_addr

declare i32 @_ZN8crashpad8internal16MinidumpWritable10WritePhaseEv(%"class.crashpad::internal::MinidumpWritable"*) unnamed_addr #1

declare zeroext i1 @_ZN8crashpad8internal16MinidumpWritable21WillWriteAtOffsetImplEl(%"class.crashpad::internal::MinidumpWritable"*, i64) unnamed_addr #1

declare zeroext i1 @_ZN8crashpad8internal21MinidumpRVAListWriter6FreezeEv(%"class.crashpad::internal::MinidumpRVAListWriter"*) unnamed_addr #1

declare i64 @_ZN8crashpad8internal21MinidumpRVAListWriter12SizeOfObjectEv(%"class.crashpad::internal::MinidumpRVAListWriter"*) unnamed_addr #1

declare void @_ZN8crashpad8internal21MinidumpRVAListWriter8ChildrenEv() unnamed_addr

declare zeroext i1 @_ZN8crashpad8internal21MinidumpRVAListWriter11WriteObjectEPNS_19FileWriterInterfaceE(%"class.crashpad::internal::MinidumpRVAListWriter"*, %"class.crashpad::FileWriterInterface"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #8
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #8
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #8
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #8
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #8
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #8
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #8
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string.16", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #8
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string.16"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::basic_string.16", %"class.std::__1::basic_string.16"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string.16"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string.16", %"class.std::__1::basic_string.16"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string.16", %"class.std::__1::basic_string.16"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #9
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string.16"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string.16"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #8
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #8
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #9
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #8
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #8
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !3
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !3
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !6, !noalias !3
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !6, !noalias !3
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !3
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !3
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !6, !noalias !3
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !6, !noalias !3
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !3
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !3
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !6, !noalias !3
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !6, !noalias !3
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !3
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !3
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !6, !noalias !3
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !6, !noalias !3
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !8

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !3
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !3
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !6, !noalias !3
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !6, !noalias !3
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !10

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !12

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !13

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #10
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #10
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #9
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !14
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !14
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !17, !noalias !14
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !17, !noalias !14
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !14
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !14
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !17, !noalias !14
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !17, !noalias !14
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !14
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !14
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !17, !noalias !14
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !17, !noalias !14
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !14
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !14
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !17, !noalias !14
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !17, !noalias !14
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !19

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !14
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !14
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !17, !noalias !14
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !17, !noalias !14
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !20

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !21

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !22

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !23
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !23
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !26, !noalias !23
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !26, !noalias !23
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !23
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !23
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !26, !noalias !23
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !26, !noalias !23
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !23
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !23
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !26, !noalias !23
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !26, !noalias !23
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !23
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !23
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !26, !noalias !23
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !26, !noalias !23
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !28

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !23
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !23
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !26, !noalias !23
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !26, !noalias !23
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !29

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !30

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !31

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #8
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #10
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #10
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #9
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !32
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !32
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !35, !noalias !32
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !35, !noalias !32
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !32
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !32
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !35, !noalias !32
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !35, !noalias !32
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !32
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !32
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !35, !noalias !32
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !35, !noalias !32
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !32
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !32
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !35, !noalias !32
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !35, !noalias !32
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !37

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !32
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !32
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !35, !noalias !32
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !35, !noalias !32
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !38

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !39

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !40

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !41

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !42

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !43

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !45
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !45
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !48, !noalias !45
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !48, !noalias !45
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !45
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !45
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !48, !noalias !45
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !48, !noalias !45
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !45
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !45
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !48, !noalias !45
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !48, !noalias !45
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !45
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !45
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !48, !noalias !45
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !48, !noalias !45
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !50

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !45
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !45
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !48, !noalias !45
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !48, !noalias !45
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !51

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !52

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !53

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #9
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string.16"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.16"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.16"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.16"*, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = distinct !{!13, !9}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !9}
!20 = distinct !{!20, !11}
!21 = distinct !{!21, !11}
!22 = distinct !{!22, !9}
!23 = !{!24}
!24 = distinct !{!24, !25}
!25 = distinct !{!25, !"LVerDomain"}
!26 = !{!27}
!27 = distinct !{!27, !25}
!28 = distinct !{!28, !9}
!29 = distinct !{!29, !11}
!30 = distinct !{!30, !11}
!31 = distinct !{!31, !9}
!32 = !{!33}
!33 = distinct !{!33, !34}
!34 = distinct !{!34, !"LVerDomain"}
!35 = !{!36}
!36 = distinct !{!36, !34}
!37 = distinct !{!37, !9}
!38 = distinct !{!38, !11}
!39 = distinct !{!39, !11}
!40 = distinct !{!40, !9}
!41 = distinct !{!41, !9}
!42 = distinct !{!42, !11}
!43 = distinct !{!43, !44, !9}
!44 = !{!"llvm.loop.unroll.runtime.disable"}
!45 = !{!46}
!46 = distinct !{!46, !47}
!47 = distinct !{!47, !"LVerDomain"}
!48 = !{!49}
!49 = distinct !{!49, !47}
!50 = distinct !{!50, !9}
!51 = distinct !{!51, !11}
!52 = distinct !{!52, !11}
!53 = distinct !{!53, !9}
